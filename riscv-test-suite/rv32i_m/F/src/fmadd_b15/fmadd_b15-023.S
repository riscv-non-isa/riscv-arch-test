
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:17:59 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmadd.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmadd_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmadd_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmadd_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_16896:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f000001; valaddr_reg:x3; val_offset:50688*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50688*0 + 3*0*FLEN/8, x4, x1, x2)

inst_16897:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f000003; valaddr_reg:x3; val_offset:50691*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50691*0 + 3*1*FLEN/8, x4, x1, x2)

inst_16898:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f000007; valaddr_reg:x3; val_offset:50694*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50694*0 + 3*2*FLEN/8, x4, x1, x2)

inst_16899:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f00000f; valaddr_reg:x3; val_offset:50697*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50697*0 + 3*3*FLEN/8, x4, x1, x2)

inst_16900:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f00001f; valaddr_reg:x3; val_offset:50700*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50700*0 + 3*4*FLEN/8, x4, x1, x2)

inst_16901:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f00003f; valaddr_reg:x3; val_offset:50703*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50703*0 + 3*5*FLEN/8, x4, x1, x2)

inst_16902:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f00007f; valaddr_reg:x3; val_offset:50706*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50706*0 + 3*6*FLEN/8, x4, x1, x2)

inst_16903:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f0000ff; valaddr_reg:x3; val_offset:50709*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50709*0 + 3*7*FLEN/8, x4, x1, x2)

inst_16904:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f0001ff; valaddr_reg:x3; val_offset:50712*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50712*0 + 3*8*FLEN/8, x4, x1, x2)

inst_16905:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f0003ff; valaddr_reg:x3; val_offset:50715*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50715*0 + 3*9*FLEN/8, x4, x1, x2)

inst_16906:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f0007ff; valaddr_reg:x3; val_offset:50718*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50718*0 + 3*10*FLEN/8, x4, x1, x2)

inst_16907:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f000fff; valaddr_reg:x3; val_offset:50721*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50721*0 + 3*11*FLEN/8, x4, x1, x2)

inst_16908:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f001fff; valaddr_reg:x3; val_offset:50724*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50724*0 + 3*12*FLEN/8, x4, x1, x2)

inst_16909:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f003fff; valaddr_reg:x3; val_offset:50727*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50727*0 + 3*13*FLEN/8, x4, x1, x2)

inst_16910:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f007fff; valaddr_reg:x3; val_offset:50730*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50730*0 + 3*14*FLEN/8, x4, x1, x2)

inst_16911:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f00ffff; valaddr_reg:x3; val_offset:50733*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50733*0 + 3*15*FLEN/8, x4, x1, x2)

inst_16912:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f01ffff; valaddr_reg:x3; val_offset:50736*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50736*0 + 3*16*FLEN/8, x4, x1, x2)

inst_16913:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f03ffff; valaddr_reg:x3; val_offset:50739*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50739*0 + 3*17*FLEN/8, x4, x1, x2)

inst_16914:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f07ffff; valaddr_reg:x3; val_offset:50742*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50742*0 + 3*18*FLEN/8, x4, x1, x2)

inst_16915:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f0fffff; valaddr_reg:x3; val_offset:50745*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50745*0 + 3*19*FLEN/8, x4, x1, x2)

inst_16916:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f1fffff; valaddr_reg:x3; val_offset:50748*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50748*0 + 3*20*FLEN/8, x4, x1, x2)

inst_16917:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f3fffff; valaddr_reg:x3; val_offset:50751*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50751*0 + 3*21*FLEN/8, x4, x1, x2)

inst_16918:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f400000; valaddr_reg:x3; val_offset:50754*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50754*0 + 3*22*FLEN/8, x4, x1, x2)

inst_16919:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f600000; valaddr_reg:x3; val_offset:50757*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50757*0 + 3*23*FLEN/8, x4, x1, x2)

inst_16920:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f700000; valaddr_reg:x3; val_offset:50760*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50760*0 + 3*24*FLEN/8, x4, x1, x2)

inst_16921:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f780000; valaddr_reg:x3; val_offset:50763*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50763*0 + 3*25*FLEN/8, x4, x1, x2)

inst_16922:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f7c0000; valaddr_reg:x3; val_offset:50766*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50766*0 + 3*26*FLEN/8, x4, x1, x2)

inst_16923:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f7e0000; valaddr_reg:x3; val_offset:50769*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50769*0 + 3*27*FLEN/8, x4, x1, x2)

inst_16924:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f7f0000; valaddr_reg:x3; val_offset:50772*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50772*0 + 3*28*FLEN/8, x4, x1, x2)

inst_16925:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f7f8000; valaddr_reg:x3; val_offset:50775*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50775*0 + 3*29*FLEN/8, x4, x1, x2)

inst_16926:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f7fc000; valaddr_reg:x3; val_offset:50778*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50778*0 + 3*30*FLEN/8, x4, x1, x2)

inst_16927:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f7fe000; valaddr_reg:x3; val_offset:50781*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50781*0 + 3*31*FLEN/8, x4, x1, x2)

inst_16928:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f7ff000; valaddr_reg:x3; val_offset:50784*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50784*0 + 3*32*FLEN/8, x4, x1, x2)

inst_16929:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f7ff800; valaddr_reg:x3; val_offset:50787*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50787*0 + 3*33*FLEN/8, x4, x1, x2)

inst_16930:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f7ffc00; valaddr_reg:x3; val_offset:50790*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50790*0 + 3*34*FLEN/8, x4, x1, x2)

inst_16931:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f7ffe00; valaddr_reg:x3; val_offset:50793*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50793*0 + 3*35*FLEN/8, x4, x1, x2)

inst_16932:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f7fff00; valaddr_reg:x3; val_offset:50796*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50796*0 + 3*36*FLEN/8, x4, x1, x2)

inst_16933:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f7fff80; valaddr_reg:x3; val_offset:50799*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50799*0 + 3*37*FLEN/8, x4, x1, x2)

inst_16934:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f7fffc0; valaddr_reg:x3; val_offset:50802*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50802*0 + 3*38*FLEN/8, x4, x1, x2)

inst_16935:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f7fffe0; valaddr_reg:x3; val_offset:50805*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50805*0 + 3*39*FLEN/8, x4, x1, x2)

inst_16936:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f7ffff0; valaddr_reg:x3; val_offset:50808*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50808*0 + 3*40*FLEN/8, x4, x1, x2)

inst_16937:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f7ffff8; valaddr_reg:x3; val_offset:50811*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50811*0 + 3*41*FLEN/8, x4, x1, x2)

inst_16938:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f7ffffc; valaddr_reg:x3; val_offset:50814*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50814*0 + 3*42*FLEN/8, x4, x1, x2)

inst_16939:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f7ffffe; valaddr_reg:x3; val_offset:50817*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50817*0 + 3*43*FLEN/8, x4, x1, x2)

inst_16940:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f7fffff; valaddr_reg:x3; val_offset:50820*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50820*0 + 3*44*FLEN/8, x4, x1, x2)

inst_16941:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f800001; valaddr_reg:x3; val_offset:50823*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50823*0 + 3*45*FLEN/8, x4, x1, x2)

inst_16942:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f800003; valaddr_reg:x3; val_offset:50826*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50826*0 + 3*46*FLEN/8, x4, x1, x2)

inst_16943:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f800007; valaddr_reg:x3; val_offset:50829*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50829*0 + 3*47*FLEN/8, x4, x1, x2)

inst_16944:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f999999; valaddr_reg:x3; val_offset:50832*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50832*0 + 3*48*FLEN/8, x4, x1, x2)

inst_16945:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:50835*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50835*0 + 3*49*FLEN/8, x4, x1, x2)

inst_16946:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:50838*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50838*0 + 3*50*FLEN/8, x4, x1, x2)

inst_16947:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:50841*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50841*0 + 3*51*FLEN/8, x4, x1, x2)

inst_16948:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:50844*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50844*0 + 3*52*FLEN/8, x4, x1, x2)

inst_16949:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:50847*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50847*0 + 3*53*FLEN/8, x4, x1, x2)

inst_16950:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:50850*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50850*0 + 3*54*FLEN/8, x4, x1, x2)

inst_16951:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:50853*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50853*0 + 3*55*FLEN/8, x4, x1, x2)

inst_16952:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:50856*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50856*0 + 3*56*FLEN/8, x4, x1, x2)

inst_16953:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:50859*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50859*0 + 3*57*FLEN/8, x4, x1, x2)

inst_16954:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:50862*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50862*0 + 3*58*FLEN/8, x4, x1, x2)

inst_16955:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:50865*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50865*0 + 3*59*FLEN/8, x4, x1, x2)

inst_16956:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:50868*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50868*0 + 3*60*FLEN/8, x4, x1, x2)

inst_16957:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:50871*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50871*0 + 3*61*FLEN/8, x4, x1, x2)

inst_16958:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:50874*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50874*0 + 3*62*FLEN/8, x4, x1, x2)

inst_16959:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:50877*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50877*0 + 3*63*FLEN/8, x4, x1, x2)

inst_16960:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:50880*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50880*0 + 3*64*FLEN/8, x4, x1, x2)

inst_16961:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:50883*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50883*0 + 3*65*FLEN/8, x4, x1, x2)

inst_16962:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:50886*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50886*0 + 3*66*FLEN/8, x4, x1, x2)

inst_16963:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:50889*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50889*0 + 3*67*FLEN/8, x4, x1, x2)

inst_16964:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:50892*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50892*0 + 3*68*FLEN/8, x4, x1, x2)

inst_16965:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:50895*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50895*0 + 3*69*FLEN/8, x4, x1, x2)

inst_16966:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:50898*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50898*0 + 3*70*FLEN/8, x4, x1, x2)

inst_16967:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:50901*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50901*0 + 3*71*FLEN/8, x4, x1, x2)

inst_16968:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:50904*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50904*0 + 3*72*FLEN/8, x4, x1, x2)

inst_16969:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:50907*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50907*0 + 3*73*FLEN/8, x4, x1, x2)

inst_16970:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:50910*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50910*0 + 3*74*FLEN/8, x4, x1, x2)

inst_16971:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:50913*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50913*0 + 3*75*FLEN/8, x4, x1, x2)

inst_16972:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:50916*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50916*0 + 3*76*FLEN/8, x4, x1, x2)

inst_16973:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe000000; valaddr_reg:x3; val_offset:50919*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50919*0 + 3*77*FLEN/8, x4, x1, x2)

inst_16974:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe000001; valaddr_reg:x3; val_offset:50922*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50922*0 + 3*78*FLEN/8, x4, x1, x2)

inst_16975:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe000003; valaddr_reg:x3; val_offset:50925*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50925*0 + 3*79*FLEN/8, x4, x1, x2)

inst_16976:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe000007; valaddr_reg:x3; val_offset:50928*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50928*0 + 3*80*FLEN/8, x4, x1, x2)

inst_16977:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe00000f; valaddr_reg:x3; val_offset:50931*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50931*0 + 3*81*FLEN/8, x4, x1, x2)

inst_16978:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe00001f; valaddr_reg:x3; val_offset:50934*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50934*0 + 3*82*FLEN/8, x4, x1, x2)

inst_16979:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe00003f; valaddr_reg:x3; val_offset:50937*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50937*0 + 3*83*FLEN/8, x4, x1, x2)

inst_16980:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe00007f; valaddr_reg:x3; val_offset:50940*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50940*0 + 3*84*FLEN/8, x4, x1, x2)

inst_16981:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe0000ff; valaddr_reg:x3; val_offset:50943*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50943*0 + 3*85*FLEN/8, x4, x1, x2)

inst_16982:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe0001ff; valaddr_reg:x3; val_offset:50946*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50946*0 + 3*86*FLEN/8, x4, x1, x2)

inst_16983:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe0003ff; valaddr_reg:x3; val_offset:50949*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50949*0 + 3*87*FLEN/8, x4, x1, x2)

inst_16984:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe0007ff; valaddr_reg:x3; val_offset:50952*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50952*0 + 3*88*FLEN/8, x4, x1, x2)

inst_16985:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe000fff; valaddr_reg:x3; val_offset:50955*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50955*0 + 3*89*FLEN/8, x4, x1, x2)

inst_16986:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe001fff; valaddr_reg:x3; val_offset:50958*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50958*0 + 3*90*FLEN/8, x4, x1, x2)

inst_16987:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe003fff; valaddr_reg:x3; val_offset:50961*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50961*0 + 3*91*FLEN/8, x4, x1, x2)

inst_16988:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe007fff; valaddr_reg:x3; val_offset:50964*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50964*0 + 3*92*FLEN/8, x4, x1, x2)

inst_16989:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe00ffff; valaddr_reg:x3; val_offset:50967*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50967*0 + 3*93*FLEN/8, x4, x1, x2)

inst_16990:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe01ffff; valaddr_reg:x3; val_offset:50970*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50970*0 + 3*94*FLEN/8, x4, x1, x2)

inst_16991:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe03ffff; valaddr_reg:x3; val_offset:50973*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50973*0 + 3*95*FLEN/8, x4, x1, x2)

inst_16992:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe07ffff; valaddr_reg:x3; val_offset:50976*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50976*0 + 3*96*FLEN/8, x4, x1, x2)

inst_16993:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe0fffff; valaddr_reg:x3; val_offset:50979*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50979*0 + 3*97*FLEN/8, x4, x1, x2)

inst_16994:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe1fffff; valaddr_reg:x3; val_offset:50982*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50982*0 + 3*98*FLEN/8, x4, x1, x2)

inst_16995:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe3fffff; valaddr_reg:x3; val_offset:50985*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50985*0 + 3*99*FLEN/8, x4, x1, x2)

inst_16996:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe400000; valaddr_reg:x3; val_offset:50988*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50988*0 + 3*100*FLEN/8, x4, x1, x2)

inst_16997:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe600000; valaddr_reg:x3; val_offset:50991*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50991*0 + 3*101*FLEN/8, x4, x1, x2)

inst_16998:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe700000; valaddr_reg:x3; val_offset:50994*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50994*0 + 3*102*FLEN/8, x4, x1, x2)

inst_16999:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe780000; valaddr_reg:x3; val_offset:50997*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50997*0 + 3*103*FLEN/8, x4, x1, x2)

inst_17000:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe7c0000; valaddr_reg:x3; val_offset:51000*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51000*0 + 3*104*FLEN/8, x4, x1, x2)

inst_17001:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe7e0000; valaddr_reg:x3; val_offset:51003*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51003*0 + 3*105*FLEN/8, x4, x1, x2)

inst_17002:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe7f0000; valaddr_reg:x3; val_offset:51006*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51006*0 + 3*106*FLEN/8, x4, x1, x2)

inst_17003:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe7f8000; valaddr_reg:x3; val_offset:51009*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51009*0 + 3*107*FLEN/8, x4, x1, x2)

inst_17004:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe7fc000; valaddr_reg:x3; val_offset:51012*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51012*0 + 3*108*FLEN/8, x4, x1, x2)

inst_17005:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe7fe000; valaddr_reg:x3; val_offset:51015*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51015*0 + 3*109*FLEN/8, x4, x1, x2)

inst_17006:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe7ff000; valaddr_reg:x3; val_offset:51018*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51018*0 + 3*110*FLEN/8, x4, x1, x2)

inst_17007:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe7ff800; valaddr_reg:x3; val_offset:51021*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51021*0 + 3*111*FLEN/8, x4, x1, x2)

inst_17008:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe7ffc00; valaddr_reg:x3; val_offset:51024*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51024*0 + 3*112*FLEN/8, x4, x1, x2)

inst_17009:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe7ffe00; valaddr_reg:x3; val_offset:51027*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51027*0 + 3*113*FLEN/8, x4, x1, x2)

inst_17010:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe7fff00; valaddr_reg:x3; val_offset:51030*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51030*0 + 3*114*FLEN/8, x4, x1, x2)

inst_17011:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe7fff80; valaddr_reg:x3; val_offset:51033*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51033*0 + 3*115*FLEN/8, x4, x1, x2)

inst_17012:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe7fffc0; valaddr_reg:x3; val_offset:51036*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51036*0 + 3*116*FLEN/8, x4, x1, x2)

inst_17013:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe7fffe0; valaddr_reg:x3; val_offset:51039*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51039*0 + 3*117*FLEN/8, x4, x1, x2)

inst_17014:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe7ffff0; valaddr_reg:x3; val_offset:51042*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51042*0 + 3*118*FLEN/8, x4, x1, x2)

inst_17015:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe7ffff8; valaddr_reg:x3; val_offset:51045*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51045*0 + 3*119*FLEN/8, x4, x1, x2)

inst_17016:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe7ffffc; valaddr_reg:x3; val_offset:51048*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51048*0 + 3*120*FLEN/8, x4, x1, x2)

inst_17017:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe7ffffe; valaddr_reg:x3; val_offset:51051*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51051*0 + 3*121*FLEN/8, x4, x1, x2)

inst_17018:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29fe86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea9fe86; op2val:0x0;
op3val:0xe7fffff; valaddr_reg:x3; val_offset:51054*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51054*0 + 3*122*FLEN/8, x4, x1, x2)

inst_17019:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:51057*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51057*0 + 3*123*FLEN/8, x4, x1, x2)

inst_17020:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:51060*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51060*0 + 3*124*FLEN/8, x4, x1, x2)

inst_17021:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:51063*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51063*0 + 3*125*FLEN/8, x4, x1, x2)

inst_17022:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x80999999; valaddr_reg:x3; val_offset:51066*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51066*0 + 3*126*FLEN/8, x4, x1, x2)

inst_17023:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x80a49249; valaddr_reg:x3; val_offset:51069*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51069*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_17024:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x80b33333; valaddr_reg:x3; val_offset:51072*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51072*0 + 3*128*FLEN/8, x4, x1, x2)

inst_17025:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x80b6db6d; valaddr_reg:x3; val_offset:51075*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51075*0 + 3*129*FLEN/8, x4, x1, x2)

inst_17026:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x80bbbbbb; valaddr_reg:x3; val_offset:51078*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51078*0 + 3*130*FLEN/8, x4, x1, x2)

inst_17027:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x80c44444; valaddr_reg:x3; val_offset:51081*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51081*0 + 3*131*FLEN/8, x4, x1, x2)

inst_17028:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x80cccccc; valaddr_reg:x3; val_offset:51084*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51084*0 + 3*132*FLEN/8, x4, x1, x2)

inst_17029:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x80db6db6; valaddr_reg:x3; val_offset:51087*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51087*0 + 3*133*FLEN/8, x4, x1, x2)

inst_17030:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x80e66666; valaddr_reg:x3; val_offset:51090*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51090*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17031:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x80edb6db; valaddr_reg:x3; val_offset:51093*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51093*0 + 3*135*FLEN/8, x4, x1, x2)

inst_17032:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:51096*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51096*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17033:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:51099*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51099*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17034:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:51102*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51102*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17035:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x83000000; valaddr_reg:x3; val_offset:51105*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51105*0 + 3*139*FLEN/8, x4, x1, x2)

inst_17036:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x83000001; valaddr_reg:x3; val_offset:51108*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51108*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17037:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x83000003; valaddr_reg:x3; val_offset:51111*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51111*0 + 3*141*FLEN/8, x4, x1, x2)

inst_17038:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x83000007; valaddr_reg:x3; val_offset:51114*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51114*0 + 3*142*FLEN/8, x4, x1, x2)

inst_17039:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x8300000f; valaddr_reg:x3; val_offset:51117*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51117*0 + 3*143*FLEN/8, x4, x1, x2)

inst_17040:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x8300001f; valaddr_reg:x3; val_offset:51120*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51120*0 + 3*144*FLEN/8, x4, x1, x2)

inst_17041:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x8300003f; valaddr_reg:x3; val_offset:51123*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51123*0 + 3*145*FLEN/8, x4, x1, x2)

inst_17042:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x8300007f; valaddr_reg:x3; val_offset:51126*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51126*0 + 3*146*FLEN/8, x4, x1, x2)

inst_17043:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x830000ff; valaddr_reg:x3; val_offset:51129*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51129*0 + 3*147*FLEN/8, x4, x1, x2)

inst_17044:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x830001ff; valaddr_reg:x3; val_offset:51132*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51132*0 + 3*148*FLEN/8, x4, x1, x2)

inst_17045:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x830003ff; valaddr_reg:x3; val_offset:51135*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51135*0 + 3*149*FLEN/8, x4, x1, x2)

inst_17046:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x830007ff; valaddr_reg:x3; val_offset:51138*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51138*0 + 3*150*FLEN/8, x4, x1, x2)

inst_17047:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x83000fff; valaddr_reg:x3; val_offset:51141*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51141*0 + 3*151*FLEN/8, x4, x1, x2)

inst_17048:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x83001fff; valaddr_reg:x3; val_offset:51144*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51144*0 + 3*152*FLEN/8, x4, x1, x2)

inst_17049:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x83003fff; valaddr_reg:x3; val_offset:51147*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51147*0 + 3*153*FLEN/8, x4, x1, x2)

inst_17050:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x83007fff; valaddr_reg:x3; val_offset:51150*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51150*0 + 3*154*FLEN/8, x4, x1, x2)

inst_17051:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x8300ffff; valaddr_reg:x3; val_offset:51153*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51153*0 + 3*155*FLEN/8, x4, x1, x2)

inst_17052:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x8301ffff; valaddr_reg:x3; val_offset:51156*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51156*0 + 3*156*FLEN/8, x4, x1, x2)

inst_17053:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x8303ffff; valaddr_reg:x3; val_offset:51159*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51159*0 + 3*157*FLEN/8, x4, x1, x2)

inst_17054:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x8307ffff; valaddr_reg:x3; val_offset:51162*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51162*0 + 3*158*FLEN/8, x4, x1, x2)

inst_17055:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x830fffff; valaddr_reg:x3; val_offset:51165*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51165*0 + 3*159*FLEN/8, x4, x1, x2)

inst_17056:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x831fffff; valaddr_reg:x3; val_offset:51168*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51168*0 + 3*160*FLEN/8, x4, x1, x2)

inst_17057:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x833fffff; valaddr_reg:x3; val_offset:51171*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51171*0 + 3*161*FLEN/8, x4, x1, x2)

inst_17058:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x83400000; valaddr_reg:x3; val_offset:51174*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51174*0 + 3*162*FLEN/8, x4, x1, x2)

inst_17059:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x83600000; valaddr_reg:x3; val_offset:51177*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51177*0 + 3*163*FLEN/8, x4, x1, x2)

inst_17060:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x83700000; valaddr_reg:x3; val_offset:51180*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51180*0 + 3*164*FLEN/8, x4, x1, x2)

inst_17061:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x83780000; valaddr_reg:x3; val_offset:51183*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51183*0 + 3*165*FLEN/8, x4, x1, x2)

inst_17062:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x837c0000; valaddr_reg:x3; val_offset:51186*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51186*0 + 3*166*FLEN/8, x4, x1, x2)

inst_17063:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x837e0000; valaddr_reg:x3; val_offset:51189*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51189*0 + 3*167*FLEN/8, x4, x1, x2)

inst_17064:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x837f0000; valaddr_reg:x3; val_offset:51192*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51192*0 + 3*168*FLEN/8, x4, x1, x2)

inst_17065:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x837f8000; valaddr_reg:x3; val_offset:51195*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51195*0 + 3*169*FLEN/8, x4, x1, x2)

inst_17066:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x837fc000; valaddr_reg:x3; val_offset:51198*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51198*0 + 3*170*FLEN/8, x4, x1, x2)

inst_17067:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x837fe000; valaddr_reg:x3; val_offset:51201*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51201*0 + 3*171*FLEN/8, x4, x1, x2)

inst_17068:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x837ff000; valaddr_reg:x3; val_offset:51204*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51204*0 + 3*172*FLEN/8, x4, x1, x2)

inst_17069:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x837ff800; valaddr_reg:x3; val_offset:51207*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51207*0 + 3*173*FLEN/8, x4, x1, x2)

inst_17070:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x837ffc00; valaddr_reg:x3; val_offset:51210*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51210*0 + 3*174*FLEN/8, x4, x1, x2)

inst_17071:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x837ffe00; valaddr_reg:x3; val_offset:51213*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51213*0 + 3*175*FLEN/8, x4, x1, x2)

inst_17072:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x837fff00; valaddr_reg:x3; val_offset:51216*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51216*0 + 3*176*FLEN/8, x4, x1, x2)

inst_17073:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x837fff80; valaddr_reg:x3; val_offset:51219*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51219*0 + 3*177*FLEN/8, x4, x1, x2)

inst_17074:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x837fffc0; valaddr_reg:x3; val_offset:51222*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51222*0 + 3*178*FLEN/8, x4, x1, x2)

inst_17075:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x837fffe0; valaddr_reg:x3; val_offset:51225*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51225*0 + 3*179*FLEN/8, x4, x1, x2)

inst_17076:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x837ffff0; valaddr_reg:x3; val_offset:51228*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51228*0 + 3*180*FLEN/8, x4, x1, x2)

inst_17077:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x837ffff8; valaddr_reg:x3; val_offset:51231*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51231*0 + 3*181*FLEN/8, x4, x1, x2)

inst_17078:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x837ffffc; valaddr_reg:x3; val_offset:51234*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51234*0 + 3*182*FLEN/8, x4, x1, x2)

inst_17079:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x837ffffe; valaddr_reg:x3; val_offset:51237*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51237*0 + 3*183*FLEN/8, x4, x1, x2)

inst_17080:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ab7f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaab7f3; op2val:0x80000000;
op3val:0x837fffff; valaddr_reg:x3; val_offset:51240*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51240*0 + 3*184*FLEN/8, x4, x1, x2)

inst_17081:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:51243*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51243*0 + 3*185*FLEN/8, x4, x1, x2)

inst_17082:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:51246*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51246*0 + 3*186*FLEN/8, x4, x1, x2)

inst_17083:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:51249*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51249*0 + 3*187*FLEN/8, x4, x1, x2)

inst_17084:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:51252*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51252*0 + 3*188*FLEN/8, x4, x1, x2)

inst_17085:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:51255*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51255*0 + 3*189*FLEN/8, x4, x1, x2)

inst_17086:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:51258*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51258*0 + 3*190*FLEN/8, x4, x1, x2)

inst_17087:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:51261*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51261*0 + 3*191*FLEN/8, x4, x1, x2)

inst_17088:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:51264*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51264*0 + 3*192*FLEN/8, x4, x1, x2)

inst_17089:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:51267*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51267*0 + 3*193*FLEN/8, x4, x1, x2)

inst_17090:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:51270*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51270*0 + 3*194*FLEN/8, x4, x1, x2)

inst_17091:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:51273*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51273*0 + 3*195*FLEN/8, x4, x1, x2)

inst_17092:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:51276*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51276*0 + 3*196*FLEN/8, x4, x1, x2)

inst_17093:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:51279*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51279*0 + 3*197*FLEN/8, x4, x1, x2)

inst_17094:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:51282*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51282*0 + 3*198*FLEN/8, x4, x1, x2)

inst_17095:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:51285*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51285*0 + 3*199*FLEN/8, x4, x1, x2)

inst_17096:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:51288*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51288*0 + 3*200*FLEN/8, x4, x1, x2)

inst_17097:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8d800000; valaddr_reg:x3; val_offset:51291*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51291*0 + 3*201*FLEN/8, x4, x1, x2)

inst_17098:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8d800001; valaddr_reg:x3; val_offset:51294*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51294*0 + 3*202*FLEN/8, x4, x1, x2)

inst_17099:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8d800003; valaddr_reg:x3; val_offset:51297*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51297*0 + 3*203*FLEN/8, x4, x1, x2)

inst_17100:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8d800007; valaddr_reg:x3; val_offset:51300*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51300*0 + 3*204*FLEN/8, x4, x1, x2)

inst_17101:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8d80000f; valaddr_reg:x3; val_offset:51303*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51303*0 + 3*205*FLEN/8, x4, x1, x2)

inst_17102:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8d80001f; valaddr_reg:x3; val_offset:51306*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51306*0 + 3*206*FLEN/8, x4, x1, x2)

inst_17103:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8d80003f; valaddr_reg:x3; val_offset:51309*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51309*0 + 3*207*FLEN/8, x4, x1, x2)

inst_17104:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8d80007f; valaddr_reg:x3; val_offset:51312*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51312*0 + 3*208*FLEN/8, x4, x1, x2)

inst_17105:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8d8000ff; valaddr_reg:x3; val_offset:51315*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51315*0 + 3*209*FLEN/8, x4, x1, x2)

inst_17106:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8d8001ff; valaddr_reg:x3; val_offset:51318*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51318*0 + 3*210*FLEN/8, x4, x1, x2)

inst_17107:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8d8003ff; valaddr_reg:x3; val_offset:51321*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51321*0 + 3*211*FLEN/8, x4, x1, x2)

inst_17108:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8d8007ff; valaddr_reg:x3; val_offset:51324*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51324*0 + 3*212*FLEN/8, x4, x1, x2)

inst_17109:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8d800fff; valaddr_reg:x3; val_offset:51327*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51327*0 + 3*213*FLEN/8, x4, x1, x2)

inst_17110:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8d801fff; valaddr_reg:x3; val_offset:51330*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51330*0 + 3*214*FLEN/8, x4, x1, x2)

inst_17111:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8d803fff; valaddr_reg:x3; val_offset:51333*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51333*0 + 3*215*FLEN/8, x4, x1, x2)

inst_17112:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8d807fff; valaddr_reg:x3; val_offset:51336*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51336*0 + 3*216*FLEN/8, x4, x1, x2)

inst_17113:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8d80ffff; valaddr_reg:x3; val_offset:51339*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51339*0 + 3*217*FLEN/8, x4, x1, x2)

inst_17114:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8d81ffff; valaddr_reg:x3; val_offset:51342*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51342*0 + 3*218*FLEN/8, x4, x1, x2)

inst_17115:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8d83ffff; valaddr_reg:x3; val_offset:51345*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51345*0 + 3*219*FLEN/8, x4, x1, x2)

inst_17116:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8d87ffff; valaddr_reg:x3; val_offset:51348*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51348*0 + 3*220*FLEN/8, x4, x1, x2)

inst_17117:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8d8fffff; valaddr_reg:x3; val_offset:51351*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51351*0 + 3*221*FLEN/8, x4, x1, x2)

inst_17118:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8d9fffff; valaddr_reg:x3; val_offset:51354*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51354*0 + 3*222*FLEN/8, x4, x1, x2)

inst_17119:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8dbfffff; valaddr_reg:x3; val_offset:51357*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51357*0 + 3*223*FLEN/8, x4, x1, x2)

inst_17120:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8dc00000; valaddr_reg:x3; val_offset:51360*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51360*0 + 3*224*FLEN/8, x4, x1, x2)

inst_17121:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8de00000; valaddr_reg:x3; val_offset:51363*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51363*0 + 3*225*FLEN/8, x4, x1, x2)

inst_17122:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8df00000; valaddr_reg:x3; val_offset:51366*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51366*0 + 3*226*FLEN/8, x4, x1, x2)

inst_17123:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8df80000; valaddr_reg:x3; val_offset:51369*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51369*0 + 3*227*FLEN/8, x4, x1, x2)

inst_17124:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8dfc0000; valaddr_reg:x3; val_offset:51372*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51372*0 + 3*228*FLEN/8, x4, x1, x2)

inst_17125:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8dfe0000; valaddr_reg:x3; val_offset:51375*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51375*0 + 3*229*FLEN/8, x4, x1, x2)

inst_17126:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8dff0000; valaddr_reg:x3; val_offset:51378*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51378*0 + 3*230*FLEN/8, x4, x1, x2)

inst_17127:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8dff8000; valaddr_reg:x3; val_offset:51381*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51381*0 + 3*231*FLEN/8, x4, x1, x2)

inst_17128:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8dffc000; valaddr_reg:x3; val_offset:51384*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51384*0 + 3*232*FLEN/8, x4, x1, x2)

inst_17129:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8dffe000; valaddr_reg:x3; val_offset:51387*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51387*0 + 3*233*FLEN/8, x4, x1, x2)

inst_17130:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8dfff000; valaddr_reg:x3; val_offset:51390*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51390*0 + 3*234*FLEN/8, x4, x1, x2)

inst_17131:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8dfff800; valaddr_reg:x3; val_offset:51393*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51393*0 + 3*235*FLEN/8, x4, x1, x2)

inst_17132:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8dfffc00; valaddr_reg:x3; val_offset:51396*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51396*0 + 3*236*FLEN/8, x4, x1, x2)

inst_17133:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8dfffe00; valaddr_reg:x3; val_offset:51399*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51399*0 + 3*237*FLEN/8, x4, x1, x2)

inst_17134:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8dffff00; valaddr_reg:x3; val_offset:51402*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51402*0 + 3*238*FLEN/8, x4, x1, x2)

inst_17135:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8dffff80; valaddr_reg:x3; val_offset:51405*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51405*0 + 3*239*FLEN/8, x4, x1, x2)

inst_17136:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8dffffc0; valaddr_reg:x3; val_offset:51408*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51408*0 + 3*240*FLEN/8, x4, x1, x2)

inst_17137:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8dffffe0; valaddr_reg:x3; val_offset:51411*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51411*0 + 3*241*FLEN/8, x4, x1, x2)

inst_17138:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8dfffff0; valaddr_reg:x3; val_offset:51414*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51414*0 + 3*242*FLEN/8, x4, x1, x2)

inst_17139:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8dfffff8; valaddr_reg:x3; val_offset:51417*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51417*0 + 3*243*FLEN/8, x4, x1, x2)

inst_17140:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8dfffffc; valaddr_reg:x3; val_offset:51420*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51420*0 + 3*244*FLEN/8, x4, x1, x2)

inst_17141:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8dfffffe; valaddr_reg:x3; val_offset:51423*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51423*0 + 3*245*FLEN/8, x4, x1, x2)

inst_17142:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaae033; op2val:0x80000000;
op3val:0x8dffffff; valaddr_reg:x3; val_offset:51426*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51426*0 + 3*246*FLEN/8, x4, x1, x2)

inst_17143:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe4000000; valaddr_reg:x3; val_offset:51429*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51429*0 + 3*247*FLEN/8, x4, x1, x2)

inst_17144:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe4000001; valaddr_reg:x3; val_offset:51432*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51432*0 + 3*248*FLEN/8, x4, x1, x2)

inst_17145:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe4000003; valaddr_reg:x3; val_offset:51435*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51435*0 + 3*249*FLEN/8, x4, x1, x2)

inst_17146:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe4000007; valaddr_reg:x3; val_offset:51438*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51438*0 + 3*250*FLEN/8, x4, x1, x2)

inst_17147:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe400000f; valaddr_reg:x3; val_offset:51441*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51441*0 + 3*251*FLEN/8, x4, x1, x2)

inst_17148:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe400001f; valaddr_reg:x3; val_offset:51444*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51444*0 + 3*252*FLEN/8, x4, x1, x2)

inst_17149:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe400003f; valaddr_reg:x3; val_offset:51447*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51447*0 + 3*253*FLEN/8, x4, x1, x2)

inst_17150:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe400007f; valaddr_reg:x3; val_offset:51450*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51450*0 + 3*254*FLEN/8, x4, x1, x2)

inst_17151:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe40000ff; valaddr_reg:x3; val_offset:51453*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51453*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_17152:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe40001ff; valaddr_reg:x3; val_offset:51456*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51456*0 + 3*256*FLEN/8, x4, x1, x2)

inst_17153:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe40003ff; valaddr_reg:x3; val_offset:51459*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51459*0 + 3*257*FLEN/8, x4, x1, x2)

inst_17154:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe40007ff; valaddr_reg:x3; val_offset:51462*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51462*0 + 3*258*FLEN/8, x4, x1, x2)

inst_17155:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe4000fff; valaddr_reg:x3; val_offset:51465*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51465*0 + 3*259*FLEN/8, x4, x1, x2)

inst_17156:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe4001fff; valaddr_reg:x3; val_offset:51468*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51468*0 + 3*260*FLEN/8, x4, x1, x2)

inst_17157:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe4003fff; valaddr_reg:x3; val_offset:51471*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51471*0 + 3*261*FLEN/8, x4, x1, x2)

inst_17158:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe4007fff; valaddr_reg:x3; val_offset:51474*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51474*0 + 3*262*FLEN/8, x4, x1, x2)

inst_17159:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe400ffff; valaddr_reg:x3; val_offset:51477*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51477*0 + 3*263*FLEN/8, x4, x1, x2)

inst_17160:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe401ffff; valaddr_reg:x3; val_offset:51480*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51480*0 + 3*264*FLEN/8, x4, x1, x2)

inst_17161:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe403ffff; valaddr_reg:x3; val_offset:51483*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51483*0 + 3*265*FLEN/8, x4, x1, x2)

inst_17162:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe407ffff; valaddr_reg:x3; val_offset:51486*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51486*0 + 3*266*FLEN/8, x4, x1, x2)

inst_17163:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe40fffff; valaddr_reg:x3; val_offset:51489*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51489*0 + 3*267*FLEN/8, x4, x1, x2)

inst_17164:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe41fffff; valaddr_reg:x3; val_offset:51492*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51492*0 + 3*268*FLEN/8, x4, x1, x2)

inst_17165:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe43fffff; valaddr_reg:x3; val_offset:51495*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51495*0 + 3*269*FLEN/8, x4, x1, x2)

inst_17166:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe4400000; valaddr_reg:x3; val_offset:51498*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51498*0 + 3*270*FLEN/8, x4, x1, x2)

inst_17167:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe4600000; valaddr_reg:x3; val_offset:51501*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51501*0 + 3*271*FLEN/8, x4, x1, x2)

inst_17168:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe4700000; valaddr_reg:x3; val_offset:51504*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51504*0 + 3*272*FLEN/8, x4, x1, x2)

inst_17169:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe4780000; valaddr_reg:x3; val_offset:51507*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51507*0 + 3*273*FLEN/8, x4, x1, x2)

inst_17170:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe47c0000; valaddr_reg:x3; val_offset:51510*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51510*0 + 3*274*FLEN/8, x4, x1, x2)

inst_17171:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe47e0000; valaddr_reg:x3; val_offset:51513*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51513*0 + 3*275*FLEN/8, x4, x1, x2)

inst_17172:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe47f0000; valaddr_reg:x3; val_offset:51516*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51516*0 + 3*276*FLEN/8, x4, x1, x2)

inst_17173:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe47f8000; valaddr_reg:x3; val_offset:51519*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51519*0 + 3*277*FLEN/8, x4, x1, x2)

inst_17174:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe47fc000; valaddr_reg:x3; val_offset:51522*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51522*0 + 3*278*FLEN/8, x4, x1, x2)

inst_17175:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe47fe000; valaddr_reg:x3; val_offset:51525*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51525*0 + 3*279*FLEN/8, x4, x1, x2)

inst_17176:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe47ff000; valaddr_reg:x3; val_offset:51528*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51528*0 + 3*280*FLEN/8, x4, x1, x2)

inst_17177:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe47ff800; valaddr_reg:x3; val_offset:51531*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51531*0 + 3*281*FLEN/8, x4, x1, x2)

inst_17178:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe47ffc00; valaddr_reg:x3; val_offset:51534*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51534*0 + 3*282*FLEN/8, x4, x1, x2)

inst_17179:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe47ffe00; valaddr_reg:x3; val_offset:51537*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51537*0 + 3*283*FLEN/8, x4, x1, x2)

inst_17180:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe47fff00; valaddr_reg:x3; val_offset:51540*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51540*0 + 3*284*FLEN/8, x4, x1, x2)

inst_17181:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe47fff80; valaddr_reg:x3; val_offset:51543*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51543*0 + 3*285*FLEN/8, x4, x1, x2)

inst_17182:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe47fffc0; valaddr_reg:x3; val_offset:51546*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51546*0 + 3*286*FLEN/8, x4, x1, x2)

inst_17183:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe47fffe0; valaddr_reg:x3; val_offset:51549*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51549*0 + 3*287*FLEN/8, x4, x1, x2)

inst_17184:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe47ffff0; valaddr_reg:x3; val_offset:51552*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51552*0 + 3*288*FLEN/8, x4, x1, x2)

inst_17185:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe47ffff8; valaddr_reg:x3; val_offset:51555*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51555*0 + 3*289*FLEN/8, x4, x1, x2)

inst_17186:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe47ffffc; valaddr_reg:x3; val_offset:51558*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51558*0 + 3*290*FLEN/8, x4, x1, x2)

inst_17187:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe47ffffe; valaddr_reg:x3; val_offset:51561*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51561*0 + 3*291*FLEN/8, x4, x1, x2)

inst_17188:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xe47fffff; valaddr_reg:x3; val_offset:51564*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51564*0 + 3*292*FLEN/8, x4, x1, x2)

inst_17189:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xff000001; valaddr_reg:x3; val_offset:51567*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51567*0 + 3*293*FLEN/8, x4, x1, x2)

inst_17190:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xff000003; valaddr_reg:x3; val_offset:51570*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51570*0 + 3*294*FLEN/8, x4, x1, x2)

inst_17191:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xff000007; valaddr_reg:x3; val_offset:51573*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51573*0 + 3*295*FLEN/8, x4, x1, x2)

inst_17192:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xff199999; valaddr_reg:x3; val_offset:51576*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51576*0 + 3*296*FLEN/8, x4, x1, x2)

inst_17193:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xff249249; valaddr_reg:x3; val_offset:51579*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51579*0 + 3*297*FLEN/8, x4, x1, x2)

inst_17194:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xff333333; valaddr_reg:x3; val_offset:51582*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51582*0 + 3*298*FLEN/8, x4, x1, x2)

inst_17195:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:51585*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51585*0 + 3*299*FLEN/8, x4, x1, x2)

inst_17196:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:51588*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51588*0 + 3*300*FLEN/8, x4, x1, x2)

inst_17197:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xff444444; valaddr_reg:x3; val_offset:51591*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51591*0 + 3*301*FLEN/8, x4, x1, x2)

inst_17198:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:51594*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51594*0 + 3*302*FLEN/8, x4, x1, x2)

inst_17199:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:51597*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51597*0 + 3*303*FLEN/8, x4, x1, x2)

inst_17200:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xff666666; valaddr_reg:x3; val_offset:51600*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51600*0 + 3*304*FLEN/8, x4, x1, x2)

inst_17201:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:51603*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51603*0 + 3*305*FLEN/8, x4, x1, x2)

inst_17202:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:51606*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51606*0 + 3*306*FLEN/8, x4, x1, x2)

inst_17203:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:51609*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51609*0 + 3*307*FLEN/8, x4, x1, x2)

inst_17204:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b53bd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3f4285 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab53bd; op2val:0xc03f4285;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:51612*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51612*0 + 3*308*FLEN/8, x4, x1, x2)

inst_17205:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xac800000; valaddr_reg:x3; val_offset:51615*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51615*0 + 3*309*FLEN/8, x4, x1, x2)

inst_17206:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xac800001; valaddr_reg:x3; val_offset:51618*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51618*0 + 3*310*FLEN/8, x4, x1, x2)

inst_17207:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xac800003; valaddr_reg:x3; val_offset:51621*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51621*0 + 3*311*FLEN/8, x4, x1, x2)

inst_17208:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xac800007; valaddr_reg:x3; val_offset:51624*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51624*0 + 3*312*FLEN/8, x4, x1, x2)

inst_17209:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xac80000f; valaddr_reg:x3; val_offset:51627*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51627*0 + 3*313*FLEN/8, x4, x1, x2)

inst_17210:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xac80001f; valaddr_reg:x3; val_offset:51630*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51630*0 + 3*314*FLEN/8, x4, x1, x2)

inst_17211:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xac80003f; valaddr_reg:x3; val_offset:51633*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51633*0 + 3*315*FLEN/8, x4, x1, x2)

inst_17212:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xac80007f; valaddr_reg:x3; val_offset:51636*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51636*0 + 3*316*FLEN/8, x4, x1, x2)

inst_17213:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xac8000ff; valaddr_reg:x3; val_offset:51639*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51639*0 + 3*317*FLEN/8, x4, x1, x2)

inst_17214:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xac8001ff; valaddr_reg:x3; val_offset:51642*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51642*0 + 3*318*FLEN/8, x4, x1, x2)

inst_17215:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xac8003ff; valaddr_reg:x3; val_offset:51645*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51645*0 + 3*319*FLEN/8, x4, x1, x2)

inst_17216:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xac8007ff; valaddr_reg:x3; val_offset:51648*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51648*0 + 3*320*FLEN/8, x4, x1, x2)

inst_17217:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xac800fff; valaddr_reg:x3; val_offset:51651*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51651*0 + 3*321*FLEN/8, x4, x1, x2)

inst_17218:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xac801fff; valaddr_reg:x3; val_offset:51654*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51654*0 + 3*322*FLEN/8, x4, x1, x2)

inst_17219:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xac803fff; valaddr_reg:x3; val_offset:51657*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51657*0 + 3*323*FLEN/8, x4, x1, x2)

inst_17220:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xac807fff; valaddr_reg:x3; val_offset:51660*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51660*0 + 3*324*FLEN/8, x4, x1, x2)

inst_17221:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xac80ffff; valaddr_reg:x3; val_offset:51663*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51663*0 + 3*325*FLEN/8, x4, x1, x2)

inst_17222:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xac81ffff; valaddr_reg:x3; val_offset:51666*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51666*0 + 3*326*FLEN/8, x4, x1, x2)

inst_17223:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xac83ffff; valaddr_reg:x3; val_offset:51669*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51669*0 + 3*327*FLEN/8, x4, x1, x2)

inst_17224:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xac87ffff; valaddr_reg:x3; val_offset:51672*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51672*0 + 3*328*FLEN/8, x4, x1, x2)

inst_17225:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xac8fffff; valaddr_reg:x3; val_offset:51675*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51675*0 + 3*329*FLEN/8, x4, x1, x2)

inst_17226:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xac9fffff; valaddr_reg:x3; val_offset:51678*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51678*0 + 3*330*FLEN/8, x4, x1, x2)

inst_17227:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xacbfffff; valaddr_reg:x3; val_offset:51681*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51681*0 + 3*331*FLEN/8, x4, x1, x2)

inst_17228:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xacc00000; valaddr_reg:x3; val_offset:51684*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51684*0 + 3*332*FLEN/8, x4, x1, x2)

inst_17229:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xace00000; valaddr_reg:x3; val_offset:51687*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51687*0 + 3*333*FLEN/8, x4, x1, x2)

inst_17230:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xacf00000; valaddr_reg:x3; val_offset:51690*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51690*0 + 3*334*FLEN/8, x4, x1, x2)

inst_17231:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xacf80000; valaddr_reg:x3; val_offset:51693*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51693*0 + 3*335*FLEN/8, x4, x1, x2)

inst_17232:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xacfc0000; valaddr_reg:x3; val_offset:51696*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51696*0 + 3*336*FLEN/8, x4, x1, x2)

inst_17233:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xacfe0000; valaddr_reg:x3; val_offset:51699*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51699*0 + 3*337*FLEN/8, x4, x1, x2)

inst_17234:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xacff0000; valaddr_reg:x3; val_offset:51702*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51702*0 + 3*338*FLEN/8, x4, x1, x2)

inst_17235:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xacff8000; valaddr_reg:x3; val_offset:51705*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51705*0 + 3*339*FLEN/8, x4, x1, x2)

inst_17236:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xacffc000; valaddr_reg:x3; val_offset:51708*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51708*0 + 3*340*FLEN/8, x4, x1, x2)

inst_17237:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xacffe000; valaddr_reg:x3; val_offset:51711*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51711*0 + 3*341*FLEN/8, x4, x1, x2)

inst_17238:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xacfff000; valaddr_reg:x3; val_offset:51714*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51714*0 + 3*342*FLEN/8, x4, x1, x2)

inst_17239:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xacfff800; valaddr_reg:x3; val_offset:51717*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51717*0 + 3*343*FLEN/8, x4, x1, x2)

inst_17240:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xacfffc00; valaddr_reg:x3; val_offset:51720*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51720*0 + 3*344*FLEN/8, x4, x1, x2)

inst_17241:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xacfffe00; valaddr_reg:x3; val_offset:51723*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51723*0 + 3*345*FLEN/8, x4, x1, x2)

inst_17242:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xacffff00; valaddr_reg:x3; val_offset:51726*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51726*0 + 3*346*FLEN/8, x4, x1, x2)

inst_17243:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xacffff80; valaddr_reg:x3; val_offset:51729*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51729*0 + 3*347*FLEN/8, x4, x1, x2)

inst_17244:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xacffffc0; valaddr_reg:x3; val_offset:51732*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51732*0 + 3*348*FLEN/8, x4, x1, x2)

inst_17245:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xacffffe0; valaddr_reg:x3; val_offset:51735*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51735*0 + 3*349*FLEN/8, x4, x1, x2)

inst_17246:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xacfffff0; valaddr_reg:x3; val_offset:51738*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51738*0 + 3*350*FLEN/8, x4, x1, x2)

inst_17247:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xacfffff8; valaddr_reg:x3; val_offset:51741*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51741*0 + 3*351*FLEN/8, x4, x1, x2)

inst_17248:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xacfffffc; valaddr_reg:x3; val_offset:51744*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51744*0 + 3*352*FLEN/8, x4, x1, x2)

inst_17249:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xacfffffe; valaddr_reg:x3; val_offset:51747*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51747*0 + 3*353*FLEN/8, x4, x1, x2)

inst_17250:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x59 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xacffffff; valaddr_reg:x3; val_offset:51750*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51750*0 + 3*354*FLEN/8, x4, x1, x2)

inst_17251:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xbf800001; valaddr_reg:x3; val_offset:51753*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51753*0 + 3*355*FLEN/8, x4, x1, x2)

inst_17252:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xbf800003; valaddr_reg:x3; val_offset:51756*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51756*0 + 3*356*FLEN/8, x4, x1, x2)

inst_17253:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xbf800007; valaddr_reg:x3; val_offset:51759*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51759*0 + 3*357*FLEN/8, x4, x1, x2)

inst_17254:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xbf999999; valaddr_reg:x3; val_offset:51762*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51762*0 + 3*358*FLEN/8, x4, x1, x2)

inst_17255:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:51765*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51765*0 + 3*359*FLEN/8, x4, x1, x2)

inst_17256:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:51768*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51768*0 + 3*360*FLEN/8, x4, x1, x2)

inst_17257:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:51771*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51771*0 + 3*361*FLEN/8, x4, x1, x2)

inst_17258:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:51774*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51774*0 + 3*362*FLEN/8, x4, x1, x2)

inst_17259:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:51777*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51777*0 + 3*363*FLEN/8, x4, x1, x2)

inst_17260:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:51780*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51780*0 + 3*364*FLEN/8, x4, x1, x2)

inst_17261:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:51783*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51783*0 + 3*365*FLEN/8, x4, x1, x2)

inst_17262:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:51786*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51786*0 + 3*366*FLEN/8, x4, x1, x2)

inst_17263:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:51789*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51789*0 + 3*367*FLEN/8, x4, x1, x2)

inst_17264:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:51792*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51792*0 + 3*368*FLEN/8, x4, x1, x2)

inst_17265:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:51795*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51795*0 + 3*369*FLEN/8, x4, x1, x2)

inst_17266:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b676f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f9646 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eab676f; op2val:0x805f9646;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:51798*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51798*0 + 3*370*FLEN/8, x4, x1, x2)

inst_17267:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:51801*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51801*0 + 3*371*FLEN/8, x4, x1, x2)

inst_17268:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:51804*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51804*0 + 3*372*FLEN/8, x4, x1, x2)

inst_17269:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:51807*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51807*0 + 3*373*FLEN/8, x4, x1, x2)

inst_17270:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:51810*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51810*0 + 3*374*FLEN/8, x4, x1, x2)

inst_17271:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:51813*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51813*0 + 3*375*FLEN/8, x4, x1, x2)

inst_17272:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:51816*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51816*0 + 3*376*FLEN/8, x4, x1, x2)

inst_17273:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:51819*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51819*0 + 3*377*FLEN/8, x4, x1, x2)

inst_17274:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:51822*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51822*0 + 3*378*FLEN/8, x4, x1, x2)

inst_17275:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:51825*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51825*0 + 3*379*FLEN/8, x4, x1, x2)

inst_17276:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:51828*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51828*0 + 3*380*FLEN/8, x4, x1, x2)

inst_17277:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:51831*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51831*0 + 3*381*FLEN/8, x4, x1, x2)

inst_17278:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:51834*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51834*0 + 3*382*FLEN/8, x4, x1, x2)

inst_17279:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:51837*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51837*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_17280:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:51840*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51840*0 + 3*384*FLEN/8, x4, x1, x2)

inst_17281:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:51843*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51843*0 + 3*385*FLEN/8, x4, x1, x2)

inst_17282:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:51846*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51846*0 + 3*386*FLEN/8, x4, x1, x2)

inst_17283:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x86800000; valaddr_reg:x3; val_offset:51849*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51849*0 + 3*387*FLEN/8, x4, x1, x2)

inst_17284:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x86800001; valaddr_reg:x3; val_offset:51852*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51852*0 + 3*388*FLEN/8, x4, x1, x2)

inst_17285:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x86800003; valaddr_reg:x3; val_offset:51855*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51855*0 + 3*389*FLEN/8, x4, x1, x2)

inst_17286:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x86800007; valaddr_reg:x3; val_offset:51858*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51858*0 + 3*390*FLEN/8, x4, x1, x2)

inst_17287:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x8680000f; valaddr_reg:x3; val_offset:51861*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51861*0 + 3*391*FLEN/8, x4, x1, x2)

inst_17288:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x8680001f; valaddr_reg:x3; val_offset:51864*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51864*0 + 3*392*FLEN/8, x4, x1, x2)

inst_17289:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x8680003f; valaddr_reg:x3; val_offset:51867*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51867*0 + 3*393*FLEN/8, x4, x1, x2)

inst_17290:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x8680007f; valaddr_reg:x3; val_offset:51870*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51870*0 + 3*394*FLEN/8, x4, x1, x2)

inst_17291:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x868000ff; valaddr_reg:x3; val_offset:51873*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51873*0 + 3*395*FLEN/8, x4, x1, x2)

inst_17292:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x868001ff; valaddr_reg:x3; val_offset:51876*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51876*0 + 3*396*FLEN/8, x4, x1, x2)

inst_17293:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x868003ff; valaddr_reg:x3; val_offset:51879*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51879*0 + 3*397*FLEN/8, x4, x1, x2)

inst_17294:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x868007ff; valaddr_reg:x3; val_offset:51882*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51882*0 + 3*398*FLEN/8, x4, x1, x2)

inst_17295:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x86800fff; valaddr_reg:x3; val_offset:51885*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51885*0 + 3*399*FLEN/8, x4, x1, x2)

inst_17296:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x86801fff; valaddr_reg:x3; val_offset:51888*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51888*0 + 3*400*FLEN/8, x4, x1, x2)

inst_17297:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x86803fff; valaddr_reg:x3; val_offset:51891*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51891*0 + 3*401*FLEN/8, x4, x1, x2)

inst_17298:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x86807fff; valaddr_reg:x3; val_offset:51894*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51894*0 + 3*402*FLEN/8, x4, x1, x2)

inst_17299:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x8680ffff; valaddr_reg:x3; val_offset:51897*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51897*0 + 3*403*FLEN/8, x4, x1, x2)

inst_17300:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x8681ffff; valaddr_reg:x3; val_offset:51900*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51900*0 + 3*404*FLEN/8, x4, x1, x2)

inst_17301:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x8683ffff; valaddr_reg:x3; val_offset:51903*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51903*0 + 3*405*FLEN/8, x4, x1, x2)

inst_17302:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x8687ffff; valaddr_reg:x3; val_offset:51906*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51906*0 + 3*406*FLEN/8, x4, x1, x2)

inst_17303:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x868fffff; valaddr_reg:x3; val_offset:51909*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51909*0 + 3*407*FLEN/8, x4, x1, x2)

inst_17304:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x869fffff; valaddr_reg:x3; val_offset:51912*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51912*0 + 3*408*FLEN/8, x4, x1, x2)

inst_17305:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x86bfffff; valaddr_reg:x3; val_offset:51915*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51915*0 + 3*409*FLEN/8, x4, x1, x2)

inst_17306:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x86c00000; valaddr_reg:x3; val_offset:51918*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51918*0 + 3*410*FLEN/8, x4, x1, x2)

inst_17307:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x86e00000; valaddr_reg:x3; val_offset:51921*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51921*0 + 3*411*FLEN/8, x4, x1, x2)

inst_17308:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x86f00000; valaddr_reg:x3; val_offset:51924*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51924*0 + 3*412*FLEN/8, x4, x1, x2)

inst_17309:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x86f80000; valaddr_reg:x3; val_offset:51927*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51927*0 + 3*413*FLEN/8, x4, x1, x2)

inst_17310:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x86fc0000; valaddr_reg:x3; val_offset:51930*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51930*0 + 3*414*FLEN/8, x4, x1, x2)

inst_17311:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x86fe0000; valaddr_reg:x3; val_offset:51933*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51933*0 + 3*415*FLEN/8, x4, x1, x2)

inst_17312:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x86ff0000; valaddr_reg:x3; val_offset:51936*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51936*0 + 3*416*FLEN/8, x4, x1, x2)

inst_17313:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x86ff8000; valaddr_reg:x3; val_offset:51939*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51939*0 + 3*417*FLEN/8, x4, x1, x2)

inst_17314:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x86ffc000; valaddr_reg:x3; val_offset:51942*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51942*0 + 3*418*FLEN/8, x4, x1, x2)

inst_17315:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x86ffe000; valaddr_reg:x3; val_offset:51945*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51945*0 + 3*419*FLEN/8, x4, x1, x2)

inst_17316:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x86fff000; valaddr_reg:x3; val_offset:51948*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51948*0 + 3*420*FLEN/8, x4, x1, x2)

inst_17317:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x86fff800; valaddr_reg:x3; val_offset:51951*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51951*0 + 3*421*FLEN/8, x4, x1, x2)

inst_17318:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x86fffc00; valaddr_reg:x3; val_offset:51954*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51954*0 + 3*422*FLEN/8, x4, x1, x2)

inst_17319:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x86fffe00; valaddr_reg:x3; val_offset:51957*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51957*0 + 3*423*FLEN/8, x4, x1, x2)

inst_17320:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x86ffff00; valaddr_reg:x3; val_offset:51960*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51960*0 + 3*424*FLEN/8, x4, x1, x2)

inst_17321:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x86ffff80; valaddr_reg:x3; val_offset:51963*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51963*0 + 3*425*FLEN/8, x4, x1, x2)

inst_17322:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x86ffffc0; valaddr_reg:x3; val_offset:51966*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51966*0 + 3*426*FLEN/8, x4, x1, x2)

inst_17323:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x86ffffe0; valaddr_reg:x3; val_offset:51969*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51969*0 + 3*427*FLEN/8, x4, x1, x2)

inst_17324:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x86fffff0; valaddr_reg:x3; val_offset:51972*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51972*0 + 3*428*FLEN/8, x4, x1, x2)

inst_17325:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x86fffff8; valaddr_reg:x3; val_offset:51975*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51975*0 + 3*429*FLEN/8, x4, x1, x2)

inst_17326:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x86fffffc; valaddr_reg:x3; val_offset:51978*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51978*0 + 3*430*FLEN/8, x4, x1, x2)

inst_17327:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x86fffffe; valaddr_reg:x3; val_offset:51981*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51981*0 + 3*431*FLEN/8, x4, x1, x2)

inst_17328:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac0532; op2val:0x80000000;
op3val:0x86ffffff; valaddr_reg:x3; val_offset:51984*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51984*0 + 3*432*FLEN/8, x4, x1, x2)

inst_17329:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa6800000; valaddr_reg:x3; val_offset:51987*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51987*0 + 3*433*FLEN/8, x4, x1, x2)

inst_17330:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa6800001; valaddr_reg:x3; val_offset:51990*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51990*0 + 3*434*FLEN/8, x4, x1, x2)

inst_17331:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa6800003; valaddr_reg:x3; val_offset:51993*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51993*0 + 3*435*FLEN/8, x4, x1, x2)

inst_17332:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa6800007; valaddr_reg:x3; val_offset:51996*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51996*0 + 3*436*FLEN/8, x4, x1, x2)

inst_17333:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa680000f; valaddr_reg:x3; val_offset:51999*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 51999*0 + 3*437*FLEN/8, x4, x1, x2)

inst_17334:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa680001f; valaddr_reg:x3; val_offset:52002*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52002*0 + 3*438*FLEN/8, x4, x1, x2)

inst_17335:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa680003f; valaddr_reg:x3; val_offset:52005*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52005*0 + 3*439*FLEN/8, x4, x1, x2)

inst_17336:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa680007f; valaddr_reg:x3; val_offset:52008*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52008*0 + 3*440*FLEN/8, x4, x1, x2)

inst_17337:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa68000ff; valaddr_reg:x3; val_offset:52011*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52011*0 + 3*441*FLEN/8, x4, x1, x2)

inst_17338:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa68001ff; valaddr_reg:x3; val_offset:52014*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52014*0 + 3*442*FLEN/8, x4, x1, x2)

inst_17339:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa68003ff; valaddr_reg:x3; val_offset:52017*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52017*0 + 3*443*FLEN/8, x4, x1, x2)

inst_17340:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa68007ff; valaddr_reg:x3; val_offset:52020*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52020*0 + 3*444*FLEN/8, x4, x1, x2)

inst_17341:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa6800fff; valaddr_reg:x3; val_offset:52023*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52023*0 + 3*445*FLEN/8, x4, x1, x2)

inst_17342:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa6801fff; valaddr_reg:x3; val_offset:52026*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52026*0 + 3*446*FLEN/8, x4, x1, x2)

inst_17343:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa6803fff; valaddr_reg:x3; val_offset:52029*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52029*0 + 3*447*FLEN/8, x4, x1, x2)

inst_17344:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa6807fff; valaddr_reg:x3; val_offset:52032*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52032*0 + 3*448*FLEN/8, x4, x1, x2)

inst_17345:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa680ffff; valaddr_reg:x3; val_offset:52035*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52035*0 + 3*449*FLEN/8, x4, x1, x2)

inst_17346:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa681ffff; valaddr_reg:x3; val_offset:52038*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52038*0 + 3*450*FLEN/8, x4, x1, x2)

inst_17347:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa683ffff; valaddr_reg:x3; val_offset:52041*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52041*0 + 3*451*FLEN/8, x4, x1, x2)

inst_17348:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa687ffff; valaddr_reg:x3; val_offset:52044*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52044*0 + 3*452*FLEN/8, x4, x1, x2)

inst_17349:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa68fffff; valaddr_reg:x3; val_offset:52047*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52047*0 + 3*453*FLEN/8, x4, x1, x2)

inst_17350:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa69fffff; valaddr_reg:x3; val_offset:52050*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52050*0 + 3*454*FLEN/8, x4, x1, x2)

inst_17351:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa6bfffff; valaddr_reg:x3; val_offset:52053*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52053*0 + 3*455*FLEN/8, x4, x1, x2)

inst_17352:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa6c00000; valaddr_reg:x3; val_offset:52056*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52056*0 + 3*456*FLEN/8, x4, x1, x2)

inst_17353:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa6e00000; valaddr_reg:x3; val_offset:52059*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52059*0 + 3*457*FLEN/8, x4, x1, x2)

inst_17354:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa6f00000; valaddr_reg:x3; val_offset:52062*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52062*0 + 3*458*FLEN/8, x4, x1, x2)

inst_17355:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa6f80000; valaddr_reg:x3; val_offset:52065*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52065*0 + 3*459*FLEN/8, x4, x1, x2)

inst_17356:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa6fc0000; valaddr_reg:x3; val_offset:52068*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52068*0 + 3*460*FLEN/8, x4, x1, x2)

inst_17357:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa6fe0000; valaddr_reg:x3; val_offset:52071*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52071*0 + 3*461*FLEN/8, x4, x1, x2)

inst_17358:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa6ff0000; valaddr_reg:x3; val_offset:52074*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52074*0 + 3*462*FLEN/8, x4, x1, x2)

inst_17359:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa6ff8000; valaddr_reg:x3; val_offset:52077*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52077*0 + 3*463*FLEN/8, x4, x1, x2)

inst_17360:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa6ffc000; valaddr_reg:x3; val_offset:52080*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52080*0 + 3*464*FLEN/8, x4, x1, x2)

inst_17361:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa6ffe000; valaddr_reg:x3; val_offset:52083*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52083*0 + 3*465*FLEN/8, x4, x1, x2)

inst_17362:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa6fff000; valaddr_reg:x3; val_offset:52086*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52086*0 + 3*466*FLEN/8, x4, x1, x2)

inst_17363:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa6fff800; valaddr_reg:x3; val_offset:52089*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52089*0 + 3*467*FLEN/8, x4, x1, x2)

inst_17364:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa6fffc00; valaddr_reg:x3; val_offset:52092*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52092*0 + 3*468*FLEN/8, x4, x1, x2)

inst_17365:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa6fffe00; valaddr_reg:x3; val_offset:52095*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52095*0 + 3*469*FLEN/8, x4, x1, x2)

inst_17366:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa6ffff00; valaddr_reg:x3; val_offset:52098*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52098*0 + 3*470*FLEN/8, x4, x1, x2)

inst_17367:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa6ffff80; valaddr_reg:x3; val_offset:52101*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52101*0 + 3*471*FLEN/8, x4, x1, x2)

inst_17368:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa6ffffc0; valaddr_reg:x3; val_offset:52104*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52104*0 + 3*472*FLEN/8, x4, x1, x2)

inst_17369:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa6ffffe0; valaddr_reg:x3; val_offset:52107*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52107*0 + 3*473*FLEN/8, x4, x1, x2)

inst_17370:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa6fffff0; valaddr_reg:x3; val_offset:52110*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52110*0 + 3*474*FLEN/8, x4, x1, x2)

inst_17371:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa6fffff8; valaddr_reg:x3; val_offset:52113*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52113*0 + 3*475*FLEN/8, x4, x1, x2)

inst_17372:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa6fffffc; valaddr_reg:x3; val_offset:52116*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52116*0 + 3*476*FLEN/8, x4, x1, x2)

inst_17373:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa6fffffe; valaddr_reg:x3; val_offset:52119*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52119*0 + 3*477*FLEN/8, x4, x1, x2)

inst_17374:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xa6ffffff; valaddr_reg:x3; val_offset:52122*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52122*0 + 3*478*FLEN/8, x4, x1, x2)

inst_17375:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xbf800001; valaddr_reg:x3; val_offset:52125*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52125*0 + 3*479*FLEN/8, x4, x1, x2)

inst_17376:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xbf800003; valaddr_reg:x3; val_offset:52128*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52128*0 + 3*480*FLEN/8, x4, x1, x2)

inst_17377:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xbf800007; valaddr_reg:x3; val_offset:52131*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52131*0 + 3*481*FLEN/8, x4, x1, x2)

inst_17378:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xbf999999; valaddr_reg:x3; val_offset:52134*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52134*0 + 3*482*FLEN/8, x4, x1, x2)

inst_17379:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:52137*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52137*0 + 3*483*FLEN/8, x4, x1, x2)

inst_17380:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:52140*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52140*0 + 3*484*FLEN/8, x4, x1, x2)

inst_17381:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:52143*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52143*0 + 3*485*FLEN/8, x4, x1, x2)

inst_17382:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:52146*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52146*0 + 3*486*FLEN/8, x4, x1, x2)

inst_17383:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:52149*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52149*0 + 3*487*FLEN/8, x4, x1, x2)

inst_17384:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:52152*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52152*0 + 3*488*FLEN/8, x4, x1, x2)

inst_17385:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:52155*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52155*0 + 3*489*FLEN/8, x4, x1, x2)

inst_17386:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:52158*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52158*0 + 3*490*FLEN/8, x4, x1, x2)

inst_17387:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:52161*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52161*0 + 3*491*FLEN/8, x4, x1, x2)

inst_17388:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:52164*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52164*0 + 3*492*FLEN/8, x4, x1, x2)

inst_17389:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:52167*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52167*0 + 3*493*FLEN/8, x4, x1, x2)

inst_17390:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c157e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5f3597 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eac157e; op2val:0x805f3597;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:52170*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52170*0 + 3*494*FLEN/8, x4, x1, x2)

inst_17391:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe6800000; valaddr_reg:x3; val_offset:52173*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52173*0 + 3*495*FLEN/8, x4, x1, x2)

inst_17392:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe6800001; valaddr_reg:x3; val_offset:52176*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52176*0 + 3*496*FLEN/8, x4, x1, x2)

inst_17393:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe6800003; valaddr_reg:x3; val_offset:52179*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52179*0 + 3*497*FLEN/8, x4, x1, x2)

inst_17394:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe6800007; valaddr_reg:x3; val_offset:52182*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52182*0 + 3*498*FLEN/8, x4, x1, x2)

inst_17395:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe680000f; valaddr_reg:x3; val_offset:52185*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52185*0 + 3*499*FLEN/8, x4, x1, x2)

inst_17396:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe680001f; valaddr_reg:x3; val_offset:52188*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52188*0 + 3*500*FLEN/8, x4, x1, x2)

inst_17397:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe680003f; valaddr_reg:x3; val_offset:52191*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52191*0 + 3*501*FLEN/8, x4, x1, x2)

inst_17398:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe680007f; valaddr_reg:x3; val_offset:52194*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52194*0 + 3*502*FLEN/8, x4, x1, x2)

inst_17399:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe68000ff; valaddr_reg:x3; val_offset:52197*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52197*0 + 3*503*FLEN/8, x4, x1, x2)

inst_17400:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe68001ff; valaddr_reg:x3; val_offset:52200*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52200*0 + 3*504*FLEN/8, x4, x1, x2)

inst_17401:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe68003ff; valaddr_reg:x3; val_offset:52203*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52203*0 + 3*505*FLEN/8, x4, x1, x2)

inst_17402:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe68007ff; valaddr_reg:x3; val_offset:52206*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52206*0 + 3*506*FLEN/8, x4, x1, x2)

inst_17403:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe6800fff; valaddr_reg:x3; val_offset:52209*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52209*0 + 3*507*FLEN/8, x4, x1, x2)

inst_17404:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe6801fff; valaddr_reg:x3; val_offset:52212*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52212*0 + 3*508*FLEN/8, x4, x1, x2)

inst_17405:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe6803fff; valaddr_reg:x3; val_offset:52215*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52215*0 + 3*509*FLEN/8, x4, x1, x2)

inst_17406:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe6807fff; valaddr_reg:x3; val_offset:52218*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52218*0 + 3*510*FLEN/8, x4, x1, x2)

inst_17407:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe680ffff; valaddr_reg:x3; val_offset:52221*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52221*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_17408:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe681ffff; valaddr_reg:x3; val_offset:52224*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52224*0 + 3*512*FLEN/8, x4, x1, x2)

inst_17409:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe683ffff; valaddr_reg:x3; val_offset:52227*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52227*0 + 3*513*FLEN/8, x4, x1, x2)

inst_17410:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe687ffff; valaddr_reg:x3; val_offset:52230*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52230*0 + 3*514*FLEN/8, x4, x1, x2)

inst_17411:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe68fffff; valaddr_reg:x3; val_offset:52233*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52233*0 + 3*515*FLEN/8, x4, x1, x2)

inst_17412:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe69fffff; valaddr_reg:x3; val_offset:52236*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52236*0 + 3*516*FLEN/8, x4, x1, x2)

inst_17413:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe6bfffff; valaddr_reg:x3; val_offset:52239*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52239*0 + 3*517*FLEN/8, x4, x1, x2)

inst_17414:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe6c00000; valaddr_reg:x3; val_offset:52242*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52242*0 + 3*518*FLEN/8, x4, x1, x2)

inst_17415:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe6e00000; valaddr_reg:x3; val_offset:52245*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52245*0 + 3*519*FLEN/8, x4, x1, x2)

inst_17416:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe6f00000; valaddr_reg:x3; val_offset:52248*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52248*0 + 3*520*FLEN/8, x4, x1, x2)

inst_17417:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe6f80000; valaddr_reg:x3; val_offset:52251*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52251*0 + 3*521*FLEN/8, x4, x1, x2)

inst_17418:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe6fc0000; valaddr_reg:x3; val_offset:52254*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52254*0 + 3*522*FLEN/8, x4, x1, x2)

inst_17419:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe6fe0000; valaddr_reg:x3; val_offset:52257*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52257*0 + 3*523*FLEN/8, x4, x1, x2)

inst_17420:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe6ff0000; valaddr_reg:x3; val_offset:52260*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52260*0 + 3*524*FLEN/8, x4, x1, x2)

inst_17421:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe6ff8000; valaddr_reg:x3; val_offset:52263*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52263*0 + 3*525*FLEN/8, x4, x1, x2)

inst_17422:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe6ffc000; valaddr_reg:x3; val_offset:52266*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52266*0 + 3*526*FLEN/8, x4, x1, x2)

inst_17423:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe6ffe000; valaddr_reg:x3; val_offset:52269*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52269*0 + 3*527*FLEN/8, x4, x1, x2)

inst_17424:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe6fff000; valaddr_reg:x3; val_offset:52272*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52272*0 + 3*528*FLEN/8, x4, x1, x2)

inst_17425:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe6fff800; valaddr_reg:x3; val_offset:52275*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52275*0 + 3*529*FLEN/8, x4, x1, x2)

inst_17426:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe6fffc00; valaddr_reg:x3; val_offset:52278*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52278*0 + 3*530*FLEN/8, x4, x1, x2)

inst_17427:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe6fffe00; valaddr_reg:x3; val_offset:52281*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52281*0 + 3*531*FLEN/8, x4, x1, x2)

inst_17428:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe6ffff00; valaddr_reg:x3; val_offset:52284*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52284*0 + 3*532*FLEN/8, x4, x1, x2)

inst_17429:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe6ffff80; valaddr_reg:x3; val_offset:52287*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52287*0 + 3*533*FLEN/8, x4, x1, x2)

inst_17430:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe6ffffc0; valaddr_reg:x3; val_offset:52290*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52290*0 + 3*534*FLEN/8, x4, x1, x2)

inst_17431:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe6ffffe0; valaddr_reg:x3; val_offset:52293*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52293*0 + 3*535*FLEN/8, x4, x1, x2)

inst_17432:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe6fffff0; valaddr_reg:x3; val_offset:52296*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52296*0 + 3*536*FLEN/8, x4, x1, x2)

inst_17433:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe6fffff8; valaddr_reg:x3; val_offset:52299*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52299*0 + 3*537*FLEN/8, x4, x1, x2)

inst_17434:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe6fffffc; valaddr_reg:x3; val_offset:52302*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52302*0 + 3*538*FLEN/8, x4, x1, x2)

inst_17435:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe6fffffe; valaddr_reg:x3; val_offset:52305*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52305*0 + 3*539*FLEN/8, x4, x1, x2)

inst_17436:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xcd and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xe6ffffff; valaddr_reg:x3; val_offset:52308*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52308*0 + 3*540*FLEN/8, x4, x1, x2)

inst_17437:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xff000001; valaddr_reg:x3; val_offset:52311*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52311*0 + 3*541*FLEN/8, x4, x1, x2)

inst_17438:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xff000003; valaddr_reg:x3; val_offset:52314*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52314*0 + 3*542*FLEN/8, x4, x1, x2)

inst_17439:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xff000007; valaddr_reg:x3; val_offset:52317*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52317*0 + 3*543*FLEN/8, x4, x1, x2)

inst_17440:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xff199999; valaddr_reg:x3; val_offset:52320*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52320*0 + 3*544*FLEN/8, x4, x1, x2)

inst_17441:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xff249249; valaddr_reg:x3; val_offset:52323*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52323*0 + 3*545*FLEN/8, x4, x1, x2)

inst_17442:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xff333333; valaddr_reg:x3; val_offset:52326*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52326*0 + 3*546*FLEN/8, x4, x1, x2)

inst_17443:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:52329*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52329*0 + 3*547*FLEN/8, x4, x1, x2)

inst_17444:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:52332*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52332*0 + 3*548*FLEN/8, x4, x1, x2)

inst_17445:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xff444444; valaddr_reg:x3; val_offset:52335*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52335*0 + 3*549*FLEN/8, x4, x1, x2)

inst_17446:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:52338*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52338*0 + 3*550*FLEN/8, x4, x1, x2)

inst_17447:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:52341*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52341*0 + 3*551*FLEN/8, x4, x1, x2)

inst_17448:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xff666666; valaddr_reg:x3; val_offset:52344*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52344*0 + 3*552*FLEN/8, x4, x1, x2)

inst_17449:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:52347*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52347*0 + 3*553*FLEN/8, x4, x1, x2)

inst_17450:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:52350*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52350*0 + 3*554*FLEN/8, x4, x1, x2)

inst_17451:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:52353*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52353*0 + 3*555*FLEN/8, x4, x1, x2)

inst_17452:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e1fa7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3c3026 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae1fa7; op2val:0xc03c3026;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:52356*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52356*0 + 3*556*FLEN/8, x4, x1, x2)

inst_17453:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6b800000; valaddr_reg:x3; val_offset:52359*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52359*0 + 3*557*FLEN/8, x4, x1, x2)

inst_17454:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6b800001; valaddr_reg:x3; val_offset:52362*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52362*0 + 3*558*FLEN/8, x4, x1, x2)

inst_17455:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6b800003; valaddr_reg:x3; val_offset:52365*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52365*0 + 3*559*FLEN/8, x4, x1, x2)

inst_17456:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6b800007; valaddr_reg:x3; val_offset:52368*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52368*0 + 3*560*FLEN/8, x4, x1, x2)

inst_17457:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6b80000f; valaddr_reg:x3; val_offset:52371*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52371*0 + 3*561*FLEN/8, x4, x1, x2)

inst_17458:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6b80001f; valaddr_reg:x3; val_offset:52374*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52374*0 + 3*562*FLEN/8, x4, x1, x2)

inst_17459:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6b80003f; valaddr_reg:x3; val_offset:52377*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52377*0 + 3*563*FLEN/8, x4, x1, x2)

inst_17460:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6b80007f; valaddr_reg:x3; val_offset:52380*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52380*0 + 3*564*FLEN/8, x4, x1, x2)

inst_17461:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6b8000ff; valaddr_reg:x3; val_offset:52383*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52383*0 + 3*565*FLEN/8, x4, x1, x2)

inst_17462:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6b8001ff; valaddr_reg:x3; val_offset:52386*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52386*0 + 3*566*FLEN/8, x4, x1, x2)

inst_17463:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6b8003ff; valaddr_reg:x3; val_offset:52389*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52389*0 + 3*567*FLEN/8, x4, x1, x2)

inst_17464:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6b8007ff; valaddr_reg:x3; val_offset:52392*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52392*0 + 3*568*FLEN/8, x4, x1, x2)

inst_17465:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6b800fff; valaddr_reg:x3; val_offset:52395*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52395*0 + 3*569*FLEN/8, x4, x1, x2)

inst_17466:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6b801fff; valaddr_reg:x3; val_offset:52398*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52398*0 + 3*570*FLEN/8, x4, x1, x2)

inst_17467:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6b803fff; valaddr_reg:x3; val_offset:52401*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52401*0 + 3*571*FLEN/8, x4, x1, x2)

inst_17468:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6b807fff; valaddr_reg:x3; val_offset:52404*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52404*0 + 3*572*FLEN/8, x4, x1, x2)

inst_17469:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6b80ffff; valaddr_reg:x3; val_offset:52407*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52407*0 + 3*573*FLEN/8, x4, x1, x2)

inst_17470:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6b81ffff; valaddr_reg:x3; val_offset:52410*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52410*0 + 3*574*FLEN/8, x4, x1, x2)

inst_17471:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6b83ffff; valaddr_reg:x3; val_offset:52413*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52413*0 + 3*575*FLEN/8, x4, x1, x2)

inst_17472:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6b87ffff; valaddr_reg:x3; val_offset:52416*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52416*0 + 3*576*FLEN/8, x4, x1, x2)

inst_17473:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6b8fffff; valaddr_reg:x3; val_offset:52419*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52419*0 + 3*577*FLEN/8, x4, x1, x2)

inst_17474:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6b9fffff; valaddr_reg:x3; val_offset:52422*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52422*0 + 3*578*FLEN/8, x4, x1, x2)

inst_17475:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6bbfffff; valaddr_reg:x3; val_offset:52425*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52425*0 + 3*579*FLEN/8, x4, x1, x2)

inst_17476:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6bc00000; valaddr_reg:x3; val_offset:52428*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52428*0 + 3*580*FLEN/8, x4, x1, x2)

inst_17477:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6be00000; valaddr_reg:x3; val_offset:52431*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52431*0 + 3*581*FLEN/8, x4, x1, x2)

inst_17478:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6bf00000; valaddr_reg:x3; val_offset:52434*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52434*0 + 3*582*FLEN/8, x4, x1, x2)

inst_17479:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6bf80000; valaddr_reg:x3; val_offset:52437*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52437*0 + 3*583*FLEN/8, x4, x1, x2)

inst_17480:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6bfc0000; valaddr_reg:x3; val_offset:52440*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52440*0 + 3*584*FLEN/8, x4, x1, x2)

inst_17481:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6bfe0000; valaddr_reg:x3; val_offset:52443*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52443*0 + 3*585*FLEN/8, x4, x1, x2)

inst_17482:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6bff0000; valaddr_reg:x3; val_offset:52446*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52446*0 + 3*586*FLEN/8, x4, x1, x2)

inst_17483:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6bff8000; valaddr_reg:x3; val_offset:52449*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52449*0 + 3*587*FLEN/8, x4, x1, x2)

inst_17484:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6bffc000; valaddr_reg:x3; val_offset:52452*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52452*0 + 3*588*FLEN/8, x4, x1, x2)

inst_17485:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6bffe000; valaddr_reg:x3; val_offset:52455*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52455*0 + 3*589*FLEN/8, x4, x1, x2)

inst_17486:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6bfff000; valaddr_reg:x3; val_offset:52458*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52458*0 + 3*590*FLEN/8, x4, x1, x2)

inst_17487:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6bfff800; valaddr_reg:x3; val_offset:52461*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52461*0 + 3*591*FLEN/8, x4, x1, x2)

inst_17488:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6bfffc00; valaddr_reg:x3; val_offset:52464*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52464*0 + 3*592*FLEN/8, x4, x1, x2)

inst_17489:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6bfffe00; valaddr_reg:x3; val_offset:52467*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52467*0 + 3*593*FLEN/8, x4, x1, x2)

inst_17490:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6bffff00; valaddr_reg:x3; val_offset:52470*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52470*0 + 3*594*FLEN/8, x4, x1, x2)

inst_17491:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6bffff80; valaddr_reg:x3; val_offset:52473*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52473*0 + 3*595*FLEN/8, x4, x1, x2)

inst_17492:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6bffffc0; valaddr_reg:x3; val_offset:52476*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52476*0 + 3*596*FLEN/8, x4, x1, x2)

inst_17493:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6bffffe0; valaddr_reg:x3; val_offset:52479*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52479*0 + 3*597*FLEN/8, x4, x1, x2)

inst_17494:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6bfffff0; valaddr_reg:x3; val_offset:52482*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52482*0 + 3*598*FLEN/8, x4, x1, x2)

inst_17495:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6bfffff8; valaddr_reg:x3; val_offset:52485*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52485*0 + 3*599*FLEN/8, x4, x1, x2)

inst_17496:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6bfffffc; valaddr_reg:x3; val_offset:52488*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52488*0 + 3*600*FLEN/8, x4, x1, x2)

inst_17497:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6bfffffe; valaddr_reg:x3; val_offset:52491*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52491*0 + 3*601*FLEN/8, x4, x1, x2)

inst_17498:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x6bffffff; valaddr_reg:x3; val_offset:52494*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52494*0 + 3*602*FLEN/8, x4, x1, x2)

inst_17499:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x7f000001; valaddr_reg:x3; val_offset:52497*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52497*0 + 3*603*FLEN/8, x4, x1, x2)

inst_17500:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x7f000003; valaddr_reg:x3; val_offset:52500*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52500*0 + 3*604*FLEN/8, x4, x1, x2)

inst_17501:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x7f000007; valaddr_reg:x3; val_offset:52503*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52503*0 + 3*605*FLEN/8, x4, x1, x2)

inst_17502:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x7f199999; valaddr_reg:x3; val_offset:52506*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52506*0 + 3*606*FLEN/8, x4, x1, x2)

inst_17503:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x7f249249; valaddr_reg:x3; val_offset:52509*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52509*0 + 3*607*FLEN/8, x4, x1, x2)

inst_17504:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x7f333333; valaddr_reg:x3; val_offset:52512*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52512*0 + 3*608*FLEN/8, x4, x1, x2)

inst_17505:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:52515*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52515*0 + 3*609*FLEN/8, x4, x1, x2)

inst_17506:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:52518*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52518*0 + 3*610*FLEN/8, x4, x1, x2)

inst_17507:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x7f444444; valaddr_reg:x3; val_offset:52521*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52521*0 + 3*611*FLEN/8, x4, x1, x2)

inst_17508:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:52524*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52524*0 + 3*612*FLEN/8, x4, x1, x2)

inst_17509:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:52527*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52527*0 + 3*613*FLEN/8, x4, x1, x2)

inst_17510:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x7f666666; valaddr_reg:x3; val_offset:52530*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52530*0 + 3*614*FLEN/8, x4, x1, x2)

inst_17511:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:52533*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52533*0 + 3*615*FLEN/8, x4, x1, x2)

inst_17512:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:52536*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52536*0 + 3*616*FLEN/8, x4, x1, x2)

inst_17513:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:52539*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52539*0 + 3*617*FLEN/8, x4, x1, x2)

inst_17514:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e5abd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bf061 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae5abd; op2val:0x403bf061;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:52542*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52542*0 + 3*618*FLEN/8, x4, x1, x2)

inst_17515:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:52545*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52545*0 + 3*619*FLEN/8, x4, x1, x2)

inst_17516:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:52548*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52548*0 + 3*620*FLEN/8, x4, x1, x2)

inst_17517:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:52551*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52551*0 + 3*621*FLEN/8, x4, x1, x2)

inst_17518:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x80999999; valaddr_reg:x3; val_offset:52554*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52554*0 + 3*622*FLEN/8, x4, x1, x2)

inst_17519:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x80a49249; valaddr_reg:x3; val_offset:52557*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52557*0 + 3*623*FLEN/8, x4, x1, x2)

inst_17520:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x80b33333; valaddr_reg:x3; val_offset:52560*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52560*0 + 3*624*FLEN/8, x4, x1, x2)

inst_17521:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x80b6db6d; valaddr_reg:x3; val_offset:52563*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52563*0 + 3*625*FLEN/8, x4, x1, x2)

inst_17522:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x80bbbbbb; valaddr_reg:x3; val_offset:52566*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52566*0 + 3*626*FLEN/8, x4, x1, x2)

inst_17523:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x80c44444; valaddr_reg:x3; val_offset:52569*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52569*0 + 3*627*FLEN/8, x4, x1, x2)

inst_17524:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x80cccccc; valaddr_reg:x3; val_offset:52572*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52572*0 + 3*628*FLEN/8, x4, x1, x2)

inst_17525:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x80db6db6; valaddr_reg:x3; val_offset:52575*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52575*0 + 3*629*FLEN/8, x4, x1, x2)

inst_17526:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x80e66666; valaddr_reg:x3; val_offset:52578*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52578*0 + 3*630*FLEN/8, x4, x1, x2)

inst_17527:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x80edb6db; valaddr_reg:x3; val_offset:52581*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52581*0 + 3*631*FLEN/8, x4, x1, x2)

inst_17528:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:52584*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52584*0 + 3*632*FLEN/8, x4, x1, x2)

inst_17529:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:52587*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52587*0 + 3*633*FLEN/8, x4, x1, x2)

inst_17530:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:52590*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52590*0 + 3*634*FLEN/8, x4, x1, x2)

inst_17531:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x84000000; valaddr_reg:x3; val_offset:52593*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52593*0 + 3*635*FLEN/8, x4, x1, x2)

inst_17532:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x84000001; valaddr_reg:x3; val_offset:52596*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52596*0 + 3*636*FLEN/8, x4, x1, x2)

inst_17533:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x84000003; valaddr_reg:x3; val_offset:52599*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52599*0 + 3*637*FLEN/8, x4, x1, x2)

inst_17534:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x84000007; valaddr_reg:x3; val_offset:52602*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52602*0 + 3*638*FLEN/8, x4, x1, x2)

inst_17535:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x8400000f; valaddr_reg:x3; val_offset:52605*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52605*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_17536:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x8400001f; valaddr_reg:x3; val_offset:52608*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52608*0 + 3*640*FLEN/8, x4, x1, x2)

inst_17537:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x8400003f; valaddr_reg:x3; val_offset:52611*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52611*0 + 3*641*FLEN/8, x4, x1, x2)

inst_17538:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x8400007f; valaddr_reg:x3; val_offset:52614*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52614*0 + 3*642*FLEN/8, x4, x1, x2)

inst_17539:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x840000ff; valaddr_reg:x3; val_offset:52617*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52617*0 + 3*643*FLEN/8, x4, x1, x2)

inst_17540:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x840001ff; valaddr_reg:x3; val_offset:52620*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52620*0 + 3*644*FLEN/8, x4, x1, x2)

inst_17541:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x840003ff; valaddr_reg:x3; val_offset:52623*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52623*0 + 3*645*FLEN/8, x4, x1, x2)

inst_17542:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x840007ff; valaddr_reg:x3; val_offset:52626*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52626*0 + 3*646*FLEN/8, x4, x1, x2)

inst_17543:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x84000fff; valaddr_reg:x3; val_offset:52629*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52629*0 + 3*647*FLEN/8, x4, x1, x2)

inst_17544:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x84001fff; valaddr_reg:x3; val_offset:52632*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52632*0 + 3*648*FLEN/8, x4, x1, x2)

inst_17545:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x84003fff; valaddr_reg:x3; val_offset:52635*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52635*0 + 3*649*FLEN/8, x4, x1, x2)

inst_17546:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x84007fff; valaddr_reg:x3; val_offset:52638*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52638*0 + 3*650*FLEN/8, x4, x1, x2)

inst_17547:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x8400ffff; valaddr_reg:x3; val_offset:52641*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52641*0 + 3*651*FLEN/8, x4, x1, x2)

inst_17548:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x8401ffff; valaddr_reg:x3; val_offset:52644*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52644*0 + 3*652*FLEN/8, x4, x1, x2)

inst_17549:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x8403ffff; valaddr_reg:x3; val_offset:52647*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52647*0 + 3*653*FLEN/8, x4, x1, x2)

inst_17550:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x8407ffff; valaddr_reg:x3; val_offset:52650*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52650*0 + 3*654*FLEN/8, x4, x1, x2)

inst_17551:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x840fffff; valaddr_reg:x3; val_offset:52653*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52653*0 + 3*655*FLEN/8, x4, x1, x2)

inst_17552:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x841fffff; valaddr_reg:x3; val_offset:52656*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52656*0 + 3*656*FLEN/8, x4, x1, x2)

inst_17553:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x843fffff; valaddr_reg:x3; val_offset:52659*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52659*0 + 3*657*FLEN/8, x4, x1, x2)

inst_17554:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x84400000; valaddr_reg:x3; val_offset:52662*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52662*0 + 3*658*FLEN/8, x4, x1, x2)

inst_17555:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x84600000; valaddr_reg:x3; val_offset:52665*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52665*0 + 3*659*FLEN/8, x4, x1, x2)

inst_17556:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x84700000; valaddr_reg:x3; val_offset:52668*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52668*0 + 3*660*FLEN/8, x4, x1, x2)

inst_17557:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x84780000; valaddr_reg:x3; val_offset:52671*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52671*0 + 3*661*FLEN/8, x4, x1, x2)

inst_17558:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x847c0000; valaddr_reg:x3; val_offset:52674*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52674*0 + 3*662*FLEN/8, x4, x1, x2)

inst_17559:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x847e0000; valaddr_reg:x3; val_offset:52677*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52677*0 + 3*663*FLEN/8, x4, x1, x2)

inst_17560:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x847f0000; valaddr_reg:x3; val_offset:52680*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52680*0 + 3*664*FLEN/8, x4, x1, x2)

inst_17561:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x847f8000; valaddr_reg:x3; val_offset:52683*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52683*0 + 3*665*FLEN/8, x4, x1, x2)

inst_17562:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x847fc000; valaddr_reg:x3; val_offset:52686*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52686*0 + 3*666*FLEN/8, x4, x1, x2)

inst_17563:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x847fe000; valaddr_reg:x3; val_offset:52689*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52689*0 + 3*667*FLEN/8, x4, x1, x2)

inst_17564:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x847ff000; valaddr_reg:x3; val_offset:52692*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52692*0 + 3*668*FLEN/8, x4, x1, x2)

inst_17565:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x847ff800; valaddr_reg:x3; val_offset:52695*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52695*0 + 3*669*FLEN/8, x4, x1, x2)

inst_17566:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x847ffc00; valaddr_reg:x3; val_offset:52698*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52698*0 + 3*670*FLEN/8, x4, x1, x2)

inst_17567:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x847ffe00; valaddr_reg:x3; val_offset:52701*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52701*0 + 3*671*FLEN/8, x4, x1, x2)

inst_17568:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x847fff00; valaddr_reg:x3; val_offset:52704*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52704*0 + 3*672*FLEN/8, x4, x1, x2)

inst_17569:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x847fff80; valaddr_reg:x3; val_offset:52707*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52707*0 + 3*673*FLEN/8, x4, x1, x2)

inst_17570:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x847fffc0; valaddr_reg:x3; val_offset:52710*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52710*0 + 3*674*FLEN/8, x4, x1, x2)

inst_17571:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x847fffe0; valaddr_reg:x3; val_offset:52713*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52713*0 + 3*675*FLEN/8, x4, x1, x2)

inst_17572:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x847ffff0; valaddr_reg:x3; val_offset:52716*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52716*0 + 3*676*FLEN/8, x4, x1, x2)

inst_17573:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x847ffff8; valaddr_reg:x3; val_offset:52719*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52719*0 + 3*677*FLEN/8, x4, x1, x2)

inst_17574:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x847ffffc; valaddr_reg:x3; val_offset:52722*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52722*0 + 3*678*FLEN/8, x4, x1, x2)

inst_17575:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x847ffffe; valaddr_reg:x3; val_offset:52725*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52725*0 + 3*679*FLEN/8, x4, x1, x2)

inst_17576:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ee68b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eaee68b; op2val:0x80000000;
op3val:0x847fffff; valaddr_reg:x3; val_offset:52728*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52728*0 + 3*680*FLEN/8, x4, x1, x2)

inst_17577:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x3f800001; valaddr_reg:x3; val_offset:52731*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52731*0 + 3*681*FLEN/8, x4, x1, x2)

inst_17578:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x3f800003; valaddr_reg:x3; val_offset:52734*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52734*0 + 3*682*FLEN/8, x4, x1, x2)

inst_17579:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x3f800007; valaddr_reg:x3; val_offset:52737*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52737*0 + 3*683*FLEN/8, x4, x1, x2)

inst_17580:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x3f999999; valaddr_reg:x3; val_offset:52740*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52740*0 + 3*684*FLEN/8, x4, x1, x2)

inst_17581:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:52743*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52743*0 + 3*685*FLEN/8, x4, x1, x2)

inst_17582:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:52746*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52746*0 + 3*686*FLEN/8, x4, x1, x2)

inst_17583:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:52749*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52749*0 + 3*687*FLEN/8, x4, x1, x2)

inst_17584:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:52752*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52752*0 + 3*688*FLEN/8, x4, x1, x2)

inst_17585:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:52755*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52755*0 + 3*689*FLEN/8, x4, x1, x2)

inst_17586:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:52758*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52758*0 + 3*690*FLEN/8, x4, x1, x2)

inst_17587:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:52761*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52761*0 + 3*691*FLEN/8, x4, x1, x2)

inst_17588:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:52764*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52764*0 + 3*692*FLEN/8, x4, x1, x2)

inst_17589:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:52767*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52767*0 + 3*693*FLEN/8, x4, x1, x2)

inst_17590:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:52770*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52770*0 + 3*694*FLEN/8, x4, x1, x2)

inst_17591:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:52773*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52773*0 + 3*695*FLEN/8, x4, x1, x2)

inst_17592:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:52776*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52776*0 + 3*696*FLEN/8, x4, x1, x2)

inst_17593:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4e800000; valaddr_reg:x3; val_offset:52779*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52779*0 + 3*697*FLEN/8, x4, x1, x2)

inst_17594:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4e800001; valaddr_reg:x3; val_offset:52782*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52782*0 + 3*698*FLEN/8, x4, x1, x2)

inst_17595:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4e800003; valaddr_reg:x3; val_offset:52785*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52785*0 + 3*699*FLEN/8, x4, x1, x2)

inst_17596:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4e800007; valaddr_reg:x3; val_offset:52788*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52788*0 + 3*700*FLEN/8, x4, x1, x2)

inst_17597:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4e80000f; valaddr_reg:x3; val_offset:52791*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52791*0 + 3*701*FLEN/8, x4, x1, x2)

inst_17598:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4e80001f; valaddr_reg:x3; val_offset:52794*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52794*0 + 3*702*FLEN/8, x4, x1, x2)

inst_17599:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4e80003f; valaddr_reg:x3; val_offset:52797*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52797*0 + 3*703*FLEN/8, x4, x1, x2)

inst_17600:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4e80007f; valaddr_reg:x3; val_offset:52800*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52800*0 + 3*704*FLEN/8, x4, x1, x2)

inst_17601:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4e8000ff; valaddr_reg:x3; val_offset:52803*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52803*0 + 3*705*FLEN/8, x4, x1, x2)

inst_17602:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4e8001ff; valaddr_reg:x3; val_offset:52806*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52806*0 + 3*706*FLEN/8, x4, x1, x2)

inst_17603:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4e8003ff; valaddr_reg:x3; val_offset:52809*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52809*0 + 3*707*FLEN/8, x4, x1, x2)

inst_17604:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4e8007ff; valaddr_reg:x3; val_offset:52812*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52812*0 + 3*708*FLEN/8, x4, x1, x2)

inst_17605:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4e800fff; valaddr_reg:x3; val_offset:52815*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52815*0 + 3*709*FLEN/8, x4, x1, x2)

inst_17606:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4e801fff; valaddr_reg:x3; val_offset:52818*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52818*0 + 3*710*FLEN/8, x4, x1, x2)

inst_17607:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4e803fff; valaddr_reg:x3; val_offset:52821*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52821*0 + 3*711*FLEN/8, x4, x1, x2)

inst_17608:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4e807fff; valaddr_reg:x3; val_offset:52824*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52824*0 + 3*712*FLEN/8, x4, x1, x2)

inst_17609:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4e80ffff; valaddr_reg:x3; val_offset:52827*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52827*0 + 3*713*FLEN/8, x4, x1, x2)

inst_17610:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4e81ffff; valaddr_reg:x3; val_offset:52830*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52830*0 + 3*714*FLEN/8, x4, x1, x2)

inst_17611:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4e83ffff; valaddr_reg:x3; val_offset:52833*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52833*0 + 3*715*FLEN/8, x4, x1, x2)

inst_17612:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4e87ffff; valaddr_reg:x3; val_offset:52836*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52836*0 + 3*716*FLEN/8, x4, x1, x2)

inst_17613:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4e8fffff; valaddr_reg:x3; val_offset:52839*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52839*0 + 3*717*FLEN/8, x4, x1, x2)

inst_17614:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4e9fffff; valaddr_reg:x3; val_offset:52842*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52842*0 + 3*718*FLEN/8, x4, x1, x2)

inst_17615:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4ebfffff; valaddr_reg:x3; val_offset:52845*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52845*0 + 3*719*FLEN/8, x4, x1, x2)

inst_17616:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4ec00000; valaddr_reg:x3; val_offset:52848*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52848*0 + 3*720*FLEN/8, x4, x1, x2)

inst_17617:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4ee00000; valaddr_reg:x3; val_offset:52851*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52851*0 + 3*721*FLEN/8, x4, x1, x2)

inst_17618:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4ef00000; valaddr_reg:x3; val_offset:52854*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52854*0 + 3*722*FLEN/8, x4, x1, x2)

inst_17619:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4ef80000; valaddr_reg:x3; val_offset:52857*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52857*0 + 3*723*FLEN/8, x4, x1, x2)

inst_17620:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4efc0000; valaddr_reg:x3; val_offset:52860*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52860*0 + 3*724*FLEN/8, x4, x1, x2)

inst_17621:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4efe0000; valaddr_reg:x3; val_offset:52863*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52863*0 + 3*725*FLEN/8, x4, x1, x2)

inst_17622:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4eff0000; valaddr_reg:x3; val_offset:52866*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52866*0 + 3*726*FLEN/8, x4, x1, x2)

inst_17623:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4eff8000; valaddr_reg:x3; val_offset:52869*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52869*0 + 3*727*FLEN/8, x4, x1, x2)

inst_17624:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4effc000; valaddr_reg:x3; val_offset:52872*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52872*0 + 3*728*FLEN/8, x4, x1, x2)

inst_17625:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4effe000; valaddr_reg:x3; val_offset:52875*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52875*0 + 3*729*FLEN/8, x4, x1, x2)

inst_17626:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4efff000; valaddr_reg:x3; val_offset:52878*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52878*0 + 3*730*FLEN/8, x4, x1, x2)

inst_17627:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4efff800; valaddr_reg:x3; val_offset:52881*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52881*0 + 3*731*FLEN/8, x4, x1, x2)

inst_17628:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4efffc00; valaddr_reg:x3; val_offset:52884*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52884*0 + 3*732*FLEN/8, x4, x1, x2)

inst_17629:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4efffe00; valaddr_reg:x3; val_offset:52887*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52887*0 + 3*733*FLEN/8, x4, x1, x2)

inst_17630:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4effff00; valaddr_reg:x3; val_offset:52890*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52890*0 + 3*734*FLEN/8, x4, x1, x2)

inst_17631:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4effff80; valaddr_reg:x3; val_offset:52893*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52893*0 + 3*735*FLEN/8, x4, x1, x2)

inst_17632:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4effffc0; valaddr_reg:x3; val_offset:52896*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52896*0 + 3*736*FLEN/8, x4, x1, x2)

inst_17633:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4effffe0; valaddr_reg:x3; val_offset:52899*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52899*0 + 3*737*FLEN/8, x4, x1, x2)

inst_17634:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4efffff0; valaddr_reg:x3; val_offset:52902*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52902*0 + 3*738*FLEN/8, x4, x1, x2)

inst_17635:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4efffff8; valaddr_reg:x3; val_offset:52905*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52905*0 + 3*739*FLEN/8, x4, x1, x2)

inst_17636:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4efffffc; valaddr_reg:x3; val_offset:52908*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52908*0 + 3*740*FLEN/8, x4, x1, x2)

inst_17637:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4efffffe; valaddr_reg:x3; val_offset:52911*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52911*0 + 3*741*FLEN/8, x4, x1, x2)

inst_17638:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fdaba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5d2b00 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eafdaba; op2val:0x5d2b00;
op3val:0x4effffff; valaddr_reg:x3; val_offset:52914*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52914*0 + 3*742*FLEN/8, x4, x1, x2)

inst_17639:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x300757 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb00757; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:52917*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52917*0 + 3*743*FLEN/8, x4, x1, x2)

inst_17640:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x300757 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb00757; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:52920*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52920*0 + 3*744*FLEN/8, x4, x1, x2)

inst_17641:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x300757 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb00757; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:52923*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52923*0 + 3*745*FLEN/8, x4, x1, x2)

inst_17642:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x300757 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb00757; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:52926*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52926*0 + 3*746*FLEN/8, x4, x1, x2)

inst_17643:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x300757 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb00757; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:52929*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52929*0 + 3*747*FLEN/8, x4, x1, x2)

inst_17644:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x300757 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb00757; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:52932*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52932*0 + 3*748*FLEN/8, x4, x1, x2)

inst_17645:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x300757 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb00757; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:52935*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52935*0 + 3*749*FLEN/8, x4, x1, x2)

inst_17646:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x300757 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb00757; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:52938*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52938*0 + 3*750*FLEN/8, x4, x1, x2)

inst_17647:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x300757 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb00757; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:52941*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52941*0 + 3*751*FLEN/8, x4, x1, x2)

inst_17648:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x300757 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb00757; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:52944*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52944*0 + 3*752*FLEN/8, x4, x1, x2)

inst_17649:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x300757 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb00757; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:52947*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52947*0 + 3*753*FLEN/8, x4, x1, x2)

inst_17650:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x300757 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb00757; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:52950*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52950*0 + 3*754*FLEN/8, x4, x1, x2)

inst_17651:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x300757 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb00757; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:52953*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52953*0 + 3*755*FLEN/8, x4, x1, x2)

inst_17652:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x300757 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb00757; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:52956*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52956*0 + 3*756*FLEN/8, x4, x1, x2)

inst_17653:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x300757 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb00757; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:52959*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52959*0 + 3*757*FLEN/8, x4, x1, x2)

inst_17654:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x300757 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb00757; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:52962*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52962*0 + 3*758*FLEN/8, x4, x1, x2)

inst_17655:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x300757 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb00757; op2val:0x80000000;
op3val:0x8d000000; valaddr_reg:x3; val_offset:52965*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52965*0 + 3*759*FLEN/8, x4, x1, x2)

inst_17656:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x300757 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb00757; op2val:0x80000000;
op3val:0x8d000001; valaddr_reg:x3; val_offset:52968*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52968*0 + 3*760*FLEN/8, x4, x1, x2)

inst_17657:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x300757 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb00757; op2val:0x80000000;
op3val:0x8d000003; valaddr_reg:x3; val_offset:52971*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52971*0 + 3*761*FLEN/8, x4, x1, x2)

inst_17658:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x300757 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb00757; op2val:0x80000000;
op3val:0x8d000007; valaddr_reg:x3; val_offset:52974*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52974*0 + 3*762*FLEN/8, x4, x1, x2)

inst_17659:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x300757 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb00757; op2val:0x80000000;
op3val:0x8d00000f; valaddr_reg:x3; val_offset:52977*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52977*0 + 3*763*FLEN/8, x4, x1, x2)

inst_17660:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x300757 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb00757; op2val:0x80000000;
op3val:0x8d00001f; valaddr_reg:x3; val_offset:52980*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52980*0 + 3*764*FLEN/8, x4, x1, x2)

inst_17661:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x300757 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb00757; op2val:0x80000000;
op3val:0x8d00003f; valaddr_reg:x3; val_offset:52983*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52983*0 + 3*765*FLEN/8, x4, x1, x2)

inst_17662:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x300757 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb00757; op2val:0x80000000;
op3val:0x8d00007f; valaddr_reg:x3; val_offset:52986*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52986*0 + 3*766*FLEN/8, x4, x1, x2)

inst_17663:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x300757 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb00757; op2val:0x80000000;
op3val:0x8d0000ff; valaddr_reg:x3; val_offset:52989*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 52989*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1056964609,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1056964611,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1056964615,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1056964623,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1056964639,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1056964671,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1056964735,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1056964863,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1056965119,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1056965631,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1056966655,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1056968703,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1056972799,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1056980991,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1056997375,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1057030143,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1057095679,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1057226751,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1057488895,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1058013183,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1059061759,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1061158911,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1061158912,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1063256064,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1064304640,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1064828928,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1065091072,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1065222144,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1065287680,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1065320448,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1065336832,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1065345024,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1065349120,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1065351168,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1065352192,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1065352704,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1065352960,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1065353088,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1065353152,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1065353184,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1065353200,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1065353208,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1065353212,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1065353214,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1065353215,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881024,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881025,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881027,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881031,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881039,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881055,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881087,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881151,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881279,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881535,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234882047,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234883071,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234885119,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234889215,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234897407,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234913791,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234946559,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(235012095,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(235143167,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(235405311,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(235929599,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(236978175,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(239075327,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(239075328,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(241172480,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(242221056,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(242745344,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243007488,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243138560,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243204096,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243236864,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243253248,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243261440,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243265536,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243267584,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243268608,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269120,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269376,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269504,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269568,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269600,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269616,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269624,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269628,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269630,32,FLEN)
NAN_BOXED(2125069958,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269631,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157549977,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2158269001,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159227699,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159467373,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159786939,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160346180,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160905420,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2161864118,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162583142,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163062491,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815296,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815297,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815299,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815303,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815311,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815327,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815359,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815423,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815551,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815807,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197816319,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197817343,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197819391,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197823487,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197831679,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197848063,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197880831,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197946367,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2198077439,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2198339583,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2198863871,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2199912447,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2202009599,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2202009600,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2204106752,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2205155328,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2205679616,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2205941760,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206072832,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206138368,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206171136,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206187520,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206195712,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206199808,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206201856,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206202880,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203392,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203648,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203776,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203840,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203872,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203888,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203896,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203900,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203902,32,FLEN)
NAN_BOXED(2125117427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203903,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976064,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976065,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976067,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976071,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976079,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976095,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976127,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976191,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976319,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976575,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373977087,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373978111,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373980159,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373984255,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373992447,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2374008831,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2374041599,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2374107135,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2374238207,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2374500351,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2375024639,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2376073215,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2378170367,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2378170368,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2380267520,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2381316096,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2381840384,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382102528,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382233600,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382299136,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382331904,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382348288,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382356480,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382360576,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382362624,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382363648,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364160,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364416,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364544,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364608,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364640,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364656,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364664,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364668,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364670,32,FLEN)
NAN_BOXED(2125127731,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364671,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3825205248,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3825205249,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3825205251,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3825205255,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3825205263,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3825205279,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3825205311,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3825205375,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3825205503,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3825205759,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3825206271,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3825207295,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3825209343,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3825213439,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3825221631,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3825238015,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3825270783,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3825336319,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3825467391,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3825729535,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3826253823,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3827302399,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3829399551,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3829399552,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3831496704,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3832545280,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3833069568,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3833331712,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3833462784,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3833528320,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3833561088,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3833577472,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3833585664,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3833589760,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3833591808,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3833592832,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3833593344,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3833593600,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3833593728,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3833593792,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3833593824,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3833593840,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3833593848,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3833593852,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3833593854,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(3833593855,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2125157309,32,FLEN)
NAN_BOXED(3225371269,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2894069760,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2894069761,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2894069763,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2894069767,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2894069775,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2894069791,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2894069823,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2894069887,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2894070015,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2894070271,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2894070783,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2894071807,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2894073855,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2894077951,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2894086143,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2894102527,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2894135295,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2894200831,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2894331903,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2894594047,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2895118335,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2896166911,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2898264063,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2898264064,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2900361216,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2901409792,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2901934080,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2902196224,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2902327296,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2902392832,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2902425600,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2902441984,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2902450176,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2902454272,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2902456320,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2902457344,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2902457856,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2902458112,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2902458240,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2902458304,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2902458336,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2902458352,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2902458360,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2902458364,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2902458366,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(2902458367,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2125162351,32,FLEN)
NAN_BOXED(2153748038,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535552,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535553,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535555,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535559,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535567,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535583,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535615,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535679,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535807,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256536063,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256536575,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256537599,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256539647,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256543743,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256551935,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256568319,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256601087,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256666623,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256797695,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2257059839,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2257584127,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2258632703,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2260729855,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2260729856,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2262827008,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2263875584,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264399872,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264662016,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264793088,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264858624,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264891392,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264907776,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264915968,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264920064,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264922112,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264923136,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264923648,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264923904,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924032,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924096,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924128,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924144,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924152,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924156,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924158,32,FLEN)
NAN_BOXED(2125202738,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924159,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2793406464,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2793406465,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2793406467,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2793406471,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2793406479,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2793406495,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2793406527,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2793406591,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2793406719,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2793406975,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2793407487,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2793408511,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2793410559,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2793414655,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2793422847,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2793439231,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2793471999,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2793537535,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2793668607,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2793930751,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2794455039,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2795503615,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2797600767,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2797600768,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2799697920,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2800746496,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2801270784,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2801532928,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2801664000,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2801729536,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2801762304,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2801778688,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2801786880,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2801790976,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2801793024,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2801794048,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2801794560,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2801794816,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2801794944,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2801795008,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2801795040,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2801795056,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2801795064,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2801795068,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2801795070,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(2801795071,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2125206910,32,FLEN)
NAN_BOXED(2153723287,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3867148288,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3867148289,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3867148291,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3867148295,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3867148303,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3867148319,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3867148351,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3867148415,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3867148543,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3867148799,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3867149311,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3867150335,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3867152383,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3867156479,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3867164671,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3867181055,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3867213823,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3867279359,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3867410431,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3867672575,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3868196863,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3869245439,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3871342591,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3871342592,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3873439744,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3874488320,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3875012608,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3875274752,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3875405824,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3875471360,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3875504128,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3875520512,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3875528704,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3875532800,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3875534848,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3875535872,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3875536384,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3875536640,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3875536768,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3875536832,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3875536864,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3875536880,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3875536888,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3875536892,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3875536894,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(3875536895,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2125340583,32,FLEN)
NAN_BOXED(3225169958,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1803550720,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1803550721,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1803550723,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1803550727,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1803550735,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1803550751,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1803550783,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1803550847,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1803550975,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1803551231,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1803551743,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1803552767,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1803554815,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1803558911,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1803567103,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1803583487,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1803616255,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1803681791,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1803812863,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1804075007,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1804599295,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1805647871,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1807745023,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1807745024,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1809842176,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1810890752,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1811415040,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1811677184,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1811808256,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1811873792,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1811906560,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1811922944,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1811931136,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1811935232,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1811937280,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1811938304,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1811938816,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1811939072,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1811939200,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1811939264,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1811939296,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1811939312,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1811939320,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1811939324,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1811939326,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(1811939327,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2125355709,32,FLEN)
NAN_BOXED(1077669985,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157549977,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2158269001,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159227699,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159467373,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159786939,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160346180,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160905420,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2161864118,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162583142,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163062491,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592512,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592513,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592515,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592519,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592527,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592543,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592575,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592639,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592767,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214593023,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214593535,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214594559,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214596607,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214600703,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214608895,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214625279,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214658047,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214723583,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214854655,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2215116799,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2215641087,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2216689663,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2218786815,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2218786816,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2220883968,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2221932544,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222456832,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222718976,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222850048,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222915584,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222948352,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222964736,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222972928,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222977024,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222979072,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222980096,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222980608,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222980864,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222980992,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981056,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981088,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981104,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981112,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981116,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981118,32,FLEN)
NAN_BOXED(2125391499,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981119,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1317011456,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1317011457,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1317011459,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1317011463,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1317011471,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1317011487,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1317011519,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1317011583,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1317011711,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1317011967,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1317012479,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1317013503,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1317015551,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1317019647,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1317027839,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1317044223,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1317076991,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1317142527,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1317273599,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1317535743,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1318060031,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1319108607,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1321205759,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1321205760,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1323302912,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1324351488,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1324875776,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1325137920,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1325268992,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1325334528,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1325367296,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1325383680,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1325391872,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1325395968,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1325398016,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1325399040,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1325399552,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1325399808,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1325399936,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1325400000,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1325400032,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1325400048,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1325400056,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1325400060,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1325400062,32,FLEN)
NAN_BOXED(2125454010,32,FLEN)
NAN_BOXED(6105856,32,FLEN)
NAN_BOXED(1325400063,32,FLEN)
NAN_BOXED(2125465431,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2125465431,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2125465431,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2125465431,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2125465431,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2125465431,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2125465431,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2125465431,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2125465431,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2125465431,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2125465431,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2125465431,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2125465431,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2125465431,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2125465431,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2125465431,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2125465431,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587456,32,FLEN)
NAN_BOXED(2125465431,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587457,32,FLEN)
NAN_BOXED(2125465431,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587459,32,FLEN)
NAN_BOXED(2125465431,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587463,32,FLEN)
NAN_BOXED(2125465431,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587471,32,FLEN)
NAN_BOXED(2125465431,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587487,32,FLEN)
NAN_BOXED(2125465431,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587519,32,FLEN)
NAN_BOXED(2125465431,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587583,32,FLEN)
NAN_BOXED(2125465431,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587711,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
