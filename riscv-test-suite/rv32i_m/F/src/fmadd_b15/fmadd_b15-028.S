
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:17:59 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmadd.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmadd_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmadd_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmadd_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_20736:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xed807fff; valaddr_reg:x3; val_offset:62208*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62208*0 + 3*0*FLEN/8, x4, x1, x2)

inst_20737:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xed80ffff; valaddr_reg:x3; val_offset:62211*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62211*0 + 3*1*FLEN/8, x4, x1, x2)

inst_20738:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xed81ffff; valaddr_reg:x3; val_offset:62214*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62214*0 + 3*2*FLEN/8, x4, x1, x2)

inst_20739:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xed83ffff; valaddr_reg:x3; val_offset:62217*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62217*0 + 3*3*FLEN/8, x4, x1, x2)

inst_20740:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xed87ffff; valaddr_reg:x3; val_offset:62220*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62220*0 + 3*4*FLEN/8, x4, x1, x2)

inst_20741:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xed8fffff; valaddr_reg:x3; val_offset:62223*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62223*0 + 3*5*FLEN/8, x4, x1, x2)

inst_20742:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xed9fffff; valaddr_reg:x3; val_offset:62226*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62226*0 + 3*6*FLEN/8, x4, x1, x2)

inst_20743:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xedbfffff; valaddr_reg:x3; val_offset:62229*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62229*0 + 3*7*FLEN/8, x4, x1, x2)

inst_20744:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xedc00000; valaddr_reg:x3; val_offset:62232*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62232*0 + 3*8*FLEN/8, x4, x1, x2)

inst_20745:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xede00000; valaddr_reg:x3; val_offset:62235*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62235*0 + 3*9*FLEN/8, x4, x1, x2)

inst_20746:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xedf00000; valaddr_reg:x3; val_offset:62238*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62238*0 + 3*10*FLEN/8, x4, x1, x2)

inst_20747:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xedf80000; valaddr_reg:x3; val_offset:62241*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62241*0 + 3*11*FLEN/8, x4, x1, x2)

inst_20748:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xedfc0000; valaddr_reg:x3; val_offset:62244*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62244*0 + 3*12*FLEN/8, x4, x1, x2)

inst_20749:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xedfe0000; valaddr_reg:x3; val_offset:62247*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62247*0 + 3*13*FLEN/8, x4, x1, x2)

inst_20750:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xedff0000; valaddr_reg:x3; val_offset:62250*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62250*0 + 3*14*FLEN/8, x4, x1, x2)

inst_20751:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xedff8000; valaddr_reg:x3; val_offset:62253*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62253*0 + 3*15*FLEN/8, x4, x1, x2)

inst_20752:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xedffc000; valaddr_reg:x3; val_offset:62256*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62256*0 + 3*16*FLEN/8, x4, x1, x2)

inst_20753:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xedffe000; valaddr_reg:x3; val_offset:62259*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62259*0 + 3*17*FLEN/8, x4, x1, x2)

inst_20754:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xedfff000; valaddr_reg:x3; val_offset:62262*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62262*0 + 3*18*FLEN/8, x4, x1, x2)

inst_20755:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xedfff800; valaddr_reg:x3; val_offset:62265*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62265*0 + 3*19*FLEN/8, x4, x1, x2)

inst_20756:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xedfffc00; valaddr_reg:x3; val_offset:62268*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62268*0 + 3*20*FLEN/8, x4, x1, x2)

inst_20757:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xedfffe00; valaddr_reg:x3; val_offset:62271*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62271*0 + 3*21*FLEN/8, x4, x1, x2)

inst_20758:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xedffff00; valaddr_reg:x3; val_offset:62274*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62274*0 + 3*22*FLEN/8, x4, x1, x2)

inst_20759:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xedffff80; valaddr_reg:x3; val_offset:62277*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62277*0 + 3*23*FLEN/8, x4, x1, x2)

inst_20760:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xedffffc0; valaddr_reg:x3; val_offset:62280*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62280*0 + 3*24*FLEN/8, x4, x1, x2)

inst_20761:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xedffffe0; valaddr_reg:x3; val_offset:62283*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62283*0 + 3*25*FLEN/8, x4, x1, x2)

inst_20762:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xedfffff0; valaddr_reg:x3; val_offset:62286*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62286*0 + 3*26*FLEN/8, x4, x1, x2)

inst_20763:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xedfffff8; valaddr_reg:x3; val_offset:62289*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62289*0 + 3*27*FLEN/8, x4, x1, x2)

inst_20764:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xedfffffc; valaddr_reg:x3; val_offset:62292*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62292*0 + 3*28*FLEN/8, x4, x1, x2)

inst_20765:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xedfffffe; valaddr_reg:x3; val_offset:62295*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62295*0 + 3*29*FLEN/8, x4, x1, x2)

inst_20766:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xdb and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xedffffff; valaddr_reg:x3; val_offset:62298*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62298*0 + 3*30*FLEN/8, x4, x1, x2)

inst_20767:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xff000001; valaddr_reg:x3; val_offset:62301*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62301*0 + 3*31*FLEN/8, x4, x1, x2)

inst_20768:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xff000003; valaddr_reg:x3; val_offset:62304*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62304*0 + 3*32*FLEN/8, x4, x1, x2)

inst_20769:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xff000007; valaddr_reg:x3; val_offset:62307*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62307*0 + 3*33*FLEN/8, x4, x1, x2)

inst_20770:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xff199999; valaddr_reg:x3; val_offset:62310*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62310*0 + 3*34*FLEN/8, x4, x1, x2)

inst_20771:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xff249249; valaddr_reg:x3; val_offset:62313*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62313*0 + 3*35*FLEN/8, x4, x1, x2)

inst_20772:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xff333333; valaddr_reg:x3; val_offset:62316*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62316*0 + 3*36*FLEN/8, x4, x1, x2)

inst_20773:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:62319*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62319*0 + 3*37*FLEN/8, x4, x1, x2)

inst_20774:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:62322*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62322*0 + 3*38*FLEN/8, x4, x1, x2)

inst_20775:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xff444444; valaddr_reg:x3; val_offset:62325*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62325*0 + 3*39*FLEN/8, x4, x1, x2)

inst_20776:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:62328*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62328*0 + 3*40*FLEN/8, x4, x1, x2)

inst_20777:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:62331*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62331*0 + 3*41*FLEN/8, x4, x1, x2)

inst_20778:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xff666666; valaddr_reg:x3; val_offset:62334*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62334*0 + 3*42*FLEN/8, x4, x1, x2)

inst_20779:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:62337*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62337*0 + 3*43*FLEN/8, x4, x1, x2)

inst_20780:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:62340*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62340*0 + 3*44*FLEN/8, x4, x1, x2)

inst_20781:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:62343*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62343*0 + 3*45*FLEN/8, x4, x1, x2)

inst_20782:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515c22 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1c83e1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed15c22; op2val:0xc01c83e1;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:62346*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62346*0 + 3*46*FLEN/8, x4, x1, x2)

inst_20783:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:62349*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62349*0 + 3*47*FLEN/8, x4, x1, x2)

inst_20784:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:62352*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62352*0 + 3*48*FLEN/8, x4, x1, x2)

inst_20785:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:62355*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62355*0 + 3*49*FLEN/8, x4, x1, x2)

inst_20786:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:62358*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62358*0 + 3*50*FLEN/8, x4, x1, x2)

inst_20787:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:62361*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62361*0 + 3*51*FLEN/8, x4, x1, x2)

inst_20788:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:62364*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62364*0 + 3*52*FLEN/8, x4, x1, x2)

inst_20789:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:62367*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62367*0 + 3*53*FLEN/8, x4, x1, x2)

inst_20790:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:62370*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62370*0 + 3*54*FLEN/8, x4, x1, x2)

inst_20791:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:62373*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62373*0 + 3*55*FLEN/8, x4, x1, x2)

inst_20792:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:62376*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62376*0 + 3*56*FLEN/8, x4, x1, x2)

inst_20793:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:62379*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62379*0 + 3*57*FLEN/8, x4, x1, x2)

inst_20794:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:62382*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62382*0 + 3*58*FLEN/8, x4, x1, x2)

inst_20795:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:62385*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62385*0 + 3*59*FLEN/8, x4, x1, x2)

inst_20796:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:62388*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62388*0 + 3*60*FLEN/8, x4, x1, x2)

inst_20797:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:62391*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62391*0 + 3*61*FLEN/8, x4, x1, x2)

inst_20798:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:62394*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62394*0 + 3*62*FLEN/8, x4, x1, x2)

inst_20799:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8a800000; valaddr_reg:x3; val_offset:62397*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62397*0 + 3*63*FLEN/8, x4, x1, x2)

inst_20800:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8a800001; valaddr_reg:x3; val_offset:62400*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62400*0 + 3*64*FLEN/8, x4, x1, x2)

inst_20801:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8a800003; valaddr_reg:x3; val_offset:62403*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62403*0 + 3*65*FLEN/8, x4, x1, x2)

inst_20802:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8a800007; valaddr_reg:x3; val_offset:62406*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62406*0 + 3*66*FLEN/8, x4, x1, x2)

inst_20803:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8a80000f; valaddr_reg:x3; val_offset:62409*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62409*0 + 3*67*FLEN/8, x4, x1, x2)

inst_20804:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8a80001f; valaddr_reg:x3; val_offset:62412*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62412*0 + 3*68*FLEN/8, x4, x1, x2)

inst_20805:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8a80003f; valaddr_reg:x3; val_offset:62415*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62415*0 + 3*69*FLEN/8, x4, x1, x2)

inst_20806:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8a80007f; valaddr_reg:x3; val_offset:62418*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62418*0 + 3*70*FLEN/8, x4, x1, x2)

inst_20807:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8a8000ff; valaddr_reg:x3; val_offset:62421*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62421*0 + 3*71*FLEN/8, x4, x1, x2)

inst_20808:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8a8001ff; valaddr_reg:x3; val_offset:62424*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62424*0 + 3*72*FLEN/8, x4, x1, x2)

inst_20809:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8a8003ff; valaddr_reg:x3; val_offset:62427*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62427*0 + 3*73*FLEN/8, x4, x1, x2)

inst_20810:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8a8007ff; valaddr_reg:x3; val_offset:62430*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62430*0 + 3*74*FLEN/8, x4, x1, x2)

inst_20811:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8a800fff; valaddr_reg:x3; val_offset:62433*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62433*0 + 3*75*FLEN/8, x4, x1, x2)

inst_20812:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8a801fff; valaddr_reg:x3; val_offset:62436*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62436*0 + 3*76*FLEN/8, x4, x1, x2)

inst_20813:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8a803fff; valaddr_reg:x3; val_offset:62439*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62439*0 + 3*77*FLEN/8, x4, x1, x2)

inst_20814:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8a807fff; valaddr_reg:x3; val_offset:62442*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62442*0 + 3*78*FLEN/8, x4, x1, x2)

inst_20815:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8a80ffff; valaddr_reg:x3; val_offset:62445*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62445*0 + 3*79*FLEN/8, x4, x1, x2)

inst_20816:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8a81ffff; valaddr_reg:x3; val_offset:62448*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62448*0 + 3*80*FLEN/8, x4, x1, x2)

inst_20817:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8a83ffff; valaddr_reg:x3; val_offset:62451*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62451*0 + 3*81*FLEN/8, x4, x1, x2)

inst_20818:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8a87ffff; valaddr_reg:x3; val_offset:62454*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62454*0 + 3*82*FLEN/8, x4, x1, x2)

inst_20819:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8a8fffff; valaddr_reg:x3; val_offset:62457*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62457*0 + 3*83*FLEN/8, x4, x1, x2)

inst_20820:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8a9fffff; valaddr_reg:x3; val_offset:62460*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62460*0 + 3*84*FLEN/8, x4, x1, x2)

inst_20821:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8abfffff; valaddr_reg:x3; val_offset:62463*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62463*0 + 3*85*FLEN/8, x4, x1, x2)

inst_20822:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8ac00000; valaddr_reg:x3; val_offset:62466*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62466*0 + 3*86*FLEN/8, x4, x1, x2)

inst_20823:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8ae00000; valaddr_reg:x3; val_offset:62469*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62469*0 + 3*87*FLEN/8, x4, x1, x2)

inst_20824:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8af00000; valaddr_reg:x3; val_offset:62472*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62472*0 + 3*88*FLEN/8, x4, x1, x2)

inst_20825:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8af80000; valaddr_reg:x3; val_offset:62475*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62475*0 + 3*89*FLEN/8, x4, x1, x2)

inst_20826:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8afc0000; valaddr_reg:x3; val_offset:62478*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62478*0 + 3*90*FLEN/8, x4, x1, x2)

inst_20827:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8afe0000; valaddr_reg:x3; val_offset:62481*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62481*0 + 3*91*FLEN/8, x4, x1, x2)

inst_20828:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8aff0000; valaddr_reg:x3; val_offset:62484*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62484*0 + 3*92*FLEN/8, x4, x1, x2)

inst_20829:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8aff8000; valaddr_reg:x3; val_offset:62487*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62487*0 + 3*93*FLEN/8, x4, x1, x2)

inst_20830:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8affc000; valaddr_reg:x3; val_offset:62490*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62490*0 + 3*94*FLEN/8, x4, x1, x2)

inst_20831:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8affe000; valaddr_reg:x3; val_offset:62493*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62493*0 + 3*95*FLEN/8, x4, x1, x2)

inst_20832:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8afff000; valaddr_reg:x3; val_offset:62496*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62496*0 + 3*96*FLEN/8, x4, x1, x2)

inst_20833:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8afff800; valaddr_reg:x3; val_offset:62499*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62499*0 + 3*97*FLEN/8, x4, x1, x2)

inst_20834:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8afffc00; valaddr_reg:x3; val_offset:62502*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62502*0 + 3*98*FLEN/8, x4, x1, x2)

inst_20835:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8afffe00; valaddr_reg:x3; val_offset:62505*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62505*0 + 3*99*FLEN/8, x4, x1, x2)

inst_20836:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8affff00; valaddr_reg:x3; val_offset:62508*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62508*0 + 3*100*FLEN/8, x4, x1, x2)

inst_20837:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8affff80; valaddr_reg:x3; val_offset:62511*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62511*0 + 3*101*FLEN/8, x4, x1, x2)

inst_20838:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8affffc0; valaddr_reg:x3; val_offset:62514*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62514*0 + 3*102*FLEN/8, x4, x1, x2)

inst_20839:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8affffe0; valaddr_reg:x3; val_offset:62517*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62517*0 + 3*103*FLEN/8, x4, x1, x2)

inst_20840:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8afffff0; valaddr_reg:x3; val_offset:62520*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62520*0 + 3*104*FLEN/8, x4, x1, x2)

inst_20841:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8afffff8; valaddr_reg:x3; val_offset:62523*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62523*0 + 3*105*FLEN/8, x4, x1, x2)

inst_20842:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8afffffc; valaddr_reg:x3; val_offset:62526*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62526*0 + 3*106*FLEN/8, x4, x1, x2)

inst_20843:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8afffffe; valaddr_reg:x3; val_offset:62529*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62529*0 + 3*107*FLEN/8, x4, x1, x2)

inst_20844:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed237a1; op2val:0x80000000;
op3val:0x8affffff; valaddr_reg:x3; val_offset:62532*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62532*0 + 3*108*FLEN/8, x4, x1, x2)

inst_20845:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:62535*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62535*0 + 3*109*FLEN/8, x4, x1, x2)

inst_20846:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:62538*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62538*0 + 3*110*FLEN/8, x4, x1, x2)

inst_20847:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:62541*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62541*0 + 3*111*FLEN/8, x4, x1, x2)

inst_20848:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:62544*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62544*0 + 3*112*FLEN/8, x4, x1, x2)

inst_20849:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:62547*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62547*0 + 3*113*FLEN/8, x4, x1, x2)

inst_20850:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:62550*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62550*0 + 3*114*FLEN/8, x4, x1, x2)

inst_20851:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:62553*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62553*0 + 3*115*FLEN/8, x4, x1, x2)

inst_20852:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:62556*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62556*0 + 3*116*FLEN/8, x4, x1, x2)

inst_20853:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:62559*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62559*0 + 3*117*FLEN/8, x4, x1, x2)

inst_20854:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:62562*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62562*0 + 3*118*FLEN/8, x4, x1, x2)

inst_20855:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:62565*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62565*0 + 3*119*FLEN/8, x4, x1, x2)

inst_20856:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:62568*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62568*0 + 3*120*FLEN/8, x4, x1, x2)

inst_20857:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:62571*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62571*0 + 3*121*FLEN/8, x4, x1, x2)

inst_20858:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:62574*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62574*0 + 3*122*FLEN/8, x4, x1, x2)

inst_20859:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:62577*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62577*0 + 3*123*FLEN/8, x4, x1, x2)

inst_20860:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:62580*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62580*0 + 3*124*FLEN/8, x4, x1, x2)

inst_20861:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x1000000; valaddr_reg:x3; val_offset:62583*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62583*0 + 3*125*FLEN/8, x4, x1, x2)

inst_20862:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x1000001; valaddr_reg:x3; val_offset:62586*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62586*0 + 3*126*FLEN/8, x4, x1, x2)

inst_20863:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x1000003; valaddr_reg:x3; val_offset:62589*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62589*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_20864:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x1000007; valaddr_reg:x3; val_offset:62592*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62592*0 + 3*128*FLEN/8, x4, x1, x2)

inst_20865:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x100000f; valaddr_reg:x3; val_offset:62595*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62595*0 + 3*129*FLEN/8, x4, x1, x2)

inst_20866:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x100001f; valaddr_reg:x3; val_offset:62598*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62598*0 + 3*130*FLEN/8, x4, x1, x2)

inst_20867:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x100003f; valaddr_reg:x3; val_offset:62601*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62601*0 + 3*131*FLEN/8, x4, x1, x2)

inst_20868:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x100007f; valaddr_reg:x3; val_offset:62604*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62604*0 + 3*132*FLEN/8, x4, x1, x2)

inst_20869:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x10000ff; valaddr_reg:x3; val_offset:62607*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62607*0 + 3*133*FLEN/8, x4, x1, x2)

inst_20870:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x10001ff; valaddr_reg:x3; val_offset:62610*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62610*0 + 3*134*FLEN/8, x4, x1, x2)

inst_20871:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x10003ff; valaddr_reg:x3; val_offset:62613*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62613*0 + 3*135*FLEN/8, x4, x1, x2)

inst_20872:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x10007ff; valaddr_reg:x3; val_offset:62616*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62616*0 + 3*136*FLEN/8, x4, x1, x2)

inst_20873:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x1000fff; valaddr_reg:x3; val_offset:62619*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62619*0 + 3*137*FLEN/8, x4, x1, x2)

inst_20874:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x1001fff; valaddr_reg:x3; val_offset:62622*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62622*0 + 3*138*FLEN/8, x4, x1, x2)

inst_20875:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x1003fff; valaddr_reg:x3; val_offset:62625*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62625*0 + 3*139*FLEN/8, x4, x1, x2)

inst_20876:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x1007fff; valaddr_reg:x3; val_offset:62628*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62628*0 + 3*140*FLEN/8, x4, x1, x2)

inst_20877:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x100ffff; valaddr_reg:x3; val_offset:62631*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62631*0 + 3*141*FLEN/8, x4, x1, x2)

inst_20878:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x101ffff; valaddr_reg:x3; val_offset:62634*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62634*0 + 3*142*FLEN/8, x4, x1, x2)

inst_20879:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x103ffff; valaddr_reg:x3; val_offset:62637*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62637*0 + 3*143*FLEN/8, x4, x1, x2)

inst_20880:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x107ffff; valaddr_reg:x3; val_offset:62640*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62640*0 + 3*144*FLEN/8, x4, x1, x2)

inst_20881:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x10fffff; valaddr_reg:x3; val_offset:62643*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62643*0 + 3*145*FLEN/8, x4, x1, x2)

inst_20882:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x11fffff; valaddr_reg:x3; val_offset:62646*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62646*0 + 3*146*FLEN/8, x4, x1, x2)

inst_20883:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x13fffff; valaddr_reg:x3; val_offset:62649*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62649*0 + 3*147*FLEN/8, x4, x1, x2)

inst_20884:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x1400000; valaddr_reg:x3; val_offset:62652*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62652*0 + 3*148*FLEN/8, x4, x1, x2)

inst_20885:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x1600000; valaddr_reg:x3; val_offset:62655*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62655*0 + 3*149*FLEN/8, x4, x1, x2)

inst_20886:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x1700000; valaddr_reg:x3; val_offset:62658*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62658*0 + 3*150*FLEN/8, x4, x1, x2)

inst_20887:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x1780000; valaddr_reg:x3; val_offset:62661*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62661*0 + 3*151*FLEN/8, x4, x1, x2)

inst_20888:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x17c0000; valaddr_reg:x3; val_offset:62664*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62664*0 + 3*152*FLEN/8, x4, x1, x2)

inst_20889:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x17e0000; valaddr_reg:x3; val_offset:62667*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62667*0 + 3*153*FLEN/8, x4, x1, x2)

inst_20890:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x17f0000; valaddr_reg:x3; val_offset:62670*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62670*0 + 3*154*FLEN/8, x4, x1, x2)

inst_20891:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x17f8000; valaddr_reg:x3; val_offset:62673*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62673*0 + 3*155*FLEN/8, x4, x1, x2)

inst_20892:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x17fc000; valaddr_reg:x3; val_offset:62676*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62676*0 + 3*156*FLEN/8, x4, x1, x2)

inst_20893:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x17fe000; valaddr_reg:x3; val_offset:62679*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62679*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20894:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x17ff000; valaddr_reg:x3; val_offset:62682*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62682*0 + 3*158*FLEN/8, x4, x1, x2)

inst_20895:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x17ff800; valaddr_reg:x3; val_offset:62685*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62685*0 + 3*159*FLEN/8, x4, x1, x2)

inst_20896:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x17ffc00; valaddr_reg:x3; val_offset:62688*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62688*0 + 3*160*FLEN/8, x4, x1, x2)

inst_20897:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x17ffe00; valaddr_reg:x3; val_offset:62691*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62691*0 + 3*161*FLEN/8, x4, x1, x2)

inst_20898:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x17fff00; valaddr_reg:x3; val_offset:62694*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62694*0 + 3*162*FLEN/8, x4, x1, x2)

inst_20899:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x17fff80; valaddr_reg:x3; val_offset:62697*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62697*0 + 3*163*FLEN/8, x4, x1, x2)

inst_20900:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x17fffc0; valaddr_reg:x3; val_offset:62700*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62700*0 + 3*164*FLEN/8, x4, x1, x2)

inst_20901:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x17fffe0; valaddr_reg:x3; val_offset:62703*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62703*0 + 3*165*FLEN/8, x4, x1, x2)

inst_20902:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x17ffff0; valaddr_reg:x3; val_offset:62706*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62706*0 + 3*166*FLEN/8, x4, x1, x2)

inst_20903:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x17ffff8; valaddr_reg:x3; val_offset:62709*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62709*0 + 3*167*FLEN/8, x4, x1, x2)

inst_20904:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x17ffffc; valaddr_reg:x3; val_offset:62712*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62712*0 + 3*168*FLEN/8, x4, x1, x2)

inst_20905:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x17ffffe; valaddr_reg:x3; val_offset:62715*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62715*0 + 3*169*FLEN/8, x4, x1, x2)

inst_20906:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x529e32 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed29e32; op2val:0x0;
op3val:0x17fffff; valaddr_reg:x3; val_offset:62718*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62718*0 + 3*170*FLEN/8, x4, x1, x2)

inst_20907:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb2800000; valaddr_reg:x3; val_offset:62721*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62721*0 + 3*171*FLEN/8, x4, x1, x2)

inst_20908:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb2800001; valaddr_reg:x3; val_offset:62724*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62724*0 + 3*172*FLEN/8, x4, x1, x2)

inst_20909:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb2800003; valaddr_reg:x3; val_offset:62727*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62727*0 + 3*173*FLEN/8, x4, x1, x2)

inst_20910:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb2800007; valaddr_reg:x3; val_offset:62730*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62730*0 + 3*174*FLEN/8, x4, x1, x2)

inst_20911:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb280000f; valaddr_reg:x3; val_offset:62733*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62733*0 + 3*175*FLEN/8, x4, x1, x2)

inst_20912:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb280001f; valaddr_reg:x3; val_offset:62736*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62736*0 + 3*176*FLEN/8, x4, x1, x2)

inst_20913:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb280003f; valaddr_reg:x3; val_offset:62739*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62739*0 + 3*177*FLEN/8, x4, x1, x2)

inst_20914:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb280007f; valaddr_reg:x3; val_offset:62742*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62742*0 + 3*178*FLEN/8, x4, x1, x2)

inst_20915:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb28000ff; valaddr_reg:x3; val_offset:62745*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62745*0 + 3*179*FLEN/8, x4, x1, x2)

inst_20916:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb28001ff; valaddr_reg:x3; val_offset:62748*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62748*0 + 3*180*FLEN/8, x4, x1, x2)

inst_20917:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb28003ff; valaddr_reg:x3; val_offset:62751*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62751*0 + 3*181*FLEN/8, x4, x1, x2)

inst_20918:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb28007ff; valaddr_reg:x3; val_offset:62754*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62754*0 + 3*182*FLEN/8, x4, x1, x2)

inst_20919:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb2800fff; valaddr_reg:x3; val_offset:62757*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62757*0 + 3*183*FLEN/8, x4, x1, x2)

inst_20920:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb2801fff; valaddr_reg:x3; val_offset:62760*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62760*0 + 3*184*FLEN/8, x4, x1, x2)

inst_20921:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb2803fff; valaddr_reg:x3; val_offset:62763*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62763*0 + 3*185*FLEN/8, x4, x1, x2)

inst_20922:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb2807fff; valaddr_reg:x3; val_offset:62766*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62766*0 + 3*186*FLEN/8, x4, x1, x2)

inst_20923:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb280ffff; valaddr_reg:x3; val_offset:62769*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62769*0 + 3*187*FLEN/8, x4, x1, x2)

inst_20924:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb281ffff; valaddr_reg:x3; val_offset:62772*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62772*0 + 3*188*FLEN/8, x4, x1, x2)

inst_20925:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb283ffff; valaddr_reg:x3; val_offset:62775*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62775*0 + 3*189*FLEN/8, x4, x1, x2)

inst_20926:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb287ffff; valaddr_reg:x3; val_offset:62778*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62778*0 + 3*190*FLEN/8, x4, x1, x2)

inst_20927:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb28fffff; valaddr_reg:x3; val_offset:62781*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62781*0 + 3*191*FLEN/8, x4, x1, x2)

inst_20928:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb29fffff; valaddr_reg:x3; val_offset:62784*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62784*0 + 3*192*FLEN/8, x4, x1, x2)

inst_20929:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb2bfffff; valaddr_reg:x3; val_offset:62787*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62787*0 + 3*193*FLEN/8, x4, x1, x2)

inst_20930:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb2c00000; valaddr_reg:x3; val_offset:62790*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62790*0 + 3*194*FLEN/8, x4, x1, x2)

inst_20931:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb2e00000; valaddr_reg:x3; val_offset:62793*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62793*0 + 3*195*FLEN/8, x4, x1, x2)

inst_20932:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb2f00000; valaddr_reg:x3; val_offset:62796*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62796*0 + 3*196*FLEN/8, x4, x1, x2)

inst_20933:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb2f80000; valaddr_reg:x3; val_offset:62799*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62799*0 + 3*197*FLEN/8, x4, x1, x2)

inst_20934:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb2fc0000; valaddr_reg:x3; val_offset:62802*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62802*0 + 3*198*FLEN/8, x4, x1, x2)

inst_20935:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb2fe0000; valaddr_reg:x3; val_offset:62805*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62805*0 + 3*199*FLEN/8, x4, x1, x2)

inst_20936:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb2ff0000; valaddr_reg:x3; val_offset:62808*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62808*0 + 3*200*FLEN/8, x4, x1, x2)

inst_20937:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb2ff8000; valaddr_reg:x3; val_offset:62811*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62811*0 + 3*201*FLEN/8, x4, x1, x2)

inst_20938:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb2ffc000; valaddr_reg:x3; val_offset:62814*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62814*0 + 3*202*FLEN/8, x4, x1, x2)

inst_20939:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb2ffe000; valaddr_reg:x3; val_offset:62817*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62817*0 + 3*203*FLEN/8, x4, x1, x2)

inst_20940:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb2fff000; valaddr_reg:x3; val_offset:62820*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62820*0 + 3*204*FLEN/8, x4, x1, x2)

inst_20941:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb2fff800; valaddr_reg:x3; val_offset:62823*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62823*0 + 3*205*FLEN/8, x4, x1, x2)

inst_20942:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb2fffc00; valaddr_reg:x3; val_offset:62826*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62826*0 + 3*206*FLEN/8, x4, x1, x2)

inst_20943:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb2fffe00; valaddr_reg:x3; val_offset:62829*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62829*0 + 3*207*FLEN/8, x4, x1, x2)

inst_20944:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb2ffff00; valaddr_reg:x3; val_offset:62832*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62832*0 + 3*208*FLEN/8, x4, x1, x2)

inst_20945:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb2ffff80; valaddr_reg:x3; val_offset:62835*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62835*0 + 3*209*FLEN/8, x4, x1, x2)

inst_20946:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb2ffffc0; valaddr_reg:x3; val_offset:62838*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62838*0 + 3*210*FLEN/8, x4, x1, x2)

inst_20947:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb2ffffe0; valaddr_reg:x3; val_offset:62841*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62841*0 + 3*211*FLEN/8, x4, x1, x2)

inst_20948:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb2fffff0; valaddr_reg:x3; val_offset:62844*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62844*0 + 3*212*FLEN/8, x4, x1, x2)

inst_20949:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb2fffff8; valaddr_reg:x3; val_offset:62847*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62847*0 + 3*213*FLEN/8, x4, x1, x2)

inst_20950:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb2fffffc; valaddr_reg:x3; val_offset:62850*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62850*0 + 3*214*FLEN/8, x4, x1, x2)

inst_20951:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb2fffffe; valaddr_reg:x3; val_offset:62853*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62853*0 + 3*215*FLEN/8, x4, x1, x2)

inst_20952:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x65 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xb2ffffff; valaddr_reg:x3; val_offset:62856*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62856*0 + 3*216*FLEN/8, x4, x1, x2)

inst_20953:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xbf800001; valaddr_reg:x3; val_offset:62859*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62859*0 + 3*217*FLEN/8, x4, x1, x2)

inst_20954:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xbf800003; valaddr_reg:x3; val_offset:62862*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62862*0 + 3*218*FLEN/8, x4, x1, x2)

inst_20955:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xbf800007; valaddr_reg:x3; val_offset:62865*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62865*0 + 3*219*FLEN/8, x4, x1, x2)

inst_20956:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xbf999999; valaddr_reg:x3; val_offset:62868*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62868*0 + 3*220*FLEN/8, x4, x1, x2)

inst_20957:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:62871*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62871*0 + 3*221*FLEN/8, x4, x1, x2)

inst_20958:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:62874*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62874*0 + 3*222*FLEN/8, x4, x1, x2)

inst_20959:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:62877*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62877*0 + 3*223*FLEN/8, x4, x1, x2)

inst_20960:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:62880*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62880*0 + 3*224*FLEN/8, x4, x1, x2)

inst_20961:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:62883*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62883*0 + 3*225*FLEN/8, x4, x1, x2)

inst_20962:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:62886*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62886*0 + 3*226*FLEN/8, x4, x1, x2)

inst_20963:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:62889*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62889*0 + 3*227*FLEN/8, x4, x1, x2)

inst_20964:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:62892*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62892*0 + 3*228*FLEN/8, x4, x1, x2)

inst_20965:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:62895*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62895*0 + 3*229*FLEN/8, x4, x1, x2)

inst_20966:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:62898*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62898*0 + 3*230*FLEN/8, x4, x1, x2)

inst_20967:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:62901*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62901*0 + 3*231*FLEN/8, x4, x1, x2)

inst_20968:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4dc773 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2a5d7; op2val:0x804dc773;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:62904*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62904*0 + 3*232*FLEN/8, x4, x1, x2)

inst_20969:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x800001; valaddr_reg:x3; val_offset:62907*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62907*0 + 3*233*FLEN/8, x4, x1, x2)

inst_20970:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x800003; valaddr_reg:x3; val_offset:62910*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62910*0 + 3*234*FLEN/8, x4, x1, x2)

inst_20971:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x800007; valaddr_reg:x3; val_offset:62913*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62913*0 + 3*235*FLEN/8, x4, x1, x2)

inst_20972:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x999999; valaddr_reg:x3; val_offset:62916*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62916*0 + 3*236*FLEN/8, x4, x1, x2)

inst_20973:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0xa49249; valaddr_reg:x3; val_offset:62919*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62919*0 + 3*237*FLEN/8, x4, x1, x2)

inst_20974:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0xb33333; valaddr_reg:x3; val_offset:62922*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62922*0 + 3*238*FLEN/8, x4, x1, x2)

inst_20975:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0xb6db6d; valaddr_reg:x3; val_offset:62925*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62925*0 + 3*239*FLEN/8, x4, x1, x2)

inst_20976:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0xbbbbbb; valaddr_reg:x3; val_offset:62928*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62928*0 + 3*240*FLEN/8, x4, x1, x2)

inst_20977:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0xc44444; valaddr_reg:x3; val_offset:62931*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62931*0 + 3*241*FLEN/8, x4, x1, x2)

inst_20978:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0xcccccc; valaddr_reg:x3; val_offset:62934*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62934*0 + 3*242*FLEN/8, x4, x1, x2)

inst_20979:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0xdb6db6; valaddr_reg:x3; val_offset:62937*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62937*0 + 3*243*FLEN/8, x4, x1, x2)

inst_20980:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0xe66666; valaddr_reg:x3; val_offset:62940*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62940*0 + 3*244*FLEN/8, x4, x1, x2)

inst_20981:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0xedb6db; valaddr_reg:x3; val_offset:62943*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62943*0 + 3*245*FLEN/8, x4, x1, x2)

inst_20982:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0xfffff8; valaddr_reg:x3; val_offset:62946*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62946*0 + 3*246*FLEN/8, x4, x1, x2)

inst_20983:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0xfffffc; valaddr_reg:x3; val_offset:62949*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62949*0 + 3*247*FLEN/8, x4, x1, x2)

inst_20984:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0xfffffe; valaddr_reg:x3; val_offset:62952*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62952*0 + 3*248*FLEN/8, x4, x1, x2)

inst_20985:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x9000000; valaddr_reg:x3; val_offset:62955*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62955*0 + 3*249*FLEN/8, x4, x1, x2)

inst_20986:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x9000001; valaddr_reg:x3; val_offset:62958*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62958*0 + 3*250*FLEN/8, x4, x1, x2)

inst_20987:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x9000003; valaddr_reg:x3; val_offset:62961*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62961*0 + 3*251*FLEN/8, x4, x1, x2)

inst_20988:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x9000007; valaddr_reg:x3; val_offset:62964*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62964*0 + 3*252*FLEN/8, x4, x1, x2)

inst_20989:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x900000f; valaddr_reg:x3; val_offset:62967*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62967*0 + 3*253*FLEN/8, x4, x1, x2)

inst_20990:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x900001f; valaddr_reg:x3; val_offset:62970*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62970*0 + 3*254*FLEN/8, x4, x1, x2)

inst_20991:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x900003f; valaddr_reg:x3; val_offset:62973*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62973*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_20992:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x900007f; valaddr_reg:x3; val_offset:62976*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62976*0 + 3*256*FLEN/8, x4, x1, x2)

inst_20993:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x90000ff; valaddr_reg:x3; val_offset:62979*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62979*0 + 3*257*FLEN/8, x4, x1, x2)

inst_20994:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x90001ff; valaddr_reg:x3; val_offset:62982*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62982*0 + 3*258*FLEN/8, x4, x1, x2)

inst_20995:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x90003ff; valaddr_reg:x3; val_offset:62985*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62985*0 + 3*259*FLEN/8, x4, x1, x2)

inst_20996:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x90007ff; valaddr_reg:x3; val_offset:62988*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62988*0 + 3*260*FLEN/8, x4, x1, x2)

inst_20997:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x9000fff; valaddr_reg:x3; val_offset:62991*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62991*0 + 3*261*FLEN/8, x4, x1, x2)

inst_20998:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x9001fff; valaddr_reg:x3; val_offset:62994*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62994*0 + 3*262*FLEN/8, x4, x1, x2)

inst_20999:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x9003fff; valaddr_reg:x3; val_offset:62997*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62997*0 + 3*263*FLEN/8, x4, x1, x2)

inst_21000:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x9007fff; valaddr_reg:x3; val_offset:63000*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63000*0 + 3*264*FLEN/8, x4, x1, x2)

inst_21001:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x900ffff; valaddr_reg:x3; val_offset:63003*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63003*0 + 3*265*FLEN/8, x4, x1, x2)

inst_21002:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x901ffff; valaddr_reg:x3; val_offset:63006*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63006*0 + 3*266*FLEN/8, x4, x1, x2)

inst_21003:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x903ffff; valaddr_reg:x3; val_offset:63009*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63009*0 + 3*267*FLEN/8, x4, x1, x2)

inst_21004:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x907ffff; valaddr_reg:x3; val_offset:63012*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63012*0 + 3*268*FLEN/8, x4, x1, x2)

inst_21005:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x90fffff; valaddr_reg:x3; val_offset:63015*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63015*0 + 3*269*FLEN/8, x4, x1, x2)

inst_21006:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x91fffff; valaddr_reg:x3; val_offset:63018*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63018*0 + 3*270*FLEN/8, x4, x1, x2)

inst_21007:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x93fffff; valaddr_reg:x3; val_offset:63021*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63021*0 + 3*271*FLEN/8, x4, x1, x2)

inst_21008:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x9400000; valaddr_reg:x3; val_offset:63024*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63024*0 + 3*272*FLEN/8, x4, x1, x2)

inst_21009:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x9600000; valaddr_reg:x3; val_offset:63027*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63027*0 + 3*273*FLEN/8, x4, x1, x2)

inst_21010:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x9700000; valaddr_reg:x3; val_offset:63030*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63030*0 + 3*274*FLEN/8, x4, x1, x2)

inst_21011:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x9780000; valaddr_reg:x3; val_offset:63033*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63033*0 + 3*275*FLEN/8, x4, x1, x2)

inst_21012:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x97c0000; valaddr_reg:x3; val_offset:63036*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63036*0 + 3*276*FLEN/8, x4, x1, x2)

inst_21013:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x97e0000; valaddr_reg:x3; val_offset:63039*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63039*0 + 3*277*FLEN/8, x4, x1, x2)

inst_21014:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x97f0000; valaddr_reg:x3; val_offset:63042*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63042*0 + 3*278*FLEN/8, x4, x1, x2)

inst_21015:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x97f8000; valaddr_reg:x3; val_offset:63045*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63045*0 + 3*279*FLEN/8, x4, x1, x2)

inst_21016:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x97fc000; valaddr_reg:x3; val_offset:63048*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63048*0 + 3*280*FLEN/8, x4, x1, x2)

inst_21017:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x97fe000; valaddr_reg:x3; val_offset:63051*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63051*0 + 3*281*FLEN/8, x4, x1, x2)

inst_21018:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x97ff000; valaddr_reg:x3; val_offset:63054*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63054*0 + 3*282*FLEN/8, x4, x1, x2)

inst_21019:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x97ff800; valaddr_reg:x3; val_offset:63057*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63057*0 + 3*283*FLEN/8, x4, x1, x2)

inst_21020:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x97ffc00; valaddr_reg:x3; val_offset:63060*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63060*0 + 3*284*FLEN/8, x4, x1, x2)

inst_21021:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x97ffe00; valaddr_reg:x3; val_offset:63063*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63063*0 + 3*285*FLEN/8, x4, x1, x2)

inst_21022:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x97fff00; valaddr_reg:x3; val_offset:63066*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63066*0 + 3*286*FLEN/8, x4, x1, x2)

inst_21023:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x97fff80; valaddr_reg:x3; val_offset:63069*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63069*0 + 3*287*FLEN/8, x4, x1, x2)

inst_21024:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x97fffc0; valaddr_reg:x3; val_offset:63072*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63072*0 + 3*288*FLEN/8, x4, x1, x2)

inst_21025:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x97fffe0; valaddr_reg:x3; val_offset:63075*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63075*0 + 3*289*FLEN/8, x4, x1, x2)

inst_21026:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x97ffff0; valaddr_reg:x3; val_offset:63078*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63078*0 + 3*290*FLEN/8, x4, x1, x2)

inst_21027:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x97ffff8; valaddr_reg:x3; val_offset:63081*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63081*0 + 3*291*FLEN/8, x4, x1, x2)

inst_21028:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x97ffffc; valaddr_reg:x3; val_offset:63084*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63084*0 + 3*292*FLEN/8, x4, x1, x2)

inst_21029:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x97ffffe; valaddr_reg:x3; val_offset:63087*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63087*0 + 3*293*FLEN/8, x4, x1, x2)

inst_21030:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52df06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2df06; op2val:0x0;
op3val:0x97fffff; valaddr_reg:x3; val_offset:63090*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63090*0 + 3*294*FLEN/8, x4, x1, x2)

inst_21031:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:63093*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63093*0 + 3*295*FLEN/8, x4, x1, x2)

inst_21032:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:63096*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63096*0 + 3*296*FLEN/8, x4, x1, x2)

inst_21033:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:63099*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63099*0 + 3*297*FLEN/8, x4, x1, x2)

inst_21034:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:63102*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63102*0 + 3*298*FLEN/8, x4, x1, x2)

inst_21035:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:63105*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63105*0 + 3*299*FLEN/8, x4, x1, x2)

inst_21036:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:63108*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63108*0 + 3*300*FLEN/8, x4, x1, x2)

inst_21037:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:63111*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63111*0 + 3*301*FLEN/8, x4, x1, x2)

inst_21038:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:63114*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63114*0 + 3*302*FLEN/8, x4, x1, x2)

inst_21039:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:63117*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63117*0 + 3*303*FLEN/8, x4, x1, x2)

inst_21040:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:63120*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63120*0 + 3*304*FLEN/8, x4, x1, x2)

inst_21041:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:63123*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63123*0 + 3*305*FLEN/8, x4, x1, x2)

inst_21042:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:63126*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63126*0 + 3*306*FLEN/8, x4, x1, x2)

inst_21043:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:63129*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63129*0 + 3*307*FLEN/8, x4, x1, x2)

inst_21044:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:63132*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63132*0 + 3*308*FLEN/8, x4, x1, x2)

inst_21045:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:63135*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63135*0 + 3*309*FLEN/8, x4, x1, x2)

inst_21046:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:63138*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63138*0 + 3*310*FLEN/8, x4, x1, x2)

inst_21047:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x89800000; valaddr_reg:x3; val_offset:63141*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63141*0 + 3*311*FLEN/8, x4, x1, x2)

inst_21048:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x89800001; valaddr_reg:x3; val_offset:63144*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63144*0 + 3*312*FLEN/8, x4, x1, x2)

inst_21049:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x89800003; valaddr_reg:x3; val_offset:63147*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63147*0 + 3*313*FLEN/8, x4, x1, x2)

inst_21050:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x89800007; valaddr_reg:x3; val_offset:63150*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63150*0 + 3*314*FLEN/8, x4, x1, x2)

inst_21051:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x8980000f; valaddr_reg:x3; val_offset:63153*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63153*0 + 3*315*FLEN/8, x4, x1, x2)

inst_21052:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x8980001f; valaddr_reg:x3; val_offset:63156*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63156*0 + 3*316*FLEN/8, x4, x1, x2)

inst_21053:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x8980003f; valaddr_reg:x3; val_offset:63159*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63159*0 + 3*317*FLEN/8, x4, x1, x2)

inst_21054:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x8980007f; valaddr_reg:x3; val_offset:63162*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63162*0 + 3*318*FLEN/8, x4, x1, x2)

inst_21055:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x898000ff; valaddr_reg:x3; val_offset:63165*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63165*0 + 3*319*FLEN/8, x4, x1, x2)

inst_21056:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x898001ff; valaddr_reg:x3; val_offset:63168*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63168*0 + 3*320*FLEN/8, x4, x1, x2)

inst_21057:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x898003ff; valaddr_reg:x3; val_offset:63171*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63171*0 + 3*321*FLEN/8, x4, x1, x2)

inst_21058:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x898007ff; valaddr_reg:x3; val_offset:63174*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63174*0 + 3*322*FLEN/8, x4, x1, x2)

inst_21059:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x89800fff; valaddr_reg:x3; val_offset:63177*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63177*0 + 3*323*FLEN/8, x4, x1, x2)

inst_21060:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x89801fff; valaddr_reg:x3; val_offset:63180*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63180*0 + 3*324*FLEN/8, x4, x1, x2)

inst_21061:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x89803fff; valaddr_reg:x3; val_offset:63183*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63183*0 + 3*325*FLEN/8, x4, x1, x2)

inst_21062:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x89807fff; valaddr_reg:x3; val_offset:63186*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63186*0 + 3*326*FLEN/8, x4, x1, x2)

inst_21063:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x8980ffff; valaddr_reg:x3; val_offset:63189*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63189*0 + 3*327*FLEN/8, x4, x1, x2)

inst_21064:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x8981ffff; valaddr_reg:x3; val_offset:63192*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63192*0 + 3*328*FLEN/8, x4, x1, x2)

inst_21065:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x8983ffff; valaddr_reg:x3; val_offset:63195*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63195*0 + 3*329*FLEN/8, x4, x1, x2)

inst_21066:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x8987ffff; valaddr_reg:x3; val_offset:63198*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63198*0 + 3*330*FLEN/8, x4, x1, x2)

inst_21067:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x898fffff; valaddr_reg:x3; val_offset:63201*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63201*0 + 3*331*FLEN/8, x4, x1, x2)

inst_21068:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x899fffff; valaddr_reg:x3; val_offset:63204*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63204*0 + 3*332*FLEN/8, x4, x1, x2)

inst_21069:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x89bfffff; valaddr_reg:x3; val_offset:63207*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63207*0 + 3*333*FLEN/8, x4, x1, x2)

inst_21070:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x89c00000; valaddr_reg:x3; val_offset:63210*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63210*0 + 3*334*FLEN/8, x4, x1, x2)

inst_21071:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x89e00000; valaddr_reg:x3; val_offset:63213*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63213*0 + 3*335*FLEN/8, x4, x1, x2)

inst_21072:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x89f00000; valaddr_reg:x3; val_offset:63216*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63216*0 + 3*336*FLEN/8, x4, x1, x2)

inst_21073:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x89f80000; valaddr_reg:x3; val_offset:63219*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63219*0 + 3*337*FLEN/8, x4, x1, x2)

inst_21074:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x89fc0000; valaddr_reg:x3; val_offset:63222*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63222*0 + 3*338*FLEN/8, x4, x1, x2)

inst_21075:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x89fe0000; valaddr_reg:x3; val_offset:63225*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63225*0 + 3*339*FLEN/8, x4, x1, x2)

inst_21076:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x89ff0000; valaddr_reg:x3; val_offset:63228*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63228*0 + 3*340*FLEN/8, x4, x1, x2)

inst_21077:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x89ff8000; valaddr_reg:x3; val_offset:63231*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63231*0 + 3*341*FLEN/8, x4, x1, x2)

inst_21078:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x89ffc000; valaddr_reg:x3; val_offset:63234*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63234*0 + 3*342*FLEN/8, x4, x1, x2)

inst_21079:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x89ffe000; valaddr_reg:x3; val_offset:63237*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63237*0 + 3*343*FLEN/8, x4, x1, x2)

inst_21080:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x89fff000; valaddr_reg:x3; val_offset:63240*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63240*0 + 3*344*FLEN/8, x4, x1, x2)

inst_21081:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x89fff800; valaddr_reg:x3; val_offset:63243*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63243*0 + 3*345*FLEN/8, x4, x1, x2)

inst_21082:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x89fffc00; valaddr_reg:x3; val_offset:63246*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63246*0 + 3*346*FLEN/8, x4, x1, x2)

inst_21083:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x89fffe00; valaddr_reg:x3; val_offset:63249*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63249*0 + 3*347*FLEN/8, x4, x1, x2)

inst_21084:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x89ffff00; valaddr_reg:x3; val_offset:63252*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63252*0 + 3*348*FLEN/8, x4, x1, x2)

inst_21085:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x89ffff80; valaddr_reg:x3; val_offset:63255*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63255*0 + 3*349*FLEN/8, x4, x1, x2)

inst_21086:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x89ffffc0; valaddr_reg:x3; val_offset:63258*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63258*0 + 3*350*FLEN/8, x4, x1, x2)

inst_21087:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x89ffffe0; valaddr_reg:x3; val_offset:63261*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63261*0 + 3*351*FLEN/8, x4, x1, x2)

inst_21088:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x89fffff0; valaddr_reg:x3; val_offset:63264*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63264*0 + 3*352*FLEN/8, x4, x1, x2)

inst_21089:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x89fffff8; valaddr_reg:x3; val_offset:63267*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63267*0 + 3*353*FLEN/8, x4, x1, x2)

inst_21090:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x89fffffc; valaddr_reg:x3; val_offset:63270*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63270*0 + 3*354*FLEN/8, x4, x1, x2)

inst_21091:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x89fffffe; valaddr_reg:x3; val_offset:63273*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63273*0 + 3*355*FLEN/8, x4, x1, x2)

inst_21092:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3afc5; op2val:0x80000000;
op3val:0x89ffffff; valaddr_reg:x3; val_offset:63276*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63276*0 + 3*356*FLEN/8, x4, x1, x2)

inst_21093:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:63279*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63279*0 + 3*357*FLEN/8, x4, x1, x2)

inst_21094:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:63282*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63282*0 + 3*358*FLEN/8, x4, x1, x2)

inst_21095:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:63285*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63285*0 + 3*359*FLEN/8, x4, x1, x2)

inst_21096:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:63288*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63288*0 + 3*360*FLEN/8, x4, x1, x2)

inst_21097:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:63291*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63291*0 + 3*361*FLEN/8, x4, x1, x2)

inst_21098:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:63294*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63294*0 + 3*362*FLEN/8, x4, x1, x2)

inst_21099:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:63297*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63297*0 + 3*363*FLEN/8, x4, x1, x2)

inst_21100:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:63300*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63300*0 + 3*364*FLEN/8, x4, x1, x2)

inst_21101:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:63303*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63303*0 + 3*365*FLEN/8, x4, x1, x2)

inst_21102:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:63306*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63306*0 + 3*366*FLEN/8, x4, x1, x2)

inst_21103:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:63309*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63309*0 + 3*367*FLEN/8, x4, x1, x2)

inst_21104:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:63312*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63312*0 + 3*368*FLEN/8, x4, x1, x2)

inst_21105:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:63315*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63315*0 + 3*369*FLEN/8, x4, x1, x2)

inst_21106:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:63318*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63318*0 + 3*370*FLEN/8, x4, x1, x2)

inst_21107:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:63321*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63321*0 + 3*371*FLEN/8, x4, x1, x2)

inst_21108:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:63324*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63324*0 + 3*372*FLEN/8, x4, x1, x2)

inst_21109:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xd800000; valaddr_reg:x3; val_offset:63327*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63327*0 + 3*373*FLEN/8, x4, x1, x2)

inst_21110:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xd800001; valaddr_reg:x3; val_offset:63330*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63330*0 + 3*374*FLEN/8, x4, x1, x2)

inst_21111:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xd800003; valaddr_reg:x3; val_offset:63333*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63333*0 + 3*375*FLEN/8, x4, x1, x2)

inst_21112:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xd800007; valaddr_reg:x3; val_offset:63336*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63336*0 + 3*376*FLEN/8, x4, x1, x2)

inst_21113:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xd80000f; valaddr_reg:x3; val_offset:63339*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63339*0 + 3*377*FLEN/8, x4, x1, x2)

inst_21114:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xd80001f; valaddr_reg:x3; val_offset:63342*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63342*0 + 3*378*FLEN/8, x4, x1, x2)

inst_21115:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xd80003f; valaddr_reg:x3; val_offset:63345*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63345*0 + 3*379*FLEN/8, x4, x1, x2)

inst_21116:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xd80007f; valaddr_reg:x3; val_offset:63348*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63348*0 + 3*380*FLEN/8, x4, x1, x2)

inst_21117:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xd8000ff; valaddr_reg:x3; val_offset:63351*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63351*0 + 3*381*FLEN/8, x4, x1, x2)

inst_21118:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xd8001ff; valaddr_reg:x3; val_offset:63354*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63354*0 + 3*382*FLEN/8, x4, x1, x2)

inst_21119:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xd8003ff; valaddr_reg:x3; val_offset:63357*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63357*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_21120:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xd8007ff; valaddr_reg:x3; val_offset:63360*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63360*0 + 3*384*FLEN/8, x4, x1, x2)

inst_21121:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xd800fff; valaddr_reg:x3; val_offset:63363*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63363*0 + 3*385*FLEN/8, x4, x1, x2)

inst_21122:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xd801fff; valaddr_reg:x3; val_offset:63366*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63366*0 + 3*386*FLEN/8, x4, x1, x2)

inst_21123:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xd803fff; valaddr_reg:x3; val_offset:63369*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63369*0 + 3*387*FLEN/8, x4, x1, x2)

inst_21124:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xd807fff; valaddr_reg:x3; val_offset:63372*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63372*0 + 3*388*FLEN/8, x4, x1, x2)

inst_21125:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xd80ffff; valaddr_reg:x3; val_offset:63375*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63375*0 + 3*389*FLEN/8, x4, x1, x2)

inst_21126:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xd81ffff; valaddr_reg:x3; val_offset:63378*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63378*0 + 3*390*FLEN/8, x4, x1, x2)

inst_21127:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xd83ffff; valaddr_reg:x3; val_offset:63381*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63381*0 + 3*391*FLEN/8, x4, x1, x2)

inst_21128:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xd87ffff; valaddr_reg:x3; val_offset:63384*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63384*0 + 3*392*FLEN/8, x4, x1, x2)

inst_21129:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xd8fffff; valaddr_reg:x3; val_offset:63387*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63387*0 + 3*393*FLEN/8, x4, x1, x2)

inst_21130:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xd9fffff; valaddr_reg:x3; val_offset:63390*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63390*0 + 3*394*FLEN/8, x4, x1, x2)

inst_21131:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xdbfffff; valaddr_reg:x3; val_offset:63393*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63393*0 + 3*395*FLEN/8, x4, x1, x2)

inst_21132:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xdc00000; valaddr_reg:x3; val_offset:63396*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63396*0 + 3*396*FLEN/8, x4, x1, x2)

inst_21133:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xde00000; valaddr_reg:x3; val_offset:63399*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63399*0 + 3*397*FLEN/8, x4, x1, x2)

inst_21134:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xdf00000; valaddr_reg:x3; val_offset:63402*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63402*0 + 3*398*FLEN/8, x4, x1, x2)

inst_21135:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xdf80000; valaddr_reg:x3; val_offset:63405*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63405*0 + 3*399*FLEN/8, x4, x1, x2)

inst_21136:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xdfc0000; valaddr_reg:x3; val_offset:63408*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63408*0 + 3*400*FLEN/8, x4, x1, x2)

inst_21137:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xdfe0000; valaddr_reg:x3; val_offset:63411*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63411*0 + 3*401*FLEN/8, x4, x1, x2)

inst_21138:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xdff0000; valaddr_reg:x3; val_offset:63414*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63414*0 + 3*402*FLEN/8, x4, x1, x2)

inst_21139:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xdff8000; valaddr_reg:x3; val_offset:63417*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63417*0 + 3*403*FLEN/8, x4, x1, x2)

inst_21140:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xdffc000; valaddr_reg:x3; val_offset:63420*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63420*0 + 3*404*FLEN/8, x4, x1, x2)

inst_21141:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xdffe000; valaddr_reg:x3; val_offset:63423*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63423*0 + 3*405*FLEN/8, x4, x1, x2)

inst_21142:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xdfff000; valaddr_reg:x3; val_offset:63426*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63426*0 + 3*406*FLEN/8, x4, x1, x2)

inst_21143:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xdfff800; valaddr_reg:x3; val_offset:63429*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63429*0 + 3*407*FLEN/8, x4, x1, x2)

inst_21144:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xdfffc00; valaddr_reg:x3; val_offset:63432*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63432*0 + 3*408*FLEN/8, x4, x1, x2)

inst_21145:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xdfffe00; valaddr_reg:x3; val_offset:63435*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63435*0 + 3*409*FLEN/8, x4, x1, x2)

inst_21146:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xdffff00; valaddr_reg:x3; val_offset:63438*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63438*0 + 3*410*FLEN/8, x4, x1, x2)

inst_21147:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xdffff80; valaddr_reg:x3; val_offset:63441*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63441*0 + 3*411*FLEN/8, x4, x1, x2)

inst_21148:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xdffffc0; valaddr_reg:x3; val_offset:63444*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63444*0 + 3*412*FLEN/8, x4, x1, x2)

inst_21149:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xdffffe0; valaddr_reg:x3; val_offset:63447*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63447*0 + 3*413*FLEN/8, x4, x1, x2)

inst_21150:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xdfffff0; valaddr_reg:x3; val_offset:63450*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63450*0 + 3*414*FLEN/8, x4, x1, x2)

inst_21151:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xdfffff8; valaddr_reg:x3; val_offset:63453*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63453*0 + 3*415*FLEN/8, x4, x1, x2)

inst_21152:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xdfffffc; valaddr_reg:x3; val_offset:63456*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63456*0 + 3*416*FLEN/8, x4, x1, x2)

inst_21153:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xdfffffe; valaddr_reg:x3; val_offset:63459*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63459*0 + 3*417*FLEN/8, x4, x1, x2)

inst_21154:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x542b49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed42b49; op2val:0x0;
op3val:0xdffffff; valaddr_reg:x3; val_offset:63462*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63462*0 + 3*418*FLEN/8, x4, x1, x2)

inst_21155:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x70800000; valaddr_reg:x3; val_offset:63465*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63465*0 + 3*419*FLEN/8, x4, x1, x2)

inst_21156:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x70800001; valaddr_reg:x3; val_offset:63468*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63468*0 + 3*420*FLEN/8, x4, x1, x2)

inst_21157:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x70800003; valaddr_reg:x3; val_offset:63471*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63471*0 + 3*421*FLEN/8, x4, x1, x2)

inst_21158:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x70800007; valaddr_reg:x3; val_offset:63474*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63474*0 + 3*422*FLEN/8, x4, x1, x2)

inst_21159:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x7080000f; valaddr_reg:x3; val_offset:63477*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63477*0 + 3*423*FLEN/8, x4, x1, x2)

inst_21160:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x7080001f; valaddr_reg:x3; val_offset:63480*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63480*0 + 3*424*FLEN/8, x4, x1, x2)

inst_21161:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x7080003f; valaddr_reg:x3; val_offset:63483*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63483*0 + 3*425*FLEN/8, x4, x1, x2)

inst_21162:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x7080007f; valaddr_reg:x3; val_offset:63486*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63486*0 + 3*426*FLEN/8, x4, x1, x2)

inst_21163:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x708000ff; valaddr_reg:x3; val_offset:63489*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63489*0 + 3*427*FLEN/8, x4, x1, x2)

inst_21164:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x708001ff; valaddr_reg:x3; val_offset:63492*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63492*0 + 3*428*FLEN/8, x4, x1, x2)

inst_21165:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x708003ff; valaddr_reg:x3; val_offset:63495*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63495*0 + 3*429*FLEN/8, x4, x1, x2)

inst_21166:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x708007ff; valaddr_reg:x3; val_offset:63498*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63498*0 + 3*430*FLEN/8, x4, x1, x2)

inst_21167:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x70800fff; valaddr_reg:x3; val_offset:63501*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63501*0 + 3*431*FLEN/8, x4, x1, x2)

inst_21168:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x70801fff; valaddr_reg:x3; val_offset:63504*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63504*0 + 3*432*FLEN/8, x4, x1, x2)

inst_21169:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x70803fff; valaddr_reg:x3; val_offset:63507*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63507*0 + 3*433*FLEN/8, x4, x1, x2)

inst_21170:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x70807fff; valaddr_reg:x3; val_offset:63510*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63510*0 + 3*434*FLEN/8, x4, x1, x2)

inst_21171:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x7080ffff; valaddr_reg:x3; val_offset:63513*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63513*0 + 3*435*FLEN/8, x4, x1, x2)

inst_21172:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x7081ffff; valaddr_reg:x3; val_offset:63516*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63516*0 + 3*436*FLEN/8, x4, x1, x2)

inst_21173:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x7083ffff; valaddr_reg:x3; val_offset:63519*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63519*0 + 3*437*FLEN/8, x4, x1, x2)

inst_21174:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x7087ffff; valaddr_reg:x3; val_offset:63522*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63522*0 + 3*438*FLEN/8, x4, x1, x2)

inst_21175:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x708fffff; valaddr_reg:x3; val_offset:63525*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63525*0 + 3*439*FLEN/8, x4, x1, x2)

inst_21176:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x709fffff; valaddr_reg:x3; val_offset:63528*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63528*0 + 3*440*FLEN/8, x4, x1, x2)

inst_21177:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x70bfffff; valaddr_reg:x3; val_offset:63531*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63531*0 + 3*441*FLEN/8, x4, x1, x2)

inst_21178:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x70c00000; valaddr_reg:x3; val_offset:63534*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63534*0 + 3*442*FLEN/8, x4, x1, x2)

inst_21179:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x70e00000; valaddr_reg:x3; val_offset:63537*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63537*0 + 3*443*FLEN/8, x4, x1, x2)

inst_21180:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x70f00000; valaddr_reg:x3; val_offset:63540*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63540*0 + 3*444*FLEN/8, x4, x1, x2)

inst_21181:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x70f80000; valaddr_reg:x3; val_offset:63543*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63543*0 + 3*445*FLEN/8, x4, x1, x2)

inst_21182:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x70fc0000; valaddr_reg:x3; val_offset:63546*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63546*0 + 3*446*FLEN/8, x4, x1, x2)

inst_21183:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x70fe0000; valaddr_reg:x3; val_offset:63549*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63549*0 + 3*447*FLEN/8, x4, x1, x2)

inst_21184:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x70ff0000; valaddr_reg:x3; val_offset:63552*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63552*0 + 3*448*FLEN/8, x4, x1, x2)

inst_21185:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x70ff8000; valaddr_reg:x3; val_offset:63555*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63555*0 + 3*449*FLEN/8, x4, x1, x2)

inst_21186:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x70ffc000; valaddr_reg:x3; val_offset:63558*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63558*0 + 3*450*FLEN/8, x4, x1, x2)

inst_21187:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x70ffe000; valaddr_reg:x3; val_offset:63561*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63561*0 + 3*451*FLEN/8, x4, x1, x2)

inst_21188:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x70fff000; valaddr_reg:x3; val_offset:63564*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63564*0 + 3*452*FLEN/8, x4, x1, x2)

inst_21189:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x70fff800; valaddr_reg:x3; val_offset:63567*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63567*0 + 3*453*FLEN/8, x4, x1, x2)

inst_21190:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x70fffc00; valaddr_reg:x3; val_offset:63570*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63570*0 + 3*454*FLEN/8, x4, x1, x2)

inst_21191:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x70fffe00; valaddr_reg:x3; val_offset:63573*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63573*0 + 3*455*FLEN/8, x4, x1, x2)

inst_21192:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x70ffff00; valaddr_reg:x3; val_offset:63576*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63576*0 + 3*456*FLEN/8, x4, x1, x2)

inst_21193:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x70ffff80; valaddr_reg:x3; val_offset:63579*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63579*0 + 3*457*FLEN/8, x4, x1, x2)

inst_21194:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x70ffffc0; valaddr_reg:x3; val_offset:63582*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63582*0 + 3*458*FLEN/8, x4, x1, x2)

inst_21195:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x70ffffe0; valaddr_reg:x3; val_offset:63585*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63585*0 + 3*459*FLEN/8, x4, x1, x2)

inst_21196:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x70fffff0; valaddr_reg:x3; val_offset:63588*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63588*0 + 3*460*FLEN/8, x4, x1, x2)

inst_21197:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x70fffff8; valaddr_reg:x3; val_offset:63591*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63591*0 + 3*461*FLEN/8, x4, x1, x2)

inst_21198:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x70fffffc; valaddr_reg:x3; val_offset:63594*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63594*0 + 3*462*FLEN/8, x4, x1, x2)

inst_21199:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x70fffffe; valaddr_reg:x3; val_offset:63597*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63597*0 + 3*463*FLEN/8, x4, x1, x2)

inst_21200:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xe1 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x70ffffff; valaddr_reg:x3; val_offset:63600*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63600*0 + 3*464*FLEN/8, x4, x1, x2)

inst_21201:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x7f000001; valaddr_reg:x3; val_offset:63603*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63603*0 + 3*465*FLEN/8, x4, x1, x2)

inst_21202:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x7f000003; valaddr_reg:x3; val_offset:63606*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63606*0 + 3*466*FLEN/8, x4, x1, x2)

inst_21203:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x7f000007; valaddr_reg:x3; val_offset:63609*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63609*0 + 3*467*FLEN/8, x4, x1, x2)

inst_21204:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x7f199999; valaddr_reg:x3; val_offset:63612*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63612*0 + 3*468*FLEN/8, x4, x1, x2)

inst_21205:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x7f249249; valaddr_reg:x3; val_offset:63615*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63615*0 + 3*469*FLEN/8, x4, x1, x2)

inst_21206:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x7f333333; valaddr_reg:x3; val_offset:63618*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63618*0 + 3*470*FLEN/8, x4, x1, x2)

inst_21207:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:63621*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63621*0 + 3*471*FLEN/8, x4, x1, x2)

inst_21208:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:63624*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63624*0 + 3*472*FLEN/8, x4, x1, x2)

inst_21209:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x7f444444; valaddr_reg:x3; val_offset:63627*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63627*0 + 3*473*FLEN/8, x4, x1, x2)

inst_21210:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:63630*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63630*0 + 3*474*FLEN/8, x4, x1, x2)

inst_21211:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:63633*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63633*0 + 3*475*FLEN/8, x4, x1, x2)

inst_21212:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x7f666666; valaddr_reg:x3; val_offset:63636*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63636*0 + 3*476*FLEN/8, x4, x1, x2)

inst_21213:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:63639*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63639*0 + 3*477*FLEN/8, x4, x1, x2)

inst_21214:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:63642*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63642*0 + 3*478*FLEN/8, x4, x1, x2)

inst_21215:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:63645*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63645*0 + 3*479*FLEN/8, x4, x1, x2)

inst_21216:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546e37 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a40b5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46e37; op2val:0x401a40b5;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:63648*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63648*0 + 3*480*FLEN/8, x4, x1, x2)

inst_21217:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x80000000; valaddr_reg:x3; val_offset:63651*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63651*0 + 3*481*FLEN/8, x4, x1, x2)

inst_21218:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:63654*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63654*0 + 3*482*FLEN/8, x4, x1, x2)

inst_21219:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:63657*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63657*0 + 3*483*FLEN/8, x4, x1, x2)

inst_21220:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:63660*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63660*0 + 3*484*FLEN/8, x4, x1, x2)

inst_21221:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x8000000f; valaddr_reg:x3; val_offset:63663*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63663*0 + 3*485*FLEN/8, x4, x1, x2)

inst_21222:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x8000001f; valaddr_reg:x3; val_offset:63666*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63666*0 + 3*486*FLEN/8, x4, x1, x2)

inst_21223:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x8000003f; valaddr_reg:x3; val_offset:63669*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63669*0 + 3*487*FLEN/8, x4, x1, x2)

inst_21224:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x8000007f; valaddr_reg:x3; val_offset:63672*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63672*0 + 3*488*FLEN/8, x4, x1, x2)

inst_21225:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x800000ff; valaddr_reg:x3; val_offset:63675*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63675*0 + 3*489*FLEN/8, x4, x1, x2)

inst_21226:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x800001ff; valaddr_reg:x3; val_offset:63678*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63678*0 + 3*490*FLEN/8, x4, x1, x2)

inst_21227:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x800003ff; valaddr_reg:x3; val_offset:63681*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63681*0 + 3*491*FLEN/8, x4, x1, x2)

inst_21228:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x800007ff; valaddr_reg:x3; val_offset:63684*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63684*0 + 3*492*FLEN/8, x4, x1, x2)

inst_21229:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x80000fff; valaddr_reg:x3; val_offset:63687*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63687*0 + 3*493*FLEN/8, x4, x1, x2)

inst_21230:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x80001fff; valaddr_reg:x3; val_offset:63690*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63690*0 + 3*494*FLEN/8, x4, x1, x2)

inst_21231:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x80003fff; valaddr_reg:x3; val_offset:63693*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63693*0 + 3*495*FLEN/8, x4, x1, x2)

inst_21232:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x80007fff; valaddr_reg:x3; val_offset:63696*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63696*0 + 3*496*FLEN/8, x4, x1, x2)

inst_21233:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x8000ffff; valaddr_reg:x3; val_offset:63699*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63699*0 + 3*497*FLEN/8, x4, x1, x2)

inst_21234:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x8001ffff; valaddr_reg:x3; val_offset:63702*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63702*0 + 3*498*FLEN/8, x4, x1, x2)

inst_21235:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x8003ffff; valaddr_reg:x3; val_offset:63705*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63705*0 + 3*499*FLEN/8, x4, x1, x2)

inst_21236:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x8007ffff; valaddr_reg:x3; val_offset:63708*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63708*0 + 3*500*FLEN/8, x4, x1, x2)

inst_21237:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x800fffff; valaddr_reg:x3; val_offset:63711*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63711*0 + 3*501*FLEN/8, x4, x1, x2)

inst_21238:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:63714*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63714*0 + 3*502*FLEN/8, x4, x1, x2)

inst_21239:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x801fffff; valaddr_reg:x3; val_offset:63717*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63717*0 + 3*503*FLEN/8, x4, x1, x2)

inst_21240:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:63720*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63720*0 + 3*504*FLEN/8, x4, x1, x2)

inst_21241:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:63723*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63723*0 + 3*505*FLEN/8, x4, x1, x2)

inst_21242:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:63726*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63726*0 + 3*506*FLEN/8, x4, x1, x2)

inst_21243:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:63729*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63729*0 + 3*507*FLEN/8, x4, x1, x2)

inst_21244:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x803fffff; valaddr_reg:x3; val_offset:63732*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63732*0 + 3*508*FLEN/8, x4, x1, x2)

inst_21245:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x80400000; valaddr_reg:x3; val_offset:63735*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63735*0 + 3*509*FLEN/8, x4, x1, x2)

inst_21246:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:63738*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63738*0 + 3*510*FLEN/8, x4, x1, x2)

inst_21247:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:63741*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63741*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_21248:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:63744*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63744*0 + 3*512*FLEN/8, x4, x1, x2)

inst_21249:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x80600000; valaddr_reg:x3; val_offset:63747*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63747*0 + 3*513*FLEN/8, x4, x1, x2)

inst_21250:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:63750*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63750*0 + 3*514*FLEN/8, x4, x1, x2)

inst_21251:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:63753*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63753*0 + 3*515*FLEN/8, x4, x1, x2)

inst_21252:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x80700000; valaddr_reg:x3; val_offset:63756*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63756*0 + 3*516*FLEN/8, x4, x1, x2)

inst_21253:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x80780000; valaddr_reg:x3; val_offset:63759*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63759*0 + 3*517*FLEN/8, x4, x1, x2)

inst_21254:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x807c0000; valaddr_reg:x3; val_offset:63762*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63762*0 + 3*518*FLEN/8, x4, x1, x2)

inst_21255:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x807e0000; valaddr_reg:x3; val_offset:63765*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63765*0 + 3*519*FLEN/8, x4, x1, x2)

inst_21256:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x807f0000; valaddr_reg:x3; val_offset:63768*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63768*0 + 3*520*FLEN/8, x4, x1, x2)

inst_21257:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x807f8000; valaddr_reg:x3; val_offset:63771*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63771*0 + 3*521*FLEN/8, x4, x1, x2)

inst_21258:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x807fc000; valaddr_reg:x3; val_offset:63774*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63774*0 + 3*522*FLEN/8, x4, x1, x2)

inst_21259:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x807fe000; valaddr_reg:x3; val_offset:63777*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63777*0 + 3*523*FLEN/8, x4, x1, x2)

inst_21260:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x807ff000; valaddr_reg:x3; val_offset:63780*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63780*0 + 3*524*FLEN/8, x4, x1, x2)

inst_21261:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x807ff800; valaddr_reg:x3; val_offset:63783*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63783*0 + 3*525*FLEN/8, x4, x1, x2)

inst_21262:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x807ffc00; valaddr_reg:x3; val_offset:63786*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63786*0 + 3*526*FLEN/8, x4, x1, x2)

inst_21263:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x807ffe00; valaddr_reg:x3; val_offset:63789*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63789*0 + 3*527*FLEN/8, x4, x1, x2)

inst_21264:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x807fff00; valaddr_reg:x3; val_offset:63792*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63792*0 + 3*528*FLEN/8, x4, x1, x2)

inst_21265:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x807fff80; valaddr_reg:x3; val_offset:63795*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63795*0 + 3*529*FLEN/8, x4, x1, x2)

inst_21266:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x807fffc0; valaddr_reg:x3; val_offset:63798*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63798*0 + 3*530*FLEN/8, x4, x1, x2)

inst_21267:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x807fffe0; valaddr_reg:x3; val_offset:63801*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63801*0 + 3*531*FLEN/8, x4, x1, x2)

inst_21268:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x807ffff0; valaddr_reg:x3; val_offset:63804*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63804*0 + 3*532*FLEN/8, x4, x1, x2)

inst_21269:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:63807*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63807*0 + 3*533*FLEN/8, x4, x1, x2)

inst_21270:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:63810*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63810*0 + 3*534*FLEN/8, x4, x1, x2)

inst_21271:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:63813*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63813*0 + 3*535*FLEN/8, x4, x1, x2)

inst_21272:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55afad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed5afad; op2val:0x80000000;
op3val:0x807fffff; valaddr_reg:x3; val_offset:63816*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63816*0 + 3*536*FLEN/8, x4, x1, x2)

inst_21273:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe2800000; valaddr_reg:x3; val_offset:63819*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63819*0 + 3*537*FLEN/8, x4, x1, x2)

inst_21274:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe2800001; valaddr_reg:x3; val_offset:63822*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63822*0 + 3*538*FLEN/8, x4, x1, x2)

inst_21275:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe2800003; valaddr_reg:x3; val_offset:63825*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63825*0 + 3*539*FLEN/8, x4, x1, x2)

inst_21276:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe2800007; valaddr_reg:x3; val_offset:63828*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63828*0 + 3*540*FLEN/8, x4, x1, x2)

inst_21277:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe280000f; valaddr_reg:x3; val_offset:63831*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63831*0 + 3*541*FLEN/8, x4, x1, x2)

inst_21278:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe280001f; valaddr_reg:x3; val_offset:63834*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63834*0 + 3*542*FLEN/8, x4, x1, x2)

inst_21279:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe280003f; valaddr_reg:x3; val_offset:63837*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63837*0 + 3*543*FLEN/8, x4, x1, x2)

inst_21280:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe280007f; valaddr_reg:x3; val_offset:63840*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63840*0 + 3*544*FLEN/8, x4, x1, x2)

inst_21281:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe28000ff; valaddr_reg:x3; val_offset:63843*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63843*0 + 3*545*FLEN/8, x4, x1, x2)

inst_21282:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe28001ff; valaddr_reg:x3; val_offset:63846*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63846*0 + 3*546*FLEN/8, x4, x1, x2)

inst_21283:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe28003ff; valaddr_reg:x3; val_offset:63849*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63849*0 + 3*547*FLEN/8, x4, x1, x2)

inst_21284:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe28007ff; valaddr_reg:x3; val_offset:63852*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63852*0 + 3*548*FLEN/8, x4, x1, x2)

inst_21285:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe2800fff; valaddr_reg:x3; val_offset:63855*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63855*0 + 3*549*FLEN/8, x4, x1, x2)

inst_21286:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe2801fff; valaddr_reg:x3; val_offset:63858*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63858*0 + 3*550*FLEN/8, x4, x1, x2)

inst_21287:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe2803fff; valaddr_reg:x3; val_offset:63861*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63861*0 + 3*551*FLEN/8, x4, x1, x2)

inst_21288:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe2807fff; valaddr_reg:x3; val_offset:63864*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63864*0 + 3*552*FLEN/8, x4, x1, x2)

inst_21289:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe280ffff; valaddr_reg:x3; val_offset:63867*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63867*0 + 3*553*FLEN/8, x4, x1, x2)

inst_21290:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe281ffff; valaddr_reg:x3; val_offset:63870*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63870*0 + 3*554*FLEN/8, x4, x1, x2)

inst_21291:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe283ffff; valaddr_reg:x3; val_offset:63873*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63873*0 + 3*555*FLEN/8, x4, x1, x2)

inst_21292:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe287ffff; valaddr_reg:x3; val_offset:63876*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63876*0 + 3*556*FLEN/8, x4, x1, x2)

inst_21293:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe28fffff; valaddr_reg:x3; val_offset:63879*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63879*0 + 3*557*FLEN/8, x4, x1, x2)

inst_21294:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe29fffff; valaddr_reg:x3; val_offset:63882*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63882*0 + 3*558*FLEN/8, x4, x1, x2)

inst_21295:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe2bfffff; valaddr_reg:x3; val_offset:63885*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63885*0 + 3*559*FLEN/8, x4, x1, x2)

inst_21296:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe2c00000; valaddr_reg:x3; val_offset:63888*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63888*0 + 3*560*FLEN/8, x4, x1, x2)

inst_21297:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe2e00000; valaddr_reg:x3; val_offset:63891*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63891*0 + 3*561*FLEN/8, x4, x1, x2)

inst_21298:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe2f00000; valaddr_reg:x3; val_offset:63894*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63894*0 + 3*562*FLEN/8, x4, x1, x2)

inst_21299:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe2f80000; valaddr_reg:x3; val_offset:63897*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63897*0 + 3*563*FLEN/8, x4, x1, x2)

inst_21300:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe2fc0000; valaddr_reg:x3; val_offset:63900*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63900*0 + 3*564*FLEN/8, x4, x1, x2)

inst_21301:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe2fe0000; valaddr_reg:x3; val_offset:63903*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63903*0 + 3*565*FLEN/8, x4, x1, x2)

inst_21302:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe2ff0000; valaddr_reg:x3; val_offset:63906*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63906*0 + 3*566*FLEN/8, x4, x1, x2)

inst_21303:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe2ff8000; valaddr_reg:x3; val_offset:63909*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63909*0 + 3*567*FLEN/8, x4, x1, x2)

inst_21304:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe2ffc000; valaddr_reg:x3; val_offset:63912*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63912*0 + 3*568*FLEN/8, x4, x1, x2)

inst_21305:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe2ffe000; valaddr_reg:x3; val_offset:63915*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63915*0 + 3*569*FLEN/8, x4, x1, x2)

inst_21306:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe2fff000; valaddr_reg:x3; val_offset:63918*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63918*0 + 3*570*FLEN/8, x4, x1, x2)

inst_21307:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe2fff800; valaddr_reg:x3; val_offset:63921*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63921*0 + 3*571*FLEN/8, x4, x1, x2)

inst_21308:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe2fffc00; valaddr_reg:x3; val_offset:63924*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63924*0 + 3*572*FLEN/8, x4, x1, x2)

inst_21309:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe2fffe00; valaddr_reg:x3; val_offset:63927*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63927*0 + 3*573*FLEN/8, x4, x1, x2)

inst_21310:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe2ffff00; valaddr_reg:x3; val_offset:63930*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63930*0 + 3*574*FLEN/8, x4, x1, x2)

inst_21311:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe2ffff80; valaddr_reg:x3; val_offset:63933*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63933*0 + 3*575*FLEN/8, x4, x1, x2)

inst_21312:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe2ffffc0; valaddr_reg:x3; val_offset:63936*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63936*0 + 3*576*FLEN/8, x4, x1, x2)

inst_21313:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe2ffffe0; valaddr_reg:x3; val_offset:63939*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63939*0 + 3*577*FLEN/8, x4, x1, x2)

inst_21314:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe2fffff0; valaddr_reg:x3; val_offset:63942*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63942*0 + 3*578*FLEN/8, x4, x1, x2)

inst_21315:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe2fffff8; valaddr_reg:x3; val_offset:63945*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63945*0 + 3*579*FLEN/8, x4, x1, x2)

inst_21316:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe2fffffc; valaddr_reg:x3; val_offset:63948*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63948*0 + 3*580*FLEN/8, x4, x1, x2)

inst_21317:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe2fffffe; valaddr_reg:x3; val_offset:63951*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63951*0 + 3*581*FLEN/8, x4, x1, x2)

inst_21318:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xe2ffffff; valaddr_reg:x3; val_offset:63954*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63954*0 + 3*582*FLEN/8, x4, x1, x2)

inst_21319:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xff000001; valaddr_reg:x3; val_offset:63957*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63957*0 + 3*583*FLEN/8, x4, x1, x2)

inst_21320:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xff000003; valaddr_reg:x3; val_offset:63960*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63960*0 + 3*584*FLEN/8, x4, x1, x2)

inst_21321:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xff000007; valaddr_reg:x3; val_offset:63963*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63963*0 + 3*585*FLEN/8, x4, x1, x2)

inst_21322:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xff199999; valaddr_reg:x3; val_offset:63966*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63966*0 + 3*586*FLEN/8, x4, x1, x2)

inst_21323:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xff249249; valaddr_reg:x3; val_offset:63969*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63969*0 + 3*587*FLEN/8, x4, x1, x2)

inst_21324:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xff333333; valaddr_reg:x3; val_offset:63972*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63972*0 + 3*588*FLEN/8, x4, x1, x2)

inst_21325:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:63975*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63975*0 + 3*589*FLEN/8, x4, x1, x2)

inst_21326:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:63978*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63978*0 + 3*590*FLEN/8, x4, x1, x2)

inst_21327:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xff444444; valaddr_reg:x3; val_offset:63981*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63981*0 + 3*591*FLEN/8, x4, x1, x2)

inst_21328:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:63984*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63984*0 + 3*592*FLEN/8, x4, x1, x2)

inst_21329:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:63987*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63987*0 + 3*593*FLEN/8, x4, x1, x2)

inst_21330:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xff666666; valaddr_reg:x3; val_offset:63990*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63990*0 + 3*594*FLEN/8, x4, x1, x2)

inst_21331:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:63993*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63993*0 + 3*595*FLEN/8, x4, x1, x2)

inst_21332:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:63996*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63996*0 + 3*596*FLEN/8, x4, x1, x2)

inst_21333:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:63999*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 63999*0 + 3*597*FLEN/8, x4, x1, x2)

inst_21334:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56577b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18e09b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6577b; op2val:0xc018e09b;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:64002*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64002*0 + 3*598*FLEN/8, x4, x1, x2)

inst_21335:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:64005*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64005*0 + 3*599*FLEN/8, x4, x1, x2)

inst_21336:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:64008*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64008*0 + 3*600*FLEN/8, x4, x1, x2)

inst_21337:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:64011*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64011*0 + 3*601*FLEN/8, x4, x1, x2)

inst_21338:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:64014*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64014*0 + 3*602*FLEN/8, x4, x1, x2)

inst_21339:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:64017*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64017*0 + 3*603*FLEN/8, x4, x1, x2)

inst_21340:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:64020*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64020*0 + 3*604*FLEN/8, x4, x1, x2)

inst_21341:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:64023*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64023*0 + 3*605*FLEN/8, x4, x1, x2)

inst_21342:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:64026*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64026*0 + 3*606*FLEN/8, x4, x1, x2)

inst_21343:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:64029*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64029*0 + 3*607*FLEN/8, x4, x1, x2)

inst_21344:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:64032*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64032*0 + 3*608*FLEN/8, x4, x1, x2)

inst_21345:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:64035*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64035*0 + 3*609*FLEN/8, x4, x1, x2)

inst_21346:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:64038*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64038*0 + 3*610*FLEN/8, x4, x1, x2)

inst_21347:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:64041*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64041*0 + 3*611*FLEN/8, x4, x1, x2)

inst_21348:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:64044*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64044*0 + 3*612*FLEN/8, x4, x1, x2)

inst_21349:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:64047*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64047*0 + 3*613*FLEN/8, x4, x1, x2)

inst_21350:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:64050*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64050*0 + 3*614*FLEN/8, x4, x1, x2)

inst_21351:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb000000; valaddr_reg:x3; val_offset:64053*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64053*0 + 3*615*FLEN/8, x4, x1, x2)

inst_21352:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb000001; valaddr_reg:x3; val_offset:64056*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64056*0 + 3*616*FLEN/8, x4, x1, x2)

inst_21353:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb000003; valaddr_reg:x3; val_offset:64059*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64059*0 + 3*617*FLEN/8, x4, x1, x2)

inst_21354:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb000007; valaddr_reg:x3; val_offset:64062*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64062*0 + 3*618*FLEN/8, x4, x1, x2)

inst_21355:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb00000f; valaddr_reg:x3; val_offset:64065*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64065*0 + 3*619*FLEN/8, x4, x1, x2)

inst_21356:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb00001f; valaddr_reg:x3; val_offset:64068*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64068*0 + 3*620*FLEN/8, x4, x1, x2)

inst_21357:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb00003f; valaddr_reg:x3; val_offset:64071*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64071*0 + 3*621*FLEN/8, x4, x1, x2)

inst_21358:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb00007f; valaddr_reg:x3; val_offset:64074*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64074*0 + 3*622*FLEN/8, x4, x1, x2)

inst_21359:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb0000ff; valaddr_reg:x3; val_offset:64077*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64077*0 + 3*623*FLEN/8, x4, x1, x2)

inst_21360:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb0001ff; valaddr_reg:x3; val_offset:64080*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64080*0 + 3*624*FLEN/8, x4, x1, x2)

inst_21361:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb0003ff; valaddr_reg:x3; val_offset:64083*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64083*0 + 3*625*FLEN/8, x4, x1, x2)

inst_21362:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb0007ff; valaddr_reg:x3; val_offset:64086*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64086*0 + 3*626*FLEN/8, x4, x1, x2)

inst_21363:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb000fff; valaddr_reg:x3; val_offset:64089*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64089*0 + 3*627*FLEN/8, x4, x1, x2)

inst_21364:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb001fff; valaddr_reg:x3; val_offset:64092*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64092*0 + 3*628*FLEN/8, x4, x1, x2)

inst_21365:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb003fff; valaddr_reg:x3; val_offset:64095*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64095*0 + 3*629*FLEN/8, x4, x1, x2)

inst_21366:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb007fff; valaddr_reg:x3; val_offset:64098*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64098*0 + 3*630*FLEN/8, x4, x1, x2)

inst_21367:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb00ffff; valaddr_reg:x3; val_offset:64101*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64101*0 + 3*631*FLEN/8, x4, x1, x2)

inst_21368:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb01ffff; valaddr_reg:x3; val_offset:64104*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64104*0 + 3*632*FLEN/8, x4, x1, x2)

inst_21369:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb03ffff; valaddr_reg:x3; val_offset:64107*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64107*0 + 3*633*FLEN/8, x4, x1, x2)

inst_21370:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb07ffff; valaddr_reg:x3; val_offset:64110*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64110*0 + 3*634*FLEN/8, x4, x1, x2)

inst_21371:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb0fffff; valaddr_reg:x3; val_offset:64113*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64113*0 + 3*635*FLEN/8, x4, x1, x2)

inst_21372:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb1fffff; valaddr_reg:x3; val_offset:64116*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64116*0 + 3*636*FLEN/8, x4, x1, x2)

inst_21373:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb3fffff; valaddr_reg:x3; val_offset:64119*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64119*0 + 3*637*FLEN/8, x4, x1, x2)

inst_21374:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb400000; valaddr_reg:x3; val_offset:64122*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64122*0 + 3*638*FLEN/8, x4, x1, x2)

inst_21375:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb600000; valaddr_reg:x3; val_offset:64125*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64125*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_21376:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb700000; valaddr_reg:x3; val_offset:64128*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64128*0 + 3*640*FLEN/8, x4, x1, x2)

inst_21377:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb780000; valaddr_reg:x3; val_offset:64131*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64131*0 + 3*641*FLEN/8, x4, x1, x2)

inst_21378:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb7c0000; valaddr_reg:x3; val_offset:64134*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64134*0 + 3*642*FLEN/8, x4, x1, x2)

inst_21379:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb7e0000; valaddr_reg:x3; val_offset:64137*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64137*0 + 3*643*FLEN/8, x4, x1, x2)

inst_21380:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb7f0000; valaddr_reg:x3; val_offset:64140*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64140*0 + 3*644*FLEN/8, x4, x1, x2)

inst_21381:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb7f8000; valaddr_reg:x3; val_offset:64143*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64143*0 + 3*645*FLEN/8, x4, x1, x2)

inst_21382:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb7fc000; valaddr_reg:x3; val_offset:64146*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64146*0 + 3*646*FLEN/8, x4, x1, x2)

inst_21383:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb7fe000; valaddr_reg:x3; val_offset:64149*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64149*0 + 3*647*FLEN/8, x4, x1, x2)

inst_21384:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb7ff000; valaddr_reg:x3; val_offset:64152*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64152*0 + 3*648*FLEN/8, x4, x1, x2)

inst_21385:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb7ff800; valaddr_reg:x3; val_offset:64155*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64155*0 + 3*649*FLEN/8, x4, x1, x2)

inst_21386:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb7ffc00; valaddr_reg:x3; val_offset:64158*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64158*0 + 3*650*FLEN/8, x4, x1, x2)

inst_21387:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb7ffe00; valaddr_reg:x3; val_offset:64161*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64161*0 + 3*651*FLEN/8, x4, x1, x2)

inst_21388:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb7fff00; valaddr_reg:x3; val_offset:64164*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64164*0 + 3*652*FLEN/8, x4, x1, x2)

inst_21389:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb7fff80; valaddr_reg:x3; val_offset:64167*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64167*0 + 3*653*FLEN/8, x4, x1, x2)

inst_21390:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb7fffc0; valaddr_reg:x3; val_offset:64170*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64170*0 + 3*654*FLEN/8, x4, x1, x2)

inst_21391:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb7fffe0; valaddr_reg:x3; val_offset:64173*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64173*0 + 3*655*FLEN/8, x4, x1, x2)

inst_21392:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb7ffff0; valaddr_reg:x3; val_offset:64176*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64176*0 + 3*656*FLEN/8, x4, x1, x2)

inst_21393:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb7ffff8; valaddr_reg:x3; val_offset:64179*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64179*0 + 3*657*FLEN/8, x4, x1, x2)

inst_21394:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb7ffffc; valaddr_reg:x3; val_offset:64182*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64182*0 + 3*658*FLEN/8, x4, x1, x2)

inst_21395:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb7ffffe; valaddr_reg:x3; val_offset:64185*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64185*0 + 3*659*FLEN/8, x4, x1, x2)

inst_21396:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56f7eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6f7eb; op2val:0x0;
op3val:0xb7fffff; valaddr_reg:x3; val_offset:64188*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64188*0 + 3*660*FLEN/8, x4, x1, x2)

inst_21397:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:64191*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64191*0 + 3*661*FLEN/8, x4, x1, x2)

inst_21398:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:64194*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64194*0 + 3*662*FLEN/8, x4, x1, x2)

inst_21399:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:64197*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64197*0 + 3*663*FLEN/8, x4, x1, x2)

inst_21400:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:64200*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64200*0 + 3*664*FLEN/8, x4, x1, x2)

inst_21401:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:64203*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64203*0 + 3*665*FLEN/8, x4, x1, x2)

inst_21402:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:64206*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64206*0 + 3*666*FLEN/8, x4, x1, x2)

inst_21403:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:64209*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64209*0 + 3*667*FLEN/8, x4, x1, x2)

inst_21404:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:64212*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64212*0 + 3*668*FLEN/8, x4, x1, x2)

inst_21405:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:64215*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64215*0 + 3*669*FLEN/8, x4, x1, x2)

inst_21406:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:64218*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64218*0 + 3*670*FLEN/8, x4, x1, x2)

inst_21407:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:64221*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64221*0 + 3*671*FLEN/8, x4, x1, x2)

inst_21408:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:64224*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64224*0 + 3*672*FLEN/8, x4, x1, x2)

inst_21409:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:64227*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64227*0 + 3*673*FLEN/8, x4, x1, x2)

inst_21410:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:64230*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64230*0 + 3*674*FLEN/8, x4, x1, x2)

inst_21411:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:64233*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64233*0 + 3*675*FLEN/8, x4, x1, x2)

inst_21412:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:64236*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64236*0 + 3*676*FLEN/8, x4, x1, x2)

inst_21413:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x90000000; valaddr_reg:x3; val_offset:64239*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64239*0 + 3*677*FLEN/8, x4, x1, x2)

inst_21414:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x90000001; valaddr_reg:x3; val_offset:64242*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64242*0 + 3*678*FLEN/8, x4, x1, x2)

inst_21415:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x90000003; valaddr_reg:x3; val_offset:64245*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64245*0 + 3*679*FLEN/8, x4, x1, x2)

inst_21416:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x90000007; valaddr_reg:x3; val_offset:64248*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64248*0 + 3*680*FLEN/8, x4, x1, x2)

inst_21417:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x9000000f; valaddr_reg:x3; val_offset:64251*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64251*0 + 3*681*FLEN/8, x4, x1, x2)

inst_21418:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x9000001f; valaddr_reg:x3; val_offset:64254*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64254*0 + 3*682*FLEN/8, x4, x1, x2)

inst_21419:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x9000003f; valaddr_reg:x3; val_offset:64257*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64257*0 + 3*683*FLEN/8, x4, x1, x2)

inst_21420:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x9000007f; valaddr_reg:x3; val_offset:64260*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64260*0 + 3*684*FLEN/8, x4, x1, x2)

inst_21421:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x900000ff; valaddr_reg:x3; val_offset:64263*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64263*0 + 3*685*FLEN/8, x4, x1, x2)

inst_21422:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x900001ff; valaddr_reg:x3; val_offset:64266*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64266*0 + 3*686*FLEN/8, x4, x1, x2)

inst_21423:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x900003ff; valaddr_reg:x3; val_offset:64269*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64269*0 + 3*687*FLEN/8, x4, x1, x2)

inst_21424:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x900007ff; valaddr_reg:x3; val_offset:64272*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64272*0 + 3*688*FLEN/8, x4, x1, x2)

inst_21425:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x90000fff; valaddr_reg:x3; val_offset:64275*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64275*0 + 3*689*FLEN/8, x4, x1, x2)

inst_21426:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x90001fff; valaddr_reg:x3; val_offset:64278*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64278*0 + 3*690*FLEN/8, x4, x1, x2)

inst_21427:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x90003fff; valaddr_reg:x3; val_offset:64281*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64281*0 + 3*691*FLEN/8, x4, x1, x2)

inst_21428:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x90007fff; valaddr_reg:x3; val_offset:64284*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64284*0 + 3*692*FLEN/8, x4, x1, x2)

inst_21429:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x9000ffff; valaddr_reg:x3; val_offset:64287*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64287*0 + 3*693*FLEN/8, x4, x1, x2)

inst_21430:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x9001ffff; valaddr_reg:x3; val_offset:64290*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64290*0 + 3*694*FLEN/8, x4, x1, x2)

inst_21431:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x9003ffff; valaddr_reg:x3; val_offset:64293*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64293*0 + 3*695*FLEN/8, x4, x1, x2)

inst_21432:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x9007ffff; valaddr_reg:x3; val_offset:64296*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64296*0 + 3*696*FLEN/8, x4, x1, x2)

inst_21433:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x900fffff; valaddr_reg:x3; val_offset:64299*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64299*0 + 3*697*FLEN/8, x4, x1, x2)

inst_21434:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x901fffff; valaddr_reg:x3; val_offset:64302*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64302*0 + 3*698*FLEN/8, x4, x1, x2)

inst_21435:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x903fffff; valaddr_reg:x3; val_offset:64305*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64305*0 + 3*699*FLEN/8, x4, x1, x2)

inst_21436:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x90400000; valaddr_reg:x3; val_offset:64308*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64308*0 + 3*700*FLEN/8, x4, x1, x2)

inst_21437:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x90600000; valaddr_reg:x3; val_offset:64311*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64311*0 + 3*701*FLEN/8, x4, x1, x2)

inst_21438:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x90700000; valaddr_reg:x3; val_offset:64314*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64314*0 + 3*702*FLEN/8, x4, x1, x2)

inst_21439:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x90780000; valaddr_reg:x3; val_offset:64317*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64317*0 + 3*703*FLEN/8, x4, x1, x2)

inst_21440:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x907c0000; valaddr_reg:x3; val_offset:64320*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64320*0 + 3*704*FLEN/8, x4, x1, x2)

inst_21441:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x907e0000; valaddr_reg:x3; val_offset:64323*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64323*0 + 3*705*FLEN/8, x4, x1, x2)

inst_21442:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x907f0000; valaddr_reg:x3; val_offset:64326*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64326*0 + 3*706*FLEN/8, x4, x1, x2)

inst_21443:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x907f8000; valaddr_reg:x3; val_offset:64329*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64329*0 + 3*707*FLEN/8, x4, x1, x2)

inst_21444:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x907fc000; valaddr_reg:x3; val_offset:64332*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64332*0 + 3*708*FLEN/8, x4, x1, x2)

inst_21445:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x907fe000; valaddr_reg:x3; val_offset:64335*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64335*0 + 3*709*FLEN/8, x4, x1, x2)

inst_21446:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x907ff000; valaddr_reg:x3; val_offset:64338*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64338*0 + 3*710*FLEN/8, x4, x1, x2)

inst_21447:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x907ff800; valaddr_reg:x3; val_offset:64341*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64341*0 + 3*711*FLEN/8, x4, x1, x2)

inst_21448:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x907ffc00; valaddr_reg:x3; val_offset:64344*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64344*0 + 3*712*FLEN/8, x4, x1, x2)

inst_21449:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x907ffe00; valaddr_reg:x3; val_offset:64347*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64347*0 + 3*713*FLEN/8, x4, x1, x2)

inst_21450:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x907fff00; valaddr_reg:x3; val_offset:64350*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64350*0 + 3*714*FLEN/8, x4, x1, x2)

inst_21451:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x907fff80; valaddr_reg:x3; val_offset:64353*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64353*0 + 3*715*FLEN/8, x4, x1, x2)

inst_21452:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x907fffc0; valaddr_reg:x3; val_offset:64356*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64356*0 + 3*716*FLEN/8, x4, x1, x2)

inst_21453:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x907fffe0; valaddr_reg:x3; val_offset:64359*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64359*0 + 3*717*FLEN/8, x4, x1, x2)

inst_21454:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x907ffff0; valaddr_reg:x3; val_offset:64362*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64362*0 + 3*718*FLEN/8, x4, x1, x2)

inst_21455:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x907ffff8; valaddr_reg:x3; val_offset:64365*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64365*0 + 3*719*FLEN/8, x4, x1, x2)

inst_21456:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x907ffffc; valaddr_reg:x3; val_offset:64368*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64368*0 + 3*720*FLEN/8, x4, x1, x2)

inst_21457:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x907ffffe; valaddr_reg:x3; val_offset:64371*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64371*0 + 3*721*FLEN/8, x4, x1, x2)

inst_21458:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x588a07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed88a07; op2val:0x80000000;
op3val:0x907fffff; valaddr_reg:x3; val_offset:64374*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64374*0 + 3*722*FLEN/8, x4, x1, x2)

inst_21459:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:64377*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64377*0 + 3*723*FLEN/8, x4, x1, x2)

inst_21460:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:64380*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64380*0 + 3*724*FLEN/8, x4, x1, x2)

inst_21461:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:64383*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64383*0 + 3*725*FLEN/8, x4, x1, x2)

inst_21462:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x80999999; valaddr_reg:x3; val_offset:64386*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64386*0 + 3*726*FLEN/8, x4, x1, x2)

inst_21463:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x80a49249; valaddr_reg:x3; val_offset:64389*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64389*0 + 3*727*FLEN/8, x4, x1, x2)

inst_21464:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x80b33333; valaddr_reg:x3; val_offset:64392*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64392*0 + 3*728*FLEN/8, x4, x1, x2)

inst_21465:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x80b6db6d; valaddr_reg:x3; val_offset:64395*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64395*0 + 3*729*FLEN/8, x4, x1, x2)

inst_21466:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x80bbbbbb; valaddr_reg:x3; val_offset:64398*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64398*0 + 3*730*FLEN/8, x4, x1, x2)

inst_21467:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x80c44444; valaddr_reg:x3; val_offset:64401*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64401*0 + 3*731*FLEN/8, x4, x1, x2)

inst_21468:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x80cccccc; valaddr_reg:x3; val_offset:64404*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64404*0 + 3*732*FLEN/8, x4, x1, x2)

inst_21469:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x80db6db6; valaddr_reg:x3; val_offset:64407*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64407*0 + 3*733*FLEN/8, x4, x1, x2)

inst_21470:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x80e66666; valaddr_reg:x3; val_offset:64410*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64410*0 + 3*734*FLEN/8, x4, x1, x2)

inst_21471:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x80edb6db; valaddr_reg:x3; val_offset:64413*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64413*0 + 3*735*FLEN/8, x4, x1, x2)

inst_21472:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:64416*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64416*0 + 3*736*FLEN/8, x4, x1, x2)

inst_21473:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:64419*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64419*0 + 3*737*FLEN/8, x4, x1, x2)

inst_21474:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:64422*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64422*0 + 3*738*FLEN/8, x4, x1, x2)

inst_21475:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x8e000000; valaddr_reg:x3; val_offset:64425*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64425*0 + 3*739*FLEN/8, x4, x1, x2)

inst_21476:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x8e000001; valaddr_reg:x3; val_offset:64428*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64428*0 + 3*740*FLEN/8, x4, x1, x2)

inst_21477:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x8e000003; valaddr_reg:x3; val_offset:64431*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64431*0 + 3*741*FLEN/8, x4, x1, x2)

inst_21478:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x8e000007; valaddr_reg:x3; val_offset:64434*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64434*0 + 3*742*FLEN/8, x4, x1, x2)

inst_21479:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x8e00000f; valaddr_reg:x3; val_offset:64437*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64437*0 + 3*743*FLEN/8, x4, x1, x2)

inst_21480:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x8e00001f; valaddr_reg:x3; val_offset:64440*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64440*0 + 3*744*FLEN/8, x4, x1, x2)

inst_21481:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x8e00003f; valaddr_reg:x3; val_offset:64443*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64443*0 + 3*745*FLEN/8, x4, x1, x2)

inst_21482:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x8e00007f; valaddr_reg:x3; val_offset:64446*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64446*0 + 3*746*FLEN/8, x4, x1, x2)

inst_21483:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x8e0000ff; valaddr_reg:x3; val_offset:64449*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64449*0 + 3*747*FLEN/8, x4, x1, x2)

inst_21484:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x8e0001ff; valaddr_reg:x3; val_offset:64452*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64452*0 + 3*748*FLEN/8, x4, x1, x2)

inst_21485:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x8e0003ff; valaddr_reg:x3; val_offset:64455*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64455*0 + 3*749*FLEN/8, x4, x1, x2)

inst_21486:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x8e0007ff; valaddr_reg:x3; val_offset:64458*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64458*0 + 3*750*FLEN/8, x4, x1, x2)

inst_21487:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x8e000fff; valaddr_reg:x3; val_offset:64461*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64461*0 + 3*751*FLEN/8, x4, x1, x2)

inst_21488:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x8e001fff; valaddr_reg:x3; val_offset:64464*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64464*0 + 3*752*FLEN/8, x4, x1, x2)

inst_21489:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x8e003fff; valaddr_reg:x3; val_offset:64467*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64467*0 + 3*753*FLEN/8, x4, x1, x2)

inst_21490:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x8e007fff; valaddr_reg:x3; val_offset:64470*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64470*0 + 3*754*FLEN/8, x4, x1, x2)

inst_21491:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x8e00ffff; valaddr_reg:x3; val_offset:64473*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64473*0 + 3*755*FLEN/8, x4, x1, x2)

inst_21492:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x8e01ffff; valaddr_reg:x3; val_offset:64476*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64476*0 + 3*756*FLEN/8, x4, x1, x2)

inst_21493:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x8e03ffff; valaddr_reg:x3; val_offset:64479*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64479*0 + 3*757*FLEN/8, x4, x1, x2)

inst_21494:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x8e07ffff; valaddr_reg:x3; val_offset:64482*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64482*0 + 3*758*FLEN/8, x4, x1, x2)

inst_21495:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x8e0fffff; valaddr_reg:x3; val_offset:64485*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64485*0 + 3*759*FLEN/8, x4, x1, x2)

inst_21496:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x8e1fffff; valaddr_reg:x3; val_offset:64488*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64488*0 + 3*760*FLEN/8, x4, x1, x2)

inst_21497:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x8e3fffff; valaddr_reg:x3; val_offset:64491*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64491*0 + 3*761*FLEN/8, x4, x1, x2)

inst_21498:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x8e400000; valaddr_reg:x3; val_offset:64494*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64494*0 + 3*762*FLEN/8, x4, x1, x2)

inst_21499:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x8e600000; valaddr_reg:x3; val_offset:64497*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64497*0 + 3*763*FLEN/8, x4, x1, x2)

inst_21500:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x8e700000; valaddr_reg:x3; val_offset:64500*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64500*0 + 3*764*FLEN/8, x4, x1, x2)

inst_21501:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x8e780000; valaddr_reg:x3; val_offset:64503*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64503*0 + 3*765*FLEN/8, x4, x1, x2)

inst_21502:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x8e7c0000; valaddr_reg:x3; val_offset:64506*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64506*0 + 3*766*FLEN/8, x4, x1, x2)

inst_21503:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x595956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed95956; op2val:0x80000000;
op3val:0x8e7e0000; valaddr_reg:x3; val_offset:64509*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 64509*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(3984621567,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(3984654335,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(3984719871,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(3984850943,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(3985113087,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(3985637375,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(3986685951,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(3988783103,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(3988783104,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(3990880256,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(3991928832,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(3992453120,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(3992715264,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(3992846336,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(3992911872,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(3992944640,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(3992961024,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(3992969216,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(3992973312,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(3992975360,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(3992976384,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(3992976896,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(3992977152,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(3992977280,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(3992977344,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(3992977376,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(3992977392,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(3992977400,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(3992977404,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(3992977406,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(3992977407,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2127649826,32,FLEN)
NAN_BOXED(3223094241,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644416,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644417,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644419,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644423,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644431,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644447,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644479,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644543,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644671,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644927,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323645439,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323646463,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323648511,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323652607,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323660799,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323677183,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323709951,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323775487,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323906559,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2324168703,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2324692991,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2325741567,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2327838719,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2327838720,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2329935872,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2330984448,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2331508736,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2331770880,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2331901952,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2331967488,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332000256,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332016640,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332024832,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332028928,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332030976,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332032000,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332032512,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332032768,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332032896,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332032960,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332032992,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033008,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033016,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033020,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033022,32,FLEN)
NAN_BOXED(2127706017,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033023,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777216,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777217,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777219,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777223,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777231,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777247,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777279,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777343,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777471,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777727,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16778239,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16779263,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16781311,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16785407,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16793599,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16809983,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16842751,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16908287,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(17039359,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(17301503,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(17825791,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(18874367,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(20971519,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(20971520,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(23068672,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(24117248,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(24641536,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(24903680,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25034752,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25100288,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25133056,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25149440,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25157632,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25161728,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25163776,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25164800,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165312,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165568,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165696,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165760,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165792,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165808,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165816,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165820,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165822,32,FLEN)
NAN_BOXED(2127732274,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165823,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(2994733056,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(2994733057,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(2994733059,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(2994733063,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(2994733071,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(2994733087,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(2994733119,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(2994733183,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(2994733311,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(2994733567,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(2994734079,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(2994735103,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(2994737151,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(2994741247,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(2994749439,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(2994765823,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(2994798591,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(2994864127,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(2994995199,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(2995257343,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(2995781631,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(2996830207,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(2998927359,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(2998927360,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3001024512,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3002073088,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3002597376,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3002859520,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3002990592,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3003056128,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3003088896,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3003105280,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3003113472,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3003117568,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3003119616,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3003120640,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3003121152,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3003121408,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3003121536,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3003121600,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3003121632,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3003121648,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3003121656,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3003121660,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3003121662,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3003121663,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2127734231,32,FLEN)
NAN_BOXED(2152580979,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388609,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388611,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388615,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10066329,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10785353,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11744051,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11983725,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12303291,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12862532,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(13421772,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(14380470,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15099494,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15578843,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777208,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777212,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777214,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994944,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994945,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994947,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994951,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994959,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994975,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150995007,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150995071,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150995199,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150995455,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150995967,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150996991,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150999039,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(151003135,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(151011327,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(151027711,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(151060479,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(151126015,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(151257087,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(151519231,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(152043519,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(153092095,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(155189247,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(155189248,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(157286400,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(158334976,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(158859264,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159121408,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159252480,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159318016,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159350784,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159367168,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159375360,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159379456,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159381504,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159382528,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383040,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383296,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383424,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383488,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383520,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383536,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383544,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383548,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383550,32,FLEN)
NAN_BOXED(2127748870,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383551,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867200,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867201,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867203,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867207,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867215,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867231,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867263,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867327,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867455,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867711,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306868223,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306869247,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306871295,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306875391,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306883583,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306899967,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306932735,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306998271,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2307129343,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2307391487,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2307915775,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2308964351,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2311061503,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2311061504,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2313158656,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2314207232,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2314731520,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2314993664,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315124736,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315190272,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315223040,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315239424,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315247616,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315251712,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315253760,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315254784,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255296,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255552,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255680,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255744,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255776,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255792,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255800,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255804,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255806,32,FLEN)
NAN_BOXED(2127802309,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255807,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492416,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492417,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492419,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492423,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492431,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492447,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492479,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492543,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492671,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492927,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226493439,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226494463,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226496511,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226500607,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226508799,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226525183,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226557951,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226623487,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226754559,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(227016703,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(227540991,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(228589567,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(230686719,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(230686720,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(232783872,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(233832448,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234356736,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234618880,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234749952,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234815488,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234848256,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234864640,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234872832,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234876928,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234878976,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234880000,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234880512,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234880768,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234880896,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234880960,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234880992,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881008,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881016,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881020,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881022,32,FLEN)
NAN_BOXED(2127833929,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881023,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1887436800,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1887436801,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1887436803,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1887436807,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1887436815,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1887436831,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1887436863,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1887436927,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1887437055,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1887437311,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1887437823,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1887438847,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1887440895,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1887444991,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1887453183,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1887469567,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1887502335,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1887567871,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1887698943,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1887961087,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1888485375,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1889533951,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1891631103,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1891631104,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1893728256,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1894776832,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1895301120,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1895563264,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1895694336,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1895759872,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1895792640,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1895809024,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1895817216,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1895821312,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1895823360,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1895824384,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1895824896,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1895825152,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1895825280,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1895825344,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1895825376,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1895825392,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1895825400,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1895825404,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1895825406,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(1895825407,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2127851063,32,FLEN)
NAN_BOXED(1075462325,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483663,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483679,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483711,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483775,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483903,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147484159,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147484671,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147485695,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147487743,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147491839,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147500031,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147516415,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147549183,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147614719,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147745791,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2148007935,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2148532223,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149580799,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151677951,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151677952,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153775104,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154823680,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155347968,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155610112,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155741184,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155806720,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155839488,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155855872,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155864064,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155868160,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155870208,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155871232,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155871744,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872000,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872128,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872192,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872224,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872240,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2127933357,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3800039424,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3800039425,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3800039427,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3800039431,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3800039439,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3800039455,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3800039487,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3800039551,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3800039679,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3800039935,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3800040447,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3800041471,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3800043519,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3800047615,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3800055807,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3800072191,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3800104959,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3800170495,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3800301567,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3800563711,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3801087999,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3802136575,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3804233727,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3804233728,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3806330880,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3807379456,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3807903744,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3808165888,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3808296960,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3808362496,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3808395264,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3808411648,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3808419840,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3808423936,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3808425984,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3808427008,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3808427520,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3808427776,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3808427904,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3808427968,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3808428000,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3808428016,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3808428024,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3808428028,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3808428030,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(3808428031,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2127976315,32,FLEN)
NAN_BOXED(3222855835,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549376,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549377,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549379,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549383,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549391,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549407,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549439,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549503,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549631,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549887,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184550399,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184551423,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184553471,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184557567,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184565759,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184582143,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184614911,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184680447,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184811519,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(185073663,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(185597951,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(186646527,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(188743679,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(188743680,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(190840832,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(191889408,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192413696,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192675840,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192806912,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192872448,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192905216,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192921600,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192929792,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192933888,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192935936,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192936960,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937472,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937728,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937856,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937920,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937952,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937968,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937976,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937980,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937982,32,FLEN)
NAN_BOXED(2128017387,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937983,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919104,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919105,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919107,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919111,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919119,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919135,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919167,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919231,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919359,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919615,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415920127,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415921151,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415923199,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415927295,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415935487,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415951871,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415984639,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2416050175,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2416181247,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2416443391,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2416967679,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2418016255,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2420113407,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2420113408,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2422210560,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2423259136,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2423783424,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424045568,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424176640,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424242176,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424274944,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424291328,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424299520,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424303616,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424305664,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424306688,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307200,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307456,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307584,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307648,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307680,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307696,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307704,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307708,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307710,32,FLEN)
NAN_BOXED(2128120327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307711,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157549977,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2158269001,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159227699,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159467373,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159786939,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160346180,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160905420,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2161864118,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162583142,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163062491,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364672,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364673,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364675,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364679,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364687,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364703,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364735,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364799,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364927,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382365183,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382365695,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382366719,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382368767,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382372863,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382381055,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382397439,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382430207,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382495743,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382626815,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382888959,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2383413247,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2384461823,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2386558975,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2386558976,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2388656128,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2389704704,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390228992,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390491136,32,FLEN)
NAN_BOXED(2128173398,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390622208,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
