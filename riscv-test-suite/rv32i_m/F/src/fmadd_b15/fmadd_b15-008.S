
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:17:59 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmadd.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmadd_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmadd_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmadd_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_5376:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0xedb6db; valaddr_reg:x3; val_offset:16128*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16128*0 + 3*0*FLEN/8, x4, x1, x2)

inst_5377:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0xfffff8; valaddr_reg:x3; val_offset:16131*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16131*0 + 3*1*FLEN/8, x4, x1, x2)

inst_5378:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0xfffffc; valaddr_reg:x3; val_offset:16134*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16134*0 + 3*2*FLEN/8, x4, x1, x2)

inst_5379:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0xfffffe; valaddr_reg:x3; val_offset:16137*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16137*0 + 3*3*FLEN/8, x4, x1, x2)

inst_5380:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x10000000; valaddr_reg:x3; val_offset:16140*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16140*0 + 3*4*FLEN/8, x4, x1, x2)

inst_5381:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x10000001; valaddr_reg:x3; val_offset:16143*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16143*0 + 3*5*FLEN/8, x4, x1, x2)

inst_5382:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x10000003; valaddr_reg:x3; val_offset:16146*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16146*0 + 3*6*FLEN/8, x4, x1, x2)

inst_5383:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x10000007; valaddr_reg:x3; val_offset:16149*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16149*0 + 3*7*FLEN/8, x4, x1, x2)

inst_5384:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x1000000f; valaddr_reg:x3; val_offset:16152*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16152*0 + 3*8*FLEN/8, x4, x1, x2)

inst_5385:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x1000001f; valaddr_reg:x3; val_offset:16155*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16155*0 + 3*9*FLEN/8, x4, x1, x2)

inst_5386:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x1000003f; valaddr_reg:x3; val_offset:16158*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16158*0 + 3*10*FLEN/8, x4, x1, x2)

inst_5387:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x1000007f; valaddr_reg:x3; val_offset:16161*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16161*0 + 3*11*FLEN/8, x4, x1, x2)

inst_5388:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x100000ff; valaddr_reg:x3; val_offset:16164*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16164*0 + 3*12*FLEN/8, x4, x1, x2)

inst_5389:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x100001ff; valaddr_reg:x3; val_offset:16167*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16167*0 + 3*13*FLEN/8, x4, x1, x2)

inst_5390:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x100003ff; valaddr_reg:x3; val_offset:16170*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16170*0 + 3*14*FLEN/8, x4, x1, x2)

inst_5391:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x100007ff; valaddr_reg:x3; val_offset:16173*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16173*0 + 3*15*FLEN/8, x4, x1, x2)

inst_5392:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x10000fff; valaddr_reg:x3; val_offset:16176*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16176*0 + 3*16*FLEN/8, x4, x1, x2)

inst_5393:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x10001fff; valaddr_reg:x3; val_offset:16179*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16179*0 + 3*17*FLEN/8, x4, x1, x2)

inst_5394:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x10003fff; valaddr_reg:x3; val_offset:16182*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16182*0 + 3*18*FLEN/8, x4, x1, x2)

inst_5395:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x10007fff; valaddr_reg:x3; val_offset:16185*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16185*0 + 3*19*FLEN/8, x4, x1, x2)

inst_5396:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x1000ffff; valaddr_reg:x3; val_offset:16188*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16188*0 + 3*20*FLEN/8, x4, x1, x2)

inst_5397:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x1001ffff; valaddr_reg:x3; val_offset:16191*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16191*0 + 3*21*FLEN/8, x4, x1, x2)

inst_5398:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x1003ffff; valaddr_reg:x3; val_offset:16194*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16194*0 + 3*22*FLEN/8, x4, x1, x2)

inst_5399:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x1007ffff; valaddr_reg:x3; val_offset:16197*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16197*0 + 3*23*FLEN/8, x4, x1, x2)

inst_5400:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x100fffff; valaddr_reg:x3; val_offset:16200*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16200*0 + 3*24*FLEN/8, x4, x1, x2)

inst_5401:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x101fffff; valaddr_reg:x3; val_offset:16203*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16203*0 + 3*25*FLEN/8, x4, x1, x2)

inst_5402:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x103fffff; valaddr_reg:x3; val_offset:16206*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16206*0 + 3*26*FLEN/8, x4, x1, x2)

inst_5403:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x10400000; valaddr_reg:x3; val_offset:16209*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16209*0 + 3*27*FLEN/8, x4, x1, x2)

inst_5404:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x10600000; valaddr_reg:x3; val_offset:16212*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16212*0 + 3*28*FLEN/8, x4, x1, x2)

inst_5405:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x10700000; valaddr_reg:x3; val_offset:16215*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16215*0 + 3*29*FLEN/8, x4, x1, x2)

inst_5406:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x10780000; valaddr_reg:x3; val_offset:16218*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16218*0 + 3*30*FLEN/8, x4, x1, x2)

inst_5407:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x107c0000; valaddr_reg:x3; val_offset:16221*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16221*0 + 3*31*FLEN/8, x4, x1, x2)

inst_5408:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x107e0000; valaddr_reg:x3; val_offset:16224*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16224*0 + 3*32*FLEN/8, x4, x1, x2)

inst_5409:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x107f0000; valaddr_reg:x3; val_offset:16227*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16227*0 + 3*33*FLEN/8, x4, x1, x2)

inst_5410:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x107f8000; valaddr_reg:x3; val_offset:16230*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16230*0 + 3*34*FLEN/8, x4, x1, x2)

inst_5411:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x107fc000; valaddr_reg:x3; val_offset:16233*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16233*0 + 3*35*FLEN/8, x4, x1, x2)

inst_5412:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x107fe000; valaddr_reg:x3; val_offset:16236*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16236*0 + 3*36*FLEN/8, x4, x1, x2)

inst_5413:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x107ff000; valaddr_reg:x3; val_offset:16239*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16239*0 + 3*37*FLEN/8, x4, x1, x2)

inst_5414:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x107ff800; valaddr_reg:x3; val_offset:16242*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16242*0 + 3*38*FLEN/8, x4, x1, x2)

inst_5415:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x107ffc00; valaddr_reg:x3; val_offset:16245*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16245*0 + 3*39*FLEN/8, x4, x1, x2)

inst_5416:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x107ffe00; valaddr_reg:x3; val_offset:16248*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16248*0 + 3*40*FLEN/8, x4, x1, x2)

inst_5417:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x107fff00; valaddr_reg:x3; val_offset:16251*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16251*0 + 3*41*FLEN/8, x4, x1, x2)

inst_5418:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x107fff80; valaddr_reg:x3; val_offset:16254*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16254*0 + 3*42*FLEN/8, x4, x1, x2)

inst_5419:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x107fffc0; valaddr_reg:x3; val_offset:16257*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16257*0 + 3*43*FLEN/8, x4, x1, x2)

inst_5420:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x107fffe0; valaddr_reg:x3; val_offset:16260*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16260*0 + 3*44*FLEN/8, x4, x1, x2)

inst_5421:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x107ffff0; valaddr_reg:x3; val_offset:16263*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16263*0 + 3*45*FLEN/8, x4, x1, x2)

inst_5422:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x107ffff8; valaddr_reg:x3; val_offset:16266*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16266*0 + 3*46*FLEN/8, x4, x1, x2)

inst_5423:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x107ffffc; valaddr_reg:x3; val_offset:16269*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16269*0 + 3*47*FLEN/8, x4, x1, x2)

inst_5424:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x107ffffe; valaddr_reg:x3; val_offset:16272*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16272*0 + 3*48*FLEN/8, x4, x1, x2)

inst_5425:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x433d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x20 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc33d56; op2val:0x0;
op3val:0x107fffff; valaddr_reg:x3; val_offset:16275*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16275*0 + 3*49*FLEN/8, x4, x1, x2)

inst_5426:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x20000000; valaddr_reg:x3; val_offset:16278*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16278*0 + 3*50*FLEN/8, x4, x1, x2)

inst_5427:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x20000001; valaddr_reg:x3; val_offset:16281*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16281*0 + 3*51*FLEN/8, x4, x1, x2)

inst_5428:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x20000003; valaddr_reg:x3; val_offset:16284*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16284*0 + 3*52*FLEN/8, x4, x1, x2)

inst_5429:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x20000007; valaddr_reg:x3; val_offset:16287*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16287*0 + 3*53*FLEN/8, x4, x1, x2)

inst_5430:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x2000000f; valaddr_reg:x3; val_offset:16290*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16290*0 + 3*54*FLEN/8, x4, x1, x2)

inst_5431:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x2000001f; valaddr_reg:x3; val_offset:16293*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16293*0 + 3*55*FLEN/8, x4, x1, x2)

inst_5432:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x2000003f; valaddr_reg:x3; val_offset:16296*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16296*0 + 3*56*FLEN/8, x4, x1, x2)

inst_5433:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x2000007f; valaddr_reg:x3; val_offset:16299*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16299*0 + 3*57*FLEN/8, x4, x1, x2)

inst_5434:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x200000ff; valaddr_reg:x3; val_offset:16302*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16302*0 + 3*58*FLEN/8, x4, x1, x2)

inst_5435:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x200001ff; valaddr_reg:x3; val_offset:16305*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16305*0 + 3*59*FLEN/8, x4, x1, x2)

inst_5436:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x200003ff; valaddr_reg:x3; val_offset:16308*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16308*0 + 3*60*FLEN/8, x4, x1, x2)

inst_5437:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x200007ff; valaddr_reg:x3; val_offset:16311*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16311*0 + 3*61*FLEN/8, x4, x1, x2)

inst_5438:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x20000fff; valaddr_reg:x3; val_offset:16314*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16314*0 + 3*62*FLEN/8, x4, x1, x2)

inst_5439:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x20001fff; valaddr_reg:x3; val_offset:16317*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16317*0 + 3*63*FLEN/8, x4, x1, x2)

inst_5440:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x20003fff; valaddr_reg:x3; val_offset:16320*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16320*0 + 3*64*FLEN/8, x4, x1, x2)

inst_5441:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x20007fff; valaddr_reg:x3; val_offset:16323*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16323*0 + 3*65*FLEN/8, x4, x1, x2)

inst_5442:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x2000ffff; valaddr_reg:x3; val_offset:16326*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16326*0 + 3*66*FLEN/8, x4, x1, x2)

inst_5443:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x2001ffff; valaddr_reg:x3; val_offset:16329*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16329*0 + 3*67*FLEN/8, x4, x1, x2)

inst_5444:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x2003ffff; valaddr_reg:x3; val_offset:16332*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16332*0 + 3*68*FLEN/8, x4, x1, x2)

inst_5445:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x2007ffff; valaddr_reg:x3; val_offset:16335*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16335*0 + 3*69*FLEN/8, x4, x1, x2)

inst_5446:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x200fffff; valaddr_reg:x3; val_offset:16338*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16338*0 + 3*70*FLEN/8, x4, x1, x2)

inst_5447:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x201fffff; valaddr_reg:x3; val_offset:16341*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16341*0 + 3*71*FLEN/8, x4, x1, x2)

inst_5448:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x203fffff; valaddr_reg:x3; val_offset:16344*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16344*0 + 3*72*FLEN/8, x4, x1, x2)

inst_5449:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x20400000; valaddr_reg:x3; val_offset:16347*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16347*0 + 3*73*FLEN/8, x4, x1, x2)

inst_5450:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x20600000; valaddr_reg:x3; val_offset:16350*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16350*0 + 3*74*FLEN/8, x4, x1, x2)

inst_5451:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x20700000; valaddr_reg:x3; val_offset:16353*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16353*0 + 3*75*FLEN/8, x4, x1, x2)

inst_5452:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x20780000; valaddr_reg:x3; val_offset:16356*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16356*0 + 3*76*FLEN/8, x4, x1, x2)

inst_5453:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x207c0000; valaddr_reg:x3; val_offset:16359*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16359*0 + 3*77*FLEN/8, x4, x1, x2)

inst_5454:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x207e0000; valaddr_reg:x3; val_offset:16362*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16362*0 + 3*78*FLEN/8, x4, x1, x2)

inst_5455:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x207f0000; valaddr_reg:x3; val_offset:16365*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16365*0 + 3*79*FLEN/8, x4, x1, x2)

inst_5456:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x207f8000; valaddr_reg:x3; val_offset:16368*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16368*0 + 3*80*FLEN/8, x4, x1, x2)

inst_5457:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x207fc000; valaddr_reg:x3; val_offset:16371*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16371*0 + 3*81*FLEN/8, x4, x1, x2)

inst_5458:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x207fe000; valaddr_reg:x3; val_offset:16374*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16374*0 + 3*82*FLEN/8, x4, x1, x2)

inst_5459:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x207ff000; valaddr_reg:x3; val_offset:16377*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16377*0 + 3*83*FLEN/8, x4, x1, x2)

inst_5460:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x207ff800; valaddr_reg:x3; val_offset:16380*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16380*0 + 3*84*FLEN/8, x4, x1, x2)

inst_5461:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x207ffc00; valaddr_reg:x3; val_offset:16383*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16383*0 + 3*85*FLEN/8, x4, x1, x2)

inst_5462:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x207ffe00; valaddr_reg:x3; val_offset:16386*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16386*0 + 3*86*FLEN/8, x4, x1, x2)

inst_5463:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x207fff00; valaddr_reg:x3; val_offset:16389*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16389*0 + 3*87*FLEN/8, x4, x1, x2)

inst_5464:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x207fff80; valaddr_reg:x3; val_offset:16392*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16392*0 + 3*88*FLEN/8, x4, x1, x2)

inst_5465:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x207fffc0; valaddr_reg:x3; val_offset:16395*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16395*0 + 3*89*FLEN/8, x4, x1, x2)

inst_5466:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x207fffe0; valaddr_reg:x3; val_offset:16398*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16398*0 + 3*90*FLEN/8, x4, x1, x2)

inst_5467:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x207ffff0; valaddr_reg:x3; val_offset:16401*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16401*0 + 3*91*FLEN/8, x4, x1, x2)

inst_5468:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x207ffff8; valaddr_reg:x3; val_offset:16404*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16404*0 + 3*92*FLEN/8, x4, x1, x2)

inst_5469:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x207ffffc; valaddr_reg:x3; val_offset:16407*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16407*0 + 3*93*FLEN/8, x4, x1, x2)

inst_5470:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x207ffffe; valaddr_reg:x3; val_offset:16410*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16410*0 + 3*94*FLEN/8, x4, x1, x2)

inst_5471:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x207fffff; valaddr_reg:x3; val_offset:16413*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16413*0 + 3*95*FLEN/8, x4, x1, x2)

inst_5472:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x3f800001; valaddr_reg:x3; val_offset:16416*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16416*0 + 3*96*FLEN/8, x4, x1, x2)

inst_5473:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x3f800003; valaddr_reg:x3; val_offset:16419*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16419*0 + 3*97*FLEN/8, x4, x1, x2)

inst_5474:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x3f800007; valaddr_reg:x3; val_offset:16422*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16422*0 + 3*98*FLEN/8, x4, x1, x2)

inst_5475:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x3f999999; valaddr_reg:x3; val_offset:16425*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16425*0 + 3*99*FLEN/8, x4, x1, x2)

inst_5476:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:16428*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16428*0 + 3*100*FLEN/8, x4, x1, x2)

inst_5477:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:16431*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16431*0 + 3*101*FLEN/8, x4, x1, x2)

inst_5478:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:16434*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16434*0 + 3*102*FLEN/8, x4, x1, x2)

inst_5479:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:16437*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16437*0 + 3*103*FLEN/8, x4, x1, x2)

inst_5480:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:16440*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16440*0 + 3*104*FLEN/8, x4, x1, x2)

inst_5481:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:16443*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16443*0 + 3*105*FLEN/8, x4, x1, x2)

inst_5482:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:16446*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16446*0 + 3*106*FLEN/8, x4, x1, x2)

inst_5483:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:16449*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16449*0 + 3*107*FLEN/8, x4, x1, x2)

inst_5484:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:16452*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16452*0 + 3*108*FLEN/8, x4, x1, x2)

inst_5485:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:16455*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16455*0 + 3*109*FLEN/8, x4, x1, x2)

inst_5486:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:16458*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16458*0 + 3*110*FLEN/8, x4, x1, x2)

inst_5487:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x480655 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23d1d9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc80655; op2val:0x123d1d9;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:16461*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16461*0 + 3*111*FLEN/8, x4, x1, x2)

inst_5488:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb4800000; valaddr_reg:x3; val_offset:16464*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16464*0 + 3*112*FLEN/8, x4, x1, x2)

inst_5489:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb4800001; valaddr_reg:x3; val_offset:16467*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16467*0 + 3*113*FLEN/8, x4, x1, x2)

inst_5490:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb4800003; valaddr_reg:x3; val_offset:16470*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16470*0 + 3*114*FLEN/8, x4, x1, x2)

inst_5491:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb4800007; valaddr_reg:x3; val_offset:16473*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16473*0 + 3*115*FLEN/8, x4, x1, x2)

inst_5492:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb480000f; valaddr_reg:x3; val_offset:16476*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16476*0 + 3*116*FLEN/8, x4, x1, x2)

inst_5493:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb480001f; valaddr_reg:x3; val_offset:16479*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16479*0 + 3*117*FLEN/8, x4, x1, x2)

inst_5494:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb480003f; valaddr_reg:x3; val_offset:16482*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16482*0 + 3*118*FLEN/8, x4, x1, x2)

inst_5495:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb480007f; valaddr_reg:x3; val_offset:16485*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16485*0 + 3*119*FLEN/8, x4, x1, x2)

inst_5496:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb48000ff; valaddr_reg:x3; val_offset:16488*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16488*0 + 3*120*FLEN/8, x4, x1, x2)

inst_5497:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb48001ff; valaddr_reg:x3; val_offset:16491*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16491*0 + 3*121*FLEN/8, x4, x1, x2)

inst_5498:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb48003ff; valaddr_reg:x3; val_offset:16494*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16494*0 + 3*122*FLEN/8, x4, x1, x2)

inst_5499:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb48007ff; valaddr_reg:x3; val_offset:16497*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16497*0 + 3*123*FLEN/8, x4, x1, x2)

inst_5500:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb4800fff; valaddr_reg:x3; val_offset:16500*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16500*0 + 3*124*FLEN/8, x4, x1, x2)

inst_5501:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb4801fff; valaddr_reg:x3; val_offset:16503*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16503*0 + 3*125*FLEN/8, x4, x1, x2)

inst_5502:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb4803fff; valaddr_reg:x3; val_offset:16506*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16506*0 + 3*126*FLEN/8, x4, x1, x2)

inst_5503:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb4807fff; valaddr_reg:x3; val_offset:16509*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16509*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_5504:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb480ffff; valaddr_reg:x3; val_offset:16512*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16512*0 + 3*128*FLEN/8, x4, x1, x2)

inst_5505:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb481ffff; valaddr_reg:x3; val_offset:16515*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16515*0 + 3*129*FLEN/8, x4, x1, x2)

inst_5506:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb483ffff; valaddr_reg:x3; val_offset:16518*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16518*0 + 3*130*FLEN/8, x4, x1, x2)

inst_5507:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb487ffff; valaddr_reg:x3; val_offset:16521*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16521*0 + 3*131*FLEN/8, x4, x1, x2)

inst_5508:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb48fffff; valaddr_reg:x3; val_offset:16524*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16524*0 + 3*132*FLEN/8, x4, x1, x2)

inst_5509:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb49fffff; valaddr_reg:x3; val_offset:16527*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16527*0 + 3*133*FLEN/8, x4, x1, x2)

inst_5510:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb4bfffff; valaddr_reg:x3; val_offset:16530*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16530*0 + 3*134*FLEN/8, x4, x1, x2)

inst_5511:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb4c00000; valaddr_reg:x3; val_offset:16533*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16533*0 + 3*135*FLEN/8, x4, x1, x2)

inst_5512:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb4e00000; valaddr_reg:x3; val_offset:16536*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16536*0 + 3*136*FLEN/8, x4, x1, x2)

inst_5513:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb4f00000; valaddr_reg:x3; val_offset:16539*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16539*0 + 3*137*FLEN/8, x4, x1, x2)

inst_5514:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb4f80000; valaddr_reg:x3; val_offset:16542*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16542*0 + 3*138*FLEN/8, x4, x1, x2)

inst_5515:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb4fc0000; valaddr_reg:x3; val_offset:16545*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16545*0 + 3*139*FLEN/8, x4, x1, x2)

inst_5516:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb4fe0000; valaddr_reg:x3; val_offset:16548*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16548*0 + 3*140*FLEN/8, x4, x1, x2)

inst_5517:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb4ff0000; valaddr_reg:x3; val_offset:16551*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16551*0 + 3*141*FLEN/8, x4, x1, x2)

inst_5518:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb4ff8000; valaddr_reg:x3; val_offset:16554*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16554*0 + 3*142*FLEN/8, x4, x1, x2)

inst_5519:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb4ffc000; valaddr_reg:x3; val_offset:16557*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16557*0 + 3*143*FLEN/8, x4, x1, x2)

inst_5520:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb4ffe000; valaddr_reg:x3; val_offset:16560*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16560*0 + 3*144*FLEN/8, x4, x1, x2)

inst_5521:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb4fff000; valaddr_reg:x3; val_offset:16563*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16563*0 + 3*145*FLEN/8, x4, x1, x2)

inst_5522:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb4fff800; valaddr_reg:x3; val_offset:16566*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16566*0 + 3*146*FLEN/8, x4, x1, x2)

inst_5523:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb4fffc00; valaddr_reg:x3; val_offset:16569*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16569*0 + 3*147*FLEN/8, x4, x1, x2)

inst_5524:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb4fffe00; valaddr_reg:x3; val_offset:16572*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16572*0 + 3*148*FLEN/8, x4, x1, x2)

inst_5525:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb4ffff00; valaddr_reg:x3; val_offset:16575*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16575*0 + 3*149*FLEN/8, x4, x1, x2)

inst_5526:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb4ffff80; valaddr_reg:x3; val_offset:16578*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16578*0 + 3*150*FLEN/8, x4, x1, x2)

inst_5527:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb4ffffc0; valaddr_reg:x3; val_offset:16581*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16581*0 + 3*151*FLEN/8, x4, x1, x2)

inst_5528:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb4ffffe0; valaddr_reg:x3; val_offset:16584*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16584*0 + 3*152*FLEN/8, x4, x1, x2)

inst_5529:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb4fffff0; valaddr_reg:x3; val_offset:16587*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16587*0 + 3*153*FLEN/8, x4, x1, x2)

inst_5530:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb4fffff8; valaddr_reg:x3; val_offset:16590*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16590*0 + 3*154*FLEN/8, x4, x1, x2)

inst_5531:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb4fffffc; valaddr_reg:x3; val_offset:16593*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16593*0 + 3*155*FLEN/8, x4, x1, x2)

inst_5532:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb4fffffe; valaddr_reg:x3; val_offset:16596*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16596*0 + 3*156*FLEN/8, x4, x1, x2)

inst_5533:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xb4ffffff; valaddr_reg:x3; val_offset:16599*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16599*0 + 3*157*FLEN/8, x4, x1, x2)

inst_5534:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xbf800001; valaddr_reg:x3; val_offset:16602*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16602*0 + 3*158*FLEN/8, x4, x1, x2)

inst_5535:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xbf800003; valaddr_reg:x3; val_offset:16605*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16605*0 + 3*159*FLEN/8, x4, x1, x2)

inst_5536:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xbf800007; valaddr_reg:x3; val_offset:16608*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16608*0 + 3*160*FLEN/8, x4, x1, x2)

inst_5537:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xbf999999; valaddr_reg:x3; val_offset:16611*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16611*0 + 3*161*FLEN/8, x4, x1, x2)

inst_5538:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:16614*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16614*0 + 3*162*FLEN/8, x4, x1, x2)

inst_5539:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:16617*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16617*0 + 3*163*FLEN/8, x4, x1, x2)

inst_5540:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:16620*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16620*0 + 3*164*FLEN/8, x4, x1, x2)

inst_5541:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:16623*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16623*0 + 3*165*FLEN/8, x4, x1, x2)

inst_5542:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:16626*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16626*0 + 3*166*FLEN/8, x4, x1, x2)

inst_5543:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:16629*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16629*0 + 3*167*FLEN/8, x4, x1, x2)

inst_5544:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:16632*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16632*0 + 3*168*FLEN/8, x4, x1, x2)

inst_5545:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:16635*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16635*0 + 3*169*FLEN/8, x4, x1, x2)

inst_5546:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:16638*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16638*0 + 3*170*FLEN/8, x4, x1, x2)

inst_5547:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:16641*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16641*0 + 3*171*FLEN/8, x4, x1, x2)

inst_5548:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:16644*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16644*0 + 3*172*FLEN/8, x4, x1, x2)

inst_5549:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x487b3d and fs2 == 1 and fe2 == 0x02 and fm2 == 0x237253 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc87b3d; op2val:0x81237253;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:16647*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16647*0 + 3*173*FLEN/8, x4, x1, x2)

inst_5550:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a000000; valaddr_reg:x3; val_offset:16650*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16650*0 + 3*174*FLEN/8, x4, x1, x2)

inst_5551:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a000001; valaddr_reg:x3; val_offset:16653*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16653*0 + 3*175*FLEN/8, x4, x1, x2)

inst_5552:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a000003; valaddr_reg:x3; val_offset:16656*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16656*0 + 3*176*FLEN/8, x4, x1, x2)

inst_5553:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a000007; valaddr_reg:x3; val_offset:16659*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16659*0 + 3*177*FLEN/8, x4, x1, x2)

inst_5554:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a00000f; valaddr_reg:x3; val_offset:16662*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16662*0 + 3*178*FLEN/8, x4, x1, x2)

inst_5555:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a00001f; valaddr_reg:x3; val_offset:16665*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16665*0 + 3*179*FLEN/8, x4, x1, x2)

inst_5556:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a00003f; valaddr_reg:x3; val_offset:16668*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16668*0 + 3*180*FLEN/8, x4, x1, x2)

inst_5557:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a00007f; valaddr_reg:x3; val_offset:16671*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16671*0 + 3*181*FLEN/8, x4, x1, x2)

inst_5558:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a0000ff; valaddr_reg:x3; val_offset:16674*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16674*0 + 3*182*FLEN/8, x4, x1, x2)

inst_5559:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a0001ff; valaddr_reg:x3; val_offset:16677*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16677*0 + 3*183*FLEN/8, x4, x1, x2)

inst_5560:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a0003ff; valaddr_reg:x3; val_offset:16680*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16680*0 + 3*184*FLEN/8, x4, x1, x2)

inst_5561:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a0007ff; valaddr_reg:x3; val_offset:16683*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16683*0 + 3*185*FLEN/8, x4, x1, x2)

inst_5562:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a000fff; valaddr_reg:x3; val_offset:16686*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16686*0 + 3*186*FLEN/8, x4, x1, x2)

inst_5563:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a001fff; valaddr_reg:x3; val_offset:16689*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16689*0 + 3*187*FLEN/8, x4, x1, x2)

inst_5564:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a003fff; valaddr_reg:x3; val_offset:16692*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16692*0 + 3*188*FLEN/8, x4, x1, x2)

inst_5565:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a007fff; valaddr_reg:x3; val_offset:16695*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16695*0 + 3*189*FLEN/8, x4, x1, x2)

inst_5566:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a00ffff; valaddr_reg:x3; val_offset:16698*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16698*0 + 3*190*FLEN/8, x4, x1, x2)

inst_5567:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a01ffff; valaddr_reg:x3; val_offset:16701*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16701*0 + 3*191*FLEN/8, x4, x1, x2)

inst_5568:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a03ffff; valaddr_reg:x3; val_offset:16704*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16704*0 + 3*192*FLEN/8, x4, x1, x2)

inst_5569:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a07ffff; valaddr_reg:x3; val_offset:16707*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16707*0 + 3*193*FLEN/8, x4, x1, x2)

inst_5570:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a0fffff; valaddr_reg:x3; val_offset:16710*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16710*0 + 3*194*FLEN/8, x4, x1, x2)

inst_5571:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a1fffff; valaddr_reg:x3; val_offset:16713*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16713*0 + 3*195*FLEN/8, x4, x1, x2)

inst_5572:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a3fffff; valaddr_reg:x3; val_offset:16716*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16716*0 + 3*196*FLEN/8, x4, x1, x2)

inst_5573:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a400000; valaddr_reg:x3; val_offset:16719*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16719*0 + 3*197*FLEN/8, x4, x1, x2)

inst_5574:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a600000; valaddr_reg:x3; val_offset:16722*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16722*0 + 3*198*FLEN/8, x4, x1, x2)

inst_5575:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a700000; valaddr_reg:x3; val_offset:16725*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16725*0 + 3*199*FLEN/8, x4, x1, x2)

inst_5576:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a780000; valaddr_reg:x3; val_offset:16728*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16728*0 + 3*200*FLEN/8, x4, x1, x2)

inst_5577:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a7c0000; valaddr_reg:x3; val_offset:16731*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16731*0 + 3*201*FLEN/8, x4, x1, x2)

inst_5578:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a7e0000; valaddr_reg:x3; val_offset:16734*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16734*0 + 3*202*FLEN/8, x4, x1, x2)

inst_5579:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a7f0000; valaddr_reg:x3; val_offset:16737*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16737*0 + 3*203*FLEN/8, x4, x1, x2)

inst_5580:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a7f8000; valaddr_reg:x3; val_offset:16740*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16740*0 + 3*204*FLEN/8, x4, x1, x2)

inst_5581:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a7fc000; valaddr_reg:x3; val_offset:16743*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16743*0 + 3*205*FLEN/8, x4, x1, x2)

inst_5582:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a7fe000; valaddr_reg:x3; val_offset:16746*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16746*0 + 3*206*FLEN/8, x4, x1, x2)

inst_5583:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a7ff000; valaddr_reg:x3; val_offset:16749*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16749*0 + 3*207*FLEN/8, x4, x1, x2)

inst_5584:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a7ff800; valaddr_reg:x3; val_offset:16752*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16752*0 + 3*208*FLEN/8, x4, x1, x2)

inst_5585:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a7ffc00; valaddr_reg:x3; val_offset:16755*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16755*0 + 3*209*FLEN/8, x4, x1, x2)

inst_5586:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a7ffe00; valaddr_reg:x3; val_offset:16758*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16758*0 + 3*210*FLEN/8, x4, x1, x2)

inst_5587:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a7fff00; valaddr_reg:x3; val_offset:16761*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16761*0 + 3*211*FLEN/8, x4, x1, x2)

inst_5588:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a7fff80; valaddr_reg:x3; val_offset:16764*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16764*0 + 3*212*FLEN/8, x4, x1, x2)

inst_5589:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a7fffc0; valaddr_reg:x3; val_offset:16767*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16767*0 + 3*213*FLEN/8, x4, x1, x2)

inst_5590:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a7fffe0; valaddr_reg:x3; val_offset:16770*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16770*0 + 3*214*FLEN/8, x4, x1, x2)

inst_5591:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a7ffff0; valaddr_reg:x3; val_offset:16773*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16773*0 + 3*215*FLEN/8, x4, x1, x2)

inst_5592:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a7ffff8; valaddr_reg:x3; val_offset:16776*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16776*0 + 3*216*FLEN/8, x4, x1, x2)

inst_5593:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a7ffffc; valaddr_reg:x3; val_offset:16779*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16779*0 + 3*217*FLEN/8, x4, x1, x2)

inst_5594:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a7ffffe; valaddr_reg:x3; val_offset:16782*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16782*0 + 3*218*FLEN/8, x4, x1, x2)

inst_5595:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7a7fffff; valaddr_reg:x3; val_offset:16785*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16785*0 + 3*219*FLEN/8, x4, x1, x2)

inst_5596:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7f000001; valaddr_reg:x3; val_offset:16788*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16788*0 + 3*220*FLEN/8, x4, x1, x2)

inst_5597:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7f000003; valaddr_reg:x3; val_offset:16791*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16791*0 + 3*221*FLEN/8, x4, x1, x2)

inst_5598:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7f000007; valaddr_reg:x3; val_offset:16794*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16794*0 + 3*222*FLEN/8, x4, x1, x2)

inst_5599:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7f199999; valaddr_reg:x3; val_offset:16797*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16797*0 + 3*223*FLEN/8, x4, x1, x2)

inst_5600:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7f249249; valaddr_reg:x3; val_offset:16800*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16800*0 + 3*224*FLEN/8, x4, x1, x2)

inst_5601:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7f333333; valaddr_reg:x3; val_offset:16803*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16803*0 + 3*225*FLEN/8, x4, x1, x2)

inst_5602:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:16806*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16806*0 + 3*226*FLEN/8, x4, x1, x2)

inst_5603:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:16809*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16809*0 + 3*227*FLEN/8, x4, x1, x2)

inst_5604:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7f444444; valaddr_reg:x3; val_offset:16812*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16812*0 + 3*228*FLEN/8, x4, x1, x2)

inst_5605:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:16815*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16815*0 + 3*229*FLEN/8, x4, x1, x2)

inst_5606:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:16818*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16818*0 + 3*230*FLEN/8, x4, x1, x2)

inst_5607:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7f666666; valaddr_reg:x3; val_offset:16821*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16821*0 + 3*231*FLEN/8, x4, x1, x2)

inst_5608:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:16824*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16824*0 + 3*232*FLEN/8, x4, x1, x2)

inst_5609:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:16827*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16827*0 + 3*233*FLEN/8, x4, x1, x2)

inst_5610:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:16830*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16830*0 + 3*234*FLEN/8, x4, x1, x2)

inst_5611:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4ac87b and fs2 == 0 and fe2 == 0x82 and fm2 == 0x219761 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcac87b; op2val:0x41219761;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:16833*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16833*0 + 3*235*FLEN/8, x4, x1, x2)

inst_5612:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa2000000; valaddr_reg:x3; val_offset:16836*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16836*0 + 3*236*FLEN/8, x4, x1, x2)

inst_5613:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa2000001; valaddr_reg:x3; val_offset:16839*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16839*0 + 3*237*FLEN/8, x4, x1, x2)

inst_5614:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa2000003; valaddr_reg:x3; val_offset:16842*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16842*0 + 3*238*FLEN/8, x4, x1, x2)

inst_5615:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa2000007; valaddr_reg:x3; val_offset:16845*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16845*0 + 3*239*FLEN/8, x4, x1, x2)

inst_5616:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa200000f; valaddr_reg:x3; val_offset:16848*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16848*0 + 3*240*FLEN/8, x4, x1, x2)

inst_5617:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa200001f; valaddr_reg:x3; val_offset:16851*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16851*0 + 3*241*FLEN/8, x4, x1, x2)

inst_5618:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa200003f; valaddr_reg:x3; val_offset:16854*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16854*0 + 3*242*FLEN/8, x4, x1, x2)

inst_5619:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa200007f; valaddr_reg:x3; val_offset:16857*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16857*0 + 3*243*FLEN/8, x4, x1, x2)

inst_5620:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa20000ff; valaddr_reg:x3; val_offset:16860*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16860*0 + 3*244*FLEN/8, x4, x1, x2)

inst_5621:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa20001ff; valaddr_reg:x3; val_offset:16863*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16863*0 + 3*245*FLEN/8, x4, x1, x2)

inst_5622:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa20003ff; valaddr_reg:x3; val_offset:16866*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16866*0 + 3*246*FLEN/8, x4, x1, x2)

inst_5623:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa20007ff; valaddr_reg:x3; val_offset:16869*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16869*0 + 3*247*FLEN/8, x4, x1, x2)

inst_5624:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa2000fff; valaddr_reg:x3; val_offset:16872*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16872*0 + 3*248*FLEN/8, x4, x1, x2)

inst_5625:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa2001fff; valaddr_reg:x3; val_offset:16875*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16875*0 + 3*249*FLEN/8, x4, x1, x2)

inst_5626:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa2003fff; valaddr_reg:x3; val_offset:16878*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16878*0 + 3*250*FLEN/8, x4, x1, x2)

inst_5627:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa2007fff; valaddr_reg:x3; val_offset:16881*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16881*0 + 3*251*FLEN/8, x4, x1, x2)

inst_5628:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa200ffff; valaddr_reg:x3; val_offset:16884*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16884*0 + 3*252*FLEN/8, x4, x1, x2)

inst_5629:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa201ffff; valaddr_reg:x3; val_offset:16887*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16887*0 + 3*253*FLEN/8, x4, x1, x2)

inst_5630:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa203ffff; valaddr_reg:x3; val_offset:16890*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16890*0 + 3*254*FLEN/8, x4, x1, x2)

inst_5631:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa207ffff; valaddr_reg:x3; val_offset:16893*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16893*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_5632:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa20fffff; valaddr_reg:x3; val_offset:16896*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16896*0 + 3*256*FLEN/8, x4, x1, x2)

inst_5633:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa21fffff; valaddr_reg:x3; val_offset:16899*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16899*0 + 3*257*FLEN/8, x4, x1, x2)

inst_5634:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa23fffff; valaddr_reg:x3; val_offset:16902*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16902*0 + 3*258*FLEN/8, x4, x1, x2)

inst_5635:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa2400000; valaddr_reg:x3; val_offset:16905*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16905*0 + 3*259*FLEN/8, x4, x1, x2)

inst_5636:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa2600000; valaddr_reg:x3; val_offset:16908*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16908*0 + 3*260*FLEN/8, x4, x1, x2)

inst_5637:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa2700000; valaddr_reg:x3; val_offset:16911*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16911*0 + 3*261*FLEN/8, x4, x1, x2)

inst_5638:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa2780000; valaddr_reg:x3; val_offset:16914*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16914*0 + 3*262*FLEN/8, x4, x1, x2)

inst_5639:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa27c0000; valaddr_reg:x3; val_offset:16917*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16917*0 + 3*263*FLEN/8, x4, x1, x2)

inst_5640:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa27e0000; valaddr_reg:x3; val_offset:16920*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16920*0 + 3*264*FLEN/8, x4, x1, x2)

inst_5641:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa27f0000; valaddr_reg:x3; val_offset:16923*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16923*0 + 3*265*FLEN/8, x4, x1, x2)

inst_5642:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa27f8000; valaddr_reg:x3; val_offset:16926*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16926*0 + 3*266*FLEN/8, x4, x1, x2)

inst_5643:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa27fc000; valaddr_reg:x3; val_offset:16929*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16929*0 + 3*267*FLEN/8, x4, x1, x2)

inst_5644:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa27fe000; valaddr_reg:x3; val_offset:16932*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16932*0 + 3*268*FLEN/8, x4, x1, x2)

inst_5645:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa27ff000; valaddr_reg:x3; val_offset:16935*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16935*0 + 3*269*FLEN/8, x4, x1, x2)

inst_5646:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa27ff800; valaddr_reg:x3; val_offset:16938*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16938*0 + 3*270*FLEN/8, x4, x1, x2)

inst_5647:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa27ffc00; valaddr_reg:x3; val_offset:16941*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16941*0 + 3*271*FLEN/8, x4, x1, x2)

inst_5648:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa27ffe00; valaddr_reg:x3; val_offset:16944*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16944*0 + 3*272*FLEN/8, x4, x1, x2)

inst_5649:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa27fff00; valaddr_reg:x3; val_offset:16947*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16947*0 + 3*273*FLEN/8, x4, x1, x2)

inst_5650:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa27fff80; valaddr_reg:x3; val_offset:16950*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16950*0 + 3*274*FLEN/8, x4, x1, x2)

inst_5651:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa27fffc0; valaddr_reg:x3; val_offset:16953*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16953*0 + 3*275*FLEN/8, x4, x1, x2)

inst_5652:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa27fffe0; valaddr_reg:x3; val_offset:16956*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16956*0 + 3*276*FLEN/8, x4, x1, x2)

inst_5653:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa27ffff0; valaddr_reg:x3; val_offset:16959*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16959*0 + 3*277*FLEN/8, x4, x1, x2)

inst_5654:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa27ffff8; valaddr_reg:x3; val_offset:16962*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16962*0 + 3*278*FLEN/8, x4, x1, x2)

inst_5655:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa27ffffc; valaddr_reg:x3; val_offset:16965*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16965*0 + 3*279*FLEN/8, x4, x1, x2)

inst_5656:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa27ffffe; valaddr_reg:x3; val_offset:16968*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16968*0 + 3*280*FLEN/8, x4, x1, x2)

inst_5657:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xa27fffff; valaddr_reg:x3; val_offset:16971*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16971*0 + 3*281*FLEN/8, x4, x1, x2)

inst_5658:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xbf800001; valaddr_reg:x3; val_offset:16974*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16974*0 + 3*282*FLEN/8, x4, x1, x2)

inst_5659:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xbf800003; valaddr_reg:x3; val_offset:16977*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16977*0 + 3*283*FLEN/8, x4, x1, x2)

inst_5660:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xbf800007; valaddr_reg:x3; val_offset:16980*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16980*0 + 3*284*FLEN/8, x4, x1, x2)

inst_5661:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xbf999999; valaddr_reg:x3; val_offset:16983*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16983*0 + 3*285*FLEN/8, x4, x1, x2)

inst_5662:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:16986*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16986*0 + 3*286*FLEN/8, x4, x1, x2)

inst_5663:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:16989*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16989*0 + 3*287*FLEN/8, x4, x1, x2)

inst_5664:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:16992*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16992*0 + 3*288*FLEN/8, x4, x1, x2)

inst_5665:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:16995*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16995*0 + 3*289*FLEN/8, x4, x1, x2)

inst_5666:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:16998*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 16998*0 + 3*290*FLEN/8, x4, x1, x2)

inst_5667:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:17001*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17001*0 + 3*291*FLEN/8, x4, x1, x2)

inst_5668:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:17004*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17004*0 + 3*292*FLEN/8, x4, x1, x2)

inst_5669:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:17007*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17007*0 + 3*293*FLEN/8, x4, x1, x2)

inst_5670:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:17010*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17010*0 + 3*294*FLEN/8, x4, x1, x2)

inst_5671:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:17013*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17013*0 + 3*295*FLEN/8, x4, x1, x2)

inst_5672:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:17016*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17016*0 + 3*296*FLEN/8, x4, x1, x2)

inst_5673:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b47e3 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x21321b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dcb47e3; op2val:0x8121321b;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:17019*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17019*0 + 3*297*FLEN/8, x4, x1, x2)

inst_5674:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xbf800001; valaddr_reg:x3; val_offset:17022*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17022*0 + 3*298*FLEN/8, x4, x1, x2)

inst_5675:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xbf800003; valaddr_reg:x3; val_offset:17025*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17025*0 + 3*299*FLEN/8, x4, x1, x2)

inst_5676:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xbf800007; valaddr_reg:x3; val_offset:17028*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17028*0 + 3*300*FLEN/8, x4, x1, x2)

inst_5677:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xbf999999; valaddr_reg:x3; val_offset:17031*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17031*0 + 3*301*FLEN/8, x4, x1, x2)

inst_5678:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:17034*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17034*0 + 3*302*FLEN/8, x4, x1, x2)

inst_5679:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:17037*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17037*0 + 3*303*FLEN/8, x4, x1, x2)

inst_5680:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:17040*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17040*0 + 3*304*FLEN/8, x4, x1, x2)

inst_5681:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:17043*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17043*0 + 3*305*FLEN/8, x4, x1, x2)

inst_5682:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:17046*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17046*0 + 3*306*FLEN/8, x4, x1, x2)

inst_5683:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:17049*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17049*0 + 3*307*FLEN/8, x4, x1, x2)

inst_5684:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:17052*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17052*0 + 3*308*FLEN/8, x4, x1, x2)

inst_5685:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:17055*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17055*0 + 3*309*FLEN/8, x4, x1, x2)

inst_5686:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:17058*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17058*0 + 3*310*FLEN/8, x4, x1, x2)

inst_5687:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:17061*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17061*0 + 3*311*FLEN/8, x4, x1, x2)

inst_5688:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:17064*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17064*0 + 3*312*FLEN/8, x4, x1, x2)

inst_5689:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:17067*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17067*0 + 3*313*FLEN/8, x4, x1, x2)

inst_5690:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xcc800000; valaddr_reg:x3; val_offset:17070*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17070*0 + 3*314*FLEN/8, x4, x1, x2)

inst_5691:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xcc800001; valaddr_reg:x3; val_offset:17073*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17073*0 + 3*315*FLEN/8, x4, x1, x2)

inst_5692:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xcc800003; valaddr_reg:x3; val_offset:17076*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17076*0 + 3*316*FLEN/8, x4, x1, x2)

inst_5693:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xcc800007; valaddr_reg:x3; val_offset:17079*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17079*0 + 3*317*FLEN/8, x4, x1, x2)

inst_5694:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xcc80000f; valaddr_reg:x3; val_offset:17082*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17082*0 + 3*318*FLEN/8, x4, x1, x2)

inst_5695:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xcc80001f; valaddr_reg:x3; val_offset:17085*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17085*0 + 3*319*FLEN/8, x4, x1, x2)

inst_5696:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xcc80003f; valaddr_reg:x3; val_offset:17088*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17088*0 + 3*320*FLEN/8, x4, x1, x2)

inst_5697:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xcc80007f; valaddr_reg:x3; val_offset:17091*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17091*0 + 3*321*FLEN/8, x4, x1, x2)

inst_5698:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xcc8000ff; valaddr_reg:x3; val_offset:17094*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17094*0 + 3*322*FLEN/8, x4, x1, x2)

inst_5699:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xcc8001ff; valaddr_reg:x3; val_offset:17097*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17097*0 + 3*323*FLEN/8, x4, x1, x2)

inst_5700:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xcc8003ff; valaddr_reg:x3; val_offset:17100*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17100*0 + 3*324*FLEN/8, x4, x1, x2)

inst_5701:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xcc8007ff; valaddr_reg:x3; val_offset:17103*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17103*0 + 3*325*FLEN/8, x4, x1, x2)

inst_5702:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xcc800fff; valaddr_reg:x3; val_offset:17106*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17106*0 + 3*326*FLEN/8, x4, x1, x2)

inst_5703:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xcc801fff; valaddr_reg:x3; val_offset:17109*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17109*0 + 3*327*FLEN/8, x4, x1, x2)

inst_5704:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xcc803fff; valaddr_reg:x3; val_offset:17112*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17112*0 + 3*328*FLEN/8, x4, x1, x2)

inst_5705:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xcc807fff; valaddr_reg:x3; val_offset:17115*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17115*0 + 3*329*FLEN/8, x4, x1, x2)

inst_5706:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xcc80ffff; valaddr_reg:x3; val_offset:17118*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17118*0 + 3*330*FLEN/8, x4, x1, x2)

inst_5707:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xcc81ffff; valaddr_reg:x3; val_offset:17121*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17121*0 + 3*331*FLEN/8, x4, x1, x2)

inst_5708:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xcc83ffff; valaddr_reg:x3; val_offset:17124*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17124*0 + 3*332*FLEN/8, x4, x1, x2)

inst_5709:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xcc87ffff; valaddr_reg:x3; val_offset:17127*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17127*0 + 3*333*FLEN/8, x4, x1, x2)

inst_5710:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xcc8fffff; valaddr_reg:x3; val_offset:17130*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17130*0 + 3*334*FLEN/8, x4, x1, x2)

inst_5711:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xcc9fffff; valaddr_reg:x3; val_offset:17133*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17133*0 + 3*335*FLEN/8, x4, x1, x2)

inst_5712:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xccbfffff; valaddr_reg:x3; val_offset:17136*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17136*0 + 3*336*FLEN/8, x4, x1, x2)

inst_5713:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xccc00000; valaddr_reg:x3; val_offset:17139*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17139*0 + 3*337*FLEN/8, x4, x1, x2)

inst_5714:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xcce00000; valaddr_reg:x3; val_offset:17142*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17142*0 + 3*338*FLEN/8, x4, x1, x2)

inst_5715:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xccf00000; valaddr_reg:x3; val_offset:17145*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17145*0 + 3*339*FLEN/8, x4, x1, x2)

inst_5716:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xccf80000; valaddr_reg:x3; val_offset:17148*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17148*0 + 3*340*FLEN/8, x4, x1, x2)

inst_5717:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xccfc0000; valaddr_reg:x3; val_offset:17151*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17151*0 + 3*341*FLEN/8, x4, x1, x2)

inst_5718:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xccfe0000; valaddr_reg:x3; val_offset:17154*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17154*0 + 3*342*FLEN/8, x4, x1, x2)

inst_5719:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xccff0000; valaddr_reg:x3; val_offset:17157*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17157*0 + 3*343*FLEN/8, x4, x1, x2)

inst_5720:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xccff8000; valaddr_reg:x3; val_offset:17160*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17160*0 + 3*344*FLEN/8, x4, x1, x2)

inst_5721:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xccffc000; valaddr_reg:x3; val_offset:17163*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17163*0 + 3*345*FLEN/8, x4, x1, x2)

inst_5722:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xccffe000; valaddr_reg:x3; val_offset:17166*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17166*0 + 3*346*FLEN/8, x4, x1, x2)

inst_5723:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xccfff000; valaddr_reg:x3; val_offset:17169*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17169*0 + 3*347*FLEN/8, x4, x1, x2)

inst_5724:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xccfff800; valaddr_reg:x3; val_offset:17172*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17172*0 + 3*348*FLEN/8, x4, x1, x2)

inst_5725:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xccfffc00; valaddr_reg:x3; val_offset:17175*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17175*0 + 3*349*FLEN/8, x4, x1, x2)

inst_5726:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xccfffe00; valaddr_reg:x3; val_offset:17178*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17178*0 + 3*350*FLEN/8, x4, x1, x2)

inst_5727:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xccffff00; valaddr_reg:x3; val_offset:17181*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17181*0 + 3*351*FLEN/8, x4, x1, x2)

inst_5728:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xccffff80; valaddr_reg:x3; val_offset:17184*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17184*0 + 3*352*FLEN/8, x4, x1, x2)

inst_5729:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xccffffc0; valaddr_reg:x3; val_offset:17187*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17187*0 + 3*353*FLEN/8, x4, x1, x2)

inst_5730:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xccffffe0; valaddr_reg:x3; val_offset:17190*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17190*0 + 3*354*FLEN/8, x4, x1, x2)

inst_5731:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xccfffff0; valaddr_reg:x3; val_offset:17193*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17193*0 + 3*355*FLEN/8, x4, x1, x2)

inst_5732:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xccfffff8; valaddr_reg:x3; val_offset:17196*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17196*0 + 3*356*FLEN/8, x4, x1, x2)

inst_5733:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xccfffffc; valaddr_reg:x3; val_offset:17199*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17199*0 + 3*357*FLEN/8, x4, x1, x2)

inst_5734:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xccfffffe; valaddr_reg:x3; val_offset:17202*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17202*0 + 3*358*FLEN/8, x4, x1, x2)

inst_5735:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x54ab7c and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1a1445 and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd4ab7c; op2val:0x811a1445;
op3val:0xccffffff; valaddr_reg:x3; val_offset:17205*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17205*0 + 3*359*FLEN/8, x4, x1, x2)

inst_5736:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:17208*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17208*0 + 3*360*FLEN/8, x4, x1, x2)

inst_5737:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:17211*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17211*0 + 3*361*FLEN/8, x4, x1, x2)

inst_5738:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:17214*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17214*0 + 3*362*FLEN/8, x4, x1, x2)

inst_5739:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:17217*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17217*0 + 3*363*FLEN/8, x4, x1, x2)

inst_5740:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:17220*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17220*0 + 3*364*FLEN/8, x4, x1, x2)

inst_5741:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:17223*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17223*0 + 3*365*FLEN/8, x4, x1, x2)

inst_5742:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:17226*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17226*0 + 3*366*FLEN/8, x4, x1, x2)

inst_5743:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:17229*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17229*0 + 3*367*FLEN/8, x4, x1, x2)

inst_5744:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:17232*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17232*0 + 3*368*FLEN/8, x4, x1, x2)

inst_5745:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:17235*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17235*0 + 3*369*FLEN/8, x4, x1, x2)

inst_5746:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:17238*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17238*0 + 3*370*FLEN/8, x4, x1, x2)

inst_5747:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:17241*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17241*0 + 3*371*FLEN/8, x4, x1, x2)

inst_5748:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:17244*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17244*0 + 3*372*FLEN/8, x4, x1, x2)

inst_5749:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:17247*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17247*0 + 3*373*FLEN/8, x4, x1, x2)

inst_5750:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:17250*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17250*0 + 3*374*FLEN/8, x4, x1, x2)

inst_5751:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:17253*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17253*0 + 3*375*FLEN/8, x4, x1, x2)

inst_5752:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x4800000; valaddr_reg:x3; val_offset:17256*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17256*0 + 3*376*FLEN/8, x4, x1, x2)

inst_5753:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x4800001; valaddr_reg:x3; val_offset:17259*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17259*0 + 3*377*FLEN/8, x4, x1, x2)

inst_5754:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x4800003; valaddr_reg:x3; val_offset:17262*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17262*0 + 3*378*FLEN/8, x4, x1, x2)

inst_5755:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x4800007; valaddr_reg:x3; val_offset:17265*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17265*0 + 3*379*FLEN/8, x4, x1, x2)

inst_5756:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x480000f; valaddr_reg:x3; val_offset:17268*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17268*0 + 3*380*FLEN/8, x4, x1, x2)

inst_5757:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x480001f; valaddr_reg:x3; val_offset:17271*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17271*0 + 3*381*FLEN/8, x4, x1, x2)

inst_5758:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x480003f; valaddr_reg:x3; val_offset:17274*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17274*0 + 3*382*FLEN/8, x4, x1, x2)

inst_5759:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x480007f; valaddr_reg:x3; val_offset:17277*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17277*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_5760:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x48000ff; valaddr_reg:x3; val_offset:17280*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17280*0 + 3*384*FLEN/8, x4, x1, x2)

inst_5761:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x48001ff; valaddr_reg:x3; val_offset:17283*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17283*0 + 3*385*FLEN/8, x4, x1, x2)

inst_5762:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x48003ff; valaddr_reg:x3; val_offset:17286*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17286*0 + 3*386*FLEN/8, x4, x1, x2)

inst_5763:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x48007ff; valaddr_reg:x3; val_offset:17289*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17289*0 + 3*387*FLEN/8, x4, x1, x2)

inst_5764:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x4800fff; valaddr_reg:x3; val_offset:17292*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17292*0 + 3*388*FLEN/8, x4, x1, x2)

inst_5765:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x4801fff; valaddr_reg:x3; val_offset:17295*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17295*0 + 3*389*FLEN/8, x4, x1, x2)

inst_5766:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x4803fff; valaddr_reg:x3; val_offset:17298*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17298*0 + 3*390*FLEN/8, x4, x1, x2)

inst_5767:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x4807fff; valaddr_reg:x3; val_offset:17301*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17301*0 + 3*391*FLEN/8, x4, x1, x2)

inst_5768:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x480ffff; valaddr_reg:x3; val_offset:17304*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17304*0 + 3*392*FLEN/8, x4, x1, x2)

inst_5769:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x481ffff; valaddr_reg:x3; val_offset:17307*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17307*0 + 3*393*FLEN/8, x4, x1, x2)

inst_5770:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x483ffff; valaddr_reg:x3; val_offset:17310*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17310*0 + 3*394*FLEN/8, x4, x1, x2)

inst_5771:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x487ffff; valaddr_reg:x3; val_offset:17313*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17313*0 + 3*395*FLEN/8, x4, x1, x2)

inst_5772:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x48fffff; valaddr_reg:x3; val_offset:17316*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17316*0 + 3*396*FLEN/8, x4, x1, x2)

inst_5773:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x49fffff; valaddr_reg:x3; val_offset:17319*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17319*0 + 3*397*FLEN/8, x4, x1, x2)

inst_5774:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x4bfffff; valaddr_reg:x3; val_offset:17322*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17322*0 + 3*398*FLEN/8, x4, x1, x2)

inst_5775:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x4c00000; valaddr_reg:x3; val_offset:17325*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17325*0 + 3*399*FLEN/8, x4, x1, x2)

inst_5776:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x4e00000; valaddr_reg:x3; val_offset:17328*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17328*0 + 3*400*FLEN/8, x4, x1, x2)

inst_5777:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x4f00000; valaddr_reg:x3; val_offset:17331*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17331*0 + 3*401*FLEN/8, x4, x1, x2)

inst_5778:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x4f80000; valaddr_reg:x3; val_offset:17334*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17334*0 + 3*402*FLEN/8, x4, x1, x2)

inst_5779:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x4fc0000; valaddr_reg:x3; val_offset:17337*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17337*0 + 3*403*FLEN/8, x4, x1, x2)

inst_5780:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x4fe0000; valaddr_reg:x3; val_offset:17340*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17340*0 + 3*404*FLEN/8, x4, x1, x2)

inst_5781:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x4ff0000; valaddr_reg:x3; val_offset:17343*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17343*0 + 3*405*FLEN/8, x4, x1, x2)

inst_5782:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x4ff8000; valaddr_reg:x3; val_offset:17346*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17346*0 + 3*406*FLEN/8, x4, x1, x2)

inst_5783:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x4ffc000; valaddr_reg:x3; val_offset:17349*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17349*0 + 3*407*FLEN/8, x4, x1, x2)

inst_5784:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x4ffe000; valaddr_reg:x3; val_offset:17352*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17352*0 + 3*408*FLEN/8, x4, x1, x2)

inst_5785:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x4fff000; valaddr_reg:x3; val_offset:17355*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17355*0 + 3*409*FLEN/8, x4, x1, x2)

inst_5786:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x4fff800; valaddr_reg:x3; val_offset:17358*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17358*0 + 3*410*FLEN/8, x4, x1, x2)

inst_5787:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x4fffc00; valaddr_reg:x3; val_offset:17361*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17361*0 + 3*411*FLEN/8, x4, x1, x2)

inst_5788:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x4fffe00; valaddr_reg:x3; val_offset:17364*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17364*0 + 3*412*FLEN/8, x4, x1, x2)

inst_5789:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x4ffff00; valaddr_reg:x3; val_offset:17367*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17367*0 + 3*413*FLEN/8, x4, x1, x2)

inst_5790:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x4ffff80; valaddr_reg:x3; val_offset:17370*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17370*0 + 3*414*FLEN/8, x4, x1, x2)

inst_5791:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x4ffffc0; valaddr_reg:x3; val_offset:17373*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17373*0 + 3*415*FLEN/8, x4, x1, x2)

inst_5792:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x4ffffe0; valaddr_reg:x3; val_offset:17376*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17376*0 + 3*416*FLEN/8, x4, x1, x2)

inst_5793:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x4fffff0; valaddr_reg:x3; val_offset:17379*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17379*0 + 3*417*FLEN/8, x4, x1, x2)

inst_5794:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x4fffff8; valaddr_reg:x3; val_offset:17382*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17382*0 + 3*418*FLEN/8, x4, x1, x2)

inst_5795:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x4fffffc; valaddr_reg:x3; val_offset:17385*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17385*0 + 3*419*FLEN/8, x4, x1, x2)

inst_5796:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x4fffffe; valaddr_reg:x3; val_offset:17388*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17388*0 + 3*420*FLEN/8, x4, x1, x2)

inst_5797:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x55eca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd5eca5; op2val:0x0;
op3val:0x4ffffff; valaddr_reg:x3; val_offset:17391*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17391*0 + 3*421*FLEN/8, x4, x1, x2)

inst_5798:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:17394*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17394*0 + 3*422*FLEN/8, x4, x1, x2)

inst_5799:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:17397*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17397*0 + 3*423*FLEN/8, x4, x1, x2)

inst_5800:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:17400*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17400*0 + 3*424*FLEN/8, x4, x1, x2)

inst_5801:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:17403*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17403*0 + 3*425*FLEN/8, x4, x1, x2)

inst_5802:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:17406*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17406*0 + 3*426*FLEN/8, x4, x1, x2)

inst_5803:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:17409*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17409*0 + 3*427*FLEN/8, x4, x1, x2)

inst_5804:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:17412*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17412*0 + 3*428*FLEN/8, x4, x1, x2)

inst_5805:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:17415*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17415*0 + 3*429*FLEN/8, x4, x1, x2)

inst_5806:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:17418*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17418*0 + 3*430*FLEN/8, x4, x1, x2)

inst_5807:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:17421*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17421*0 + 3*431*FLEN/8, x4, x1, x2)

inst_5808:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:17424*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17424*0 + 3*432*FLEN/8, x4, x1, x2)

inst_5809:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:17427*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17427*0 + 3*433*FLEN/8, x4, x1, x2)

inst_5810:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:17430*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17430*0 + 3*434*FLEN/8, x4, x1, x2)

inst_5811:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:17433*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17433*0 + 3*435*FLEN/8, x4, x1, x2)

inst_5812:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:17436*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17436*0 + 3*436*FLEN/8, x4, x1, x2)

inst_5813:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:17439*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17439*0 + 3*437*FLEN/8, x4, x1, x2)

inst_5814:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x5000000; valaddr_reg:x3; val_offset:17442*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17442*0 + 3*438*FLEN/8, x4, x1, x2)

inst_5815:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x5000001; valaddr_reg:x3; val_offset:17445*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17445*0 + 3*439*FLEN/8, x4, x1, x2)

inst_5816:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x5000003; valaddr_reg:x3; val_offset:17448*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17448*0 + 3*440*FLEN/8, x4, x1, x2)

inst_5817:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x5000007; valaddr_reg:x3; val_offset:17451*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17451*0 + 3*441*FLEN/8, x4, x1, x2)

inst_5818:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x500000f; valaddr_reg:x3; val_offset:17454*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17454*0 + 3*442*FLEN/8, x4, x1, x2)

inst_5819:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x500001f; valaddr_reg:x3; val_offset:17457*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17457*0 + 3*443*FLEN/8, x4, x1, x2)

inst_5820:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x500003f; valaddr_reg:x3; val_offset:17460*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17460*0 + 3*444*FLEN/8, x4, x1, x2)

inst_5821:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x500007f; valaddr_reg:x3; val_offset:17463*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17463*0 + 3*445*FLEN/8, x4, x1, x2)

inst_5822:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x50000ff; valaddr_reg:x3; val_offset:17466*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17466*0 + 3*446*FLEN/8, x4, x1, x2)

inst_5823:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x50001ff; valaddr_reg:x3; val_offset:17469*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17469*0 + 3*447*FLEN/8, x4, x1, x2)

inst_5824:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x50003ff; valaddr_reg:x3; val_offset:17472*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17472*0 + 3*448*FLEN/8, x4, x1, x2)

inst_5825:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x50007ff; valaddr_reg:x3; val_offset:17475*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17475*0 + 3*449*FLEN/8, x4, x1, x2)

inst_5826:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x5000fff; valaddr_reg:x3; val_offset:17478*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17478*0 + 3*450*FLEN/8, x4, x1, x2)

inst_5827:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x5001fff; valaddr_reg:x3; val_offset:17481*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17481*0 + 3*451*FLEN/8, x4, x1, x2)

inst_5828:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x5003fff; valaddr_reg:x3; val_offset:17484*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17484*0 + 3*452*FLEN/8, x4, x1, x2)

inst_5829:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x5007fff; valaddr_reg:x3; val_offset:17487*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17487*0 + 3*453*FLEN/8, x4, x1, x2)

inst_5830:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x500ffff; valaddr_reg:x3; val_offset:17490*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17490*0 + 3*454*FLEN/8, x4, x1, x2)

inst_5831:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x501ffff; valaddr_reg:x3; val_offset:17493*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17493*0 + 3*455*FLEN/8, x4, x1, x2)

inst_5832:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x503ffff; valaddr_reg:x3; val_offset:17496*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17496*0 + 3*456*FLEN/8, x4, x1, x2)

inst_5833:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x507ffff; valaddr_reg:x3; val_offset:17499*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17499*0 + 3*457*FLEN/8, x4, x1, x2)

inst_5834:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x50fffff; valaddr_reg:x3; val_offset:17502*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17502*0 + 3*458*FLEN/8, x4, x1, x2)

inst_5835:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x51fffff; valaddr_reg:x3; val_offset:17505*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17505*0 + 3*459*FLEN/8, x4, x1, x2)

inst_5836:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x53fffff; valaddr_reg:x3; val_offset:17508*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17508*0 + 3*460*FLEN/8, x4, x1, x2)

inst_5837:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x5400000; valaddr_reg:x3; val_offset:17511*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17511*0 + 3*461*FLEN/8, x4, x1, x2)

inst_5838:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x5600000; valaddr_reg:x3; val_offset:17514*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17514*0 + 3*462*FLEN/8, x4, x1, x2)

inst_5839:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x5700000; valaddr_reg:x3; val_offset:17517*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17517*0 + 3*463*FLEN/8, x4, x1, x2)

inst_5840:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x5780000; valaddr_reg:x3; val_offset:17520*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17520*0 + 3*464*FLEN/8, x4, x1, x2)

inst_5841:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x57c0000; valaddr_reg:x3; val_offset:17523*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17523*0 + 3*465*FLEN/8, x4, x1, x2)

inst_5842:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x57e0000; valaddr_reg:x3; val_offset:17526*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17526*0 + 3*466*FLEN/8, x4, x1, x2)

inst_5843:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x57f0000; valaddr_reg:x3; val_offset:17529*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17529*0 + 3*467*FLEN/8, x4, x1, x2)

inst_5844:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x57f8000; valaddr_reg:x3; val_offset:17532*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17532*0 + 3*468*FLEN/8, x4, x1, x2)

inst_5845:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x57fc000; valaddr_reg:x3; val_offset:17535*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17535*0 + 3*469*FLEN/8, x4, x1, x2)

inst_5846:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x57fe000; valaddr_reg:x3; val_offset:17538*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17538*0 + 3*470*FLEN/8, x4, x1, x2)

inst_5847:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x57ff000; valaddr_reg:x3; val_offset:17541*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17541*0 + 3*471*FLEN/8, x4, x1, x2)

inst_5848:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x57ff800; valaddr_reg:x3; val_offset:17544*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17544*0 + 3*472*FLEN/8, x4, x1, x2)

inst_5849:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x57ffc00; valaddr_reg:x3; val_offset:17547*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17547*0 + 3*473*FLEN/8, x4, x1, x2)

inst_5850:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x57ffe00; valaddr_reg:x3; val_offset:17550*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17550*0 + 3*474*FLEN/8, x4, x1, x2)

inst_5851:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x57fff00; valaddr_reg:x3; val_offset:17553*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17553*0 + 3*475*FLEN/8, x4, x1, x2)

inst_5852:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x57fff80; valaddr_reg:x3; val_offset:17556*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17556*0 + 3*476*FLEN/8, x4, x1, x2)

inst_5853:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x57fffc0; valaddr_reg:x3; val_offset:17559*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17559*0 + 3*477*FLEN/8, x4, x1, x2)

inst_5854:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x57fffe0; valaddr_reg:x3; val_offset:17562*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17562*0 + 3*478*FLEN/8, x4, x1, x2)

inst_5855:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x57ffff0; valaddr_reg:x3; val_offset:17565*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17565*0 + 3*479*FLEN/8, x4, x1, x2)

inst_5856:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x57ffff8; valaddr_reg:x3; val_offset:17568*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17568*0 + 3*480*FLEN/8, x4, x1, x2)

inst_5857:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x57ffffc; valaddr_reg:x3; val_offset:17571*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17571*0 + 3*481*FLEN/8, x4, x1, x2)

inst_5858:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x57ffffe; valaddr_reg:x3; val_offset:17574*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17574*0 + 3*482*FLEN/8, x4, x1, x2)

inst_5859:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x56a646 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd6a646; op2val:0x0;
op3val:0x57fffff; valaddr_reg:x3; val_offset:17577*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17577*0 + 3*483*FLEN/8, x4, x1, x2)

inst_5860:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b000000; valaddr_reg:x3; val_offset:17580*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17580*0 + 3*484*FLEN/8, x4, x1, x2)

inst_5861:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b000001; valaddr_reg:x3; val_offset:17583*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17583*0 + 3*485*FLEN/8, x4, x1, x2)

inst_5862:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b000003; valaddr_reg:x3; val_offset:17586*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17586*0 + 3*486*FLEN/8, x4, x1, x2)

inst_5863:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b000007; valaddr_reg:x3; val_offset:17589*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17589*0 + 3*487*FLEN/8, x4, x1, x2)

inst_5864:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b00000f; valaddr_reg:x3; val_offset:17592*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17592*0 + 3*488*FLEN/8, x4, x1, x2)

inst_5865:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b00001f; valaddr_reg:x3; val_offset:17595*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17595*0 + 3*489*FLEN/8, x4, x1, x2)

inst_5866:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b00003f; valaddr_reg:x3; val_offset:17598*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17598*0 + 3*490*FLEN/8, x4, x1, x2)

inst_5867:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b00007f; valaddr_reg:x3; val_offset:17601*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17601*0 + 3*491*FLEN/8, x4, x1, x2)

inst_5868:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b0000ff; valaddr_reg:x3; val_offset:17604*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17604*0 + 3*492*FLEN/8, x4, x1, x2)

inst_5869:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b0001ff; valaddr_reg:x3; val_offset:17607*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17607*0 + 3*493*FLEN/8, x4, x1, x2)

inst_5870:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b0003ff; valaddr_reg:x3; val_offset:17610*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17610*0 + 3*494*FLEN/8, x4, x1, x2)

inst_5871:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b0007ff; valaddr_reg:x3; val_offset:17613*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17613*0 + 3*495*FLEN/8, x4, x1, x2)

inst_5872:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b000fff; valaddr_reg:x3; val_offset:17616*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17616*0 + 3*496*FLEN/8, x4, x1, x2)

inst_5873:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b001fff; valaddr_reg:x3; val_offset:17619*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17619*0 + 3*497*FLEN/8, x4, x1, x2)

inst_5874:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b003fff; valaddr_reg:x3; val_offset:17622*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17622*0 + 3*498*FLEN/8, x4, x1, x2)

inst_5875:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b007fff; valaddr_reg:x3; val_offset:17625*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17625*0 + 3*499*FLEN/8, x4, x1, x2)

inst_5876:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b00ffff; valaddr_reg:x3; val_offset:17628*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17628*0 + 3*500*FLEN/8, x4, x1, x2)

inst_5877:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b01ffff; valaddr_reg:x3; val_offset:17631*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17631*0 + 3*501*FLEN/8, x4, x1, x2)

inst_5878:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b03ffff; valaddr_reg:x3; val_offset:17634*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17634*0 + 3*502*FLEN/8, x4, x1, x2)

inst_5879:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b07ffff; valaddr_reg:x3; val_offset:17637*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17637*0 + 3*503*FLEN/8, x4, x1, x2)

inst_5880:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b0fffff; valaddr_reg:x3; val_offset:17640*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17640*0 + 3*504*FLEN/8, x4, x1, x2)

inst_5881:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b1fffff; valaddr_reg:x3; val_offset:17643*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17643*0 + 3*505*FLEN/8, x4, x1, x2)

inst_5882:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b3fffff; valaddr_reg:x3; val_offset:17646*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17646*0 + 3*506*FLEN/8, x4, x1, x2)

inst_5883:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b400000; valaddr_reg:x3; val_offset:17649*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17649*0 + 3*507*FLEN/8, x4, x1, x2)

inst_5884:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b600000; valaddr_reg:x3; val_offset:17652*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17652*0 + 3*508*FLEN/8, x4, x1, x2)

inst_5885:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b700000; valaddr_reg:x3; val_offset:17655*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17655*0 + 3*509*FLEN/8, x4, x1, x2)

inst_5886:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b780000; valaddr_reg:x3; val_offset:17658*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17658*0 + 3*510*FLEN/8, x4, x1, x2)

inst_5887:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b7c0000; valaddr_reg:x3; val_offset:17661*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17661*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_5888:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b7e0000; valaddr_reg:x3; val_offset:17664*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17664*0 + 3*512*FLEN/8, x4, x1, x2)

inst_5889:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b7f0000; valaddr_reg:x3; val_offset:17667*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17667*0 + 3*513*FLEN/8, x4, x1, x2)

inst_5890:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b7f8000; valaddr_reg:x3; val_offset:17670*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17670*0 + 3*514*FLEN/8, x4, x1, x2)

inst_5891:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b7fc000; valaddr_reg:x3; val_offset:17673*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17673*0 + 3*515*FLEN/8, x4, x1, x2)

inst_5892:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b7fe000; valaddr_reg:x3; val_offset:17676*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17676*0 + 3*516*FLEN/8, x4, x1, x2)

inst_5893:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b7ff000; valaddr_reg:x3; val_offset:17679*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17679*0 + 3*517*FLEN/8, x4, x1, x2)

inst_5894:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b7ff800; valaddr_reg:x3; val_offset:17682*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17682*0 + 3*518*FLEN/8, x4, x1, x2)

inst_5895:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b7ffc00; valaddr_reg:x3; val_offset:17685*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17685*0 + 3*519*FLEN/8, x4, x1, x2)

inst_5896:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b7ffe00; valaddr_reg:x3; val_offset:17688*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17688*0 + 3*520*FLEN/8, x4, x1, x2)

inst_5897:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b7fff00; valaddr_reg:x3; val_offset:17691*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17691*0 + 3*521*FLEN/8, x4, x1, x2)

inst_5898:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b7fff80; valaddr_reg:x3; val_offset:17694*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17694*0 + 3*522*FLEN/8, x4, x1, x2)

inst_5899:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b7fffc0; valaddr_reg:x3; val_offset:17697*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17697*0 + 3*523*FLEN/8, x4, x1, x2)

inst_5900:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b7fffe0; valaddr_reg:x3; val_offset:17700*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17700*0 + 3*524*FLEN/8, x4, x1, x2)

inst_5901:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b7ffff0; valaddr_reg:x3; val_offset:17703*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17703*0 + 3*525*FLEN/8, x4, x1, x2)

inst_5902:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b7ffff8; valaddr_reg:x3; val_offset:17706*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17706*0 + 3*526*FLEN/8, x4, x1, x2)

inst_5903:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b7ffffc; valaddr_reg:x3; val_offset:17709*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17709*0 + 3*527*FLEN/8, x4, x1, x2)

inst_5904:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b7ffffe; valaddr_reg:x3; val_offset:17712*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17712*0 + 3*528*FLEN/8, x4, x1, x2)

inst_5905:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x6b7fffff; valaddr_reg:x3; val_offset:17715*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17715*0 + 3*529*FLEN/8, x4, x1, x2)

inst_5906:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x7f000001; valaddr_reg:x3; val_offset:17718*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17718*0 + 3*530*FLEN/8, x4, x1, x2)

inst_5907:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x7f000003; valaddr_reg:x3; val_offset:17721*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17721*0 + 3*531*FLEN/8, x4, x1, x2)

inst_5908:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x7f000007; valaddr_reg:x3; val_offset:17724*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17724*0 + 3*532*FLEN/8, x4, x1, x2)

inst_5909:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x7f199999; valaddr_reg:x3; val_offset:17727*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17727*0 + 3*533*FLEN/8, x4, x1, x2)

inst_5910:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x7f249249; valaddr_reg:x3; val_offset:17730*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17730*0 + 3*534*FLEN/8, x4, x1, x2)

inst_5911:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x7f333333; valaddr_reg:x3; val_offset:17733*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17733*0 + 3*535*FLEN/8, x4, x1, x2)

inst_5912:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:17736*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17736*0 + 3*536*FLEN/8, x4, x1, x2)

inst_5913:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:17739*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17739*0 + 3*537*FLEN/8, x4, x1, x2)

inst_5914:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x7f444444; valaddr_reg:x3; val_offset:17742*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17742*0 + 3*538*FLEN/8, x4, x1, x2)

inst_5915:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:17745*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17745*0 + 3*539*FLEN/8, x4, x1, x2)

inst_5916:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:17748*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17748*0 + 3*540*FLEN/8, x4, x1, x2)

inst_5917:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x7f666666; valaddr_reg:x3; val_offset:17751*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17751*0 + 3*541*FLEN/8, x4, x1, x2)

inst_5918:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:17754*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17754*0 + 3*542*FLEN/8, x4, x1, x2)

inst_5919:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:17757*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17757*0 + 3*543*FLEN/8, x4, x1, x2)

inst_5920:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:17760*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17760*0 + 3*544*FLEN/8, x4, x1, x2)

inst_5921:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x59f068 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x165a9a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd9f068; op2val:0x41165a9a;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:17763*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17763*0 + 3*545*FLEN/8, x4, x1, x2)

inst_5922:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe7800000; valaddr_reg:x3; val_offset:17766*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17766*0 + 3*546*FLEN/8, x4, x1, x2)

inst_5923:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe7800001; valaddr_reg:x3; val_offset:17769*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17769*0 + 3*547*FLEN/8, x4, x1, x2)

inst_5924:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe7800003; valaddr_reg:x3; val_offset:17772*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17772*0 + 3*548*FLEN/8, x4, x1, x2)

inst_5925:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe7800007; valaddr_reg:x3; val_offset:17775*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17775*0 + 3*549*FLEN/8, x4, x1, x2)

inst_5926:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe780000f; valaddr_reg:x3; val_offset:17778*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17778*0 + 3*550*FLEN/8, x4, x1, x2)

inst_5927:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe780001f; valaddr_reg:x3; val_offset:17781*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17781*0 + 3*551*FLEN/8, x4, x1, x2)

inst_5928:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe780003f; valaddr_reg:x3; val_offset:17784*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17784*0 + 3*552*FLEN/8, x4, x1, x2)

inst_5929:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe780007f; valaddr_reg:x3; val_offset:17787*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17787*0 + 3*553*FLEN/8, x4, x1, x2)

inst_5930:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe78000ff; valaddr_reg:x3; val_offset:17790*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17790*0 + 3*554*FLEN/8, x4, x1, x2)

inst_5931:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe78001ff; valaddr_reg:x3; val_offset:17793*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17793*0 + 3*555*FLEN/8, x4, x1, x2)

inst_5932:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe78003ff; valaddr_reg:x3; val_offset:17796*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17796*0 + 3*556*FLEN/8, x4, x1, x2)

inst_5933:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe78007ff; valaddr_reg:x3; val_offset:17799*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17799*0 + 3*557*FLEN/8, x4, x1, x2)

inst_5934:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe7800fff; valaddr_reg:x3; val_offset:17802*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17802*0 + 3*558*FLEN/8, x4, x1, x2)

inst_5935:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe7801fff; valaddr_reg:x3; val_offset:17805*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17805*0 + 3*559*FLEN/8, x4, x1, x2)

inst_5936:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe7803fff; valaddr_reg:x3; val_offset:17808*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17808*0 + 3*560*FLEN/8, x4, x1, x2)

inst_5937:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe7807fff; valaddr_reg:x3; val_offset:17811*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17811*0 + 3*561*FLEN/8, x4, x1, x2)

inst_5938:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe780ffff; valaddr_reg:x3; val_offset:17814*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17814*0 + 3*562*FLEN/8, x4, x1, x2)

inst_5939:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe781ffff; valaddr_reg:x3; val_offset:17817*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17817*0 + 3*563*FLEN/8, x4, x1, x2)

inst_5940:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe783ffff; valaddr_reg:x3; val_offset:17820*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17820*0 + 3*564*FLEN/8, x4, x1, x2)

inst_5941:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe787ffff; valaddr_reg:x3; val_offset:17823*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17823*0 + 3*565*FLEN/8, x4, x1, x2)

inst_5942:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe78fffff; valaddr_reg:x3; val_offset:17826*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17826*0 + 3*566*FLEN/8, x4, x1, x2)

inst_5943:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe79fffff; valaddr_reg:x3; val_offset:17829*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17829*0 + 3*567*FLEN/8, x4, x1, x2)

inst_5944:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe7bfffff; valaddr_reg:x3; val_offset:17832*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17832*0 + 3*568*FLEN/8, x4, x1, x2)

inst_5945:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe7c00000; valaddr_reg:x3; val_offset:17835*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17835*0 + 3*569*FLEN/8, x4, x1, x2)

inst_5946:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe7e00000; valaddr_reg:x3; val_offset:17838*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17838*0 + 3*570*FLEN/8, x4, x1, x2)

inst_5947:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe7f00000; valaddr_reg:x3; val_offset:17841*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17841*0 + 3*571*FLEN/8, x4, x1, x2)

inst_5948:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe7f80000; valaddr_reg:x3; val_offset:17844*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17844*0 + 3*572*FLEN/8, x4, x1, x2)

inst_5949:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe7fc0000; valaddr_reg:x3; val_offset:17847*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17847*0 + 3*573*FLEN/8, x4, x1, x2)

inst_5950:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe7fe0000; valaddr_reg:x3; val_offset:17850*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17850*0 + 3*574*FLEN/8, x4, x1, x2)

inst_5951:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe7ff0000; valaddr_reg:x3; val_offset:17853*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17853*0 + 3*575*FLEN/8, x4, x1, x2)

inst_5952:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe7ff8000; valaddr_reg:x3; val_offset:17856*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17856*0 + 3*576*FLEN/8, x4, x1, x2)

inst_5953:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe7ffc000; valaddr_reg:x3; val_offset:17859*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17859*0 + 3*577*FLEN/8, x4, x1, x2)

inst_5954:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe7ffe000; valaddr_reg:x3; val_offset:17862*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17862*0 + 3*578*FLEN/8, x4, x1, x2)

inst_5955:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe7fff000; valaddr_reg:x3; val_offset:17865*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17865*0 + 3*579*FLEN/8, x4, x1, x2)

inst_5956:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe7fff800; valaddr_reg:x3; val_offset:17868*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17868*0 + 3*580*FLEN/8, x4, x1, x2)

inst_5957:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe7fffc00; valaddr_reg:x3; val_offset:17871*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17871*0 + 3*581*FLEN/8, x4, x1, x2)

inst_5958:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe7fffe00; valaddr_reg:x3; val_offset:17874*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17874*0 + 3*582*FLEN/8, x4, x1, x2)

inst_5959:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe7ffff00; valaddr_reg:x3; val_offset:17877*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17877*0 + 3*583*FLEN/8, x4, x1, x2)

inst_5960:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe7ffff80; valaddr_reg:x3; val_offset:17880*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17880*0 + 3*584*FLEN/8, x4, x1, x2)

inst_5961:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe7ffffc0; valaddr_reg:x3; val_offset:17883*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17883*0 + 3*585*FLEN/8, x4, x1, x2)

inst_5962:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe7ffffe0; valaddr_reg:x3; val_offset:17886*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17886*0 + 3*586*FLEN/8, x4, x1, x2)

inst_5963:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe7fffff0; valaddr_reg:x3; val_offset:17889*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17889*0 + 3*587*FLEN/8, x4, x1, x2)

inst_5964:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe7fffff8; valaddr_reg:x3; val_offset:17892*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17892*0 + 3*588*FLEN/8, x4, x1, x2)

inst_5965:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe7fffffc; valaddr_reg:x3; val_offset:17895*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17895*0 + 3*589*FLEN/8, x4, x1, x2)

inst_5966:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe7fffffe; valaddr_reg:x3; val_offset:17898*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17898*0 + 3*590*FLEN/8, x4, x1, x2)

inst_5967:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xcf and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xe7ffffff; valaddr_reg:x3; val_offset:17901*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17901*0 + 3*591*FLEN/8, x4, x1, x2)

inst_5968:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xff000001; valaddr_reg:x3; val_offset:17904*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17904*0 + 3*592*FLEN/8, x4, x1, x2)

inst_5969:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xff000003; valaddr_reg:x3; val_offset:17907*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17907*0 + 3*593*FLEN/8, x4, x1, x2)

inst_5970:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xff000007; valaddr_reg:x3; val_offset:17910*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17910*0 + 3*594*FLEN/8, x4, x1, x2)

inst_5971:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xff199999; valaddr_reg:x3; val_offset:17913*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17913*0 + 3*595*FLEN/8, x4, x1, x2)

inst_5972:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xff249249; valaddr_reg:x3; val_offset:17916*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17916*0 + 3*596*FLEN/8, x4, x1, x2)

inst_5973:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xff333333; valaddr_reg:x3; val_offset:17919*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17919*0 + 3*597*FLEN/8, x4, x1, x2)

inst_5974:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:17922*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17922*0 + 3*598*FLEN/8, x4, x1, x2)

inst_5975:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:17925*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17925*0 + 3*599*FLEN/8, x4, x1, x2)

inst_5976:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xff444444; valaddr_reg:x3; val_offset:17928*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17928*0 + 3*600*FLEN/8, x4, x1, x2)

inst_5977:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:17931*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17931*0 + 3*601*FLEN/8, x4, x1, x2)

inst_5978:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:17934*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17934*0 + 3*602*FLEN/8, x4, x1, x2)

inst_5979:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xff666666; valaddr_reg:x3; val_offset:17937*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17937*0 + 3*603*FLEN/8, x4, x1, x2)

inst_5980:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:17940*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17940*0 + 3*604*FLEN/8, x4, x1, x2)

inst_5981:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:17943*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17943*0 + 3*605*FLEN/8, x4, x1, x2)

inst_5982:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:17946*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17946*0 + 3*606*FLEN/8, x4, x1, x2)

inst_5983:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5afbd0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x15a300 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddafbd0; op2val:0xc115a300;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:17949*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17949*0 + 3*607*FLEN/8, x4, x1, x2)

inst_5984:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x66000000; valaddr_reg:x3; val_offset:17952*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17952*0 + 3*608*FLEN/8, x4, x1, x2)

inst_5985:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x66000001; valaddr_reg:x3; val_offset:17955*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17955*0 + 3*609*FLEN/8, x4, x1, x2)

inst_5986:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x66000003; valaddr_reg:x3; val_offset:17958*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17958*0 + 3*610*FLEN/8, x4, x1, x2)

inst_5987:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x66000007; valaddr_reg:x3; val_offset:17961*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17961*0 + 3*611*FLEN/8, x4, x1, x2)

inst_5988:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x6600000f; valaddr_reg:x3; val_offset:17964*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17964*0 + 3*612*FLEN/8, x4, x1, x2)

inst_5989:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x6600001f; valaddr_reg:x3; val_offset:17967*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17967*0 + 3*613*FLEN/8, x4, x1, x2)

inst_5990:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x6600003f; valaddr_reg:x3; val_offset:17970*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17970*0 + 3*614*FLEN/8, x4, x1, x2)

inst_5991:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x6600007f; valaddr_reg:x3; val_offset:17973*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17973*0 + 3*615*FLEN/8, x4, x1, x2)

inst_5992:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x660000ff; valaddr_reg:x3; val_offset:17976*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17976*0 + 3*616*FLEN/8, x4, x1, x2)

inst_5993:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x660001ff; valaddr_reg:x3; val_offset:17979*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17979*0 + 3*617*FLEN/8, x4, x1, x2)

inst_5994:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x660003ff; valaddr_reg:x3; val_offset:17982*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17982*0 + 3*618*FLEN/8, x4, x1, x2)

inst_5995:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x660007ff; valaddr_reg:x3; val_offset:17985*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17985*0 + 3*619*FLEN/8, x4, x1, x2)

inst_5996:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x66000fff; valaddr_reg:x3; val_offset:17988*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17988*0 + 3*620*FLEN/8, x4, x1, x2)

inst_5997:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x66001fff; valaddr_reg:x3; val_offset:17991*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17991*0 + 3*621*FLEN/8, x4, x1, x2)

inst_5998:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x66003fff; valaddr_reg:x3; val_offset:17994*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17994*0 + 3*622*FLEN/8, x4, x1, x2)

inst_5999:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x66007fff; valaddr_reg:x3; val_offset:17997*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 17997*0 + 3*623*FLEN/8, x4, x1, x2)

inst_6000:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x6600ffff; valaddr_reg:x3; val_offset:18000*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18000*0 + 3*624*FLEN/8, x4, x1, x2)

inst_6001:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x6601ffff; valaddr_reg:x3; val_offset:18003*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18003*0 + 3*625*FLEN/8, x4, x1, x2)

inst_6002:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x6603ffff; valaddr_reg:x3; val_offset:18006*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18006*0 + 3*626*FLEN/8, x4, x1, x2)

inst_6003:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x6607ffff; valaddr_reg:x3; val_offset:18009*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18009*0 + 3*627*FLEN/8, x4, x1, x2)

inst_6004:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x660fffff; valaddr_reg:x3; val_offset:18012*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18012*0 + 3*628*FLEN/8, x4, x1, x2)

inst_6005:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x661fffff; valaddr_reg:x3; val_offset:18015*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18015*0 + 3*629*FLEN/8, x4, x1, x2)

inst_6006:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x663fffff; valaddr_reg:x3; val_offset:18018*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18018*0 + 3*630*FLEN/8, x4, x1, x2)

inst_6007:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x66400000; valaddr_reg:x3; val_offset:18021*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18021*0 + 3*631*FLEN/8, x4, x1, x2)

inst_6008:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x66600000; valaddr_reg:x3; val_offset:18024*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18024*0 + 3*632*FLEN/8, x4, x1, x2)

inst_6009:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x66700000; valaddr_reg:x3; val_offset:18027*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18027*0 + 3*633*FLEN/8, x4, x1, x2)

inst_6010:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x66780000; valaddr_reg:x3; val_offset:18030*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18030*0 + 3*634*FLEN/8, x4, x1, x2)

inst_6011:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x667c0000; valaddr_reg:x3; val_offset:18033*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18033*0 + 3*635*FLEN/8, x4, x1, x2)

inst_6012:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x667e0000; valaddr_reg:x3; val_offset:18036*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18036*0 + 3*636*FLEN/8, x4, x1, x2)

inst_6013:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x667f0000; valaddr_reg:x3; val_offset:18039*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18039*0 + 3*637*FLEN/8, x4, x1, x2)

inst_6014:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x667f8000; valaddr_reg:x3; val_offset:18042*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18042*0 + 3*638*FLEN/8, x4, x1, x2)

inst_6015:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x667fc000; valaddr_reg:x3; val_offset:18045*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18045*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_6016:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x667fe000; valaddr_reg:x3; val_offset:18048*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18048*0 + 3*640*FLEN/8, x4, x1, x2)

inst_6017:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x667ff000; valaddr_reg:x3; val_offset:18051*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18051*0 + 3*641*FLEN/8, x4, x1, x2)

inst_6018:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x667ff800; valaddr_reg:x3; val_offset:18054*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18054*0 + 3*642*FLEN/8, x4, x1, x2)

inst_6019:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x667ffc00; valaddr_reg:x3; val_offset:18057*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18057*0 + 3*643*FLEN/8, x4, x1, x2)

inst_6020:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x667ffe00; valaddr_reg:x3; val_offset:18060*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18060*0 + 3*644*FLEN/8, x4, x1, x2)

inst_6021:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x667fff00; valaddr_reg:x3; val_offset:18063*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18063*0 + 3*645*FLEN/8, x4, x1, x2)

inst_6022:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x667fff80; valaddr_reg:x3; val_offset:18066*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18066*0 + 3*646*FLEN/8, x4, x1, x2)

inst_6023:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x667fffc0; valaddr_reg:x3; val_offset:18069*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18069*0 + 3*647*FLEN/8, x4, x1, x2)

inst_6024:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x667fffe0; valaddr_reg:x3; val_offset:18072*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18072*0 + 3*648*FLEN/8, x4, x1, x2)

inst_6025:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x667ffff0; valaddr_reg:x3; val_offset:18075*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18075*0 + 3*649*FLEN/8, x4, x1, x2)

inst_6026:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x667ffff8; valaddr_reg:x3; val_offset:18078*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18078*0 + 3*650*FLEN/8, x4, x1, x2)

inst_6027:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x667ffffc; valaddr_reg:x3; val_offset:18081*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18081*0 + 3*651*FLEN/8, x4, x1, x2)

inst_6028:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x667ffffe; valaddr_reg:x3; val_offset:18084*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18084*0 + 3*652*FLEN/8, x4, x1, x2)

inst_6029:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x667fffff; valaddr_reg:x3; val_offset:18087*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18087*0 + 3*653*FLEN/8, x4, x1, x2)

inst_6030:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x7f000001; valaddr_reg:x3; val_offset:18090*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18090*0 + 3*654*FLEN/8, x4, x1, x2)

inst_6031:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x7f000003; valaddr_reg:x3; val_offset:18093*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18093*0 + 3*655*FLEN/8, x4, x1, x2)

inst_6032:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x7f000007; valaddr_reg:x3; val_offset:18096*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18096*0 + 3*656*FLEN/8, x4, x1, x2)

inst_6033:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x7f199999; valaddr_reg:x3; val_offset:18099*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18099*0 + 3*657*FLEN/8, x4, x1, x2)

inst_6034:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x7f249249; valaddr_reg:x3; val_offset:18102*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18102*0 + 3*658*FLEN/8, x4, x1, x2)

inst_6035:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x7f333333; valaddr_reg:x3; val_offset:18105*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18105*0 + 3*659*FLEN/8, x4, x1, x2)

inst_6036:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:18108*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18108*0 + 3*660*FLEN/8, x4, x1, x2)

inst_6037:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:18111*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18111*0 + 3*661*FLEN/8, x4, x1, x2)

inst_6038:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x7f444444; valaddr_reg:x3; val_offset:18114*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18114*0 + 3*662*FLEN/8, x4, x1, x2)

inst_6039:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:18117*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18117*0 + 3*663*FLEN/8, x4, x1, x2)

inst_6040:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:18120*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18120*0 + 3*664*FLEN/8, x4, x1, x2)

inst_6041:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x7f666666; valaddr_reg:x3; val_offset:18123*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18123*0 + 3*665*FLEN/8, x4, x1, x2)

inst_6042:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:18126*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18126*0 + 3*666*FLEN/8, x4, x1, x2)

inst_6043:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:18129*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18129*0 + 3*667*FLEN/8, x4, x1, x2)

inst_6044:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:18132*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18132*0 + 3*668*FLEN/8, x4, x1, x2)

inst_6045:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c185d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x14e18b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddc185d; op2val:0x4114e18b;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:18135*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18135*0 + 3*669*FLEN/8, x4, x1, x2)

inst_6046:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x74000000; valaddr_reg:x3; val_offset:18138*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18138*0 + 3*670*FLEN/8, x4, x1, x2)

inst_6047:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x74000001; valaddr_reg:x3; val_offset:18141*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18141*0 + 3*671*FLEN/8, x4, x1, x2)

inst_6048:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x74000003; valaddr_reg:x3; val_offset:18144*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18144*0 + 3*672*FLEN/8, x4, x1, x2)

inst_6049:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x74000007; valaddr_reg:x3; val_offset:18147*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18147*0 + 3*673*FLEN/8, x4, x1, x2)

inst_6050:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x7400000f; valaddr_reg:x3; val_offset:18150*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18150*0 + 3*674*FLEN/8, x4, x1, x2)

inst_6051:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x7400001f; valaddr_reg:x3; val_offset:18153*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18153*0 + 3*675*FLEN/8, x4, x1, x2)

inst_6052:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x7400003f; valaddr_reg:x3; val_offset:18156*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18156*0 + 3*676*FLEN/8, x4, x1, x2)

inst_6053:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x7400007f; valaddr_reg:x3; val_offset:18159*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18159*0 + 3*677*FLEN/8, x4, x1, x2)

inst_6054:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x740000ff; valaddr_reg:x3; val_offset:18162*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18162*0 + 3*678*FLEN/8, x4, x1, x2)

inst_6055:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x740001ff; valaddr_reg:x3; val_offset:18165*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18165*0 + 3*679*FLEN/8, x4, x1, x2)

inst_6056:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x740003ff; valaddr_reg:x3; val_offset:18168*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18168*0 + 3*680*FLEN/8, x4, x1, x2)

inst_6057:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x740007ff; valaddr_reg:x3; val_offset:18171*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18171*0 + 3*681*FLEN/8, x4, x1, x2)

inst_6058:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x74000fff; valaddr_reg:x3; val_offset:18174*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18174*0 + 3*682*FLEN/8, x4, x1, x2)

inst_6059:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x74001fff; valaddr_reg:x3; val_offset:18177*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18177*0 + 3*683*FLEN/8, x4, x1, x2)

inst_6060:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x74003fff; valaddr_reg:x3; val_offset:18180*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18180*0 + 3*684*FLEN/8, x4, x1, x2)

inst_6061:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x74007fff; valaddr_reg:x3; val_offset:18183*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18183*0 + 3*685*FLEN/8, x4, x1, x2)

inst_6062:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x7400ffff; valaddr_reg:x3; val_offset:18186*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18186*0 + 3*686*FLEN/8, x4, x1, x2)

inst_6063:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x7401ffff; valaddr_reg:x3; val_offset:18189*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18189*0 + 3*687*FLEN/8, x4, x1, x2)

inst_6064:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x7403ffff; valaddr_reg:x3; val_offset:18192*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18192*0 + 3*688*FLEN/8, x4, x1, x2)

inst_6065:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x7407ffff; valaddr_reg:x3; val_offset:18195*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18195*0 + 3*689*FLEN/8, x4, x1, x2)

inst_6066:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x740fffff; valaddr_reg:x3; val_offset:18198*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18198*0 + 3*690*FLEN/8, x4, x1, x2)

inst_6067:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x741fffff; valaddr_reg:x3; val_offset:18201*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18201*0 + 3*691*FLEN/8, x4, x1, x2)

inst_6068:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x743fffff; valaddr_reg:x3; val_offset:18204*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18204*0 + 3*692*FLEN/8, x4, x1, x2)

inst_6069:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x74400000; valaddr_reg:x3; val_offset:18207*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18207*0 + 3*693*FLEN/8, x4, x1, x2)

inst_6070:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x74600000; valaddr_reg:x3; val_offset:18210*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18210*0 + 3*694*FLEN/8, x4, x1, x2)

inst_6071:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x74700000; valaddr_reg:x3; val_offset:18213*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18213*0 + 3*695*FLEN/8, x4, x1, x2)

inst_6072:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x74780000; valaddr_reg:x3; val_offset:18216*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18216*0 + 3*696*FLEN/8, x4, x1, x2)

inst_6073:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x747c0000; valaddr_reg:x3; val_offset:18219*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18219*0 + 3*697*FLEN/8, x4, x1, x2)

inst_6074:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x747e0000; valaddr_reg:x3; val_offset:18222*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18222*0 + 3*698*FLEN/8, x4, x1, x2)

inst_6075:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x747f0000; valaddr_reg:x3; val_offset:18225*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18225*0 + 3*699*FLEN/8, x4, x1, x2)

inst_6076:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x747f8000; valaddr_reg:x3; val_offset:18228*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18228*0 + 3*700*FLEN/8, x4, x1, x2)

inst_6077:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x747fc000; valaddr_reg:x3; val_offset:18231*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18231*0 + 3*701*FLEN/8, x4, x1, x2)

inst_6078:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x747fe000; valaddr_reg:x3; val_offset:18234*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18234*0 + 3*702*FLEN/8, x4, x1, x2)

inst_6079:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x747ff000; valaddr_reg:x3; val_offset:18237*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18237*0 + 3*703*FLEN/8, x4, x1, x2)

inst_6080:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x747ff800; valaddr_reg:x3; val_offset:18240*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18240*0 + 3*704*FLEN/8, x4, x1, x2)

inst_6081:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x747ffc00; valaddr_reg:x3; val_offset:18243*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18243*0 + 3*705*FLEN/8, x4, x1, x2)

inst_6082:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x747ffe00; valaddr_reg:x3; val_offset:18246*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18246*0 + 3*706*FLEN/8, x4, x1, x2)

inst_6083:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x747fff00; valaddr_reg:x3; val_offset:18249*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18249*0 + 3*707*FLEN/8, x4, x1, x2)

inst_6084:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x747fff80; valaddr_reg:x3; val_offset:18252*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18252*0 + 3*708*FLEN/8, x4, x1, x2)

inst_6085:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x747fffc0; valaddr_reg:x3; val_offset:18255*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18255*0 + 3*709*FLEN/8, x4, x1, x2)

inst_6086:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x747fffe0; valaddr_reg:x3; val_offset:18258*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18258*0 + 3*710*FLEN/8, x4, x1, x2)

inst_6087:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x747ffff0; valaddr_reg:x3; val_offset:18261*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18261*0 + 3*711*FLEN/8, x4, x1, x2)

inst_6088:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x747ffff8; valaddr_reg:x3; val_offset:18264*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18264*0 + 3*712*FLEN/8, x4, x1, x2)

inst_6089:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x747ffffc; valaddr_reg:x3; val_offset:18267*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18267*0 + 3*713*FLEN/8, x4, x1, x2)

inst_6090:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x747ffffe; valaddr_reg:x3; val_offset:18270*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18270*0 + 3*714*FLEN/8, x4, x1, x2)

inst_6091:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xe8 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x747fffff; valaddr_reg:x3; val_offset:18273*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18273*0 + 3*715*FLEN/8, x4, x1, x2)

inst_6092:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x7f000001; valaddr_reg:x3; val_offset:18276*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18276*0 + 3*716*FLEN/8, x4, x1, x2)

inst_6093:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x7f000003; valaddr_reg:x3; val_offset:18279*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18279*0 + 3*717*FLEN/8, x4, x1, x2)

inst_6094:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x7f000007; valaddr_reg:x3; val_offset:18282*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18282*0 + 3*718*FLEN/8, x4, x1, x2)

inst_6095:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x7f199999; valaddr_reg:x3; val_offset:18285*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18285*0 + 3*719*FLEN/8, x4, x1, x2)

inst_6096:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x7f249249; valaddr_reg:x3; val_offset:18288*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18288*0 + 3*720*FLEN/8, x4, x1, x2)

inst_6097:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x7f333333; valaddr_reg:x3; val_offset:18291*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18291*0 + 3*721*FLEN/8, x4, x1, x2)

inst_6098:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:18294*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18294*0 + 3*722*FLEN/8, x4, x1, x2)

inst_6099:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:18297*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18297*0 + 3*723*FLEN/8, x4, x1, x2)

inst_6100:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x7f444444; valaddr_reg:x3; val_offset:18300*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18300*0 + 3*724*FLEN/8, x4, x1, x2)

inst_6101:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:18303*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18303*0 + 3*725*FLEN/8, x4, x1, x2)

inst_6102:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:18306*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18306*0 + 3*726*FLEN/8, x4, x1, x2)

inst_6103:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x7f666666; valaddr_reg:x3; val_offset:18309*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18309*0 + 3*727*FLEN/8, x4, x1, x2)

inst_6104:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:18312*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18312*0 + 3*728*FLEN/8, x4, x1, x2)

inst_6105:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:18315*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18315*0 + 3*729*FLEN/8, x4, x1, x2)

inst_6106:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:18318*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18318*0 + 3*730*FLEN/8, x4, x1, x2)

inst_6107:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61adfd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x11326b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1adfd; op2val:0x4111326b;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:18321*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18321*0 + 3*731*FLEN/8, x4, x1, x2)

inst_6108:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:18324*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18324*0 + 3*732*FLEN/8, x4, x1, x2)

inst_6109:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:18327*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18327*0 + 3*733*FLEN/8, x4, x1, x2)

inst_6110:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:18330*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18330*0 + 3*734*FLEN/8, x4, x1, x2)

inst_6111:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:18333*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18333*0 + 3*735*FLEN/8, x4, x1, x2)

inst_6112:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:18336*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18336*0 + 3*736*FLEN/8, x4, x1, x2)

inst_6113:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:18339*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18339*0 + 3*737*FLEN/8, x4, x1, x2)

inst_6114:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:18342*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18342*0 + 3*738*FLEN/8, x4, x1, x2)

inst_6115:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:18345*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18345*0 + 3*739*FLEN/8, x4, x1, x2)

inst_6116:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:18348*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18348*0 + 3*740*FLEN/8, x4, x1, x2)

inst_6117:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:18351*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18351*0 + 3*741*FLEN/8, x4, x1, x2)

inst_6118:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:18354*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18354*0 + 3*742*FLEN/8, x4, x1, x2)

inst_6119:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:18357*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18357*0 + 3*743*FLEN/8, x4, x1, x2)

inst_6120:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:18360*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18360*0 + 3*744*FLEN/8, x4, x1, x2)

inst_6121:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:18363*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18363*0 + 3*745*FLEN/8, x4, x1, x2)

inst_6122:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:18366*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18366*0 + 3*746*FLEN/8, x4, x1, x2)

inst_6123:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:18369*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18369*0 + 3*747*FLEN/8, x4, x1, x2)

inst_6124:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x8800000; valaddr_reg:x3; val_offset:18372*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18372*0 + 3*748*FLEN/8, x4, x1, x2)

inst_6125:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x8800001; valaddr_reg:x3; val_offset:18375*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18375*0 + 3*749*FLEN/8, x4, x1, x2)

inst_6126:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x8800003; valaddr_reg:x3; val_offset:18378*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18378*0 + 3*750*FLEN/8, x4, x1, x2)

inst_6127:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x8800007; valaddr_reg:x3; val_offset:18381*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18381*0 + 3*751*FLEN/8, x4, x1, x2)

inst_6128:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x880000f; valaddr_reg:x3; val_offset:18384*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18384*0 + 3*752*FLEN/8, x4, x1, x2)

inst_6129:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x880001f; valaddr_reg:x3; val_offset:18387*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18387*0 + 3*753*FLEN/8, x4, x1, x2)

inst_6130:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x880003f; valaddr_reg:x3; val_offset:18390*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18390*0 + 3*754*FLEN/8, x4, x1, x2)

inst_6131:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x880007f; valaddr_reg:x3; val_offset:18393*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18393*0 + 3*755*FLEN/8, x4, x1, x2)

inst_6132:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x88000ff; valaddr_reg:x3; val_offset:18396*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18396*0 + 3*756*FLEN/8, x4, x1, x2)

inst_6133:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x88001ff; valaddr_reg:x3; val_offset:18399*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18399*0 + 3*757*FLEN/8, x4, x1, x2)

inst_6134:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x88003ff; valaddr_reg:x3; val_offset:18402*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18402*0 + 3*758*FLEN/8, x4, x1, x2)

inst_6135:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x88007ff; valaddr_reg:x3; val_offset:18405*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18405*0 + 3*759*FLEN/8, x4, x1, x2)

inst_6136:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x8800fff; valaddr_reg:x3; val_offset:18408*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18408*0 + 3*760*FLEN/8, x4, x1, x2)

inst_6137:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x8801fff; valaddr_reg:x3; val_offset:18411*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18411*0 + 3*761*FLEN/8, x4, x1, x2)

inst_6138:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x8803fff; valaddr_reg:x3; val_offset:18414*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18414*0 + 3*762*FLEN/8, x4, x1, x2)

inst_6139:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x8807fff; valaddr_reg:x3; val_offset:18417*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18417*0 + 3*763*FLEN/8, x4, x1, x2)

inst_6140:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x880ffff; valaddr_reg:x3; val_offset:18420*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18420*0 + 3*764*FLEN/8, x4, x1, x2)

inst_6141:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x881ffff; valaddr_reg:x3; val_offset:18423*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18423*0 + 3*765*FLEN/8, x4, x1, x2)

inst_6142:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x883ffff; valaddr_reg:x3; val_offset:18426*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18426*0 + 3*766*FLEN/8, x4, x1, x2)

inst_6143:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61bb92 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de1bb92; op2val:0x0;
op3val:0x887ffff; valaddr_reg:x3; val_offset:18429*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18429*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15578843,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777208,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777212,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777214,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435456,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435457,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435459,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435463,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435471,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435487,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435519,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435583,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435711,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435967,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268436479,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268437503,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268439551,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268443647,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268451839,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268468223,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268500991,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268566527,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268697599,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268959743,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(269484031,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(270532607,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(272629759,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(272629760,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(274726912,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(275775488,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276299776,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276561920,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276692992,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276758528,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276791296,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276807680,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276815872,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276819968,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276822016,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276823040,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276823552,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276823808,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276823936,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276824000,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276824032,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276824048,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276824056,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276824060,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276824062,32,FLEN)
NAN_BOXED(2109947222,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276824063,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(536870912,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(536870913,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(536870915,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(536870919,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(536870927,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(536870943,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(536870975,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(536871039,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(536871167,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(536871423,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(536871935,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(536872959,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(536875007,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(536879103,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(536887295,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(536903679,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(536936447,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(537001983,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(537133055,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(537395199,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(537919487,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(538968063,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(541065215,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(541065216,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(543162368,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(544210944,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(544735232,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(544997376,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(545128448,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(545193984,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(545226752,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(545243136,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(545251328,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(545255424,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(545257472,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(545258496,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(545259008,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(545259264,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(545259392,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(545259456,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(545259488,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(545259504,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(545259512,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(545259516,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(545259518,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(545259519,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2110260821,32,FLEN)
NAN_BOXED(19124697,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3028287488,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3028287489,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3028287491,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3028287495,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3028287503,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3028287519,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3028287551,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3028287615,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3028287743,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3028287999,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3028288511,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3028289535,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3028291583,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3028295679,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3028303871,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3028320255,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3028353023,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3028418559,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3028549631,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3028811775,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3029336063,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3030384639,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3032481791,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3032481792,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3034578944,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3035627520,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3036151808,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3036413952,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3036545024,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3036610560,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3036643328,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3036659712,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3036667904,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3036672000,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3036674048,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3036675072,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3036675584,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3036675840,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3036675968,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3036676032,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3036676064,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3036676080,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3036676088,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3036676092,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3036676094,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3036676095,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2110290749,32,FLEN)
NAN_BOXED(2166583891,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2046820352,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2046820353,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2046820355,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2046820359,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2046820367,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2046820383,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2046820415,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2046820479,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2046820607,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2046820863,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2046821375,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2046822399,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2046824447,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2046828543,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2046836735,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2046853119,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2046885887,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2046951423,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2047082495,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2047344639,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2047868927,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2048917503,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2051014655,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2051014656,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2053111808,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2054160384,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2054684672,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2054946816,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2055077888,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2055143424,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2055176192,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2055192576,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2055200768,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2055204864,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2055206912,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2055207936,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2055208448,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2055208704,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2055208832,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2055208896,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2055208928,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2055208944,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2055208952,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2055208956,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2055208958,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2055208959,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2110441595,32,FLEN)
NAN_BOXED(1092720481,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2717908992,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2717908993,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2717908995,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2717908999,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2717909007,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2717909023,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2717909055,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2717909119,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2717909247,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2717909503,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2717910015,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2717911039,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2717913087,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2717917183,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2717925375,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2717941759,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2717974527,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2718040063,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2718171135,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2718433279,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2718957567,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2720006143,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2722103295,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2722103296,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2724200448,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2725249024,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2725773312,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2726035456,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2726166528,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2726232064,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2726264832,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2726281216,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2726289408,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2726293504,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2726295552,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2726296576,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2726297088,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2726297344,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2726297472,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2726297536,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2726297568,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2726297584,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2726297592,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2726297596,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2726297598,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(2726297599,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2110474211,32,FLEN)
NAN_BOXED(2166436379,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3430940672,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3430940673,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3430940675,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3430940679,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3430940687,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3430940703,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3430940735,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3430940799,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3430940927,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3430941183,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3430941695,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3430942719,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3430944767,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3430948863,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3430957055,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3430973439,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3431006207,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3431071743,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3431202815,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3431464959,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3431989247,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3433037823,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3435134975,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3435134976,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3437232128,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3438280704,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3438804992,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3439067136,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3439198208,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3439263744,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3439296512,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3439312896,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3439321088,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3439325184,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3439327232,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3439328256,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3439328768,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3439329024,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3439329152,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3439329216,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3439329248,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3439329264,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3439329272,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3439329276,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3439329278,32,FLEN)
NAN_BOXED(2111089532,32,FLEN)
NAN_BOXED(2165969989,32,FLEN)
NAN_BOXED(3439329279,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497472,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497473,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497475,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497479,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497487,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497503,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497535,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497599,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497727,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497983,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75498495,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75499519,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75501567,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75505663,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75513855,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75530239,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75563007,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75628543,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75759615,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(76021759,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(76546047,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(77594623,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(79691775,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(79691776,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(81788928,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(82837504,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83361792,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83623936,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83755008,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83820544,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83853312,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83869696,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83877888,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83881984,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83884032,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83885056,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83885568,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83885824,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83885952,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886016,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886048,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886064,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886072,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886076,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886078,32,FLEN)
NAN_BOXED(2111171749,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886079,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886080,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886081,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886083,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886087,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886095,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886111,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886143,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886207,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886335,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886591,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83887103,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83888127,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83890175,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83894271,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83902463,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83918847,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83951615,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(84017151,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(84148223,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(84410367,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(84934655,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(85983231,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(88080383,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(88080384,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(90177536,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(91226112,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(91750400,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92012544,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92143616,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92209152,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92241920,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92258304,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92266496,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92270592,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92272640,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92273664,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92274176,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92274432,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92274560,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92274624,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92274656,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92274672,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92274680,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92274684,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92274686,32,FLEN)
NAN_BOXED(2111219270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92274687,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1795162112,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1795162113,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1795162115,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1795162119,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1795162127,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1795162143,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1795162175,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1795162239,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1795162367,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1795162623,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1795163135,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1795164159,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1795166207,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1795170303,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1795178495,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1795194879,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1795227647,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1795293183,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1795424255,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1795686399,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1796210687,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1797259263,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1799356415,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1799356416,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1801453568,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1802502144,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1803026432,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1803288576,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1803419648,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1803485184,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1803517952,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1803534336,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1803542528,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1803546624,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1803548672,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1803549696,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1803550208,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1803550464,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1803550592,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1803550656,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1803550688,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1803550704,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1803550712,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1803550716,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1803550718,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(1803550719,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2111434856,32,FLEN)
NAN_BOXED(1091984026,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3883925504,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3883925505,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3883925507,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3883925511,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3883925519,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3883925535,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3883925567,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3883925631,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3883925759,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3883926015,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3883926527,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3883927551,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3883929599,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3883933695,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3883941887,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3883958271,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3883991039,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3884056575,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3884187647,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3884449791,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3884974079,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3886022655,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3888119807,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3888119808,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3890216960,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3891265536,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3891789824,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3892051968,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3892183040,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3892248576,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3892281344,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3892297728,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3892305920,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3892310016,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3892312064,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3892313088,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3892313600,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3892313856,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3892313984,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3892314048,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3892314080,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3892314096,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3892314104,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3892314108,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3892314110,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(3892314111,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2111503312,32,FLEN)
NAN_BOXED(3239420672,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1711276032,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1711276033,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1711276035,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1711276039,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1711276047,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1711276063,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1711276095,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1711276159,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1711276287,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1711276543,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1711277055,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1711278079,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1711280127,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1711284223,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1711292415,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1711308799,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1711341567,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1711407103,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1711538175,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1711800319,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1712324607,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1713373183,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1715470335,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1715470336,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1717567488,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1718616064,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1719140352,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1719402496,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1719533568,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1719599104,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1719631872,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1719648256,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1719656448,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1719660544,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1719662592,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1719663616,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1719664128,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1719664384,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1719664512,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1719664576,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1719664608,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1719664624,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1719664632,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1719664636,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1719664638,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(1719664639,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2111576157,32,FLEN)
NAN_BOXED(1091887499,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1946157056,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1946157057,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1946157059,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1946157063,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1946157071,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1946157087,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1946157119,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1946157183,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1946157311,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1946157567,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1946158079,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1946159103,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1946161151,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1946165247,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1946173439,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1946189823,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1946222591,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1946288127,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1946419199,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1946681343,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1947205631,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1948254207,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1950351359,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1950351360,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1952448512,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1953497088,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1954021376,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1954283520,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1954414592,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1954480128,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1954512896,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1954529280,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1954537472,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1954541568,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1954543616,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1954544640,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1954545152,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1954545408,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1954545536,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1954545600,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1954545632,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1954545648,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1954545656,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1954545660,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1954545662,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(1954545663,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2111942141,32,FLEN)
NAN_BOXED(1091646059,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606336,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606337,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606339,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606343,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606351,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606367,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606399,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606463,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606591,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606847,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142607359,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142608383,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142610431,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142614527,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142622719,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142639103,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142671871,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142737407,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142868479,32,FLEN)
NAN_BOXED(2111945618,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(143130623,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
