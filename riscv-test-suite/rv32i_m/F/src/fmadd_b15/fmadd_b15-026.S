
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:17:59 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmadd.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmadd_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmadd_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmadd_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_19200:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:57600*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57600*0 + 3*0*FLEN/8, x4, x1, x2)

inst_19201:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:57603*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57603*0 + 3*1*FLEN/8, x4, x1, x2)

inst_19202:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:57606*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57606*0 + 3*2*FLEN/8, x4, x1, x2)

inst_19203:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:57609*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57609*0 + 3*3*FLEN/8, x4, x1, x2)

inst_19204:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:57612*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57612*0 + 3*4*FLEN/8, x4, x1, x2)

inst_19205:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc8800000; valaddr_reg:x3; val_offset:57615*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57615*0 + 3*5*FLEN/8, x4, x1, x2)

inst_19206:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc8800001; valaddr_reg:x3; val_offset:57618*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57618*0 + 3*6*FLEN/8, x4, x1, x2)

inst_19207:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc8800003; valaddr_reg:x3; val_offset:57621*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57621*0 + 3*7*FLEN/8, x4, x1, x2)

inst_19208:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc8800007; valaddr_reg:x3; val_offset:57624*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57624*0 + 3*8*FLEN/8, x4, x1, x2)

inst_19209:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc880000f; valaddr_reg:x3; val_offset:57627*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57627*0 + 3*9*FLEN/8, x4, x1, x2)

inst_19210:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc880001f; valaddr_reg:x3; val_offset:57630*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57630*0 + 3*10*FLEN/8, x4, x1, x2)

inst_19211:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc880003f; valaddr_reg:x3; val_offset:57633*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57633*0 + 3*11*FLEN/8, x4, x1, x2)

inst_19212:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc880007f; valaddr_reg:x3; val_offset:57636*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57636*0 + 3*12*FLEN/8, x4, x1, x2)

inst_19213:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc88000ff; valaddr_reg:x3; val_offset:57639*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57639*0 + 3*13*FLEN/8, x4, x1, x2)

inst_19214:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc88001ff; valaddr_reg:x3; val_offset:57642*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57642*0 + 3*14*FLEN/8, x4, x1, x2)

inst_19215:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc88003ff; valaddr_reg:x3; val_offset:57645*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57645*0 + 3*15*FLEN/8, x4, x1, x2)

inst_19216:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc88007ff; valaddr_reg:x3; val_offset:57648*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57648*0 + 3*16*FLEN/8, x4, x1, x2)

inst_19217:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc8800fff; valaddr_reg:x3; val_offset:57651*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57651*0 + 3*17*FLEN/8, x4, x1, x2)

inst_19218:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc8801fff; valaddr_reg:x3; val_offset:57654*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57654*0 + 3*18*FLEN/8, x4, x1, x2)

inst_19219:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc8803fff; valaddr_reg:x3; val_offset:57657*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57657*0 + 3*19*FLEN/8, x4, x1, x2)

inst_19220:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc8807fff; valaddr_reg:x3; val_offset:57660*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57660*0 + 3*20*FLEN/8, x4, x1, x2)

inst_19221:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc880ffff; valaddr_reg:x3; val_offset:57663*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57663*0 + 3*21*FLEN/8, x4, x1, x2)

inst_19222:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc881ffff; valaddr_reg:x3; val_offset:57666*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57666*0 + 3*22*FLEN/8, x4, x1, x2)

inst_19223:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc883ffff; valaddr_reg:x3; val_offset:57669*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57669*0 + 3*23*FLEN/8, x4, x1, x2)

inst_19224:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc887ffff; valaddr_reg:x3; val_offset:57672*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57672*0 + 3*24*FLEN/8, x4, x1, x2)

inst_19225:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc88fffff; valaddr_reg:x3; val_offset:57675*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57675*0 + 3*25*FLEN/8, x4, x1, x2)

inst_19226:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc89fffff; valaddr_reg:x3; val_offset:57678*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57678*0 + 3*26*FLEN/8, x4, x1, x2)

inst_19227:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc8bfffff; valaddr_reg:x3; val_offset:57681*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57681*0 + 3*27*FLEN/8, x4, x1, x2)

inst_19228:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc8c00000; valaddr_reg:x3; val_offset:57684*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57684*0 + 3*28*FLEN/8, x4, x1, x2)

inst_19229:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc8e00000; valaddr_reg:x3; val_offset:57687*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57687*0 + 3*29*FLEN/8, x4, x1, x2)

inst_19230:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc8f00000; valaddr_reg:x3; val_offset:57690*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57690*0 + 3*30*FLEN/8, x4, x1, x2)

inst_19231:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc8f80000; valaddr_reg:x3; val_offset:57693*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57693*0 + 3*31*FLEN/8, x4, x1, x2)

inst_19232:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc8fc0000; valaddr_reg:x3; val_offset:57696*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57696*0 + 3*32*FLEN/8, x4, x1, x2)

inst_19233:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc8fe0000; valaddr_reg:x3; val_offset:57699*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57699*0 + 3*33*FLEN/8, x4, x1, x2)

inst_19234:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc8ff0000; valaddr_reg:x3; val_offset:57702*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57702*0 + 3*34*FLEN/8, x4, x1, x2)

inst_19235:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc8ff8000; valaddr_reg:x3; val_offset:57705*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57705*0 + 3*35*FLEN/8, x4, x1, x2)

inst_19236:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc8ffc000; valaddr_reg:x3; val_offset:57708*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57708*0 + 3*36*FLEN/8, x4, x1, x2)

inst_19237:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc8ffe000; valaddr_reg:x3; val_offset:57711*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57711*0 + 3*37*FLEN/8, x4, x1, x2)

inst_19238:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc8fff000; valaddr_reg:x3; val_offset:57714*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57714*0 + 3*38*FLEN/8, x4, x1, x2)

inst_19239:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc8fff800; valaddr_reg:x3; val_offset:57717*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57717*0 + 3*39*FLEN/8, x4, x1, x2)

inst_19240:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc8fffc00; valaddr_reg:x3; val_offset:57720*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57720*0 + 3*40*FLEN/8, x4, x1, x2)

inst_19241:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc8fffe00; valaddr_reg:x3; val_offset:57723*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57723*0 + 3*41*FLEN/8, x4, x1, x2)

inst_19242:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc8ffff00; valaddr_reg:x3; val_offset:57726*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57726*0 + 3*42*FLEN/8, x4, x1, x2)

inst_19243:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc8ffff80; valaddr_reg:x3; val_offset:57729*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57729*0 + 3*43*FLEN/8, x4, x1, x2)

inst_19244:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc8ffffc0; valaddr_reg:x3; val_offset:57732*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57732*0 + 3*44*FLEN/8, x4, x1, x2)

inst_19245:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc8ffffe0; valaddr_reg:x3; val_offset:57735*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57735*0 + 3*45*FLEN/8, x4, x1, x2)

inst_19246:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc8fffff0; valaddr_reg:x3; val_offset:57738*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57738*0 + 3*46*FLEN/8, x4, x1, x2)

inst_19247:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc8fffff8; valaddr_reg:x3; val_offset:57741*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57741*0 + 3*47*FLEN/8, x4, x1, x2)

inst_19248:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc8fffffc; valaddr_reg:x3; val_offset:57744*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57744*0 + 3*48*FLEN/8, x4, x1, x2)

inst_19249:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc8fffffe; valaddr_reg:x3; val_offset:57747*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57747*0 + 3*49*FLEN/8, x4, x1, x2)

inst_19250:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de1ea and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5648f2 and fs3 == 1 and fe3 == 0x91 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebde1ea; op2val:0x805648f2;
op3val:0xc8ffffff; valaddr_reg:x3; val_offset:57750*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57750*0 + 3*50*FLEN/8, x4, x1, x2)

inst_19251:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x0; valaddr_reg:x3; val_offset:57753*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57753*0 + 3*51*FLEN/8, x4, x1, x2)

inst_19252:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:57756*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57756*0 + 3*52*FLEN/8, x4, x1, x2)

inst_19253:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:57759*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57759*0 + 3*53*FLEN/8, x4, x1, x2)

inst_19254:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:57762*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57762*0 + 3*54*FLEN/8, x4, x1, x2)

inst_19255:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:57765*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57765*0 + 3*55*FLEN/8, x4, x1, x2)

inst_19256:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:57768*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57768*0 + 3*56*FLEN/8, x4, x1, x2)

inst_19257:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:57771*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57771*0 + 3*57*FLEN/8, x4, x1, x2)

inst_19258:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x7f; valaddr_reg:x3; val_offset:57774*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57774*0 + 3*58*FLEN/8, x4, x1, x2)

inst_19259:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0xff; valaddr_reg:x3; val_offset:57777*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57777*0 + 3*59*FLEN/8, x4, x1, x2)

inst_19260:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x1ff; valaddr_reg:x3; val_offset:57780*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57780*0 + 3*60*FLEN/8, x4, x1, x2)

inst_19261:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x3ff; valaddr_reg:x3; val_offset:57783*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57783*0 + 3*61*FLEN/8, x4, x1, x2)

inst_19262:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x7ff; valaddr_reg:x3; val_offset:57786*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57786*0 + 3*62*FLEN/8, x4, x1, x2)

inst_19263:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0xfff; valaddr_reg:x3; val_offset:57789*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57789*0 + 3*63*FLEN/8, x4, x1, x2)

inst_19264:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x1fff; valaddr_reg:x3; val_offset:57792*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57792*0 + 3*64*FLEN/8, x4, x1, x2)

inst_19265:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x3fff; valaddr_reg:x3; val_offset:57795*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57795*0 + 3*65*FLEN/8, x4, x1, x2)

inst_19266:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x7fff; valaddr_reg:x3; val_offset:57798*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57798*0 + 3*66*FLEN/8, x4, x1, x2)

inst_19267:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0xffff; valaddr_reg:x3; val_offset:57801*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57801*0 + 3*67*FLEN/8, x4, x1, x2)

inst_19268:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x1ffff; valaddr_reg:x3; val_offset:57804*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57804*0 + 3*68*FLEN/8, x4, x1, x2)

inst_19269:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x3ffff; valaddr_reg:x3; val_offset:57807*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57807*0 + 3*69*FLEN/8, x4, x1, x2)

inst_19270:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x7ffff; valaddr_reg:x3; val_offset:57810*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57810*0 + 3*70*FLEN/8, x4, x1, x2)

inst_19271:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0xfffff; valaddr_reg:x3; val_offset:57813*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57813*0 + 3*71*FLEN/8, x4, x1, x2)

inst_19272:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:57816*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57816*0 + 3*72*FLEN/8, x4, x1, x2)

inst_19273:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x1fffff; valaddr_reg:x3; val_offset:57819*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57819*0 + 3*73*FLEN/8, x4, x1, x2)

inst_19274:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:57822*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57822*0 + 3*74*FLEN/8, x4, x1, x2)

inst_19275:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:57825*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57825*0 + 3*75*FLEN/8, x4, x1, x2)

inst_19276:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:57828*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57828*0 + 3*76*FLEN/8, x4, x1, x2)

inst_19277:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:57831*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57831*0 + 3*77*FLEN/8, x4, x1, x2)

inst_19278:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x3fffff; valaddr_reg:x3; val_offset:57834*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57834*0 + 3*78*FLEN/8, x4, x1, x2)

inst_19279:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x400000; valaddr_reg:x3; val_offset:57837*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57837*0 + 3*79*FLEN/8, x4, x1, x2)

inst_19280:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:57840*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57840*0 + 3*80*FLEN/8, x4, x1, x2)

inst_19281:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:57843*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57843*0 + 3*81*FLEN/8, x4, x1, x2)

inst_19282:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:57846*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57846*0 + 3*82*FLEN/8, x4, x1, x2)

inst_19283:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x600000; valaddr_reg:x3; val_offset:57849*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57849*0 + 3*83*FLEN/8, x4, x1, x2)

inst_19284:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:57852*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57852*0 + 3*84*FLEN/8, x4, x1, x2)

inst_19285:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:57855*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57855*0 + 3*85*FLEN/8, x4, x1, x2)

inst_19286:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x700000; valaddr_reg:x3; val_offset:57858*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57858*0 + 3*86*FLEN/8, x4, x1, x2)

inst_19287:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x780000; valaddr_reg:x3; val_offset:57861*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57861*0 + 3*87*FLEN/8, x4, x1, x2)

inst_19288:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x7c0000; valaddr_reg:x3; val_offset:57864*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57864*0 + 3*88*FLEN/8, x4, x1, x2)

inst_19289:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x7e0000; valaddr_reg:x3; val_offset:57867*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57867*0 + 3*89*FLEN/8, x4, x1, x2)

inst_19290:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x7f0000; valaddr_reg:x3; val_offset:57870*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57870*0 + 3*90*FLEN/8, x4, x1, x2)

inst_19291:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x7f8000; valaddr_reg:x3; val_offset:57873*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57873*0 + 3*91*FLEN/8, x4, x1, x2)

inst_19292:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x7fc000; valaddr_reg:x3; val_offset:57876*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57876*0 + 3*92*FLEN/8, x4, x1, x2)

inst_19293:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x7fe000; valaddr_reg:x3; val_offset:57879*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57879*0 + 3*93*FLEN/8, x4, x1, x2)

inst_19294:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x7ff000; valaddr_reg:x3; val_offset:57882*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57882*0 + 3*94*FLEN/8, x4, x1, x2)

inst_19295:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x7ff800; valaddr_reg:x3; val_offset:57885*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57885*0 + 3*95*FLEN/8, x4, x1, x2)

inst_19296:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x7ffc00; valaddr_reg:x3; val_offset:57888*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57888*0 + 3*96*FLEN/8, x4, x1, x2)

inst_19297:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x7ffe00; valaddr_reg:x3; val_offset:57891*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57891*0 + 3*97*FLEN/8, x4, x1, x2)

inst_19298:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x7fff00; valaddr_reg:x3; val_offset:57894*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57894*0 + 3*98*FLEN/8, x4, x1, x2)

inst_19299:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x7fff80; valaddr_reg:x3; val_offset:57897*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57897*0 + 3*99*FLEN/8, x4, x1, x2)

inst_19300:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x7fffc0; valaddr_reg:x3; val_offset:57900*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57900*0 + 3*100*FLEN/8, x4, x1, x2)

inst_19301:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x7fffe0; valaddr_reg:x3; val_offset:57903*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57903*0 + 3*101*FLEN/8, x4, x1, x2)

inst_19302:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x7ffff0; valaddr_reg:x3; val_offset:57906*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57906*0 + 3*102*FLEN/8, x4, x1, x2)

inst_19303:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:57909*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57909*0 + 3*103*FLEN/8, x4, x1, x2)

inst_19304:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:57912*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57912*0 + 3*104*FLEN/8, x4, x1, x2)

inst_19305:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:57915*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57915*0 + 3*105*FLEN/8, x4, x1, x2)

inst_19306:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e3c61 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe3c61; op2val:0x0;
op3val:0x7fffff; valaddr_reg:x3; val_offset:57918*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57918*0 + 3*106*FLEN/8, x4, x1, x2)

inst_19307:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5f800000; valaddr_reg:x3; val_offset:57921*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57921*0 + 3*107*FLEN/8, x4, x1, x2)

inst_19308:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5f800001; valaddr_reg:x3; val_offset:57924*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57924*0 + 3*108*FLEN/8, x4, x1, x2)

inst_19309:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5f800003; valaddr_reg:x3; val_offset:57927*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57927*0 + 3*109*FLEN/8, x4, x1, x2)

inst_19310:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5f800007; valaddr_reg:x3; val_offset:57930*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57930*0 + 3*110*FLEN/8, x4, x1, x2)

inst_19311:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5f80000f; valaddr_reg:x3; val_offset:57933*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57933*0 + 3*111*FLEN/8, x4, x1, x2)

inst_19312:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5f80001f; valaddr_reg:x3; val_offset:57936*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57936*0 + 3*112*FLEN/8, x4, x1, x2)

inst_19313:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5f80003f; valaddr_reg:x3; val_offset:57939*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57939*0 + 3*113*FLEN/8, x4, x1, x2)

inst_19314:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5f80007f; valaddr_reg:x3; val_offset:57942*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57942*0 + 3*114*FLEN/8, x4, x1, x2)

inst_19315:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5f8000ff; valaddr_reg:x3; val_offset:57945*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57945*0 + 3*115*FLEN/8, x4, x1, x2)

inst_19316:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5f8001ff; valaddr_reg:x3; val_offset:57948*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57948*0 + 3*116*FLEN/8, x4, x1, x2)

inst_19317:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5f8003ff; valaddr_reg:x3; val_offset:57951*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57951*0 + 3*117*FLEN/8, x4, x1, x2)

inst_19318:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5f8007ff; valaddr_reg:x3; val_offset:57954*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57954*0 + 3*118*FLEN/8, x4, x1, x2)

inst_19319:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5f800fff; valaddr_reg:x3; val_offset:57957*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57957*0 + 3*119*FLEN/8, x4, x1, x2)

inst_19320:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5f801fff; valaddr_reg:x3; val_offset:57960*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57960*0 + 3*120*FLEN/8, x4, x1, x2)

inst_19321:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5f803fff; valaddr_reg:x3; val_offset:57963*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57963*0 + 3*121*FLEN/8, x4, x1, x2)

inst_19322:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5f807fff; valaddr_reg:x3; val_offset:57966*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57966*0 + 3*122*FLEN/8, x4, x1, x2)

inst_19323:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5f80ffff; valaddr_reg:x3; val_offset:57969*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57969*0 + 3*123*FLEN/8, x4, x1, x2)

inst_19324:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5f81ffff; valaddr_reg:x3; val_offset:57972*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57972*0 + 3*124*FLEN/8, x4, x1, x2)

inst_19325:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5f83ffff; valaddr_reg:x3; val_offset:57975*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57975*0 + 3*125*FLEN/8, x4, x1, x2)

inst_19326:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5f87ffff; valaddr_reg:x3; val_offset:57978*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57978*0 + 3*126*FLEN/8, x4, x1, x2)

inst_19327:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5f8fffff; valaddr_reg:x3; val_offset:57981*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57981*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_19328:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5f9fffff; valaddr_reg:x3; val_offset:57984*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57984*0 + 3*128*FLEN/8, x4, x1, x2)

inst_19329:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5fbfffff; valaddr_reg:x3; val_offset:57987*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57987*0 + 3*129*FLEN/8, x4, x1, x2)

inst_19330:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5fc00000; valaddr_reg:x3; val_offset:57990*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57990*0 + 3*130*FLEN/8, x4, x1, x2)

inst_19331:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5fe00000; valaddr_reg:x3; val_offset:57993*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57993*0 + 3*131*FLEN/8, x4, x1, x2)

inst_19332:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5ff00000; valaddr_reg:x3; val_offset:57996*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57996*0 + 3*132*FLEN/8, x4, x1, x2)

inst_19333:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5ff80000; valaddr_reg:x3; val_offset:57999*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57999*0 + 3*133*FLEN/8, x4, x1, x2)

inst_19334:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5ffc0000; valaddr_reg:x3; val_offset:58002*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58002*0 + 3*134*FLEN/8, x4, x1, x2)

inst_19335:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5ffe0000; valaddr_reg:x3; val_offset:58005*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58005*0 + 3*135*FLEN/8, x4, x1, x2)

inst_19336:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5fff0000; valaddr_reg:x3; val_offset:58008*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58008*0 + 3*136*FLEN/8, x4, x1, x2)

inst_19337:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5fff8000; valaddr_reg:x3; val_offset:58011*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58011*0 + 3*137*FLEN/8, x4, x1, x2)

inst_19338:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5fffc000; valaddr_reg:x3; val_offset:58014*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58014*0 + 3*138*FLEN/8, x4, x1, x2)

inst_19339:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5fffe000; valaddr_reg:x3; val_offset:58017*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58017*0 + 3*139*FLEN/8, x4, x1, x2)

inst_19340:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5ffff000; valaddr_reg:x3; val_offset:58020*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58020*0 + 3*140*FLEN/8, x4, x1, x2)

inst_19341:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5ffff800; valaddr_reg:x3; val_offset:58023*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58023*0 + 3*141*FLEN/8, x4, x1, x2)

inst_19342:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5ffffc00; valaddr_reg:x3; val_offset:58026*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58026*0 + 3*142*FLEN/8, x4, x1, x2)

inst_19343:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5ffffe00; valaddr_reg:x3; val_offset:58029*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58029*0 + 3*143*FLEN/8, x4, x1, x2)

inst_19344:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5fffff00; valaddr_reg:x3; val_offset:58032*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58032*0 + 3*144*FLEN/8, x4, x1, x2)

inst_19345:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5fffff80; valaddr_reg:x3; val_offset:58035*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58035*0 + 3*145*FLEN/8, x4, x1, x2)

inst_19346:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5fffffc0; valaddr_reg:x3; val_offset:58038*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58038*0 + 3*146*FLEN/8, x4, x1, x2)

inst_19347:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5fffffe0; valaddr_reg:x3; val_offset:58041*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58041*0 + 3*147*FLEN/8, x4, x1, x2)

inst_19348:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5ffffff0; valaddr_reg:x3; val_offset:58044*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58044*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19349:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5ffffff8; valaddr_reg:x3; val_offset:58047*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58047*0 + 3*149*FLEN/8, x4, x1, x2)

inst_19350:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5ffffffc; valaddr_reg:x3; val_offset:58050*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58050*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19351:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5ffffffe; valaddr_reg:x3; val_offset:58053*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58053*0 + 3*151*FLEN/8, x4, x1, x2)

inst_19352:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xbf and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x5fffffff; valaddr_reg:x3; val_offset:58056*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58056*0 + 3*152*FLEN/8, x4, x1, x2)

inst_19353:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x7f000001; valaddr_reg:x3; val_offset:58059*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58059*0 + 3*153*FLEN/8, x4, x1, x2)

inst_19354:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x7f000003; valaddr_reg:x3; val_offset:58062*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58062*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19355:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x7f000007; valaddr_reg:x3; val_offset:58065*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58065*0 + 3*155*FLEN/8, x4, x1, x2)

inst_19356:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x7f199999; valaddr_reg:x3; val_offset:58068*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58068*0 + 3*156*FLEN/8, x4, x1, x2)

inst_19357:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x7f249249; valaddr_reg:x3; val_offset:58071*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58071*0 + 3*157*FLEN/8, x4, x1, x2)

inst_19358:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x7f333333; valaddr_reg:x3; val_offset:58074*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58074*0 + 3*158*FLEN/8, x4, x1, x2)

inst_19359:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:58077*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58077*0 + 3*159*FLEN/8, x4, x1, x2)

inst_19360:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:58080*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58080*0 + 3*160*FLEN/8, x4, x1, x2)

inst_19361:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x7f444444; valaddr_reg:x3; val_offset:58083*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58083*0 + 3*161*FLEN/8, x4, x1, x2)

inst_19362:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:58086*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58086*0 + 3*162*FLEN/8, x4, x1, x2)

inst_19363:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:58089*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58089*0 + 3*163*FLEN/8, x4, x1, x2)

inst_19364:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x7f666666; valaddr_reg:x3; val_offset:58092*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58092*0 + 3*164*FLEN/8, x4, x1, x2)

inst_19365:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:58095*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58095*0 + 3*165*FLEN/8, x4, x1, x2)

inst_19366:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:58098*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58098*0 + 3*166*FLEN/8, x4, x1, x2)

inst_19367:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:58101*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58101*0 + 3*167*FLEN/8, x4, x1, x2)

inst_19368:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3eb433 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2bd39a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebeb433; op2val:0x402bd39a;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:58104*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58104*0 + 3*168*FLEN/8, x4, x1, x2)

inst_19369:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:58107*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58107*0 + 3*169*FLEN/8, x4, x1, x2)

inst_19370:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:58110*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58110*0 + 3*170*FLEN/8, x4, x1, x2)

inst_19371:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:58113*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58113*0 + 3*171*FLEN/8, x4, x1, x2)

inst_19372:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:58116*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58116*0 + 3*172*FLEN/8, x4, x1, x2)

inst_19373:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:58119*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58119*0 + 3*173*FLEN/8, x4, x1, x2)

inst_19374:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:58122*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58122*0 + 3*174*FLEN/8, x4, x1, x2)

inst_19375:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:58125*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58125*0 + 3*175*FLEN/8, x4, x1, x2)

inst_19376:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:58128*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58128*0 + 3*176*FLEN/8, x4, x1, x2)

inst_19377:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:58131*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58131*0 + 3*177*FLEN/8, x4, x1, x2)

inst_19378:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:58134*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58134*0 + 3*178*FLEN/8, x4, x1, x2)

inst_19379:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:58137*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58137*0 + 3*179*FLEN/8, x4, x1, x2)

inst_19380:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:58140*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58140*0 + 3*180*FLEN/8, x4, x1, x2)

inst_19381:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:58143*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58143*0 + 3*181*FLEN/8, x4, x1, x2)

inst_19382:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:58146*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58146*0 + 3*182*FLEN/8, x4, x1, x2)

inst_19383:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:58149*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58149*0 + 3*183*FLEN/8, x4, x1, x2)

inst_19384:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:58152*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58152*0 + 3*184*FLEN/8, x4, x1, x2)

inst_19385:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x89800000; valaddr_reg:x3; val_offset:58155*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58155*0 + 3*185*FLEN/8, x4, x1, x2)

inst_19386:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x89800001; valaddr_reg:x3; val_offset:58158*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58158*0 + 3*186*FLEN/8, x4, x1, x2)

inst_19387:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x89800003; valaddr_reg:x3; val_offset:58161*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58161*0 + 3*187*FLEN/8, x4, x1, x2)

inst_19388:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x89800007; valaddr_reg:x3; val_offset:58164*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58164*0 + 3*188*FLEN/8, x4, x1, x2)

inst_19389:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x8980000f; valaddr_reg:x3; val_offset:58167*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58167*0 + 3*189*FLEN/8, x4, x1, x2)

inst_19390:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x8980001f; valaddr_reg:x3; val_offset:58170*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58170*0 + 3*190*FLEN/8, x4, x1, x2)

inst_19391:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x8980003f; valaddr_reg:x3; val_offset:58173*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58173*0 + 3*191*FLEN/8, x4, x1, x2)

inst_19392:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x8980007f; valaddr_reg:x3; val_offset:58176*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58176*0 + 3*192*FLEN/8, x4, x1, x2)

inst_19393:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x898000ff; valaddr_reg:x3; val_offset:58179*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58179*0 + 3*193*FLEN/8, x4, x1, x2)

inst_19394:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x898001ff; valaddr_reg:x3; val_offset:58182*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58182*0 + 3*194*FLEN/8, x4, x1, x2)

inst_19395:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x898003ff; valaddr_reg:x3; val_offset:58185*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58185*0 + 3*195*FLEN/8, x4, x1, x2)

inst_19396:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x898007ff; valaddr_reg:x3; val_offset:58188*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58188*0 + 3*196*FLEN/8, x4, x1, x2)

inst_19397:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x89800fff; valaddr_reg:x3; val_offset:58191*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58191*0 + 3*197*FLEN/8, x4, x1, x2)

inst_19398:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x89801fff; valaddr_reg:x3; val_offset:58194*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58194*0 + 3*198*FLEN/8, x4, x1, x2)

inst_19399:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x89803fff; valaddr_reg:x3; val_offset:58197*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58197*0 + 3*199*FLEN/8, x4, x1, x2)

inst_19400:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x89807fff; valaddr_reg:x3; val_offset:58200*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58200*0 + 3*200*FLEN/8, x4, x1, x2)

inst_19401:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x8980ffff; valaddr_reg:x3; val_offset:58203*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58203*0 + 3*201*FLEN/8, x4, x1, x2)

inst_19402:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x8981ffff; valaddr_reg:x3; val_offset:58206*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58206*0 + 3*202*FLEN/8, x4, x1, x2)

inst_19403:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x8983ffff; valaddr_reg:x3; val_offset:58209*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58209*0 + 3*203*FLEN/8, x4, x1, x2)

inst_19404:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x8987ffff; valaddr_reg:x3; val_offset:58212*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58212*0 + 3*204*FLEN/8, x4, x1, x2)

inst_19405:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x898fffff; valaddr_reg:x3; val_offset:58215*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58215*0 + 3*205*FLEN/8, x4, x1, x2)

inst_19406:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x899fffff; valaddr_reg:x3; val_offset:58218*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58218*0 + 3*206*FLEN/8, x4, x1, x2)

inst_19407:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x89bfffff; valaddr_reg:x3; val_offset:58221*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58221*0 + 3*207*FLEN/8, x4, x1, x2)

inst_19408:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x89c00000; valaddr_reg:x3; val_offset:58224*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58224*0 + 3*208*FLEN/8, x4, x1, x2)

inst_19409:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x89e00000; valaddr_reg:x3; val_offset:58227*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58227*0 + 3*209*FLEN/8, x4, x1, x2)

inst_19410:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x89f00000; valaddr_reg:x3; val_offset:58230*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58230*0 + 3*210*FLEN/8, x4, x1, x2)

inst_19411:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x89f80000; valaddr_reg:x3; val_offset:58233*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58233*0 + 3*211*FLEN/8, x4, x1, x2)

inst_19412:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x89fc0000; valaddr_reg:x3; val_offset:58236*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58236*0 + 3*212*FLEN/8, x4, x1, x2)

inst_19413:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x89fe0000; valaddr_reg:x3; val_offset:58239*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58239*0 + 3*213*FLEN/8, x4, x1, x2)

inst_19414:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x89ff0000; valaddr_reg:x3; val_offset:58242*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58242*0 + 3*214*FLEN/8, x4, x1, x2)

inst_19415:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x89ff8000; valaddr_reg:x3; val_offset:58245*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58245*0 + 3*215*FLEN/8, x4, x1, x2)

inst_19416:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x89ffc000; valaddr_reg:x3; val_offset:58248*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58248*0 + 3*216*FLEN/8, x4, x1, x2)

inst_19417:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x89ffe000; valaddr_reg:x3; val_offset:58251*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58251*0 + 3*217*FLEN/8, x4, x1, x2)

inst_19418:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x89fff000; valaddr_reg:x3; val_offset:58254*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58254*0 + 3*218*FLEN/8, x4, x1, x2)

inst_19419:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x89fff800; valaddr_reg:x3; val_offset:58257*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58257*0 + 3*219*FLEN/8, x4, x1, x2)

inst_19420:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x89fffc00; valaddr_reg:x3; val_offset:58260*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58260*0 + 3*220*FLEN/8, x4, x1, x2)

inst_19421:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x89fffe00; valaddr_reg:x3; val_offset:58263*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58263*0 + 3*221*FLEN/8, x4, x1, x2)

inst_19422:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x89ffff00; valaddr_reg:x3; val_offset:58266*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58266*0 + 3*222*FLEN/8, x4, x1, x2)

inst_19423:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x89ffff80; valaddr_reg:x3; val_offset:58269*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58269*0 + 3*223*FLEN/8, x4, x1, x2)

inst_19424:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x89ffffc0; valaddr_reg:x3; val_offset:58272*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58272*0 + 3*224*FLEN/8, x4, x1, x2)

inst_19425:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x89ffffe0; valaddr_reg:x3; val_offset:58275*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58275*0 + 3*225*FLEN/8, x4, x1, x2)

inst_19426:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x89fffff0; valaddr_reg:x3; val_offset:58278*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58278*0 + 3*226*FLEN/8, x4, x1, x2)

inst_19427:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x89fffff8; valaddr_reg:x3; val_offset:58281*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58281*0 + 3*227*FLEN/8, x4, x1, x2)

inst_19428:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x89fffffc; valaddr_reg:x3; val_offset:58284*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58284*0 + 3*228*FLEN/8, x4, x1, x2)

inst_19429:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x89fffffe; valaddr_reg:x3; val_offset:58287*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58287*0 + 3*229*FLEN/8, x4, x1, x2)

inst_19430:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ee1af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebee1af; op2val:0x80000000;
op3val:0x89ffffff; valaddr_reg:x3; val_offset:58290*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58290*0 + 3*230*FLEN/8, x4, x1, x2)

inst_19431:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:58293*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58293*0 + 3*231*FLEN/8, x4, x1, x2)

inst_19432:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:58296*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58296*0 + 3*232*FLEN/8, x4, x1, x2)

inst_19433:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:58299*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58299*0 + 3*233*FLEN/8, x4, x1, x2)

inst_19434:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:58302*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58302*0 + 3*234*FLEN/8, x4, x1, x2)

inst_19435:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:58305*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58305*0 + 3*235*FLEN/8, x4, x1, x2)

inst_19436:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:58308*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58308*0 + 3*236*FLEN/8, x4, x1, x2)

inst_19437:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:58311*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58311*0 + 3*237*FLEN/8, x4, x1, x2)

inst_19438:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:58314*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58314*0 + 3*238*FLEN/8, x4, x1, x2)

inst_19439:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:58317*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58317*0 + 3*239*FLEN/8, x4, x1, x2)

inst_19440:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:58320*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58320*0 + 3*240*FLEN/8, x4, x1, x2)

inst_19441:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:58323*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58323*0 + 3*241*FLEN/8, x4, x1, x2)

inst_19442:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:58326*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58326*0 + 3*242*FLEN/8, x4, x1, x2)

inst_19443:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:58329*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58329*0 + 3*243*FLEN/8, x4, x1, x2)

inst_19444:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:58332*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58332*0 + 3*244*FLEN/8, x4, x1, x2)

inst_19445:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:58335*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58335*0 + 3*245*FLEN/8, x4, x1, x2)

inst_19446:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:58338*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58338*0 + 3*246*FLEN/8, x4, x1, x2)

inst_19447:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x1800000; valaddr_reg:x3; val_offset:58341*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58341*0 + 3*247*FLEN/8, x4, x1, x2)

inst_19448:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x1800001; valaddr_reg:x3; val_offset:58344*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58344*0 + 3*248*FLEN/8, x4, x1, x2)

inst_19449:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x1800003; valaddr_reg:x3; val_offset:58347*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58347*0 + 3*249*FLEN/8, x4, x1, x2)

inst_19450:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x1800007; valaddr_reg:x3; val_offset:58350*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58350*0 + 3*250*FLEN/8, x4, x1, x2)

inst_19451:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x180000f; valaddr_reg:x3; val_offset:58353*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58353*0 + 3*251*FLEN/8, x4, x1, x2)

inst_19452:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x180001f; valaddr_reg:x3; val_offset:58356*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58356*0 + 3*252*FLEN/8, x4, x1, x2)

inst_19453:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x180003f; valaddr_reg:x3; val_offset:58359*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58359*0 + 3*253*FLEN/8, x4, x1, x2)

inst_19454:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x180007f; valaddr_reg:x3; val_offset:58362*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58362*0 + 3*254*FLEN/8, x4, x1, x2)

inst_19455:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x18000ff; valaddr_reg:x3; val_offset:58365*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58365*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_19456:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x18001ff; valaddr_reg:x3; val_offset:58368*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58368*0 + 3*256*FLEN/8, x4, x1, x2)

inst_19457:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x18003ff; valaddr_reg:x3; val_offset:58371*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58371*0 + 3*257*FLEN/8, x4, x1, x2)

inst_19458:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x18007ff; valaddr_reg:x3; val_offset:58374*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58374*0 + 3*258*FLEN/8, x4, x1, x2)

inst_19459:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x1800fff; valaddr_reg:x3; val_offset:58377*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58377*0 + 3*259*FLEN/8, x4, x1, x2)

inst_19460:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x1801fff; valaddr_reg:x3; val_offset:58380*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58380*0 + 3*260*FLEN/8, x4, x1, x2)

inst_19461:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x1803fff; valaddr_reg:x3; val_offset:58383*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58383*0 + 3*261*FLEN/8, x4, x1, x2)

inst_19462:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x1807fff; valaddr_reg:x3; val_offset:58386*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58386*0 + 3*262*FLEN/8, x4, x1, x2)

inst_19463:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x180ffff; valaddr_reg:x3; val_offset:58389*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58389*0 + 3*263*FLEN/8, x4, x1, x2)

inst_19464:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x181ffff; valaddr_reg:x3; val_offset:58392*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58392*0 + 3*264*FLEN/8, x4, x1, x2)

inst_19465:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x183ffff; valaddr_reg:x3; val_offset:58395*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58395*0 + 3*265*FLEN/8, x4, x1, x2)

inst_19466:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x187ffff; valaddr_reg:x3; val_offset:58398*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58398*0 + 3*266*FLEN/8, x4, x1, x2)

inst_19467:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x18fffff; valaddr_reg:x3; val_offset:58401*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58401*0 + 3*267*FLEN/8, x4, x1, x2)

inst_19468:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x19fffff; valaddr_reg:x3; val_offset:58404*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58404*0 + 3*268*FLEN/8, x4, x1, x2)

inst_19469:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x1bfffff; valaddr_reg:x3; val_offset:58407*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58407*0 + 3*269*FLEN/8, x4, x1, x2)

inst_19470:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x1c00000; valaddr_reg:x3; val_offset:58410*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58410*0 + 3*270*FLEN/8, x4, x1, x2)

inst_19471:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x1e00000; valaddr_reg:x3; val_offset:58413*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58413*0 + 3*271*FLEN/8, x4, x1, x2)

inst_19472:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x1f00000; valaddr_reg:x3; val_offset:58416*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58416*0 + 3*272*FLEN/8, x4, x1, x2)

inst_19473:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x1f80000; valaddr_reg:x3; val_offset:58419*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58419*0 + 3*273*FLEN/8, x4, x1, x2)

inst_19474:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x1fc0000; valaddr_reg:x3; val_offset:58422*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58422*0 + 3*274*FLEN/8, x4, x1, x2)

inst_19475:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x1fe0000; valaddr_reg:x3; val_offset:58425*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58425*0 + 3*275*FLEN/8, x4, x1, x2)

inst_19476:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x1ff0000; valaddr_reg:x3; val_offset:58428*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58428*0 + 3*276*FLEN/8, x4, x1, x2)

inst_19477:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x1ff8000; valaddr_reg:x3; val_offset:58431*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58431*0 + 3*277*FLEN/8, x4, x1, x2)

inst_19478:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x1ffc000; valaddr_reg:x3; val_offset:58434*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58434*0 + 3*278*FLEN/8, x4, x1, x2)

inst_19479:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x1ffe000; valaddr_reg:x3; val_offset:58437*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58437*0 + 3*279*FLEN/8, x4, x1, x2)

inst_19480:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x1fff000; valaddr_reg:x3; val_offset:58440*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58440*0 + 3*280*FLEN/8, x4, x1, x2)

inst_19481:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x1fff800; valaddr_reg:x3; val_offset:58443*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58443*0 + 3*281*FLEN/8, x4, x1, x2)

inst_19482:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x1fffc00; valaddr_reg:x3; val_offset:58446*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58446*0 + 3*282*FLEN/8, x4, x1, x2)

inst_19483:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x1fffe00; valaddr_reg:x3; val_offset:58449*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58449*0 + 3*283*FLEN/8, x4, x1, x2)

inst_19484:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x1ffff00; valaddr_reg:x3; val_offset:58452*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58452*0 + 3*284*FLEN/8, x4, x1, x2)

inst_19485:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x1ffff80; valaddr_reg:x3; val_offset:58455*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58455*0 + 3*285*FLEN/8, x4, x1, x2)

inst_19486:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x1ffffc0; valaddr_reg:x3; val_offset:58458*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58458*0 + 3*286*FLEN/8, x4, x1, x2)

inst_19487:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x1ffffe0; valaddr_reg:x3; val_offset:58461*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58461*0 + 3*287*FLEN/8, x4, x1, x2)

inst_19488:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x1fffff0; valaddr_reg:x3; val_offset:58464*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58464*0 + 3*288*FLEN/8, x4, x1, x2)

inst_19489:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x1fffff8; valaddr_reg:x3; val_offset:58467*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58467*0 + 3*289*FLEN/8, x4, x1, x2)

inst_19490:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x1fffffc; valaddr_reg:x3; val_offset:58470*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58470*0 + 3*290*FLEN/8, x4, x1, x2)

inst_19491:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x1fffffe; valaddr_reg:x3; val_offset:58473*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58473*0 + 3*291*FLEN/8, x4, x1, x2)

inst_19492:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f66bb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x03 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf66bb; op2val:0x0;
op3val:0x1ffffff; valaddr_reg:x3; val_offset:58476*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58476*0 + 3*292*FLEN/8, x4, x1, x2)

inst_19493:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:58479*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58479*0 + 3*293*FLEN/8, x4, x1, x2)

inst_19494:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:58482*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58482*0 + 3*294*FLEN/8, x4, x1, x2)

inst_19495:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:58485*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58485*0 + 3*295*FLEN/8, x4, x1, x2)

inst_19496:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:58488*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58488*0 + 3*296*FLEN/8, x4, x1, x2)

inst_19497:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:58491*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58491*0 + 3*297*FLEN/8, x4, x1, x2)

inst_19498:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:58494*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58494*0 + 3*298*FLEN/8, x4, x1, x2)

inst_19499:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:58497*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58497*0 + 3*299*FLEN/8, x4, x1, x2)

inst_19500:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:58500*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58500*0 + 3*300*FLEN/8, x4, x1, x2)

inst_19501:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:58503*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58503*0 + 3*301*FLEN/8, x4, x1, x2)

inst_19502:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:58506*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58506*0 + 3*302*FLEN/8, x4, x1, x2)

inst_19503:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:58509*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58509*0 + 3*303*FLEN/8, x4, x1, x2)

inst_19504:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:58512*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58512*0 + 3*304*FLEN/8, x4, x1, x2)

inst_19505:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:58515*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58515*0 + 3*305*FLEN/8, x4, x1, x2)

inst_19506:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:58518*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58518*0 + 3*306*FLEN/8, x4, x1, x2)

inst_19507:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:58521*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58521*0 + 3*307*FLEN/8, x4, x1, x2)

inst_19508:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:58524*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58524*0 + 3*308*FLEN/8, x4, x1, x2)

inst_19509:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x2000000; valaddr_reg:x3; val_offset:58527*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58527*0 + 3*309*FLEN/8, x4, x1, x2)

inst_19510:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x2000001; valaddr_reg:x3; val_offset:58530*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58530*0 + 3*310*FLEN/8, x4, x1, x2)

inst_19511:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x2000003; valaddr_reg:x3; val_offset:58533*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58533*0 + 3*311*FLEN/8, x4, x1, x2)

inst_19512:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x2000007; valaddr_reg:x3; val_offset:58536*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58536*0 + 3*312*FLEN/8, x4, x1, x2)

inst_19513:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x200000f; valaddr_reg:x3; val_offset:58539*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58539*0 + 3*313*FLEN/8, x4, x1, x2)

inst_19514:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x200001f; valaddr_reg:x3; val_offset:58542*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58542*0 + 3*314*FLEN/8, x4, x1, x2)

inst_19515:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x200003f; valaddr_reg:x3; val_offset:58545*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58545*0 + 3*315*FLEN/8, x4, x1, x2)

inst_19516:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x200007f; valaddr_reg:x3; val_offset:58548*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58548*0 + 3*316*FLEN/8, x4, x1, x2)

inst_19517:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x20000ff; valaddr_reg:x3; val_offset:58551*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58551*0 + 3*317*FLEN/8, x4, x1, x2)

inst_19518:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x20001ff; valaddr_reg:x3; val_offset:58554*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58554*0 + 3*318*FLEN/8, x4, x1, x2)

inst_19519:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x20003ff; valaddr_reg:x3; val_offset:58557*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58557*0 + 3*319*FLEN/8, x4, x1, x2)

inst_19520:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x20007ff; valaddr_reg:x3; val_offset:58560*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58560*0 + 3*320*FLEN/8, x4, x1, x2)

inst_19521:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x2000fff; valaddr_reg:x3; val_offset:58563*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58563*0 + 3*321*FLEN/8, x4, x1, x2)

inst_19522:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x2001fff; valaddr_reg:x3; val_offset:58566*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58566*0 + 3*322*FLEN/8, x4, x1, x2)

inst_19523:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x2003fff; valaddr_reg:x3; val_offset:58569*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58569*0 + 3*323*FLEN/8, x4, x1, x2)

inst_19524:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x2007fff; valaddr_reg:x3; val_offset:58572*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58572*0 + 3*324*FLEN/8, x4, x1, x2)

inst_19525:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x200ffff; valaddr_reg:x3; val_offset:58575*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58575*0 + 3*325*FLEN/8, x4, x1, x2)

inst_19526:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x201ffff; valaddr_reg:x3; val_offset:58578*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58578*0 + 3*326*FLEN/8, x4, x1, x2)

inst_19527:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x203ffff; valaddr_reg:x3; val_offset:58581*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58581*0 + 3*327*FLEN/8, x4, x1, x2)

inst_19528:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x207ffff; valaddr_reg:x3; val_offset:58584*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58584*0 + 3*328*FLEN/8, x4, x1, x2)

inst_19529:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x20fffff; valaddr_reg:x3; val_offset:58587*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58587*0 + 3*329*FLEN/8, x4, x1, x2)

inst_19530:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x21fffff; valaddr_reg:x3; val_offset:58590*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58590*0 + 3*330*FLEN/8, x4, x1, x2)

inst_19531:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x23fffff; valaddr_reg:x3; val_offset:58593*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58593*0 + 3*331*FLEN/8, x4, x1, x2)

inst_19532:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x2400000; valaddr_reg:x3; val_offset:58596*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58596*0 + 3*332*FLEN/8, x4, x1, x2)

inst_19533:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x2600000; valaddr_reg:x3; val_offset:58599*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58599*0 + 3*333*FLEN/8, x4, x1, x2)

inst_19534:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x2700000; valaddr_reg:x3; val_offset:58602*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58602*0 + 3*334*FLEN/8, x4, x1, x2)

inst_19535:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x2780000; valaddr_reg:x3; val_offset:58605*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58605*0 + 3*335*FLEN/8, x4, x1, x2)

inst_19536:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x27c0000; valaddr_reg:x3; val_offset:58608*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58608*0 + 3*336*FLEN/8, x4, x1, x2)

inst_19537:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x27e0000; valaddr_reg:x3; val_offset:58611*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58611*0 + 3*337*FLEN/8, x4, x1, x2)

inst_19538:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x27f0000; valaddr_reg:x3; val_offset:58614*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58614*0 + 3*338*FLEN/8, x4, x1, x2)

inst_19539:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x27f8000; valaddr_reg:x3; val_offset:58617*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58617*0 + 3*339*FLEN/8, x4, x1, x2)

inst_19540:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x27fc000; valaddr_reg:x3; val_offset:58620*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58620*0 + 3*340*FLEN/8, x4, x1, x2)

inst_19541:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x27fe000; valaddr_reg:x3; val_offset:58623*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58623*0 + 3*341*FLEN/8, x4, x1, x2)

inst_19542:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x27ff000; valaddr_reg:x3; val_offset:58626*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58626*0 + 3*342*FLEN/8, x4, x1, x2)

inst_19543:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x27ff800; valaddr_reg:x3; val_offset:58629*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58629*0 + 3*343*FLEN/8, x4, x1, x2)

inst_19544:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x27ffc00; valaddr_reg:x3; val_offset:58632*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58632*0 + 3*344*FLEN/8, x4, x1, x2)

inst_19545:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x27ffe00; valaddr_reg:x3; val_offset:58635*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58635*0 + 3*345*FLEN/8, x4, x1, x2)

inst_19546:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x27fff00; valaddr_reg:x3; val_offset:58638*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58638*0 + 3*346*FLEN/8, x4, x1, x2)

inst_19547:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x27fff80; valaddr_reg:x3; val_offset:58641*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58641*0 + 3*347*FLEN/8, x4, x1, x2)

inst_19548:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x27fffc0; valaddr_reg:x3; val_offset:58644*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58644*0 + 3*348*FLEN/8, x4, x1, x2)

inst_19549:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x27fffe0; valaddr_reg:x3; val_offset:58647*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58647*0 + 3*349*FLEN/8, x4, x1, x2)

inst_19550:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x27ffff0; valaddr_reg:x3; val_offset:58650*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58650*0 + 3*350*FLEN/8, x4, x1, x2)

inst_19551:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x27ffff8; valaddr_reg:x3; val_offset:58653*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58653*0 + 3*351*FLEN/8, x4, x1, x2)

inst_19552:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x27ffffc; valaddr_reg:x3; val_offset:58656*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58656*0 + 3*352*FLEN/8, x4, x1, x2)

inst_19553:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x27ffffe; valaddr_reg:x3; val_offset:58659*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58659*0 + 3*353*FLEN/8, x4, x1, x2)

inst_19554:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f7af3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebf7af3; op2val:0x0;
op3val:0x27fffff; valaddr_reg:x3; val_offset:58662*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58662*0 + 3*354*FLEN/8, x4, x1, x2)

inst_19555:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:58665*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58665*0 + 3*355*FLEN/8, x4, x1, x2)

inst_19556:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:58668*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58668*0 + 3*356*FLEN/8, x4, x1, x2)

inst_19557:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:58671*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58671*0 + 3*357*FLEN/8, x4, x1, x2)

inst_19558:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:58674*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58674*0 + 3*358*FLEN/8, x4, x1, x2)

inst_19559:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:58677*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58677*0 + 3*359*FLEN/8, x4, x1, x2)

inst_19560:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:58680*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58680*0 + 3*360*FLEN/8, x4, x1, x2)

inst_19561:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:58683*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58683*0 + 3*361*FLEN/8, x4, x1, x2)

inst_19562:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:58686*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58686*0 + 3*362*FLEN/8, x4, x1, x2)

inst_19563:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:58689*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58689*0 + 3*363*FLEN/8, x4, x1, x2)

inst_19564:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:58692*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58692*0 + 3*364*FLEN/8, x4, x1, x2)

inst_19565:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:58695*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58695*0 + 3*365*FLEN/8, x4, x1, x2)

inst_19566:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:58698*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58698*0 + 3*366*FLEN/8, x4, x1, x2)

inst_19567:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:58701*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58701*0 + 3*367*FLEN/8, x4, x1, x2)

inst_19568:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:58704*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58704*0 + 3*368*FLEN/8, x4, x1, x2)

inst_19569:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:58707*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58707*0 + 3*369*FLEN/8, x4, x1, x2)

inst_19570:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:58710*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58710*0 + 3*370*FLEN/8, x4, x1, x2)

inst_19571:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x88000000; valaddr_reg:x3; val_offset:58713*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58713*0 + 3*371*FLEN/8, x4, x1, x2)

inst_19572:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x88000001; valaddr_reg:x3; val_offset:58716*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58716*0 + 3*372*FLEN/8, x4, x1, x2)

inst_19573:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x88000003; valaddr_reg:x3; val_offset:58719*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58719*0 + 3*373*FLEN/8, x4, x1, x2)

inst_19574:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x88000007; valaddr_reg:x3; val_offset:58722*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58722*0 + 3*374*FLEN/8, x4, x1, x2)

inst_19575:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x8800000f; valaddr_reg:x3; val_offset:58725*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58725*0 + 3*375*FLEN/8, x4, x1, x2)

inst_19576:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x8800001f; valaddr_reg:x3; val_offset:58728*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58728*0 + 3*376*FLEN/8, x4, x1, x2)

inst_19577:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x8800003f; valaddr_reg:x3; val_offset:58731*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58731*0 + 3*377*FLEN/8, x4, x1, x2)

inst_19578:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x8800007f; valaddr_reg:x3; val_offset:58734*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58734*0 + 3*378*FLEN/8, x4, x1, x2)

inst_19579:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x880000ff; valaddr_reg:x3; val_offset:58737*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58737*0 + 3*379*FLEN/8, x4, x1, x2)

inst_19580:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x880001ff; valaddr_reg:x3; val_offset:58740*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58740*0 + 3*380*FLEN/8, x4, x1, x2)

inst_19581:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x880003ff; valaddr_reg:x3; val_offset:58743*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58743*0 + 3*381*FLEN/8, x4, x1, x2)

inst_19582:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x880007ff; valaddr_reg:x3; val_offset:58746*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58746*0 + 3*382*FLEN/8, x4, x1, x2)

inst_19583:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x88000fff; valaddr_reg:x3; val_offset:58749*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58749*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_19584:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x88001fff; valaddr_reg:x3; val_offset:58752*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58752*0 + 3*384*FLEN/8, x4, x1, x2)

inst_19585:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x88003fff; valaddr_reg:x3; val_offset:58755*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58755*0 + 3*385*FLEN/8, x4, x1, x2)

inst_19586:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x88007fff; valaddr_reg:x3; val_offset:58758*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58758*0 + 3*386*FLEN/8, x4, x1, x2)

inst_19587:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x8800ffff; valaddr_reg:x3; val_offset:58761*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58761*0 + 3*387*FLEN/8, x4, x1, x2)

inst_19588:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x8801ffff; valaddr_reg:x3; val_offset:58764*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58764*0 + 3*388*FLEN/8, x4, x1, x2)

inst_19589:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x8803ffff; valaddr_reg:x3; val_offset:58767*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58767*0 + 3*389*FLEN/8, x4, x1, x2)

inst_19590:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x8807ffff; valaddr_reg:x3; val_offset:58770*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58770*0 + 3*390*FLEN/8, x4, x1, x2)

inst_19591:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x880fffff; valaddr_reg:x3; val_offset:58773*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58773*0 + 3*391*FLEN/8, x4, x1, x2)

inst_19592:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x881fffff; valaddr_reg:x3; val_offset:58776*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58776*0 + 3*392*FLEN/8, x4, x1, x2)

inst_19593:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x883fffff; valaddr_reg:x3; val_offset:58779*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58779*0 + 3*393*FLEN/8, x4, x1, x2)

inst_19594:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x88400000; valaddr_reg:x3; val_offset:58782*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58782*0 + 3*394*FLEN/8, x4, x1, x2)

inst_19595:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x88600000; valaddr_reg:x3; val_offset:58785*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58785*0 + 3*395*FLEN/8, x4, x1, x2)

inst_19596:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x88700000; valaddr_reg:x3; val_offset:58788*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58788*0 + 3*396*FLEN/8, x4, x1, x2)

inst_19597:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x88780000; valaddr_reg:x3; val_offset:58791*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58791*0 + 3*397*FLEN/8, x4, x1, x2)

inst_19598:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x887c0000; valaddr_reg:x3; val_offset:58794*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58794*0 + 3*398*FLEN/8, x4, x1, x2)

inst_19599:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x887e0000; valaddr_reg:x3; val_offset:58797*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58797*0 + 3*399*FLEN/8, x4, x1, x2)

inst_19600:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x887f0000; valaddr_reg:x3; val_offset:58800*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58800*0 + 3*400*FLEN/8, x4, x1, x2)

inst_19601:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x887f8000; valaddr_reg:x3; val_offset:58803*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58803*0 + 3*401*FLEN/8, x4, x1, x2)

inst_19602:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x887fc000; valaddr_reg:x3; val_offset:58806*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58806*0 + 3*402*FLEN/8, x4, x1, x2)

inst_19603:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x887fe000; valaddr_reg:x3; val_offset:58809*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58809*0 + 3*403*FLEN/8, x4, x1, x2)

inst_19604:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x887ff000; valaddr_reg:x3; val_offset:58812*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58812*0 + 3*404*FLEN/8, x4, x1, x2)

inst_19605:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x887ff800; valaddr_reg:x3; val_offset:58815*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58815*0 + 3*405*FLEN/8, x4, x1, x2)

inst_19606:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x887ffc00; valaddr_reg:x3; val_offset:58818*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58818*0 + 3*406*FLEN/8, x4, x1, x2)

inst_19607:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x887ffe00; valaddr_reg:x3; val_offset:58821*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58821*0 + 3*407*FLEN/8, x4, x1, x2)

inst_19608:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x887fff00; valaddr_reg:x3; val_offset:58824*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58824*0 + 3*408*FLEN/8, x4, x1, x2)

inst_19609:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x887fff80; valaddr_reg:x3; val_offset:58827*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58827*0 + 3*409*FLEN/8, x4, x1, x2)

inst_19610:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x887fffc0; valaddr_reg:x3; val_offset:58830*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58830*0 + 3*410*FLEN/8, x4, x1, x2)

inst_19611:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x887fffe0; valaddr_reg:x3; val_offset:58833*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58833*0 + 3*411*FLEN/8, x4, x1, x2)

inst_19612:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x887ffff0; valaddr_reg:x3; val_offset:58836*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58836*0 + 3*412*FLEN/8, x4, x1, x2)

inst_19613:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x887ffff8; valaddr_reg:x3; val_offset:58839*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58839*0 + 3*413*FLEN/8, x4, x1, x2)

inst_19614:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x887ffffc; valaddr_reg:x3; val_offset:58842*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58842*0 + 3*414*FLEN/8, x4, x1, x2)

inst_19615:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x887ffffe; valaddr_reg:x3; val_offset:58845*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58845*0 + 3*415*FLEN/8, x4, x1, x2)

inst_19616:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec30c98; op2val:0x80000000;
op3val:0x887fffff; valaddr_reg:x3; val_offset:58848*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58848*0 + 3*416*FLEN/8, x4, x1, x2)

inst_19617:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x75800000; valaddr_reg:x3; val_offset:58851*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58851*0 + 3*417*FLEN/8, x4, x1, x2)

inst_19618:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x75800001; valaddr_reg:x3; val_offset:58854*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58854*0 + 3*418*FLEN/8, x4, x1, x2)

inst_19619:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x75800003; valaddr_reg:x3; val_offset:58857*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58857*0 + 3*419*FLEN/8, x4, x1, x2)

inst_19620:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x75800007; valaddr_reg:x3; val_offset:58860*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58860*0 + 3*420*FLEN/8, x4, x1, x2)

inst_19621:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x7580000f; valaddr_reg:x3; val_offset:58863*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58863*0 + 3*421*FLEN/8, x4, x1, x2)

inst_19622:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x7580001f; valaddr_reg:x3; val_offset:58866*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58866*0 + 3*422*FLEN/8, x4, x1, x2)

inst_19623:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x7580003f; valaddr_reg:x3; val_offset:58869*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58869*0 + 3*423*FLEN/8, x4, x1, x2)

inst_19624:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x7580007f; valaddr_reg:x3; val_offset:58872*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58872*0 + 3*424*FLEN/8, x4, x1, x2)

inst_19625:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x758000ff; valaddr_reg:x3; val_offset:58875*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58875*0 + 3*425*FLEN/8, x4, x1, x2)

inst_19626:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x758001ff; valaddr_reg:x3; val_offset:58878*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58878*0 + 3*426*FLEN/8, x4, x1, x2)

inst_19627:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x758003ff; valaddr_reg:x3; val_offset:58881*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58881*0 + 3*427*FLEN/8, x4, x1, x2)

inst_19628:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x758007ff; valaddr_reg:x3; val_offset:58884*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58884*0 + 3*428*FLEN/8, x4, x1, x2)

inst_19629:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x75800fff; valaddr_reg:x3; val_offset:58887*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58887*0 + 3*429*FLEN/8, x4, x1, x2)

inst_19630:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x75801fff; valaddr_reg:x3; val_offset:58890*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58890*0 + 3*430*FLEN/8, x4, x1, x2)

inst_19631:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x75803fff; valaddr_reg:x3; val_offset:58893*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58893*0 + 3*431*FLEN/8, x4, x1, x2)

inst_19632:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x75807fff; valaddr_reg:x3; val_offset:58896*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58896*0 + 3*432*FLEN/8, x4, x1, x2)

inst_19633:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x7580ffff; valaddr_reg:x3; val_offset:58899*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58899*0 + 3*433*FLEN/8, x4, x1, x2)

inst_19634:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x7581ffff; valaddr_reg:x3; val_offset:58902*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58902*0 + 3*434*FLEN/8, x4, x1, x2)

inst_19635:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x7583ffff; valaddr_reg:x3; val_offset:58905*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58905*0 + 3*435*FLEN/8, x4, x1, x2)

inst_19636:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x7587ffff; valaddr_reg:x3; val_offset:58908*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58908*0 + 3*436*FLEN/8, x4, x1, x2)

inst_19637:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x758fffff; valaddr_reg:x3; val_offset:58911*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58911*0 + 3*437*FLEN/8, x4, x1, x2)

inst_19638:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x759fffff; valaddr_reg:x3; val_offset:58914*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58914*0 + 3*438*FLEN/8, x4, x1, x2)

inst_19639:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x75bfffff; valaddr_reg:x3; val_offset:58917*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58917*0 + 3*439*FLEN/8, x4, x1, x2)

inst_19640:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x75c00000; valaddr_reg:x3; val_offset:58920*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58920*0 + 3*440*FLEN/8, x4, x1, x2)

inst_19641:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x75e00000; valaddr_reg:x3; val_offset:58923*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58923*0 + 3*441*FLEN/8, x4, x1, x2)

inst_19642:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x75f00000; valaddr_reg:x3; val_offset:58926*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58926*0 + 3*442*FLEN/8, x4, x1, x2)

inst_19643:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x75f80000; valaddr_reg:x3; val_offset:58929*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58929*0 + 3*443*FLEN/8, x4, x1, x2)

inst_19644:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x75fc0000; valaddr_reg:x3; val_offset:58932*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58932*0 + 3*444*FLEN/8, x4, x1, x2)

inst_19645:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x75fe0000; valaddr_reg:x3; val_offset:58935*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58935*0 + 3*445*FLEN/8, x4, x1, x2)

inst_19646:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x75ff0000; valaddr_reg:x3; val_offset:58938*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58938*0 + 3*446*FLEN/8, x4, x1, x2)

inst_19647:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x75ff8000; valaddr_reg:x3; val_offset:58941*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58941*0 + 3*447*FLEN/8, x4, x1, x2)

inst_19648:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x75ffc000; valaddr_reg:x3; val_offset:58944*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58944*0 + 3*448*FLEN/8, x4, x1, x2)

inst_19649:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x75ffe000; valaddr_reg:x3; val_offset:58947*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58947*0 + 3*449*FLEN/8, x4, x1, x2)

inst_19650:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x75fff000; valaddr_reg:x3; val_offset:58950*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58950*0 + 3*450*FLEN/8, x4, x1, x2)

inst_19651:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x75fff800; valaddr_reg:x3; val_offset:58953*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58953*0 + 3*451*FLEN/8, x4, x1, x2)

inst_19652:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x75fffc00; valaddr_reg:x3; val_offset:58956*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58956*0 + 3*452*FLEN/8, x4, x1, x2)

inst_19653:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x75fffe00; valaddr_reg:x3; val_offset:58959*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58959*0 + 3*453*FLEN/8, x4, x1, x2)

inst_19654:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x75ffff00; valaddr_reg:x3; val_offset:58962*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58962*0 + 3*454*FLEN/8, x4, x1, x2)

inst_19655:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x75ffff80; valaddr_reg:x3; val_offset:58965*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58965*0 + 3*455*FLEN/8, x4, x1, x2)

inst_19656:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x75ffffc0; valaddr_reg:x3; val_offset:58968*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58968*0 + 3*456*FLEN/8, x4, x1, x2)

inst_19657:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x75ffffe0; valaddr_reg:x3; val_offset:58971*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58971*0 + 3*457*FLEN/8, x4, x1, x2)

inst_19658:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x75fffff0; valaddr_reg:x3; val_offset:58974*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58974*0 + 3*458*FLEN/8, x4, x1, x2)

inst_19659:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x75fffff8; valaddr_reg:x3; val_offset:58977*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58977*0 + 3*459*FLEN/8, x4, x1, x2)

inst_19660:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x75fffffc; valaddr_reg:x3; val_offset:58980*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58980*0 + 3*460*FLEN/8, x4, x1, x2)

inst_19661:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x75fffffe; valaddr_reg:x3; val_offset:58983*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58983*0 + 3*461*FLEN/8, x4, x1, x2)

inst_19662:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xeb and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x75ffffff; valaddr_reg:x3; val_offset:58986*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58986*0 + 3*462*FLEN/8, x4, x1, x2)

inst_19663:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x7f000001; valaddr_reg:x3; val_offset:58989*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58989*0 + 3*463*FLEN/8, x4, x1, x2)

inst_19664:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x7f000003; valaddr_reg:x3; val_offset:58992*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58992*0 + 3*464*FLEN/8, x4, x1, x2)

inst_19665:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x7f000007; valaddr_reg:x3; val_offset:58995*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58995*0 + 3*465*FLEN/8, x4, x1, x2)

inst_19666:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x7f199999; valaddr_reg:x3; val_offset:58998*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58998*0 + 3*466*FLEN/8, x4, x1, x2)

inst_19667:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x7f249249; valaddr_reg:x3; val_offset:59001*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59001*0 + 3*467*FLEN/8, x4, x1, x2)

inst_19668:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x7f333333; valaddr_reg:x3; val_offset:59004*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59004*0 + 3*468*FLEN/8, x4, x1, x2)

inst_19669:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:59007*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59007*0 + 3*469*FLEN/8, x4, x1, x2)

inst_19670:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:59010*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59010*0 + 3*470*FLEN/8, x4, x1, x2)

inst_19671:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x7f444444; valaddr_reg:x3; val_offset:59013*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59013*0 + 3*471*FLEN/8, x4, x1, x2)

inst_19672:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:59016*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59016*0 + 3*472*FLEN/8, x4, x1, x2)

inst_19673:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:59019*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59019*0 + 3*473*FLEN/8, x4, x1, x2)

inst_19674:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x7f666666; valaddr_reg:x3; val_offset:59022*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59022*0 + 3*474*FLEN/8, x4, x1, x2)

inst_19675:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:59025*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59025*0 + 3*475*FLEN/8, x4, x1, x2)

inst_19676:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:59028*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59028*0 + 3*476*FLEN/8, x4, x1, x2)

inst_19677:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:59031*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59031*0 + 3*477*FLEN/8, x4, x1, x2)

inst_19678:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43331c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x27de80 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec3331c; op2val:0x4027de80;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:59034*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59034*0 + 3*478*FLEN/8, x4, x1, x2)

inst_19679:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:59037*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59037*0 + 3*479*FLEN/8, x4, x1, x2)

inst_19680:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:59040*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59040*0 + 3*480*FLEN/8, x4, x1, x2)

inst_19681:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:59043*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59043*0 + 3*481*FLEN/8, x4, x1, x2)

inst_19682:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:59046*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59046*0 + 3*482*FLEN/8, x4, x1, x2)

inst_19683:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:59049*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59049*0 + 3*483*FLEN/8, x4, x1, x2)

inst_19684:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:59052*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59052*0 + 3*484*FLEN/8, x4, x1, x2)

inst_19685:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:59055*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59055*0 + 3*485*FLEN/8, x4, x1, x2)

inst_19686:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:59058*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59058*0 + 3*486*FLEN/8, x4, x1, x2)

inst_19687:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:59061*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59061*0 + 3*487*FLEN/8, x4, x1, x2)

inst_19688:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:59064*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59064*0 + 3*488*FLEN/8, x4, x1, x2)

inst_19689:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:59067*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59067*0 + 3*489*FLEN/8, x4, x1, x2)

inst_19690:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:59070*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59070*0 + 3*490*FLEN/8, x4, x1, x2)

inst_19691:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:59073*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59073*0 + 3*491*FLEN/8, x4, x1, x2)

inst_19692:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:59076*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59076*0 + 3*492*FLEN/8, x4, x1, x2)

inst_19693:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:59079*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59079*0 + 3*493*FLEN/8, x4, x1, x2)

inst_19694:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:59082*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59082*0 + 3*494*FLEN/8, x4, x1, x2)

inst_19695:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x82000000; valaddr_reg:x3; val_offset:59085*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59085*0 + 3*495*FLEN/8, x4, x1, x2)

inst_19696:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x82000001; valaddr_reg:x3; val_offset:59088*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59088*0 + 3*496*FLEN/8, x4, x1, x2)

inst_19697:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x82000003; valaddr_reg:x3; val_offset:59091*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59091*0 + 3*497*FLEN/8, x4, x1, x2)

inst_19698:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x82000007; valaddr_reg:x3; val_offset:59094*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59094*0 + 3*498*FLEN/8, x4, x1, x2)

inst_19699:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x8200000f; valaddr_reg:x3; val_offset:59097*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59097*0 + 3*499*FLEN/8, x4, x1, x2)

inst_19700:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x8200001f; valaddr_reg:x3; val_offset:59100*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59100*0 + 3*500*FLEN/8, x4, x1, x2)

inst_19701:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x8200003f; valaddr_reg:x3; val_offset:59103*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59103*0 + 3*501*FLEN/8, x4, x1, x2)

inst_19702:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x8200007f; valaddr_reg:x3; val_offset:59106*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59106*0 + 3*502*FLEN/8, x4, x1, x2)

inst_19703:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x820000ff; valaddr_reg:x3; val_offset:59109*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59109*0 + 3*503*FLEN/8, x4, x1, x2)

inst_19704:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x820001ff; valaddr_reg:x3; val_offset:59112*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59112*0 + 3*504*FLEN/8, x4, x1, x2)

inst_19705:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x820003ff; valaddr_reg:x3; val_offset:59115*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59115*0 + 3*505*FLEN/8, x4, x1, x2)

inst_19706:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x820007ff; valaddr_reg:x3; val_offset:59118*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59118*0 + 3*506*FLEN/8, x4, x1, x2)

inst_19707:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x82000fff; valaddr_reg:x3; val_offset:59121*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59121*0 + 3*507*FLEN/8, x4, x1, x2)

inst_19708:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x82001fff; valaddr_reg:x3; val_offset:59124*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59124*0 + 3*508*FLEN/8, x4, x1, x2)

inst_19709:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x82003fff; valaddr_reg:x3; val_offset:59127*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59127*0 + 3*509*FLEN/8, x4, x1, x2)

inst_19710:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x82007fff; valaddr_reg:x3; val_offset:59130*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59130*0 + 3*510*FLEN/8, x4, x1, x2)

inst_19711:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x8200ffff; valaddr_reg:x3; val_offset:59133*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59133*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_19712:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x8201ffff; valaddr_reg:x3; val_offset:59136*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59136*0 + 3*512*FLEN/8, x4, x1, x2)

inst_19713:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x8203ffff; valaddr_reg:x3; val_offset:59139*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59139*0 + 3*513*FLEN/8, x4, x1, x2)

inst_19714:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x8207ffff; valaddr_reg:x3; val_offset:59142*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59142*0 + 3*514*FLEN/8, x4, x1, x2)

inst_19715:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x820fffff; valaddr_reg:x3; val_offset:59145*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59145*0 + 3*515*FLEN/8, x4, x1, x2)

inst_19716:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x821fffff; valaddr_reg:x3; val_offset:59148*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59148*0 + 3*516*FLEN/8, x4, x1, x2)

inst_19717:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x823fffff; valaddr_reg:x3; val_offset:59151*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59151*0 + 3*517*FLEN/8, x4, x1, x2)

inst_19718:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x82400000; valaddr_reg:x3; val_offset:59154*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59154*0 + 3*518*FLEN/8, x4, x1, x2)

inst_19719:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x82600000; valaddr_reg:x3; val_offset:59157*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59157*0 + 3*519*FLEN/8, x4, x1, x2)

inst_19720:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x82700000; valaddr_reg:x3; val_offset:59160*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59160*0 + 3*520*FLEN/8, x4, x1, x2)

inst_19721:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x82780000; valaddr_reg:x3; val_offset:59163*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59163*0 + 3*521*FLEN/8, x4, x1, x2)

inst_19722:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x827c0000; valaddr_reg:x3; val_offset:59166*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59166*0 + 3*522*FLEN/8, x4, x1, x2)

inst_19723:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x827e0000; valaddr_reg:x3; val_offset:59169*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59169*0 + 3*523*FLEN/8, x4, x1, x2)

inst_19724:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x827f0000; valaddr_reg:x3; val_offset:59172*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59172*0 + 3*524*FLEN/8, x4, x1, x2)

inst_19725:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x827f8000; valaddr_reg:x3; val_offset:59175*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59175*0 + 3*525*FLEN/8, x4, x1, x2)

inst_19726:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x827fc000; valaddr_reg:x3; val_offset:59178*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59178*0 + 3*526*FLEN/8, x4, x1, x2)

inst_19727:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x827fe000; valaddr_reg:x3; val_offset:59181*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59181*0 + 3*527*FLEN/8, x4, x1, x2)

inst_19728:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x827ff000; valaddr_reg:x3; val_offset:59184*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59184*0 + 3*528*FLEN/8, x4, x1, x2)

inst_19729:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x827ff800; valaddr_reg:x3; val_offset:59187*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59187*0 + 3*529*FLEN/8, x4, x1, x2)

inst_19730:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x827ffc00; valaddr_reg:x3; val_offset:59190*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59190*0 + 3*530*FLEN/8, x4, x1, x2)

inst_19731:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x827ffe00; valaddr_reg:x3; val_offset:59193*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59193*0 + 3*531*FLEN/8, x4, x1, x2)

inst_19732:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x827fff00; valaddr_reg:x3; val_offset:59196*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59196*0 + 3*532*FLEN/8, x4, x1, x2)

inst_19733:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x827fff80; valaddr_reg:x3; val_offset:59199*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59199*0 + 3*533*FLEN/8, x4, x1, x2)

inst_19734:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x827fffc0; valaddr_reg:x3; val_offset:59202*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59202*0 + 3*534*FLEN/8, x4, x1, x2)

inst_19735:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x827fffe0; valaddr_reg:x3; val_offset:59205*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59205*0 + 3*535*FLEN/8, x4, x1, x2)

inst_19736:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x827ffff0; valaddr_reg:x3; val_offset:59208*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59208*0 + 3*536*FLEN/8, x4, x1, x2)

inst_19737:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x827ffff8; valaddr_reg:x3; val_offset:59211*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59211*0 + 3*537*FLEN/8, x4, x1, x2)

inst_19738:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x827ffffc; valaddr_reg:x3; val_offset:59214*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59214*0 + 3*538*FLEN/8, x4, x1, x2)

inst_19739:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x827ffffe; valaddr_reg:x3; val_offset:59217*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59217*0 + 3*539*FLEN/8, x4, x1, x2)

inst_19740:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46e94e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec6e94e; op2val:0x80000000;
op3val:0x827fffff; valaddr_reg:x3; val_offset:59220*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59220*0 + 3*540*FLEN/8, x4, x1, x2)

inst_19741:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:59223*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59223*0 + 3*541*FLEN/8, x4, x1, x2)

inst_19742:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:59226*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59226*0 + 3*542*FLEN/8, x4, x1, x2)

inst_19743:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:59229*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59229*0 + 3*543*FLEN/8, x4, x1, x2)

inst_19744:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x80999999; valaddr_reg:x3; val_offset:59232*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59232*0 + 3*544*FLEN/8, x4, x1, x2)

inst_19745:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x80a49249; valaddr_reg:x3; val_offset:59235*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59235*0 + 3*545*FLEN/8, x4, x1, x2)

inst_19746:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x80b33333; valaddr_reg:x3; val_offset:59238*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59238*0 + 3*546*FLEN/8, x4, x1, x2)

inst_19747:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x80b6db6d; valaddr_reg:x3; val_offset:59241*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59241*0 + 3*547*FLEN/8, x4, x1, x2)

inst_19748:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x80bbbbbb; valaddr_reg:x3; val_offset:59244*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59244*0 + 3*548*FLEN/8, x4, x1, x2)

inst_19749:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x80c44444; valaddr_reg:x3; val_offset:59247*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59247*0 + 3*549*FLEN/8, x4, x1, x2)

inst_19750:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x80cccccc; valaddr_reg:x3; val_offset:59250*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59250*0 + 3*550*FLEN/8, x4, x1, x2)

inst_19751:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x80db6db6; valaddr_reg:x3; val_offset:59253*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59253*0 + 3*551*FLEN/8, x4, x1, x2)

inst_19752:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x80e66666; valaddr_reg:x3; val_offset:59256*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59256*0 + 3*552*FLEN/8, x4, x1, x2)

inst_19753:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x80edb6db; valaddr_reg:x3; val_offset:59259*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59259*0 + 3*553*FLEN/8, x4, x1, x2)

inst_19754:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:59262*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59262*0 + 3*554*FLEN/8, x4, x1, x2)

inst_19755:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:59265*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59265*0 + 3*555*FLEN/8, x4, x1, x2)

inst_19756:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:59268*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59268*0 + 3*556*FLEN/8, x4, x1, x2)

inst_19757:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x81000000; valaddr_reg:x3; val_offset:59271*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59271*0 + 3*557*FLEN/8, x4, x1, x2)

inst_19758:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x81000001; valaddr_reg:x3; val_offset:59274*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59274*0 + 3*558*FLEN/8, x4, x1, x2)

inst_19759:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x81000003; valaddr_reg:x3; val_offset:59277*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59277*0 + 3*559*FLEN/8, x4, x1, x2)

inst_19760:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x81000007; valaddr_reg:x3; val_offset:59280*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59280*0 + 3*560*FLEN/8, x4, x1, x2)

inst_19761:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x8100000f; valaddr_reg:x3; val_offset:59283*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59283*0 + 3*561*FLEN/8, x4, x1, x2)

inst_19762:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x8100001f; valaddr_reg:x3; val_offset:59286*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59286*0 + 3*562*FLEN/8, x4, x1, x2)

inst_19763:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x8100003f; valaddr_reg:x3; val_offset:59289*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59289*0 + 3*563*FLEN/8, x4, x1, x2)

inst_19764:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x8100007f; valaddr_reg:x3; val_offset:59292*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59292*0 + 3*564*FLEN/8, x4, x1, x2)

inst_19765:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x810000ff; valaddr_reg:x3; val_offset:59295*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59295*0 + 3*565*FLEN/8, x4, x1, x2)

inst_19766:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x810001ff; valaddr_reg:x3; val_offset:59298*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59298*0 + 3*566*FLEN/8, x4, x1, x2)

inst_19767:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x810003ff; valaddr_reg:x3; val_offset:59301*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59301*0 + 3*567*FLEN/8, x4, x1, x2)

inst_19768:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x810007ff; valaddr_reg:x3; val_offset:59304*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59304*0 + 3*568*FLEN/8, x4, x1, x2)

inst_19769:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x81000fff; valaddr_reg:x3; val_offset:59307*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59307*0 + 3*569*FLEN/8, x4, x1, x2)

inst_19770:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x81001fff; valaddr_reg:x3; val_offset:59310*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59310*0 + 3*570*FLEN/8, x4, x1, x2)

inst_19771:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x81003fff; valaddr_reg:x3; val_offset:59313*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59313*0 + 3*571*FLEN/8, x4, x1, x2)

inst_19772:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x81007fff; valaddr_reg:x3; val_offset:59316*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59316*0 + 3*572*FLEN/8, x4, x1, x2)

inst_19773:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x8100ffff; valaddr_reg:x3; val_offset:59319*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59319*0 + 3*573*FLEN/8, x4, x1, x2)

inst_19774:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x8101ffff; valaddr_reg:x3; val_offset:59322*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59322*0 + 3*574*FLEN/8, x4, x1, x2)

inst_19775:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x8103ffff; valaddr_reg:x3; val_offset:59325*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59325*0 + 3*575*FLEN/8, x4, x1, x2)

inst_19776:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x8107ffff; valaddr_reg:x3; val_offset:59328*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59328*0 + 3*576*FLEN/8, x4, x1, x2)

inst_19777:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x810fffff; valaddr_reg:x3; val_offset:59331*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59331*0 + 3*577*FLEN/8, x4, x1, x2)

inst_19778:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x811fffff; valaddr_reg:x3; val_offset:59334*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59334*0 + 3*578*FLEN/8, x4, x1, x2)

inst_19779:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x813fffff; valaddr_reg:x3; val_offset:59337*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59337*0 + 3*579*FLEN/8, x4, x1, x2)

inst_19780:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x81400000; valaddr_reg:x3; val_offset:59340*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59340*0 + 3*580*FLEN/8, x4, x1, x2)

inst_19781:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x81600000; valaddr_reg:x3; val_offset:59343*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59343*0 + 3*581*FLEN/8, x4, x1, x2)

inst_19782:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x81700000; valaddr_reg:x3; val_offset:59346*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59346*0 + 3*582*FLEN/8, x4, x1, x2)

inst_19783:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x81780000; valaddr_reg:x3; val_offset:59349*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59349*0 + 3*583*FLEN/8, x4, x1, x2)

inst_19784:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x817c0000; valaddr_reg:x3; val_offset:59352*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59352*0 + 3*584*FLEN/8, x4, x1, x2)

inst_19785:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x817e0000; valaddr_reg:x3; val_offset:59355*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59355*0 + 3*585*FLEN/8, x4, x1, x2)

inst_19786:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x817f0000; valaddr_reg:x3; val_offset:59358*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59358*0 + 3*586*FLEN/8, x4, x1, x2)

inst_19787:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x817f8000; valaddr_reg:x3; val_offset:59361*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59361*0 + 3*587*FLEN/8, x4, x1, x2)

inst_19788:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x817fc000; valaddr_reg:x3; val_offset:59364*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59364*0 + 3*588*FLEN/8, x4, x1, x2)

inst_19789:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x817fe000; valaddr_reg:x3; val_offset:59367*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59367*0 + 3*589*FLEN/8, x4, x1, x2)

inst_19790:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x817ff000; valaddr_reg:x3; val_offset:59370*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59370*0 + 3*590*FLEN/8, x4, x1, x2)

inst_19791:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x817ff800; valaddr_reg:x3; val_offset:59373*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59373*0 + 3*591*FLEN/8, x4, x1, x2)

inst_19792:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x817ffc00; valaddr_reg:x3; val_offset:59376*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59376*0 + 3*592*FLEN/8, x4, x1, x2)

inst_19793:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x817ffe00; valaddr_reg:x3; val_offset:59379*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59379*0 + 3*593*FLEN/8, x4, x1, x2)

inst_19794:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x817fff00; valaddr_reg:x3; val_offset:59382*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59382*0 + 3*594*FLEN/8, x4, x1, x2)

inst_19795:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x817fff80; valaddr_reg:x3; val_offset:59385*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59385*0 + 3*595*FLEN/8, x4, x1, x2)

inst_19796:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x817fffc0; valaddr_reg:x3; val_offset:59388*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59388*0 + 3*596*FLEN/8, x4, x1, x2)

inst_19797:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x817fffe0; valaddr_reg:x3; val_offset:59391*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59391*0 + 3*597*FLEN/8, x4, x1, x2)

inst_19798:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x817ffff0; valaddr_reg:x3; val_offset:59394*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59394*0 + 3*598*FLEN/8, x4, x1, x2)

inst_19799:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x817ffff8; valaddr_reg:x3; val_offset:59397*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59397*0 + 3*599*FLEN/8, x4, x1, x2)

inst_19800:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x817ffffc; valaddr_reg:x3; val_offset:59400*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59400*0 + 3*600*FLEN/8, x4, x1, x2)

inst_19801:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x817ffffe; valaddr_reg:x3; val_offset:59403*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59403*0 + 3*601*FLEN/8, x4, x1, x2)

inst_19802:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474c7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74c7e; op2val:0x80000000;
op3val:0x817fffff; valaddr_reg:x3; val_offset:59406*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59406*0 + 3*602*FLEN/8, x4, x1, x2)

inst_19803:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe000000; valaddr_reg:x3; val_offset:59409*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59409*0 + 3*603*FLEN/8, x4, x1, x2)

inst_19804:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe000001; valaddr_reg:x3; val_offset:59412*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59412*0 + 3*604*FLEN/8, x4, x1, x2)

inst_19805:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe000003; valaddr_reg:x3; val_offset:59415*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59415*0 + 3*605*FLEN/8, x4, x1, x2)

inst_19806:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe000007; valaddr_reg:x3; val_offset:59418*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59418*0 + 3*606*FLEN/8, x4, x1, x2)

inst_19807:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe00000f; valaddr_reg:x3; val_offset:59421*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59421*0 + 3*607*FLEN/8, x4, x1, x2)

inst_19808:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe00001f; valaddr_reg:x3; val_offset:59424*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59424*0 + 3*608*FLEN/8, x4, x1, x2)

inst_19809:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe00003f; valaddr_reg:x3; val_offset:59427*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59427*0 + 3*609*FLEN/8, x4, x1, x2)

inst_19810:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe00007f; valaddr_reg:x3; val_offset:59430*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59430*0 + 3*610*FLEN/8, x4, x1, x2)

inst_19811:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe0000ff; valaddr_reg:x3; val_offset:59433*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59433*0 + 3*611*FLEN/8, x4, x1, x2)

inst_19812:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe0001ff; valaddr_reg:x3; val_offset:59436*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59436*0 + 3*612*FLEN/8, x4, x1, x2)

inst_19813:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe0003ff; valaddr_reg:x3; val_offset:59439*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59439*0 + 3*613*FLEN/8, x4, x1, x2)

inst_19814:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe0007ff; valaddr_reg:x3; val_offset:59442*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59442*0 + 3*614*FLEN/8, x4, x1, x2)

inst_19815:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe000fff; valaddr_reg:x3; val_offset:59445*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59445*0 + 3*615*FLEN/8, x4, x1, x2)

inst_19816:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe001fff; valaddr_reg:x3; val_offset:59448*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59448*0 + 3*616*FLEN/8, x4, x1, x2)

inst_19817:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe003fff; valaddr_reg:x3; val_offset:59451*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59451*0 + 3*617*FLEN/8, x4, x1, x2)

inst_19818:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe007fff; valaddr_reg:x3; val_offset:59454*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59454*0 + 3*618*FLEN/8, x4, x1, x2)

inst_19819:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe00ffff; valaddr_reg:x3; val_offset:59457*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59457*0 + 3*619*FLEN/8, x4, x1, x2)

inst_19820:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe01ffff; valaddr_reg:x3; val_offset:59460*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59460*0 + 3*620*FLEN/8, x4, x1, x2)

inst_19821:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe03ffff; valaddr_reg:x3; val_offset:59463*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59463*0 + 3*621*FLEN/8, x4, x1, x2)

inst_19822:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe07ffff; valaddr_reg:x3; val_offset:59466*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59466*0 + 3*622*FLEN/8, x4, x1, x2)

inst_19823:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe0fffff; valaddr_reg:x3; val_offset:59469*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59469*0 + 3*623*FLEN/8, x4, x1, x2)

inst_19824:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe1fffff; valaddr_reg:x3; val_offset:59472*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59472*0 + 3*624*FLEN/8, x4, x1, x2)

inst_19825:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe3fffff; valaddr_reg:x3; val_offset:59475*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59475*0 + 3*625*FLEN/8, x4, x1, x2)

inst_19826:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe400000; valaddr_reg:x3; val_offset:59478*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59478*0 + 3*626*FLEN/8, x4, x1, x2)

inst_19827:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe600000; valaddr_reg:x3; val_offset:59481*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59481*0 + 3*627*FLEN/8, x4, x1, x2)

inst_19828:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe700000; valaddr_reg:x3; val_offset:59484*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59484*0 + 3*628*FLEN/8, x4, x1, x2)

inst_19829:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe780000; valaddr_reg:x3; val_offset:59487*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59487*0 + 3*629*FLEN/8, x4, x1, x2)

inst_19830:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe7c0000; valaddr_reg:x3; val_offset:59490*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59490*0 + 3*630*FLEN/8, x4, x1, x2)

inst_19831:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe7e0000; valaddr_reg:x3; val_offset:59493*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59493*0 + 3*631*FLEN/8, x4, x1, x2)

inst_19832:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe7f0000; valaddr_reg:x3; val_offset:59496*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59496*0 + 3*632*FLEN/8, x4, x1, x2)

inst_19833:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe7f8000; valaddr_reg:x3; val_offset:59499*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59499*0 + 3*633*FLEN/8, x4, x1, x2)

inst_19834:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe7fc000; valaddr_reg:x3; val_offset:59502*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59502*0 + 3*634*FLEN/8, x4, x1, x2)

inst_19835:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe7fe000; valaddr_reg:x3; val_offset:59505*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59505*0 + 3*635*FLEN/8, x4, x1, x2)

inst_19836:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe7ff000; valaddr_reg:x3; val_offset:59508*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59508*0 + 3*636*FLEN/8, x4, x1, x2)

inst_19837:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe7ff800; valaddr_reg:x3; val_offset:59511*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59511*0 + 3*637*FLEN/8, x4, x1, x2)

inst_19838:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe7ffc00; valaddr_reg:x3; val_offset:59514*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59514*0 + 3*638*FLEN/8, x4, x1, x2)

inst_19839:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe7ffe00; valaddr_reg:x3; val_offset:59517*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59517*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_19840:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe7fff00; valaddr_reg:x3; val_offset:59520*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59520*0 + 3*640*FLEN/8, x4, x1, x2)

inst_19841:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe7fff80; valaddr_reg:x3; val_offset:59523*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59523*0 + 3*641*FLEN/8, x4, x1, x2)

inst_19842:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe7fffc0; valaddr_reg:x3; val_offset:59526*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59526*0 + 3*642*FLEN/8, x4, x1, x2)

inst_19843:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe7fffe0; valaddr_reg:x3; val_offset:59529*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59529*0 + 3*643*FLEN/8, x4, x1, x2)

inst_19844:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe7ffff0; valaddr_reg:x3; val_offset:59532*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59532*0 + 3*644*FLEN/8, x4, x1, x2)

inst_19845:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe7ffff8; valaddr_reg:x3; val_offset:59535*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59535*0 + 3*645*FLEN/8, x4, x1, x2)

inst_19846:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe7ffffc; valaddr_reg:x3; val_offset:59538*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59538*0 + 3*646*FLEN/8, x4, x1, x2)

inst_19847:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe7ffffe; valaddr_reg:x3; val_offset:59541*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59541*0 + 3*647*FLEN/8, x4, x1, x2)

inst_19848:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xfe7fffff; valaddr_reg:x3; val_offset:59544*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59544*0 + 3*648*FLEN/8, x4, x1, x2)

inst_19849:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xff000001; valaddr_reg:x3; val_offset:59547*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59547*0 + 3*649*FLEN/8, x4, x1, x2)

inst_19850:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xff000003; valaddr_reg:x3; val_offset:59550*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59550*0 + 3*650*FLEN/8, x4, x1, x2)

inst_19851:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xff000007; valaddr_reg:x3; val_offset:59553*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59553*0 + 3*651*FLEN/8, x4, x1, x2)

inst_19852:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xff199999; valaddr_reg:x3; val_offset:59556*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59556*0 + 3*652*FLEN/8, x4, x1, x2)

inst_19853:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xff249249; valaddr_reg:x3; val_offset:59559*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59559*0 + 3*653*FLEN/8, x4, x1, x2)

inst_19854:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xff333333; valaddr_reg:x3; val_offset:59562*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59562*0 + 3*654*FLEN/8, x4, x1, x2)

inst_19855:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:59565*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59565*0 + 3*655*FLEN/8, x4, x1, x2)

inst_19856:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:59568*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59568*0 + 3*656*FLEN/8, x4, x1, x2)

inst_19857:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xff444444; valaddr_reg:x3; val_offset:59571*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59571*0 + 3*657*FLEN/8, x4, x1, x2)

inst_19858:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:59574*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59574*0 + 3*658*FLEN/8, x4, x1, x2)

inst_19859:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:59577*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59577*0 + 3*659*FLEN/8, x4, x1, x2)

inst_19860:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xff666666; valaddr_reg:x3; val_offset:59580*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59580*0 + 3*660*FLEN/8, x4, x1, x2)

inst_19861:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:59583*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59583*0 + 3*661*FLEN/8, x4, x1, x2)

inst_19862:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:59586*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59586*0 + 3*662*FLEN/8, x4, x1, x2)

inst_19863:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:59589*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59589*0 + 3*663*FLEN/8, x4, x1, x2)

inst_19864:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2427a9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec79dc5; op2val:0xc02427a9;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:59592*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59592*0 + 3*664*FLEN/8, x4, x1, x2)

inst_19865:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:59595*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59595*0 + 3*665*FLEN/8, x4, x1, x2)

inst_19866:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:59598*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59598*0 + 3*666*FLEN/8, x4, x1, x2)

inst_19867:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:59601*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59601*0 + 3*667*FLEN/8, x4, x1, x2)

inst_19868:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:59604*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59604*0 + 3*668*FLEN/8, x4, x1, x2)

inst_19869:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:59607*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59607*0 + 3*669*FLEN/8, x4, x1, x2)

inst_19870:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:59610*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59610*0 + 3*670*FLEN/8, x4, x1, x2)

inst_19871:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:59613*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59613*0 + 3*671*FLEN/8, x4, x1, x2)

inst_19872:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:59616*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59616*0 + 3*672*FLEN/8, x4, x1, x2)

inst_19873:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:59619*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59619*0 + 3*673*FLEN/8, x4, x1, x2)

inst_19874:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:59622*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59622*0 + 3*674*FLEN/8, x4, x1, x2)

inst_19875:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:59625*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59625*0 + 3*675*FLEN/8, x4, x1, x2)

inst_19876:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:59628*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59628*0 + 3*676*FLEN/8, x4, x1, x2)

inst_19877:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:59631*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59631*0 + 3*677*FLEN/8, x4, x1, x2)

inst_19878:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:59634*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59634*0 + 3*678*FLEN/8, x4, x1, x2)

inst_19879:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:59637*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59637*0 + 3*679*FLEN/8, x4, x1, x2)

inst_19880:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:59640*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59640*0 + 3*680*FLEN/8, x4, x1, x2)

inst_19881:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xe800000; valaddr_reg:x3; val_offset:59643*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59643*0 + 3*681*FLEN/8, x4, x1, x2)

inst_19882:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xe800001; valaddr_reg:x3; val_offset:59646*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59646*0 + 3*682*FLEN/8, x4, x1, x2)

inst_19883:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xe800003; valaddr_reg:x3; val_offset:59649*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59649*0 + 3*683*FLEN/8, x4, x1, x2)

inst_19884:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xe800007; valaddr_reg:x3; val_offset:59652*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59652*0 + 3*684*FLEN/8, x4, x1, x2)

inst_19885:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xe80000f; valaddr_reg:x3; val_offset:59655*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59655*0 + 3*685*FLEN/8, x4, x1, x2)

inst_19886:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xe80001f; valaddr_reg:x3; val_offset:59658*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59658*0 + 3*686*FLEN/8, x4, x1, x2)

inst_19887:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xe80003f; valaddr_reg:x3; val_offset:59661*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59661*0 + 3*687*FLEN/8, x4, x1, x2)

inst_19888:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xe80007f; valaddr_reg:x3; val_offset:59664*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59664*0 + 3*688*FLEN/8, x4, x1, x2)

inst_19889:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xe8000ff; valaddr_reg:x3; val_offset:59667*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59667*0 + 3*689*FLEN/8, x4, x1, x2)

inst_19890:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xe8001ff; valaddr_reg:x3; val_offset:59670*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59670*0 + 3*690*FLEN/8, x4, x1, x2)

inst_19891:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xe8003ff; valaddr_reg:x3; val_offset:59673*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59673*0 + 3*691*FLEN/8, x4, x1, x2)

inst_19892:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xe8007ff; valaddr_reg:x3; val_offset:59676*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59676*0 + 3*692*FLEN/8, x4, x1, x2)

inst_19893:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xe800fff; valaddr_reg:x3; val_offset:59679*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59679*0 + 3*693*FLEN/8, x4, x1, x2)

inst_19894:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xe801fff; valaddr_reg:x3; val_offset:59682*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59682*0 + 3*694*FLEN/8, x4, x1, x2)

inst_19895:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xe803fff; valaddr_reg:x3; val_offset:59685*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59685*0 + 3*695*FLEN/8, x4, x1, x2)

inst_19896:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xe807fff; valaddr_reg:x3; val_offset:59688*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59688*0 + 3*696*FLEN/8, x4, x1, x2)

inst_19897:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xe80ffff; valaddr_reg:x3; val_offset:59691*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59691*0 + 3*697*FLEN/8, x4, x1, x2)

inst_19898:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xe81ffff; valaddr_reg:x3; val_offset:59694*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59694*0 + 3*698*FLEN/8, x4, x1, x2)

inst_19899:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xe83ffff; valaddr_reg:x3; val_offset:59697*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59697*0 + 3*699*FLEN/8, x4, x1, x2)

inst_19900:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xe87ffff; valaddr_reg:x3; val_offset:59700*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59700*0 + 3*700*FLEN/8, x4, x1, x2)

inst_19901:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xe8fffff; valaddr_reg:x3; val_offset:59703*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59703*0 + 3*701*FLEN/8, x4, x1, x2)

inst_19902:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xe9fffff; valaddr_reg:x3; val_offset:59706*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59706*0 + 3*702*FLEN/8, x4, x1, x2)

inst_19903:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xebfffff; valaddr_reg:x3; val_offset:59709*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59709*0 + 3*703*FLEN/8, x4, x1, x2)

inst_19904:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xec00000; valaddr_reg:x3; val_offset:59712*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59712*0 + 3*704*FLEN/8, x4, x1, x2)

inst_19905:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xee00000; valaddr_reg:x3; val_offset:59715*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59715*0 + 3*705*FLEN/8, x4, x1, x2)

inst_19906:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xef00000; valaddr_reg:x3; val_offset:59718*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59718*0 + 3*706*FLEN/8, x4, x1, x2)

inst_19907:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xef80000; valaddr_reg:x3; val_offset:59721*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59721*0 + 3*707*FLEN/8, x4, x1, x2)

inst_19908:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xefc0000; valaddr_reg:x3; val_offset:59724*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59724*0 + 3*708*FLEN/8, x4, x1, x2)

inst_19909:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xefe0000; valaddr_reg:x3; val_offset:59727*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59727*0 + 3*709*FLEN/8, x4, x1, x2)

inst_19910:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xeff0000; valaddr_reg:x3; val_offset:59730*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59730*0 + 3*710*FLEN/8, x4, x1, x2)

inst_19911:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xeff8000; valaddr_reg:x3; val_offset:59733*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59733*0 + 3*711*FLEN/8, x4, x1, x2)

inst_19912:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xeffc000; valaddr_reg:x3; val_offset:59736*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59736*0 + 3*712*FLEN/8, x4, x1, x2)

inst_19913:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xeffe000; valaddr_reg:x3; val_offset:59739*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59739*0 + 3*713*FLEN/8, x4, x1, x2)

inst_19914:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xefff000; valaddr_reg:x3; val_offset:59742*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59742*0 + 3*714*FLEN/8, x4, x1, x2)

inst_19915:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xefff800; valaddr_reg:x3; val_offset:59745*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59745*0 + 3*715*FLEN/8, x4, x1, x2)

inst_19916:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xefffc00; valaddr_reg:x3; val_offset:59748*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59748*0 + 3*716*FLEN/8, x4, x1, x2)

inst_19917:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xefffe00; valaddr_reg:x3; val_offset:59751*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59751*0 + 3*717*FLEN/8, x4, x1, x2)

inst_19918:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xeffff00; valaddr_reg:x3; val_offset:59754*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59754*0 + 3*718*FLEN/8, x4, x1, x2)

inst_19919:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xeffff80; valaddr_reg:x3; val_offset:59757*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59757*0 + 3*719*FLEN/8, x4, x1, x2)

inst_19920:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xeffffc0; valaddr_reg:x3; val_offset:59760*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59760*0 + 3*720*FLEN/8, x4, x1, x2)

inst_19921:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xeffffe0; valaddr_reg:x3; val_offset:59763*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59763*0 + 3*721*FLEN/8, x4, x1, x2)

inst_19922:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xefffff0; valaddr_reg:x3; val_offset:59766*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59766*0 + 3*722*FLEN/8, x4, x1, x2)

inst_19923:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xefffff8; valaddr_reg:x3; val_offset:59769*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59769*0 + 3*723*FLEN/8, x4, x1, x2)

inst_19924:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xefffffc; valaddr_reg:x3; val_offset:59772*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59772*0 + 3*724*FLEN/8, x4, x1, x2)

inst_19925:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xefffffe; valaddr_reg:x3; val_offset:59775*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59775*0 + 3*725*FLEN/8, x4, x1, x2)

inst_19926:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x483325 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec83325; op2val:0x0;
op3val:0xeffffff; valaddr_reg:x3; val_offset:59778*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59778*0 + 3*726*FLEN/8, x4, x1, x2)

inst_19927:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x24800000; valaddr_reg:x3; val_offset:59781*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59781*0 + 3*727*FLEN/8, x4, x1, x2)

inst_19928:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x24800001; valaddr_reg:x3; val_offset:59784*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59784*0 + 3*728*FLEN/8, x4, x1, x2)

inst_19929:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x24800003; valaddr_reg:x3; val_offset:59787*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59787*0 + 3*729*FLEN/8, x4, x1, x2)

inst_19930:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x24800007; valaddr_reg:x3; val_offset:59790*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59790*0 + 3*730*FLEN/8, x4, x1, x2)

inst_19931:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x2480000f; valaddr_reg:x3; val_offset:59793*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59793*0 + 3*731*FLEN/8, x4, x1, x2)

inst_19932:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x2480001f; valaddr_reg:x3; val_offset:59796*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59796*0 + 3*732*FLEN/8, x4, x1, x2)

inst_19933:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x2480003f; valaddr_reg:x3; val_offset:59799*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59799*0 + 3*733*FLEN/8, x4, x1, x2)

inst_19934:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x2480007f; valaddr_reg:x3; val_offset:59802*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59802*0 + 3*734*FLEN/8, x4, x1, x2)

inst_19935:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x248000ff; valaddr_reg:x3; val_offset:59805*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59805*0 + 3*735*FLEN/8, x4, x1, x2)

inst_19936:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x248001ff; valaddr_reg:x3; val_offset:59808*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59808*0 + 3*736*FLEN/8, x4, x1, x2)

inst_19937:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x248003ff; valaddr_reg:x3; val_offset:59811*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59811*0 + 3*737*FLEN/8, x4, x1, x2)

inst_19938:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x248007ff; valaddr_reg:x3; val_offset:59814*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59814*0 + 3*738*FLEN/8, x4, x1, x2)

inst_19939:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x24800fff; valaddr_reg:x3; val_offset:59817*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59817*0 + 3*739*FLEN/8, x4, x1, x2)

inst_19940:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x24801fff; valaddr_reg:x3; val_offset:59820*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59820*0 + 3*740*FLEN/8, x4, x1, x2)

inst_19941:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x24803fff; valaddr_reg:x3; val_offset:59823*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59823*0 + 3*741*FLEN/8, x4, x1, x2)

inst_19942:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x24807fff; valaddr_reg:x3; val_offset:59826*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59826*0 + 3*742*FLEN/8, x4, x1, x2)

inst_19943:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x2480ffff; valaddr_reg:x3; val_offset:59829*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59829*0 + 3*743*FLEN/8, x4, x1, x2)

inst_19944:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x2481ffff; valaddr_reg:x3; val_offset:59832*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59832*0 + 3*744*FLEN/8, x4, x1, x2)

inst_19945:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x2483ffff; valaddr_reg:x3; val_offset:59835*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59835*0 + 3*745*FLEN/8, x4, x1, x2)

inst_19946:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x2487ffff; valaddr_reg:x3; val_offset:59838*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59838*0 + 3*746*FLEN/8, x4, x1, x2)

inst_19947:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x248fffff; valaddr_reg:x3; val_offset:59841*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59841*0 + 3*747*FLEN/8, x4, x1, x2)

inst_19948:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x249fffff; valaddr_reg:x3; val_offset:59844*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59844*0 + 3*748*FLEN/8, x4, x1, x2)

inst_19949:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x24bfffff; valaddr_reg:x3; val_offset:59847*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59847*0 + 3*749*FLEN/8, x4, x1, x2)

inst_19950:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x24c00000; valaddr_reg:x3; val_offset:59850*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59850*0 + 3*750*FLEN/8, x4, x1, x2)

inst_19951:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x24e00000; valaddr_reg:x3; val_offset:59853*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59853*0 + 3*751*FLEN/8, x4, x1, x2)

inst_19952:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x24f00000; valaddr_reg:x3; val_offset:59856*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59856*0 + 3*752*FLEN/8, x4, x1, x2)

inst_19953:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x24f80000; valaddr_reg:x3; val_offset:59859*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59859*0 + 3*753*FLEN/8, x4, x1, x2)

inst_19954:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x24fc0000; valaddr_reg:x3; val_offset:59862*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59862*0 + 3*754*FLEN/8, x4, x1, x2)

inst_19955:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x24fe0000; valaddr_reg:x3; val_offset:59865*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59865*0 + 3*755*FLEN/8, x4, x1, x2)

inst_19956:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x24ff0000; valaddr_reg:x3; val_offset:59868*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59868*0 + 3*756*FLEN/8, x4, x1, x2)

inst_19957:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x24ff8000; valaddr_reg:x3; val_offset:59871*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59871*0 + 3*757*FLEN/8, x4, x1, x2)

inst_19958:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x24ffc000; valaddr_reg:x3; val_offset:59874*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59874*0 + 3*758*FLEN/8, x4, x1, x2)

inst_19959:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x24ffe000; valaddr_reg:x3; val_offset:59877*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59877*0 + 3*759*FLEN/8, x4, x1, x2)

inst_19960:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x24fff000; valaddr_reg:x3; val_offset:59880*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59880*0 + 3*760*FLEN/8, x4, x1, x2)

inst_19961:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x24fff800; valaddr_reg:x3; val_offset:59883*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59883*0 + 3*761*FLEN/8, x4, x1, x2)

inst_19962:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x24fffc00; valaddr_reg:x3; val_offset:59886*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59886*0 + 3*762*FLEN/8, x4, x1, x2)

inst_19963:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x24fffe00; valaddr_reg:x3; val_offset:59889*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59889*0 + 3*763*FLEN/8, x4, x1, x2)

inst_19964:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x24ffff00; valaddr_reg:x3; val_offset:59892*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59892*0 + 3*764*FLEN/8, x4, x1, x2)

inst_19965:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x24ffff80; valaddr_reg:x3; val_offset:59895*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59895*0 + 3*765*FLEN/8, x4, x1, x2)

inst_19966:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x24ffffc0; valaddr_reg:x3; val_offset:59898*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59898*0 + 3*766*FLEN/8, x4, x1, x2)

inst_19967:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x485e0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51c511 and fs3 == 0 and fe3 == 0x49 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec85e0d; op2val:0x51c511;
op3val:0x24ffffe0; valaddr_reg:x3; val_offset:59901*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59901*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3363831808,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3363831809,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3363831811,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3363831815,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3363831823,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3363831839,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3363831871,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3363831935,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3363832063,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3363832319,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3363832831,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3363833855,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3363835903,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3363839999,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3363848191,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3363864575,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3363897343,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3363962879,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3364093951,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3364356095,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3364880383,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3365928959,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3368026111,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3368026112,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3370123264,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3371171840,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3371696128,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3371958272,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3372089344,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3372154880,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3372187648,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3372204032,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3372212224,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3372216320,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3372218368,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3372219392,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3372219904,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3372220160,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3372220288,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3372220352,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3372220384,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3372220400,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3372220408,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3372220412,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3372220414,32,FLEN)
NAN_BOXED(2126373354,32,FLEN)
NAN_BOXED(2153138418,32,FLEN)
NAN_BOXED(3372220415,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(31,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(63,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(127,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(255,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(511,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1023,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2047,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4095,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8191,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16383,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(32767,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(65535,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(131071,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(262143,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(524287,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1048575,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2097151,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4194303,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4194304,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6291456,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7340032,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7864320,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8126464,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8257536,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8323072,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8355840,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8372224,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8380416,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8384512,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8386560,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8387584,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388096,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388352,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388480,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388544,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388576,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388592,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2126396513,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1602224128,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1602224129,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1602224131,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1602224135,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1602224143,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1602224159,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1602224191,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1602224255,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1602224383,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1602224639,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1602225151,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1602226175,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1602228223,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1602232319,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1602240511,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1602256895,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1602289663,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1602355199,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1602486271,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1602748415,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1603272703,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1604321279,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1606418431,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1606418432,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1608515584,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1609564160,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1610088448,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1610350592,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1610481664,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1610547200,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1610579968,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1610596352,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1610604544,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1610608640,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1610610688,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1610611712,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1610612224,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1610612480,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1610612608,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1610612672,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1610612704,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1610612720,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1610612728,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1610612732,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1610612734,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(1610612735,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2126427187,32,FLEN)
NAN_BOXED(1076614042,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867200,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867201,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867203,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867207,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867215,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867231,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867263,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867327,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867455,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867711,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306868223,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306869247,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306871295,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306875391,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306883583,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306899967,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306932735,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306998271,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2307129343,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2307391487,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2307915775,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2308964351,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2311061503,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2311061504,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2313158656,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2314207232,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2314731520,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2314993664,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315124736,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315190272,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315223040,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315239424,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315247616,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315251712,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315253760,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315254784,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255296,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255552,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255680,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255744,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255776,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255792,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255800,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255804,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255806,32,FLEN)
NAN_BOXED(2126438831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255807,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165824,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165825,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165827,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165831,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165839,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165855,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165887,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165951,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25166079,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25166335,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25166847,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25167871,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25169919,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25174015,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25182207,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25198591,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25231359,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25296895,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25427967,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25690111,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(26214399,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(27262975,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(29360127,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(29360128,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(31457280,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(32505856,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33030144,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33292288,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33423360,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33488896,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33521664,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33538048,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33546240,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33550336,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33552384,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33553408,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33553920,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554176,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554304,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554368,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554400,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554416,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554424,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554428,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554430,32,FLEN)
NAN_BOXED(2126472891,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554431,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554432,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554433,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554435,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554439,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554447,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554463,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554495,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554559,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554687,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554943,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33555455,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33556479,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33558527,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33562623,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33570815,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33587199,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33619967,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33685503,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33816575,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(34078719,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(34603007,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(35651583,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(37748735,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(37748736,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(39845888,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(40894464,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41418752,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41680896,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41811968,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41877504,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41910272,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41926656,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41934848,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41938944,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41940992,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41942016,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41942528,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41942784,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41942912,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41942976,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943008,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943024,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943032,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943036,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943038,32,FLEN)
NAN_BOXED(2126478067,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943039,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701376,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701377,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701379,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701383,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701391,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701407,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701439,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701503,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701631,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701887,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281702399,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281703423,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281705471,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281709567,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281717759,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281734143,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281766911,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281832447,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281963519,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2282225663,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2282749951,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2283798527,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2285895679,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2285895680,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2287992832,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2289041408,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2289565696,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2289827840,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2289958912,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290024448,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290057216,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290073600,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290081792,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290085888,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290087936,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290088960,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290089472,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290089728,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290089856,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290089920,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290089952,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290089968,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290089976,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290089980,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290089982,32,FLEN)
NAN_BOXED(2126711960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290089983,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1971322880,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1971322881,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1971322883,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1971322887,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1971322895,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1971322911,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1971322943,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1971323007,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1971323135,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1971323391,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1971323903,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1971324927,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1971326975,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1971331071,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1971339263,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1971355647,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1971388415,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1971453951,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1971585023,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1971847167,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1972371455,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1973420031,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1975517183,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1975517184,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1977614336,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1978662912,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1979187200,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1979449344,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1979580416,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1979645952,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1979678720,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1979695104,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1979703296,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1979707392,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1979709440,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1979710464,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1979710976,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1979711232,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1979711360,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1979711424,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1979711456,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1979711472,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1979711480,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1979711484,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1979711486,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(1979711487,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2126721820,32,FLEN)
NAN_BOXED(1076354688,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038080,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038081,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038083,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038087,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038095,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038111,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038143,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038207,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038335,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038591,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181039103,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181040127,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181042175,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181046271,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181054463,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181070847,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181103615,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181169151,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181300223,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181562367,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2182086655,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2183135231,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2185232383,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2185232384,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2187329536,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2188378112,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2188902400,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189164544,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189295616,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189361152,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189393920,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189410304,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189418496,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189422592,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189424640,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189425664,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426176,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426432,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426560,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426624,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426656,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426672,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426680,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426684,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426686,32,FLEN)
NAN_BOXED(2126965070,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426687,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157549977,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2158269001,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159227699,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159467373,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159786939,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160346180,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160905420,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2161864118,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162583142,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163062491,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260864,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260865,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260867,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260871,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260879,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260895,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260927,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260991,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164261119,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164261375,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164261887,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164262911,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164264959,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164269055,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164277247,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164293631,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164326399,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164391935,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164523007,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164785151,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2165309439,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2166358015,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2168455167,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2168455168,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2170552320,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2171600896,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172125184,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172387328,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172518400,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172583936,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172616704,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172633088,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172641280,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172645376,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172647424,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172648448,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172648960,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649216,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649344,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649408,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649440,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649456,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649464,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649468,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649470,32,FLEN)
NAN_BOXED(2126990462,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649471,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4261412864,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4261412865,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4261412867,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4261412871,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4261412879,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4261412895,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4261412927,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4261412991,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4261413119,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4261413375,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4261413887,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4261414911,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4261416959,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4261421055,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4261429247,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4261445631,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4261478399,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4261543935,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4261675007,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4261937151,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4262461439,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4263510015,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4265607167,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4265607168,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4267704320,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4268752896,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4269277184,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4269539328,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4269670400,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4269735936,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4269768704,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4269785088,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4269793280,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4269797376,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4269799424,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4269800448,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4269800960,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4269801216,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4269801344,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4269801408,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4269801440,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4269801456,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4269801464,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4269801468,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4269801470,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4269801471,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2127011269,32,FLEN)
NAN_BOXED(3223594921,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269632,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269633,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269635,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269639,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269647,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269663,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269695,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269759,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269887,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243270143,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243270655,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243271679,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243273727,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243277823,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243286015,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243302399,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243335167,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243400703,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243531775,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243793919,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(244318207,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(245366783,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(247463935,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(247463936,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(249561088,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(250609664,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251133952,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251396096,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251527168,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251592704,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251625472,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251641856,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251650048,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251654144,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251656192,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251657216,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251657728,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251657984,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251658112,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251658176,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251658208,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251658224,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251658232,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251658236,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251658238,32,FLEN)
NAN_BOXED(2127049509,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251658239,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(612368384,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(612368385,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(612368387,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(612368391,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(612368399,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(612368415,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(612368447,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(612368511,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(612368639,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(612368895,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(612369407,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(612370431,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(612372479,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(612376575,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(612384767,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(612401151,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(612433919,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(612499455,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(612630527,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(612892671,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(613416959,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(614465535,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(616562687,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(616562688,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(618659840,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(619708416,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(620232704,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(620494848,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(620625920,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(620691456,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(620724224,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(620740608,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(620748800,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(620752896,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(620754944,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(620755968,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(620756480,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(620756736,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(620756864,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(620756928,32,FLEN)
NAN_BOXED(2127060493,32,FLEN)
NAN_BOXED(5358865,32,FLEN)
NAN_BOXED(620756960,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
