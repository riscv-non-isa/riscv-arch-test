
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:17:59 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmadd.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmadd_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmadd_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmadd_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_29184:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x124d93 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5ff934 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f124d93; op2val:0xbfdff934;
op3val:0xff199999; valaddr_reg:x3; val_offset:87552*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87552*0 + 3*0*FLEN/8, x4, x1, x2)

inst_29185:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x124d93 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5ff934 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f124d93; op2val:0xbfdff934;
op3val:0xff249249; valaddr_reg:x3; val_offset:87555*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87555*0 + 3*1*FLEN/8, x4, x1, x2)

inst_29186:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x124d93 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5ff934 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f124d93; op2val:0xbfdff934;
op3val:0xff333333; valaddr_reg:x3; val_offset:87558*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87558*0 + 3*2*FLEN/8, x4, x1, x2)

inst_29187:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x124d93 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5ff934 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f124d93; op2val:0xbfdff934;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:87561*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87561*0 + 3*3*FLEN/8, x4, x1, x2)

inst_29188:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x124d93 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5ff934 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f124d93; op2val:0xbfdff934;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:87564*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87564*0 + 3*4*FLEN/8, x4, x1, x2)

inst_29189:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x124d93 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5ff934 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f124d93; op2val:0xbfdff934;
op3val:0xff444444; valaddr_reg:x3; val_offset:87567*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87567*0 + 3*5*FLEN/8, x4, x1, x2)

inst_29190:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x124d93 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5ff934 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f124d93; op2val:0xbfdff934;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:87570*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87570*0 + 3*6*FLEN/8, x4, x1, x2)

inst_29191:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x124d93 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5ff934 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f124d93; op2val:0xbfdff934;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:87573*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87573*0 + 3*7*FLEN/8, x4, x1, x2)

inst_29192:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x124d93 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5ff934 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f124d93; op2val:0xbfdff934;
op3val:0xff666666; valaddr_reg:x3; val_offset:87576*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87576*0 + 3*8*FLEN/8, x4, x1, x2)

inst_29193:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x124d93 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5ff934 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f124d93; op2val:0xbfdff934;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:87579*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87579*0 + 3*9*FLEN/8, x4, x1, x2)

inst_29194:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x124d93 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5ff934 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f124d93; op2val:0xbfdff934;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:87582*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87582*0 + 3*10*FLEN/8, x4, x1, x2)

inst_29195:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x124d93 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5ff934 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f124d93; op2val:0xbfdff934;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:87585*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87585*0 + 3*11*FLEN/8, x4, x1, x2)

inst_29196:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x124d93 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5ff934 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f124d93; op2val:0xbfdff934;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:87588*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87588*0 + 3*12*FLEN/8, x4, x1, x2)

inst_29197:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xbf800001; valaddr_reg:x3; val_offset:87591*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87591*0 + 3*13*FLEN/8, x4, x1, x2)

inst_29198:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xbf800003; valaddr_reg:x3; val_offset:87594*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87594*0 + 3*14*FLEN/8, x4, x1, x2)

inst_29199:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xbf800007; valaddr_reg:x3; val_offset:87597*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87597*0 + 3*15*FLEN/8, x4, x1, x2)

inst_29200:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xbf999999; valaddr_reg:x3; val_offset:87600*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87600*0 + 3*16*FLEN/8, x4, x1, x2)

inst_29201:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:87603*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87603*0 + 3*17*FLEN/8, x4, x1, x2)

inst_29202:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:87606*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87606*0 + 3*18*FLEN/8, x4, x1, x2)

inst_29203:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:87609*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87609*0 + 3*19*FLEN/8, x4, x1, x2)

inst_29204:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:87612*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87612*0 + 3*20*FLEN/8, x4, x1, x2)

inst_29205:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:87615*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87615*0 + 3*21*FLEN/8, x4, x1, x2)

inst_29206:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:87618*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87618*0 + 3*22*FLEN/8, x4, x1, x2)

inst_29207:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:87621*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87621*0 + 3*23*FLEN/8, x4, x1, x2)

inst_29208:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:87624*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87624*0 + 3*24*FLEN/8, x4, x1, x2)

inst_29209:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:87627*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87627*0 + 3*25*FLEN/8, x4, x1, x2)

inst_29210:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:87630*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87630*0 + 3*26*FLEN/8, x4, x1, x2)

inst_29211:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:87633*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87633*0 + 3*27*FLEN/8, x4, x1, x2)

inst_29212:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:87636*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87636*0 + 3*28*FLEN/8, x4, x1, x2)

inst_29213:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf000000; valaddr_reg:x3; val_offset:87639*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87639*0 + 3*29*FLEN/8, x4, x1, x2)

inst_29214:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf000001; valaddr_reg:x3; val_offset:87642*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87642*0 + 3*30*FLEN/8, x4, x1, x2)

inst_29215:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf000003; valaddr_reg:x3; val_offset:87645*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87645*0 + 3*31*FLEN/8, x4, x1, x2)

inst_29216:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf000007; valaddr_reg:x3; val_offset:87648*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87648*0 + 3*32*FLEN/8, x4, x1, x2)

inst_29217:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf00000f; valaddr_reg:x3; val_offset:87651*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87651*0 + 3*33*FLEN/8, x4, x1, x2)

inst_29218:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf00001f; valaddr_reg:x3; val_offset:87654*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87654*0 + 3*34*FLEN/8, x4, x1, x2)

inst_29219:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf00003f; valaddr_reg:x3; val_offset:87657*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87657*0 + 3*35*FLEN/8, x4, x1, x2)

inst_29220:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf00007f; valaddr_reg:x3; val_offset:87660*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87660*0 + 3*36*FLEN/8, x4, x1, x2)

inst_29221:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf0000ff; valaddr_reg:x3; val_offset:87663*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87663*0 + 3*37*FLEN/8, x4, x1, x2)

inst_29222:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf0001ff; valaddr_reg:x3; val_offset:87666*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87666*0 + 3*38*FLEN/8, x4, x1, x2)

inst_29223:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf0003ff; valaddr_reg:x3; val_offset:87669*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87669*0 + 3*39*FLEN/8, x4, x1, x2)

inst_29224:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf0007ff; valaddr_reg:x3; val_offset:87672*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87672*0 + 3*40*FLEN/8, x4, x1, x2)

inst_29225:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf000fff; valaddr_reg:x3; val_offset:87675*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87675*0 + 3*41*FLEN/8, x4, x1, x2)

inst_29226:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf001fff; valaddr_reg:x3; val_offset:87678*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87678*0 + 3*42*FLEN/8, x4, x1, x2)

inst_29227:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf003fff; valaddr_reg:x3; val_offset:87681*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87681*0 + 3*43*FLEN/8, x4, x1, x2)

inst_29228:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf007fff; valaddr_reg:x3; val_offset:87684*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87684*0 + 3*44*FLEN/8, x4, x1, x2)

inst_29229:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf00ffff; valaddr_reg:x3; val_offset:87687*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87687*0 + 3*45*FLEN/8, x4, x1, x2)

inst_29230:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf01ffff; valaddr_reg:x3; val_offset:87690*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87690*0 + 3*46*FLEN/8, x4, x1, x2)

inst_29231:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf03ffff; valaddr_reg:x3; val_offset:87693*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87693*0 + 3*47*FLEN/8, x4, x1, x2)

inst_29232:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf07ffff; valaddr_reg:x3; val_offset:87696*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87696*0 + 3*48*FLEN/8, x4, x1, x2)

inst_29233:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf0fffff; valaddr_reg:x3; val_offset:87699*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87699*0 + 3*49*FLEN/8, x4, x1, x2)

inst_29234:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf1fffff; valaddr_reg:x3; val_offset:87702*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87702*0 + 3*50*FLEN/8, x4, x1, x2)

inst_29235:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf3fffff; valaddr_reg:x3; val_offset:87705*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87705*0 + 3*51*FLEN/8, x4, x1, x2)

inst_29236:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf400000; valaddr_reg:x3; val_offset:87708*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87708*0 + 3*52*FLEN/8, x4, x1, x2)

inst_29237:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf600000; valaddr_reg:x3; val_offset:87711*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87711*0 + 3*53*FLEN/8, x4, x1, x2)

inst_29238:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf700000; valaddr_reg:x3; val_offset:87714*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87714*0 + 3*54*FLEN/8, x4, x1, x2)

inst_29239:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf780000; valaddr_reg:x3; val_offset:87717*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87717*0 + 3*55*FLEN/8, x4, x1, x2)

inst_29240:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf7c0000; valaddr_reg:x3; val_offset:87720*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87720*0 + 3*56*FLEN/8, x4, x1, x2)

inst_29241:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf7e0000; valaddr_reg:x3; val_offset:87723*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87723*0 + 3*57*FLEN/8, x4, x1, x2)

inst_29242:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf7f0000; valaddr_reg:x3; val_offset:87726*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87726*0 + 3*58*FLEN/8, x4, x1, x2)

inst_29243:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf7f8000; valaddr_reg:x3; val_offset:87729*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87729*0 + 3*59*FLEN/8, x4, x1, x2)

inst_29244:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf7fc000; valaddr_reg:x3; val_offset:87732*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87732*0 + 3*60*FLEN/8, x4, x1, x2)

inst_29245:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf7fe000; valaddr_reg:x3; val_offset:87735*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87735*0 + 3*61*FLEN/8, x4, x1, x2)

inst_29246:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf7ff000; valaddr_reg:x3; val_offset:87738*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87738*0 + 3*62*FLEN/8, x4, x1, x2)

inst_29247:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf7ff800; valaddr_reg:x3; val_offset:87741*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87741*0 + 3*63*FLEN/8, x4, x1, x2)

inst_29248:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf7ffc00; valaddr_reg:x3; val_offset:87744*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87744*0 + 3*64*FLEN/8, x4, x1, x2)

inst_29249:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf7ffe00; valaddr_reg:x3; val_offset:87747*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87747*0 + 3*65*FLEN/8, x4, x1, x2)

inst_29250:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf7fff00; valaddr_reg:x3; val_offset:87750*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87750*0 + 3*66*FLEN/8, x4, x1, x2)

inst_29251:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf7fff80; valaddr_reg:x3; val_offset:87753*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87753*0 + 3*67*FLEN/8, x4, x1, x2)

inst_29252:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf7fffc0; valaddr_reg:x3; val_offset:87756*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87756*0 + 3*68*FLEN/8, x4, x1, x2)

inst_29253:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf7fffe0; valaddr_reg:x3; val_offset:87759*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87759*0 + 3*69*FLEN/8, x4, x1, x2)

inst_29254:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf7ffff0; valaddr_reg:x3; val_offset:87762*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87762*0 + 3*70*FLEN/8, x4, x1, x2)

inst_29255:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf7ffff8; valaddr_reg:x3; val_offset:87765*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87765*0 + 3*71*FLEN/8, x4, x1, x2)

inst_29256:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf7ffffc; valaddr_reg:x3; val_offset:87768*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87768*0 + 3*72*FLEN/8, x4, x1, x2)

inst_29257:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf7ffffe; valaddr_reg:x3; val_offset:87771*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87771*0 + 3*73*FLEN/8, x4, x1, x2)

inst_29258:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x37fb13 and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f125603; op2val:0x8037fb13;
op3val:0xdf7fffff; valaddr_reg:x3; val_offset:87774*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87774*0 + 3*74*FLEN/8, x4, x1, x2)

inst_29259:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x3f800001; valaddr_reg:x3; val_offset:87777*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87777*0 + 3*75*FLEN/8, x4, x1, x2)

inst_29260:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x3f800003; valaddr_reg:x3; val_offset:87780*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87780*0 + 3*76*FLEN/8, x4, x1, x2)

inst_29261:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x3f800007; valaddr_reg:x3; val_offset:87783*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87783*0 + 3*77*FLEN/8, x4, x1, x2)

inst_29262:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x3f999999; valaddr_reg:x3; val_offset:87786*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87786*0 + 3*78*FLEN/8, x4, x1, x2)

inst_29263:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:87789*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87789*0 + 3*79*FLEN/8, x4, x1, x2)

inst_29264:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:87792*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87792*0 + 3*80*FLEN/8, x4, x1, x2)

inst_29265:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:87795*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87795*0 + 3*81*FLEN/8, x4, x1, x2)

inst_29266:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:87798*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87798*0 + 3*82*FLEN/8, x4, x1, x2)

inst_29267:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:87801*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87801*0 + 3*83*FLEN/8, x4, x1, x2)

inst_29268:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:87804*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87804*0 + 3*84*FLEN/8, x4, x1, x2)

inst_29269:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:87807*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87807*0 + 3*85*FLEN/8, x4, x1, x2)

inst_29270:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:87810*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87810*0 + 3*86*FLEN/8, x4, x1, x2)

inst_29271:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:87813*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87813*0 + 3*87*FLEN/8, x4, x1, x2)

inst_29272:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:87816*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87816*0 + 3*88*FLEN/8, x4, x1, x2)

inst_29273:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:87819*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87819*0 + 3*89*FLEN/8, x4, x1, x2)

inst_29274:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:87822*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87822*0 + 3*90*FLEN/8, x4, x1, x2)

inst_29275:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x45800000; valaddr_reg:x3; val_offset:87825*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87825*0 + 3*91*FLEN/8, x4, x1, x2)

inst_29276:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x45800001; valaddr_reg:x3; val_offset:87828*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87828*0 + 3*92*FLEN/8, x4, x1, x2)

inst_29277:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x45800003; valaddr_reg:x3; val_offset:87831*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87831*0 + 3*93*FLEN/8, x4, x1, x2)

inst_29278:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x45800007; valaddr_reg:x3; val_offset:87834*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87834*0 + 3*94*FLEN/8, x4, x1, x2)

inst_29279:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x4580000f; valaddr_reg:x3; val_offset:87837*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87837*0 + 3*95*FLEN/8, x4, x1, x2)

inst_29280:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x4580001f; valaddr_reg:x3; val_offset:87840*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87840*0 + 3*96*FLEN/8, x4, x1, x2)

inst_29281:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x4580003f; valaddr_reg:x3; val_offset:87843*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87843*0 + 3*97*FLEN/8, x4, x1, x2)

inst_29282:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x4580007f; valaddr_reg:x3; val_offset:87846*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87846*0 + 3*98*FLEN/8, x4, x1, x2)

inst_29283:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x458000ff; valaddr_reg:x3; val_offset:87849*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87849*0 + 3*99*FLEN/8, x4, x1, x2)

inst_29284:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x458001ff; valaddr_reg:x3; val_offset:87852*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87852*0 + 3*100*FLEN/8, x4, x1, x2)

inst_29285:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x458003ff; valaddr_reg:x3; val_offset:87855*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87855*0 + 3*101*FLEN/8, x4, x1, x2)

inst_29286:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x458007ff; valaddr_reg:x3; val_offset:87858*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87858*0 + 3*102*FLEN/8, x4, x1, x2)

inst_29287:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x45800fff; valaddr_reg:x3; val_offset:87861*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87861*0 + 3*103*FLEN/8, x4, x1, x2)

inst_29288:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x45801fff; valaddr_reg:x3; val_offset:87864*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87864*0 + 3*104*FLEN/8, x4, x1, x2)

inst_29289:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x45803fff; valaddr_reg:x3; val_offset:87867*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87867*0 + 3*105*FLEN/8, x4, x1, x2)

inst_29290:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x45807fff; valaddr_reg:x3; val_offset:87870*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87870*0 + 3*106*FLEN/8, x4, x1, x2)

inst_29291:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x4580ffff; valaddr_reg:x3; val_offset:87873*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87873*0 + 3*107*FLEN/8, x4, x1, x2)

inst_29292:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x4581ffff; valaddr_reg:x3; val_offset:87876*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87876*0 + 3*108*FLEN/8, x4, x1, x2)

inst_29293:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x4583ffff; valaddr_reg:x3; val_offset:87879*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87879*0 + 3*109*FLEN/8, x4, x1, x2)

inst_29294:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x4587ffff; valaddr_reg:x3; val_offset:87882*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87882*0 + 3*110*FLEN/8, x4, x1, x2)

inst_29295:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x458fffff; valaddr_reg:x3; val_offset:87885*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87885*0 + 3*111*FLEN/8, x4, x1, x2)

inst_29296:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x459fffff; valaddr_reg:x3; val_offset:87888*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87888*0 + 3*112*FLEN/8, x4, x1, x2)

inst_29297:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x45bfffff; valaddr_reg:x3; val_offset:87891*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87891*0 + 3*113*FLEN/8, x4, x1, x2)

inst_29298:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x45c00000; valaddr_reg:x3; val_offset:87894*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87894*0 + 3*114*FLEN/8, x4, x1, x2)

inst_29299:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x45e00000; valaddr_reg:x3; val_offset:87897*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87897*0 + 3*115*FLEN/8, x4, x1, x2)

inst_29300:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x45f00000; valaddr_reg:x3; val_offset:87900*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87900*0 + 3*116*FLEN/8, x4, x1, x2)

inst_29301:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x45f80000; valaddr_reg:x3; val_offset:87903*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87903*0 + 3*117*FLEN/8, x4, x1, x2)

inst_29302:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x45fc0000; valaddr_reg:x3; val_offset:87906*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87906*0 + 3*118*FLEN/8, x4, x1, x2)

inst_29303:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x45fe0000; valaddr_reg:x3; val_offset:87909*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87909*0 + 3*119*FLEN/8, x4, x1, x2)

inst_29304:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x45ff0000; valaddr_reg:x3; val_offset:87912*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87912*0 + 3*120*FLEN/8, x4, x1, x2)

inst_29305:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x45ff8000; valaddr_reg:x3; val_offset:87915*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87915*0 + 3*121*FLEN/8, x4, x1, x2)

inst_29306:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x45ffc000; valaddr_reg:x3; val_offset:87918*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87918*0 + 3*122*FLEN/8, x4, x1, x2)

inst_29307:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x45ffe000; valaddr_reg:x3; val_offset:87921*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87921*0 + 3*123*FLEN/8, x4, x1, x2)

inst_29308:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x45fff000; valaddr_reg:x3; val_offset:87924*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87924*0 + 3*124*FLEN/8, x4, x1, x2)

inst_29309:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x45fff800; valaddr_reg:x3; val_offset:87927*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87927*0 + 3*125*FLEN/8, x4, x1, x2)

inst_29310:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x45fffc00; valaddr_reg:x3; val_offset:87930*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87930*0 + 3*126*FLEN/8, x4, x1, x2)

inst_29311:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x45fffe00; valaddr_reg:x3; val_offset:87933*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87933*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_29312:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x45ffff00; valaddr_reg:x3; val_offset:87936*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87936*0 + 3*128*FLEN/8, x4, x1, x2)

inst_29313:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x45ffff80; valaddr_reg:x3; val_offset:87939*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87939*0 + 3*129*FLEN/8, x4, x1, x2)

inst_29314:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x45ffffc0; valaddr_reg:x3; val_offset:87942*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87942*0 + 3*130*FLEN/8, x4, x1, x2)

inst_29315:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x45ffffe0; valaddr_reg:x3; val_offset:87945*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87945*0 + 3*131*FLEN/8, x4, x1, x2)

inst_29316:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x45fffff0; valaddr_reg:x3; val_offset:87948*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87948*0 + 3*132*FLEN/8, x4, x1, x2)

inst_29317:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x45fffff8; valaddr_reg:x3; val_offset:87951*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87951*0 + 3*133*FLEN/8, x4, x1, x2)

inst_29318:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x45fffffc; valaddr_reg:x3; val_offset:87954*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87954*0 + 3*134*FLEN/8, x4, x1, x2)

inst_29319:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x45fffffe; valaddr_reg:x3; val_offset:87957*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87957*0 + 3*135*FLEN/8, x4, x1, x2)

inst_29320:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1354b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x379a4c and fs3 == 0 and fe3 == 0x8b and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1354b4; op2val:0x379a4c;
op3val:0x45ffffff; valaddr_reg:x3; val_offset:87960*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87960*0 + 3*136*FLEN/8, x4, x1, x2)

inst_29321:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe5000000; valaddr_reg:x3; val_offset:87963*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87963*0 + 3*137*FLEN/8, x4, x1, x2)

inst_29322:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe5000001; valaddr_reg:x3; val_offset:87966*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87966*0 + 3*138*FLEN/8, x4, x1, x2)

inst_29323:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe5000003; valaddr_reg:x3; val_offset:87969*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87969*0 + 3*139*FLEN/8, x4, x1, x2)

inst_29324:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe5000007; valaddr_reg:x3; val_offset:87972*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87972*0 + 3*140*FLEN/8, x4, x1, x2)

inst_29325:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe500000f; valaddr_reg:x3; val_offset:87975*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87975*0 + 3*141*FLEN/8, x4, x1, x2)

inst_29326:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe500001f; valaddr_reg:x3; val_offset:87978*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87978*0 + 3*142*FLEN/8, x4, x1, x2)

inst_29327:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe500003f; valaddr_reg:x3; val_offset:87981*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87981*0 + 3*143*FLEN/8, x4, x1, x2)

inst_29328:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe500007f; valaddr_reg:x3; val_offset:87984*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87984*0 + 3*144*FLEN/8, x4, x1, x2)

inst_29329:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe50000ff; valaddr_reg:x3; val_offset:87987*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87987*0 + 3*145*FLEN/8, x4, x1, x2)

inst_29330:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe50001ff; valaddr_reg:x3; val_offset:87990*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87990*0 + 3*146*FLEN/8, x4, x1, x2)

inst_29331:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe50003ff; valaddr_reg:x3; val_offset:87993*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87993*0 + 3*147*FLEN/8, x4, x1, x2)

inst_29332:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe50007ff; valaddr_reg:x3; val_offset:87996*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87996*0 + 3*148*FLEN/8, x4, x1, x2)

inst_29333:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe5000fff; valaddr_reg:x3; val_offset:87999*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 87999*0 + 3*149*FLEN/8, x4, x1, x2)

inst_29334:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe5001fff; valaddr_reg:x3; val_offset:88002*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88002*0 + 3*150*FLEN/8, x4, x1, x2)

inst_29335:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe5003fff; valaddr_reg:x3; val_offset:88005*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88005*0 + 3*151*FLEN/8, x4, x1, x2)

inst_29336:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe5007fff; valaddr_reg:x3; val_offset:88008*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88008*0 + 3*152*FLEN/8, x4, x1, x2)

inst_29337:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe500ffff; valaddr_reg:x3; val_offset:88011*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88011*0 + 3*153*FLEN/8, x4, x1, x2)

inst_29338:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe501ffff; valaddr_reg:x3; val_offset:88014*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88014*0 + 3*154*FLEN/8, x4, x1, x2)

inst_29339:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe503ffff; valaddr_reg:x3; val_offset:88017*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88017*0 + 3*155*FLEN/8, x4, x1, x2)

inst_29340:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe507ffff; valaddr_reg:x3; val_offset:88020*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88020*0 + 3*156*FLEN/8, x4, x1, x2)

inst_29341:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe50fffff; valaddr_reg:x3; val_offset:88023*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88023*0 + 3*157*FLEN/8, x4, x1, x2)

inst_29342:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe51fffff; valaddr_reg:x3; val_offset:88026*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88026*0 + 3*158*FLEN/8, x4, x1, x2)

inst_29343:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe53fffff; valaddr_reg:x3; val_offset:88029*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88029*0 + 3*159*FLEN/8, x4, x1, x2)

inst_29344:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe5400000; valaddr_reg:x3; val_offset:88032*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88032*0 + 3*160*FLEN/8, x4, x1, x2)

inst_29345:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe5600000; valaddr_reg:x3; val_offset:88035*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88035*0 + 3*161*FLEN/8, x4, x1, x2)

inst_29346:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe5700000; valaddr_reg:x3; val_offset:88038*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88038*0 + 3*162*FLEN/8, x4, x1, x2)

inst_29347:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe5780000; valaddr_reg:x3; val_offset:88041*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88041*0 + 3*163*FLEN/8, x4, x1, x2)

inst_29348:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe57c0000; valaddr_reg:x3; val_offset:88044*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88044*0 + 3*164*FLEN/8, x4, x1, x2)

inst_29349:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe57e0000; valaddr_reg:x3; val_offset:88047*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88047*0 + 3*165*FLEN/8, x4, x1, x2)

inst_29350:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe57f0000; valaddr_reg:x3; val_offset:88050*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88050*0 + 3*166*FLEN/8, x4, x1, x2)

inst_29351:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe57f8000; valaddr_reg:x3; val_offset:88053*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88053*0 + 3*167*FLEN/8, x4, x1, x2)

inst_29352:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe57fc000; valaddr_reg:x3; val_offset:88056*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88056*0 + 3*168*FLEN/8, x4, x1, x2)

inst_29353:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe57fe000; valaddr_reg:x3; val_offset:88059*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88059*0 + 3*169*FLEN/8, x4, x1, x2)

inst_29354:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe57ff000; valaddr_reg:x3; val_offset:88062*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88062*0 + 3*170*FLEN/8, x4, x1, x2)

inst_29355:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe57ff800; valaddr_reg:x3; val_offset:88065*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88065*0 + 3*171*FLEN/8, x4, x1, x2)

inst_29356:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe57ffc00; valaddr_reg:x3; val_offset:88068*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88068*0 + 3*172*FLEN/8, x4, x1, x2)

inst_29357:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe57ffe00; valaddr_reg:x3; val_offset:88071*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88071*0 + 3*173*FLEN/8, x4, x1, x2)

inst_29358:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe57fff00; valaddr_reg:x3; val_offset:88074*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88074*0 + 3*174*FLEN/8, x4, x1, x2)

inst_29359:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe57fff80; valaddr_reg:x3; val_offset:88077*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88077*0 + 3*175*FLEN/8, x4, x1, x2)

inst_29360:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe57fffc0; valaddr_reg:x3; val_offset:88080*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88080*0 + 3*176*FLEN/8, x4, x1, x2)

inst_29361:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe57fffe0; valaddr_reg:x3; val_offset:88083*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88083*0 + 3*177*FLEN/8, x4, x1, x2)

inst_29362:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe57ffff0; valaddr_reg:x3; val_offset:88086*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88086*0 + 3*178*FLEN/8, x4, x1, x2)

inst_29363:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe57ffff8; valaddr_reg:x3; val_offset:88089*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88089*0 + 3*179*FLEN/8, x4, x1, x2)

inst_29364:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe57ffffc; valaddr_reg:x3; val_offset:88092*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88092*0 + 3*180*FLEN/8, x4, x1, x2)

inst_29365:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe57ffffe; valaddr_reg:x3; val_offset:88095*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88095*0 + 3*181*FLEN/8, x4, x1, x2)

inst_29366:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xca and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xe57fffff; valaddr_reg:x3; val_offset:88098*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88098*0 + 3*182*FLEN/8, x4, x1, x2)

inst_29367:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xff000001; valaddr_reg:x3; val_offset:88101*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88101*0 + 3*183*FLEN/8, x4, x1, x2)

inst_29368:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xff000003; valaddr_reg:x3; val_offset:88104*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88104*0 + 3*184*FLEN/8, x4, x1, x2)

inst_29369:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xff000007; valaddr_reg:x3; val_offset:88107*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88107*0 + 3*185*FLEN/8, x4, x1, x2)

inst_29370:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xff199999; valaddr_reg:x3; val_offset:88110*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88110*0 + 3*186*FLEN/8, x4, x1, x2)

inst_29371:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xff249249; valaddr_reg:x3; val_offset:88113*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88113*0 + 3*187*FLEN/8, x4, x1, x2)

inst_29372:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xff333333; valaddr_reg:x3; val_offset:88116*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88116*0 + 3*188*FLEN/8, x4, x1, x2)

inst_29373:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:88119*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88119*0 + 3*189*FLEN/8, x4, x1, x2)

inst_29374:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:88122*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88122*0 + 3*190*FLEN/8, x4, x1, x2)

inst_29375:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xff444444; valaddr_reg:x3; val_offset:88125*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88125*0 + 3*191*FLEN/8, x4, x1, x2)

inst_29376:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:88128*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88128*0 + 3*192*FLEN/8, x4, x1, x2)

inst_29377:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:88131*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88131*0 + 3*193*FLEN/8, x4, x1, x2)

inst_29378:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xff666666; valaddr_reg:x3; val_offset:88134*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88134*0 + 3*194*FLEN/8, x4, x1, x2)

inst_29379:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:88137*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88137*0 + 3*195*FLEN/8, x4, x1, x2)

inst_29380:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:88140*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88140*0 + 3*196*FLEN/8, x4, x1, x2)

inst_29381:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:88143*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88143*0 + 3*197*FLEN/8, x4, x1, x2)

inst_29382:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x136313 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e5383 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f136313; op2val:0xbfde5383;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:88146*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88146*0 + 3*198*FLEN/8, x4, x1, x2)

inst_29383:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xec800000; valaddr_reg:x3; val_offset:88149*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88149*0 + 3*199*FLEN/8, x4, x1, x2)

inst_29384:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xec800001; valaddr_reg:x3; val_offset:88152*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88152*0 + 3*200*FLEN/8, x4, x1, x2)

inst_29385:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xec800003; valaddr_reg:x3; val_offset:88155*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88155*0 + 3*201*FLEN/8, x4, x1, x2)

inst_29386:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xec800007; valaddr_reg:x3; val_offset:88158*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88158*0 + 3*202*FLEN/8, x4, x1, x2)

inst_29387:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xec80000f; valaddr_reg:x3; val_offset:88161*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88161*0 + 3*203*FLEN/8, x4, x1, x2)

inst_29388:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xec80001f; valaddr_reg:x3; val_offset:88164*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88164*0 + 3*204*FLEN/8, x4, x1, x2)

inst_29389:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xec80003f; valaddr_reg:x3; val_offset:88167*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88167*0 + 3*205*FLEN/8, x4, x1, x2)

inst_29390:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xec80007f; valaddr_reg:x3; val_offset:88170*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88170*0 + 3*206*FLEN/8, x4, x1, x2)

inst_29391:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xec8000ff; valaddr_reg:x3; val_offset:88173*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88173*0 + 3*207*FLEN/8, x4, x1, x2)

inst_29392:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xec8001ff; valaddr_reg:x3; val_offset:88176*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88176*0 + 3*208*FLEN/8, x4, x1, x2)

inst_29393:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xec8003ff; valaddr_reg:x3; val_offset:88179*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88179*0 + 3*209*FLEN/8, x4, x1, x2)

inst_29394:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xec8007ff; valaddr_reg:x3; val_offset:88182*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88182*0 + 3*210*FLEN/8, x4, x1, x2)

inst_29395:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xec800fff; valaddr_reg:x3; val_offset:88185*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88185*0 + 3*211*FLEN/8, x4, x1, x2)

inst_29396:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xec801fff; valaddr_reg:x3; val_offset:88188*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88188*0 + 3*212*FLEN/8, x4, x1, x2)

inst_29397:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xec803fff; valaddr_reg:x3; val_offset:88191*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88191*0 + 3*213*FLEN/8, x4, x1, x2)

inst_29398:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xec807fff; valaddr_reg:x3; val_offset:88194*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88194*0 + 3*214*FLEN/8, x4, x1, x2)

inst_29399:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xec80ffff; valaddr_reg:x3; val_offset:88197*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88197*0 + 3*215*FLEN/8, x4, x1, x2)

inst_29400:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xec81ffff; valaddr_reg:x3; val_offset:88200*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88200*0 + 3*216*FLEN/8, x4, x1, x2)

inst_29401:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xec83ffff; valaddr_reg:x3; val_offset:88203*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88203*0 + 3*217*FLEN/8, x4, x1, x2)

inst_29402:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xec87ffff; valaddr_reg:x3; val_offset:88206*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88206*0 + 3*218*FLEN/8, x4, x1, x2)

inst_29403:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xec8fffff; valaddr_reg:x3; val_offset:88209*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88209*0 + 3*219*FLEN/8, x4, x1, x2)

inst_29404:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xec9fffff; valaddr_reg:x3; val_offset:88212*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88212*0 + 3*220*FLEN/8, x4, x1, x2)

inst_29405:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xecbfffff; valaddr_reg:x3; val_offset:88215*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88215*0 + 3*221*FLEN/8, x4, x1, x2)

inst_29406:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xecc00000; valaddr_reg:x3; val_offset:88218*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88218*0 + 3*222*FLEN/8, x4, x1, x2)

inst_29407:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xece00000; valaddr_reg:x3; val_offset:88221*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88221*0 + 3*223*FLEN/8, x4, x1, x2)

inst_29408:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xecf00000; valaddr_reg:x3; val_offset:88224*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88224*0 + 3*224*FLEN/8, x4, x1, x2)

inst_29409:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xecf80000; valaddr_reg:x3; val_offset:88227*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88227*0 + 3*225*FLEN/8, x4, x1, x2)

inst_29410:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xecfc0000; valaddr_reg:x3; val_offset:88230*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88230*0 + 3*226*FLEN/8, x4, x1, x2)

inst_29411:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xecfe0000; valaddr_reg:x3; val_offset:88233*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88233*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29412:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xecff0000; valaddr_reg:x3; val_offset:88236*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88236*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29413:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xecff8000; valaddr_reg:x3; val_offset:88239*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88239*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29414:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xecffc000; valaddr_reg:x3; val_offset:88242*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88242*0 + 3*230*FLEN/8, x4, x1, x2)

inst_29415:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xecffe000; valaddr_reg:x3; val_offset:88245*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88245*0 + 3*231*FLEN/8, x4, x1, x2)

inst_29416:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xecfff000; valaddr_reg:x3; val_offset:88248*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88248*0 + 3*232*FLEN/8, x4, x1, x2)

inst_29417:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xecfff800; valaddr_reg:x3; val_offset:88251*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88251*0 + 3*233*FLEN/8, x4, x1, x2)

inst_29418:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xecfffc00; valaddr_reg:x3; val_offset:88254*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88254*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29419:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xecfffe00; valaddr_reg:x3; val_offset:88257*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88257*0 + 3*235*FLEN/8, x4, x1, x2)

inst_29420:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xecffff00; valaddr_reg:x3; val_offset:88260*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88260*0 + 3*236*FLEN/8, x4, x1, x2)

inst_29421:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xecffff80; valaddr_reg:x3; val_offset:88263*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88263*0 + 3*237*FLEN/8, x4, x1, x2)

inst_29422:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xecffffc0; valaddr_reg:x3; val_offset:88266*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88266*0 + 3*238*FLEN/8, x4, x1, x2)

inst_29423:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xecffffe0; valaddr_reg:x3; val_offset:88269*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88269*0 + 3*239*FLEN/8, x4, x1, x2)

inst_29424:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xecfffff0; valaddr_reg:x3; val_offset:88272*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88272*0 + 3*240*FLEN/8, x4, x1, x2)

inst_29425:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xecfffff8; valaddr_reg:x3; val_offset:88275*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88275*0 + 3*241*FLEN/8, x4, x1, x2)

inst_29426:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xecfffffc; valaddr_reg:x3; val_offset:88278*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88278*0 + 3*242*FLEN/8, x4, x1, x2)

inst_29427:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xecfffffe; valaddr_reg:x3; val_offset:88281*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88281*0 + 3*243*FLEN/8, x4, x1, x2)

inst_29428:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xd9 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xecffffff; valaddr_reg:x3; val_offset:88284*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88284*0 + 3*244*FLEN/8, x4, x1, x2)

inst_29429:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xff000001; valaddr_reg:x3; val_offset:88287*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88287*0 + 3*245*FLEN/8, x4, x1, x2)

inst_29430:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xff000003; valaddr_reg:x3; val_offset:88290*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88290*0 + 3*246*FLEN/8, x4, x1, x2)

inst_29431:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xff000007; valaddr_reg:x3; val_offset:88293*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88293*0 + 3*247*FLEN/8, x4, x1, x2)

inst_29432:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xff199999; valaddr_reg:x3; val_offset:88296*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88296*0 + 3*248*FLEN/8, x4, x1, x2)

inst_29433:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xff249249; valaddr_reg:x3; val_offset:88299*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88299*0 + 3*249*FLEN/8, x4, x1, x2)

inst_29434:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xff333333; valaddr_reg:x3; val_offset:88302*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88302*0 + 3*250*FLEN/8, x4, x1, x2)

inst_29435:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:88305*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88305*0 + 3*251*FLEN/8, x4, x1, x2)

inst_29436:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:88308*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88308*0 + 3*252*FLEN/8, x4, x1, x2)

inst_29437:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xff444444; valaddr_reg:x3; val_offset:88311*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88311*0 + 3*253*FLEN/8, x4, x1, x2)

inst_29438:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:88314*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88314*0 + 3*254*FLEN/8, x4, x1, x2)

inst_29439:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:88317*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88317*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_29440:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xff666666; valaddr_reg:x3; val_offset:88320*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88320*0 + 3*256*FLEN/8, x4, x1, x2)

inst_29441:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:88323*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88323*0 + 3*257*FLEN/8, x4, x1, x2)

inst_29442:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:88326*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88326*0 + 3*258*FLEN/8, x4, x1, x2)

inst_29443:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:88329*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88329*0 + 3*259*FLEN/8, x4, x1, x2)

inst_29444:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1393e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5e09f1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1393e8; op2val:0xbfde09f1;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:88332*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88332*0 + 3*260*FLEN/8, x4, x1, x2)

inst_29445:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa000000; valaddr_reg:x3; val_offset:88335*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88335*0 + 3*261*FLEN/8, x4, x1, x2)

inst_29446:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa000001; valaddr_reg:x3; val_offset:88338*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88338*0 + 3*262*FLEN/8, x4, x1, x2)

inst_29447:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa000003; valaddr_reg:x3; val_offset:88341*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88341*0 + 3*263*FLEN/8, x4, x1, x2)

inst_29448:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa000007; valaddr_reg:x3; val_offset:88344*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88344*0 + 3*264*FLEN/8, x4, x1, x2)

inst_29449:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa00000f; valaddr_reg:x3; val_offset:88347*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88347*0 + 3*265*FLEN/8, x4, x1, x2)

inst_29450:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa00001f; valaddr_reg:x3; val_offset:88350*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88350*0 + 3*266*FLEN/8, x4, x1, x2)

inst_29451:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa00003f; valaddr_reg:x3; val_offset:88353*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88353*0 + 3*267*FLEN/8, x4, x1, x2)

inst_29452:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa00007f; valaddr_reg:x3; val_offset:88356*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88356*0 + 3*268*FLEN/8, x4, x1, x2)

inst_29453:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa0000ff; valaddr_reg:x3; val_offset:88359*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88359*0 + 3*269*FLEN/8, x4, x1, x2)

inst_29454:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa0001ff; valaddr_reg:x3; val_offset:88362*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88362*0 + 3*270*FLEN/8, x4, x1, x2)

inst_29455:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa0003ff; valaddr_reg:x3; val_offset:88365*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88365*0 + 3*271*FLEN/8, x4, x1, x2)

inst_29456:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa0007ff; valaddr_reg:x3; val_offset:88368*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88368*0 + 3*272*FLEN/8, x4, x1, x2)

inst_29457:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa000fff; valaddr_reg:x3; val_offset:88371*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88371*0 + 3*273*FLEN/8, x4, x1, x2)

inst_29458:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa001fff; valaddr_reg:x3; val_offset:88374*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88374*0 + 3*274*FLEN/8, x4, x1, x2)

inst_29459:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa003fff; valaddr_reg:x3; val_offset:88377*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88377*0 + 3*275*FLEN/8, x4, x1, x2)

inst_29460:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa007fff; valaddr_reg:x3; val_offset:88380*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88380*0 + 3*276*FLEN/8, x4, x1, x2)

inst_29461:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa00ffff; valaddr_reg:x3; val_offset:88383*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88383*0 + 3*277*FLEN/8, x4, x1, x2)

inst_29462:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa01ffff; valaddr_reg:x3; val_offset:88386*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88386*0 + 3*278*FLEN/8, x4, x1, x2)

inst_29463:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa03ffff; valaddr_reg:x3; val_offset:88389*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88389*0 + 3*279*FLEN/8, x4, x1, x2)

inst_29464:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa07ffff; valaddr_reg:x3; val_offset:88392*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88392*0 + 3*280*FLEN/8, x4, x1, x2)

inst_29465:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa0fffff; valaddr_reg:x3; val_offset:88395*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88395*0 + 3*281*FLEN/8, x4, x1, x2)

inst_29466:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa1fffff; valaddr_reg:x3; val_offset:88398*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88398*0 + 3*282*FLEN/8, x4, x1, x2)

inst_29467:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa3fffff; valaddr_reg:x3; val_offset:88401*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88401*0 + 3*283*FLEN/8, x4, x1, x2)

inst_29468:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa400000; valaddr_reg:x3; val_offset:88404*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88404*0 + 3*284*FLEN/8, x4, x1, x2)

inst_29469:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa600000; valaddr_reg:x3; val_offset:88407*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88407*0 + 3*285*FLEN/8, x4, x1, x2)

inst_29470:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa700000; valaddr_reg:x3; val_offset:88410*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88410*0 + 3*286*FLEN/8, x4, x1, x2)

inst_29471:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa780000; valaddr_reg:x3; val_offset:88413*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88413*0 + 3*287*FLEN/8, x4, x1, x2)

inst_29472:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa7c0000; valaddr_reg:x3; val_offset:88416*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88416*0 + 3*288*FLEN/8, x4, x1, x2)

inst_29473:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa7e0000; valaddr_reg:x3; val_offset:88419*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88419*0 + 3*289*FLEN/8, x4, x1, x2)

inst_29474:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa7f0000; valaddr_reg:x3; val_offset:88422*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88422*0 + 3*290*FLEN/8, x4, x1, x2)

inst_29475:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa7f8000; valaddr_reg:x3; val_offset:88425*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88425*0 + 3*291*FLEN/8, x4, x1, x2)

inst_29476:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa7fc000; valaddr_reg:x3; val_offset:88428*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88428*0 + 3*292*FLEN/8, x4, x1, x2)

inst_29477:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa7fe000; valaddr_reg:x3; val_offset:88431*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88431*0 + 3*293*FLEN/8, x4, x1, x2)

inst_29478:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa7ff000; valaddr_reg:x3; val_offset:88434*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88434*0 + 3*294*FLEN/8, x4, x1, x2)

inst_29479:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa7ff800; valaddr_reg:x3; val_offset:88437*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88437*0 + 3*295*FLEN/8, x4, x1, x2)

inst_29480:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa7ffc00; valaddr_reg:x3; val_offset:88440*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88440*0 + 3*296*FLEN/8, x4, x1, x2)

inst_29481:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa7ffe00; valaddr_reg:x3; val_offset:88443*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88443*0 + 3*297*FLEN/8, x4, x1, x2)

inst_29482:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa7fff00; valaddr_reg:x3; val_offset:88446*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88446*0 + 3*298*FLEN/8, x4, x1, x2)

inst_29483:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa7fff80; valaddr_reg:x3; val_offset:88449*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88449*0 + 3*299*FLEN/8, x4, x1, x2)

inst_29484:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa7fffc0; valaddr_reg:x3; val_offset:88452*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88452*0 + 3*300*FLEN/8, x4, x1, x2)

inst_29485:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa7fffe0; valaddr_reg:x3; val_offset:88455*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88455*0 + 3*301*FLEN/8, x4, x1, x2)

inst_29486:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa7ffff0; valaddr_reg:x3; val_offset:88458*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88458*0 + 3*302*FLEN/8, x4, x1, x2)

inst_29487:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa7ffff8; valaddr_reg:x3; val_offset:88461*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88461*0 + 3*303*FLEN/8, x4, x1, x2)

inst_29488:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa7ffffc; valaddr_reg:x3; val_offset:88464*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88464*0 + 3*304*FLEN/8, x4, x1, x2)

inst_29489:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa7ffffe; valaddr_reg:x3; val_offset:88467*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88467*0 + 3*305*FLEN/8, x4, x1, x2)

inst_29490:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xaa7fffff; valaddr_reg:x3; val_offset:88470*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88470*0 + 3*306*FLEN/8, x4, x1, x2)

inst_29491:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xbf800001; valaddr_reg:x3; val_offset:88473*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88473*0 + 3*307*FLEN/8, x4, x1, x2)

inst_29492:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xbf800003; valaddr_reg:x3; val_offset:88476*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88476*0 + 3*308*FLEN/8, x4, x1, x2)

inst_29493:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xbf800007; valaddr_reg:x3; val_offset:88479*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88479*0 + 3*309*FLEN/8, x4, x1, x2)

inst_29494:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xbf999999; valaddr_reg:x3; val_offset:88482*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88482*0 + 3*310*FLEN/8, x4, x1, x2)

inst_29495:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:88485*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88485*0 + 3*311*FLEN/8, x4, x1, x2)

inst_29496:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:88488*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88488*0 + 3*312*FLEN/8, x4, x1, x2)

inst_29497:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:88491*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88491*0 + 3*313*FLEN/8, x4, x1, x2)

inst_29498:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:88494*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88494*0 + 3*314*FLEN/8, x4, x1, x2)

inst_29499:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:88497*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88497*0 + 3*315*FLEN/8, x4, x1, x2)

inst_29500:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:88500*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88500*0 + 3*316*FLEN/8, x4, x1, x2)

inst_29501:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:88503*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88503*0 + 3*317*FLEN/8, x4, x1, x2)

inst_29502:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:88506*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88506*0 + 3*318*FLEN/8, x4, x1, x2)

inst_29503:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:88509*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88509*0 + 3*319*FLEN/8, x4, x1, x2)

inst_29504:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:88512*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88512*0 + 3*320*FLEN/8, x4, x1, x2)

inst_29505:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:88515*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88515*0 + 3*321*FLEN/8, x4, x1, x2)

inst_29506:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x144278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x374121 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f144278; op2val:0x80374121;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:88518*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88518*0 + 3*322*FLEN/8, x4, x1, x2)

inst_29507:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:88521*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88521*0 + 3*323*FLEN/8, x4, x1, x2)

inst_29508:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:88524*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88524*0 + 3*324*FLEN/8, x4, x1, x2)

inst_29509:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:88527*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88527*0 + 3*325*FLEN/8, x4, x1, x2)

inst_29510:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:88530*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88530*0 + 3*326*FLEN/8, x4, x1, x2)

inst_29511:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:88533*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88533*0 + 3*327*FLEN/8, x4, x1, x2)

inst_29512:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:88536*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88536*0 + 3*328*FLEN/8, x4, x1, x2)

inst_29513:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:88539*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88539*0 + 3*329*FLEN/8, x4, x1, x2)

inst_29514:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:88542*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88542*0 + 3*330*FLEN/8, x4, x1, x2)

inst_29515:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:88545*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88545*0 + 3*331*FLEN/8, x4, x1, x2)

inst_29516:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:88548*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88548*0 + 3*332*FLEN/8, x4, x1, x2)

inst_29517:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:88551*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88551*0 + 3*333*FLEN/8, x4, x1, x2)

inst_29518:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:88554*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88554*0 + 3*334*FLEN/8, x4, x1, x2)

inst_29519:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:88557*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88557*0 + 3*335*FLEN/8, x4, x1, x2)

inst_29520:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:88560*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88560*0 + 3*336*FLEN/8, x4, x1, x2)

inst_29521:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:88563*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88563*0 + 3*337*FLEN/8, x4, x1, x2)

inst_29522:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:88566*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88566*0 + 3*338*FLEN/8, x4, x1, x2)

inst_29523:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8d800000; valaddr_reg:x3; val_offset:88569*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88569*0 + 3*339*FLEN/8, x4, x1, x2)

inst_29524:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8d800001; valaddr_reg:x3; val_offset:88572*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88572*0 + 3*340*FLEN/8, x4, x1, x2)

inst_29525:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8d800003; valaddr_reg:x3; val_offset:88575*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88575*0 + 3*341*FLEN/8, x4, x1, x2)

inst_29526:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8d800007; valaddr_reg:x3; val_offset:88578*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88578*0 + 3*342*FLEN/8, x4, x1, x2)

inst_29527:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8d80000f; valaddr_reg:x3; val_offset:88581*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88581*0 + 3*343*FLEN/8, x4, x1, x2)

inst_29528:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8d80001f; valaddr_reg:x3; val_offset:88584*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88584*0 + 3*344*FLEN/8, x4, x1, x2)

inst_29529:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8d80003f; valaddr_reg:x3; val_offset:88587*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88587*0 + 3*345*FLEN/8, x4, x1, x2)

inst_29530:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8d80007f; valaddr_reg:x3; val_offset:88590*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88590*0 + 3*346*FLEN/8, x4, x1, x2)

inst_29531:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8d8000ff; valaddr_reg:x3; val_offset:88593*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88593*0 + 3*347*FLEN/8, x4, x1, x2)

inst_29532:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8d8001ff; valaddr_reg:x3; val_offset:88596*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88596*0 + 3*348*FLEN/8, x4, x1, x2)

inst_29533:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8d8003ff; valaddr_reg:x3; val_offset:88599*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88599*0 + 3*349*FLEN/8, x4, x1, x2)

inst_29534:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8d8007ff; valaddr_reg:x3; val_offset:88602*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88602*0 + 3*350*FLEN/8, x4, x1, x2)

inst_29535:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8d800fff; valaddr_reg:x3; val_offset:88605*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88605*0 + 3*351*FLEN/8, x4, x1, x2)

inst_29536:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8d801fff; valaddr_reg:x3; val_offset:88608*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88608*0 + 3*352*FLEN/8, x4, x1, x2)

inst_29537:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8d803fff; valaddr_reg:x3; val_offset:88611*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88611*0 + 3*353*FLEN/8, x4, x1, x2)

inst_29538:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8d807fff; valaddr_reg:x3; val_offset:88614*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88614*0 + 3*354*FLEN/8, x4, x1, x2)

inst_29539:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8d80ffff; valaddr_reg:x3; val_offset:88617*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88617*0 + 3*355*FLEN/8, x4, x1, x2)

inst_29540:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8d81ffff; valaddr_reg:x3; val_offset:88620*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88620*0 + 3*356*FLEN/8, x4, x1, x2)

inst_29541:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8d83ffff; valaddr_reg:x3; val_offset:88623*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88623*0 + 3*357*FLEN/8, x4, x1, x2)

inst_29542:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8d87ffff; valaddr_reg:x3; val_offset:88626*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88626*0 + 3*358*FLEN/8, x4, x1, x2)

inst_29543:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8d8fffff; valaddr_reg:x3; val_offset:88629*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88629*0 + 3*359*FLEN/8, x4, x1, x2)

inst_29544:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8d9fffff; valaddr_reg:x3; val_offset:88632*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88632*0 + 3*360*FLEN/8, x4, x1, x2)

inst_29545:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8dbfffff; valaddr_reg:x3; val_offset:88635*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88635*0 + 3*361*FLEN/8, x4, x1, x2)

inst_29546:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8dc00000; valaddr_reg:x3; val_offset:88638*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88638*0 + 3*362*FLEN/8, x4, x1, x2)

inst_29547:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8de00000; valaddr_reg:x3; val_offset:88641*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88641*0 + 3*363*FLEN/8, x4, x1, x2)

inst_29548:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8df00000; valaddr_reg:x3; val_offset:88644*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88644*0 + 3*364*FLEN/8, x4, x1, x2)

inst_29549:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8df80000; valaddr_reg:x3; val_offset:88647*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88647*0 + 3*365*FLEN/8, x4, x1, x2)

inst_29550:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8dfc0000; valaddr_reg:x3; val_offset:88650*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88650*0 + 3*366*FLEN/8, x4, x1, x2)

inst_29551:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8dfe0000; valaddr_reg:x3; val_offset:88653*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88653*0 + 3*367*FLEN/8, x4, x1, x2)

inst_29552:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8dff0000; valaddr_reg:x3; val_offset:88656*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88656*0 + 3*368*FLEN/8, x4, x1, x2)

inst_29553:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8dff8000; valaddr_reg:x3; val_offset:88659*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88659*0 + 3*369*FLEN/8, x4, x1, x2)

inst_29554:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8dffc000; valaddr_reg:x3; val_offset:88662*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88662*0 + 3*370*FLEN/8, x4, x1, x2)

inst_29555:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8dffe000; valaddr_reg:x3; val_offset:88665*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88665*0 + 3*371*FLEN/8, x4, x1, x2)

inst_29556:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8dfff000; valaddr_reg:x3; val_offset:88668*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88668*0 + 3*372*FLEN/8, x4, x1, x2)

inst_29557:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8dfff800; valaddr_reg:x3; val_offset:88671*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88671*0 + 3*373*FLEN/8, x4, x1, x2)

inst_29558:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8dfffc00; valaddr_reg:x3; val_offset:88674*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88674*0 + 3*374*FLEN/8, x4, x1, x2)

inst_29559:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8dfffe00; valaddr_reg:x3; val_offset:88677*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88677*0 + 3*375*FLEN/8, x4, x1, x2)

inst_29560:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8dffff00; valaddr_reg:x3; val_offset:88680*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88680*0 + 3*376*FLEN/8, x4, x1, x2)

inst_29561:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8dffff80; valaddr_reg:x3; val_offset:88683*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88683*0 + 3*377*FLEN/8, x4, x1, x2)

inst_29562:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8dffffc0; valaddr_reg:x3; val_offset:88686*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88686*0 + 3*378*FLEN/8, x4, x1, x2)

inst_29563:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8dffffe0; valaddr_reg:x3; val_offset:88689*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88689*0 + 3*379*FLEN/8, x4, x1, x2)

inst_29564:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8dfffff0; valaddr_reg:x3; val_offset:88692*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88692*0 + 3*380*FLEN/8, x4, x1, x2)

inst_29565:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8dfffff8; valaddr_reg:x3; val_offset:88695*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88695*0 + 3*381*FLEN/8, x4, x1, x2)

inst_29566:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8dfffffc; valaddr_reg:x3; val_offset:88698*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88698*0 + 3*382*FLEN/8, x4, x1, x2)

inst_29567:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8dfffffe; valaddr_reg:x3; val_offset:88701*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88701*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_29568:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1450f1; op2val:0x80000000;
op3val:0x8dffffff; valaddr_reg:x3; val_offset:88704*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88704*0 + 3*384*FLEN/8, x4, x1, x2)

inst_29569:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:88707*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88707*0 + 3*385*FLEN/8, x4, x1, x2)

inst_29570:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:88710*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88710*0 + 3*386*FLEN/8, x4, x1, x2)

inst_29571:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:88713*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88713*0 + 3*387*FLEN/8, x4, x1, x2)

inst_29572:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x80999999; valaddr_reg:x3; val_offset:88716*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88716*0 + 3*388*FLEN/8, x4, x1, x2)

inst_29573:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x80a49249; valaddr_reg:x3; val_offset:88719*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88719*0 + 3*389*FLEN/8, x4, x1, x2)

inst_29574:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x80b33333; valaddr_reg:x3; val_offset:88722*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88722*0 + 3*390*FLEN/8, x4, x1, x2)

inst_29575:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x80b6db6d; valaddr_reg:x3; val_offset:88725*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88725*0 + 3*391*FLEN/8, x4, x1, x2)

inst_29576:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x80bbbbbb; valaddr_reg:x3; val_offset:88728*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88728*0 + 3*392*FLEN/8, x4, x1, x2)

inst_29577:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x80c44444; valaddr_reg:x3; val_offset:88731*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88731*0 + 3*393*FLEN/8, x4, x1, x2)

inst_29578:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x80cccccc; valaddr_reg:x3; val_offset:88734*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88734*0 + 3*394*FLEN/8, x4, x1, x2)

inst_29579:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x80db6db6; valaddr_reg:x3; val_offset:88737*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88737*0 + 3*395*FLEN/8, x4, x1, x2)

inst_29580:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x80e66666; valaddr_reg:x3; val_offset:88740*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88740*0 + 3*396*FLEN/8, x4, x1, x2)

inst_29581:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x80edb6db; valaddr_reg:x3; val_offset:88743*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88743*0 + 3*397*FLEN/8, x4, x1, x2)

inst_29582:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:88746*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88746*0 + 3*398*FLEN/8, x4, x1, x2)

inst_29583:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:88749*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88749*0 + 3*399*FLEN/8, x4, x1, x2)

inst_29584:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:88752*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88752*0 + 3*400*FLEN/8, x4, x1, x2)

inst_29585:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x90800000; valaddr_reg:x3; val_offset:88755*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88755*0 + 3*401*FLEN/8, x4, x1, x2)

inst_29586:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x90800001; valaddr_reg:x3; val_offset:88758*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88758*0 + 3*402*FLEN/8, x4, x1, x2)

inst_29587:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x90800003; valaddr_reg:x3; val_offset:88761*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88761*0 + 3*403*FLEN/8, x4, x1, x2)

inst_29588:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x90800007; valaddr_reg:x3; val_offset:88764*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88764*0 + 3*404*FLEN/8, x4, x1, x2)

inst_29589:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x9080000f; valaddr_reg:x3; val_offset:88767*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88767*0 + 3*405*FLEN/8, x4, x1, x2)

inst_29590:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x9080001f; valaddr_reg:x3; val_offset:88770*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88770*0 + 3*406*FLEN/8, x4, x1, x2)

inst_29591:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x9080003f; valaddr_reg:x3; val_offset:88773*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88773*0 + 3*407*FLEN/8, x4, x1, x2)

inst_29592:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x9080007f; valaddr_reg:x3; val_offset:88776*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88776*0 + 3*408*FLEN/8, x4, x1, x2)

inst_29593:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x908000ff; valaddr_reg:x3; val_offset:88779*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88779*0 + 3*409*FLEN/8, x4, x1, x2)

inst_29594:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x908001ff; valaddr_reg:x3; val_offset:88782*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88782*0 + 3*410*FLEN/8, x4, x1, x2)

inst_29595:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x908003ff; valaddr_reg:x3; val_offset:88785*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88785*0 + 3*411*FLEN/8, x4, x1, x2)

inst_29596:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x908007ff; valaddr_reg:x3; val_offset:88788*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88788*0 + 3*412*FLEN/8, x4, x1, x2)

inst_29597:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x90800fff; valaddr_reg:x3; val_offset:88791*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88791*0 + 3*413*FLEN/8, x4, x1, x2)

inst_29598:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x90801fff; valaddr_reg:x3; val_offset:88794*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88794*0 + 3*414*FLEN/8, x4, x1, x2)

inst_29599:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x90803fff; valaddr_reg:x3; val_offset:88797*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88797*0 + 3*415*FLEN/8, x4, x1, x2)

inst_29600:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x90807fff; valaddr_reg:x3; val_offset:88800*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88800*0 + 3*416*FLEN/8, x4, x1, x2)

inst_29601:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x9080ffff; valaddr_reg:x3; val_offset:88803*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88803*0 + 3*417*FLEN/8, x4, x1, x2)

inst_29602:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x9081ffff; valaddr_reg:x3; val_offset:88806*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88806*0 + 3*418*FLEN/8, x4, x1, x2)

inst_29603:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x9083ffff; valaddr_reg:x3; val_offset:88809*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88809*0 + 3*419*FLEN/8, x4, x1, x2)

inst_29604:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x9087ffff; valaddr_reg:x3; val_offset:88812*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88812*0 + 3*420*FLEN/8, x4, x1, x2)

inst_29605:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x908fffff; valaddr_reg:x3; val_offset:88815*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88815*0 + 3*421*FLEN/8, x4, x1, x2)

inst_29606:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x909fffff; valaddr_reg:x3; val_offset:88818*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88818*0 + 3*422*FLEN/8, x4, x1, x2)

inst_29607:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x90bfffff; valaddr_reg:x3; val_offset:88821*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88821*0 + 3*423*FLEN/8, x4, x1, x2)

inst_29608:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x90c00000; valaddr_reg:x3; val_offset:88824*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88824*0 + 3*424*FLEN/8, x4, x1, x2)

inst_29609:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x90e00000; valaddr_reg:x3; val_offset:88827*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88827*0 + 3*425*FLEN/8, x4, x1, x2)

inst_29610:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x90f00000; valaddr_reg:x3; val_offset:88830*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88830*0 + 3*426*FLEN/8, x4, x1, x2)

inst_29611:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x90f80000; valaddr_reg:x3; val_offset:88833*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88833*0 + 3*427*FLEN/8, x4, x1, x2)

inst_29612:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x90fc0000; valaddr_reg:x3; val_offset:88836*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88836*0 + 3*428*FLEN/8, x4, x1, x2)

inst_29613:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x90fe0000; valaddr_reg:x3; val_offset:88839*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88839*0 + 3*429*FLEN/8, x4, x1, x2)

inst_29614:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x90ff0000; valaddr_reg:x3; val_offset:88842*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88842*0 + 3*430*FLEN/8, x4, x1, x2)

inst_29615:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x90ff8000; valaddr_reg:x3; val_offset:88845*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88845*0 + 3*431*FLEN/8, x4, x1, x2)

inst_29616:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x90ffc000; valaddr_reg:x3; val_offset:88848*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88848*0 + 3*432*FLEN/8, x4, x1, x2)

inst_29617:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x90ffe000; valaddr_reg:x3; val_offset:88851*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88851*0 + 3*433*FLEN/8, x4, x1, x2)

inst_29618:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x90fff000; valaddr_reg:x3; val_offset:88854*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88854*0 + 3*434*FLEN/8, x4, x1, x2)

inst_29619:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x90fff800; valaddr_reg:x3; val_offset:88857*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88857*0 + 3*435*FLEN/8, x4, x1, x2)

inst_29620:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x90fffc00; valaddr_reg:x3; val_offset:88860*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88860*0 + 3*436*FLEN/8, x4, x1, x2)

inst_29621:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x90fffe00; valaddr_reg:x3; val_offset:88863*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88863*0 + 3*437*FLEN/8, x4, x1, x2)

inst_29622:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x90ffff00; valaddr_reg:x3; val_offset:88866*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88866*0 + 3*438*FLEN/8, x4, x1, x2)

inst_29623:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x90ffff80; valaddr_reg:x3; val_offset:88869*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88869*0 + 3*439*FLEN/8, x4, x1, x2)

inst_29624:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x90ffffc0; valaddr_reg:x3; val_offset:88872*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88872*0 + 3*440*FLEN/8, x4, x1, x2)

inst_29625:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x90ffffe0; valaddr_reg:x3; val_offset:88875*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88875*0 + 3*441*FLEN/8, x4, x1, x2)

inst_29626:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x90fffff0; valaddr_reg:x3; val_offset:88878*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88878*0 + 3*442*FLEN/8, x4, x1, x2)

inst_29627:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x90fffff8; valaddr_reg:x3; val_offset:88881*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88881*0 + 3*443*FLEN/8, x4, x1, x2)

inst_29628:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x90fffffc; valaddr_reg:x3; val_offset:88884*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88884*0 + 3*444*FLEN/8, x4, x1, x2)

inst_29629:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x90fffffe; valaddr_reg:x3; val_offset:88887*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88887*0 + 3*445*FLEN/8, x4, x1, x2)

inst_29630:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1492bc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x21 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1492bc; op2val:0x80000000;
op3val:0x90ffffff; valaddr_reg:x3; val_offset:88890*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88890*0 + 3*446*FLEN/8, x4, x1, x2)

inst_29631:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0x800001; valaddr_reg:x3; val_offset:88893*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88893*0 + 3*447*FLEN/8, x4, x1, x2)

inst_29632:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0x800003; valaddr_reg:x3; val_offset:88896*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88896*0 + 3*448*FLEN/8, x4, x1, x2)

inst_29633:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0x800007; valaddr_reg:x3; val_offset:88899*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88899*0 + 3*449*FLEN/8, x4, x1, x2)

inst_29634:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0x999999; valaddr_reg:x3; val_offset:88902*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88902*0 + 3*450*FLEN/8, x4, x1, x2)

inst_29635:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xa49249; valaddr_reg:x3; val_offset:88905*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88905*0 + 3*451*FLEN/8, x4, x1, x2)

inst_29636:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xb33333; valaddr_reg:x3; val_offset:88908*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88908*0 + 3*452*FLEN/8, x4, x1, x2)

inst_29637:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xb6db6d; valaddr_reg:x3; val_offset:88911*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88911*0 + 3*453*FLEN/8, x4, x1, x2)

inst_29638:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xbbbbbb; valaddr_reg:x3; val_offset:88914*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88914*0 + 3*454*FLEN/8, x4, x1, x2)

inst_29639:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xc44444; valaddr_reg:x3; val_offset:88917*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88917*0 + 3*455*FLEN/8, x4, x1, x2)

inst_29640:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xcccccc; valaddr_reg:x3; val_offset:88920*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88920*0 + 3*456*FLEN/8, x4, x1, x2)

inst_29641:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xdb6db6; valaddr_reg:x3; val_offset:88923*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88923*0 + 3*457*FLEN/8, x4, x1, x2)

inst_29642:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xe66666; valaddr_reg:x3; val_offset:88926*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88926*0 + 3*458*FLEN/8, x4, x1, x2)

inst_29643:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xedb6db; valaddr_reg:x3; val_offset:88929*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88929*0 + 3*459*FLEN/8, x4, x1, x2)

inst_29644:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xfffff8; valaddr_reg:x3; val_offset:88932*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88932*0 + 3*460*FLEN/8, x4, x1, x2)

inst_29645:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xfffffc; valaddr_reg:x3; val_offset:88935*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88935*0 + 3*461*FLEN/8, x4, x1, x2)

inst_29646:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xfffffe; valaddr_reg:x3; val_offset:88938*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88938*0 + 3*462*FLEN/8, x4, x1, x2)

inst_29647:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xa800000; valaddr_reg:x3; val_offset:88941*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88941*0 + 3*463*FLEN/8, x4, x1, x2)

inst_29648:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xa800001; valaddr_reg:x3; val_offset:88944*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88944*0 + 3*464*FLEN/8, x4, x1, x2)

inst_29649:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xa800003; valaddr_reg:x3; val_offset:88947*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88947*0 + 3*465*FLEN/8, x4, x1, x2)

inst_29650:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xa800007; valaddr_reg:x3; val_offset:88950*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88950*0 + 3*466*FLEN/8, x4, x1, x2)

inst_29651:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xa80000f; valaddr_reg:x3; val_offset:88953*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88953*0 + 3*467*FLEN/8, x4, x1, x2)

inst_29652:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xa80001f; valaddr_reg:x3; val_offset:88956*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88956*0 + 3*468*FLEN/8, x4, x1, x2)

inst_29653:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xa80003f; valaddr_reg:x3; val_offset:88959*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88959*0 + 3*469*FLEN/8, x4, x1, x2)

inst_29654:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xa80007f; valaddr_reg:x3; val_offset:88962*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88962*0 + 3*470*FLEN/8, x4, x1, x2)

inst_29655:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xa8000ff; valaddr_reg:x3; val_offset:88965*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88965*0 + 3*471*FLEN/8, x4, x1, x2)

inst_29656:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xa8001ff; valaddr_reg:x3; val_offset:88968*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88968*0 + 3*472*FLEN/8, x4, x1, x2)

inst_29657:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xa8003ff; valaddr_reg:x3; val_offset:88971*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88971*0 + 3*473*FLEN/8, x4, x1, x2)

inst_29658:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xa8007ff; valaddr_reg:x3; val_offset:88974*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88974*0 + 3*474*FLEN/8, x4, x1, x2)

inst_29659:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xa800fff; valaddr_reg:x3; val_offset:88977*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88977*0 + 3*475*FLEN/8, x4, x1, x2)

inst_29660:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xa801fff; valaddr_reg:x3; val_offset:88980*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88980*0 + 3*476*FLEN/8, x4, x1, x2)

inst_29661:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xa803fff; valaddr_reg:x3; val_offset:88983*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88983*0 + 3*477*FLEN/8, x4, x1, x2)

inst_29662:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xa807fff; valaddr_reg:x3; val_offset:88986*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88986*0 + 3*478*FLEN/8, x4, x1, x2)

inst_29663:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xa80ffff; valaddr_reg:x3; val_offset:88989*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88989*0 + 3*479*FLEN/8, x4, x1, x2)

inst_29664:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xa81ffff; valaddr_reg:x3; val_offset:88992*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88992*0 + 3*480*FLEN/8, x4, x1, x2)

inst_29665:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xa83ffff; valaddr_reg:x3; val_offset:88995*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88995*0 + 3*481*FLEN/8, x4, x1, x2)

inst_29666:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xa87ffff; valaddr_reg:x3; val_offset:88998*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 88998*0 + 3*482*FLEN/8, x4, x1, x2)

inst_29667:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xa8fffff; valaddr_reg:x3; val_offset:89001*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89001*0 + 3*483*FLEN/8, x4, x1, x2)

inst_29668:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xa9fffff; valaddr_reg:x3; val_offset:89004*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89004*0 + 3*484*FLEN/8, x4, x1, x2)

inst_29669:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xabfffff; valaddr_reg:x3; val_offset:89007*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89007*0 + 3*485*FLEN/8, x4, x1, x2)

inst_29670:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xac00000; valaddr_reg:x3; val_offset:89010*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89010*0 + 3*486*FLEN/8, x4, x1, x2)

inst_29671:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xae00000; valaddr_reg:x3; val_offset:89013*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89013*0 + 3*487*FLEN/8, x4, x1, x2)

inst_29672:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xaf00000; valaddr_reg:x3; val_offset:89016*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89016*0 + 3*488*FLEN/8, x4, x1, x2)

inst_29673:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xaf80000; valaddr_reg:x3; val_offset:89019*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89019*0 + 3*489*FLEN/8, x4, x1, x2)

inst_29674:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xafc0000; valaddr_reg:x3; val_offset:89022*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89022*0 + 3*490*FLEN/8, x4, x1, x2)

inst_29675:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xafe0000; valaddr_reg:x3; val_offset:89025*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89025*0 + 3*491*FLEN/8, x4, x1, x2)

inst_29676:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xaff0000; valaddr_reg:x3; val_offset:89028*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89028*0 + 3*492*FLEN/8, x4, x1, x2)

inst_29677:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xaff8000; valaddr_reg:x3; val_offset:89031*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89031*0 + 3*493*FLEN/8, x4, x1, x2)

inst_29678:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xaffc000; valaddr_reg:x3; val_offset:89034*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89034*0 + 3*494*FLEN/8, x4, x1, x2)

inst_29679:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xaffe000; valaddr_reg:x3; val_offset:89037*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89037*0 + 3*495*FLEN/8, x4, x1, x2)

inst_29680:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xafff000; valaddr_reg:x3; val_offset:89040*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89040*0 + 3*496*FLEN/8, x4, x1, x2)

inst_29681:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xafff800; valaddr_reg:x3; val_offset:89043*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89043*0 + 3*497*FLEN/8, x4, x1, x2)

inst_29682:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xafffc00; valaddr_reg:x3; val_offset:89046*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89046*0 + 3*498*FLEN/8, x4, x1, x2)

inst_29683:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xafffe00; valaddr_reg:x3; val_offset:89049*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89049*0 + 3*499*FLEN/8, x4, x1, x2)

inst_29684:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xaffff00; valaddr_reg:x3; val_offset:89052*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89052*0 + 3*500*FLEN/8, x4, x1, x2)

inst_29685:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xaffff80; valaddr_reg:x3; val_offset:89055*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89055*0 + 3*501*FLEN/8, x4, x1, x2)

inst_29686:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xaffffc0; valaddr_reg:x3; val_offset:89058*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89058*0 + 3*502*FLEN/8, x4, x1, x2)

inst_29687:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xaffffe0; valaddr_reg:x3; val_offset:89061*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89061*0 + 3*503*FLEN/8, x4, x1, x2)

inst_29688:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xafffff0; valaddr_reg:x3; val_offset:89064*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89064*0 + 3*504*FLEN/8, x4, x1, x2)

inst_29689:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xafffff8; valaddr_reg:x3; val_offset:89067*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89067*0 + 3*505*FLEN/8, x4, x1, x2)

inst_29690:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xafffffc; valaddr_reg:x3; val_offset:89070*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89070*0 + 3*506*FLEN/8, x4, x1, x2)

inst_29691:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xafffffe; valaddr_reg:x3; val_offset:89073*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89073*0 + 3*507*FLEN/8, x4, x1, x2)

inst_29692:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151296 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f151296; op2val:0x0;
op3val:0xaffffff; valaddr_reg:x3; val_offset:89076*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89076*0 + 3*508*FLEN/8, x4, x1, x2)

inst_29693:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:89079*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89079*0 + 3*509*FLEN/8, x4, x1, x2)

inst_29694:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:89082*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89082*0 + 3*510*FLEN/8, x4, x1, x2)

inst_29695:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:89085*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89085*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_29696:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x80999999; valaddr_reg:x3; val_offset:89088*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89088*0 + 3*512*FLEN/8, x4, x1, x2)

inst_29697:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x80a49249; valaddr_reg:x3; val_offset:89091*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89091*0 + 3*513*FLEN/8, x4, x1, x2)

inst_29698:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x80b33333; valaddr_reg:x3; val_offset:89094*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89094*0 + 3*514*FLEN/8, x4, x1, x2)

inst_29699:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x80b6db6d; valaddr_reg:x3; val_offset:89097*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89097*0 + 3*515*FLEN/8, x4, x1, x2)

inst_29700:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x80bbbbbb; valaddr_reg:x3; val_offset:89100*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89100*0 + 3*516*FLEN/8, x4, x1, x2)

inst_29701:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x80c44444; valaddr_reg:x3; val_offset:89103*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89103*0 + 3*517*FLEN/8, x4, x1, x2)

inst_29702:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x80cccccc; valaddr_reg:x3; val_offset:89106*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89106*0 + 3*518*FLEN/8, x4, x1, x2)

inst_29703:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x80db6db6; valaddr_reg:x3; val_offset:89109*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89109*0 + 3*519*FLEN/8, x4, x1, x2)

inst_29704:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x80e66666; valaddr_reg:x3; val_offset:89112*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89112*0 + 3*520*FLEN/8, x4, x1, x2)

inst_29705:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x80edb6db; valaddr_reg:x3; val_offset:89115*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89115*0 + 3*521*FLEN/8, x4, x1, x2)

inst_29706:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:89118*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89118*0 + 3*522*FLEN/8, x4, x1, x2)

inst_29707:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:89121*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89121*0 + 3*523*FLEN/8, x4, x1, x2)

inst_29708:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:89124*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89124*0 + 3*524*FLEN/8, x4, x1, x2)

inst_29709:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b000000; valaddr_reg:x3; val_offset:89127*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89127*0 + 3*525*FLEN/8, x4, x1, x2)

inst_29710:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b000001; valaddr_reg:x3; val_offset:89130*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89130*0 + 3*526*FLEN/8, x4, x1, x2)

inst_29711:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b000003; valaddr_reg:x3; val_offset:89133*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89133*0 + 3*527*FLEN/8, x4, x1, x2)

inst_29712:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b000007; valaddr_reg:x3; val_offset:89136*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89136*0 + 3*528*FLEN/8, x4, x1, x2)

inst_29713:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b00000f; valaddr_reg:x3; val_offset:89139*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89139*0 + 3*529*FLEN/8, x4, x1, x2)

inst_29714:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b00001f; valaddr_reg:x3; val_offset:89142*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89142*0 + 3*530*FLEN/8, x4, x1, x2)

inst_29715:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b00003f; valaddr_reg:x3; val_offset:89145*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89145*0 + 3*531*FLEN/8, x4, x1, x2)

inst_29716:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b00007f; valaddr_reg:x3; val_offset:89148*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89148*0 + 3*532*FLEN/8, x4, x1, x2)

inst_29717:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b0000ff; valaddr_reg:x3; val_offset:89151*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89151*0 + 3*533*FLEN/8, x4, x1, x2)

inst_29718:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b0001ff; valaddr_reg:x3; val_offset:89154*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89154*0 + 3*534*FLEN/8, x4, x1, x2)

inst_29719:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b0003ff; valaddr_reg:x3; val_offset:89157*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89157*0 + 3*535*FLEN/8, x4, x1, x2)

inst_29720:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b0007ff; valaddr_reg:x3; val_offset:89160*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89160*0 + 3*536*FLEN/8, x4, x1, x2)

inst_29721:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b000fff; valaddr_reg:x3; val_offset:89163*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89163*0 + 3*537*FLEN/8, x4, x1, x2)

inst_29722:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b001fff; valaddr_reg:x3; val_offset:89166*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89166*0 + 3*538*FLEN/8, x4, x1, x2)

inst_29723:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b003fff; valaddr_reg:x3; val_offset:89169*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89169*0 + 3*539*FLEN/8, x4, x1, x2)

inst_29724:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b007fff; valaddr_reg:x3; val_offset:89172*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89172*0 + 3*540*FLEN/8, x4, x1, x2)

inst_29725:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b00ffff; valaddr_reg:x3; val_offset:89175*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89175*0 + 3*541*FLEN/8, x4, x1, x2)

inst_29726:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b01ffff; valaddr_reg:x3; val_offset:89178*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89178*0 + 3*542*FLEN/8, x4, x1, x2)

inst_29727:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b03ffff; valaddr_reg:x3; val_offset:89181*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89181*0 + 3*543*FLEN/8, x4, x1, x2)

inst_29728:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b07ffff; valaddr_reg:x3; val_offset:89184*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89184*0 + 3*544*FLEN/8, x4, x1, x2)

inst_29729:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b0fffff; valaddr_reg:x3; val_offset:89187*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89187*0 + 3*545*FLEN/8, x4, x1, x2)

inst_29730:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b1fffff; valaddr_reg:x3; val_offset:89190*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89190*0 + 3*546*FLEN/8, x4, x1, x2)

inst_29731:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b3fffff; valaddr_reg:x3; val_offset:89193*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89193*0 + 3*547*FLEN/8, x4, x1, x2)

inst_29732:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b400000; valaddr_reg:x3; val_offset:89196*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89196*0 + 3*548*FLEN/8, x4, x1, x2)

inst_29733:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b600000; valaddr_reg:x3; val_offset:89199*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89199*0 + 3*549*FLEN/8, x4, x1, x2)

inst_29734:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b700000; valaddr_reg:x3; val_offset:89202*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89202*0 + 3*550*FLEN/8, x4, x1, x2)

inst_29735:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b780000; valaddr_reg:x3; val_offset:89205*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89205*0 + 3*551*FLEN/8, x4, x1, x2)

inst_29736:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b7c0000; valaddr_reg:x3; val_offset:89208*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89208*0 + 3*552*FLEN/8, x4, x1, x2)

inst_29737:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b7e0000; valaddr_reg:x3; val_offset:89211*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89211*0 + 3*553*FLEN/8, x4, x1, x2)

inst_29738:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b7f0000; valaddr_reg:x3; val_offset:89214*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89214*0 + 3*554*FLEN/8, x4, x1, x2)

inst_29739:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b7f8000; valaddr_reg:x3; val_offset:89217*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89217*0 + 3*555*FLEN/8, x4, x1, x2)

inst_29740:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b7fc000; valaddr_reg:x3; val_offset:89220*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89220*0 + 3*556*FLEN/8, x4, x1, x2)

inst_29741:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b7fe000; valaddr_reg:x3; val_offset:89223*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89223*0 + 3*557*FLEN/8, x4, x1, x2)

inst_29742:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b7ff000; valaddr_reg:x3; val_offset:89226*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89226*0 + 3*558*FLEN/8, x4, x1, x2)

inst_29743:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b7ff800; valaddr_reg:x3; val_offset:89229*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89229*0 + 3*559*FLEN/8, x4, x1, x2)

inst_29744:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b7ffc00; valaddr_reg:x3; val_offset:89232*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89232*0 + 3*560*FLEN/8, x4, x1, x2)

inst_29745:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b7ffe00; valaddr_reg:x3; val_offset:89235*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89235*0 + 3*561*FLEN/8, x4, x1, x2)

inst_29746:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b7fff00; valaddr_reg:x3; val_offset:89238*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89238*0 + 3*562*FLEN/8, x4, x1, x2)

inst_29747:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b7fff80; valaddr_reg:x3; val_offset:89241*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89241*0 + 3*563*FLEN/8, x4, x1, x2)

inst_29748:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b7fffc0; valaddr_reg:x3; val_offset:89244*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89244*0 + 3*564*FLEN/8, x4, x1, x2)

inst_29749:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b7fffe0; valaddr_reg:x3; val_offset:89247*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89247*0 + 3*565*FLEN/8, x4, x1, x2)

inst_29750:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b7ffff0; valaddr_reg:x3; val_offset:89250*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89250*0 + 3*566*FLEN/8, x4, x1, x2)

inst_29751:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b7ffff8; valaddr_reg:x3; val_offset:89253*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89253*0 + 3*567*FLEN/8, x4, x1, x2)

inst_29752:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b7ffffc; valaddr_reg:x3; val_offset:89256*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89256*0 + 3*568*FLEN/8, x4, x1, x2)

inst_29753:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b7ffffe; valaddr_reg:x3; val_offset:89259*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89259*0 + 3*569*FLEN/8, x4, x1, x2)

inst_29754:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a4db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a4db; op2val:0x80000000;
op3val:0x8b7fffff; valaddr_reg:x3; val_offset:89262*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89262*0 + 3*570*FLEN/8, x4, x1, x2)

inst_29755:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xbf800001; valaddr_reg:x3; val_offset:89265*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89265*0 + 3*571*FLEN/8, x4, x1, x2)

inst_29756:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xbf800003; valaddr_reg:x3; val_offset:89268*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89268*0 + 3*572*FLEN/8, x4, x1, x2)

inst_29757:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xbf800007; valaddr_reg:x3; val_offset:89271*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89271*0 + 3*573*FLEN/8, x4, x1, x2)

inst_29758:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xbf999999; valaddr_reg:x3; val_offset:89274*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89274*0 + 3*574*FLEN/8, x4, x1, x2)

inst_29759:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:89277*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89277*0 + 3*575*FLEN/8, x4, x1, x2)

inst_29760:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:89280*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89280*0 + 3*576*FLEN/8, x4, x1, x2)

inst_29761:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:89283*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89283*0 + 3*577*FLEN/8, x4, x1, x2)

inst_29762:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:89286*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89286*0 + 3*578*FLEN/8, x4, x1, x2)

inst_29763:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:89289*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89289*0 + 3*579*FLEN/8, x4, x1, x2)

inst_29764:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:89292*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89292*0 + 3*580*FLEN/8, x4, x1, x2)

inst_29765:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:89295*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89295*0 + 3*581*FLEN/8, x4, x1, x2)

inst_29766:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:89298*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89298*0 + 3*582*FLEN/8, x4, x1, x2)

inst_29767:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:89301*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89301*0 + 3*583*FLEN/8, x4, x1, x2)

inst_29768:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:89304*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89304*0 + 3*584*FLEN/8, x4, x1, x2)

inst_29769:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:89307*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89307*0 + 3*585*FLEN/8, x4, x1, x2)

inst_29770:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:89310*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89310*0 + 3*586*FLEN/8, x4, x1, x2)

inst_29771:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf000000; valaddr_reg:x3; val_offset:89313*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89313*0 + 3*587*FLEN/8, x4, x1, x2)

inst_29772:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf000001; valaddr_reg:x3; val_offset:89316*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89316*0 + 3*588*FLEN/8, x4, x1, x2)

inst_29773:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf000003; valaddr_reg:x3; val_offset:89319*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89319*0 + 3*589*FLEN/8, x4, x1, x2)

inst_29774:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf000007; valaddr_reg:x3; val_offset:89322*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89322*0 + 3*590*FLEN/8, x4, x1, x2)

inst_29775:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf00000f; valaddr_reg:x3; val_offset:89325*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89325*0 + 3*591*FLEN/8, x4, x1, x2)

inst_29776:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf00001f; valaddr_reg:x3; val_offset:89328*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89328*0 + 3*592*FLEN/8, x4, x1, x2)

inst_29777:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf00003f; valaddr_reg:x3; val_offset:89331*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89331*0 + 3*593*FLEN/8, x4, x1, x2)

inst_29778:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf00007f; valaddr_reg:x3; val_offset:89334*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89334*0 + 3*594*FLEN/8, x4, x1, x2)

inst_29779:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf0000ff; valaddr_reg:x3; val_offset:89337*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89337*0 + 3*595*FLEN/8, x4, x1, x2)

inst_29780:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf0001ff; valaddr_reg:x3; val_offset:89340*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89340*0 + 3*596*FLEN/8, x4, x1, x2)

inst_29781:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf0003ff; valaddr_reg:x3; val_offset:89343*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89343*0 + 3*597*FLEN/8, x4, x1, x2)

inst_29782:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf0007ff; valaddr_reg:x3; val_offset:89346*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89346*0 + 3*598*FLEN/8, x4, x1, x2)

inst_29783:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf000fff; valaddr_reg:x3; val_offset:89349*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89349*0 + 3*599*FLEN/8, x4, x1, x2)

inst_29784:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf001fff; valaddr_reg:x3; val_offset:89352*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89352*0 + 3*600*FLEN/8, x4, x1, x2)

inst_29785:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf003fff; valaddr_reg:x3; val_offset:89355*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89355*0 + 3*601*FLEN/8, x4, x1, x2)

inst_29786:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf007fff; valaddr_reg:x3; val_offset:89358*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89358*0 + 3*602*FLEN/8, x4, x1, x2)

inst_29787:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf00ffff; valaddr_reg:x3; val_offset:89361*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89361*0 + 3*603*FLEN/8, x4, x1, x2)

inst_29788:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf01ffff; valaddr_reg:x3; val_offset:89364*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89364*0 + 3*604*FLEN/8, x4, x1, x2)

inst_29789:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf03ffff; valaddr_reg:x3; val_offset:89367*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89367*0 + 3*605*FLEN/8, x4, x1, x2)

inst_29790:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf07ffff; valaddr_reg:x3; val_offset:89370*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89370*0 + 3*606*FLEN/8, x4, x1, x2)

inst_29791:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf0fffff; valaddr_reg:x3; val_offset:89373*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89373*0 + 3*607*FLEN/8, x4, x1, x2)

inst_29792:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf1fffff; valaddr_reg:x3; val_offset:89376*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89376*0 + 3*608*FLEN/8, x4, x1, x2)

inst_29793:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf3fffff; valaddr_reg:x3; val_offset:89379*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89379*0 + 3*609*FLEN/8, x4, x1, x2)

inst_29794:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf400000; valaddr_reg:x3; val_offset:89382*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89382*0 + 3*610*FLEN/8, x4, x1, x2)

inst_29795:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf600000; valaddr_reg:x3; val_offset:89385*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89385*0 + 3*611*FLEN/8, x4, x1, x2)

inst_29796:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf700000; valaddr_reg:x3; val_offset:89388*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89388*0 + 3*612*FLEN/8, x4, x1, x2)

inst_29797:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf780000; valaddr_reg:x3; val_offset:89391*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89391*0 + 3*613*FLEN/8, x4, x1, x2)

inst_29798:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf7c0000; valaddr_reg:x3; val_offset:89394*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89394*0 + 3*614*FLEN/8, x4, x1, x2)

inst_29799:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf7e0000; valaddr_reg:x3; val_offset:89397*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89397*0 + 3*615*FLEN/8, x4, x1, x2)

inst_29800:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf7f0000; valaddr_reg:x3; val_offset:89400*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89400*0 + 3*616*FLEN/8, x4, x1, x2)

inst_29801:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf7f8000; valaddr_reg:x3; val_offset:89403*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89403*0 + 3*617*FLEN/8, x4, x1, x2)

inst_29802:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf7fc000; valaddr_reg:x3; val_offset:89406*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89406*0 + 3*618*FLEN/8, x4, x1, x2)

inst_29803:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf7fe000; valaddr_reg:x3; val_offset:89409*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89409*0 + 3*619*FLEN/8, x4, x1, x2)

inst_29804:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf7ff000; valaddr_reg:x3; val_offset:89412*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89412*0 + 3*620*FLEN/8, x4, x1, x2)

inst_29805:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf7ff800; valaddr_reg:x3; val_offset:89415*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89415*0 + 3*621*FLEN/8, x4, x1, x2)

inst_29806:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf7ffc00; valaddr_reg:x3; val_offset:89418*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89418*0 + 3*622*FLEN/8, x4, x1, x2)

inst_29807:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf7ffe00; valaddr_reg:x3; val_offset:89421*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89421*0 + 3*623*FLEN/8, x4, x1, x2)

inst_29808:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf7fff00; valaddr_reg:x3; val_offset:89424*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89424*0 + 3*624*FLEN/8, x4, x1, x2)

inst_29809:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf7fff80; valaddr_reg:x3; val_offset:89427*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89427*0 + 3*625*FLEN/8, x4, x1, x2)

inst_29810:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf7fffc0; valaddr_reg:x3; val_offset:89430*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89430*0 + 3*626*FLEN/8, x4, x1, x2)

inst_29811:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf7fffe0; valaddr_reg:x3; val_offset:89433*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89433*0 + 3*627*FLEN/8, x4, x1, x2)

inst_29812:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf7ffff0; valaddr_reg:x3; val_offset:89436*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89436*0 + 3*628*FLEN/8, x4, x1, x2)

inst_29813:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf7ffff8; valaddr_reg:x3; val_offset:89439*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89439*0 + 3*629*FLEN/8, x4, x1, x2)

inst_29814:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf7ffffc; valaddr_reg:x3; val_offset:89442*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89442*0 + 3*630*FLEN/8, x4, x1, x2)

inst_29815:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf7ffffe; valaddr_reg:x3; val_offset:89445*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89445*0 + 3*631*FLEN/8, x4, x1, x2)

inst_29816:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15a5e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36bde5 and fs3 == 1 and fe3 == 0x9e and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f15a5e6; op2val:0x8036bde5;
op3val:0xcf7fffff; valaddr_reg:x3; val_offset:89448*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89448*0 + 3*632*FLEN/8, x4, x1, x2)

inst_29817:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:89451*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89451*0 + 3*633*FLEN/8, x4, x1, x2)

inst_29818:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:89454*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89454*0 + 3*634*FLEN/8, x4, x1, x2)

inst_29819:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:89457*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89457*0 + 3*635*FLEN/8, x4, x1, x2)

inst_29820:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x80999999; valaddr_reg:x3; val_offset:89460*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89460*0 + 3*636*FLEN/8, x4, x1, x2)

inst_29821:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x80a49249; valaddr_reg:x3; val_offset:89463*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89463*0 + 3*637*FLEN/8, x4, x1, x2)

inst_29822:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x80b33333; valaddr_reg:x3; val_offset:89466*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89466*0 + 3*638*FLEN/8, x4, x1, x2)

inst_29823:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x80b6db6d; valaddr_reg:x3; val_offset:89469*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89469*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_29824:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x80bbbbbb; valaddr_reg:x3; val_offset:89472*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89472*0 + 3*640*FLEN/8, x4, x1, x2)

inst_29825:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x80c44444; valaddr_reg:x3; val_offset:89475*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89475*0 + 3*641*FLEN/8, x4, x1, x2)

inst_29826:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x80cccccc; valaddr_reg:x3; val_offset:89478*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89478*0 + 3*642*FLEN/8, x4, x1, x2)

inst_29827:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x80db6db6; valaddr_reg:x3; val_offset:89481*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89481*0 + 3*643*FLEN/8, x4, x1, x2)

inst_29828:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x80e66666; valaddr_reg:x3; val_offset:89484*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89484*0 + 3*644*FLEN/8, x4, x1, x2)

inst_29829:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x80edb6db; valaddr_reg:x3; val_offset:89487*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89487*0 + 3*645*FLEN/8, x4, x1, x2)

inst_29830:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:89490*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89490*0 + 3*646*FLEN/8, x4, x1, x2)

inst_29831:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:89493*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89493*0 + 3*647*FLEN/8, x4, x1, x2)

inst_29832:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:89496*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89496*0 + 3*648*FLEN/8, x4, x1, x2)

inst_29833:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x82800000; valaddr_reg:x3; val_offset:89499*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89499*0 + 3*649*FLEN/8, x4, x1, x2)

inst_29834:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x82800001; valaddr_reg:x3; val_offset:89502*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89502*0 + 3*650*FLEN/8, x4, x1, x2)

inst_29835:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x82800003; valaddr_reg:x3; val_offset:89505*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89505*0 + 3*651*FLEN/8, x4, x1, x2)

inst_29836:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x82800007; valaddr_reg:x3; val_offset:89508*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89508*0 + 3*652*FLEN/8, x4, x1, x2)

inst_29837:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x8280000f; valaddr_reg:x3; val_offset:89511*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89511*0 + 3*653*FLEN/8, x4, x1, x2)

inst_29838:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x8280001f; valaddr_reg:x3; val_offset:89514*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89514*0 + 3*654*FLEN/8, x4, x1, x2)

inst_29839:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x8280003f; valaddr_reg:x3; val_offset:89517*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89517*0 + 3*655*FLEN/8, x4, x1, x2)

inst_29840:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x8280007f; valaddr_reg:x3; val_offset:89520*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89520*0 + 3*656*FLEN/8, x4, x1, x2)

inst_29841:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x828000ff; valaddr_reg:x3; val_offset:89523*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89523*0 + 3*657*FLEN/8, x4, x1, x2)

inst_29842:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x828001ff; valaddr_reg:x3; val_offset:89526*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89526*0 + 3*658*FLEN/8, x4, x1, x2)

inst_29843:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x828003ff; valaddr_reg:x3; val_offset:89529*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89529*0 + 3*659*FLEN/8, x4, x1, x2)

inst_29844:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x828007ff; valaddr_reg:x3; val_offset:89532*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89532*0 + 3*660*FLEN/8, x4, x1, x2)

inst_29845:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x82800fff; valaddr_reg:x3; val_offset:89535*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89535*0 + 3*661*FLEN/8, x4, x1, x2)

inst_29846:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x82801fff; valaddr_reg:x3; val_offset:89538*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89538*0 + 3*662*FLEN/8, x4, x1, x2)

inst_29847:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x82803fff; valaddr_reg:x3; val_offset:89541*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89541*0 + 3*663*FLEN/8, x4, x1, x2)

inst_29848:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x82807fff; valaddr_reg:x3; val_offset:89544*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89544*0 + 3*664*FLEN/8, x4, x1, x2)

inst_29849:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x8280ffff; valaddr_reg:x3; val_offset:89547*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89547*0 + 3*665*FLEN/8, x4, x1, x2)

inst_29850:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x8281ffff; valaddr_reg:x3; val_offset:89550*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89550*0 + 3*666*FLEN/8, x4, x1, x2)

inst_29851:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x8283ffff; valaddr_reg:x3; val_offset:89553*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89553*0 + 3*667*FLEN/8, x4, x1, x2)

inst_29852:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x8287ffff; valaddr_reg:x3; val_offset:89556*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89556*0 + 3*668*FLEN/8, x4, x1, x2)

inst_29853:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x828fffff; valaddr_reg:x3; val_offset:89559*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89559*0 + 3*669*FLEN/8, x4, x1, x2)

inst_29854:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x829fffff; valaddr_reg:x3; val_offset:89562*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89562*0 + 3*670*FLEN/8, x4, x1, x2)

inst_29855:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x82bfffff; valaddr_reg:x3; val_offset:89565*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89565*0 + 3*671*FLEN/8, x4, x1, x2)

inst_29856:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x82c00000; valaddr_reg:x3; val_offset:89568*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89568*0 + 3*672*FLEN/8, x4, x1, x2)

inst_29857:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x82e00000; valaddr_reg:x3; val_offset:89571*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89571*0 + 3*673*FLEN/8, x4, x1, x2)

inst_29858:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x82f00000; valaddr_reg:x3; val_offset:89574*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89574*0 + 3*674*FLEN/8, x4, x1, x2)

inst_29859:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x82f80000; valaddr_reg:x3; val_offset:89577*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89577*0 + 3*675*FLEN/8, x4, x1, x2)

inst_29860:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x82fc0000; valaddr_reg:x3; val_offset:89580*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89580*0 + 3*676*FLEN/8, x4, x1, x2)

inst_29861:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x82fe0000; valaddr_reg:x3; val_offset:89583*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89583*0 + 3*677*FLEN/8, x4, x1, x2)

inst_29862:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x82ff0000; valaddr_reg:x3; val_offset:89586*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89586*0 + 3*678*FLEN/8, x4, x1, x2)

inst_29863:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x82ff8000; valaddr_reg:x3; val_offset:89589*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89589*0 + 3*679*FLEN/8, x4, x1, x2)

inst_29864:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x82ffc000; valaddr_reg:x3; val_offset:89592*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89592*0 + 3*680*FLEN/8, x4, x1, x2)

inst_29865:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x82ffe000; valaddr_reg:x3; val_offset:89595*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89595*0 + 3*681*FLEN/8, x4, x1, x2)

inst_29866:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x82fff000; valaddr_reg:x3; val_offset:89598*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89598*0 + 3*682*FLEN/8, x4, x1, x2)

inst_29867:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x82fff800; valaddr_reg:x3; val_offset:89601*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89601*0 + 3*683*FLEN/8, x4, x1, x2)

inst_29868:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x82fffc00; valaddr_reg:x3; val_offset:89604*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89604*0 + 3*684*FLEN/8, x4, x1, x2)

inst_29869:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x82fffe00; valaddr_reg:x3; val_offset:89607*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89607*0 + 3*685*FLEN/8, x4, x1, x2)

inst_29870:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x82ffff00; valaddr_reg:x3; val_offset:89610*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89610*0 + 3*686*FLEN/8, x4, x1, x2)

inst_29871:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x82ffff80; valaddr_reg:x3; val_offset:89613*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89613*0 + 3*687*FLEN/8, x4, x1, x2)

inst_29872:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x82ffffc0; valaddr_reg:x3; val_offset:89616*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89616*0 + 3*688*FLEN/8, x4, x1, x2)

inst_29873:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x82ffffe0; valaddr_reg:x3; val_offset:89619*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89619*0 + 3*689*FLEN/8, x4, x1, x2)

inst_29874:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x82fffff0; valaddr_reg:x3; val_offset:89622*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89622*0 + 3*690*FLEN/8, x4, x1, x2)

inst_29875:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x82fffff8; valaddr_reg:x3; val_offset:89625*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89625*0 + 3*691*FLEN/8, x4, x1, x2)

inst_29876:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x82fffffc; valaddr_reg:x3; val_offset:89628*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89628*0 + 3*692*FLEN/8, x4, x1, x2)

inst_29877:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x82fffffe; valaddr_reg:x3; val_offset:89631*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89631*0 + 3*693*FLEN/8, x4, x1, x2)

inst_29878:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162a78 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f162a78; op2val:0x80000000;
op3val:0x82ffffff; valaddr_reg:x3; val_offset:89634*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89634*0 + 3*694*FLEN/8, x4, x1, x2)

inst_29879:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x30800000; valaddr_reg:x3; val_offset:89637*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89637*0 + 3*695*FLEN/8, x4, x1, x2)

inst_29880:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x30800001; valaddr_reg:x3; val_offset:89640*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89640*0 + 3*696*FLEN/8, x4, x1, x2)

inst_29881:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x30800003; valaddr_reg:x3; val_offset:89643*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89643*0 + 3*697*FLEN/8, x4, x1, x2)

inst_29882:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x30800007; valaddr_reg:x3; val_offset:89646*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89646*0 + 3*698*FLEN/8, x4, x1, x2)

inst_29883:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x3080000f; valaddr_reg:x3; val_offset:89649*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89649*0 + 3*699*FLEN/8, x4, x1, x2)

inst_29884:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x3080001f; valaddr_reg:x3; val_offset:89652*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89652*0 + 3*700*FLEN/8, x4, x1, x2)

inst_29885:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x3080003f; valaddr_reg:x3; val_offset:89655*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89655*0 + 3*701*FLEN/8, x4, x1, x2)

inst_29886:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x3080007f; valaddr_reg:x3; val_offset:89658*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89658*0 + 3*702*FLEN/8, x4, x1, x2)

inst_29887:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x308000ff; valaddr_reg:x3; val_offset:89661*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89661*0 + 3*703*FLEN/8, x4, x1, x2)

inst_29888:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x308001ff; valaddr_reg:x3; val_offset:89664*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89664*0 + 3*704*FLEN/8, x4, x1, x2)

inst_29889:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x308003ff; valaddr_reg:x3; val_offset:89667*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89667*0 + 3*705*FLEN/8, x4, x1, x2)

inst_29890:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x308007ff; valaddr_reg:x3; val_offset:89670*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89670*0 + 3*706*FLEN/8, x4, x1, x2)

inst_29891:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x30800fff; valaddr_reg:x3; val_offset:89673*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89673*0 + 3*707*FLEN/8, x4, x1, x2)

inst_29892:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x30801fff; valaddr_reg:x3; val_offset:89676*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89676*0 + 3*708*FLEN/8, x4, x1, x2)

inst_29893:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x30803fff; valaddr_reg:x3; val_offset:89679*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89679*0 + 3*709*FLEN/8, x4, x1, x2)

inst_29894:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x30807fff; valaddr_reg:x3; val_offset:89682*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89682*0 + 3*710*FLEN/8, x4, x1, x2)

inst_29895:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x3080ffff; valaddr_reg:x3; val_offset:89685*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89685*0 + 3*711*FLEN/8, x4, x1, x2)

inst_29896:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x3081ffff; valaddr_reg:x3; val_offset:89688*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89688*0 + 3*712*FLEN/8, x4, x1, x2)

inst_29897:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x3083ffff; valaddr_reg:x3; val_offset:89691*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89691*0 + 3*713*FLEN/8, x4, x1, x2)

inst_29898:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x3087ffff; valaddr_reg:x3; val_offset:89694*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89694*0 + 3*714*FLEN/8, x4, x1, x2)

inst_29899:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x308fffff; valaddr_reg:x3; val_offset:89697*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89697*0 + 3*715*FLEN/8, x4, x1, x2)

inst_29900:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x309fffff; valaddr_reg:x3; val_offset:89700*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89700*0 + 3*716*FLEN/8, x4, x1, x2)

inst_29901:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x30bfffff; valaddr_reg:x3; val_offset:89703*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89703*0 + 3*717*FLEN/8, x4, x1, x2)

inst_29902:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x30c00000; valaddr_reg:x3; val_offset:89706*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89706*0 + 3*718*FLEN/8, x4, x1, x2)

inst_29903:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x30e00000; valaddr_reg:x3; val_offset:89709*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89709*0 + 3*719*FLEN/8, x4, x1, x2)

inst_29904:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x30f00000; valaddr_reg:x3; val_offset:89712*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89712*0 + 3*720*FLEN/8, x4, x1, x2)

inst_29905:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x30f80000; valaddr_reg:x3; val_offset:89715*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89715*0 + 3*721*FLEN/8, x4, x1, x2)

inst_29906:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x30fc0000; valaddr_reg:x3; val_offset:89718*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89718*0 + 3*722*FLEN/8, x4, x1, x2)

inst_29907:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x30fe0000; valaddr_reg:x3; val_offset:89721*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89721*0 + 3*723*FLEN/8, x4, x1, x2)

inst_29908:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x30ff0000; valaddr_reg:x3; val_offset:89724*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89724*0 + 3*724*FLEN/8, x4, x1, x2)

inst_29909:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x30ff8000; valaddr_reg:x3; val_offset:89727*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89727*0 + 3*725*FLEN/8, x4, x1, x2)

inst_29910:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x30ffc000; valaddr_reg:x3; val_offset:89730*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89730*0 + 3*726*FLEN/8, x4, x1, x2)

inst_29911:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x30ffe000; valaddr_reg:x3; val_offset:89733*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89733*0 + 3*727*FLEN/8, x4, x1, x2)

inst_29912:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x30fff000; valaddr_reg:x3; val_offset:89736*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89736*0 + 3*728*FLEN/8, x4, x1, x2)

inst_29913:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x30fff800; valaddr_reg:x3; val_offset:89739*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89739*0 + 3*729*FLEN/8, x4, x1, x2)

inst_29914:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x30fffc00; valaddr_reg:x3; val_offset:89742*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89742*0 + 3*730*FLEN/8, x4, x1, x2)

inst_29915:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x30fffe00; valaddr_reg:x3; val_offset:89745*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89745*0 + 3*731*FLEN/8, x4, x1, x2)

inst_29916:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x30ffff00; valaddr_reg:x3; val_offset:89748*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89748*0 + 3*732*FLEN/8, x4, x1, x2)

inst_29917:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x30ffff80; valaddr_reg:x3; val_offset:89751*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89751*0 + 3*733*FLEN/8, x4, x1, x2)

inst_29918:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x30ffffc0; valaddr_reg:x3; val_offset:89754*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89754*0 + 3*734*FLEN/8, x4, x1, x2)

inst_29919:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x30ffffe0; valaddr_reg:x3; val_offset:89757*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89757*0 + 3*735*FLEN/8, x4, x1, x2)

inst_29920:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x30fffff0; valaddr_reg:x3; val_offset:89760*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89760*0 + 3*736*FLEN/8, x4, x1, x2)

inst_29921:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x30fffff8; valaddr_reg:x3; val_offset:89763*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89763*0 + 3*737*FLEN/8, x4, x1, x2)

inst_29922:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x30fffffc; valaddr_reg:x3; val_offset:89766*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89766*0 + 3*738*FLEN/8, x4, x1, x2)

inst_29923:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x30fffffe; valaddr_reg:x3; val_offset:89769*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89769*0 + 3*739*FLEN/8, x4, x1, x2)

inst_29924:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x61 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x30ffffff; valaddr_reg:x3; val_offset:89772*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89772*0 + 3*740*FLEN/8, x4, x1, x2)

inst_29925:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x3f800001; valaddr_reg:x3; val_offset:89775*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89775*0 + 3*741*FLEN/8, x4, x1, x2)

inst_29926:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x3f800003; valaddr_reg:x3; val_offset:89778*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89778*0 + 3*742*FLEN/8, x4, x1, x2)

inst_29927:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x3f800007; valaddr_reg:x3; val_offset:89781*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89781*0 + 3*743*FLEN/8, x4, x1, x2)

inst_29928:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x3f999999; valaddr_reg:x3; val_offset:89784*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89784*0 + 3*744*FLEN/8, x4, x1, x2)

inst_29929:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:89787*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89787*0 + 3*745*FLEN/8, x4, x1, x2)

inst_29930:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:89790*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89790*0 + 3*746*FLEN/8, x4, x1, x2)

inst_29931:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:89793*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89793*0 + 3*747*FLEN/8, x4, x1, x2)

inst_29932:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:89796*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89796*0 + 3*748*FLEN/8, x4, x1, x2)

inst_29933:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:89799*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89799*0 + 3*749*FLEN/8, x4, x1, x2)

inst_29934:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:89802*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89802*0 + 3*750*FLEN/8, x4, x1, x2)

inst_29935:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:89805*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89805*0 + 3*751*FLEN/8, x4, x1, x2)

inst_29936:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:89808*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89808*0 + 3*752*FLEN/8, x4, x1, x2)

inst_29937:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:89811*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89811*0 + 3*753*FLEN/8, x4, x1, x2)

inst_29938:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:89814*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89814*0 + 3*754*FLEN/8, x4, x1, x2)

inst_29939:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:89817*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89817*0 + 3*755*FLEN/8, x4, x1, x2)

inst_29940:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165bd6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x367ba7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f165bd6; op2val:0x367ba7;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:89820*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89820*0 + 3*756*FLEN/8, x4, x1, x2)

inst_29941:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x168f5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f168f5a; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:89823*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89823*0 + 3*757*FLEN/8, x4, x1, x2)

inst_29942:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x168f5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f168f5a; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:89826*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89826*0 + 3*758*FLEN/8, x4, x1, x2)

inst_29943:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x168f5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f168f5a; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:89829*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89829*0 + 3*759*FLEN/8, x4, x1, x2)

inst_29944:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x168f5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f168f5a; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:89832*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89832*0 + 3*760*FLEN/8, x4, x1, x2)

inst_29945:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x168f5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f168f5a; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:89835*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89835*0 + 3*761*FLEN/8, x4, x1, x2)

inst_29946:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x168f5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f168f5a; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:89838*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89838*0 + 3*762*FLEN/8, x4, x1, x2)

inst_29947:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x168f5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f168f5a; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:89841*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89841*0 + 3*763*FLEN/8, x4, x1, x2)

inst_29948:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x168f5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f168f5a; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:89844*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89844*0 + 3*764*FLEN/8, x4, x1, x2)

inst_29949:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x168f5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f168f5a; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:89847*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89847*0 + 3*765*FLEN/8, x4, x1, x2)

inst_29950:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x168f5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f168f5a; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:89850*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89850*0 + 3*766*FLEN/8, x4, x1, x2)

inst_29951:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x168f5a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f168f5a; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:89853*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89853*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2131905939,32,FLEN)
NAN_BOXED(3219126580,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2131905939,32,FLEN)
NAN_BOXED(3219126580,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2131905939,32,FLEN)
NAN_BOXED(3219126580,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2131905939,32,FLEN)
NAN_BOXED(3219126580,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2131905939,32,FLEN)
NAN_BOXED(3219126580,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2131905939,32,FLEN)
NAN_BOXED(3219126580,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2131905939,32,FLEN)
NAN_BOXED(3219126580,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2131905939,32,FLEN)
NAN_BOXED(3219126580,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2131905939,32,FLEN)
NAN_BOXED(3219126580,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2131905939,32,FLEN)
NAN_BOXED(3219126580,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2131905939,32,FLEN)
NAN_BOXED(3219126580,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2131905939,32,FLEN)
NAN_BOXED(3219126580,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2131905939,32,FLEN)
NAN_BOXED(3219126580,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3741319168,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3741319169,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3741319171,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3741319175,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3741319183,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3741319199,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3741319231,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3741319295,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3741319423,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3741319679,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3741320191,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3741321215,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3741323263,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3741327359,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3741335551,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3741351935,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3741384703,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3741450239,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3741581311,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3741843455,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3742367743,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3743416319,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3745513471,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3745513472,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3747610624,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3748659200,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3749183488,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3749445632,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3749576704,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3749642240,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3749675008,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3749691392,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3749699584,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3749703680,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3749705728,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3749706752,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3749707264,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3749707520,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3749707648,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3749707712,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3749707744,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3749707760,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3749707768,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3749707772,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3749707774,32,FLEN)
NAN_BOXED(2131908099,32,FLEN)
NAN_BOXED(2151152403,32,FLEN)
NAN_BOXED(3749707775,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1166016512,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1166016513,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1166016515,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1166016519,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1166016527,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1166016543,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1166016575,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1166016639,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1166016767,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1166017023,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1166017535,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1166018559,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1166020607,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1166024703,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1166032895,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1166049279,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1166082047,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1166147583,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1166278655,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1166540799,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1167065087,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1168113663,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1170210815,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1170210816,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1172307968,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1173356544,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1173880832,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1174142976,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1174274048,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1174339584,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1174372352,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1174388736,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1174396928,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1174401024,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1174403072,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1174404096,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1174404608,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1174404864,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1174404992,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1174405056,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1174405088,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1174405104,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1174405112,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1174405116,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1174405118,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1174405119,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3841982464,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3841982465,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3841982467,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3841982471,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3841982479,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3841982495,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3841982527,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3841982591,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3841982719,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3841982975,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3841983487,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3841984511,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3841986559,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3841990655,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3841998847,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3842015231,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3842047999,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3842113535,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3842244607,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3842506751,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3843031039,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3844079615,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3846176767,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3846176768,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3848273920,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3849322496,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3849846784,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3850108928,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3850240000,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3850305536,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3850338304,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3850354688,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3850362880,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3850366976,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3850369024,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3850370048,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3850370560,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3850370816,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3850370944,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3850371008,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3850371040,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3850371056,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3850371064,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3850371068,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3850371070,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(3850371071,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2131976979,32,FLEN)
NAN_BOXED(3219018627,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3967811584,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3967811585,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3967811587,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3967811591,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3967811599,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3967811615,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3967811647,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3967811711,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3967811839,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3967812095,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3967812607,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3967813631,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3967815679,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3967819775,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3967827967,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3967844351,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3967877119,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3967942655,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3968073727,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3968335871,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3968860159,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3969908735,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3972005887,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3972005888,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3974103040,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3975151616,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3975675904,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3975938048,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3976069120,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3976134656,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3976167424,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3976183808,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3976192000,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3976196096,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3976198144,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3976199168,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3976199680,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3976199936,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3976200064,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3976200128,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3976200160,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3976200176,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3976200184,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3976200188,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3976200190,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(3976200191,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2131989480,32,FLEN)
NAN_BOXED(3218999793,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2852126720,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2852126721,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2852126723,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2852126727,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2852126735,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2852126751,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2852126783,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2852126847,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2852126975,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2852127231,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2852127743,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2852128767,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2852130815,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2852134911,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2852143103,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2852159487,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2852192255,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2852257791,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2852388863,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2852651007,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2853175295,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2854223871,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2856321023,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2856321024,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2858418176,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2859466752,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2859991040,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2860253184,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2860384256,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2860449792,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2860482560,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2860498944,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2860507136,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2860511232,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2860513280,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2860514304,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2860514816,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2860515072,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2860515200,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2860515264,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2860515296,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2860515312,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2860515320,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2860515324,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2860515326,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(2860515327,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2132034168,32,FLEN)
NAN_BOXED(2151104801,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976064,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976065,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976067,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976071,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976079,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976095,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976127,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976191,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976319,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976575,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373977087,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373978111,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373980159,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373984255,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373992447,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2374008831,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2374041599,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2374107135,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2374238207,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2374500351,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2375024639,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2376073215,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2378170367,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2378170368,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2380267520,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2381316096,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2381840384,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382102528,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382233600,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382299136,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382331904,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382348288,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382356480,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382360576,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382362624,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382363648,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364160,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364416,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364544,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364608,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364640,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364656,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364664,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364668,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364670,32,FLEN)
NAN_BOXED(2132037873,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364671,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157549977,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2158269001,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159227699,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159467373,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159786939,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160346180,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160905420,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2161864118,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162583142,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163062491,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307712,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307713,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307715,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307719,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307727,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307743,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307775,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307839,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307967,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424308223,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424308735,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424309759,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424311807,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424315903,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424324095,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424340479,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424373247,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424438783,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424569855,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424831999,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2425356287,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2426404863,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2428502015,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2428502016,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2430599168,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2431647744,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2432172032,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2432434176,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2432565248,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2432630784,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2432663552,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2432679936,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2432688128,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2432692224,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2432694272,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2432695296,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2432695808,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2432696064,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2432696192,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2432696256,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2432696288,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2432696304,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2432696312,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2432696316,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2432696318,32,FLEN)
NAN_BOXED(2132054716,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2432696319,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388609,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388611,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388615,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10066329,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10785353,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11744051,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11983725,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12303291,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12862532,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(13421772,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(14380470,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15099494,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15578843,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777208,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777212,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777214,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176160768,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176160769,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176160771,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176160775,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176160783,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176160799,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176160831,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176160895,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176161023,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176161279,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176161791,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176162815,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176164863,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176168959,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176177151,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176193535,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176226303,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176291839,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176422911,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176685055,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(177209343,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(178257919,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(180355071,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(180355072,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(182452224,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(183500800,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184025088,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184287232,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184418304,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184483840,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184516608,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184532992,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184541184,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184545280,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184547328,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184548352,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184548864,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549120,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549248,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549312,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549344,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549360,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549368,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549372,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549374,32,FLEN)
NAN_BOXED(2132087446,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549375,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157549977,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2158269001,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159227699,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159467373,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159786939,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160346180,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160905420,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2161864118,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162583142,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163062491,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033024,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033025,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033027,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033031,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033039,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033055,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033087,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033151,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033279,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033535,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332034047,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332035071,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332037119,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332041215,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332049407,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332065791,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332098559,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332164095,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332295167,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332557311,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2333081599,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2334130175,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2336227327,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2336227328,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2338324480,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2339373056,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2339897344,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340159488,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340290560,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340356096,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340388864,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340405248,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340413440,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340417536,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340419584,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340420608,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421120,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421376,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421504,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421568,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421600,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421616,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421624,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421628,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421630,32,FLEN)
NAN_BOXED(2132124891,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421631,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3472883712,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3472883713,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3472883715,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3472883719,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3472883727,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3472883743,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3472883775,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3472883839,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3472883967,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3472884223,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3472884735,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3472885759,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3472887807,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3472891903,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3472900095,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3472916479,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3472949247,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3473014783,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3473145855,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3473407999,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3473932287,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3474980863,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3477078015,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3477078016,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3479175168,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3480223744,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3480748032,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3481010176,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3481141248,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3481206784,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3481239552,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3481255936,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3481264128,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3481268224,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3481270272,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3481271296,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3481271808,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3481272064,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3481272192,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3481272256,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3481272288,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3481272304,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3481272312,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3481272316,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3481272318,32,FLEN)
NAN_BOXED(2132125158,32,FLEN)
NAN_BOXED(2151071205,32,FLEN)
NAN_BOXED(3481272319,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157549977,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2158269001,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159227699,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159467373,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159786939,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160346180,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160905420,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2161864118,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162583142,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163062491,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426688,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426689,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426691,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426695,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426703,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426719,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426751,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426815,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426943,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189427199,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189427711,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189428735,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189430783,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189434879,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189443071,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189459455,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189492223,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189557759,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189688831,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189950975,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2190475263,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2191523839,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2193620991,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2193620992,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2195718144,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2196766720,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197291008,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197553152,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197684224,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197749760,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197782528,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197798912,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197807104,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197811200,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197813248,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197814272,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197814784,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815040,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815168,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815232,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815264,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815280,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815288,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815292,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815294,32,FLEN)
NAN_BOXED(2132159096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815295,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(813694976,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(813694977,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(813694979,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(813694983,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(813694991,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(813695007,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(813695039,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(813695103,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(813695231,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(813695487,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(813695999,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(813697023,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(813699071,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(813703167,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(813711359,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(813727743,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(813760511,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(813826047,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(813957119,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(814219263,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(814743551,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(815792127,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(817889279,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(817889280,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(819986432,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(821035008,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(821559296,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(821821440,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(821952512,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(822018048,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(822050816,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(822067200,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(822075392,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(822079488,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(822081536,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(822082560,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(822083072,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(822083328,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(822083456,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(822083520,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(822083552,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(822083568,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(822083576,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(822083580,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(822083582,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(822083583,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2132171734,32,FLEN)
NAN_BOXED(3570599,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2132184922,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2132184922,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2132184922,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2132184922,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2132184922,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2132184922,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2132184922,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2132184922,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2132184922,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2132184922,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2132184922,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
