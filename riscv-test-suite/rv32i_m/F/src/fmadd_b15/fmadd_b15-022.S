
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:17:59 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmadd.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmadd_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmadd_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmadd_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_16128:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2022af and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4ca070 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea022af; op2val:0x404ca070;
op3val:0x7f249249; valaddr_reg:x3; val_offset:48384*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48384*0 + 3*0*FLEN/8, x4, x1, x2)

inst_16129:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2022af and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4ca070 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea022af; op2val:0x404ca070;
op3val:0x7f333333; valaddr_reg:x3; val_offset:48387*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48387*0 + 3*1*FLEN/8, x4, x1, x2)

inst_16130:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2022af and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4ca070 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea022af; op2val:0x404ca070;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:48390*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48390*0 + 3*2*FLEN/8, x4, x1, x2)

inst_16131:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2022af and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4ca070 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea022af; op2val:0x404ca070;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:48393*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48393*0 + 3*3*FLEN/8, x4, x1, x2)

inst_16132:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2022af and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4ca070 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea022af; op2val:0x404ca070;
op3val:0x7f444444; valaddr_reg:x3; val_offset:48396*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48396*0 + 3*4*FLEN/8, x4, x1, x2)

inst_16133:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2022af and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4ca070 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea022af; op2val:0x404ca070;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:48399*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48399*0 + 3*5*FLEN/8, x4, x1, x2)

inst_16134:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2022af and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4ca070 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea022af; op2val:0x404ca070;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:48402*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48402*0 + 3*6*FLEN/8, x4, x1, x2)

inst_16135:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2022af and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4ca070 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea022af; op2val:0x404ca070;
op3val:0x7f666666; valaddr_reg:x3; val_offset:48405*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48405*0 + 3*7*FLEN/8, x4, x1, x2)

inst_16136:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2022af and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4ca070 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea022af; op2val:0x404ca070;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:48408*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48408*0 + 3*8*FLEN/8, x4, x1, x2)

inst_16137:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2022af and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4ca070 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea022af; op2val:0x404ca070;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:48411*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48411*0 + 3*9*FLEN/8, x4, x1, x2)

inst_16138:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2022af and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4ca070 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea022af; op2val:0x404ca070;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:48414*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48414*0 + 3*10*FLEN/8, x4, x1, x2)

inst_16139:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2022af and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4ca070 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea022af; op2val:0x404ca070;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:48417*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48417*0 + 3*11*FLEN/8, x4, x1, x2)

inst_16140:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2036ee and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4c8694 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea036ee; op2val:0xc04c8694;
op3val:0xff000001; valaddr_reg:x3; val_offset:48420*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48420*0 + 3*12*FLEN/8, x4, x1, x2)

inst_16141:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2036ee and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4c8694 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea036ee; op2val:0xc04c8694;
op3val:0xff000003; valaddr_reg:x3; val_offset:48423*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48423*0 + 3*13*FLEN/8, x4, x1, x2)

inst_16142:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2036ee and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4c8694 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea036ee; op2val:0xc04c8694;
op3val:0xff000007; valaddr_reg:x3; val_offset:48426*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48426*0 + 3*14*FLEN/8, x4, x1, x2)

inst_16143:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2036ee and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4c8694 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea036ee; op2val:0xc04c8694;
op3val:0xff199999; valaddr_reg:x3; val_offset:48429*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48429*0 + 3*15*FLEN/8, x4, x1, x2)

inst_16144:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2036ee and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4c8694 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea036ee; op2val:0xc04c8694;
op3val:0xff249249; valaddr_reg:x3; val_offset:48432*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48432*0 + 3*16*FLEN/8, x4, x1, x2)

inst_16145:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2036ee and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4c8694 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea036ee; op2val:0xc04c8694;
op3val:0xff333333; valaddr_reg:x3; val_offset:48435*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48435*0 + 3*17*FLEN/8, x4, x1, x2)

inst_16146:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2036ee and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4c8694 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea036ee; op2val:0xc04c8694;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:48438*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48438*0 + 3*18*FLEN/8, x4, x1, x2)

inst_16147:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2036ee and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4c8694 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea036ee; op2val:0xc04c8694;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:48441*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48441*0 + 3*19*FLEN/8, x4, x1, x2)

inst_16148:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2036ee and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4c8694 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea036ee; op2val:0xc04c8694;
op3val:0xff444444; valaddr_reg:x3; val_offset:48444*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48444*0 + 3*20*FLEN/8, x4, x1, x2)

inst_16149:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2036ee and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4c8694 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea036ee; op2val:0xc04c8694;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:48447*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48447*0 + 3*21*FLEN/8, x4, x1, x2)

inst_16150:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2036ee and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4c8694 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea036ee; op2val:0xc04c8694;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:48450*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48450*0 + 3*22*FLEN/8, x4, x1, x2)

inst_16151:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2036ee and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4c8694 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea036ee; op2val:0xc04c8694;
op3val:0xff666666; valaddr_reg:x3; val_offset:48453*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48453*0 + 3*23*FLEN/8, x4, x1, x2)

inst_16152:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2036ee and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4c8694 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea036ee; op2val:0xc04c8694;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:48456*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48456*0 + 3*24*FLEN/8, x4, x1, x2)

inst_16153:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2036ee and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4c8694 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea036ee; op2val:0xc04c8694;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:48459*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48459*0 + 3*25*FLEN/8, x4, x1, x2)

inst_16154:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2036ee and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4c8694 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea036ee; op2val:0xc04c8694;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:48462*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48462*0 + 3*26*FLEN/8, x4, x1, x2)

inst_16155:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2036ee and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4c8694 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea036ee; op2val:0xc04c8694;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:48465*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48465*0 + 3*27*FLEN/8, x4, x1, x2)

inst_16156:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2036ee and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4c8694 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea036ee; op2val:0xc04c8694;
op3val:0xff7fffff; valaddr_reg:x3; val_offset:48468*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48468*0 + 3*28*FLEN/8, x4, x1, x2)

inst_16157:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb6000000; valaddr_reg:x3; val_offset:48471*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48471*0 + 3*29*FLEN/8, x4, x1, x2)

inst_16158:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb6000001; valaddr_reg:x3; val_offset:48474*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48474*0 + 3*30*FLEN/8, x4, x1, x2)

inst_16159:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb6000003; valaddr_reg:x3; val_offset:48477*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48477*0 + 3*31*FLEN/8, x4, x1, x2)

inst_16160:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb6000007; valaddr_reg:x3; val_offset:48480*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48480*0 + 3*32*FLEN/8, x4, x1, x2)

inst_16161:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb600000f; valaddr_reg:x3; val_offset:48483*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48483*0 + 3*33*FLEN/8, x4, x1, x2)

inst_16162:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb600001f; valaddr_reg:x3; val_offset:48486*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48486*0 + 3*34*FLEN/8, x4, x1, x2)

inst_16163:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb600003f; valaddr_reg:x3; val_offset:48489*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48489*0 + 3*35*FLEN/8, x4, x1, x2)

inst_16164:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb600007f; valaddr_reg:x3; val_offset:48492*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48492*0 + 3*36*FLEN/8, x4, x1, x2)

inst_16165:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb60000ff; valaddr_reg:x3; val_offset:48495*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48495*0 + 3*37*FLEN/8, x4, x1, x2)

inst_16166:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb60001ff; valaddr_reg:x3; val_offset:48498*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48498*0 + 3*38*FLEN/8, x4, x1, x2)

inst_16167:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb60003ff; valaddr_reg:x3; val_offset:48501*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48501*0 + 3*39*FLEN/8, x4, x1, x2)

inst_16168:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb60007ff; valaddr_reg:x3; val_offset:48504*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48504*0 + 3*40*FLEN/8, x4, x1, x2)

inst_16169:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb6000fff; valaddr_reg:x3; val_offset:48507*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48507*0 + 3*41*FLEN/8, x4, x1, x2)

inst_16170:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb6001fff; valaddr_reg:x3; val_offset:48510*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48510*0 + 3*42*FLEN/8, x4, x1, x2)

inst_16171:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb6003fff; valaddr_reg:x3; val_offset:48513*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48513*0 + 3*43*FLEN/8, x4, x1, x2)

inst_16172:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb6007fff; valaddr_reg:x3; val_offset:48516*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48516*0 + 3*44*FLEN/8, x4, x1, x2)

inst_16173:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb600ffff; valaddr_reg:x3; val_offset:48519*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48519*0 + 3*45*FLEN/8, x4, x1, x2)

inst_16174:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb601ffff; valaddr_reg:x3; val_offset:48522*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48522*0 + 3*46*FLEN/8, x4, x1, x2)

inst_16175:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb603ffff; valaddr_reg:x3; val_offset:48525*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48525*0 + 3*47*FLEN/8, x4, x1, x2)

inst_16176:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb607ffff; valaddr_reg:x3; val_offset:48528*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48528*0 + 3*48*FLEN/8, x4, x1, x2)

inst_16177:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb60fffff; valaddr_reg:x3; val_offset:48531*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48531*0 + 3*49*FLEN/8, x4, x1, x2)

inst_16178:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb61fffff; valaddr_reg:x3; val_offset:48534*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48534*0 + 3*50*FLEN/8, x4, x1, x2)

inst_16179:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb63fffff; valaddr_reg:x3; val_offset:48537*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48537*0 + 3*51*FLEN/8, x4, x1, x2)

inst_16180:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb6400000; valaddr_reg:x3; val_offset:48540*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48540*0 + 3*52*FLEN/8, x4, x1, x2)

inst_16181:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb6600000; valaddr_reg:x3; val_offset:48543*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48543*0 + 3*53*FLEN/8, x4, x1, x2)

inst_16182:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb6700000; valaddr_reg:x3; val_offset:48546*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48546*0 + 3*54*FLEN/8, x4, x1, x2)

inst_16183:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb6780000; valaddr_reg:x3; val_offset:48549*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48549*0 + 3*55*FLEN/8, x4, x1, x2)

inst_16184:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb67c0000; valaddr_reg:x3; val_offset:48552*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48552*0 + 3*56*FLEN/8, x4, x1, x2)

inst_16185:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb67e0000; valaddr_reg:x3; val_offset:48555*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48555*0 + 3*57*FLEN/8, x4, x1, x2)

inst_16186:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb67f0000; valaddr_reg:x3; val_offset:48558*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48558*0 + 3*58*FLEN/8, x4, x1, x2)

inst_16187:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb67f8000; valaddr_reg:x3; val_offset:48561*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48561*0 + 3*59*FLEN/8, x4, x1, x2)

inst_16188:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb67fc000; valaddr_reg:x3; val_offset:48564*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48564*0 + 3*60*FLEN/8, x4, x1, x2)

inst_16189:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb67fe000; valaddr_reg:x3; val_offset:48567*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48567*0 + 3*61*FLEN/8, x4, x1, x2)

inst_16190:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb67ff000; valaddr_reg:x3; val_offset:48570*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48570*0 + 3*62*FLEN/8, x4, x1, x2)

inst_16191:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb67ff800; valaddr_reg:x3; val_offset:48573*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48573*0 + 3*63*FLEN/8, x4, x1, x2)

inst_16192:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb67ffc00; valaddr_reg:x3; val_offset:48576*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48576*0 + 3*64*FLEN/8, x4, x1, x2)

inst_16193:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb67ffe00; valaddr_reg:x3; val_offset:48579*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48579*0 + 3*65*FLEN/8, x4, x1, x2)

inst_16194:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb67fff00; valaddr_reg:x3; val_offset:48582*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48582*0 + 3*66*FLEN/8, x4, x1, x2)

inst_16195:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb67fff80; valaddr_reg:x3; val_offset:48585*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48585*0 + 3*67*FLEN/8, x4, x1, x2)

inst_16196:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb67fffc0; valaddr_reg:x3; val_offset:48588*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48588*0 + 3*68*FLEN/8, x4, x1, x2)

inst_16197:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb67fffe0; valaddr_reg:x3; val_offset:48591*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48591*0 + 3*69*FLEN/8, x4, x1, x2)

inst_16198:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb67ffff0; valaddr_reg:x3; val_offset:48594*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48594*0 + 3*70*FLEN/8, x4, x1, x2)

inst_16199:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb67ffff8; valaddr_reg:x3; val_offset:48597*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48597*0 + 3*71*FLEN/8, x4, x1, x2)

inst_16200:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb67ffffc; valaddr_reg:x3; val_offset:48600*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48600*0 + 3*72*FLEN/8, x4, x1, x2)

inst_16201:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb67ffffe; valaddr_reg:x3; val_offset:48603*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48603*0 + 3*73*FLEN/8, x4, x1, x2)

inst_16202:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x6c and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xb67fffff; valaddr_reg:x3; val_offset:48606*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48606*0 + 3*74*FLEN/8, x4, x1, x2)

inst_16203:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xbf800001; valaddr_reg:x3; val_offset:48609*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48609*0 + 3*75*FLEN/8, x4, x1, x2)

inst_16204:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xbf800003; valaddr_reg:x3; val_offset:48612*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48612*0 + 3*76*FLEN/8, x4, x1, x2)

inst_16205:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xbf800007; valaddr_reg:x3; val_offset:48615*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48615*0 + 3*77*FLEN/8, x4, x1, x2)

inst_16206:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xbf999999; valaddr_reg:x3; val_offset:48618*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48618*0 + 3*78*FLEN/8, x4, x1, x2)

inst_16207:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:48621*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48621*0 + 3*79*FLEN/8, x4, x1, x2)

inst_16208:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:48624*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48624*0 + 3*80*FLEN/8, x4, x1, x2)

inst_16209:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:48627*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48627*0 + 3*81*FLEN/8, x4, x1, x2)

inst_16210:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:48630*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48630*0 + 3*82*FLEN/8, x4, x1, x2)

inst_16211:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:48633*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48633*0 + 3*83*FLEN/8, x4, x1, x2)

inst_16212:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:48636*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48636*0 + 3*84*FLEN/8, x4, x1, x2)

inst_16213:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:48639*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48639*0 + 3*85*FLEN/8, x4, x1, x2)

inst_16214:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:48642*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48642*0 + 3*86*FLEN/8, x4, x1, x2)

inst_16215:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:48645*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48645*0 + 3*87*FLEN/8, x4, x1, x2)

inst_16216:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:48648*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48648*0 + 3*88*FLEN/8, x4, x1, x2)

inst_16217:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:48651*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48651*0 + 3*89*FLEN/8, x4, x1, x2)

inst_16218:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x205073 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x663303 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea05073; op2val:0x80663303;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:48654*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48654*0 + 3*90*FLEN/8, x4, x1, x2)

inst_16219:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:48657*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48657*0 + 3*91*FLEN/8, x4, x1, x2)

inst_16220:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:48660*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48660*0 + 3*92*FLEN/8, x4, x1, x2)

inst_16221:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:48663*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48663*0 + 3*93*FLEN/8, x4, x1, x2)

inst_16222:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:48666*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48666*0 + 3*94*FLEN/8, x4, x1, x2)

inst_16223:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:48669*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48669*0 + 3*95*FLEN/8, x4, x1, x2)

inst_16224:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:48672*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48672*0 + 3*96*FLEN/8, x4, x1, x2)

inst_16225:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:48675*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48675*0 + 3*97*FLEN/8, x4, x1, x2)

inst_16226:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:48678*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48678*0 + 3*98*FLEN/8, x4, x1, x2)

inst_16227:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:48681*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48681*0 + 3*99*FLEN/8, x4, x1, x2)

inst_16228:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:48684*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48684*0 + 3*100*FLEN/8, x4, x1, x2)

inst_16229:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:48687*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48687*0 + 3*101*FLEN/8, x4, x1, x2)

inst_16230:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:48690*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48690*0 + 3*102*FLEN/8, x4, x1, x2)

inst_16231:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:48693*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48693*0 + 3*103*FLEN/8, x4, x1, x2)

inst_16232:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:48696*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48696*0 + 3*104*FLEN/8, x4, x1, x2)

inst_16233:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:48699*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48699*0 + 3*105*FLEN/8, x4, x1, x2)

inst_16234:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:48702*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48702*0 + 3*106*FLEN/8, x4, x1, x2)

inst_16235:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x85800000; valaddr_reg:x3; val_offset:48705*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48705*0 + 3*107*FLEN/8, x4, x1, x2)

inst_16236:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x85800001; valaddr_reg:x3; val_offset:48708*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48708*0 + 3*108*FLEN/8, x4, x1, x2)

inst_16237:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x85800003; valaddr_reg:x3; val_offset:48711*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48711*0 + 3*109*FLEN/8, x4, x1, x2)

inst_16238:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x85800007; valaddr_reg:x3; val_offset:48714*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48714*0 + 3*110*FLEN/8, x4, x1, x2)

inst_16239:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x8580000f; valaddr_reg:x3; val_offset:48717*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48717*0 + 3*111*FLEN/8, x4, x1, x2)

inst_16240:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x8580001f; valaddr_reg:x3; val_offset:48720*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48720*0 + 3*112*FLEN/8, x4, x1, x2)

inst_16241:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x8580003f; valaddr_reg:x3; val_offset:48723*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48723*0 + 3*113*FLEN/8, x4, x1, x2)

inst_16242:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x8580007f; valaddr_reg:x3; val_offset:48726*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48726*0 + 3*114*FLEN/8, x4, x1, x2)

inst_16243:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x858000ff; valaddr_reg:x3; val_offset:48729*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48729*0 + 3*115*FLEN/8, x4, x1, x2)

inst_16244:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x858001ff; valaddr_reg:x3; val_offset:48732*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48732*0 + 3*116*FLEN/8, x4, x1, x2)

inst_16245:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x858003ff; valaddr_reg:x3; val_offset:48735*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48735*0 + 3*117*FLEN/8, x4, x1, x2)

inst_16246:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x858007ff; valaddr_reg:x3; val_offset:48738*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48738*0 + 3*118*FLEN/8, x4, x1, x2)

inst_16247:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x85800fff; valaddr_reg:x3; val_offset:48741*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48741*0 + 3*119*FLEN/8, x4, x1, x2)

inst_16248:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x85801fff; valaddr_reg:x3; val_offset:48744*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48744*0 + 3*120*FLEN/8, x4, x1, x2)

inst_16249:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x85803fff; valaddr_reg:x3; val_offset:48747*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48747*0 + 3*121*FLEN/8, x4, x1, x2)

inst_16250:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x85807fff; valaddr_reg:x3; val_offset:48750*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48750*0 + 3*122*FLEN/8, x4, x1, x2)

inst_16251:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x8580ffff; valaddr_reg:x3; val_offset:48753*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48753*0 + 3*123*FLEN/8, x4, x1, x2)

inst_16252:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x8581ffff; valaddr_reg:x3; val_offset:48756*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48756*0 + 3*124*FLEN/8, x4, x1, x2)

inst_16253:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x8583ffff; valaddr_reg:x3; val_offset:48759*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48759*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16254:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x8587ffff; valaddr_reg:x3; val_offset:48762*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48762*0 + 3*126*FLEN/8, x4, x1, x2)

inst_16255:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x858fffff; valaddr_reg:x3; val_offset:48765*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48765*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_16256:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x859fffff; valaddr_reg:x3; val_offset:48768*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48768*0 + 3*128*FLEN/8, x4, x1, x2)

inst_16257:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x85bfffff; valaddr_reg:x3; val_offset:48771*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48771*0 + 3*129*FLEN/8, x4, x1, x2)

inst_16258:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x85c00000; valaddr_reg:x3; val_offset:48774*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48774*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16259:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x85e00000; valaddr_reg:x3; val_offset:48777*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48777*0 + 3*131*FLEN/8, x4, x1, x2)

inst_16260:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x85f00000; valaddr_reg:x3; val_offset:48780*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48780*0 + 3*132*FLEN/8, x4, x1, x2)

inst_16261:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x85f80000; valaddr_reg:x3; val_offset:48783*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48783*0 + 3*133*FLEN/8, x4, x1, x2)

inst_16262:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x85fc0000; valaddr_reg:x3; val_offset:48786*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48786*0 + 3*134*FLEN/8, x4, x1, x2)

inst_16263:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x85fe0000; valaddr_reg:x3; val_offset:48789*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48789*0 + 3*135*FLEN/8, x4, x1, x2)

inst_16264:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x85ff0000; valaddr_reg:x3; val_offset:48792*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48792*0 + 3*136*FLEN/8, x4, x1, x2)

inst_16265:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x85ff8000; valaddr_reg:x3; val_offset:48795*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48795*0 + 3*137*FLEN/8, x4, x1, x2)

inst_16266:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x85ffc000; valaddr_reg:x3; val_offset:48798*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48798*0 + 3*138*FLEN/8, x4, x1, x2)

inst_16267:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x85ffe000; valaddr_reg:x3; val_offset:48801*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48801*0 + 3*139*FLEN/8, x4, x1, x2)

inst_16268:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x85fff000; valaddr_reg:x3; val_offset:48804*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48804*0 + 3*140*FLEN/8, x4, x1, x2)

inst_16269:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x85fff800; valaddr_reg:x3; val_offset:48807*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48807*0 + 3*141*FLEN/8, x4, x1, x2)

inst_16270:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x85fffc00; valaddr_reg:x3; val_offset:48810*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48810*0 + 3*142*FLEN/8, x4, x1, x2)

inst_16271:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x85fffe00; valaddr_reg:x3; val_offset:48813*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48813*0 + 3*143*FLEN/8, x4, x1, x2)

inst_16272:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x85ffff00; valaddr_reg:x3; val_offset:48816*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48816*0 + 3*144*FLEN/8, x4, x1, x2)

inst_16273:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x85ffff80; valaddr_reg:x3; val_offset:48819*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48819*0 + 3*145*FLEN/8, x4, x1, x2)

inst_16274:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x85ffffc0; valaddr_reg:x3; val_offset:48822*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48822*0 + 3*146*FLEN/8, x4, x1, x2)

inst_16275:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x85ffffe0; valaddr_reg:x3; val_offset:48825*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48825*0 + 3*147*FLEN/8, x4, x1, x2)

inst_16276:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x85fffff0; valaddr_reg:x3; val_offset:48828*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48828*0 + 3*148*FLEN/8, x4, x1, x2)

inst_16277:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x85fffff8; valaddr_reg:x3; val_offset:48831*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48831*0 + 3*149*FLEN/8, x4, x1, x2)

inst_16278:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x85fffffc; valaddr_reg:x3; val_offset:48834*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48834*0 + 3*150*FLEN/8, x4, x1, x2)

inst_16279:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x85fffffe; valaddr_reg:x3; val_offset:48837*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48837*0 + 3*151*FLEN/8, x4, x1, x2)

inst_16280:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x207367 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea07367; op2val:0x80000000;
op3val:0x85ffffff; valaddr_reg:x3; val_offset:48840*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48840*0 + 3*152*FLEN/8, x4, x1, x2)

inst_16281:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0x800000; valaddr_reg:x3; val_offset:48843*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48843*0 + 3*153*FLEN/8, x4, x1, x2)

inst_16282:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0x800001; valaddr_reg:x3; val_offset:48846*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48846*0 + 3*154*FLEN/8, x4, x1, x2)

inst_16283:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0x800003; valaddr_reg:x3; val_offset:48849*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48849*0 + 3*155*FLEN/8, x4, x1, x2)

inst_16284:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0x800007; valaddr_reg:x3; val_offset:48852*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48852*0 + 3*156*FLEN/8, x4, x1, x2)

inst_16285:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0x80000f; valaddr_reg:x3; val_offset:48855*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48855*0 + 3*157*FLEN/8, x4, x1, x2)

inst_16286:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0x80001f; valaddr_reg:x3; val_offset:48858*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48858*0 + 3*158*FLEN/8, x4, x1, x2)

inst_16287:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0x80003f; valaddr_reg:x3; val_offset:48861*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48861*0 + 3*159*FLEN/8, x4, x1, x2)

inst_16288:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0x80007f; valaddr_reg:x3; val_offset:48864*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48864*0 + 3*160*FLEN/8, x4, x1, x2)

inst_16289:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0x8000ff; valaddr_reg:x3; val_offset:48867*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48867*0 + 3*161*FLEN/8, x4, x1, x2)

inst_16290:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0x8001ff; valaddr_reg:x3; val_offset:48870*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48870*0 + 3*162*FLEN/8, x4, x1, x2)

inst_16291:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0x8003ff; valaddr_reg:x3; val_offset:48873*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48873*0 + 3*163*FLEN/8, x4, x1, x2)

inst_16292:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0x8007ff; valaddr_reg:x3; val_offset:48876*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48876*0 + 3*164*FLEN/8, x4, x1, x2)

inst_16293:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0x800fff; valaddr_reg:x3; val_offset:48879*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48879*0 + 3*165*FLEN/8, x4, x1, x2)

inst_16294:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0x801fff; valaddr_reg:x3; val_offset:48882*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48882*0 + 3*166*FLEN/8, x4, x1, x2)

inst_16295:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0x803fff; valaddr_reg:x3; val_offset:48885*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48885*0 + 3*167*FLEN/8, x4, x1, x2)

inst_16296:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0x807fff; valaddr_reg:x3; val_offset:48888*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48888*0 + 3*168*FLEN/8, x4, x1, x2)

inst_16297:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0x80ffff; valaddr_reg:x3; val_offset:48891*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48891*0 + 3*169*FLEN/8, x4, x1, x2)

inst_16298:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0x81ffff; valaddr_reg:x3; val_offset:48894*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48894*0 + 3*170*FLEN/8, x4, x1, x2)

inst_16299:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0x83ffff; valaddr_reg:x3; val_offset:48897*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48897*0 + 3*171*FLEN/8, x4, x1, x2)

inst_16300:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0x87ffff; valaddr_reg:x3; val_offset:48900*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48900*0 + 3*172*FLEN/8, x4, x1, x2)

inst_16301:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0x8fffff; valaddr_reg:x3; val_offset:48903*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48903*0 + 3*173*FLEN/8, x4, x1, x2)

inst_16302:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0x999999; valaddr_reg:x3; val_offset:48906*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48906*0 + 3*174*FLEN/8, x4, x1, x2)

inst_16303:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0x9fffff; valaddr_reg:x3; val_offset:48909*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48909*0 + 3*175*FLEN/8, x4, x1, x2)

inst_16304:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0xa49249; valaddr_reg:x3; val_offset:48912*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48912*0 + 3*176*FLEN/8, x4, x1, x2)

inst_16305:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0xb33333; valaddr_reg:x3; val_offset:48915*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48915*0 + 3*177*FLEN/8, x4, x1, x2)

inst_16306:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0xb6db6d; valaddr_reg:x3; val_offset:48918*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48918*0 + 3*178*FLEN/8, x4, x1, x2)

inst_16307:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0xbbbbbb; valaddr_reg:x3; val_offset:48921*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48921*0 + 3*179*FLEN/8, x4, x1, x2)

inst_16308:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0xbfffff; valaddr_reg:x3; val_offset:48924*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48924*0 + 3*180*FLEN/8, x4, x1, x2)

inst_16309:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0xc00000; valaddr_reg:x3; val_offset:48927*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48927*0 + 3*181*FLEN/8, x4, x1, x2)

inst_16310:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0xc44444; valaddr_reg:x3; val_offset:48930*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48930*0 + 3*182*FLEN/8, x4, x1, x2)

inst_16311:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0xcccccc; valaddr_reg:x3; val_offset:48933*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48933*0 + 3*183*FLEN/8, x4, x1, x2)

inst_16312:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0xdb6db6; valaddr_reg:x3; val_offset:48936*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48936*0 + 3*184*FLEN/8, x4, x1, x2)

inst_16313:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0xe00000; valaddr_reg:x3; val_offset:48939*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48939*0 + 3*185*FLEN/8, x4, x1, x2)

inst_16314:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0xe66666; valaddr_reg:x3; val_offset:48942*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48942*0 + 3*186*FLEN/8, x4, x1, x2)

inst_16315:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0xedb6db; valaddr_reg:x3; val_offset:48945*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48945*0 + 3*187*FLEN/8, x4, x1, x2)

inst_16316:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0xf00000; valaddr_reg:x3; val_offset:48948*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48948*0 + 3*188*FLEN/8, x4, x1, x2)

inst_16317:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0xf80000; valaddr_reg:x3; val_offset:48951*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48951*0 + 3*189*FLEN/8, x4, x1, x2)

inst_16318:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0xfc0000; valaddr_reg:x3; val_offset:48954*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48954*0 + 3*190*FLEN/8, x4, x1, x2)

inst_16319:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0xfe0000; valaddr_reg:x3; val_offset:48957*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48957*0 + 3*191*FLEN/8, x4, x1, x2)

inst_16320:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0xff0000; valaddr_reg:x3; val_offset:48960*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48960*0 + 3*192*FLEN/8, x4, x1, x2)

inst_16321:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0xff8000; valaddr_reg:x3; val_offset:48963*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48963*0 + 3*193*FLEN/8, x4, x1, x2)

inst_16322:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0xffc000; valaddr_reg:x3; val_offset:48966*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48966*0 + 3*194*FLEN/8, x4, x1, x2)

inst_16323:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0xffe000; valaddr_reg:x3; val_offset:48969*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48969*0 + 3*195*FLEN/8, x4, x1, x2)

inst_16324:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0xfff000; valaddr_reg:x3; val_offset:48972*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48972*0 + 3*196*FLEN/8, x4, x1, x2)

inst_16325:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0xfff800; valaddr_reg:x3; val_offset:48975*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48975*0 + 3*197*FLEN/8, x4, x1, x2)

inst_16326:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0xfffc00; valaddr_reg:x3; val_offset:48978*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48978*0 + 3*198*FLEN/8, x4, x1, x2)

inst_16327:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0xfffe00; valaddr_reg:x3; val_offset:48981*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48981*0 + 3*199*FLEN/8, x4, x1, x2)

inst_16328:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0xffff00; valaddr_reg:x3; val_offset:48984*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48984*0 + 3*200*FLEN/8, x4, x1, x2)

inst_16329:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0xffff80; valaddr_reg:x3; val_offset:48987*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48987*0 + 3*201*FLEN/8, x4, x1, x2)

inst_16330:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0xffffc0; valaddr_reg:x3; val_offset:48990*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48990*0 + 3*202*FLEN/8, x4, x1, x2)

inst_16331:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0xffffe0; valaddr_reg:x3; val_offset:48993*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48993*0 + 3*203*FLEN/8, x4, x1, x2)

inst_16332:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0xfffff0; valaddr_reg:x3; val_offset:48996*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48996*0 + 3*204*FLEN/8, x4, x1, x2)

inst_16333:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0xfffff8; valaddr_reg:x3; val_offset:48999*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48999*0 + 3*205*FLEN/8, x4, x1, x2)

inst_16334:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0xfffffc; valaddr_reg:x3; val_offset:49002*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49002*0 + 3*206*FLEN/8, x4, x1, x2)

inst_16335:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0xfffffe; valaddr_reg:x3; val_offset:49005*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49005*0 + 3*207*FLEN/8, x4, x1, x2)

inst_16336:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2075e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea075e6; op2val:0x0;
op3val:0xffffff; valaddr_reg:x3; val_offset:49008*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49008*0 + 3*208*FLEN/8, x4, x1, x2)

inst_16337:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x27000000; valaddr_reg:x3; val_offset:49011*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49011*0 + 3*209*FLEN/8, x4, x1, x2)

inst_16338:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x27000001; valaddr_reg:x3; val_offset:49014*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49014*0 + 3*210*FLEN/8, x4, x1, x2)

inst_16339:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x27000003; valaddr_reg:x3; val_offset:49017*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49017*0 + 3*211*FLEN/8, x4, x1, x2)

inst_16340:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x27000007; valaddr_reg:x3; val_offset:49020*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49020*0 + 3*212*FLEN/8, x4, x1, x2)

inst_16341:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x2700000f; valaddr_reg:x3; val_offset:49023*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49023*0 + 3*213*FLEN/8, x4, x1, x2)

inst_16342:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x2700001f; valaddr_reg:x3; val_offset:49026*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49026*0 + 3*214*FLEN/8, x4, x1, x2)

inst_16343:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x2700003f; valaddr_reg:x3; val_offset:49029*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49029*0 + 3*215*FLEN/8, x4, x1, x2)

inst_16344:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x2700007f; valaddr_reg:x3; val_offset:49032*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49032*0 + 3*216*FLEN/8, x4, x1, x2)

inst_16345:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x270000ff; valaddr_reg:x3; val_offset:49035*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49035*0 + 3*217*FLEN/8, x4, x1, x2)

inst_16346:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x270001ff; valaddr_reg:x3; val_offset:49038*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49038*0 + 3*218*FLEN/8, x4, x1, x2)

inst_16347:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x270003ff; valaddr_reg:x3; val_offset:49041*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49041*0 + 3*219*FLEN/8, x4, x1, x2)

inst_16348:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x270007ff; valaddr_reg:x3; val_offset:49044*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49044*0 + 3*220*FLEN/8, x4, x1, x2)

inst_16349:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x27000fff; valaddr_reg:x3; val_offset:49047*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49047*0 + 3*221*FLEN/8, x4, x1, x2)

inst_16350:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x27001fff; valaddr_reg:x3; val_offset:49050*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49050*0 + 3*222*FLEN/8, x4, x1, x2)

inst_16351:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x27003fff; valaddr_reg:x3; val_offset:49053*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49053*0 + 3*223*FLEN/8, x4, x1, x2)

inst_16352:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x27007fff; valaddr_reg:x3; val_offset:49056*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49056*0 + 3*224*FLEN/8, x4, x1, x2)

inst_16353:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x2700ffff; valaddr_reg:x3; val_offset:49059*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49059*0 + 3*225*FLEN/8, x4, x1, x2)

inst_16354:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x2701ffff; valaddr_reg:x3; val_offset:49062*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49062*0 + 3*226*FLEN/8, x4, x1, x2)

inst_16355:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x2703ffff; valaddr_reg:x3; val_offset:49065*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49065*0 + 3*227*FLEN/8, x4, x1, x2)

inst_16356:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x2707ffff; valaddr_reg:x3; val_offset:49068*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49068*0 + 3*228*FLEN/8, x4, x1, x2)

inst_16357:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x270fffff; valaddr_reg:x3; val_offset:49071*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49071*0 + 3*229*FLEN/8, x4, x1, x2)

inst_16358:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x271fffff; valaddr_reg:x3; val_offset:49074*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49074*0 + 3*230*FLEN/8, x4, x1, x2)

inst_16359:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x273fffff; valaddr_reg:x3; val_offset:49077*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49077*0 + 3*231*FLEN/8, x4, x1, x2)

inst_16360:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x27400000; valaddr_reg:x3; val_offset:49080*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49080*0 + 3*232*FLEN/8, x4, x1, x2)

inst_16361:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x27600000; valaddr_reg:x3; val_offset:49083*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49083*0 + 3*233*FLEN/8, x4, x1, x2)

inst_16362:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x27700000; valaddr_reg:x3; val_offset:49086*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49086*0 + 3*234*FLEN/8, x4, x1, x2)

inst_16363:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x27780000; valaddr_reg:x3; val_offset:49089*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49089*0 + 3*235*FLEN/8, x4, x1, x2)

inst_16364:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x277c0000; valaddr_reg:x3; val_offset:49092*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49092*0 + 3*236*FLEN/8, x4, x1, x2)

inst_16365:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x277e0000; valaddr_reg:x3; val_offset:49095*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49095*0 + 3*237*FLEN/8, x4, x1, x2)

inst_16366:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x277f0000; valaddr_reg:x3; val_offset:49098*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49098*0 + 3*238*FLEN/8, x4, x1, x2)

inst_16367:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x277f8000; valaddr_reg:x3; val_offset:49101*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49101*0 + 3*239*FLEN/8, x4, x1, x2)

inst_16368:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x277fc000; valaddr_reg:x3; val_offset:49104*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49104*0 + 3*240*FLEN/8, x4, x1, x2)

inst_16369:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x277fe000; valaddr_reg:x3; val_offset:49107*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49107*0 + 3*241*FLEN/8, x4, x1, x2)

inst_16370:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x277ff000; valaddr_reg:x3; val_offset:49110*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49110*0 + 3*242*FLEN/8, x4, x1, x2)

inst_16371:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x277ff800; valaddr_reg:x3; val_offset:49113*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49113*0 + 3*243*FLEN/8, x4, x1, x2)

inst_16372:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x277ffc00; valaddr_reg:x3; val_offset:49116*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49116*0 + 3*244*FLEN/8, x4, x1, x2)

inst_16373:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x277ffe00; valaddr_reg:x3; val_offset:49119*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49119*0 + 3*245*FLEN/8, x4, x1, x2)

inst_16374:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x277fff00; valaddr_reg:x3; val_offset:49122*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49122*0 + 3*246*FLEN/8, x4, x1, x2)

inst_16375:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x277fff80; valaddr_reg:x3; val_offset:49125*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49125*0 + 3*247*FLEN/8, x4, x1, x2)

inst_16376:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x277fffc0; valaddr_reg:x3; val_offset:49128*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49128*0 + 3*248*FLEN/8, x4, x1, x2)

inst_16377:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x277fffe0; valaddr_reg:x3; val_offset:49131*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49131*0 + 3*249*FLEN/8, x4, x1, x2)

inst_16378:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x277ffff0; valaddr_reg:x3; val_offset:49134*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49134*0 + 3*250*FLEN/8, x4, x1, x2)

inst_16379:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x277ffff8; valaddr_reg:x3; val_offset:49137*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49137*0 + 3*251*FLEN/8, x4, x1, x2)

inst_16380:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x277ffffc; valaddr_reg:x3; val_offset:49140*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49140*0 + 3*252*FLEN/8, x4, x1, x2)

inst_16381:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x277ffffe; valaddr_reg:x3; val_offset:49143*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49143*0 + 3*253*FLEN/8, x4, x1, x2)

inst_16382:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x277fffff; valaddr_reg:x3; val_offset:49146*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49146*0 + 3*254*FLEN/8, x4, x1, x2)

inst_16383:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x3f800001; valaddr_reg:x3; val_offset:49149*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49149*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_16384:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x3f800003; valaddr_reg:x3; val_offset:49152*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49152*0 + 3*256*FLEN/8, x4, x1, x2)

inst_16385:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x3f800007; valaddr_reg:x3; val_offset:49155*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49155*0 + 3*257*FLEN/8, x4, x1, x2)

inst_16386:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x3f999999; valaddr_reg:x3; val_offset:49158*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49158*0 + 3*258*FLEN/8, x4, x1, x2)

inst_16387:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:49161*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49161*0 + 3*259*FLEN/8, x4, x1, x2)

inst_16388:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:49164*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49164*0 + 3*260*FLEN/8, x4, x1, x2)

inst_16389:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:49167*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49167*0 + 3*261*FLEN/8, x4, x1, x2)

inst_16390:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:49170*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49170*0 + 3*262*FLEN/8, x4, x1, x2)

inst_16391:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:49173*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49173*0 + 3*263*FLEN/8, x4, x1, x2)

inst_16392:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:49176*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49176*0 + 3*264*FLEN/8, x4, x1, x2)

inst_16393:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:49179*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49179*0 + 3*265*FLEN/8, x4, x1, x2)

inst_16394:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:49182*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49182*0 + 3*266*FLEN/8, x4, x1, x2)

inst_16395:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:49185*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49185*0 + 3*267*FLEN/8, x4, x1, x2)

inst_16396:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:49188*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49188*0 + 3*268*FLEN/8, x4, x1, x2)

inst_16397:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:49191*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49191*0 + 3*269*FLEN/8, x4, x1, x2)

inst_16398:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x210efb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x65ba1c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea10efb; op2val:0x65ba1c;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:49194*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49194*0 + 3*270*FLEN/8, x4, x1, x2)

inst_16399:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:49197*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49197*0 + 3*271*FLEN/8, x4, x1, x2)

inst_16400:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:49200*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49200*0 + 3*272*FLEN/8, x4, x1, x2)

inst_16401:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:49203*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49203*0 + 3*273*FLEN/8, x4, x1, x2)

inst_16402:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x80999999; valaddr_reg:x3; val_offset:49206*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49206*0 + 3*274*FLEN/8, x4, x1, x2)

inst_16403:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x80a49249; valaddr_reg:x3; val_offset:49209*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49209*0 + 3*275*FLEN/8, x4, x1, x2)

inst_16404:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x80b33333; valaddr_reg:x3; val_offset:49212*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49212*0 + 3*276*FLEN/8, x4, x1, x2)

inst_16405:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x80b6db6d; valaddr_reg:x3; val_offset:49215*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49215*0 + 3*277*FLEN/8, x4, x1, x2)

inst_16406:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x80bbbbbb; valaddr_reg:x3; val_offset:49218*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49218*0 + 3*278*FLEN/8, x4, x1, x2)

inst_16407:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x80c44444; valaddr_reg:x3; val_offset:49221*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49221*0 + 3*279*FLEN/8, x4, x1, x2)

inst_16408:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x80cccccc; valaddr_reg:x3; val_offset:49224*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49224*0 + 3*280*FLEN/8, x4, x1, x2)

inst_16409:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x80db6db6; valaddr_reg:x3; val_offset:49227*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49227*0 + 3*281*FLEN/8, x4, x1, x2)

inst_16410:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x80e66666; valaddr_reg:x3; val_offset:49230*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49230*0 + 3*282*FLEN/8, x4, x1, x2)

inst_16411:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x80edb6db; valaddr_reg:x3; val_offset:49233*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49233*0 + 3*283*FLEN/8, x4, x1, x2)

inst_16412:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:49236*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49236*0 + 3*284*FLEN/8, x4, x1, x2)

inst_16413:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:49239*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49239*0 + 3*285*FLEN/8, x4, x1, x2)

inst_16414:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:49242*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49242*0 + 3*286*FLEN/8, x4, x1, x2)

inst_16415:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c000000; valaddr_reg:x3; val_offset:49245*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49245*0 + 3*287*FLEN/8, x4, x1, x2)

inst_16416:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c000001; valaddr_reg:x3; val_offset:49248*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49248*0 + 3*288*FLEN/8, x4, x1, x2)

inst_16417:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c000003; valaddr_reg:x3; val_offset:49251*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49251*0 + 3*289*FLEN/8, x4, x1, x2)

inst_16418:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c000007; valaddr_reg:x3; val_offset:49254*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49254*0 + 3*290*FLEN/8, x4, x1, x2)

inst_16419:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c00000f; valaddr_reg:x3; val_offset:49257*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49257*0 + 3*291*FLEN/8, x4, x1, x2)

inst_16420:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c00001f; valaddr_reg:x3; val_offset:49260*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49260*0 + 3*292*FLEN/8, x4, x1, x2)

inst_16421:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c00003f; valaddr_reg:x3; val_offset:49263*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49263*0 + 3*293*FLEN/8, x4, x1, x2)

inst_16422:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c00007f; valaddr_reg:x3; val_offset:49266*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49266*0 + 3*294*FLEN/8, x4, x1, x2)

inst_16423:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c0000ff; valaddr_reg:x3; val_offset:49269*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49269*0 + 3*295*FLEN/8, x4, x1, x2)

inst_16424:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c0001ff; valaddr_reg:x3; val_offset:49272*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49272*0 + 3*296*FLEN/8, x4, x1, x2)

inst_16425:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c0003ff; valaddr_reg:x3; val_offset:49275*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49275*0 + 3*297*FLEN/8, x4, x1, x2)

inst_16426:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c0007ff; valaddr_reg:x3; val_offset:49278*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49278*0 + 3*298*FLEN/8, x4, x1, x2)

inst_16427:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c000fff; valaddr_reg:x3; val_offset:49281*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49281*0 + 3*299*FLEN/8, x4, x1, x2)

inst_16428:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c001fff; valaddr_reg:x3; val_offset:49284*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49284*0 + 3*300*FLEN/8, x4, x1, x2)

inst_16429:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c003fff; valaddr_reg:x3; val_offset:49287*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49287*0 + 3*301*FLEN/8, x4, x1, x2)

inst_16430:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c007fff; valaddr_reg:x3; val_offset:49290*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49290*0 + 3*302*FLEN/8, x4, x1, x2)

inst_16431:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c00ffff; valaddr_reg:x3; val_offset:49293*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49293*0 + 3*303*FLEN/8, x4, x1, x2)

inst_16432:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c01ffff; valaddr_reg:x3; val_offset:49296*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49296*0 + 3*304*FLEN/8, x4, x1, x2)

inst_16433:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c03ffff; valaddr_reg:x3; val_offset:49299*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49299*0 + 3*305*FLEN/8, x4, x1, x2)

inst_16434:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c07ffff; valaddr_reg:x3; val_offset:49302*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49302*0 + 3*306*FLEN/8, x4, x1, x2)

inst_16435:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c0fffff; valaddr_reg:x3; val_offset:49305*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49305*0 + 3*307*FLEN/8, x4, x1, x2)

inst_16436:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c1fffff; valaddr_reg:x3; val_offset:49308*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49308*0 + 3*308*FLEN/8, x4, x1, x2)

inst_16437:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c3fffff; valaddr_reg:x3; val_offset:49311*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49311*0 + 3*309*FLEN/8, x4, x1, x2)

inst_16438:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c400000; valaddr_reg:x3; val_offset:49314*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49314*0 + 3*310*FLEN/8, x4, x1, x2)

inst_16439:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c600000; valaddr_reg:x3; val_offset:49317*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49317*0 + 3*311*FLEN/8, x4, x1, x2)

inst_16440:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c700000; valaddr_reg:x3; val_offset:49320*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49320*0 + 3*312*FLEN/8, x4, x1, x2)

inst_16441:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c780000; valaddr_reg:x3; val_offset:49323*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49323*0 + 3*313*FLEN/8, x4, x1, x2)

inst_16442:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c7c0000; valaddr_reg:x3; val_offset:49326*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49326*0 + 3*314*FLEN/8, x4, x1, x2)

inst_16443:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c7e0000; valaddr_reg:x3; val_offset:49329*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49329*0 + 3*315*FLEN/8, x4, x1, x2)

inst_16444:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c7f0000; valaddr_reg:x3; val_offset:49332*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49332*0 + 3*316*FLEN/8, x4, x1, x2)

inst_16445:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c7f8000; valaddr_reg:x3; val_offset:49335*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49335*0 + 3*317*FLEN/8, x4, x1, x2)

inst_16446:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c7fc000; valaddr_reg:x3; val_offset:49338*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49338*0 + 3*318*FLEN/8, x4, x1, x2)

inst_16447:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c7fe000; valaddr_reg:x3; val_offset:49341*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49341*0 + 3*319*FLEN/8, x4, x1, x2)

inst_16448:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c7ff000; valaddr_reg:x3; val_offset:49344*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49344*0 + 3*320*FLEN/8, x4, x1, x2)

inst_16449:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c7ff800; valaddr_reg:x3; val_offset:49347*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49347*0 + 3*321*FLEN/8, x4, x1, x2)

inst_16450:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c7ffc00; valaddr_reg:x3; val_offset:49350*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49350*0 + 3*322*FLEN/8, x4, x1, x2)

inst_16451:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c7ffe00; valaddr_reg:x3; val_offset:49353*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49353*0 + 3*323*FLEN/8, x4, x1, x2)

inst_16452:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c7fff00; valaddr_reg:x3; val_offset:49356*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49356*0 + 3*324*FLEN/8, x4, x1, x2)

inst_16453:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c7fff80; valaddr_reg:x3; val_offset:49359*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49359*0 + 3*325*FLEN/8, x4, x1, x2)

inst_16454:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c7fffc0; valaddr_reg:x3; val_offset:49362*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49362*0 + 3*326*FLEN/8, x4, x1, x2)

inst_16455:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c7fffe0; valaddr_reg:x3; val_offset:49365*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49365*0 + 3*327*FLEN/8, x4, x1, x2)

inst_16456:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c7ffff0; valaddr_reg:x3; val_offset:49368*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49368*0 + 3*328*FLEN/8, x4, x1, x2)

inst_16457:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c7ffff8; valaddr_reg:x3; val_offset:49371*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49371*0 + 3*329*FLEN/8, x4, x1, x2)

inst_16458:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c7ffffc; valaddr_reg:x3; val_offset:49374*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49374*0 + 3*330*FLEN/8, x4, x1, x2)

inst_16459:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c7ffffe; valaddr_reg:x3; val_offset:49377*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49377*0 + 3*331*FLEN/8, x4, x1, x2)

inst_16460:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x215299 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea15299; op2val:0x80000000;
op3val:0x8c7fffff; valaddr_reg:x3; val_offset:49380*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49380*0 + 3*332*FLEN/8, x4, x1, x2)

inst_16461:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:49383*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49383*0 + 3*333*FLEN/8, x4, x1, x2)

inst_16462:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:49386*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49386*0 + 3*334*FLEN/8, x4, x1, x2)

inst_16463:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:49389*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49389*0 + 3*335*FLEN/8, x4, x1, x2)

inst_16464:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x80999999; valaddr_reg:x3; val_offset:49392*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49392*0 + 3*336*FLEN/8, x4, x1, x2)

inst_16465:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x80a49249; valaddr_reg:x3; val_offset:49395*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49395*0 + 3*337*FLEN/8, x4, x1, x2)

inst_16466:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x80b33333; valaddr_reg:x3; val_offset:49398*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49398*0 + 3*338*FLEN/8, x4, x1, x2)

inst_16467:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x80b6db6d; valaddr_reg:x3; val_offset:49401*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49401*0 + 3*339*FLEN/8, x4, x1, x2)

inst_16468:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x80bbbbbb; valaddr_reg:x3; val_offset:49404*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49404*0 + 3*340*FLEN/8, x4, x1, x2)

inst_16469:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x80c44444; valaddr_reg:x3; val_offset:49407*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49407*0 + 3*341*FLEN/8, x4, x1, x2)

inst_16470:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x80cccccc; valaddr_reg:x3; val_offset:49410*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49410*0 + 3*342*FLEN/8, x4, x1, x2)

inst_16471:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x80db6db6; valaddr_reg:x3; val_offset:49413*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49413*0 + 3*343*FLEN/8, x4, x1, x2)

inst_16472:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x80e66666; valaddr_reg:x3; val_offset:49416*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49416*0 + 3*344*FLEN/8, x4, x1, x2)

inst_16473:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x80edb6db; valaddr_reg:x3; val_offset:49419*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49419*0 + 3*345*FLEN/8, x4, x1, x2)

inst_16474:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:49422*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49422*0 + 3*346*FLEN/8, x4, x1, x2)

inst_16475:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:49425*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49425*0 + 3*347*FLEN/8, x4, x1, x2)

inst_16476:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:49428*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49428*0 + 3*348*FLEN/8, x4, x1, x2)

inst_16477:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8d800000; valaddr_reg:x3; val_offset:49431*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49431*0 + 3*349*FLEN/8, x4, x1, x2)

inst_16478:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8d800001; valaddr_reg:x3; val_offset:49434*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49434*0 + 3*350*FLEN/8, x4, x1, x2)

inst_16479:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8d800003; valaddr_reg:x3; val_offset:49437*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49437*0 + 3*351*FLEN/8, x4, x1, x2)

inst_16480:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8d800007; valaddr_reg:x3; val_offset:49440*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49440*0 + 3*352*FLEN/8, x4, x1, x2)

inst_16481:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8d80000f; valaddr_reg:x3; val_offset:49443*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49443*0 + 3*353*FLEN/8, x4, x1, x2)

inst_16482:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8d80001f; valaddr_reg:x3; val_offset:49446*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49446*0 + 3*354*FLEN/8, x4, x1, x2)

inst_16483:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8d80003f; valaddr_reg:x3; val_offset:49449*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49449*0 + 3*355*FLEN/8, x4, x1, x2)

inst_16484:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8d80007f; valaddr_reg:x3; val_offset:49452*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49452*0 + 3*356*FLEN/8, x4, x1, x2)

inst_16485:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8d8000ff; valaddr_reg:x3; val_offset:49455*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49455*0 + 3*357*FLEN/8, x4, x1, x2)

inst_16486:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8d8001ff; valaddr_reg:x3; val_offset:49458*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49458*0 + 3*358*FLEN/8, x4, x1, x2)

inst_16487:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8d8003ff; valaddr_reg:x3; val_offset:49461*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49461*0 + 3*359*FLEN/8, x4, x1, x2)

inst_16488:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8d8007ff; valaddr_reg:x3; val_offset:49464*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49464*0 + 3*360*FLEN/8, x4, x1, x2)

inst_16489:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8d800fff; valaddr_reg:x3; val_offset:49467*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49467*0 + 3*361*FLEN/8, x4, x1, x2)

inst_16490:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8d801fff; valaddr_reg:x3; val_offset:49470*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49470*0 + 3*362*FLEN/8, x4, x1, x2)

inst_16491:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8d803fff; valaddr_reg:x3; val_offset:49473*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49473*0 + 3*363*FLEN/8, x4, x1, x2)

inst_16492:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8d807fff; valaddr_reg:x3; val_offset:49476*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49476*0 + 3*364*FLEN/8, x4, x1, x2)

inst_16493:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8d80ffff; valaddr_reg:x3; val_offset:49479*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49479*0 + 3*365*FLEN/8, x4, x1, x2)

inst_16494:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8d81ffff; valaddr_reg:x3; val_offset:49482*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49482*0 + 3*366*FLEN/8, x4, x1, x2)

inst_16495:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8d83ffff; valaddr_reg:x3; val_offset:49485*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49485*0 + 3*367*FLEN/8, x4, x1, x2)

inst_16496:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8d87ffff; valaddr_reg:x3; val_offset:49488*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49488*0 + 3*368*FLEN/8, x4, x1, x2)

inst_16497:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8d8fffff; valaddr_reg:x3; val_offset:49491*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49491*0 + 3*369*FLEN/8, x4, x1, x2)

inst_16498:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8d9fffff; valaddr_reg:x3; val_offset:49494*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49494*0 + 3*370*FLEN/8, x4, x1, x2)

inst_16499:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8dbfffff; valaddr_reg:x3; val_offset:49497*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49497*0 + 3*371*FLEN/8, x4, x1, x2)

inst_16500:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8dc00000; valaddr_reg:x3; val_offset:49500*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49500*0 + 3*372*FLEN/8, x4, x1, x2)

inst_16501:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8de00000; valaddr_reg:x3; val_offset:49503*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49503*0 + 3*373*FLEN/8, x4, x1, x2)

inst_16502:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8df00000; valaddr_reg:x3; val_offset:49506*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49506*0 + 3*374*FLEN/8, x4, x1, x2)

inst_16503:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8df80000; valaddr_reg:x3; val_offset:49509*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49509*0 + 3*375*FLEN/8, x4, x1, x2)

inst_16504:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8dfc0000; valaddr_reg:x3; val_offset:49512*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49512*0 + 3*376*FLEN/8, x4, x1, x2)

inst_16505:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8dfe0000; valaddr_reg:x3; val_offset:49515*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49515*0 + 3*377*FLEN/8, x4, x1, x2)

inst_16506:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8dff0000; valaddr_reg:x3; val_offset:49518*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49518*0 + 3*378*FLEN/8, x4, x1, x2)

inst_16507:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8dff8000; valaddr_reg:x3; val_offset:49521*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49521*0 + 3*379*FLEN/8, x4, x1, x2)

inst_16508:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8dffc000; valaddr_reg:x3; val_offset:49524*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49524*0 + 3*380*FLEN/8, x4, x1, x2)

inst_16509:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8dffe000; valaddr_reg:x3; val_offset:49527*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49527*0 + 3*381*FLEN/8, x4, x1, x2)

inst_16510:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8dfff000; valaddr_reg:x3; val_offset:49530*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49530*0 + 3*382*FLEN/8, x4, x1, x2)

inst_16511:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8dfff800; valaddr_reg:x3; val_offset:49533*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49533*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_16512:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8dfffc00; valaddr_reg:x3; val_offset:49536*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49536*0 + 3*384*FLEN/8, x4, x1, x2)

inst_16513:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8dfffe00; valaddr_reg:x3; val_offset:49539*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49539*0 + 3*385*FLEN/8, x4, x1, x2)

inst_16514:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8dffff00; valaddr_reg:x3; val_offset:49542*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49542*0 + 3*386*FLEN/8, x4, x1, x2)

inst_16515:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8dffff80; valaddr_reg:x3; val_offset:49545*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49545*0 + 3*387*FLEN/8, x4, x1, x2)

inst_16516:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8dffffc0; valaddr_reg:x3; val_offset:49548*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49548*0 + 3*388*FLEN/8, x4, x1, x2)

inst_16517:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8dffffe0; valaddr_reg:x3; val_offset:49551*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49551*0 + 3*389*FLEN/8, x4, x1, x2)

inst_16518:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8dfffff0; valaddr_reg:x3; val_offset:49554*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49554*0 + 3*390*FLEN/8, x4, x1, x2)

inst_16519:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8dfffff8; valaddr_reg:x3; val_offset:49557*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49557*0 + 3*391*FLEN/8, x4, x1, x2)

inst_16520:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8dfffffc; valaddr_reg:x3; val_offset:49560*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49560*0 + 3*392*FLEN/8, x4, x1, x2)

inst_16521:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8dfffffe; valaddr_reg:x3; val_offset:49563*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49563*0 + 3*393*FLEN/8, x4, x1, x2)

inst_16522:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x239293 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea39293; op2val:0x80000000;
op3val:0x8dffffff; valaddr_reg:x3; val_offset:49566*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49566*0 + 3*394*FLEN/8, x4, x1, x2)

inst_16523:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2f800000; valaddr_reg:x3; val_offset:49569*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49569*0 + 3*395*FLEN/8, x4, x1, x2)

inst_16524:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2f800001; valaddr_reg:x3; val_offset:49572*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49572*0 + 3*396*FLEN/8, x4, x1, x2)

inst_16525:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2f800003; valaddr_reg:x3; val_offset:49575*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49575*0 + 3*397*FLEN/8, x4, x1, x2)

inst_16526:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2f800007; valaddr_reg:x3; val_offset:49578*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49578*0 + 3*398*FLEN/8, x4, x1, x2)

inst_16527:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2f80000f; valaddr_reg:x3; val_offset:49581*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49581*0 + 3*399*FLEN/8, x4, x1, x2)

inst_16528:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2f80001f; valaddr_reg:x3; val_offset:49584*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49584*0 + 3*400*FLEN/8, x4, x1, x2)

inst_16529:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2f80003f; valaddr_reg:x3; val_offset:49587*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49587*0 + 3*401*FLEN/8, x4, x1, x2)

inst_16530:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2f80007f; valaddr_reg:x3; val_offset:49590*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49590*0 + 3*402*FLEN/8, x4, x1, x2)

inst_16531:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2f8000ff; valaddr_reg:x3; val_offset:49593*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49593*0 + 3*403*FLEN/8, x4, x1, x2)

inst_16532:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2f8001ff; valaddr_reg:x3; val_offset:49596*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49596*0 + 3*404*FLEN/8, x4, x1, x2)

inst_16533:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2f8003ff; valaddr_reg:x3; val_offset:49599*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49599*0 + 3*405*FLEN/8, x4, x1, x2)

inst_16534:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2f8007ff; valaddr_reg:x3; val_offset:49602*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49602*0 + 3*406*FLEN/8, x4, x1, x2)

inst_16535:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2f800fff; valaddr_reg:x3; val_offset:49605*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49605*0 + 3*407*FLEN/8, x4, x1, x2)

inst_16536:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2f801fff; valaddr_reg:x3; val_offset:49608*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49608*0 + 3*408*FLEN/8, x4, x1, x2)

inst_16537:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2f803fff; valaddr_reg:x3; val_offset:49611*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49611*0 + 3*409*FLEN/8, x4, x1, x2)

inst_16538:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2f807fff; valaddr_reg:x3; val_offset:49614*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49614*0 + 3*410*FLEN/8, x4, x1, x2)

inst_16539:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2f80ffff; valaddr_reg:x3; val_offset:49617*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49617*0 + 3*411*FLEN/8, x4, x1, x2)

inst_16540:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2f81ffff; valaddr_reg:x3; val_offset:49620*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49620*0 + 3*412*FLEN/8, x4, x1, x2)

inst_16541:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2f83ffff; valaddr_reg:x3; val_offset:49623*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49623*0 + 3*413*FLEN/8, x4, x1, x2)

inst_16542:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2f87ffff; valaddr_reg:x3; val_offset:49626*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49626*0 + 3*414*FLEN/8, x4, x1, x2)

inst_16543:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2f8fffff; valaddr_reg:x3; val_offset:49629*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49629*0 + 3*415*FLEN/8, x4, x1, x2)

inst_16544:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2f9fffff; valaddr_reg:x3; val_offset:49632*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49632*0 + 3*416*FLEN/8, x4, x1, x2)

inst_16545:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2fbfffff; valaddr_reg:x3; val_offset:49635*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49635*0 + 3*417*FLEN/8, x4, x1, x2)

inst_16546:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2fc00000; valaddr_reg:x3; val_offset:49638*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49638*0 + 3*418*FLEN/8, x4, x1, x2)

inst_16547:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2fe00000; valaddr_reg:x3; val_offset:49641*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49641*0 + 3*419*FLEN/8, x4, x1, x2)

inst_16548:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2ff00000; valaddr_reg:x3; val_offset:49644*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49644*0 + 3*420*FLEN/8, x4, x1, x2)

inst_16549:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2ff80000; valaddr_reg:x3; val_offset:49647*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49647*0 + 3*421*FLEN/8, x4, x1, x2)

inst_16550:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2ffc0000; valaddr_reg:x3; val_offset:49650*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49650*0 + 3*422*FLEN/8, x4, x1, x2)

inst_16551:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2ffe0000; valaddr_reg:x3; val_offset:49653*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49653*0 + 3*423*FLEN/8, x4, x1, x2)

inst_16552:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2fff0000; valaddr_reg:x3; val_offset:49656*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49656*0 + 3*424*FLEN/8, x4, x1, x2)

inst_16553:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2fff8000; valaddr_reg:x3; val_offset:49659*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49659*0 + 3*425*FLEN/8, x4, x1, x2)

inst_16554:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2fffc000; valaddr_reg:x3; val_offset:49662*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49662*0 + 3*426*FLEN/8, x4, x1, x2)

inst_16555:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2fffe000; valaddr_reg:x3; val_offset:49665*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49665*0 + 3*427*FLEN/8, x4, x1, x2)

inst_16556:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2ffff000; valaddr_reg:x3; val_offset:49668*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49668*0 + 3*428*FLEN/8, x4, x1, x2)

inst_16557:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2ffff800; valaddr_reg:x3; val_offset:49671*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49671*0 + 3*429*FLEN/8, x4, x1, x2)

inst_16558:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2ffffc00; valaddr_reg:x3; val_offset:49674*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49674*0 + 3*430*FLEN/8, x4, x1, x2)

inst_16559:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2ffffe00; valaddr_reg:x3; val_offset:49677*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49677*0 + 3*431*FLEN/8, x4, x1, x2)

inst_16560:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2fffff00; valaddr_reg:x3; val_offset:49680*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49680*0 + 3*432*FLEN/8, x4, x1, x2)

inst_16561:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2fffff80; valaddr_reg:x3; val_offset:49683*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49683*0 + 3*433*FLEN/8, x4, x1, x2)

inst_16562:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2fffffc0; valaddr_reg:x3; val_offset:49686*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49686*0 + 3*434*FLEN/8, x4, x1, x2)

inst_16563:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2fffffe0; valaddr_reg:x3; val_offset:49689*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49689*0 + 3*435*FLEN/8, x4, x1, x2)

inst_16564:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2ffffff0; valaddr_reg:x3; val_offset:49692*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49692*0 + 3*436*FLEN/8, x4, x1, x2)

inst_16565:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2ffffff8; valaddr_reg:x3; val_offset:49695*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49695*0 + 3*437*FLEN/8, x4, x1, x2)

inst_16566:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2ffffffc; valaddr_reg:x3; val_offset:49698*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49698*0 + 3*438*FLEN/8, x4, x1, x2)

inst_16567:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2ffffffe; valaddr_reg:x3; val_offset:49701*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49701*0 + 3*439*FLEN/8, x4, x1, x2)

inst_16568:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x5f and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x2fffffff; valaddr_reg:x3; val_offset:49704*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49704*0 + 3*440*FLEN/8, x4, x1, x2)

inst_16569:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x3f800001; valaddr_reg:x3; val_offset:49707*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49707*0 + 3*441*FLEN/8, x4, x1, x2)

inst_16570:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x3f800003; valaddr_reg:x3; val_offset:49710*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49710*0 + 3*442*FLEN/8, x4, x1, x2)

inst_16571:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x3f800007; valaddr_reg:x3; val_offset:49713*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49713*0 + 3*443*FLEN/8, x4, x1, x2)

inst_16572:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x3f999999; valaddr_reg:x3; val_offset:49716*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49716*0 + 3*444*FLEN/8, x4, x1, x2)

inst_16573:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:49719*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49719*0 + 3*445*FLEN/8, x4, x1, x2)

inst_16574:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:49722*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49722*0 + 3*446*FLEN/8, x4, x1, x2)

inst_16575:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:49725*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49725*0 + 3*447*FLEN/8, x4, x1, x2)

inst_16576:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:49728*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49728*0 + 3*448*FLEN/8, x4, x1, x2)

inst_16577:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:49731*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49731*0 + 3*449*FLEN/8, x4, x1, x2)

inst_16578:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:49734*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49734*0 + 3*450*FLEN/8, x4, x1, x2)

inst_16579:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:49737*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49737*0 + 3*451*FLEN/8, x4, x1, x2)

inst_16580:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:49740*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49740*0 + 3*452*FLEN/8, x4, x1, x2)

inst_16581:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:49743*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49743*0 + 3*453*FLEN/8, x4, x1, x2)

inst_16582:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:49746*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49746*0 + 3*454*FLEN/8, x4, x1, x2)

inst_16583:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:49749*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49749*0 + 3*455*FLEN/8, x4, x1, x2)

inst_16584:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23a264 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x64202c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3a264; op2val:0x64202c;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:49752*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49752*0 + 3*456*FLEN/8, x4, x1, x2)

inst_16585:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:49755*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49755*0 + 3*457*FLEN/8, x4, x1, x2)

inst_16586:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:49758*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49758*0 + 3*458*FLEN/8, x4, x1, x2)

inst_16587:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:49761*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49761*0 + 3*459*FLEN/8, x4, x1, x2)

inst_16588:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:49764*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49764*0 + 3*460*FLEN/8, x4, x1, x2)

inst_16589:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:49767*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49767*0 + 3*461*FLEN/8, x4, x1, x2)

inst_16590:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:49770*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49770*0 + 3*462*FLEN/8, x4, x1, x2)

inst_16591:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:49773*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49773*0 + 3*463*FLEN/8, x4, x1, x2)

inst_16592:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:49776*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49776*0 + 3*464*FLEN/8, x4, x1, x2)

inst_16593:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:49779*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49779*0 + 3*465*FLEN/8, x4, x1, x2)

inst_16594:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:49782*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49782*0 + 3*466*FLEN/8, x4, x1, x2)

inst_16595:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:49785*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49785*0 + 3*467*FLEN/8, x4, x1, x2)

inst_16596:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:49788*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49788*0 + 3*468*FLEN/8, x4, x1, x2)

inst_16597:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:49791*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49791*0 + 3*469*FLEN/8, x4, x1, x2)

inst_16598:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:49794*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49794*0 + 3*470*FLEN/8, x4, x1, x2)

inst_16599:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:49797*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49797*0 + 3*471*FLEN/8, x4, x1, x2)

inst_16600:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:49800*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49800*0 + 3*472*FLEN/8, x4, x1, x2)

inst_16601:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x83800000; valaddr_reg:x3; val_offset:49803*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49803*0 + 3*473*FLEN/8, x4, x1, x2)

inst_16602:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x83800001; valaddr_reg:x3; val_offset:49806*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49806*0 + 3*474*FLEN/8, x4, x1, x2)

inst_16603:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x83800003; valaddr_reg:x3; val_offset:49809*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49809*0 + 3*475*FLEN/8, x4, x1, x2)

inst_16604:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x83800007; valaddr_reg:x3; val_offset:49812*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49812*0 + 3*476*FLEN/8, x4, x1, x2)

inst_16605:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x8380000f; valaddr_reg:x3; val_offset:49815*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49815*0 + 3*477*FLEN/8, x4, x1, x2)

inst_16606:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x8380001f; valaddr_reg:x3; val_offset:49818*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49818*0 + 3*478*FLEN/8, x4, x1, x2)

inst_16607:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x8380003f; valaddr_reg:x3; val_offset:49821*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49821*0 + 3*479*FLEN/8, x4, x1, x2)

inst_16608:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x8380007f; valaddr_reg:x3; val_offset:49824*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49824*0 + 3*480*FLEN/8, x4, x1, x2)

inst_16609:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x838000ff; valaddr_reg:x3; val_offset:49827*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49827*0 + 3*481*FLEN/8, x4, x1, x2)

inst_16610:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x838001ff; valaddr_reg:x3; val_offset:49830*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49830*0 + 3*482*FLEN/8, x4, x1, x2)

inst_16611:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x838003ff; valaddr_reg:x3; val_offset:49833*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49833*0 + 3*483*FLEN/8, x4, x1, x2)

inst_16612:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x838007ff; valaddr_reg:x3; val_offset:49836*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49836*0 + 3*484*FLEN/8, x4, x1, x2)

inst_16613:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x83800fff; valaddr_reg:x3; val_offset:49839*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49839*0 + 3*485*FLEN/8, x4, x1, x2)

inst_16614:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x83801fff; valaddr_reg:x3; val_offset:49842*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49842*0 + 3*486*FLEN/8, x4, x1, x2)

inst_16615:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x83803fff; valaddr_reg:x3; val_offset:49845*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49845*0 + 3*487*FLEN/8, x4, x1, x2)

inst_16616:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x83807fff; valaddr_reg:x3; val_offset:49848*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49848*0 + 3*488*FLEN/8, x4, x1, x2)

inst_16617:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x8380ffff; valaddr_reg:x3; val_offset:49851*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49851*0 + 3*489*FLEN/8, x4, x1, x2)

inst_16618:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x8381ffff; valaddr_reg:x3; val_offset:49854*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49854*0 + 3*490*FLEN/8, x4, x1, x2)

inst_16619:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x8383ffff; valaddr_reg:x3; val_offset:49857*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49857*0 + 3*491*FLEN/8, x4, x1, x2)

inst_16620:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x8387ffff; valaddr_reg:x3; val_offset:49860*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49860*0 + 3*492*FLEN/8, x4, x1, x2)

inst_16621:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x838fffff; valaddr_reg:x3; val_offset:49863*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49863*0 + 3*493*FLEN/8, x4, x1, x2)

inst_16622:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x839fffff; valaddr_reg:x3; val_offset:49866*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49866*0 + 3*494*FLEN/8, x4, x1, x2)

inst_16623:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x83bfffff; valaddr_reg:x3; val_offset:49869*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49869*0 + 3*495*FLEN/8, x4, x1, x2)

inst_16624:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x83c00000; valaddr_reg:x3; val_offset:49872*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49872*0 + 3*496*FLEN/8, x4, x1, x2)

inst_16625:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x83e00000; valaddr_reg:x3; val_offset:49875*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49875*0 + 3*497*FLEN/8, x4, x1, x2)

inst_16626:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x83f00000; valaddr_reg:x3; val_offset:49878*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49878*0 + 3*498*FLEN/8, x4, x1, x2)

inst_16627:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x83f80000; valaddr_reg:x3; val_offset:49881*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49881*0 + 3*499*FLEN/8, x4, x1, x2)

inst_16628:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x83fc0000; valaddr_reg:x3; val_offset:49884*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49884*0 + 3*500*FLEN/8, x4, x1, x2)

inst_16629:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x83fe0000; valaddr_reg:x3; val_offset:49887*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49887*0 + 3*501*FLEN/8, x4, x1, x2)

inst_16630:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x83ff0000; valaddr_reg:x3; val_offset:49890*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49890*0 + 3*502*FLEN/8, x4, x1, x2)

inst_16631:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x83ff8000; valaddr_reg:x3; val_offset:49893*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49893*0 + 3*503*FLEN/8, x4, x1, x2)

inst_16632:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x83ffc000; valaddr_reg:x3; val_offset:49896*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49896*0 + 3*504*FLEN/8, x4, x1, x2)

inst_16633:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x83ffe000; valaddr_reg:x3; val_offset:49899*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49899*0 + 3*505*FLEN/8, x4, x1, x2)

inst_16634:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x83fff000; valaddr_reg:x3; val_offset:49902*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49902*0 + 3*506*FLEN/8, x4, x1, x2)

inst_16635:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x83fff800; valaddr_reg:x3; val_offset:49905*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49905*0 + 3*507*FLEN/8, x4, x1, x2)

inst_16636:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x83fffc00; valaddr_reg:x3; val_offset:49908*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49908*0 + 3*508*FLEN/8, x4, x1, x2)

inst_16637:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x83fffe00; valaddr_reg:x3; val_offset:49911*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49911*0 + 3*509*FLEN/8, x4, x1, x2)

inst_16638:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x83ffff00; valaddr_reg:x3; val_offset:49914*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49914*0 + 3*510*FLEN/8, x4, x1, x2)

inst_16639:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x83ffff80; valaddr_reg:x3; val_offset:49917*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49917*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_16640:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x83ffffc0; valaddr_reg:x3; val_offset:49920*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49920*0 + 3*512*FLEN/8, x4, x1, x2)

inst_16641:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x83ffffe0; valaddr_reg:x3; val_offset:49923*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49923*0 + 3*513*FLEN/8, x4, x1, x2)

inst_16642:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x83fffff0; valaddr_reg:x3; val_offset:49926*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49926*0 + 3*514*FLEN/8, x4, x1, x2)

inst_16643:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x83fffff8; valaddr_reg:x3; val_offset:49929*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49929*0 + 3*515*FLEN/8, x4, x1, x2)

inst_16644:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x83fffffc; valaddr_reg:x3; val_offset:49932*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49932*0 + 3*516*FLEN/8, x4, x1, x2)

inst_16645:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x83fffffe; valaddr_reg:x3; val_offset:49935*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49935*0 + 3*517*FLEN/8, x4, x1, x2)

inst_16646:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23b98c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3b98c; op2val:0x80000000;
op3val:0x83ffffff; valaddr_reg:x3; val_offset:49938*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49938*0 + 3*518*FLEN/8, x4, x1, x2)

inst_16647:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:49941*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49941*0 + 3*519*FLEN/8, x4, x1, x2)

inst_16648:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:49944*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49944*0 + 3*520*FLEN/8, x4, x1, x2)

inst_16649:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:49947*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49947*0 + 3*521*FLEN/8, x4, x1, x2)

inst_16650:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:49950*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49950*0 + 3*522*FLEN/8, x4, x1, x2)

inst_16651:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:49953*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49953*0 + 3*523*FLEN/8, x4, x1, x2)

inst_16652:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:49956*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49956*0 + 3*524*FLEN/8, x4, x1, x2)

inst_16653:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:49959*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49959*0 + 3*525*FLEN/8, x4, x1, x2)

inst_16654:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:49962*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49962*0 + 3*526*FLEN/8, x4, x1, x2)

inst_16655:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:49965*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49965*0 + 3*527*FLEN/8, x4, x1, x2)

inst_16656:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:49968*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49968*0 + 3*528*FLEN/8, x4, x1, x2)

inst_16657:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:49971*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49971*0 + 3*529*FLEN/8, x4, x1, x2)

inst_16658:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:49974*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49974*0 + 3*530*FLEN/8, x4, x1, x2)

inst_16659:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:49977*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49977*0 + 3*531*FLEN/8, x4, x1, x2)

inst_16660:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:49980*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49980*0 + 3*532*FLEN/8, x4, x1, x2)

inst_16661:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:49983*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49983*0 + 3*533*FLEN/8, x4, x1, x2)

inst_16662:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:49986*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49986*0 + 3*534*FLEN/8, x4, x1, x2)

inst_16663:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xa800000; valaddr_reg:x3; val_offset:49989*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49989*0 + 3*535*FLEN/8, x4, x1, x2)

inst_16664:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xa800001; valaddr_reg:x3; val_offset:49992*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49992*0 + 3*536*FLEN/8, x4, x1, x2)

inst_16665:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xa800003; valaddr_reg:x3; val_offset:49995*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49995*0 + 3*537*FLEN/8, x4, x1, x2)

inst_16666:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xa800007; valaddr_reg:x3; val_offset:49998*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 49998*0 + 3*538*FLEN/8, x4, x1, x2)

inst_16667:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xa80000f; valaddr_reg:x3; val_offset:50001*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50001*0 + 3*539*FLEN/8, x4, x1, x2)

inst_16668:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xa80001f; valaddr_reg:x3; val_offset:50004*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50004*0 + 3*540*FLEN/8, x4, x1, x2)

inst_16669:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xa80003f; valaddr_reg:x3; val_offset:50007*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50007*0 + 3*541*FLEN/8, x4, x1, x2)

inst_16670:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xa80007f; valaddr_reg:x3; val_offset:50010*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50010*0 + 3*542*FLEN/8, x4, x1, x2)

inst_16671:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xa8000ff; valaddr_reg:x3; val_offset:50013*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50013*0 + 3*543*FLEN/8, x4, x1, x2)

inst_16672:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xa8001ff; valaddr_reg:x3; val_offset:50016*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50016*0 + 3*544*FLEN/8, x4, x1, x2)

inst_16673:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xa8003ff; valaddr_reg:x3; val_offset:50019*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50019*0 + 3*545*FLEN/8, x4, x1, x2)

inst_16674:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xa8007ff; valaddr_reg:x3; val_offset:50022*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50022*0 + 3*546*FLEN/8, x4, x1, x2)

inst_16675:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xa800fff; valaddr_reg:x3; val_offset:50025*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50025*0 + 3*547*FLEN/8, x4, x1, x2)

inst_16676:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xa801fff; valaddr_reg:x3; val_offset:50028*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50028*0 + 3*548*FLEN/8, x4, x1, x2)

inst_16677:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xa803fff; valaddr_reg:x3; val_offset:50031*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50031*0 + 3*549*FLEN/8, x4, x1, x2)

inst_16678:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xa807fff; valaddr_reg:x3; val_offset:50034*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50034*0 + 3*550*FLEN/8, x4, x1, x2)

inst_16679:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xa80ffff; valaddr_reg:x3; val_offset:50037*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50037*0 + 3*551*FLEN/8, x4, x1, x2)

inst_16680:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xa81ffff; valaddr_reg:x3; val_offset:50040*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50040*0 + 3*552*FLEN/8, x4, x1, x2)

inst_16681:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xa83ffff; valaddr_reg:x3; val_offset:50043*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50043*0 + 3*553*FLEN/8, x4, x1, x2)

inst_16682:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xa87ffff; valaddr_reg:x3; val_offset:50046*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50046*0 + 3*554*FLEN/8, x4, x1, x2)

inst_16683:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xa8fffff; valaddr_reg:x3; val_offset:50049*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50049*0 + 3*555*FLEN/8, x4, x1, x2)

inst_16684:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xa9fffff; valaddr_reg:x3; val_offset:50052*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50052*0 + 3*556*FLEN/8, x4, x1, x2)

inst_16685:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xabfffff; valaddr_reg:x3; val_offset:50055*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50055*0 + 3*557*FLEN/8, x4, x1, x2)

inst_16686:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xac00000; valaddr_reg:x3; val_offset:50058*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50058*0 + 3*558*FLEN/8, x4, x1, x2)

inst_16687:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xae00000; valaddr_reg:x3; val_offset:50061*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50061*0 + 3*559*FLEN/8, x4, x1, x2)

inst_16688:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xaf00000; valaddr_reg:x3; val_offset:50064*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50064*0 + 3*560*FLEN/8, x4, x1, x2)

inst_16689:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xaf80000; valaddr_reg:x3; val_offset:50067*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50067*0 + 3*561*FLEN/8, x4, x1, x2)

inst_16690:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xafc0000; valaddr_reg:x3; val_offset:50070*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50070*0 + 3*562*FLEN/8, x4, x1, x2)

inst_16691:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xafe0000; valaddr_reg:x3; val_offset:50073*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50073*0 + 3*563*FLEN/8, x4, x1, x2)

inst_16692:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xaff0000; valaddr_reg:x3; val_offset:50076*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50076*0 + 3*564*FLEN/8, x4, x1, x2)

inst_16693:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xaff8000; valaddr_reg:x3; val_offset:50079*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50079*0 + 3*565*FLEN/8, x4, x1, x2)

inst_16694:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xaffc000; valaddr_reg:x3; val_offset:50082*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50082*0 + 3*566*FLEN/8, x4, x1, x2)

inst_16695:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xaffe000; valaddr_reg:x3; val_offset:50085*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50085*0 + 3*567*FLEN/8, x4, x1, x2)

inst_16696:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xafff000; valaddr_reg:x3; val_offset:50088*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50088*0 + 3*568*FLEN/8, x4, x1, x2)

inst_16697:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xafff800; valaddr_reg:x3; val_offset:50091*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50091*0 + 3*569*FLEN/8, x4, x1, x2)

inst_16698:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xafffc00; valaddr_reg:x3; val_offset:50094*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50094*0 + 3*570*FLEN/8, x4, x1, x2)

inst_16699:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xafffe00; valaddr_reg:x3; val_offset:50097*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50097*0 + 3*571*FLEN/8, x4, x1, x2)

inst_16700:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xaffff00; valaddr_reg:x3; val_offset:50100*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50100*0 + 3*572*FLEN/8, x4, x1, x2)

inst_16701:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xaffff80; valaddr_reg:x3; val_offset:50103*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50103*0 + 3*573*FLEN/8, x4, x1, x2)

inst_16702:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xaffffc0; valaddr_reg:x3; val_offset:50106*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50106*0 + 3*574*FLEN/8, x4, x1, x2)

inst_16703:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xaffffe0; valaddr_reg:x3; val_offset:50109*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50109*0 + 3*575*FLEN/8, x4, x1, x2)

inst_16704:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xafffff0; valaddr_reg:x3; val_offset:50112*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50112*0 + 3*576*FLEN/8, x4, x1, x2)

inst_16705:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xafffff8; valaddr_reg:x3; val_offset:50115*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50115*0 + 3*577*FLEN/8, x4, x1, x2)

inst_16706:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xafffffc; valaddr_reg:x3; val_offset:50118*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50118*0 + 3*578*FLEN/8, x4, x1, x2)

inst_16707:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xafffffe; valaddr_reg:x3; val_offset:50121*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50121*0 + 3*579*FLEN/8, x4, x1, x2)

inst_16708:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x23ca20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x15 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea3ca20; op2val:0x0;
op3val:0xaffffff; valaddr_reg:x3; val_offset:50124*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50124*0 + 3*580*FLEN/8, x4, x1, x2)

inst_16709:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5e800000; valaddr_reg:x3; val_offset:50127*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50127*0 + 3*581*FLEN/8, x4, x1, x2)

inst_16710:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5e800001; valaddr_reg:x3; val_offset:50130*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50130*0 + 3*582*FLEN/8, x4, x1, x2)

inst_16711:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5e800003; valaddr_reg:x3; val_offset:50133*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50133*0 + 3*583*FLEN/8, x4, x1, x2)

inst_16712:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5e800007; valaddr_reg:x3; val_offset:50136*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50136*0 + 3*584*FLEN/8, x4, x1, x2)

inst_16713:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5e80000f; valaddr_reg:x3; val_offset:50139*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50139*0 + 3*585*FLEN/8, x4, x1, x2)

inst_16714:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5e80001f; valaddr_reg:x3; val_offset:50142*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50142*0 + 3*586*FLEN/8, x4, x1, x2)

inst_16715:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5e80003f; valaddr_reg:x3; val_offset:50145*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50145*0 + 3*587*FLEN/8, x4, x1, x2)

inst_16716:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5e80007f; valaddr_reg:x3; val_offset:50148*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50148*0 + 3*588*FLEN/8, x4, x1, x2)

inst_16717:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5e8000ff; valaddr_reg:x3; val_offset:50151*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50151*0 + 3*589*FLEN/8, x4, x1, x2)

inst_16718:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5e8001ff; valaddr_reg:x3; val_offset:50154*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50154*0 + 3*590*FLEN/8, x4, x1, x2)

inst_16719:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5e8003ff; valaddr_reg:x3; val_offset:50157*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50157*0 + 3*591*FLEN/8, x4, x1, x2)

inst_16720:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5e8007ff; valaddr_reg:x3; val_offset:50160*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50160*0 + 3*592*FLEN/8, x4, x1, x2)

inst_16721:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5e800fff; valaddr_reg:x3; val_offset:50163*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50163*0 + 3*593*FLEN/8, x4, x1, x2)

inst_16722:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5e801fff; valaddr_reg:x3; val_offset:50166*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50166*0 + 3*594*FLEN/8, x4, x1, x2)

inst_16723:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5e803fff; valaddr_reg:x3; val_offset:50169*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50169*0 + 3*595*FLEN/8, x4, x1, x2)

inst_16724:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5e807fff; valaddr_reg:x3; val_offset:50172*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50172*0 + 3*596*FLEN/8, x4, x1, x2)

inst_16725:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5e80ffff; valaddr_reg:x3; val_offset:50175*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50175*0 + 3*597*FLEN/8, x4, x1, x2)

inst_16726:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5e81ffff; valaddr_reg:x3; val_offset:50178*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50178*0 + 3*598*FLEN/8, x4, x1, x2)

inst_16727:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5e83ffff; valaddr_reg:x3; val_offset:50181*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50181*0 + 3*599*FLEN/8, x4, x1, x2)

inst_16728:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5e87ffff; valaddr_reg:x3; val_offset:50184*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50184*0 + 3*600*FLEN/8, x4, x1, x2)

inst_16729:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5e8fffff; valaddr_reg:x3; val_offset:50187*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50187*0 + 3*601*FLEN/8, x4, x1, x2)

inst_16730:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5e9fffff; valaddr_reg:x3; val_offset:50190*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50190*0 + 3*602*FLEN/8, x4, x1, x2)

inst_16731:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5ebfffff; valaddr_reg:x3; val_offset:50193*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50193*0 + 3*603*FLEN/8, x4, x1, x2)

inst_16732:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5ec00000; valaddr_reg:x3; val_offset:50196*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50196*0 + 3*604*FLEN/8, x4, x1, x2)

inst_16733:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5ee00000; valaddr_reg:x3; val_offset:50199*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50199*0 + 3*605*FLEN/8, x4, x1, x2)

inst_16734:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5ef00000; valaddr_reg:x3; val_offset:50202*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50202*0 + 3*606*FLEN/8, x4, x1, x2)

inst_16735:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5ef80000; valaddr_reg:x3; val_offset:50205*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50205*0 + 3*607*FLEN/8, x4, x1, x2)

inst_16736:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5efc0000; valaddr_reg:x3; val_offset:50208*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50208*0 + 3*608*FLEN/8, x4, x1, x2)

inst_16737:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5efe0000; valaddr_reg:x3; val_offset:50211*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50211*0 + 3*609*FLEN/8, x4, x1, x2)

inst_16738:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5eff0000; valaddr_reg:x3; val_offset:50214*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50214*0 + 3*610*FLEN/8, x4, x1, x2)

inst_16739:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5eff8000; valaddr_reg:x3; val_offset:50217*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50217*0 + 3*611*FLEN/8, x4, x1, x2)

inst_16740:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5effc000; valaddr_reg:x3; val_offset:50220*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50220*0 + 3*612*FLEN/8, x4, x1, x2)

inst_16741:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5effe000; valaddr_reg:x3; val_offset:50223*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50223*0 + 3*613*FLEN/8, x4, x1, x2)

inst_16742:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5efff000; valaddr_reg:x3; val_offset:50226*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50226*0 + 3*614*FLEN/8, x4, x1, x2)

inst_16743:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5efff800; valaddr_reg:x3; val_offset:50229*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50229*0 + 3*615*FLEN/8, x4, x1, x2)

inst_16744:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5efffc00; valaddr_reg:x3; val_offset:50232*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50232*0 + 3*616*FLEN/8, x4, x1, x2)

inst_16745:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5efffe00; valaddr_reg:x3; val_offset:50235*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50235*0 + 3*617*FLEN/8, x4, x1, x2)

inst_16746:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5effff00; valaddr_reg:x3; val_offset:50238*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50238*0 + 3*618*FLEN/8, x4, x1, x2)

inst_16747:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5effff80; valaddr_reg:x3; val_offset:50241*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50241*0 + 3*619*FLEN/8, x4, x1, x2)

inst_16748:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5effffc0; valaddr_reg:x3; val_offset:50244*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50244*0 + 3*620*FLEN/8, x4, x1, x2)

inst_16749:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5effffe0; valaddr_reg:x3; val_offset:50247*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50247*0 + 3*621*FLEN/8, x4, x1, x2)

inst_16750:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5efffff0; valaddr_reg:x3; val_offset:50250*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50250*0 + 3*622*FLEN/8, x4, x1, x2)

inst_16751:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5efffff8; valaddr_reg:x3; val_offset:50253*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50253*0 + 3*623*FLEN/8, x4, x1, x2)

inst_16752:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5efffffc; valaddr_reg:x3; val_offset:50256*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50256*0 + 3*624*FLEN/8, x4, x1, x2)

inst_16753:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5efffffe; valaddr_reg:x3; val_offset:50259*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50259*0 + 3*625*FLEN/8, x4, x1, x2)

inst_16754:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xbd and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x5effffff; valaddr_reg:x3; val_offset:50262*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50262*0 + 3*626*FLEN/8, x4, x1, x2)

inst_16755:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x7f000001; valaddr_reg:x3; val_offset:50265*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50265*0 + 3*627*FLEN/8, x4, x1, x2)

inst_16756:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x7f000003; valaddr_reg:x3; val_offset:50268*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50268*0 + 3*628*FLEN/8, x4, x1, x2)

inst_16757:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x7f000007; valaddr_reg:x3; val_offset:50271*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50271*0 + 3*629*FLEN/8, x4, x1, x2)

inst_16758:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x7f199999; valaddr_reg:x3; val_offset:50274*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50274*0 + 3*630*FLEN/8, x4, x1, x2)

inst_16759:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x7f249249; valaddr_reg:x3; val_offset:50277*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50277*0 + 3*631*FLEN/8, x4, x1, x2)

inst_16760:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x7f333333; valaddr_reg:x3; val_offset:50280*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50280*0 + 3*632*FLEN/8, x4, x1, x2)

inst_16761:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:50283*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50283*0 + 3*633*FLEN/8, x4, x1, x2)

inst_16762:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:50286*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50286*0 + 3*634*FLEN/8, x4, x1, x2)

inst_16763:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x7f444444; valaddr_reg:x3; val_offset:50289*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50289*0 + 3*635*FLEN/8, x4, x1, x2)

inst_16764:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:50292*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50292*0 + 3*636*FLEN/8, x4, x1, x2)

inst_16765:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:50295*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50295*0 + 3*637*FLEN/8, x4, x1, x2)

inst_16766:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x7f666666; valaddr_reg:x3; val_offset:50298*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50298*0 + 3*638*FLEN/8, x4, x1, x2)

inst_16767:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:50301*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50301*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_16768:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:50304*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50304*0 + 3*640*FLEN/8, x4, x1, x2)

inst_16769:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:50307*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50307*0 + 3*641*FLEN/8, x4, x1, x2)

inst_16770:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x258981 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x45f314 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea58981; op2val:0x4045f314;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:50310*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50310*0 + 3*642*FLEN/8, x4, x1, x2)

inst_16771:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe5800000; valaddr_reg:x3; val_offset:50313*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50313*0 + 3*643*FLEN/8, x4, x1, x2)

inst_16772:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe5800001; valaddr_reg:x3; val_offset:50316*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50316*0 + 3*644*FLEN/8, x4, x1, x2)

inst_16773:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe5800003; valaddr_reg:x3; val_offset:50319*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50319*0 + 3*645*FLEN/8, x4, x1, x2)

inst_16774:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe5800007; valaddr_reg:x3; val_offset:50322*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50322*0 + 3*646*FLEN/8, x4, x1, x2)

inst_16775:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe580000f; valaddr_reg:x3; val_offset:50325*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50325*0 + 3*647*FLEN/8, x4, x1, x2)

inst_16776:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe580001f; valaddr_reg:x3; val_offset:50328*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50328*0 + 3*648*FLEN/8, x4, x1, x2)

inst_16777:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe580003f; valaddr_reg:x3; val_offset:50331*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50331*0 + 3*649*FLEN/8, x4, x1, x2)

inst_16778:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe580007f; valaddr_reg:x3; val_offset:50334*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50334*0 + 3*650*FLEN/8, x4, x1, x2)

inst_16779:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe58000ff; valaddr_reg:x3; val_offset:50337*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50337*0 + 3*651*FLEN/8, x4, x1, x2)

inst_16780:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe58001ff; valaddr_reg:x3; val_offset:50340*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50340*0 + 3*652*FLEN/8, x4, x1, x2)

inst_16781:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe58003ff; valaddr_reg:x3; val_offset:50343*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50343*0 + 3*653*FLEN/8, x4, x1, x2)

inst_16782:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe58007ff; valaddr_reg:x3; val_offset:50346*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50346*0 + 3*654*FLEN/8, x4, x1, x2)

inst_16783:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe5800fff; valaddr_reg:x3; val_offset:50349*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50349*0 + 3*655*FLEN/8, x4, x1, x2)

inst_16784:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe5801fff; valaddr_reg:x3; val_offset:50352*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50352*0 + 3*656*FLEN/8, x4, x1, x2)

inst_16785:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe5803fff; valaddr_reg:x3; val_offset:50355*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50355*0 + 3*657*FLEN/8, x4, x1, x2)

inst_16786:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe5807fff; valaddr_reg:x3; val_offset:50358*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50358*0 + 3*658*FLEN/8, x4, x1, x2)

inst_16787:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe580ffff; valaddr_reg:x3; val_offset:50361*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50361*0 + 3*659*FLEN/8, x4, x1, x2)

inst_16788:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe581ffff; valaddr_reg:x3; val_offset:50364*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50364*0 + 3*660*FLEN/8, x4, x1, x2)

inst_16789:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe583ffff; valaddr_reg:x3; val_offset:50367*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50367*0 + 3*661*FLEN/8, x4, x1, x2)

inst_16790:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe587ffff; valaddr_reg:x3; val_offset:50370*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50370*0 + 3*662*FLEN/8, x4, x1, x2)

inst_16791:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe58fffff; valaddr_reg:x3; val_offset:50373*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50373*0 + 3*663*FLEN/8, x4, x1, x2)

inst_16792:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe59fffff; valaddr_reg:x3; val_offset:50376*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50376*0 + 3*664*FLEN/8, x4, x1, x2)

inst_16793:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe5bfffff; valaddr_reg:x3; val_offset:50379*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50379*0 + 3*665*FLEN/8, x4, x1, x2)

inst_16794:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe5c00000; valaddr_reg:x3; val_offset:50382*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50382*0 + 3*666*FLEN/8, x4, x1, x2)

inst_16795:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe5e00000; valaddr_reg:x3; val_offset:50385*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50385*0 + 3*667*FLEN/8, x4, x1, x2)

inst_16796:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe5f00000; valaddr_reg:x3; val_offset:50388*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50388*0 + 3*668*FLEN/8, x4, x1, x2)

inst_16797:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe5f80000; valaddr_reg:x3; val_offset:50391*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50391*0 + 3*669*FLEN/8, x4, x1, x2)

inst_16798:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe5fc0000; valaddr_reg:x3; val_offset:50394*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50394*0 + 3*670*FLEN/8, x4, x1, x2)

inst_16799:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe5fe0000; valaddr_reg:x3; val_offset:50397*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50397*0 + 3*671*FLEN/8, x4, x1, x2)

inst_16800:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe5ff0000; valaddr_reg:x3; val_offset:50400*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50400*0 + 3*672*FLEN/8, x4, x1, x2)

inst_16801:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe5ff8000; valaddr_reg:x3; val_offset:50403*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50403*0 + 3*673*FLEN/8, x4, x1, x2)

inst_16802:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe5ffc000; valaddr_reg:x3; val_offset:50406*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50406*0 + 3*674*FLEN/8, x4, x1, x2)

inst_16803:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe5ffe000; valaddr_reg:x3; val_offset:50409*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50409*0 + 3*675*FLEN/8, x4, x1, x2)

inst_16804:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe5fff000; valaddr_reg:x3; val_offset:50412*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50412*0 + 3*676*FLEN/8, x4, x1, x2)

inst_16805:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe5fff800; valaddr_reg:x3; val_offset:50415*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50415*0 + 3*677*FLEN/8, x4, x1, x2)

inst_16806:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe5fffc00; valaddr_reg:x3; val_offset:50418*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50418*0 + 3*678*FLEN/8, x4, x1, x2)

inst_16807:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe5fffe00; valaddr_reg:x3; val_offset:50421*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50421*0 + 3*679*FLEN/8, x4, x1, x2)

inst_16808:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe5ffff00; valaddr_reg:x3; val_offset:50424*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50424*0 + 3*680*FLEN/8, x4, x1, x2)

inst_16809:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe5ffff80; valaddr_reg:x3; val_offset:50427*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50427*0 + 3*681*FLEN/8, x4, x1, x2)

inst_16810:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe5ffffc0; valaddr_reg:x3; val_offset:50430*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50430*0 + 3*682*FLEN/8, x4, x1, x2)

inst_16811:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe5ffffe0; valaddr_reg:x3; val_offset:50433*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50433*0 + 3*683*FLEN/8, x4, x1, x2)

inst_16812:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe5fffff0; valaddr_reg:x3; val_offset:50436*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50436*0 + 3*684*FLEN/8, x4, x1, x2)

inst_16813:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe5fffff8; valaddr_reg:x3; val_offset:50439*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50439*0 + 3*685*FLEN/8, x4, x1, x2)

inst_16814:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe5fffffc; valaddr_reg:x3; val_offset:50442*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50442*0 + 3*686*FLEN/8, x4, x1, x2)

inst_16815:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe5fffffe; valaddr_reg:x3; val_offset:50445*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50445*0 + 3*687*FLEN/8, x4, x1, x2)

inst_16816:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xe5ffffff; valaddr_reg:x3; val_offset:50448*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50448*0 + 3*688*FLEN/8, x4, x1, x2)

inst_16817:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xff000001; valaddr_reg:x3; val_offset:50451*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50451*0 + 3*689*FLEN/8, x4, x1, x2)

inst_16818:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xff000003; valaddr_reg:x3; val_offset:50454*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50454*0 + 3*690*FLEN/8, x4, x1, x2)

inst_16819:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xff000007; valaddr_reg:x3; val_offset:50457*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50457*0 + 3*691*FLEN/8, x4, x1, x2)

inst_16820:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xff199999; valaddr_reg:x3; val_offset:50460*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50460*0 + 3*692*FLEN/8, x4, x1, x2)

inst_16821:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xff249249; valaddr_reg:x3; val_offset:50463*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50463*0 + 3*693*FLEN/8, x4, x1, x2)

inst_16822:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xff333333; valaddr_reg:x3; val_offset:50466*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50466*0 + 3*694*FLEN/8, x4, x1, x2)

inst_16823:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:50469*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50469*0 + 3*695*FLEN/8, x4, x1, x2)

inst_16824:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:50472*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50472*0 + 3*696*FLEN/8, x4, x1, x2)

inst_16825:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xff444444; valaddr_reg:x3; val_offset:50475*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50475*0 + 3*697*FLEN/8, x4, x1, x2)

inst_16826:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:50478*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50478*0 + 3*698*FLEN/8, x4, x1, x2)

inst_16827:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:50481*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50481*0 + 3*699*FLEN/8, x4, x1, x2)

inst_16828:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xff666666; valaddr_reg:x3; val_offset:50484*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50484*0 + 3*700*FLEN/8, x4, x1, x2)

inst_16829:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:50487*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50487*0 + 3*701*FLEN/8, x4, x1, x2)

inst_16830:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:50490*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50490*0 + 3*702*FLEN/8, x4, x1, x2)

inst_16831:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:50493*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50493*0 + 3*703*FLEN/8, x4, x1, x2)

inst_16832:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c774 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45a91b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea5c774; op2val:0xc045a91b;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:50496*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50496*0 + 3*704*FLEN/8, x4, x1, x2)

inst_16833:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xbf800001; valaddr_reg:x3; val_offset:50499*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50499*0 + 3*705*FLEN/8, x4, x1, x2)

inst_16834:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xbf800003; valaddr_reg:x3; val_offset:50502*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50502*0 + 3*706*FLEN/8, x4, x1, x2)

inst_16835:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xbf800007; valaddr_reg:x3; val_offset:50505*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50505*0 + 3*707*FLEN/8, x4, x1, x2)

inst_16836:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xbf999999; valaddr_reg:x3; val_offset:50508*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50508*0 + 3*708*FLEN/8, x4, x1, x2)

inst_16837:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:50511*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50511*0 + 3*709*FLEN/8, x4, x1, x2)

inst_16838:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:50514*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50514*0 + 3*710*FLEN/8, x4, x1, x2)

inst_16839:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:50517*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50517*0 + 3*711*FLEN/8, x4, x1, x2)

inst_16840:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:50520*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50520*0 + 3*712*FLEN/8, x4, x1, x2)

inst_16841:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:50523*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50523*0 + 3*713*FLEN/8, x4, x1, x2)

inst_16842:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:50526*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50526*0 + 3*714*FLEN/8, x4, x1, x2)

inst_16843:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:50529*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50529*0 + 3*715*FLEN/8, x4, x1, x2)

inst_16844:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:50532*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50532*0 + 3*716*FLEN/8, x4, x1, x2)

inst_16845:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:50535*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50535*0 + 3*717*FLEN/8, x4, x1, x2)

inst_16846:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:50538*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50538*0 + 3*718*FLEN/8, x4, x1, x2)

inst_16847:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:50541*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50541*0 + 3*719*FLEN/8, x4, x1, x2)

inst_16848:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:50544*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50544*0 + 3*720*FLEN/8, x4, x1, x2)

inst_16849:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca000000; valaddr_reg:x3; val_offset:50547*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50547*0 + 3*721*FLEN/8, x4, x1, x2)

inst_16850:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca000001; valaddr_reg:x3; val_offset:50550*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50550*0 + 3*722*FLEN/8, x4, x1, x2)

inst_16851:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca000003; valaddr_reg:x3; val_offset:50553*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50553*0 + 3*723*FLEN/8, x4, x1, x2)

inst_16852:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca000007; valaddr_reg:x3; val_offset:50556*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50556*0 + 3*724*FLEN/8, x4, x1, x2)

inst_16853:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca00000f; valaddr_reg:x3; val_offset:50559*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50559*0 + 3*725*FLEN/8, x4, x1, x2)

inst_16854:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca00001f; valaddr_reg:x3; val_offset:50562*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50562*0 + 3*726*FLEN/8, x4, x1, x2)

inst_16855:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca00003f; valaddr_reg:x3; val_offset:50565*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50565*0 + 3*727*FLEN/8, x4, x1, x2)

inst_16856:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca00007f; valaddr_reg:x3; val_offset:50568*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50568*0 + 3*728*FLEN/8, x4, x1, x2)

inst_16857:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca0000ff; valaddr_reg:x3; val_offset:50571*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50571*0 + 3*729*FLEN/8, x4, x1, x2)

inst_16858:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca0001ff; valaddr_reg:x3; val_offset:50574*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50574*0 + 3*730*FLEN/8, x4, x1, x2)

inst_16859:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca0003ff; valaddr_reg:x3; val_offset:50577*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50577*0 + 3*731*FLEN/8, x4, x1, x2)

inst_16860:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca0007ff; valaddr_reg:x3; val_offset:50580*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50580*0 + 3*732*FLEN/8, x4, x1, x2)

inst_16861:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca000fff; valaddr_reg:x3; val_offset:50583*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50583*0 + 3*733*FLEN/8, x4, x1, x2)

inst_16862:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca001fff; valaddr_reg:x3; val_offset:50586*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50586*0 + 3*734*FLEN/8, x4, x1, x2)

inst_16863:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca003fff; valaddr_reg:x3; val_offset:50589*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50589*0 + 3*735*FLEN/8, x4, x1, x2)

inst_16864:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca007fff; valaddr_reg:x3; val_offset:50592*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50592*0 + 3*736*FLEN/8, x4, x1, x2)

inst_16865:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca00ffff; valaddr_reg:x3; val_offset:50595*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50595*0 + 3*737*FLEN/8, x4, x1, x2)

inst_16866:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca01ffff; valaddr_reg:x3; val_offset:50598*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50598*0 + 3*738*FLEN/8, x4, x1, x2)

inst_16867:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca03ffff; valaddr_reg:x3; val_offset:50601*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50601*0 + 3*739*FLEN/8, x4, x1, x2)

inst_16868:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca07ffff; valaddr_reg:x3; val_offset:50604*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50604*0 + 3*740*FLEN/8, x4, x1, x2)

inst_16869:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca0fffff; valaddr_reg:x3; val_offset:50607*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50607*0 + 3*741*FLEN/8, x4, x1, x2)

inst_16870:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca1fffff; valaddr_reg:x3; val_offset:50610*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50610*0 + 3*742*FLEN/8, x4, x1, x2)

inst_16871:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca3fffff; valaddr_reg:x3; val_offset:50613*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50613*0 + 3*743*FLEN/8, x4, x1, x2)

inst_16872:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca400000; valaddr_reg:x3; val_offset:50616*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50616*0 + 3*744*FLEN/8, x4, x1, x2)

inst_16873:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca600000; valaddr_reg:x3; val_offset:50619*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50619*0 + 3*745*FLEN/8, x4, x1, x2)

inst_16874:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca700000; valaddr_reg:x3; val_offset:50622*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50622*0 + 3*746*FLEN/8, x4, x1, x2)

inst_16875:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca780000; valaddr_reg:x3; val_offset:50625*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50625*0 + 3*747*FLEN/8, x4, x1, x2)

inst_16876:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca7c0000; valaddr_reg:x3; val_offset:50628*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50628*0 + 3*748*FLEN/8, x4, x1, x2)

inst_16877:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca7e0000; valaddr_reg:x3; val_offset:50631*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50631*0 + 3*749*FLEN/8, x4, x1, x2)

inst_16878:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca7f0000; valaddr_reg:x3; val_offset:50634*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50634*0 + 3*750*FLEN/8, x4, x1, x2)

inst_16879:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca7f8000; valaddr_reg:x3; val_offset:50637*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50637*0 + 3*751*FLEN/8, x4, x1, x2)

inst_16880:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca7fc000; valaddr_reg:x3; val_offset:50640*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50640*0 + 3*752*FLEN/8, x4, x1, x2)

inst_16881:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca7fe000; valaddr_reg:x3; val_offset:50643*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50643*0 + 3*753*FLEN/8, x4, x1, x2)

inst_16882:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca7ff000; valaddr_reg:x3; val_offset:50646*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50646*0 + 3*754*FLEN/8, x4, x1, x2)

inst_16883:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca7ff800; valaddr_reg:x3; val_offset:50649*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50649*0 + 3*755*FLEN/8, x4, x1, x2)

inst_16884:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca7ffc00; valaddr_reg:x3; val_offset:50652*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50652*0 + 3*756*FLEN/8, x4, x1, x2)

inst_16885:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca7ffe00; valaddr_reg:x3; val_offset:50655*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50655*0 + 3*757*FLEN/8, x4, x1, x2)

inst_16886:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca7fff00; valaddr_reg:x3; val_offset:50658*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50658*0 + 3*758*FLEN/8, x4, x1, x2)

inst_16887:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca7fff80; valaddr_reg:x3; val_offset:50661*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50661*0 + 3*759*FLEN/8, x4, x1, x2)

inst_16888:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca7fffc0; valaddr_reg:x3; val_offset:50664*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50664*0 + 3*760*FLEN/8, x4, x1, x2)

inst_16889:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca7fffe0; valaddr_reg:x3; val_offset:50667*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50667*0 + 3*761*FLEN/8, x4, x1, x2)

inst_16890:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca7ffff0; valaddr_reg:x3; val_offset:50670*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50670*0 + 3*762*FLEN/8, x4, x1, x2)

inst_16891:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca7ffff8; valaddr_reg:x3; val_offset:50673*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50673*0 + 3*763*FLEN/8, x4, x1, x2)

inst_16892:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca7ffffc; valaddr_reg:x3; val_offset:50676*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50676*0 + 3*764*FLEN/8, x4, x1, x2)

inst_16893:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca7ffffe; valaddr_reg:x3; val_offset:50679*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50679*0 + 3*765*FLEN/8, x4, x1, x2)

inst_16894:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27358d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x61fc2b and fs3 == 1 and fe3 == 0x94 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7358d; op2val:0x8061fc2b;
op3val:0xca7fffff; valaddr_reg:x3; val_offset:50682*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50682*0 + 3*766*FLEN/8, x4, x1, x2)

inst_16895:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f000000; valaddr_reg:x3; val_offset:50685*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 50685*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2124423855,32,FLEN)
NAN_BOXED(1078763632,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2124423855,32,FLEN)
NAN_BOXED(1078763632,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2124423855,32,FLEN)
NAN_BOXED(1078763632,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2124423855,32,FLEN)
NAN_BOXED(1078763632,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2124423855,32,FLEN)
NAN_BOXED(1078763632,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2124423855,32,FLEN)
NAN_BOXED(1078763632,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2124423855,32,FLEN)
NAN_BOXED(1078763632,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2124423855,32,FLEN)
NAN_BOXED(1078763632,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2124423855,32,FLEN)
NAN_BOXED(1078763632,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2124423855,32,FLEN)
NAN_BOXED(1078763632,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2124423855,32,FLEN)
NAN_BOXED(1078763632,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2124423855,32,FLEN)
NAN_BOXED(1078763632,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2124429038,32,FLEN)
NAN_BOXED(3226240660,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2124429038,32,FLEN)
NAN_BOXED(3226240660,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2124429038,32,FLEN)
NAN_BOXED(3226240660,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2124429038,32,FLEN)
NAN_BOXED(3226240660,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2124429038,32,FLEN)
NAN_BOXED(3226240660,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2124429038,32,FLEN)
NAN_BOXED(3226240660,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2124429038,32,FLEN)
NAN_BOXED(3226240660,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2124429038,32,FLEN)
NAN_BOXED(3226240660,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2124429038,32,FLEN)
NAN_BOXED(3226240660,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2124429038,32,FLEN)
NAN_BOXED(3226240660,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2124429038,32,FLEN)
NAN_BOXED(3226240660,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2124429038,32,FLEN)
NAN_BOXED(3226240660,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2124429038,32,FLEN)
NAN_BOXED(3226240660,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2124429038,32,FLEN)
NAN_BOXED(3226240660,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2124429038,32,FLEN)
NAN_BOXED(3226240660,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2124429038,32,FLEN)
NAN_BOXED(3226240660,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2124429038,32,FLEN)
NAN_BOXED(3226240660,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3053453312,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3053453313,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3053453315,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3053453319,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3053453327,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3053453343,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3053453375,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3053453439,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3053453567,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3053453823,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3053454335,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3053455359,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3053457407,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3053461503,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3053469695,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3053486079,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3053518847,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3053584383,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3053715455,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3053977599,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3054501887,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3055550463,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3057647615,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3057647616,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3059744768,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3060793344,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3061317632,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3061579776,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3061710848,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3061776384,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3061809152,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3061825536,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3061833728,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3061837824,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3061839872,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3061840896,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3061841408,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3061841664,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3061841792,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3061841856,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3061841888,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3061841904,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3061841912,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3061841916,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3061841918,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3061841919,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2124435571,32,FLEN)
NAN_BOXED(2154181379,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758336,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758337,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758339,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758343,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758351,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758367,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758399,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758463,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758591,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758847,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239759359,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239760383,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239762431,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239766527,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239774719,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239791103,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239823871,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239889407,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2240020479,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2240282623,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2240806911,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2241855487,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2243952639,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2243952640,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2246049792,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2247098368,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2247622656,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2247884800,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248015872,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248081408,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248114176,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248130560,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248138752,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248142848,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248144896,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248145920,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248146432,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248146688,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248146816,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248146880,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248146912,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248146928,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248146936,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248146940,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248146942,32,FLEN)
NAN_BOXED(2124444519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248146943,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388609,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388611,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388615,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388623,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388639,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388671,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388735,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388863,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8389119,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8389631,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8390655,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8392703,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8396799,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8404991,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8421375,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8454143,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8519679,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8650751,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8912895,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(9437183,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10066329,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10485759,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10785353,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11744051,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11983725,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12303291,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12582911,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12582912,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12862532,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(13421772,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(14380470,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(14680064,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15099494,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15578843,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15728640,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16252928,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16515072,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16646144,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16711680,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16744448,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16760832,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16769024,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16773120,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16775168,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16776192,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16776704,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16776960,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777088,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777152,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777184,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777200,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777208,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777212,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777214,32,FLEN)
NAN_BOXED(2124445158,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777215,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(654311424,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(654311425,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(654311427,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(654311431,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(654311439,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(654311455,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(654311487,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(654311551,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(654311679,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(654311935,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(654312447,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(654313471,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(654315519,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(654319615,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(654327807,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(654344191,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(654376959,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(654442495,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(654573567,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(654835711,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(655359999,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(656408575,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(658505727,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(658505728,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(660602880,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(661651456,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(662175744,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(662437888,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(662568960,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(662634496,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(662667264,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(662683648,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(662691840,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(662695936,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(662697984,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(662699008,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(662699520,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(662699776,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(662699904,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(662699968,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(662700000,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(662700016,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(662700024,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(662700028,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(662700030,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(662700031,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2124484347,32,FLEN)
NAN_BOXED(6666780,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157549977,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2158269001,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159227699,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159467373,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159786939,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160346180,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160905420,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2161864118,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162583142,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163062491,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810240,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810241,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810243,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810247,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810255,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810271,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810303,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810367,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810495,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810751,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348811263,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348812287,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348814335,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348818431,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348826623,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348843007,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348875775,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348941311,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2349072383,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2349334527,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2349858815,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2350907391,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2353004543,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2353004544,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2355101696,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2356150272,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2356674560,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2356936704,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357067776,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357133312,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357166080,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357182464,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357190656,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357194752,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357196800,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357197824,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198336,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198592,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198720,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198784,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198816,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198832,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198840,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198844,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198846,32,FLEN)
NAN_BOXED(2124501657,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198847,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157549977,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2158269001,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159227699,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159467373,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159786939,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160346180,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160905420,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2161864118,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162583142,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163062491,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976064,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976065,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976067,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976071,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976079,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976095,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976127,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976191,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976319,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976575,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373977087,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373978111,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373980159,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373984255,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373992447,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2374008831,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2374041599,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2374107135,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2374238207,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2374500351,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2375024639,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2376073215,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2378170367,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2378170368,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2380267520,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2381316096,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2381840384,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382102528,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382233600,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382299136,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382331904,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382348288,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382356480,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382360576,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382362624,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382363648,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364160,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364416,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364544,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364608,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364640,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364656,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364664,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364668,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364670,32,FLEN)
NAN_BOXED(2124649107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364671,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(796917760,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(796917761,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(796917763,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(796917767,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(796917775,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(796917791,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(796917823,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(796917887,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(796918015,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(796918271,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(796918783,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(796919807,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(796921855,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(796925951,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(796934143,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(796950527,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(796983295,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(797048831,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(797179903,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(797442047,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(797966335,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(799014911,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(801112063,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(801112064,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(803209216,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(804257792,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(804782080,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(805044224,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(805175296,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(805240832,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(805273600,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(805289984,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(805298176,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(805302272,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(805304320,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(805305344,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(805305856,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(805306112,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(805306240,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(805306304,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(805306336,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(805306352,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(805306360,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(805306364,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(805306366,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(805306367,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2124653156,32,FLEN)
NAN_BOXED(6561836,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203904,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203905,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203907,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203911,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203919,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203935,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203967,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206204031,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206204159,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206204415,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206204927,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206205951,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206207999,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206212095,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206220287,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206236671,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206269439,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206334975,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206466047,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206728191,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2207252479,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2208301055,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2210398207,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2210398208,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2212495360,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2213543936,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214068224,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214330368,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214461440,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214526976,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214559744,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214576128,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214584320,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214588416,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214590464,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214591488,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592000,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592256,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592384,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592448,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592480,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592496,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592504,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592508,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592510,32,FLEN)
NAN_BOXED(2124659084,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592511,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176160768,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176160769,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176160771,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176160775,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176160783,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176160799,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176160831,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176160895,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176161023,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176161279,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176161791,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176162815,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176164863,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176168959,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176177151,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176193535,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176226303,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176291839,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176422911,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(176685055,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(177209343,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(178257919,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(180355071,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(180355072,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(182452224,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(183500800,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184025088,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184287232,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184418304,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184483840,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184516608,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184532992,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184541184,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184545280,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184547328,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184548352,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184548864,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549120,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549248,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549312,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549344,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549360,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549368,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549372,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549374,32,FLEN)
NAN_BOXED(2124663328,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549375,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1585446912,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1585446913,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1585446915,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1585446919,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1585446927,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1585446943,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1585446975,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1585447039,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1585447167,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1585447423,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1585447935,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1585448959,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1585451007,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1585455103,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1585463295,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1585479679,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1585512447,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1585577983,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1585709055,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1585971199,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1586495487,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1587544063,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1589641215,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1589641216,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1591738368,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1592786944,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1593311232,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1593573376,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1593704448,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1593769984,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1593802752,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1593819136,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1593827328,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1593831424,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1593833472,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1593834496,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1593835008,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1593835264,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1593835392,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1593835456,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1593835488,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1593835504,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1593835512,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1593835516,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1593835518,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(1593835519,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2124777857,32,FLEN)
NAN_BOXED(1078326036,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3850371072,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3850371073,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3850371075,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3850371079,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3850371087,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3850371103,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3850371135,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3850371199,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3850371327,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3850371583,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3850372095,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3850373119,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3850375167,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3850379263,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3850387455,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3850403839,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3850436607,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3850502143,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3850633215,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3850895359,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3851419647,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3852468223,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3854565375,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3854565376,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3856662528,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3857711104,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3858235392,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3858497536,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3858628608,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3858694144,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3858726912,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3858743296,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3858751488,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3858755584,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3858757632,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3858758656,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3858759168,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3858759424,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3858759552,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3858759616,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3858759648,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3858759664,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3858759672,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3858759676,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3858759678,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(3858759679,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2124793716,32,FLEN)
NAN_BOXED(3225790747,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3388997632,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3388997633,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3388997635,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3388997639,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3388997647,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3388997663,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3388997695,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3388997759,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3388997887,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3388998143,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3388998655,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3388999679,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3389001727,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3389005823,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3389014015,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3389030399,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3389063167,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3389128703,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3389259775,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3389521919,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3390046207,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3391094783,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3393191935,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3393191936,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3395289088,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3396337664,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3396861952,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3397124096,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3397255168,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3397320704,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3397353472,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3397369856,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3397378048,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3397382144,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3397384192,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3397385216,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3397385728,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3397385984,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3397386112,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3397386176,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3397386208,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3397386224,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3397386232,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3397386236,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3397386238,32,FLEN)
NAN_BOXED(2124887437,32,FLEN)
NAN_BOXED(2153905195,32,FLEN)
NAN_BOXED(3397386239,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1056964608,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
