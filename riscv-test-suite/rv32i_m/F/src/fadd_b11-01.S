
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:03:42 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fadd.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fadd.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fadd_b11 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fadd_b11)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs2 == rd != rs1, rs1==f19, rs2==f27, rd==f27,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f19; op2:f27; dest:f27; op1val:0x0; op2val:0x0; 
   valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f27, f19, f27, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==f2, rs2==f11, rd==f19,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f2; op2:f11; dest:f19; op1val:0x0; op2val:0x1; 
   valaddr_reg:x3; val_offset:2*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f19, f2, f11, dyn, 0, 0, x3, 2*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rd != rs2, rs1==f23, rs2==f10, rd==f23,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f23; op2:f10; dest:f23; op1val:0x0; op2val:0x3; 
   valaddr_reg:x3; val_offset:4*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f23, f23, f10, dyn, 0, 0, x3, 4*FLEN/8, x4, x1, x2)

inst_3:
// rs1 == rs2 != rd, rs1==f12, rs2==f12, rd==f13,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f12; op2:f12; dest:f13; op1val:0x0; op2val:0x0; 
   valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f13, f12, f12, dyn, 0, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_4:
// rs1 == rs2 == rd, rs1==f7, rs2==f7, rd==f7,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f7; op2:f7; dest:f7; op1val:0x0; op2val:0x0; 
   valaddr_reg:x3; val_offset:8*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f7, f7, f7, dyn, 0, 0, x3, 8*FLEN/8, x4, x1, x2)

inst_5:
// rs1==f31, rs2==f18, rd==f5,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f31; op2:f18; dest:f5; op1val:0x0; op2val:0x1f; 
   valaddr_reg:x3; val_offset:10*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f5, f31, f18, dyn, 0, 0, x3, 10*FLEN/8, x4, x1, x2)

inst_6:
// rs1==f13, rs2==f17, rd==f21,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f13; op2:f17; dest:f21; op1val:0x0; op2val:0x3f; 
   valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f21, f13, f17, dyn, 0, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_7:
// rs1==f0, rs2==f24, rd==f1,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f0; op2:f24; dest:f1; op1val:0x0; op2val:0x7f; 
   valaddr_reg:x3; val_offset:14*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f1, f0, f24, dyn, 0, 0, x3, 14*FLEN/8, x4, x1, x2)

inst_8:
// rs1==f8, rs2==f2, rd==f24,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f8; op2:f2; dest:f24; op1val:0x0; op2val:0xff; 
   valaddr_reg:x3; val_offset:16*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f24, f8, f2, dyn, 0, 0, x3, 16*FLEN/8, x4, x1, x2)

inst_9:
// rs1==f26, rs2==f4, rd==f10,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f26; op2:f4; dest:f10; op1val:0x0; op2val:0x1ff; 
   valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f10, f26, f4, dyn, 0, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_10:
// rs1==f6, rs2==f0, rd==f31,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f6; op2:f0; dest:f31; op1val:0x0; op2val:0x3ff; 
   valaddr_reg:x3; val_offset:20*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f6, f0, dyn, 0, 0, x3, 20*FLEN/8, x4, x1, x2)

inst_11:
// rs1==f21, rs2==f29, rd==f26,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f21; op2:f29; dest:f26; op1val:0x0; op2val:0x7ff; 
   valaddr_reg:x3; val_offset:22*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f26, f21, f29, dyn, 0, 0, x3, 22*FLEN/8, x4, x1, x2)

inst_12:
// rs1==f16, rs2==f5, rd==f28,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f16; op2:f5; dest:f28; op1val:0x0; op2val:0xfff; 
   valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f28, f16, f5, dyn, 0, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_13:
// rs1==f5, rs2==f19, rd==f12,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f5; op2:f19; dest:f12; op1val:0x0; op2val:0x1fff; 
   valaddr_reg:x3; val_offset:26*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f12, f5, f19, dyn, 0, 0, x3, 26*FLEN/8, x4, x1, x2)

inst_14:
// rs1==f30, rs2==f13, rd==f25,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f13; dest:f25; op1val:0x0; op2val:0x3fff; 
   valaddr_reg:x3; val_offset:28*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f25, f30, f13, dyn, 0, 0, x3, 28*FLEN/8, x4, x1, x2)

inst_15:
// rs1==f24, rs2==f9, rd==f17,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f24; op2:f9; dest:f17; op1val:0x0; op2val:0x7fff; 
   valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f17, f24, f9, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_16:
// rs1==f29, rs2==f22, rd==f20,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f29; op2:f22; dest:f20; op1val:0x0; op2val:0xffff; 
   valaddr_reg:x3; val_offset:32*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f20, f29, f22, dyn, 0, 0, x3, 32*FLEN/8, x4, x1, x2)

inst_17:
// rs1==f15, rs2==f14, rd==f18,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f15; op2:f14; dest:f18; op1val:0x0; op2val:0x1ffff; 
   valaddr_reg:x3; val_offset:34*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f18, f15, f14, dyn, 0, 0, x3, 34*FLEN/8, x4, x1, x2)

inst_18:
// rs1==f1, rs2==f20, rd==f15,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f1; op2:f20; dest:f15; op1val:0x0; op2val:0x3ffff; 
   valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f15, f1, f20, dyn, 0, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_19:
// rs1==f4, rs2==f16, rd==f8,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f4; op2:f16; dest:f8; op1val:0x0; op2val:0x7ffff; 
   valaddr_reg:x3; val_offset:38*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f8, f4, f16, dyn, 0, 0, x3, 38*FLEN/8, x4, x1, x2)

inst_20:
// rs1==f22, rs2==f21, rd==f11,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f22; op2:f21; dest:f11; op1val:0x0; op2val:0xfffff; 
   valaddr_reg:x3; val_offset:40*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f11, f22, f21, dyn, 0, 0, x3, 40*FLEN/8, x4, x1, x2)

inst_21:
// rs1==f20, rs2==f28, rd==f29,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f20; op2:f28; dest:f29; op1val:0x0; op2val:0x199999; 
   valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f29, f20, f28, dyn, 0, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_22:
// rs1==f11, rs2==f30, rd==f2,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f11; op2:f30; dest:f2; op1val:0x0; op2val:0x1fffff; 
   valaddr_reg:x3; val_offset:44*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f2, f11, f30, dyn, 0, 0, x3, 44*FLEN/8, x4, x1, x2)

inst_23:
// rs1==f17, rs2==f8, rd==f4,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f17; op2:f8; dest:f4; op1val:0x0; op2val:0x249249; 
   valaddr_reg:x3; val_offset:46*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f4, f17, f8, dyn, 0, 0, x3, 46*FLEN/8, x4, x1, x2)

inst_24:
// rs1==f9, rs2==f15, rd==f30,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f9; op2:f15; dest:f30; op1val:0x0; op2val:0x333333; 
   valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f30, f9, f15, dyn, 0, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_25:
// rs1==f10, rs2==f1, rd==f6,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f10; op2:f1; dest:f6; op1val:0x0; op2val:0x36db6d; 
   valaddr_reg:x3; val_offset:50*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f6, f10, f1, dyn, 0, 0, x3, 50*FLEN/8, x4, x1, x2)

inst_26:
// rs1==f3, rs2==f6, rd==f22,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f3; op2:f6; dest:f22; op1val:0x0; op2val:0x3bbbbb; 
   valaddr_reg:x3; val_offset:52*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f22, f3, f6, dyn, 0, 0, x3, 52*FLEN/8, x4, x1, x2)

inst_27:
// rs1==f28, rs2==f31, rd==f14,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f28; op2:f31; dest:f14; op1val:0x0; op2val:0x3fffff; 
   valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f14, f28, f31, dyn, 0, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_28:
// rs1==f27, rs2==f23, rd==f0,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f27; op2:f23; dest:f0; op1val:0x0; op2val:0x400000; 
   valaddr_reg:x3; val_offset:56*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f0, f27, f23, dyn, 0, 0, x3, 56*FLEN/8, x4, x1, x2)

inst_29:
// rs1==f18, rs2==f25, rd==f16,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f18; op2:f25; dest:f16; op1val:0x0; op2val:0x444444; 
   valaddr_reg:x3; val_offset:58*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f16, f18, f25, dyn, 0, 0, x3, 58*FLEN/8, x4, x1, x2)

inst_30:
// rs1==f25, rs2==f3, rd==f9,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f25; op2:f3; dest:f9; op1val:0x0; op2val:0x4ccccc; 
   valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f9, f25, f3, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)

inst_31:
// rs1==f14, rs2==f26, rd==f3,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f14; op2:f26; dest:f3; op1val:0x0; op2val:0x5b6db6; 
   valaddr_reg:x3; val_offset:62*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f3, f14, f26, dyn, 0, 0, x3, 62*FLEN/8, x4, x1, x2)

inst_32:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x600000; 
   valaddr_reg:x3; val_offset:64*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 64*FLEN/8, x4, x1, x2)

inst_33:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x666666; 
   valaddr_reg:x3; val_offset:66*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 66*FLEN/8, x4, x1, x2)

inst_34:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6db6db; 
   valaddr_reg:x3; val_offset:68*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 68*FLEN/8, x4, x1, x2)

inst_35:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x700000; 
   valaddr_reg:x3; val_offset:70*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 70*FLEN/8, x4, x1, x2)

inst_36:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x780000; 
   valaddr_reg:x3; val_offset:72*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 72*FLEN/8, x4, x1, x2)

inst_37:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x7c0000; 
   valaddr_reg:x3; val_offset:74*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 74*FLEN/8, x4, x1, x2)

inst_38:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x7e0000; 
   valaddr_reg:x3; val_offset:76*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 76*FLEN/8, x4, x1, x2)

inst_39:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x7f0000; 
   valaddr_reg:x3; val_offset:78*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 78*FLEN/8, x4, x1, x2)

inst_40:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x7f8000; 
   valaddr_reg:x3; val_offset:80*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 80*FLEN/8, x4, x1, x2)

inst_41:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x7fc000; 
   valaddr_reg:x3; val_offset:82*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 82*FLEN/8, x4, x1, x2)

inst_42:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x7fe000; 
   valaddr_reg:x3; val_offset:84*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 84*FLEN/8, x4, x1, x2)

inst_43:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x7ff000; 
   valaddr_reg:x3; val_offset:86*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 86*FLEN/8, x4, x1, x2)

inst_44:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x7ff800; 
   valaddr_reg:x3; val_offset:88*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 88*FLEN/8, x4, x1, x2)

inst_45:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x7ffc00; 
   valaddr_reg:x3; val_offset:90*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 90*FLEN/8, x4, x1, x2)

inst_46:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x7ffe00; 
   valaddr_reg:x3; val_offset:92*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 92*FLEN/8, x4, x1, x2)

inst_47:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x7fff00; 
   valaddr_reg:x3; val_offset:94*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 94*FLEN/8, x4, x1, x2)

inst_48:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x7fff80; 
   valaddr_reg:x3; val_offset:96*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 96*FLEN/8, x4, x1, x2)

inst_49:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x7fffc0; 
   valaddr_reg:x3; val_offset:98*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 98*FLEN/8, x4, x1, x2)

inst_50:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x7fffe0; 
   valaddr_reg:x3; val_offset:100*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 100*FLEN/8, x4, x1, x2)

inst_51:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x7ffff0; 
   valaddr_reg:x3; val_offset:102*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 102*FLEN/8, x4, x1, x2)

inst_52:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x7ffff8; 
   valaddr_reg:x3; val_offset:104*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 104*FLEN/8, x4, x1, x2)

inst_53:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x7ffffc; 
   valaddr_reg:x3; val_offset:106*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 106*FLEN/8, x4, x1, x2)

inst_54:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x7ffffe; 
   valaddr_reg:x3; val_offset:108*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 108*FLEN/8, x4, x1, x2)

inst_55:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:110*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 110*FLEN/8, x4, x1, x2)

inst_56:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x800000; 
   valaddr_reg:x3; val_offset:112*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 112*FLEN/8, x4, x1, x2)

inst_57:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x800001; 
   valaddr_reg:x3; val_offset:114*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 114*FLEN/8, x4, x1, x2)

inst_58:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x800003; 
   valaddr_reg:x3; val_offset:116*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 116*FLEN/8, x4, x1, x2)

inst_59:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x800007; 
   valaddr_reg:x3; val_offset:118*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 118*FLEN/8, x4, x1, x2)

inst_60:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x80000f; 
   valaddr_reg:x3; val_offset:120*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 120*FLEN/8, x4, x1, x2)

inst_61:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x80001f; 
   valaddr_reg:x3; val_offset:122*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 122*FLEN/8, x4, x1, x2)

inst_62:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x80003f; 
   valaddr_reg:x3; val_offset:124*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 124*FLEN/8, x4, x1, x2)

inst_63:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x80007f; 
   valaddr_reg:x3; val_offset:126*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 126*FLEN/8, x4, x1, x2)

inst_64:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x8000ff; 
   valaddr_reg:x3; val_offset:128*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 128*FLEN/8, x4, x1, x2)

inst_65:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x8001ff; 
   valaddr_reg:x3; val_offset:130*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 130*FLEN/8, x4, x1, x2)

inst_66:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x8003ff; 
   valaddr_reg:x3; val_offset:132*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 132*FLEN/8, x4, x1, x2)

inst_67:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x8007ff; 
   valaddr_reg:x3; val_offset:134*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 134*FLEN/8, x4, x1, x2)

inst_68:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x800fff; 
   valaddr_reg:x3; val_offset:136*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 136*FLEN/8, x4, x1, x2)

inst_69:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x801fff; 
   valaddr_reg:x3; val_offset:138*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 138*FLEN/8, x4, x1, x2)

inst_70:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x803fff; 
   valaddr_reg:x3; val_offset:140*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 140*FLEN/8, x4, x1, x2)

inst_71:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x807fff; 
   valaddr_reg:x3; val_offset:142*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 142*FLEN/8, x4, x1, x2)

inst_72:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x80ffff; 
   valaddr_reg:x3; val_offset:144*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 144*FLEN/8, x4, x1, x2)

inst_73:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x81ffff; 
   valaddr_reg:x3; val_offset:146*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 146*FLEN/8, x4, x1, x2)

inst_74:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x83ffff; 
   valaddr_reg:x3; val_offset:148*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 148*FLEN/8, x4, x1, x2)

inst_75:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x87ffff; 
   valaddr_reg:x3; val_offset:150*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 150*FLEN/8, x4, x1, x2)

inst_76:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x8fffff; 
   valaddr_reg:x3; val_offset:152*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 152*FLEN/8, x4, x1, x2)

inst_77:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x9fffff; 
   valaddr_reg:x3; val_offset:154*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 154*FLEN/8, x4, x1, x2)

inst_78:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0xbfffff; 
   valaddr_reg:x3; val_offset:156*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 156*FLEN/8, x4, x1, x2)

inst_79:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0xc00000; 
   valaddr_reg:x3; val_offset:158*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 158*FLEN/8, x4, x1, x2)

inst_80:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0xe00000; 
   valaddr_reg:x3; val_offset:160*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 160*FLEN/8, x4, x1, x2)

inst_81:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0xf00000; 
   valaddr_reg:x3; val_offset:162*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 162*FLEN/8, x4, x1, x2)

inst_82:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0xf80000; 
   valaddr_reg:x3; val_offset:164*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 164*FLEN/8, x4, x1, x2)

inst_83:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0xfc0000; 
   valaddr_reg:x3; val_offset:166*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 166*FLEN/8, x4, x1, x2)

inst_84:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0xfe0000; 
   valaddr_reg:x3; val_offset:168*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 168*FLEN/8, x4, x1, x2)

inst_85:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0xff0000; 
   valaddr_reg:x3; val_offset:170*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 170*FLEN/8, x4, x1, x2)

inst_86:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0xff8000; 
   valaddr_reg:x3; val_offset:172*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 172*FLEN/8, x4, x1, x2)

inst_87:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0xffc000; 
   valaddr_reg:x3; val_offset:174*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 174*FLEN/8, x4, x1, x2)

inst_88:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0xffe000; 
   valaddr_reg:x3; val_offset:176*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 176*FLEN/8, x4, x1, x2)

inst_89:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0xfff000; 
   valaddr_reg:x3; val_offset:178*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 178*FLEN/8, x4, x1, x2)

inst_90:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0xfff800; 
   valaddr_reg:x3; val_offset:180*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 180*FLEN/8, x4, x1, x2)

inst_91:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0xfffc00; 
   valaddr_reg:x3; val_offset:182*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 182*FLEN/8, x4, x1, x2)

inst_92:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0xfffe00; 
   valaddr_reg:x3; val_offset:184*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 184*FLEN/8, x4, x1, x2)

inst_93:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0xffff00; 
   valaddr_reg:x3; val_offset:186*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 186*FLEN/8, x4, x1, x2)

inst_94:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0xffff80; 
   valaddr_reg:x3; val_offset:188*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 188*FLEN/8, x4, x1, x2)

inst_95:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0xffffc0; 
   valaddr_reg:x3; val_offset:190*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 190*FLEN/8, x4, x1, x2)

inst_96:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0xffffe0; 
   valaddr_reg:x3; val_offset:192*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 192*FLEN/8, x4, x1, x2)

inst_97:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0xfffff0; 
   valaddr_reg:x3; val_offset:194*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 194*FLEN/8, x4, x1, x2)

inst_98:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0xfffff8; 
   valaddr_reg:x3; val_offset:196*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 196*FLEN/8, x4, x1, x2)

inst_99:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0xfffffc; 
   valaddr_reg:x3; val_offset:198*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 198*FLEN/8, x4, x1, x2)

inst_100:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0xfffffe; 
   valaddr_reg:x3; val_offset:200*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 200*FLEN/8, x4, x1, x2)

inst_101:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0xffffff; 
   valaddr_reg:x3; val_offset:202*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 202*FLEN/8, x4, x1, x2)

inst_102:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1000000; 
   valaddr_reg:x3; val_offset:204*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 204*FLEN/8, x4, x1, x2)

inst_103:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1000001; 
   valaddr_reg:x3; val_offset:206*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 206*FLEN/8, x4, x1, x2)

inst_104:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1000003; 
   valaddr_reg:x3; val_offset:208*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 208*FLEN/8, x4, x1, x2)

inst_105:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1000007; 
   valaddr_reg:x3; val_offset:210*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 210*FLEN/8, x4, x1, x2)

inst_106:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x100000f; 
   valaddr_reg:x3; val_offset:212*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 212*FLEN/8, x4, x1, x2)

inst_107:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x100001f; 
   valaddr_reg:x3; val_offset:214*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 214*FLEN/8, x4, x1, x2)

inst_108:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x100003f; 
   valaddr_reg:x3; val_offset:216*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 216*FLEN/8, x4, x1, x2)

inst_109:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x100007f; 
   valaddr_reg:x3; val_offset:218*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 218*FLEN/8, x4, x1, x2)

inst_110:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x10000ff; 
   valaddr_reg:x3; val_offset:220*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 220*FLEN/8, x4, x1, x2)

inst_111:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x10001ff; 
   valaddr_reg:x3; val_offset:222*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 222*FLEN/8, x4, x1, x2)

inst_112:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x10003ff; 
   valaddr_reg:x3; val_offset:224*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 224*FLEN/8, x4, x1, x2)

inst_113:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x10007ff; 
   valaddr_reg:x3; val_offset:226*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 226*FLEN/8, x4, x1, x2)

inst_114:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1000fff; 
   valaddr_reg:x3; val_offset:228*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 228*FLEN/8, x4, x1, x2)

inst_115:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1001fff; 
   valaddr_reg:x3; val_offset:230*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 230*FLEN/8, x4, x1, x2)

inst_116:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1003fff; 
   valaddr_reg:x3; val_offset:232*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 232*FLEN/8, x4, x1, x2)

inst_117:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1007fff; 
   valaddr_reg:x3; val_offset:234*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 234*FLEN/8, x4, x1, x2)

inst_118:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x100ffff; 
   valaddr_reg:x3; val_offset:236*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 236*FLEN/8, x4, x1, x2)

inst_119:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x101ffff; 
   valaddr_reg:x3; val_offset:238*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 238*FLEN/8, x4, x1, x2)

inst_120:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x103ffff; 
   valaddr_reg:x3; val_offset:240*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 240*FLEN/8, x4, x1, x2)

inst_121:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x107ffff; 
   valaddr_reg:x3; val_offset:242*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 242*FLEN/8, x4, x1, x2)

inst_122:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x10fffff; 
   valaddr_reg:x3; val_offset:244*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 244*FLEN/8, x4, x1, x2)

inst_123:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x11fffff; 
   valaddr_reg:x3; val_offset:246*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 246*FLEN/8, x4, x1, x2)

inst_124:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x13fffff; 
   valaddr_reg:x3; val_offset:248*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 248*FLEN/8, x4, x1, x2)

inst_125:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1400000; 
   valaddr_reg:x3; val_offset:250*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 250*FLEN/8, x4, x1, x2)

inst_126:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1600000; 
   valaddr_reg:x3; val_offset:252*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 252*FLEN/8, x4, x1, x2)

inst_127:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1700000; 
   valaddr_reg:x3; val_offset:254*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 254*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_128:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1780000; 
   valaddr_reg:x3; val_offset:256*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 256*FLEN/8, x4, x1, x2)

inst_129:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x17c0000; 
   valaddr_reg:x3; val_offset:258*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 258*FLEN/8, x4, x1, x2)

inst_130:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x17e0000; 
   valaddr_reg:x3; val_offset:260*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 260*FLEN/8, x4, x1, x2)

inst_131:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x17f0000; 
   valaddr_reg:x3; val_offset:262*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 262*FLEN/8, x4, x1, x2)

inst_132:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x17f8000; 
   valaddr_reg:x3; val_offset:264*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 264*FLEN/8, x4, x1, x2)

inst_133:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x17fc000; 
   valaddr_reg:x3; val_offset:266*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 266*FLEN/8, x4, x1, x2)

inst_134:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x17fe000; 
   valaddr_reg:x3; val_offset:268*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 268*FLEN/8, x4, x1, x2)

inst_135:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x17ff000; 
   valaddr_reg:x3; val_offset:270*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 270*FLEN/8, x4, x1, x2)

inst_136:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x17ff800; 
   valaddr_reg:x3; val_offset:272*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 272*FLEN/8, x4, x1, x2)

inst_137:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x17ffc00; 
   valaddr_reg:x3; val_offset:274*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 274*FLEN/8, x4, x1, x2)

inst_138:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x17ffe00; 
   valaddr_reg:x3; val_offset:276*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 276*FLEN/8, x4, x1, x2)

inst_139:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x17fff00; 
   valaddr_reg:x3; val_offset:278*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 278*FLEN/8, x4, x1, x2)

inst_140:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x17fff80; 
   valaddr_reg:x3; val_offset:280*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 280*FLEN/8, x4, x1, x2)

inst_141:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x17fffc0; 
   valaddr_reg:x3; val_offset:282*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 282*FLEN/8, x4, x1, x2)

inst_142:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x17fffe0; 
   valaddr_reg:x3; val_offset:284*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 284*FLEN/8, x4, x1, x2)

inst_143:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x17ffff0; 
   valaddr_reg:x3; val_offset:286*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 286*FLEN/8, x4, x1, x2)

inst_144:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x17ffff8; 
   valaddr_reg:x3; val_offset:288*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 288*FLEN/8, x4, x1, x2)

inst_145:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x17ffffc; 
   valaddr_reg:x3; val_offset:290*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 290*FLEN/8, x4, x1, x2)

inst_146:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x17ffffe; 
   valaddr_reg:x3; val_offset:292*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 292*FLEN/8, x4, x1, x2)

inst_147:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x17fffff; 
   valaddr_reg:x3; val_offset:294*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 294*FLEN/8, x4, x1, x2)

inst_148:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1800000; 
   valaddr_reg:x3; val_offset:296*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 296*FLEN/8, x4, x1, x2)

inst_149:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1800001; 
   valaddr_reg:x3; val_offset:298*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 298*FLEN/8, x4, x1, x2)

inst_150:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1800003; 
   valaddr_reg:x3; val_offset:300*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 300*FLEN/8, x4, x1, x2)

inst_151:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1800007; 
   valaddr_reg:x3; val_offset:302*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 302*FLEN/8, x4, x1, x2)

inst_152:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x180000f; 
   valaddr_reg:x3; val_offset:304*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 304*FLEN/8, x4, x1, x2)

inst_153:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x180001f; 
   valaddr_reg:x3; val_offset:306*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 306*FLEN/8, x4, x1, x2)

inst_154:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x180003f; 
   valaddr_reg:x3; val_offset:308*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 308*FLEN/8, x4, x1, x2)

inst_155:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x180007f; 
   valaddr_reg:x3; val_offset:310*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 310*FLEN/8, x4, x1, x2)

inst_156:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x18000ff; 
   valaddr_reg:x3; val_offset:312*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 312*FLEN/8, x4, x1, x2)

inst_157:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x18001ff; 
   valaddr_reg:x3; val_offset:314*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 314*FLEN/8, x4, x1, x2)

inst_158:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x18003ff; 
   valaddr_reg:x3; val_offset:316*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 316*FLEN/8, x4, x1, x2)

inst_159:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x18007ff; 
   valaddr_reg:x3; val_offset:318*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 318*FLEN/8, x4, x1, x2)

inst_160:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1800fff; 
   valaddr_reg:x3; val_offset:320*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 320*FLEN/8, x4, x1, x2)

inst_161:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1801fff; 
   valaddr_reg:x3; val_offset:322*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 322*FLEN/8, x4, x1, x2)

inst_162:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1803fff; 
   valaddr_reg:x3; val_offset:324*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 324*FLEN/8, x4, x1, x2)

inst_163:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1807fff; 
   valaddr_reg:x3; val_offset:326*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 326*FLEN/8, x4, x1, x2)

inst_164:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x180ffff; 
   valaddr_reg:x3; val_offset:328*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 328*FLEN/8, x4, x1, x2)

inst_165:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x181ffff; 
   valaddr_reg:x3; val_offset:330*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 330*FLEN/8, x4, x1, x2)

inst_166:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x183ffff; 
   valaddr_reg:x3; val_offset:332*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 332*FLEN/8, x4, x1, x2)

inst_167:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x187ffff; 
   valaddr_reg:x3; val_offset:334*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 334*FLEN/8, x4, x1, x2)

inst_168:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x18fffff; 
   valaddr_reg:x3; val_offset:336*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 336*FLEN/8, x4, x1, x2)

inst_169:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x19fffff; 
   valaddr_reg:x3; val_offset:338*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 338*FLEN/8, x4, x1, x2)

inst_170:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1bfffff; 
   valaddr_reg:x3; val_offset:340*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 340*FLEN/8, x4, x1, x2)

inst_171:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1c00000; 
   valaddr_reg:x3; val_offset:342*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 342*FLEN/8, x4, x1, x2)

inst_172:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1e00000; 
   valaddr_reg:x3; val_offset:344*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 344*FLEN/8, x4, x1, x2)

inst_173:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1f00000; 
   valaddr_reg:x3; val_offset:346*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 346*FLEN/8, x4, x1, x2)

inst_174:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1f80000; 
   valaddr_reg:x3; val_offset:348*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 348*FLEN/8, x4, x1, x2)

inst_175:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1fc0000; 
   valaddr_reg:x3; val_offset:350*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 350*FLEN/8, x4, x1, x2)

inst_176:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1fe0000; 
   valaddr_reg:x3; val_offset:352*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 352*FLEN/8, x4, x1, x2)

inst_177:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1ff0000; 
   valaddr_reg:x3; val_offset:354*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 354*FLEN/8, x4, x1, x2)

inst_178:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1ff8000; 
   valaddr_reg:x3; val_offset:356*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 356*FLEN/8, x4, x1, x2)

inst_179:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1ffc000; 
   valaddr_reg:x3; val_offset:358*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 358*FLEN/8, x4, x1, x2)

inst_180:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1ffe000; 
   valaddr_reg:x3; val_offset:360*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 360*FLEN/8, x4, x1, x2)

inst_181:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1fff000; 
   valaddr_reg:x3; val_offset:362*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 362*FLEN/8, x4, x1, x2)

inst_182:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1fff800; 
   valaddr_reg:x3; val_offset:364*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 364*FLEN/8, x4, x1, x2)

inst_183:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1fffc00; 
   valaddr_reg:x3; val_offset:366*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 366*FLEN/8, x4, x1, x2)

inst_184:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1fffe00; 
   valaddr_reg:x3; val_offset:368*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 368*FLEN/8, x4, x1, x2)

inst_185:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1ffff00; 
   valaddr_reg:x3; val_offset:370*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 370*FLEN/8, x4, x1, x2)

inst_186:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1ffff80; 
   valaddr_reg:x3; val_offset:372*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 372*FLEN/8, x4, x1, x2)

inst_187:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1ffffc0; 
   valaddr_reg:x3; val_offset:374*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 374*FLEN/8, x4, x1, x2)

inst_188:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1ffffe0; 
   valaddr_reg:x3; val_offset:376*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 376*FLEN/8, x4, x1, x2)

inst_189:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1fffff0; 
   valaddr_reg:x3; val_offset:378*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 378*FLEN/8, x4, x1, x2)

inst_190:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1fffff8; 
   valaddr_reg:x3; val_offset:380*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 380*FLEN/8, x4, x1, x2)

inst_191:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1fffffc; 
   valaddr_reg:x3; val_offset:382*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 382*FLEN/8, x4, x1, x2)

inst_192:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1fffffe; 
   valaddr_reg:x3; val_offset:384*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 384*FLEN/8, x4, x1, x2)

inst_193:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1ffffff; 
   valaddr_reg:x3; val_offset:386*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 386*FLEN/8, x4, x1, x2)

inst_194:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e000000; 
   valaddr_reg:x3; val_offset:388*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 388*FLEN/8, x4, x1, x2)

inst_195:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e000001; 
   valaddr_reg:x3; val_offset:390*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 390*FLEN/8, x4, x1, x2)

inst_196:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e000003; 
   valaddr_reg:x3; val_offset:392*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 392*FLEN/8, x4, x1, x2)

inst_197:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e000007; 
   valaddr_reg:x3; val_offset:394*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 394*FLEN/8, x4, x1, x2)

inst_198:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e00000f; 
   valaddr_reg:x3; val_offset:396*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 396*FLEN/8, x4, x1, x2)

inst_199:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e00001f; 
   valaddr_reg:x3; val_offset:398*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 398*FLEN/8, x4, x1, x2)

inst_200:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e00003f; 
   valaddr_reg:x3; val_offset:400*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 400*FLEN/8, x4, x1, x2)

inst_201:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e00007f; 
   valaddr_reg:x3; val_offset:402*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 402*FLEN/8, x4, x1, x2)

inst_202:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e0000ff; 
   valaddr_reg:x3; val_offset:404*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 404*FLEN/8, x4, x1, x2)

inst_203:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e0001ff; 
   valaddr_reg:x3; val_offset:406*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 406*FLEN/8, x4, x1, x2)

inst_204:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e0003ff; 
   valaddr_reg:x3; val_offset:408*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 408*FLEN/8, x4, x1, x2)

inst_205:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e0007ff; 
   valaddr_reg:x3; val_offset:410*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 410*FLEN/8, x4, x1, x2)

inst_206:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e000fff; 
   valaddr_reg:x3; val_offset:412*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 412*FLEN/8, x4, x1, x2)

inst_207:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e001fff; 
   valaddr_reg:x3; val_offset:414*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 414*FLEN/8, x4, x1, x2)

inst_208:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e003fff; 
   valaddr_reg:x3; val_offset:416*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 416*FLEN/8, x4, x1, x2)

inst_209:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e007fff; 
   valaddr_reg:x3; val_offset:418*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 418*FLEN/8, x4, x1, x2)

inst_210:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e00ffff; 
   valaddr_reg:x3; val_offset:420*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 420*FLEN/8, x4, x1, x2)

inst_211:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e01ffff; 
   valaddr_reg:x3; val_offset:422*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 422*FLEN/8, x4, x1, x2)

inst_212:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e03ffff; 
   valaddr_reg:x3; val_offset:424*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 424*FLEN/8, x4, x1, x2)

inst_213:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e07ffff; 
   valaddr_reg:x3; val_offset:426*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 426*FLEN/8, x4, x1, x2)

inst_214:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e0fffff; 
   valaddr_reg:x3; val_offset:428*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 428*FLEN/8, x4, x1, x2)

inst_215:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e1fffff; 
   valaddr_reg:x3; val_offset:430*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 430*FLEN/8, x4, x1, x2)

inst_216:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e3fffff; 
   valaddr_reg:x3; val_offset:432*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 432*FLEN/8, x4, x1, x2)

inst_217:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e400000; 
   valaddr_reg:x3; val_offset:434*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 434*FLEN/8, x4, x1, x2)

inst_218:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e600000; 
   valaddr_reg:x3; val_offset:436*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 436*FLEN/8, x4, x1, x2)

inst_219:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e700000; 
   valaddr_reg:x3; val_offset:438*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 438*FLEN/8, x4, x1, x2)

inst_220:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e780000; 
   valaddr_reg:x3; val_offset:440*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 440*FLEN/8, x4, x1, x2)

inst_221:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e7c0000; 
   valaddr_reg:x3; val_offset:442*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 442*FLEN/8, x4, x1, x2)

inst_222:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e7e0000; 
   valaddr_reg:x3; val_offset:444*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 444*FLEN/8, x4, x1, x2)

inst_223:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e7f0000; 
   valaddr_reg:x3; val_offset:446*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 446*FLEN/8, x4, x1, x2)

inst_224:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e7f8000; 
   valaddr_reg:x3; val_offset:448*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 448*FLEN/8, x4, x1, x2)

inst_225:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e7fc000; 
   valaddr_reg:x3; val_offset:450*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 450*FLEN/8, x4, x1, x2)

inst_226:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e7fe000; 
   valaddr_reg:x3; val_offset:452*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 452*FLEN/8, x4, x1, x2)

inst_227:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e7ff000; 
   valaddr_reg:x3; val_offset:454*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 454*FLEN/8, x4, x1, x2)

inst_228:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e7ff800; 
   valaddr_reg:x3; val_offset:456*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 456*FLEN/8, x4, x1, x2)

inst_229:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e7ffc00; 
   valaddr_reg:x3; val_offset:458*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 458*FLEN/8, x4, x1, x2)

inst_230:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e7ffe00; 
   valaddr_reg:x3; val_offset:460*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 460*FLEN/8, x4, x1, x2)

inst_231:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e7fff00; 
   valaddr_reg:x3; val_offset:462*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 462*FLEN/8, x4, x1, x2)

inst_232:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e7fff80; 
   valaddr_reg:x3; val_offset:464*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 464*FLEN/8, x4, x1, x2)

inst_233:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e7fffc0; 
   valaddr_reg:x3; val_offset:466*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 466*FLEN/8, x4, x1, x2)

inst_234:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e7fffe0; 
   valaddr_reg:x3; val_offset:468*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 468*FLEN/8, x4, x1, x2)

inst_235:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e7ffff0; 
   valaddr_reg:x3; val_offset:470*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 470*FLEN/8, x4, x1, x2)

inst_236:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e7ffff8; 
   valaddr_reg:x3; val_offset:472*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 472*FLEN/8, x4, x1, x2)

inst_237:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e7ffffc; 
   valaddr_reg:x3; val_offset:474*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 474*FLEN/8, x4, x1, x2)

inst_238:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e7ffffe; 
   valaddr_reg:x3; val_offset:476*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 476*FLEN/8, x4, x1, x2)

inst_239:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xdc and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x6e7fffff; 
   valaddr_reg:x3; val_offset:478*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 478*FLEN/8, x4, x1, x2)

inst_240:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x0; 
   valaddr_reg:x3; val_offset:480*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 480*FLEN/8, x4, x1, x2)

inst_241:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1; 
   valaddr_reg:x3; val_offset:482*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 482*FLEN/8, x4, x1, x2)

inst_242:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x3; 
   valaddr_reg:x3; val_offset:484*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 484*FLEN/8, x4, x1, x2)

inst_243:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x7; 
   valaddr_reg:x3; val_offset:486*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 486*FLEN/8, x4, x1, x2)

inst_244:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xf; 
   valaddr_reg:x3; val_offset:488*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 488*FLEN/8, x4, x1, x2)

inst_245:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1f; 
   valaddr_reg:x3; val_offset:490*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 490*FLEN/8, x4, x1, x2)

inst_246:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x3f; 
   valaddr_reg:x3; val_offset:492*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 492*FLEN/8, x4, x1, x2)

inst_247:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x7f; 
   valaddr_reg:x3; val_offset:494*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 494*FLEN/8, x4, x1, x2)

inst_248:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xff; 
   valaddr_reg:x3; val_offset:496*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 496*FLEN/8, x4, x1, x2)

inst_249:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1ff; 
   valaddr_reg:x3; val_offset:498*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 498*FLEN/8, x4, x1, x2)

inst_250:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x3ff; 
   valaddr_reg:x3; val_offset:500*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 500*FLEN/8, x4, x1, x2)

inst_251:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x7ff; 
   valaddr_reg:x3; val_offset:502*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 502*FLEN/8, x4, x1, x2)

inst_252:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xfff; 
   valaddr_reg:x3; val_offset:504*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 504*FLEN/8, x4, x1, x2)

inst_253:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1fff; 
   valaddr_reg:x3; val_offset:506*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 506*FLEN/8, x4, x1, x2)

inst_254:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x3fff; 
   valaddr_reg:x3; val_offset:508*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 508*FLEN/8, x4, x1, x2)

inst_255:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x7fff; 
   valaddr_reg:x3; val_offset:510*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 510*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_256:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xffff; 
   valaddr_reg:x3; val_offset:512*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 512*FLEN/8, x4, x1, x2)

inst_257:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1ffff; 
   valaddr_reg:x3; val_offset:514*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 514*FLEN/8, x4, x1, x2)

inst_258:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x3ffff; 
   valaddr_reg:x3; val_offset:516*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 516*FLEN/8, x4, x1, x2)

inst_259:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x7ffff; 
   valaddr_reg:x3; val_offset:518*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 518*FLEN/8, x4, x1, x2)

inst_260:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xfffff; 
   valaddr_reg:x3; val_offset:520*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 520*FLEN/8, x4, x1, x2)

inst_261:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x199999; 
   valaddr_reg:x3; val_offset:522*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 522*FLEN/8, x4, x1, x2)

inst_262:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1fffff; 
   valaddr_reg:x3; val_offset:524*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 524*FLEN/8, x4, x1, x2)

inst_263:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x249249; 
   valaddr_reg:x3; val_offset:526*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 526*FLEN/8, x4, x1, x2)

inst_264:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x333333; 
   valaddr_reg:x3; val_offset:528*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 528*FLEN/8, x4, x1, x2)

inst_265:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x36db6d; 
   valaddr_reg:x3; val_offset:530*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 530*FLEN/8, x4, x1, x2)

inst_266:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x3bbbbb; 
   valaddr_reg:x3; val_offset:532*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 532*FLEN/8, x4, x1, x2)

inst_267:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x3fffff; 
   valaddr_reg:x3; val_offset:534*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 534*FLEN/8, x4, x1, x2)

inst_268:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x400000; 
   valaddr_reg:x3; val_offset:536*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 536*FLEN/8, x4, x1, x2)

inst_269:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x444444; 
   valaddr_reg:x3; val_offset:538*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 538*FLEN/8, x4, x1, x2)

inst_270:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x4ccccc; 
   valaddr_reg:x3; val_offset:540*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 540*FLEN/8, x4, x1, x2)

inst_271:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x5b6db6; 
   valaddr_reg:x3; val_offset:542*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 542*FLEN/8, x4, x1, x2)

inst_272:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x600000; 
   valaddr_reg:x3; val_offset:544*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 544*FLEN/8, x4, x1, x2)

inst_273:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x666666; 
   valaddr_reg:x3; val_offset:546*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 546*FLEN/8, x4, x1, x2)

inst_274:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x6db6db; 
   valaddr_reg:x3; val_offset:548*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 548*FLEN/8, x4, x1, x2)

inst_275:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x700000; 
   valaddr_reg:x3; val_offset:550*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 550*FLEN/8, x4, x1, x2)

inst_276:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x780000; 
   valaddr_reg:x3; val_offset:552*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 552*FLEN/8, x4, x1, x2)

inst_277:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x7c0000; 
   valaddr_reg:x3; val_offset:554*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 554*FLEN/8, x4, x1, x2)

inst_278:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x7e0000; 
   valaddr_reg:x3; val_offset:556*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 556*FLEN/8, x4, x1, x2)

inst_279:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x7f0000; 
   valaddr_reg:x3; val_offset:558*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 558*FLEN/8, x4, x1, x2)

inst_280:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x7f8000; 
   valaddr_reg:x3; val_offset:560*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 560*FLEN/8, x4, x1, x2)

inst_281:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x7fc000; 
   valaddr_reg:x3; val_offset:562*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 562*FLEN/8, x4, x1, x2)

inst_282:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x7fe000; 
   valaddr_reg:x3; val_offset:564*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 564*FLEN/8, x4, x1, x2)

inst_283:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x7ff000; 
   valaddr_reg:x3; val_offset:566*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 566*FLEN/8, x4, x1, x2)

inst_284:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x7ff800; 
   valaddr_reg:x3; val_offset:568*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 568*FLEN/8, x4, x1, x2)

inst_285:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x7ffc00; 
   valaddr_reg:x3; val_offset:570*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 570*FLEN/8, x4, x1, x2)

inst_286:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x7ffe00; 
   valaddr_reg:x3; val_offset:572*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 572*FLEN/8, x4, x1, x2)

inst_287:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x7fff00; 
   valaddr_reg:x3; val_offset:574*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 574*FLEN/8, x4, x1, x2)

inst_288:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x7fff80; 
   valaddr_reg:x3; val_offset:576*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 576*FLEN/8, x4, x1, x2)

inst_289:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x7fffc0; 
   valaddr_reg:x3; val_offset:578*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 578*FLEN/8, x4, x1, x2)

inst_290:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x7fffe0; 
   valaddr_reg:x3; val_offset:580*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 580*FLEN/8, x4, x1, x2)

inst_291:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x7ffff0; 
   valaddr_reg:x3; val_offset:582*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 582*FLEN/8, x4, x1, x2)

inst_292:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x7ffff8; 
   valaddr_reg:x3; val_offset:584*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 584*FLEN/8, x4, x1, x2)

inst_293:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x7ffffc; 
   valaddr_reg:x3; val_offset:586*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 586*FLEN/8, x4, x1, x2)

inst_294:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x7ffffe; 
   valaddr_reg:x3; val_offset:588*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 588*FLEN/8, x4, x1, x2)

inst_295:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:590*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 590*FLEN/8, x4, x1, x2)

inst_296:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x800000; 
   valaddr_reg:x3; val_offset:592*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 592*FLEN/8, x4, x1, x2)

inst_297:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x800001; 
   valaddr_reg:x3; val_offset:594*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 594*FLEN/8, x4, x1, x2)

inst_298:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x800003; 
   valaddr_reg:x3; val_offset:596*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 596*FLEN/8, x4, x1, x2)

inst_299:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x800007; 
   valaddr_reg:x3; val_offset:598*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 598*FLEN/8, x4, x1, x2)

inst_300:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x80000f; 
   valaddr_reg:x3; val_offset:600*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 600*FLEN/8, x4, x1, x2)

inst_301:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x80001f; 
   valaddr_reg:x3; val_offset:602*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 602*FLEN/8, x4, x1, x2)

inst_302:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x80003f; 
   valaddr_reg:x3; val_offset:604*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 604*FLEN/8, x4, x1, x2)

inst_303:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x80007f; 
   valaddr_reg:x3; val_offset:606*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 606*FLEN/8, x4, x1, x2)

inst_304:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x8000ff; 
   valaddr_reg:x3; val_offset:608*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 608*FLEN/8, x4, x1, x2)

inst_305:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x8001ff; 
   valaddr_reg:x3; val_offset:610*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 610*FLEN/8, x4, x1, x2)

inst_306:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x8003ff; 
   valaddr_reg:x3; val_offset:612*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 612*FLEN/8, x4, x1, x2)

inst_307:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x8007ff; 
   valaddr_reg:x3; val_offset:614*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 614*FLEN/8, x4, x1, x2)

inst_308:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x800fff; 
   valaddr_reg:x3; val_offset:616*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 616*FLEN/8, x4, x1, x2)

inst_309:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x801fff; 
   valaddr_reg:x3; val_offset:618*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 618*FLEN/8, x4, x1, x2)

inst_310:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x803fff; 
   valaddr_reg:x3; val_offset:620*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 620*FLEN/8, x4, x1, x2)

inst_311:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x807fff; 
   valaddr_reg:x3; val_offset:622*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 622*FLEN/8, x4, x1, x2)

inst_312:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x80ffff; 
   valaddr_reg:x3; val_offset:624*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 624*FLEN/8, x4, x1, x2)

inst_313:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x81ffff; 
   valaddr_reg:x3; val_offset:626*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 626*FLEN/8, x4, x1, x2)

inst_314:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x83ffff; 
   valaddr_reg:x3; val_offset:628*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 628*FLEN/8, x4, x1, x2)

inst_315:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x87ffff; 
   valaddr_reg:x3; val_offset:630*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 630*FLEN/8, x4, x1, x2)

inst_316:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x8fffff; 
   valaddr_reg:x3; val_offset:632*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 632*FLEN/8, x4, x1, x2)

inst_317:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x9fffff; 
   valaddr_reg:x3; val_offset:634*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 634*FLEN/8, x4, x1, x2)

inst_318:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xbfffff; 
   valaddr_reg:x3; val_offset:636*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 636*FLEN/8, x4, x1, x2)

inst_319:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xc00000; 
   valaddr_reg:x3; val_offset:638*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 638*FLEN/8, x4, x1, x2)

inst_320:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xe00000; 
   valaddr_reg:x3; val_offset:640*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 640*FLEN/8, x4, x1, x2)

inst_321:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xf00000; 
   valaddr_reg:x3; val_offset:642*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 642*FLEN/8, x4, x1, x2)

inst_322:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xf80000; 
   valaddr_reg:x3; val_offset:644*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 644*FLEN/8, x4, x1, x2)

inst_323:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xfc0000; 
   valaddr_reg:x3; val_offset:646*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 646*FLEN/8, x4, x1, x2)

inst_324:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xfe0000; 
   valaddr_reg:x3; val_offset:648*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 648*FLEN/8, x4, x1, x2)

inst_325:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xff0000; 
   valaddr_reg:x3; val_offset:650*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 650*FLEN/8, x4, x1, x2)

inst_326:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xff8000; 
   valaddr_reg:x3; val_offset:652*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 652*FLEN/8, x4, x1, x2)

inst_327:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xffc000; 
   valaddr_reg:x3; val_offset:654*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 654*FLEN/8, x4, x1, x2)

inst_328:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xffe000; 
   valaddr_reg:x3; val_offset:656*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 656*FLEN/8, x4, x1, x2)

inst_329:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xfff000; 
   valaddr_reg:x3; val_offset:658*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 658*FLEN/8, x4, x1, x2)

inst_330:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xfff800; 
   valaddr_reg:x3; val_offset:660*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 660*FLEN/8, x4, x1, x2)

inst_331:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xfffc00; 
   valaddr_reg:x3; val_offset:662*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 662*FLEN/8, x4, x1, x2)

inst_332:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xfffe00; 
   valaddr_reg:x3; val_offset:664*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 664*FLEN/8, x4, x1, x2)

inst_333:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xffff00; 
   valaddr_reg:x3; val_offset:666*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 666*FLEN/8, x4, x1, x2)

inst_334:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xffff80; 
   valaddr_reg:x3; val_offset:668*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 668*FLEN/8, x4, x1, x2)

inst_335:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xffffc0; 
   valaddr_reg:x3; val_offset:670*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 670*FLEN/8, x4, x1, x2)

inst_336:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xffffe0; 
   valaddr_reg:x3; val_offset:672*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 672*FLEN/8, x4, x1, x2)

inst_337:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xfffff0; 
   valaddr_reg:x3; val_offset:674*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 674*FLEN/8, x4, x1, x2)

inst_338:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xfffff8; 
   valaddr_reg:x3; val_offset:676*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 676*FLEN/8, x4, x1, x2)

inst_339:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xfffffc; 
   valaddr_reg:x3; val_offset:678*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 678*FLEN/8, x4, x1, x2)

inst_340:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xfffffe; 
   valaddr_reg:x3; val_offset:680*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 680*FLEN/8, x4, x1, x2)

inst_341:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xffffff; 
   valaddr_reg:x3; val_offset:682*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 682*FLEN/8, x4, x1, x2)

inst_342:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1000000; 
   valaddr_reg:x3; val_offset:684*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 684*FLEN/8, x4, x1, x2)

inst_343:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1000001; 
   valaddr_reg:x3; val_offset:686*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 686*FLEN/8, x4, x1, x2)

inst_344:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1000003; 
   valaddr_reg:x3; val_offset:688*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 688*FLEN/8, x4, x1, x2)

inst_345:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1000007; 
   valaddr_reg:x3; val_offset:690*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 690*FLEN/8, x4, x1, x2)

inst_346:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x100000f; 
   valaddr_reg:x3; val_offset:692*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 692*FLEN/8, x4, x1, x2)

inst_347:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x100001f; 
   valaddr_reg:x3; val_offset:694*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 694*FLEN/8, x4, x1, x2)

inst_348:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x100003f; 
   valaddr_reg:x3; val_offset:696*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 696*FLEN/8, x4, x1, x2)

inst_349:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x100007f; 
   valaddr_reg:x3; val_offset:698*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 698*FLEN/8, x4, x1, x2)

inst_350:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x10000ff; 
   valaddr_reg:x3; val_offset:700*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 700*FLEN/8, x4, x1, x2)

inst_351:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x10001ff; 
   valaddr_reg:x3; val_offset:702*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 702*FLEN/8, x4, x1, x2)

inst_352:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x10003ff; 
   valaddr_reg:x3; val_offset:704*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 704*FLEN/8, x4, x1, x2)

inst_353:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x10007ff; 
   valaddr_reg:x3; val_offset:706*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 706*FLEN/8, x4, x1, x2)

inst_354:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1000fff; 
   valaddr_reg:x3; val_offset:708*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 708*FLEN/8, x4, x1, x2)

inst_355:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1001fff; 
   valaddr_reg:x3; val_offset:710*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 710*FLEN/8, x4, x1, x2)

inst_356:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1003fff; 
   valaddr_reg:x3; val_offset:712*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 712*FLEN/8, x4, x1, x2)

inst_357:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1007fff; 
   valaddr_reg:x3; val_offset:714*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 714*FLEN/8, x4, x1, x2)

inst_358:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x100ffff; 
   valaddr_reg:x3; val_offset:716*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 716*FLEN/8, x4, x1, x2)

inst_359:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x101ffff; 
   valaddr_reg:x3; val_offset:718*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 718*FLEN/8, x4, x1, x2)

inst_360:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x103ffff; 
   valaddr_reg:x3; val_offset:720*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 720*FLEN/8, x4, x1, x2)

inst_361:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x107ffff; 
   valaddr_reg:x3; val_offset:722*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 722*FLEN/8, x4, x1, x2)

inst_362:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x10fffff; 
   valaddr_reg:x3; val_offset:724*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 724*FLEN/8, x4, x1, x2)

inst_363:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x11fffff; 
   valaddr_reg:x3; val_offset:726*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 726*FLEN/8, x4, x1, x2)

inst_364:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x13fffff; 
   valaddr_reg:x3; val_offset:728*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 728*FLEN/8, x4, x1, x2)

inst_365:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1400000; 
   valaddr_reg:x3; val_offset:730*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 730*FLEN/8, x4, x1, x2)

inst_366:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1600000; 
   valaddr_reg:x3; val_offset:732*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 732*FLEN/8, x4, x1, x2)

inst_367:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1700000; 
   valaddr_reg:x3; val_offset:734*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 734*FLEN/8, x4, x1, x2)

inst_368:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1780000; 
   valaddr_reg:x3; val_offset:736*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 736*FLEN/8, x4, x1, x2)

inst_369:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x17c0000; 
   valaddr_reg:x3; val_offset:738*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 738*FLEN/8, x4, x1, x2)

inst_370:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x17e0000; 
   valaddr_reg:x3; val_offset:740*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 740*FLEN/8, x4, x1, x2)

inst_371:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x17f0000; 
   valaddr_reg:x3; val_offset:742*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 742*FLEN/8, x4, x1, x2)

inst_372:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x17f8000; 
   valaddr_reg:x3; val_offset:744*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 744*FLEN/8, x4, x1, x2)

inst_373:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x17fc000; 
   valaddr_reg:x3; val_offset:746*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 746*FLEN/8, x4, x1, x2)

inst_374:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x17fe000; 
   valaddr_reg:x3; val_offset:748*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 748*FLEN/8, x4, x1, x2)

inst_375:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x17ff000; 
   valaddr_reg:x3; val_offset:750*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 750*FLEN/8, x4, x1, x2)

inst_376:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x17ff800; 
   valaddr_reg:x3; val_offset:752*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 752*FLEN/8, x4, x1, x2)

inst_377:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x17ffc00; 
   valaddr_reg:x3; val_offset:754*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 754*FLEN/8, x4, x1, x2)

inst_378:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x17ffe00; 
   valaddr_reg:x3; val_offset:756*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 756*FLEN/8, x4, x1, x2)

inst_379:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x17fff00; 
   valaddr_reg:x3; val_offset:758*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 758*FLEN/8, x4, x1, x2)

inst_380:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x17fff80; 
   valaddr_reg:x3; val_offset:760*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 760*FLEN/8, x4, x1, x2)

inst_381:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x17fffc0; 
   valaddr_reg:x3; val_offset:762*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 762*FLEN/8, x4, x1, x2)

inst_382:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x17fffe0; 
   valaddr_reg:x3; val_offset:764*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 764*FLEN/8, x4, x1, x2)

inst_383:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x17ffff0; 
   valaddr_reg:x3; val_offset:766*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 766*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_384:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x17ffff8; 
   valaddr_reg:x3; val_offset:768*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 768*FLEN/8, x4, x1, x2)

inst_385:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x17ffffc; 
   valaddr_reg:x3; val_offset:770*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 770*FLEN/8, x4, x1, x2)

inst_386:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x17ffffe; 
   valaddr_reg:x3; val_offset:772*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 772*FLEN/8, x4, x1, x2)

inst_387:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x17fffff; 
   valaddr_reg:x3; val_offset:774*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 774*FLEN/8, x4, x1, x2)

inst_388:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1800000; 
   valaddr_reg:x3; val_offset:776*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 776*FLEN/8, x4, x1, x2)

inst_389:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1800001; 
   valaddr_reg:x3; val_offset:778*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 778*FLEN/8, x4, x1, x2)

inst_390:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1800003; 
   valaddr_reg:x3; val_offset:780*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 780*FLEN/8, x4, x1, x2)

inst_391:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1800007; 
   valaddr_reg:x3; val_offset:782*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 782*FLEN/8, x4, x1, x2)

inst_392:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x180000f; 
   valaddr_reg:x3; val_offset:784*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 784*FLEN/8, x4, x1, x2)

inst_393:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x180001f; 
   valaddr_reg:x3; val_offset:786*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 786*FLEN/8, x4, x1, x2)

inst_394:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x180003f; 
   valaddr_reg:x3; val_offset:788*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 788*FLEN/8, x4, x1, x2)

inst_395:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x180007f; 
   valaddr_reg:x3; val_offset:790*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 790*FLEN/8, x4, x1, x2)

inst_396:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x18000ff; 
   valaddr_reg:x3; val_offset:792*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 792*FLEN/8, x4, x1, x2)

inst_397:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x18001ff; 
   valaddr_reg:x3; val_offset:794*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 794*FLEN/8, x4, x1, x2)

inst_398:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x18003ff; 
   valaddr_reg:x3; val_offset:796*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 796*FLEN/8, x4, x1, x2)

inst_399:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x18007ff; 
   valaddr_reg:x3; val_offset:798*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 798*FLEN/8, x4, x1, x2)

inst_400:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1800fff; 
   valaddr_reg:x3; val_offset:800*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 800*FLEN/8, x4, x1, x2)

inst_401:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1801fff; 
   valaddr_reg:x3; val_offset:802*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 802*FLEN/8, x4, x1, x2)

inst_402:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1803fff; 
   valaddr_reg:x3; val_offset:804*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 804*FLEN/8, x4, x1, x2)

inst_403:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1807fff; 
   valaddr_reg:x3; val_offset:806*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 806*FLEN/8, x4, x1, x2)

inst_404:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x180ffff; 
   valaddr_reg:x3; val_offset:808*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 808*FLEN/8, x4, x1, x2)

inst_405:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x181ffff; 
   valaddr_reg:x3; val_offset:810*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 810*FLEN/8, x4, x1, x2)

inst_406:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x183ffff; 
   valaddr_reg:x3; val_offset:812*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 812*FLEN/8, x4, x1, x2)

inst_407:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x187ffff; 
   valaddr_reg:x3; val_offset:814*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 814*FLEN/8, x4, x1, x2)

inst_408:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x18fffff; 
   valaddr_reg:x3; val_offset:816*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 816*FLEN/8, x4, x1, x2)

inst_409:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x19fffff; 
   valaddr_reg:x3; val_offset:818*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 818*FLEN/8, x4, x1, x2)

inst_410:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1bfffff; 
   valaddr_reg:x3; val_offset:820*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 820*FLEN/8, x4, x1, x2)

inst_411:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1c00000; 
   valaddr_reg:x3; val_offset:822*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 822*FLEN/8, x4, x1, x2)

inst_412:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1e00000; 
   valaddr_reg:x3; val_offset:824*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 824*FLEN/8, x4, x1, x2)

inst_413:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1f00000; 
   valaddr_reg:x3; val_offset:826*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 826*FLEN/8, x4, x1, x2)

inst_414:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1f80000; 
   valaddr_reg:x3; val_offset:828*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 828*FLEN/8, x4, x1, x2)

inst_415:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1fc0000; 
   valaddr_reg:x3; val_offset:830*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 830*FLEN/8, x4, x1, x2)

inst_416:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1fe0000; 
   valaddr_reg:x3; val_offset:832*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 832*FLEN/8, x4, x1, x2)

inst_417:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1ff0000; 
   valaddr_reg:x3; val_offset:834*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 834*FLEN/8, x4, x1, x2)

inst_418:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1ff8000; 
   valaddr_reg:x3; val_offset:836*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 836*FLEN/8, x4, x1, x2)

inst_419:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1ffc000; 
   valaddr_reg:x3; val_offset:838*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 838*FLEN/8, x4, x1, x2)

inst_420:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1ffe000; 
   valaddr_reg:x3; val_offset:840*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 840*FLEN/8, x4, x1, x2)

inst_421:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1fff000; 
   valaddr_reg:x3; val_offset:842*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 842*FLEN/8, x4, x1, x2)

inst_422:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1fff800; 
   valaddr_reg:x3; val_offset:844*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 844*FLEN/8, x4, x1, x2)

inst_423:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1fffc00; 
   valaddr_reg:x3; val_offset:846*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 846*FLEN/8, x4, x1, x2)

inst_424:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1fffe00; 
   valaddr_reg:x3; val_offset:848*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 848*FLEN/8, x4, x1, x2)

inst_425:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1ffff00; 
   valaddr_reg:x3; val_offset:850*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 850*FLEN/8, x4, x1, x2)

inst_426:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1ffff80; 
   valaddr_reg:x3; val_offset:852*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 852*FLEN/8, x4, x1, x2)

inst_427:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1ffffc0; 
   valaddr_reg:x3; val_offset:854*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 854*FLEN/8, x4, x1, x2)

inst_428:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1ffffe0; 
   valaddr_reg:x3; val_offset:856*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 856*FLEN/8, x4, x1, x2)

inst_429:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1fffff0; 
   valaddr_reg:x3; val_offset:858*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 858*FLEN/8, x4, x1, x2)

inst_430:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1fffff8; 
   valaddr_reg:x3; val_offset:860*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 860*FLEN/8, x4, x1, x2)

inst_431:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1fffffc; 
   valaddr_reg:x3; val_offset:862*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 862*FLEN/8, x4, x1, x2)

inst_432:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1fffffe; 
   valaddr_reg:x3; val_offset:864*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 864*FLEN/8, x4, x1, x2)

inst_433:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1ffffff; 
   valaddr_reg:x3; val_offset:866*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 866*FLEN/8, x4, x1, x2)

inst_434:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x23000000; 
   valaddr_reg:x3; val_offset:868*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 868*FLEN/8, x4, x1, x2)

inst_435:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x23000001; 
   valaddr_reg:x3; val_offset:870*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 870*FLEN/8, x4, x1, x2)

inst_436:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x23000003; 
   valaddr_reg:x3; val_offset:872*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 872*FLEN/8, x4, x1, x2)

inst_437:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x23000007; 
   valaddr_reg:x3; val_offset:874*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 874*FLEN/8, x4, x1, x2)

inst_438:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x2300000f; 
   valaddr_reg:x3; val_offset:876*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 876*FLEN/8, x4, x1, x2)

inst_439:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x2300001f; 
   valaddr_reg:x3; val_offset:878*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 878*FLEN/8, x4, x1, x2)

inst_440:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x2300003f; 
   valaddr_reg:x3; val_offset:880*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 880*FLEN/8, x4, x1, x2)

inst_441:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x2300007f; 
   valaddr_reg:x3; val_offset:882*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 882*FLEN/8, x4, x1, x2)

inst_442:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x230000ff; 
   valaddr_reg:x3; val_offset:884*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 884*FLEN/8, x4, x1, x2)

inst_443:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x230001ff; 
   valaddr_reg:x3; val_offset:886*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 886*FLEN/8, x4, x1, x2)

inst_444:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x230003ff; 
   valaddr_reg:x3; val_offset:888*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 888*FLEN/8, x4, x1, x2)

inst_445:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x230007ff; 
   valaddr_reg:x3; val_offset:890*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 890*FLEN/8, x4, x1, x2)

inst_446:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x23000fff; 
   valaddr_reg:x3; val_offset:892*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 892*FLEN/8, x4, x1, x2)

inst_447:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x23001fff; 
   valaddr_reg:x3; val_offset:894*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 894*FLEN/8, x4, x1, x2)

inst_448:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x23003fff; 
   valaddr_reg:x3; val_offset:896*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 896*FLEN/8, x4, x1, x2)

inst_449:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x23007fff; 
   valaddr_reg:x3; val_offset:898*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 898*FLEN/8, x4, x1, x2)

inst_450:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x2300ffff; 
   valaddr_reg:x3; val_offset:900*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 900*FLEN/8, x4, x1, x2)

inst_451:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x2301ffff; 
   valaddr_reg:x3; val_offset:902*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 902*FLEN/8, x4, x1, x2)

inst_452:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x2303ffff; 
   valaddr_reg:x3; val_offset:904*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 904*FLEN/8, x4, x1, x2)

inst_453:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x2307ffff; 
   valaddr_reg:x3; val_offset:906*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 906*FLEN/8, x4, x1, x2)

inst_454:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x230fffff; 
   valaddr_reg:x3; val_offset:908*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 908*FLEN/8, x4, x1, x2)

inst_455:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x231fffff; 
   valaddr_reg:x3; val_offset:910*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 910*FLEN/8, x4, x1, x2)

inst_456:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x233fffff; 
   valaddr_reg:x3; val_offset:912*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 912*FLEN/8, x4, x1, x2)

inst_457:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x23400000; 
   valaddr_reg:x3; val_offset:914*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 914*FLEN/8, x4, x1, x2)

inst_458:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x23600000; 
   valaddr_reg:x3; val_offset:916*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 916*FLEN/8, x4, x1, x2)

inst_459:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x23700000; 
   valaddr_reg:x3; val_offset:918*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 918*FLEN/8, x4, x1, x2)

inst_460:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x23780000; 
   valaddr_reg:x3; val_offset:920*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 920*FLEN/8, x4, x1, x2)

inst_461:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x237c0000; 
   valaddr_reg:x3; val_offset:922*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 922*FLEN/8, x4, x1, x2)

inst_462:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x237e0000; 
   valaddr_reg:x3; val_offset:924*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 924*FLEN/8, x4, x1, x2)

inst_463:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x237f0000; 
   valaddr_reg:x3; val_offset:926*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 926*FLEN/8, x4, x1, x2)

inst_464:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x237f8000; 
   valaddr_reg:x3; val_offset:928*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 928*FLEN/8, x4, x1, x2)

inst_465:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x237fc000; 
   valaddr_reg:x3; val_offset:930*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 930*FLEN/8, x4, x1, x2)

inst_466:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x237fe000; 
   valaddr_reg:x3; val_offset:932*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 932*FLEN/8, x4, x1, x2)

inst_467:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x237ff000; 
   valaddr_reg:x3; val_offset:934*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 934*FLEN/8, x4, x1, x2)

inst_468:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x237ff800; 
   valaddr_reg:x3; val_offset:936*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 936*FLEN/8, x4, x1, x2)

inst_469:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x237ffc00; 
   valaddr_reg:x3; val_offset:938*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 938*FLEN/8, x4, x1, x2)

inst_470:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x237ffe00; 
   valaddr_reg:x3; val_offset:940*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 940*FLEN/8, x4, x1, x2)

inst_471:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x237fff00; 
   valaddr_reg:x3; val_offset:942*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 942*FLEN/8, x4, x1, x2)

inst_472:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x237fff80; 
   valaddr_reg:x3; val_offset:944*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 944*FLEN/8, x4, x1, x2)

inst_473:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x237fffc0; 
   valaddr_reg:x3; val_offset:946*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 946*FLEN/8, x4, x1, x2)

inst_474:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x237fffe0; 
   valaddr_reg:x3; val_offset:948*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 948*FLEN/8, x4, x1, x2)

inst_475:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x237ffff0; 
   valaddr_reg:x3; val_offset:950*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 950*FLEN/8, x4, x1, x2)

inst_476:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x237ffff8; 
   valaddr_reg:x3; val_offset:952*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 952*FLEN/8, x4, x1, x2)

inst_477:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x237ffffc; 
   valaddr_reg:x3; val_offset:954*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 954*FLEN/8, x4, x1, x2)

inst_478:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x237ffffe; 
   valaddr_reg:x3; val_offset:956*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 956*FLEN/8, x4, x1, x2)

inst_479:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x46 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x237fffff; 
   valaddr_reg:x3; val_offset:958*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 958*FLEN/8, x4, x1, x2)

inst_480:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3; op2val:0x0; 
   valaddr_reg:x3; val_offset:960*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 960*FLEN/8, x4, x1, x2)

inst_481:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3; op2val:0x1; 
   valaddr_reg:x3; val_offset:962*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 962*FLEN/8, x4, x1, x2)

inst_482:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:964*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 964*FLEN/8, x4, x1, x2)

inst_483:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3; op2val:0x800000; 
   valaddr_reg:x3; val_offset:966*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 966*FLEN/8, x4, x1, x2)

inst_484:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7; op2val:0x0; 
   valaddr_reg:x3; val_offset:968*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 968*FLEN/8, x4, x1, x2)

inst_485:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7; op2val:0x1; 
   valaddr_reg:x3; val_offset:970*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 970*FLEN/8, x4, x1, x2)

inst_486:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:972*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 972*FLEN/8, x4, x1, x2)

inst_487:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7; op2val:0x800000; 
   valaddr_reg:x3; val_offset:974*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 974*FLEN/8, x4, x1, x2)

inst_488:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf; op2val:0x0; 
   valaddr_reg:x3; val_offset:976*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 976*FLEN/8, x4, x1, x2)

inst_489:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf; op2val:0x1; 
   valaddr_reg:x3; val_offset:978*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 978*FLEN/8, x4, x1, x2)

inst_490:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:980*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 980*FLEN/8, x4, x1, x2)

inst_491:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf; op2val:0x800000; 
   valaddr_reg:x3; val_offset:982*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 982*FLEN/8, x4, x1, x2)

inst_492:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1f; op2val:0x0; 
   valaddr_reg:x3; val_offset:984*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 984*FLEN/8, x4, x1, x2)

inst_493:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1f; op2val:0x1; 
   valaddr_reg:x3; val_offset:986*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 986*FLEN/8, x4, x1, x2)

inst_494:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1f; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:988*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 988*FLEN/8, x4, x1, x2)

inst_495:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1f; op2val:0x800000; 
   valaddr_reg:x3; val_offset:990*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 990*FLEN/8, x4, x1, x2)

inst_496:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f; op2val:0x0; 
   valaddr_reg:x3; val_offset:992*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 992*FLEN/8, x4, x1, x2)

inst_497:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f; op2val:0x1; 
   valaddr_reg:x3; val_offset:994*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 994*FLEN/8, x4, x1, x2)

inst_498:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:996*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 996*FLEN/8, x4, x1, x2)

inst_499:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f; op2val:0x800000; 
   valaddr_reg:x3; val_offset:998*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 998*FLEN/8, x4, x1, x2)

inst_500:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00007f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f; op2val:0x0; 
   valaddr_reg:x3; val_offset:1000*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1000*FLEN/8, x4, x1, x2)

inst_501:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00007f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f; op2val:0x1; 
   valaddr_reg:x3; val_offset:1002*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1002*FLEN/8, x4, x1, x2)

inst_502:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00007f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1004*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1004*FLEN/8, x4, x1, x2)

inst_503:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00007f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1006*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1006*FLEN/8, x4, x1, x2)

inst_504:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff; op2val:0x0; 
   valaddr_reg:x3; val_offset:1008*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1008*FLEN/8, x4, x1, x2)

inst_505:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff; op2val:0x1; 
   valaddr_reg:x3; val_offset:1010*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1010*FLEN/8, x4, x1, x2)

inst_506:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1012*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1012*FLEN/8, x4, x1, x2)

inst_507:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1014*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1014*FLEN/8, x4, x1, x2)

inst_508:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ff; op2val:0x0; 
   valaddr_reg:x3; val_offset:1016*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1016*FLEN/8, x4, x1, x2)

inst_509:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ff; op2val:0x1; 
   valaddr_reg:x3; val_offset:1018*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1018*FLEN/8, x4, x1, x2)

inst_510:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1020*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1020*FLEN/8, x4, x1, x2)

inst_511:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1022*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1022*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_512:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3ff; op2val:0x0; 
   valaddr_reg:x3; val_offset:1024*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1024*FLEN/8, x4, x1, x2)

inst_513:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3ff; op2val:0x1; 
   valaddr_reg:x3; val_offset:1026*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1026*FLEN/8, x4, x1, x2)

inst_514:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3ff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1028*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1028*FLEN/8, x4, x1, x2)

inst_515:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3ff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1030*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1030*FLEN/8, x4, x1, x2)

inst_516:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ff; op2val:0x0; 
   valaddr_reg:x3; val_offset:1032*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1032*FLEN/8, x4, x1, x2)

inst_517:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ff; op2val:0x1; 
   valaddr_reg:x3; val_offset:1034*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1034*FLEN/8, x4, x1, x2)

inst_518:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1036*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1036*FLEN/8, x4, x1, x2)

inst_519:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1038*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1038*FLEN/8, x4, x1, x2)

inst_520:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfff; op2val:0x0; 
   valaddr_reg:x3; val_offset:1040*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1040*FLEN/8, x4, x1, x2)

inst_521:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfff; op2val:0x1; 
   valaddr_reg:x3; val_offset:1042*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1042*FLEN/8, x4, x1, x2)

inst_522:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1044*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1044*FLEN/8, x4, x1, x2)

inst_523:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000fff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1046*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1046*FLEN/8, x4, x1, x2)

inst_524:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x001fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fff; op2val:0x0; 
   valaddr_reg:x3; val_offset:1048*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1048*FLEN/8, x4, x1, x2)

inst_525:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x001fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fff; op2val:0x1; 
   valaddr_reg:x3; val_offset:1050*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1050*FLEN/8, x4, x1, x2)

inst_526:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x001fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1052*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1052*FLEN/8, x4, x1, x2)

inst_527:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x001fff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1054*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1054*FLEN/8, x4, x1, x2)

inst_528:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x003fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3fff; op2val:0x0; 
   valaddr_reg:x3; val_offset:1056*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1056*FLEN/8, x4, x1, x2)

inst_529:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x003fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3fff; op2val:0x1; 
   valaddr_reg:x3; val_offset:1058*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1058*FLEN/8, x4, x1, x2)

inst_530:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x003fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3fff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1060*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1060*FLEN/8, x4, x1, x2)

inst_531:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x003fff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3fff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1062*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1062*FLEN/8, x4, x1, x2)

inst_532:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x007fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fff; op2val:0x0; 
   valaddr_reg:x3; val_offset:1064*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1064*FLEN/8, x4, x1, x2)

inst_533:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x007fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fff; op2val:0x1; 
   valaddr_reg:x3; val_offset:1066*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1066*FLEN/8, x4, x1, x2)

inst_534:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x007fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1068*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1068*FLEN/8, x4, x1, x2)

inst_535:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x007fff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1070*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1070*FLEN/8, x4, x1, x2)

inst_536:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:1072*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1072*FLEN/8, x4, x1, x2)

inst_537:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:1074*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1074*FLEN/8, x4, x1, x2)

inst_538:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1076*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1076*FLEN/8, x4, x1, x2)

inst_539:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1078*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1078*FLEN/8, x4, x1, x2)

inst_540:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:1080*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1080*FLEN/8, x4, x1, x2)

inst_541:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:1082*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1082*FLEN/8, x4, x1, x2)

inst_542:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1084*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1084*FLEN/8, x4, x1, x2)

inst_543:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1086*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1086*FLEN/8, x4, x1, x2)

inst_544:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3ffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:1088*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1088*FLEN/8, x4, x1, x2)

inst_545:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3ffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:1090*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1090*FLEN/8, x4, x1, x2)

inst_546:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3ffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1092*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1092*FLEN/8, x4, x1, x2)

inst_547:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3ffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1094*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1094*FLEN/8, x4, x1, x2)

inst_548:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:1096*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1096*FLEN/8, x4, x1, x2)

inst_549:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:1098*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1098*FLEN/8, x4, x1, x2)

inst_550:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1100*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1100*FLEN/8, x4, x1, x2)

inst_551:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1102*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1102*FLEN/8, x4, x1, x2)

inst_552:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:1104*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1104*FLEN/8, x4, x1, x2)

inst_553:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:1106*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1106*FLEN/8, x4, x1, x2)

inst_554:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1108*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1108*FLEN/8, x4, x1, x2)

inst_555:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1110*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1110*FLEN/8, x4, x1, x2)

inst_556:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x199999 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x199999; op2val:0x0; 
   valaddr_reg:x3; val_offset:1112*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1112*FLEN/8, x4, x1, x2)

inst_557:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x199999 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x199999; op2val:0x1; 
   valaddr_reg:x3; val_offset:1114*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1114*FLEN/8, x4, x1, x2)

inst_558:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x199999 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x199999; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1116*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1116*FLEN/8, x4, x1, x2)

inst_559:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:1118*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1118*FLEN/8, x4, x1, x2)

inst_560:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:1120*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1120*FLEN/8, x4, x1, x2)

inst_561:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1122*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1122*FLEN/8, x4, x1, x2)

inst_562:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1124*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1124*FLEN/8, x4, x1, x2)

inst_563:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x249249 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x249249; op2val:0x0; 
   valaddr_reg:x3; val_offset:1126*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1126*FLEN/8, x4, x1, x2)

inst_564:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x249249 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x249249; op2val:0x1; 
   valaddr_reg:x3; val_offset:1128*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1128*FLEN/8, x4, x1, x2)

inst_565:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x249249 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x249249; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1130*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1130*FLEN/8, x4, x1, x2)

inst_566:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x333333 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x333333; op2val:0x0; 
   valaddr_reg:x3; val_offset:1132*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1132*FLEN/8, x4, x1, x2)

inst_567:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x333333 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x333333; op2val:0x1; 
   valaddr_reg:x3; val_offset:1134*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1134*FLEN/8, x4, x1, x2)

inst_568:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x333333 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x333333; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1136*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1136*FLEN/8, x4, x1, x2)

inst_569:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x36db6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x36db6d; op2val:0x0; 
   valaddr_reg:x3; val_offset:1138*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1138*FLEN/8, x4, x1, x2)

inst_570:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x36db6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x36db6d; op2val:0x1; 
   valaddr_reg:x3; val_offset:1140*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1140*FLEN/8, x4, x1, x2)

inst_571:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x36db6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x36db6d; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1142*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1142*FLEN/8, x4, x1, x2)

inst_572:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3bbbbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3bbbbb; op2val:0x0; 
   valaddr_reg:x3; val_offset:1144*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1144*FLEN/8, x4, x1, x2)

inst_573:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3bbbbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3bbbbb; op2val:0x1; 
   valaddr_reg:x3; val_offset:1146*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1146*FLEN/8, x4, x1, x2)

inst_574:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3bbbbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3bbbbb; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1148*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1148*FLEN/8, x4, x1, x2)

inst_575:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3fffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:1150*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1150*FLEN/8, x4, x1, x2)

inst_576:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3fffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:1152*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1152*FLEN/8, x4, x1, x2)

inst_577:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3fffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1154*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1154*FLEN/8, x4, x1, x2)

inst_578:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3fffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1156*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1156*FLEN/8, x4, x1, x2)

inst_579:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x400000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x400000; op2val:0x0; 
   valaddr_reg:x3; val_offset:1158*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1158*FLEN/8, x4, x1, x2)

inst_580:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x400000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x400000; op2val:0x1; 
   valaddr_reg:x3; val_offset:1160*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1160*FLEN/8, x4, x1, x2)

inst_581:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x400000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x400000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1162*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1162*FLEN/8, x4, x1, x2)

inst_582:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x400000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x400000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1164*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1164*FLEN/8, x4, x1, x2)

inst_583:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x444444 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x444444; op2val:0x0; 
   valaddr_reg:x3; val_offset:1166*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1166*FLEN/8, x4, x1, x2)

inst_584:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x444444 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x444444; op2val:0x1; 
   valaddr_reg:x3; val_offset:1168*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1168*FLEN/8, x4, x1, x2)

inst_585:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x444444 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x444444; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1170*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1170*FLEN/8, x4, x1, x2)

inst_586:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x4ccccc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4ccccc; op2val:0x0; 
   valaddr_reg:x3; val_offset:1172*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1172*FLEN/8, x4, x1, x2)

inst_587:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x4ccccc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4ccccc; op2val:0x1; 
   valaddr_reg:x3; val_offset:1174*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1174*FLEN/8, x4, x1, x2)

inst_588:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x4ccccc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4ccccc; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1176*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1176*FLEN/8, x4, x1, x2)

inst_589:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x5b6db6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x5b6db6; op2val:0x0; 
   valaddr_reg:x3; val_offset:1178*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1178*FLEN/8, x4, x1, x2)

inst_590:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x5b6db6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x5b6db6; op2val:0x1; 
   valaddr_reg:x3; val_offset:1180*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1180*FLEN/8, x4, x1, x2)

inst_591:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x5b6db6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x5b6db6; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1182*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1182*FLEN/8, x4, x1, x2)

inst_592:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x600000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x600000; op2val:0x0; 
   valaddr_reg:x3; val_offset:1184*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1184*FLEN/8, x4, x1, x2)

inst_593:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x600000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x600000; op2val:0x1; 
   valaddr_reg:x3; val_offset:1186*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1186*FLEN/8, x4, x1, x2)

inst_594:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x600000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x600000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1188*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1188*FLEN/8, x4, x1, x2)

inst_595:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x600000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x600000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1190*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1190*FLEN/8, x4, x1, x2)

inst_596:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x666666 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x666666; op2val:0x0; 
   valaddr_reg:x3; val_offset:1192*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1192*FLEN/8, x4, x1, x2)

inst_597:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x666666 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x666666; op2val:0x1; 
   valaddr_reg:x3; val_offset:1194*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1194*FLEN/8, x4, x1, x2)

inst_598:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x666666 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x666666; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1196*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1196*FLEN/8, x4, x1, x2)

inst_599:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x6db6db and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6db6db; op2val:0x0; 
   valaddr_reg:x3; val_offset:1198*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1198*FLEN/8, x4, x1, x2)

inst_600:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x6db6db and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6db6db; op2val:0x1; 
   valaddr_reg:x3; val_offset:1200*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1200*FLEN/8, x4, x1, x2)

inst_601:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x6db6db and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6db6db; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1202*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1202*FLEN/8, x4, x1, x2)

inst_602:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x700000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x700000; op2val:0x0; 
   valaddr_reg:x3; val_offset:1204*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1204*FLEN/8, x4, x1, x2)

inst_603:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x700000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x700000; op2val:0x1; 
   valaddr_reg:x3; val_offset:1206*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1206*FLEN/8, x4, x1, x2)

inst_604:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x700000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x700000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1208*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1208*FLEN/8, x4, x1, x2)

inst_605:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x700000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x700000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1210*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1210*FLEN/8, x4, x1, x2)

inst_606:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x780000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x780000; op2val:0x0; 
   valaddr_reg:x3; val_offset:1212*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1212*FLEN/8, x4, x1, x2)

inst_607:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x780000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x780000; op2val:0x1; 
   valaddr_reg:x3; val_offset:1214*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1214*FLEN/8, x4, x1, x2)

inst_608:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x780000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x780000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1216*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1216*FLEN/8, x4, x1, x2)

inst_609:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x780000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x780000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1218*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1218*FLEN/8, x4, x1, x2)

inst_610:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7c0000; op2val:0x0; 
   valaddr_reg:x3; val_offset:1220*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1220*FLEN/8, x4, x1, x2)

inst_611:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7c0000; op2val:0x1; 
   valaddr_reg:x3; val_offset:1222*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1222*FLEN/8, x4, x1, x2)

inst_612:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7c0000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1224*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1224*FLEN/8, x4, x1, x2)

inst_613:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7c0000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1226*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1226*FLEN/8, x4, x1, x2)

inst_614:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e0000; op2val:0x0; 
   valaddr_reg:x3; val_offset:1228*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1228*FLEN/8, x4, x1, x2)

inst_615:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e0000; op2val:0x1; 
   valaddr_reg:x3; val_offset:1230*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1230*FLEN/8, x4, x1, x2)

inst_616:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e0000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1232*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1232*FLEN/8, x4, x1, x2)

inst_617:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e0000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1234*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1234*FLEN/8, x4, x1, x2)

inst_618:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f0000; op2val:0x0; 
   valaddr_reg:x3; val_offset:1236*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1236*FLEN/8, x4, x1, x2)

inst_619:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f0000; op2val:0x1; 
   valaddr_reg:x3; val_offset:1238*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1238*FLEN/8, x4, x1, x2)

inst_620:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f0000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1240*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1240*FLEN/8, x4, x1, x2)

inst_621:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f0000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1242*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1242*FLEN/8, x4, x1, x2)

inst_622:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f8000; op2val:0x0; 
   valaddr_reg:x3; val_offset:1244*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1244*FLEN/8, x4, x1, x2)

inst_623:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f8000; op2val:0x1; 
   valaddr_reg:x3; val_offset:1246*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1246*FLEN/8, x4, x1, x2)

inst_624:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f8000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1248*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1248*FLEN/8, x4, x1, x2)

inst_625:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f8000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1250*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1250*FLEN/8, x4, x1, x2)

inst_626:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fc000; op2val:0x0; 
   valaddr_reg:x3; val_offset:1252*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1252*FLEN/8, x4, x1, x2)

inst_627:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fc000; op2val:0x1; 
   valaddr_reg:x3; val_offset:1254*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1254*FLEN/8, x4, x1, x2)

inst_628:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fc000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1256*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1256*FLEN/8, x4, x1, x2)

inst_629:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fc000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1258*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1258*FLEN/8, x4, x1, x2)

inst_630:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fe000; op2val:0x0; 
   valaddr_reg:x3; val_offset:1260*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1260*FLEN/8, x4, x1, x2)

inst_631:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fe000; op2val:0x1; 
   valaddr_reg:x3; val_offset:1262*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1262*FLEN/8, x4, x1, x2)

inst_632:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fe000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1264*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1264*FLEN/8, x4, x1, x2)

inst_633:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fe000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1266*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1266*FLEN/8, x4, x1, x2)

inst_634:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ff000; op2val:0x0; 
   valaddr_reg:x3; val_offset:1268*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1268*FLEN/8, x4, x1, x2)

inst_635:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ff000; op2val:0x1; 
   valaddr_reg:x3; val_offset:1270*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1270*FLEN/8, x4, x1, x2)

inst_636:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ff000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1272*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1272*FLEN/8, x4, x1, x2)

inst_637:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ff000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1274*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1274*FLEN/8, x4, x1, x2)

inst_638:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ff800; op2val:0x0; 
   valaddr_reg:x3; val_offset:1276*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1276*FLEN/8, x4, x1, x2)

inst_639:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ff800; op2val:0x1; 
   valaddr_reg:x3; val_offset:1278*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1278*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_640:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ff800; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1280*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1280*FLEN/8, x4, x1, x2)

inst_641:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ff800; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1282*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1282*FLEN/8, x4, x1, x2)

inst_642:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ffc00; op2val:0x0; 
   valaddr_reg:x3; val_offset:1284*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1284*FLEN/8, x4, x1, x2)

inst_643:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ffc00; op2val:0x1; 
   valaddr_reg:x3; val_offset:1286*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1286*FLEN/8, x4, x1, x2)

inst_644:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ffc00; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1288*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1288*FLEN/8, x4, x1, x2)

inst_645:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ffc00; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1290*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1290*FLEN/8, x4, x1, x2)

inst_646:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ffe00; op2val:0x0; 
   valaddr_reg:x3; val_offset:1292*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1292*FLEN/8, x4, x1, x2)

inst_647:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ffe00; op2val:0x1; 
   valaddr_reg:x3; val_offset:1294*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1294*FLEN/8, x4, x1, x2)

inst_648:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ffe00; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1296*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1296*FLEN/8, x4, x1, x2)

inst_649:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ffe00; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1298*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1298*FLEN/8, x4, x1, x2)

inst_650:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fff00; op2val:0x0; 
   valaddr_reg:x3; val_offset:1300*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1300*FLEN/8, x4, x1, x2)

inst_651:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fff00; op2val:0x1; 
   valaddr_reg:x3; val_offset:1302*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1302*FLEN/8, x4, x1, x2)

inst_652:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fff00; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1304*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1304*FLEN/8, x4, x1, x2)

inst_653:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fff00; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1306*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1306*FLEN/8, x4, x1, x2)

inst_654:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fff80; op2val:0x0; 
   valaddr_reg:x3; val_offset:1308*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1308*FLEN/8, x4, x1, x2)

inst_655:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fff80; op2val:0x1; 
   valaddr_reg:x3; val_offset:1310*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1310*FLEN/8, x4, x1, x2)

inst_656:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fff80; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1312*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1312*FLEN/8, x4, x1, x2)

inst_657:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fff80; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1314*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1314*FLEN/8, x4, x1, x2)

inst_658:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffc0; op2val:0x0; 
   valaddr_reg:x3; val_offset:1316*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1316*FLEN/8, x4, x1, x2)

inst_659:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffc0; op2val:0x1; 
   valaddr_reg:x3; val_offset:1318*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1318*FLEN/8, x4, x1, x2)

inst_660:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffc0; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1320*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1320*FLEN/8, x4, x1, x2)

inst_661:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffc0; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1322*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1322*FLEN/8, x4, x1, x2)

inst_662:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffe0; op2val:0x0; 
   valaddr_reg:x3; val_offset:1324*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1324*FLEN/8, x4, x1, x2)

inst_663:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffe0; op2val:0x1; 
   valaddr_reg:x3; val_offset:1326*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1326*FLEN/8, x4, x1, x2)

inst_664:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffe0; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1328*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1328*FLEN/8, x4, x1, x2)

inst_665:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffe0; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1330*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1330*FLEN/8, x4, x1, x2)

inst_666:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ffff0; op2val:0x0; 
   valaddr_reg:x3; val_offset:1332*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1332*FLEN/8, x4, x1, x2)

inst_667:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ffff0; op2val:0x1; 
   valaddr_reg:x3; val_offset:1334*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1334*FLEN/8, x4, x1, x2)

inst_668:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ffff0; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1336*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1336*FLEN/8, x4, x1, x2)

inst_669:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ffff0; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1338*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1338*FLEN/8, x4, x1, x2)

inst_670:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ffff8; op2val:0x0; 
   valaddr_reg:x3; val_offset:1340*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1340*FLEN/8, x4, x1, x2)

inst_671:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ffff8; op2val:0x1; 
   valaddr_reg:x3; val_offset:1342*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1342*FLEN/8, x4, x1, x2)

inst_672:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ffff8; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1344*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1344*FLEN/8, x4, x1, x2)

inst_673:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ffff8; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1346*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1346*FLEN/8, x4, x1, x2)

inst_674:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ffffc; op2val:0x0; 
   valaddr_reg:x3; val_offset:1348*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1348*FLEN/8, x4, x1, x2)

inst_675:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ffffc; op2val:0x1; 
   valaddr_reg:x3; val_offset:1350*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1350*FLEN/8, x4, x1, x2)

inst_676:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ffffc; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1352*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1352*FLEN/8, x4, x1, x2)

inst_677:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ffffc; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1354*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1354*FLEN/8, x4, x1, x2)

inst_678:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ffffe; op2val:0x0; 
   valaddr_reg:x3; val_offset:1356*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1356*FLEN/8, x4, x1, x2)

inst_679:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ffffe; op2val:0x1; 
   valaddr_reg:x3; val_offset:1358*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1358*FLEN/8, x4, x1, x2)

inst_680:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ffffe; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1360*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1360*FLEN/8, x4, x1, x2)

inst_681:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ffffe; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1362*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1362*FLEN/8, x4, x1, x2)

inst_682:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:1364*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1364*FLEN/8, x4, x1, x2)

inst_683:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:1366*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1366*FLEN/8, x4, x1, x2)

inst_684:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x3; 
   valaddr_reg:x3; val_offset:1368*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1368*FLEN/8, x4, x1, x2)

inst_685:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x7; 
   valaddr_reg:x3; val_offset:1370*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1370*FLEN/8, x4, x1, x2)

inst_686:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0xf; 
   valaddr_reg:x3; val_offset:1372*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1372*FLEN/8, x4, x1, x2)

inst_687:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1f; 
   valaddr_reg:x3; val_offset:1374*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1374*FLEN/8, x4, x1, x2)

inst_688:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x3f; 
   valaddr_reg:x3; val_offset:1376*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1376*FLEN/8, x4, x1, x2)

inst_689:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x7f; 
   valaddr_reg:x3; val_offset:1378*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1378*FLEN/8, x4, x1, x2)

inst_690:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0xff; 
   valaddr_reg:x3; val_offset:1380*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1380*FLEN/8, x4, x1, x2)

inst_691:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1ff; 
   valaddr_reg:x3; val_offset:1382*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1382*FLEN/8, x4, x1, x2)

inst_692:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x3ff; 
   valaddr_reg:x3; val_offset:1384*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1384*FLEN/8, x4, x1, x2)

inst_693:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x7ff; 
   valaddr_reg:x3; val_offset:1386*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1386*FLEN/8, x4, x1, x2)

inst_694:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0xfff; 
   valaddr_reg:x3; val_offset:1388*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1388*FLEN/8, x4, x1, x2)

inst_695:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1fff; 
   valaddr_reg:x3; val_offset:1390*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1390*FLEN/8, x4, x1, x2)

inst_696:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x3fff; 
   valaddr_reg:x3; val_offset:1392*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1392*FLEN/8, x4, x1, x2)

inst_697:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x7fff; 
   valaddr_reg:x3; val_offset:1394*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1394*FLEN/8, x4, x1, x2)

inst_698:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0xffff; 
   valaddr_reg:x3; val_offset:1396*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1396*FLEN/8, x4, x1, x2)

inst_699:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1ffff; 
   valaddr_reg:x3; val_offset:1398*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1398*FLEN/8, x4, x1, x2)

inst_700:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x3ffff; 
   valaddr_reg:x3; val_offset:1400*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1400*FLEN/8, x4, x1, x2)

inst_701:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x7ffff; 
   valaddr_reg:x3; val_offset:1402*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1402*FLEN/8, x4, x1, x2)

inst_702:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0xfffff; 
   valaddr_reg:x3; val_offset:1404*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1404*FLEN/8, x4, x1, x2)

inst_703:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x199999; 
   valaddr_reg:x3; val_offset:1406*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1406*FLEN/8, x4, x1, x2)

inst_704:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1fffff; 
   valaddr_reg:x3; val_offset:1408*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1408*FLEN/8, x4, x1, x2)

inst_705:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x249249; 
   valaddr_reg:x3; val_offset:1410*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1410*FLEN/8, x4, x1, x2)

inst_706:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x333333; 
   valaddr_reg:x3; val_offset:1412*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1412*FLEN/8, x4, x1, x2)

inst_707:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x36db6d; 
   valaddr_reg:x3; val_offset:1414*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1414*FLEN/8, x4, x1, x2)

inst_708:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x3bbbbb; 
   valaddr_reg:x3; val_offset:1416*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1416*FLEN/8, x4, x1, x2)

inst_709:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x3fffff; 
   valaddr_reg:x3; val_offset:1418*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1418*FLEN/8, x4, x1, x2)

inst_710:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x400000; 
   valaddr_reg:x3; val_offset:1420*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1420*FLEN/8, x4, x1, x2)

inst_711:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x444444; 
   valaddr_reg:x3; val_offset:1422*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1422*FLEN/8, x4, x1, x2)

inst_712:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x4ccccc; 
   valaddr_reg:x3; val_offset:1424*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1424*FLEN/8, x4, x1, x2)

inst_713:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x5b6db6; 
   valaddr_reg:x3; val_offset:1426*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1426*FLEN/8, x4, x1, x2)

inst_714:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x600000; 
   valaddr_reg:x3; val_offset:1428*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1428*FLEN/8, x4, x1, x2)

inst_715:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x666666; 
   valaddr_reg:x3; val_offset:1430*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1430*FLEN/8, x4, x1, x2)

inst_716:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x6db6db; 
   valaddr_reg:x3; val_offset:1432*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1432*FLEN/8, x4, x1, x2)

inst_717:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x700000; 
   valaddr_reg:x3; val_offset:1434*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1434*FLEN/8, x4, x1, x2)

inst_718:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x780000; 
   valaddr_reg:x3; val_offset:1436*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1436*FLEN/8, x4, x1, x2)

inst_719:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x7c0000; 
   valaddr_reg:x3; val_offset:1438*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1438*FLEN/8, x4, x1, x2)

inst_720:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x7e0000; 
   valaddr_reg:x3; val_offset:1440*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1440*FLEN/8, x4, x1, x2)

inst_721:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x7f0000; 
   valaddr_reg:x3; val_offset:1442*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1442*FLEN/8, x4, x1, x2)

inst_722:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x7f8000; 
   valaddr_reg:x3; val_offset:1444*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1444*FLEN/8, x4, x1, x2)

inst_723:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x7fc000; 
   valaddr_reg:x3; val_offset:1446*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1446*FLEN/8, x4, x1, x2)

inst_724:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x7fe000; 
   valaddr_reg:x3; val_offset:1448*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1448*FLEN/8, x4, x1, x2)

inst_725:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x7ff000; 
   valaddr_reg:x3; val_offset:1450*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1450*FLEN/8, x4, x1, x2)

inst_726:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x7ff800; 
   valaddr_reg:x3; val_offset:1452*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1452*FLEN/8, x4, x1, x2)

inst_727:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x7ffc00; 
   valaddr_reg:x3; val_offset:1454*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1454*FLEN/8, x4, x1, x2)

inst_728:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x7ffe00; 
   valaddr_reg:x3; val_offset:1456*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1456*FLEN/8, x4, x1, x2)

inst_729:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x7fff00; 
   valaddr_reg:x3; val_offset:1458*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1458*FLEN/8, x4, x1, x2)

inst_730:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x7fff80; 
   valaddr_reg:x3; val_offset:1460*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1460*FLEN/8, x4, x1, x2)

inst_731:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x7fffc0; 
   valaddr_reg:x3; val_offset:1462*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1462*FLEN/8, x4, x1, x2)

inst_732:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x7fffe0; 
   valaddr_reg:x3; val_offset:1464*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1464*FLEN/8, x4, x1, x2)

inst_733:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x7ffff0; 
   valaddr_reg:x3; val_offset:1466*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1466*FLEN/8, x4, x1, x2)

inst_734:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x7ffff8; 
   valaddr_reg:x3; val_offset:1468*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1468*FLEN/8, x4, x1, x2)

inst_735:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x7ffffc; 
   valaddr_reg:x3; val_offset:1470*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1470*FLEN/8, x4, x1, x2)

inst_736:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x7ffffe; 
   valaddr_reg:x3; val_offset:1472*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1472*FLEN/8, x4, x1, x2)

inst_737:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1474*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1474*FLEN/8, x4, x1, x2)

inst_738:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1476*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1476*FLEN/8, x4, x1, x2)

inst_739:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x800001; 
   valaddr_reg:x3; val_offset:1478*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1478*FLEN/8, x4, x1, x2)

inst_740:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x800003; 
   valaddr_reg:x3; val_offset:1480*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1480*FLEN/8, x4, x1, x2)

inst_741:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x800007; 
   valaddr_reg:x3; val_offset:1482*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1482*FLEN/8, x4, x1, x2)

inst_742:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x80000f; 
   valaddr_reg:x3; val_offset:1484*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1484*FLEN/8, x4, x1, x2)

inst_743:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x80001f; 
   valaddr_reg:x3; val_offset:1486*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1486*FLEN/8, x4, x1, x2)

inst_744:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x80003f; 
   valaddr_reg:x3; val_offset:1488*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1488*FLEN/8, x4, x1, x2)

inst_745:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x80007f; 
   valaddr_reg:x3; val_offset:1490*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1490*FLEN/8, x4, x1, x2)

inst_746:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x8000ff; 
   valaddr_reg:x3; val_offset:1492*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1492*FLEN/8, x4, x1, x2)

inst_747:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x8001ff; 
   valaddr_reg:x3; val_offset:1494*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1494*FLEN/8, x4, x1, x2)

inst_748:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x8003ff; 
   valaddr_reg:x3; val_offset:1496*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1496*FLEN/8, x4, x1, x2)

inst_749:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x8007ff; 
   valaddr_reg:x3; val_offset:1498*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1498*FLEN/8, x4, x1, x2)

inst_750:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x800fff; 
   valaddr_reg:x3; val_offset:1500*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1500*FLEN/8, x4, x1, x2)

inst_751:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x801fff; 
   valaddr_reg:x3; val_offset:1502*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1502*FLEN/8, x4, x1, x2)

inst_752:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x803fff; 
   valaddr_reg:x3; val_offset:1504*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1504*FLEN/8, x4, x1, x2)

inst_753:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x807fff; 
   valaddr_reg:x3; val_offset:1506*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1506*FLEN/8, x4, x1, x2)

inst_754:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x80ffff; 
   valaddr_reg:x3; val_offset:1508*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1508*FLEN/8, x4, x1, x2)

inst_755:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x81ffff; 
   valaddr_reg:x3; val_offset:1510*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1510*FLEN/8, x4, x1, x2)

inst_756:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x83ffff; 
   valaddr_reg:x3; val_offset:1512*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1512*FLEN/8, x4, x1, x2)

inst_757:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x87ffff; 
   valaddr_reg:x3; val_offset:1514*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1514*FLEN/8, x4, x1, x2)

inst_758:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x8fffff; 
   valaddr_reg:x3; val_offset:1516*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1516*FLEN/8, x4, x1, x2)

inst_759:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x9fffff; 
   valaddr_reg:x3; val_offset:1518*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1518*FLEN/8, x4, x1, x2)

inst_760:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0xbfffff; 
   valaddr_reg:x3; val_offset:1520*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1520*FLEN/8, x4, x1, x2)

inst_761:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0xc00000; 
   valaddr_reg:x3; val_offset:1522*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1522*FLEN/8, x4, x1, x2)

inst_762:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0xe00000; 
   valaddr_reg:x3; val_offset:1524*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1524*FLEN/8, x4, x1, x2)

inst_763:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0xf00000; 
   valaddr_reg:x3; val_offset:1526*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1526*FLEN/8, x4, x1, x2)

inst_764:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0xf80000; 
   valaddr_reg:x3; val_offset:1528*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1528*FLEN/8, x4, x1, x2)

inst_765:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0xfc0000; 
   valaddr_reg:x3; val_offset:1530*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1530*FLEN/8, x4, x1, x2)

inst_766:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0xfe0000; 
   valaddr_reg:x3; val_offset:1532*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1532*FLEN/8, x4, x1, x2)

inst_767:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0xff0000; 
   valaddr_reg:x3; val_offset:1534*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1534*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_7)

inst_768:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0xff8000; 
   valaddr_reg:x3; val_offset:1536*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1536*FLEN/8, x4, x1, x2)

inst_769:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0xffc000; 
   valaddr_reg:x3; val_offset:1538*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1538*FLEN/8, x4, x1, x2)

inst_770:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0xffe000; 
   valaddr_reg:x3; val_offset:1540*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1540*FLEN/8, x4, x1, x2)

inst_771:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0xfff000; 
   valaddr_reg:x3; val_offset:1542*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1542*FLEN/8, x4, x1, x2)

inst_772:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0xfff800; 
   valaddr_reg:x3; val_offset:1544*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1544*FLEN/8, x4, x1, x2)

inst_773:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0xfffc00; 
   valaddr_reg:x3; val_offset:1546*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1546*FLEN/8, x4, x1, x2)

inst_774:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0xfffe00; 
   valaddr_reg:x3; val_offset:1548*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1548*FLEN/8, x4, x1, x2)

inst_775:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0xffff00; 
   valaddr_reg:x3; val_offset:1550*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1550*FLEN/8, x4, x1, x2)

inst_776:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0xffff80; 
   valaddr_reg:x3; val_offset:1552*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1552*FLEN/8, x4, x1, x2)

inst_777:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0xffffc0; 
   valaddr_reg:x3; val_offset:1554*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1554*FLEN/8, x4, x1, x2)

inst_778:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0xffffe0; 
   valaddr_reg:x3; val_offset:1556*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1556*FLEN/8, x4, x1, x2)

inst_779:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0xfffff0; 
   valaddr_reg:x3; val_offset:1558*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1558*FLEN/8, x4, x1, x2)

inst_780:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0xfffff8; 
   valaddr_reg:x3; val_offset:1560*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1560*FLEN/8, x4, x1, x2)

inst_781:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0xfffffc; 
   valaddr_reg:x3; val_offset:1562*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1562*FLEN/8, x4, x1, x2)

inst_782:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0xfffffe; 
   valaddr_reg:x3; val_offset:1564*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1564*FLEN/8, x4, x1, x2)

inst_783:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0xffffff; 
   valaddr_reg:x3; val_offset:1566*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1566*FLEN/8, x4, x1, x2)

inst_784:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1000000; 
   valaddr_reg:x3; val_offset:1568*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1568*FLEN/8, x4, x1, x2)

inst_785:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1000001; 
   valaddr_reg:x3; val_offset:1570*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1570*FLEN/8, x4, x1, x2)

inst_786:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1000003; 
   valaddr_reg:x3; val_offset:1572*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1572*FLEN/8, x4, x1, x2)

inst_787:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1000007; 
   valaddr_reg:x3; val_offset:1574*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1574*FLEN/8, x4, x1, x2)

inst_788:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x100000f; 
   valaddr_reg:x3; val_offset:1576*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1576*FLEN/8, x4, x1, x2)

inst_789:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x100001f; 
   valaddr_reg:x3; val_offset:1578*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1578*FLEN/8, x4, x1, x2)

inst_790:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x100003f; 
   valaddr_reg:x3; val_offset:1580*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1580*FLEN/8, x4, x1, x2)

inst_791:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x100007f; 
   valaddr_reg:x3; val_offset:1582*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1582*FLEN/8, x4, x1, x2)

inst_792:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x10000ff; 
   valaddr_reg:x3; val_offset:1584*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1584*FLEN/8, x4, x1, x2)

inst_793:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x10001ff; 
   valaddr_reg:x3; val_offset:1586*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1586*FLEN/8, x4, x1, x2)

inst_794:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x10003ff; 
   valaddr_reg:x3; val_offset:1588*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1588*FLEN/8, x4, x1, x2)

inst_795:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x10007ff; 
   valaddr_reg:x3; val_offset:1590*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1590*FLEN/8, x4, x1, x2)

inst_796:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1000fff; 
   valaddr_reg:x3; val_offset:1592*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1592*FLEN/8, x4, x1, x2)

inst_797:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1001fff; 
   valaddr_reg:x3; val_offset:1594*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1594*FLEN/8, x4, x1, x2)

inst_798:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1003fff; 
   valaddr_reg:x3; val_offset:1596*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1596*FLEN/8, x4, x1, x2)

inst_799:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1007fff; 
   valaddr_reg:x3; val_offset:1598*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1598*FLEN/8, x4, x1, x2)

inst_800:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x100ffff; 
   valaddr_reg:x3; val_offset:1600*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1600*FLEN/8, x4, x1, x2)

inst_801:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x101ffff; 
   valaddr_reg:x3; val_offset:1602*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1602*FLEN/8, x4, x1, x2)

inst_802:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x103ffff; 
   valaddr_reg:x3; val_offset:1604*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1604*FLEN/8, x4, x1, x2)

inst_803:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x107ffff; 
   valaddr_reg:x3; val_offset:1606*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1606*FLEN/8, x4, x1, x2)

inst_804:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x10fffff; 
   valaddr_reg:x3; val_offset:1608*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1608*FLEN/8, x4, x1, x2)

inst_805:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x11fffff; 
   valaddr_reg:x3; val_offset:1610*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1610*FLEN/8, x4, x1, x2)

inst_806:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x13fffff; 
   valaddr_reg:x3; val_offset:1612*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1612*FLEN/8, x4, x1, x2)

inst_807:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1400000; 
   valaddr_reg:x3; val_offset:1614*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1614*FLEN/8, x4, x1, x2)

inst_808:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1600000; 
   valaddr_reg:x3; val_offset:1616*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1616*FLEN/8, x4, x1, x2)

inst_809:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1700000; 
   valaddr_reg:x3; val_offset:1618*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1618*FLEN/8, x4, x1, x2)

inst_810:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1780000; 
   valaddr_reg:x3; val_offset:1620*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1620*FLEN/8, x4, x1, x2)

inst_811:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x17c0000; 
   valaddr_reg:x3; val_offset:1622*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1622*FLEN/8, x4, x1, x2)

inst_812:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x17e0000; 
   valaddr_reg:x3; val_offset:1624*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1624*FLEN/8, x4, x1, x2)

inst_813:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x17f0000; 
   valaddr_reg:x3; val_offset:1626*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1626*FLEN/8, x4, x1, x2)

inst_814:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x17f8000; 
   valaddr_reg:x3; val_offset:1628*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1628*FLEN/8, x4, x1, x2)

inst_815:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x17fc000; 
   valaddr_reg:x3; val_offset:1630*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1630*FLEN/8, x4, x1, x2)

inst_816:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x17fe000; 
   valaddr_reg:x3; val_offset:1632*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1632*FLEN/8, x4, x1, x2)

inst_817:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x17ff000; 
   valaddr_reg:x3; val_offset:1634*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1634*FLEN/8, x4, x1, x2)

inst_818:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x17ff800; 
   valaddr_reg:x3; val_offset:1636*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1636*FLEN/8, x4, x1, x2)

inst_819:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x17ffc00; 
   valaddr_reg:x3; val_offset:1638*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1638*FLEN/8, x4, x1, x2)

inst_820:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x17ffe00; 
   valaddr_reg:x3; val_offset:1640*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1640*FLEN/8, x4, x1, x2)

inst_821:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x17fff00; 
   valaddr_reg:x3; val_offset:1642*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1642*FLEN/8, x4, x1, x2)

inst_822:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x17fff80; 
   valaddr_reg:x3; val_offset:1644*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1644*FLEN/8, x4, x1, x2)

inst_823:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x17fffc0; 
   valaddr_reg:x3; val_offset:1646*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1646*FLEN/8, x4, x1, x2)

inst_824:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x17fffe0; 
   valaddr_reg:x3; val_offset:1648*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1648*FLEN/8, x4, x1, x2)

inst_825:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x17ffff0; 
   valaddr_reg:x3; val_offset:1650*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1650*FLEN/8, x4, x1, x2)

inst_826:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x17ffff8; 
   valaddr_reg:x3; val_offset:1652*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1652*FLEN/8, x4, x1, x2)

inst_827:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x17ffffc; 
   valaddr_reg:x3; val_offset:1654*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1654*FLEN/8, x4, x1, x2)

inst_828:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x17ffffe; 
   valaddr_reg:x3; val_offset:1656*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1656*FLEN/8, x4, x1, x2)

inst_829:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x17fffff; 
   valaddr_reg:x3; val_offset:1658*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1658*FLEN/8, x4, x1, x2)

inst_830:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1800000; 
   valaddr_reg:x3; val_offset:1660*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1660*FLEN/8, x4, x1, x2)

inst_831:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1800001; 
   valaddr_reg:x3; val_offset:1662*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1662*FLEN/8, x4, x1, x2)

inst_832:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1800003; 
   valaddr_reg:x3; val_offset:1664*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1664*FLEN/8, x4, x1, x2)

inst_833:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1800007; 
   valaddr_reg:x3; val_offset:1666*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1666*FLEN/8, x4, x1, x2)

inst_834:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x180000f; 
   valaddr_reg:x3; val_offset:1668*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1668*FLEN/8, x4, x1, x2)

inst_835:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x180001f; 
   valaddr_reg:x3; val_offset:1670*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1670*FLEN/8, x4, x1, x2)

inst_836:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x180003f; 
   valaddr_reg:x3; val_offset:1672*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1672*FLEN/8, x4, x1, x2)

inst_837:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x180007f; 
   valaddr_reg:x3; val_offset:1674*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1674*FLEN/8, x4, x1, x2)

inst_838:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x18000ff; 
   valaddr_reg:x3; val_offset:1676*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1676*FLEN/8, x4, x1, x2)

inst_839:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x18001ff; 
   valaddr_reg:x3; val_offset:1678*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1678*FLEN/8, x4, x1, x2)

inst_840:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x18003ff; 
   valaddr_reg:x3; val_offset:1680*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1680*FLEN/8, x4, x1, x2)

inst_841:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x18007ff; 
   valaddr_reg:x3; val_offset:1682*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1682*FLEN/8, x4, x1, x2)

inst_842:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1800fff; 
   valaddr_reg:x3; val_offset:1684*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1684*FLEN/8, x4, x1, x2)

inst_843:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1801fff; 
   valaddr_reg:x3; val_offset:1686*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1686*FLEN/8, x4, x1, x2)

inst_844:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1803fff; 
   valaddr_reg:x3; val_offset:1688*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1688*FLEN/8, x4, x1, x2)

inst_845:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1807fff; 
   valaddr_reg:x3; val_offset:1690*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1690*FLEN/8, x4, x1, x2)

inst_846:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x180ffff; 
   valaddr_reg:x3; val_offset:1692*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1692*FLEN/8, x4, x1, x2)

inst_847:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x181ffff; 
   valaddr_reg:x3; val_offset:1694*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1694*FLEN/8, x4, x1, x2)

inst_848:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x183ffff; 
   valaddr_reg:x3; val_offset:1696*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1696*FLEN/8, x4, x1, x2)

inst_849:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x187ffff; 
   valaddr_reg:x3; val_offset:1698*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1698*FLEN/8, x4, x1, x2)

inst_850:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x18fffff; 
   valaddr_reg:x3; val_offset:1700*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1700*FLEN/8, x4, x1, x2)

inst_851:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x19fffff; 
   valaddr_reg:x3; val_offset:1702*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1702*FLEN/8, x4, x1, x2)

inst_852:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1bfffff; 
   valaddr_reg:x3; val_offset:1704*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1704*FLEN/8, x4, x1, x2)

inst_853:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1c00000; 
   valaddr_reg:x3; val_offset:1706*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1706*FLEN/8, x4, x1, x2)

inst_854:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1e00000; 
   valaddr_reg:x3; val_offset:1708*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1708*FLEN/8, x4, x1, x2)

inst_855:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1f00000; 
   valaddr_reg:x3; val_offset:1710*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1710*FLEN/8, x4, x1, x2)

inst_856:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1f80000; 
   valaddr_reg:x3; val_offset:1712*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1712*FLEN/8, x4, x1, x2)

inst_857:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1fc0000; 
   valaddr_reg:x3; val_offset:1714*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1714*FLEN/8, x4, x1, x2)

inst_858:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1fe0000; 
   valaddr_reg:x3; val_offset:1716*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1716*FLEN/8, x4, x1, x2)

inst_859:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1ff0000; 
   valaddr_reg:x3; val_offset:1718*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1718*FLEN/8, x4, x1, x2)

inst_860:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1ff8000; 
   valaddr_reg:x3; val_offset:1720*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1720*FLEN/8, x4, x1, x2)

inst_861:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1ffc000; 
   valaddr_reg:x3; val_offset:1722*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1722*FLEN/8, x4, x1, x2)

inst_862:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1ffe000; 
   valaddr_reg:x3; val_offset:1724*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1724*FLEN/8, x4, x1, x2)

inst_863:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1fff000; 
   valaddr_reg:x3; val_offset:1726*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1726*FLEN/8, x4, x1, x2)

inst_864:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1fff800; 
   valaddr_reg:x3; val_offset:1728*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1728*FLEN/8, x4, x1, x2)

inst_865:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1fffc00; 
   valaddr_reg:x3; val_offset:1730*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1730*FLEN/8, x4, x1, x2)

inst_866:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1fffe00; 
   valaddr_reg:x3; val_offset:1732*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1732*FLEN/8, x4, x1, x2)

inst_867:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1ffff00; 
   valaddr_reg:x3; val_offset:1734*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1734*FLEN/8, x4, x1, x2)

inst_868:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1ffff80; 
   valaddr_reg:x3; val_offset:1736*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1736*FLEN/8, x4, x1, x2)

inst_869:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1ffffc0; 
   valaddr_reg:x3; val_offset:1738*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1738*FLEN/8, x4, x1, x2)

inst_870:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1ffffe0; 
   valaddr_reg:x3; val_offset:1740*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1740*FLEN/8, x4, x1, x2)

inst_871:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1fffff0; 
   valaddr_reg:x3; val_offset:1742*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1742*FLEN/8, x4, x1, x2)

inst_872:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1fffff8; 
   valaddr_reg:x3; val_offset:1744*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1744*FLEN/8, x4, x1, x2)

inst_873:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1fffffc; 
   valaddr_reg:x3; val_offset:1746*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1746*FLEN/8, x4, x1, x2)

inst_874:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1fffffe; 
   valaddr_reg:x3; val_offset:1748*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1748*FLEN/8, x4, x1, x2)

inst_875:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x1ffffff; 
   valaddr_reg:x3; val_offset:1750*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1750*FLEN/8, x4, x1, x2)

inst_876:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x43000000; 
   valaddr_reg:x3; val_offset:1752*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1752*FLEN/8, x4, x1, x2)

inst_877:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x43000001; 
   valaddr_reg:x3; val_offset:1754*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1754*FLEN/8, x4, x1, x2)

inst_878:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x43000003; 
   valaddr_reg:x3; val_offset:1756*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1756*FLEN/8, x4, x1, x2)

inst_879:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x43000007; 
   valaddr_reg:x3; val_offset:1758*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1758*FLEN/8, x4, x1, x2)

inst_880:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x4300000f; 
   valaddr_reg:x3; val_offset:1760*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1760*FLEN/8, x4, x1, x2)

inst_881:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x4300001f; 
   valaddr_reg:x3; val_offset:1762*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1762*FLEN/8, x4, x1, x2)

inst_882:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x4300003f; 
   valaddr_reg:x3; val_offset:1764*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1764*FLEN/8, x4, x1, x2)

inst_883:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x4300007f; 
   valaddr_reg:x3; val_offset:1766*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1766*FLEN/8, x4, x1, x2)

inst_884:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x430000ff; 
   valaddr_reg:x3; val_offset:1768*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1768*FLEN/8, x4, x1, x2)

inst_885:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x430001ff; 
   valaddr_reg:x3; val_offset:1770*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1770*FLEN/8, x4, x1, x2)

inst_886:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x430003ff; 
   valaddr_reg:x3; val_offset:1772*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1772*FLEN/8, x4, x1, x2)

inst_887:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x430007ff; 
   valaddr_reg:x3; val_offset:1774*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1774*FLEN/8, x4, x1, x2)

inst_888:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x43000fff; 
   valaddr_reg:x3; val_offset:1776*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1776*FLEN/8, x4, x1, x2)

inst_889:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x43001fff; 
   valaddr_reg:x3; val_offset:1778*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1778*FLEN/8, x4, x1, x2)

inst_890:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x43003fff; 
   valaddr_reg:x3; val_offset:1780*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1780*FLEN/8, x4, x1, x2)

inst_891:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x43007fff; 
   valaddr_reg:x3; val_offset:1782*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1782*FLEN/8, x4, x1, x2)

inst_892:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x4300ffff; 
   valaddr_reg:x3; val_offset:1784*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1784*FLEN/8, x4, x1, x2)

inst_893:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x4301ffff; 
   valaddr_reg:x3; val_offset:1786*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1786*FLEN/8, x4, x1, x2)

inst_894:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x4303ffff; 
   valaddr_reg:x3; val_offset:1788*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1788*FLEN/8, x4, x1, x2)

inst_895:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x4307ffff; 
   valaddr_reg:x3; val_offset:1790*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1790*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_8)

inst_896:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x430fffff; 
   valaddr_reg:x3; val_offset:1792*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1792*FLEN/8, x4, x1, x2)

inst_897:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x431fffff; 
   valaddr_reg:x3; val_offset:1794*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1794*FLEN/8, x4, x1, x2)

inst_898:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x433fffff; 
   valaddr_reg:x3; val_offset:1796*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1796*FLEN/8, x4, x1, x2)

inst_899:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x43400000; 
   valaddr_reg:x3; val_offset:1798*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1798*FLEN/8, x4, x1, x2)

inst_900:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x43600000; 
   valaddr_reg:x3; val_offset:1800*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1800*FLEN/8, x4, x1, x2)

inst_901:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x43700000; 
   valaddr_reg:x3; val_offset:1802*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1802*FLEN/8, x4, x1, x2)

inst_902:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x43780000; 
   valaddr_reg:x3; val_offset:1804*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1804*FLEN/8, x4, x1, x2)

inst_903:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x437c0000; 
   valaddr_reg:x3; val_offset:1806*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1806*FLEN/8, x4, x1, x2)

inst_904:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x437e0000; 
   valaddr_reg:x3; val_offset:1808*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1808*FLEN/8, x4, x1, x2)

inst_905:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x437f0000; 
   valaddr_reg:x3; val_offset:1810*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1810*FLEN/8, x4, x1, x2)

inst_906:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x437f8000; 
   valaddr_reg:x3; val_offset:1812*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1812*FLEN/8, x4, x1, x2)

inst_907:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x437fc000; 
   valaddr_reg:x3; val_offset:1814*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1814*FLEN/8, x4, x1, x2)

inst_908:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x437fe000; 
   valaddr_reg:x3; val_offset:1816*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1816*FLEN/8, x4, x1, x2)

inst_909:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x437ff000; 
   valaddr_reg:x3; val_offset:1818*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1818*FLEN/8, x4, x1, x2)

inst_910:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x437ff800; 
   valaddr_reg:x3; val_offset:1820*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1820*FLEN/8, x4, x1, x2)

inst_911:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x437ffc00; 
   valaddr_reg:x3; val_offset:1822*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1822*FLEN/8, x4, x1, x2)

inst_912:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x437ffe00; 
   valaddr_reg:x3; val_offset:1824*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1824*FLEN/8, x4, x1, x2)

inst_913:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x437fff00; 
   valaddr_reg:x3; val_offset:1826*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1826*FLEN/8, x4, x1, x2)

inst_914:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x437fff80; 
   valaddr_reg:x3; val_offset:1828*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1828*FLEN/8, x4, x1, x2)

inst_915:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x437fffc0; 
   valaddr_reg:x3; val_offset:1830*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1830*FLEN/8, x4, x1, x2)

inst_916:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x437fffe0; 
   valaddr_reg:x3; val_offset:1832*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1832*FLEN/8, x4, x1, x2)

inst_917:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x437ffff0; 
   valaddr_reg:x3; val_offset:1834*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1834*FLEN/8, x4, x1, x2)

inst_918:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x437ffff8; 
   valaddr_reg:x3; val_offset:1836*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1836*FLEN/8, x4, x1, x2)

inst_919:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x437ffffc; 
   valaddr_reg:x3; val_offset:1838*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1838*FLEN/8, x4, x1, x2)

inst_920:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x437ffffe; 
   valaddr_reg:x3; val_offset:1840*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1840*FLEN/8, x4, x1, x2)

inst_921:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x86 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7fffff; op2val:0x437fffff; 
   valaddr_reg:x3; val_offset:1842*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1842*FLEN/8, x4, x1, x2)

inst_922:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x0; 
   valaddr_reg:x3; val_offset:1844*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1844*FLEN/8, x4, x1, x2)

inst_923:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1; 
   valaddr_reg:x3; val_offset:1846*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1846*FLEN/8, x4, x1, x2)

inst_924:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x3; 
   valaddr_reg:x3; val_offset:1848*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1848*FLEN/8, x4, x1, x2)

inst_925:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x7; 
   valaddr_reg:x3; val_offset:1850*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1850*FLEN/8, x4, x1, x2)

inst_926:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xf; 
   valaddr_reg:x3; val_offset:1852*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1852*FLEN/8, x4, x1, x2)

inst_927:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1f; 
   valaddr_reg:x3; val_offset:1854*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1854*FLEN/8, x4, x1, x2)

inst_928:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x3f; 
   valaddr_reg:x3; val_offset:1856*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1856*FLEN/8, x4, x1, x2)

inst_929:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x7f; 
   valaddr_reg:x3; val_offset:1858*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1858*FLEN/8, x4, x1, x2)

inst_930:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xff; 
   valaddr_reg:x3; val_offset:1860*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1860*FLEN/8, x4, x1, x2)

inst_931:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1ff; 
   valaddr_reg:x3; val_offset:1862*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1862*FLEN/8, x4, x1, x2)

inst_932:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x3ff; 
   valaddr_reg:x3; val_offset:1864*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1864*FLEN/8, x4, x1, x2)

inst_933:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x7ff; 
   valaddr_reg:x3; val_offset:1866*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1866*FLEN/8, x4, x1, x2)

inst_934:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xfff; 
   valaddr_reg:x3; val_offset:1868*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1868*FLEN/8, x4, x1, x2)

inst_935:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1fff; 
   valaddr_reg:x3; val_offset:1870*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1870*FLEN/8, x4, x1, x2)

inst_936:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x3fff; 
   valaddr_reg:x3; val_offset:1872*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1872*FLEN/8, x4, x1, x2)

inst_937:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x7fff; 
   valaddr_reg:x3; val_offset:1874*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1874*FLEN/8, x4, x1, x2)

inst_938:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xffff; 
   valaddr_reg:x3; val_offset:1876*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1876*FLEN/8, x4, x1, x2)

inst_939:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1ffff; 
   valaddr_reg:x3; val_offset:1878*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1878*FLEN/8, x4, x1, x2)

inst_940:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x3ffff; 
   valaddr_reg:x3; val_offset:1880*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1880*FLEN/8, x4, x1, x2)

inst_941:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x7ffff; 
   valaddr_reg:x3; val_offset:1882*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1882*FLEN/8, x4, x1, x2)

inst_942:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xfffff; 
   valaddr_reg:x3; val_offset:1884*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1884*FLEN/8, x4, x1, x2)

inst_943:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1fffff; 
   valaddr_reg:x3; val_offset:1886*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1886*FLEN/8, x4, x1, x2)

inst_944:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x3fffff; 
   valaddr_reg:x3; val_offset:1888*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1888*FLEN/8, x4, x1, x2)

inst_945:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x400000; 
   valaddr_reg:x3; val_offset:1890*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1890*FLEN/8, x4, x1, x2)

inst_946:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x600000; 
   valaddr_reg:x3; val_offset:1892*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1892*FLEN/8, x4, x1, x2)

inst_947:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x700000; 
   valaddr_reg:x3; val_offset:1894*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1894*FLEN/8, x4, x1, x2)

inst_948:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x780000; 
   valaddr_reg:x3; val_offset:1896*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1896*FLEN/8, x4, x1, x2)

inst_949:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x7c0000; 
   valaddr_reg:x3; val_offset:1898*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1898*FLEN/8, x4, x1, x2)

inst_950:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x7e0000; 
   valaddr_reg:x3; val_offset:1900*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1900*FLEN/8, x4, x1, x2)

inst_951:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x7f0000; 
   valaddr_reg:x3; val_offset:1902*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1902*FLEN/8, x4, x1, x2)

inst_952:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x7f8000; 
   valaddr_reg:x3; val_offset:1904*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1904*FLEN/8, x4, x1, x2)

inst_953:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x7fc000; 
   valaddr_reg:x3; val_offset:1906*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1906*FLEN/8, x4, x1, x2)

inst_954:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x7fe000; 
   valaddr_reg:x3; val_offset:1908*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1908*FLEN/8, x4, x1, x2)

inst_955:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x7ff000; 
   valaddr_reg:x3; val_offset:1910*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1910*FLEN/8, x4, x1, x2)

inst_956:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x7ff800; 
   valaddr_reg:x3; val_offset:1912*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1912*FLEN/8, x4, x1, x2)

inst_957:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x7ffc00; 
   valaddr_reg:x3; val_offset:1914*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1914*FLEN/8, x4, x1, x2)

inst_958:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x7ffe00; 
   valaddr_reg:x3; val_offset:1916*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1916*FLEN/8, x4, x1, x2)

inst_959:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x7fff00; 
   valaddr_reg:x3; val_offset:1918*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1918*FLEN/8, x4, x1, x2)

inst_960:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x7fff80; 
   valaddr_reg:x3; val_offset:1920*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1920*FLEN/8, x4, x1, x2)

inst_961:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x7fffc0; 
   valaddr_reg:x3; val_offset:1922*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1922*FLEN/8, x4, x1, x2)

inst_962:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x7fffe0; 
   valaddr_reg:x3; val_offset:1924*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1924*FLEN/8, x4, x1, x2)

inst_963:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x7ffff0; 
   valaddr_reg:x3; val_offset:1926*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1926*FLEN/8, x4, x1, x2)

inst_964:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x7ffff8; 
   valaddr_reg:x3; val_offset:1928*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1928*FLEN/8, x4, x1, x2)

inst_965:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x7ffffc; 
   valaddr_reg:x3; val_offset:1930*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1930*FLEN/8, x4, x1, x2)

inst_966:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x7ffffe; 
   valaddr_reg:x3; val_offset:1932*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1932*FLEN/8, x4, x1, x2)

inst_967:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:1934*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1934*FLEN/8, x4, x1, x2)

inst_968:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:1936*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1936*FLEN/8, x4, x1, x2)

inst_969:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x800001; 
   valaddr_reg:x3; val_offset:1938*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1938*FLEN/8, x4, x1, x2)

inst_970:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x800003; 
   valaddr_reg:x3; val_offset:1940*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1940*FLEN/8, x4, x1, x2)

inst_971:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x800007; 
   valaddr_reg:x3; val_offset:1942*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1942*FLEN/8, x4, x1, x2)

inst_972:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x80000f; 
   valaddr_reg:x3; val_offset:1944*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1944*FLEN/8, x4, x1, x2)

inst_973:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x80001f; 
   valaddr_reg:x3; val_offset:1946*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1946*FLEN/8, x4, x1, x2)

inst_974:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x80003f; 
   valaddr_reg:x3; val_offset:1948*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1948*FLEN/8, x4, x1, x2)

inst_975:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x80007f; 
   valaddr_reg:x3; val_offset:1950*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1950*FLEN/8, x4, x1, x2)

inst_976:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x8000ff; 
   valaddr_reg:x3; val_offset:1952*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1952*FLEN/8, x4, x1, x2)

inst_977:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x8001ff; 
   valaddr_reg:x3; val_offset:1954*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1954*FLEN/8, x4, x1, x2)

inst_978:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x8003ff; 
   valaddr_reg:x3; val_offset:1956*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1956*FLEN/8, x4, x1, x2)

inst_979:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x8007ff; 
   valaddr_reg:x3; val_offset:1958*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1958*FLEN/8, x4, x1, x2)

inst_980:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x800fff; 
   valaddr_reg:x3; val_offset:1960*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1960*FLEN/8, x4, x1, x2)

inst_981:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x801fff; 
   valaddr_reg:x3; val_offset:1962*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1962*FLEN/8, x4, x1, x2)

inst_982:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x803fff; 
   valaddr_reg:x3; val_offset:1964*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1964*FLEN/8, x4, x1, x2)

inst_983:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x807fff; 
   valaddr_reg:x3; val_offset:1966*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1966*FLEN/8, x4, x1, x2)

inst_984:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x80ffff; 
   valaddr_reg:x3; val_offset:1968*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1968*FLEN/8, x4, x1, x2)

inst_985:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x81ffff; 
   valaddr_reg:x3; val_offset:1970*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1970*FLEN/8, x4, x1, x2)

inst_986:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x83ffff; 
   valaddr_reg:x3; val_offset:1972*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1972*FLEN/8, x4, x1, x2)

inst_987:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x87ffff; 
   valaddr_reg:x3; val_offset:1974*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1974*FLEN/8, x4, x1, x2)

inst_988:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x8fffff; 
   valaddr_reg:x3; val_offset:1976*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1976*FLEN/8, x4, x1, x2)

inst_989:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x999999; 
   valaddr_reg:x3; val_offset:1978*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1978*FLEN/8, x4, x1, x2)

inst_990:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x9fffff; 
   valaddr_reg:x3; val_offset:1980*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1980*FLEN/8, x4, x1, x2)

inst_991:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xa49249; 
   valaddr_reg:x3; val_offset:1982*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1982*FLEN/8, x4, x1, x2)

inst_992:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xb33333; 
   valaddr_reg:x3; val_offset:1984*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1984*FLEN/8, x4, x1, x2)

inst_993:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xb6db6d; 
   valaddr_reg:x3; val_offset:1986*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1986*FLEN/8, x4, x1, x2)

inst_994:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xbbbbbb; 
   valaddr_reg:x3; val_offset:1988*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1988*FLEN/8, x4, x1, x2)

inst_995:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xbfffff; 
   valaddr_reg:x3; val_offset:1990*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1990*FLEN/8, x4, x1, x2)

inst_996:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xc00000; 
   valaddr_reg:x3; val_offset:1992*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1992*FLEN/8, x4, x1, x2)

inst_997:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xc44444; 
   valaddr_reg:x3; val_offset:1994*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1994*FLEN/8, x4, x1, x2)

inst_998:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xcccccc; 
   valaddr_reg:x3; val_offset:1996*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1996*FLEN/8, x4, x1, x2)

inst_999:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xdb6db6; 
   valaddr_reg:x3; val_offset:1998*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 1998*FLEN/8, x4, x1, x2)

inst_1000:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xe00000; 
   valaddr_reg:x3; val_offset:2000*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2000*FLEN/8, x4, x1, x2)

inst_1001:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xe66666; 
   valaddr_reg:x3; val_offset:2002*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2002*FLEN/8, x4, x1, x2)

inst_1002:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xedb6db; 
   valaddr_reg:x3; val_offset:2004*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2004*FLEN/8, x4, x1, x2)

inst_1003:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xf00000; 
   valaddr_reg:x3; val_offset:2006*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2006*FLEN/8, x4, x1, x2)

inst_1004:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xf80000; 
   valaddr_reg:x3; val_offset:2008*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2008*FLEN/8, x4, x1, x2)

inst_1005:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xfc0000; 
   valaddr_reg:x3; val_offset:2010*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2010*FLEN/8, x4, x1, x2)

inst_1006:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xfe0000; 
   valaddr_reg:x3; val_offset:2012*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2012*FLEN/8, x4, x1, x2)

inst_1007:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xff0000; 
   valaddr_reg:x3; val_offset:2014*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2014*FLEN/8, x4, x1, x2)

inst_1008:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xff8000; 
   valaddr_reg:x3; val_offset:2016*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2016*FLEN/8, x4, x1, x2)

inst_1009:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xffc000; 
   valaddr_reg:x3; val_offset:2018*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2018*FLEN/8, x4, x1, x2)

inst_1010:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xffe000; 
   valaddr_reg:x3; val_offset:2020*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2020*FLEN/8, x4, x1, x2)

inst_1011:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xfff000; 
   valaddr_reg:x3; val_offset:2022*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2022*FLEN/8, x4, x1, x2)

inst_1012:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xfff800; 
   valaddr_reg:x3; val_offset:2024*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2024*FLEN/8, x4, x1, x2)

inst_1013:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xfffc00; 
   valaddr_reg:x3; val_offset:2026*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2026*FLEN/8, x4, x1, x2)

inst_1014:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xfffe00; 
   valaddr_reg:x3; val_offset:2028*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2028*FLEN/8, x4, x1, x2)

inst_1015:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xffff00; 
   valaddr_reg:x3; val_offset:2030*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2030*FLEN/8, x4, x1, x2)

inst_1016:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xffff80; 
   valaddr_reg:x3; val_offset:2032*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2032*FLEN/8, x4, x1, x2)

inst_1017:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xffffc0; 
   valaddr_reg:x3; val_offset:2034*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2034*FLEN/8, x4, x1, x2)

inst_1018:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xffffe0; 
   valaddr_reg:x3; val_offset:2036*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2036*FLEN/8, x4, x1, x2)

inst_1019:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xfffff0; 
   valaddr_reg:x3; val_offset:2038*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2038*FLEN/8, x4, x1, x2)

inst_1020:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xfffff8; 
   valaddr_reg:x3; val_offset:2040*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2040*FLEN/8, x4, x1, x2)

inst_1021:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xfffffc; 
   valaddr_reg:x3; val_offset:2042*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2042*FLEN/8, x4, x1, x2)

inst_1022:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xfffffe; 
   valaddr_reg:x3; val_offset:2044*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2044*FLEN/8, x4, x1, x2)

inst_1023:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0xffffff; 
   valaddr_reg:x3; val_offset:2046*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2046*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_9)

inst_1024:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1000000; 
   valaddr_reg:x3; val_offset:2048*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2048*FLEN/8, x4, x1, x2)

inst_1025:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1000001; 
   valaddr_reg:x3; val_offset:2050*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2050*FLEN/8, x4, x1, x2)

inst_1026:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1000003; 
   valaddr_reg:x3; val_offset:2052*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2052*FLEN/8, x4, x1, x2)

inst_1027:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1000007; 
   valaddr_reg:x3; val_offset:2054*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2054*FLEN/8, x4, x1, x2)

inst_1028:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x100000f; 
   valaddr_reg:x3; val_offset:2056*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2056*FLEN/8, x4, x1, x2)

inst_1029:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x100001f; 
   valaddr_reg:x3; val_offset:2058*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2058*FLEN/8, x4, x1, x2)

inst_1030:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x100003f; 
   valaddr_reg:x3; val_offset:2060*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2060*FLEN/8, x4, x1, x2)

inst_1031:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x100007f; 
   valaddr_reg:x3; val_offset:2062*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2062*FLEN/8, x4, x1, x2)

inst_1032:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x10000ff; 
   valaddr_reg:x3; val_offset:2064*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2064*FLEN/8, x4, x1, x2)

inst_1033:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x10001ff; 
   valaddr_reg:x3; val_offset:2066*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2066*FLEN/8, x4, x1, x2)

inst_1034:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x10003ff; 
   valaddr_reg:x3; val_offset:2068*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2068*FLEN/8, x4, x1, x2)

inst_1035:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x10007ff; 
   valaddr_reg:x3; val_offset:2070*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2070*FLEN/8, x4, x1, x2)

inst_1036:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1000fff; 
   valaddr_reg:x3; val_offset:2072*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2072*FLEN/8, x4, x1, x2)

inst_1037:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1001fff; 
   valaddr_reg:x3; val_offset:2074*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2074*FLEN/8, x4, x1, x2)

inst_1038:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1003fff; 
   valaddr_reg:x3; val_offset:2076*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2076*FLEN/8, x4, x1, x2)

inst_1039:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1007fff; 
   valaddr_reg:x3; val_offset:2078*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2078*FLEN/8, x4, x1, x2)

inst_1040:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x100ffff; 
   valaddr_reg:x3; val_offset:2080*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2080*FLEN/8, x4, x1, x2)

inst_1041:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x101ffff; 
   valaddr_reg:x3; val_offset:2082*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2082*FLEN/8, x4, x1, x2)

inst_1042:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x103ffff; 
   valaddr_reg:x3; val_offset:2084*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2084*FLEN/8, x4, x1, x2)

inst_1043:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x107ffff; 
   valaddr_reg:x3; val_offset:2086*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2086*FLEN/8, x4, x1, x2)

inst_1044:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x10fffff; 
   valaddr_reg:x3; val_offset:2088*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2088*FLEN/8, x4, x1, x2)

inst_1045:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x11fffff; 
   valaddr_reg:x3; val_offset:2090*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2090*FLEN/8, x4, x1, x2)

inst_1046:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x13fffff; 
   valaddr_reg:x3; val_offset:2092*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2092*FLEN/8, x4, x1, x2)

inst_1047:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1400000; 
   valaddr_reg:x3; val_offset:2094*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2094*FLEN/8, x4, x1, x2)

inst_1048:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1600000; 
   valaddr_reg:x3; val_offset:2096*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2096*FLEN/8, x4, x1, x2)

inst_1049:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1700000; 
   valaddr_reg:x3; val_offset:2098*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2098*FLEN/8, x4, x1, x2)

inst_1050:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1780000; 
   valaddr_reg:x3; val_offset:2100*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2100*FLEN/8, x4, x1, x2)

inst_1051:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x17c0000; 
   valaddr_reg:x3; val_offset:2102*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2102*FLEN/8, x4, x1, x2)

inst_1052:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x17e0000; 
   valaddr_reg:x3; val_offset:2104*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2104*FLEN/8, x4, x1, x2)

inst_1053:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x17f0000; 
   valaddr_reg:x3; val_offset:2106*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2106*FLEN/8, x4, x1, x2)

inst_1054:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x17f8000; 
   valaddr_reg:x3; val_offset:2108*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2108*FLEN/8, x4, x1, x2)

inst_1055:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x17fc000; 
   valaddr_reg:x3; val_offset:2110*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2110*FLEN/8, x4, x1, x2)

inst_1056:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x17fe000; 
   valaddr_reg:x3; val_offset:2112*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2112*FLEN/8, x4, x1, x2)

inst_1057:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x17ff000; 
   valaddr_reg:x3; val_offset:2114*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2114*FLEN/8, x4, x1, x2)

inst_1058:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x17ff800; 
   valaddr_reg:x3; val_offset:2116*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2116*FLEN/8, x4, x1, x2)

inst_1059:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x17ffc00; 
   valaddr_reg:x3; val_offset:2118*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2118*FLEN/8, x4, x1, x2)

inst_1060:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x17ffe00; 
   valaddr_reg:x3; val_offset:2120*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2120*FLEN/8, x4, x1, x2)

inst_1061:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x17fff00; 
   valaddr_reg:x3; val_offset:2122*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2122*FLEN/8, x4, x1, x2)

inst_1062:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x17fff80; 
   valaddr_reg:x3; val_offset:2124*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2124*FLEN/8, x4, x1, x2)

inst_1063:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x17fffc0; 
   valaddr_reg:x3; val_offset:2126*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2126*FLEN/8, x4, x1, x2)

inst_1064:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x17fffe0; 
   valaddr_reg:x3; val_offset:2128*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2128*FLEN/8, x4, x1, x2)

inst_1065:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x17ffff0; 
   valaddr_reg:x3; val_offset:2130*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2130*FLEN/8, x4, x1, x2)

inst_1066:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x17ffff8; 
   valaddr_reg:x3; val_offset:2132*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2132*FLEN/8, x4, x1, x2)

inst_1067:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x17ffffc; 
   valaddr_reg:x3; val_offset:2134*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2134*FLEN/8, x4, x1, x2)

inst_1068:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x17ffffe; 
   valaddr_reg:x3; val_offset:2136*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2136*FLEN/8, x4, x1, x2)

inst_1069:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x17fffff; 
   valaddr_reg:x3; val_offset:2138*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2138*FLEN/8, x4, x1, x2)

inst_1070:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1800000; 
   valaddr_reg:x3; val_offset:2140*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2140*FLEN/8, x4, x1, x2)

inst_1071:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1800001; 
   valaddr_reg:x3; val_offset:2142*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2142*FLEN/8, x4, x1, x2)

inst_1072:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1800003; 
   valaddr_reg:x3; val_offset:2144*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2144*FLEN/8, x4, x1, x2)

inst_1073:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1800007; 
   valaddr_reg:x3; val_offset:2146*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2146*FLEN/8, x4, x1, x2)

inst_1074:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x180000f; 
   valaddr_reg:x3; val_offset:2148*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2148*FLEN/8, x4, x1, x2)

inst_1075:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x180001f; 
   valaddr_reg:x3; val_offset:2150*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2150*FLEN/8, x4, x1, x2)

inst_1076:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x180003f; 
   valaddr_reg:x3; val_offset:2152*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2152*FLEN/8, x4, x1, x2)

inst_1077:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x180007f; 
   valaddr_reg:x3; val_offset:2154*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2154*FLEN/8, x4, x1, x2)

inst_1078:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x18000ff; 
   valaddr_reg:x3; val_offset:2156*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2156*FLEN/8, x4, x1, x2)

inst_1079:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x18001ff; 
   valaddr_reg:x3; val_offset:2158*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2158*FLEN/8, x4, x1, x2)

inst_1080:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x18003ff; 
   valaddr_reg:x3; val_offset:2160*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2160*FLEN/8, x4, x1, x2)

inst_1081:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x18007ff; 
   valaddr_reg:x3; val_offset:2162*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2162*FLEN/8, x4, x1, x2)

inst_1082:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1800fff; 
   valaddr_reg:x3; val_offset:2164*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2164*FLEN/8, x4, x1, x2)

inst_1083:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1801fff; 
   valaddr_reg:x3; val_offset:2166*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2166*FLEN/8, x4, x1, x2)

inst_1084:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1803fff; 
   valaddr_reg:x3; val_offset:2168*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2168*FLEN/8, x4, x1, x2)

inst_1085:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1807fff; 
   valaddr_reg:x3; val_offset:2170*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2170*FLEN/8, x4, x1, x2)

inst_1086:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x180ffff; 
   valaddr_reg:x3; val_offset:2172*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2172*FLEN/8, x4, x1, x2)

inst_1087:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x181ffff; 
   valaddr_reg:x3; val_offset:2174*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2174*FLEN/8, x4, x1, x2)

inst_1088:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x183ffff; 
   valaddr_reg:x3; val_offset:2176*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2176*FLEN/8, x4, x1, x2)

inst_1089:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x187ffff; 
   valaddr_reg:x3; val_offset:2178*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2178*FLEN/8, x4, x1, x2)

inst_1090:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x18fffff; 
   valaddr_reg:x3; val_offset:2180*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2180*FLEN/8, x4, x1, x2)

inst_1091:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x19fffff; 
   valaddr_reg:x3; val_offset:2182*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2182*FLEN/8, x4, x1, x2)

inst_1092:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1bfffff; 
   valaddr_reg:x3; val_offset:2184*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2184*FLEN/8, x4, x1, x2)

inst_1093:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1c00000; 
   valaddr_reg:x3; val_offset:2186*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2186*FLEN/8, x4, x1, x2)

inst_1094:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1e00000; 
   valaddr_reg:x3; val_offset:2188*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2188*FLEN/8, x4, x1, x2)

inst_1095:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1f00000; 
   valaddr_reg:x3; val_offset:2190*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2190*FLEN/8, x4, x1, x2)

inst_1096:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1f80000; 
   valaddr_reg:x3; val_offset:2192*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2192*FLEN/8, x4, x1, x2)

inst_1097:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1fc0000; 
   valaddr_reg:x3; val_offset:2194*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2194*FLEN/8, x4, x1, x2)

inst_1098:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1fe0000; 
   valaddr_reg:x3; val_offset:2196*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2196*FLEN/8, x4, x1, x2)

inst_1099:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1ff0000; 
   valaddr_reg:x3; val_offset:2198*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2198*FLEN/8, x4, x1, x2)

inst_1100:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1ff8000; 
   valaddr_reg:x3; val_offset:2200*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2200*FLEN/8, x4, x1, x2)

inst_1101:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1ffc000; 
   valaddr_reg:x3; val_offset:2202*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2202*FLEN/8, x4, x1, x2)

inst_1102:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1ffe000; 
   valaddr_reg:x3; val_offset:2204*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2204*FLEN/8, x4, x1, x2)

inst_1103:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1fff000; 
   valaddr_reg:x3; val_offset:2206*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2206*FLEN/8, x4, x1, x2)

inst_1104:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1fff800; 
   valaddr_reg:x3; val_offset:2208*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2208*FLEN/8, x4, x1, x2)

inst_1105:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1fffc00; 
   valaddr_reg:x3; val_offset:2210*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2210*FLEN/8, x4, x1, x2)

inst_1106:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1fffe00; 
   valaddr_reg:x3; val_offset:2212*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2212*FLEN/8, x4, x1, x2)

inst_1107:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1ffff00; 
   valaddr_reg:x3; val_offset:2214*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2214*FLEN/8, x4, x1, x2)

inst_1108:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1ffff80; 
   valaddr_reg:x3; val_offset:2216*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2216*FLEN/8, x4, x1, x2)

inst_1109:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1ffffc0; 
   valaddr_reg:x3; val_offset:2218*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2218*FLEN/8, x4, x1, x2)

inst_1110:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1ffffe0; 
   valaddr_reg:x3; val_offset:2220*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2220*FLEN/8, x4, x1, x2)

inst_1111:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1fffff0; 
   valaddr_reg:x3; val_offset:2222*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2222*FLEN/8, x4, x1, x2)

inst_1112:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1fffff8; 
   valaddr_reg:x3; val_offset:2224*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2224*FLEN/8, x4, x1, x2)

inst_1113:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1fffffc; 
   valaddr_reg:x3; val_offset:2226*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2226*FLEN/8, x4, x1, x2)

inst_1114:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1fffffe; 
   valaddr_reg:x3; val_offset:2228*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2228*FLEN/8, x4, x1, x2)

inst_1115:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x1ffffff; 
   valaddr_reg:x3; val_offset:2230*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2230*FLEN/8, x4, x1, x2)

inst_1116:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x2000000; 
   valaddr_reg:x3; val_offset:2232*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2232*FLEN/8, x4, x1, x2)

inst_1117:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x2000001; 
   valaddr_reg:x3; val_offset:2234*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2234*FLEN/8, x4, x1, x2)

inst_1118:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x2000003; 
   valaddr_reg:x3; val_offset:2236*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2236*FLEN/8, x4, x1, x2)

inst_1119:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x2000007; 
   valaddr_reg:x3; val_offset:2238*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2238*FLEN/8, x4, x1, x2)

inst_1120:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x200000f; 
   valaddr_reg:x3; val_offset:2240*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2240*FLEN/8, x4, x1, x2)

inst_1121:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x200001f; 
   valaddr_reg:x3; val_offset:2242*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2242*FLEN/8, x4, x1, x2)

inst_1122:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x200003f; 
   valaddr_reg:x3; val_offset:2244*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2244*FLEN/8, x4, x1, x2)

inst_1123:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x200007f; 
   valaddr_reg:x3; val_offset:2246*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2246*FLEN/8, x4, x1, x2)

inst_1124:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x20000ff; 
   valaddr_reg:x3; val_offset:2248*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2248*FLEN/8, x4, x1, x2)

inst_1125:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x20001ff; 
   valaddr_reg:x3; val_offset:2250*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2250*FLEN/8, x4, x1, x2)

inst_1126:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x20003ff; 
   valaddr_reg:x3; val_offset:2252*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2252*FLEN/8, x4, x1, x2)

inst_1127:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x20007ff; 
   valaddr_reg:x3; val_offset:2254*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2254*FLEN/8, x4, x1, x2)

inst_1128:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x2000fff; 
   valaddr_reg:x3; val_offset:2256*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2256*FLEN/8, x4, x1, x2)

inst_1129:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x2001fff; 
   valaddr_reg:x3; val_offset:2258*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2258*FLEN/8, x4, x1, x2)

inst_1130:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x2003fff; 
   valaddr_reg:x3; val_offset:2260*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2260*FLEN/8, x4, x1, x2)

inst_1131:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x2007fff; 
   valaddr_reg:x3; val_offset:2262*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2262*FLEN/8, x4, x1, x2)

inst_1132:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x200ffff; 
   valaddr_reg:x3; val_offset:2264*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2264*FLEN/8, x4, x1, x2)

inst_1133:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x201ffff; 
   valaddr_reg:x3; val_offset:2266*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2266*FLEN/8, x4, x1, x2)

inst_1134:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x203ffff; 
   valaddr_reg:x3; val_offset:2268*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2268*FLEN/8, x4, x1, x2)

inst_1135:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x207ffff; 
   valaddr_reg:x3; val_offset:2270*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2270*FLEN/8, x4, x1, x2)

inst_1136:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x20fffff; 
   valaddr_reg:x3; val_offset:2272*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2272*FLEN/8, x4, x1, x2)

inst_1137:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x21fffff; 
   valaddr_reg:x3; val_offset:2274*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2274*FLEN/8, x4, x1, x2)

inst_1138:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x23fffff; 
   valaddr_reg:x3; val_offset:2276*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2276*FLEN/8, x4, x1, x2)

inst_1139:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x2400000; 
   valaddr_reg:x3; val_offset:2278*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2278*FLEN/8, x4, x1, x2)

inst_1140:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x2600000; 
   valaddr_reg:x3; val_offset:2280*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2280*FLEN/8, x4, x1, x2)

inst_1141:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x2700000; 
   valaddr_reg:x3; val_offset:2282*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2282*FLEN/8, x4, x1, x2)

inst_1142:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x2780000; 
   valaddr_reg:x3; val_offset:2284*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2284*FLEN/8, x4, x1, x2)

inst_1143:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x27c0000; 
   valaddr_reg:x3; val_offset:2286*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2286*FLEN/8, x4, x1, x2)

inst_1144:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x27e0000; 
   valaddr_reg:x3; val_offset:2288*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2288*FLEN/8, x4, x1, x2)

inst_1145:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x27f0000; 
   valaddr_reg:x3; val_offset:2290*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2290*FLEN/8, x4, x1, x2)

inst_1146:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x27f8000; 
   valaddr_reg:x3; val_offset:2292*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2292*FLEN/8, x4, x1, x2)

inst_1147:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x27fc000; 
   valaddr_reg:x3; val_offset:2294*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2294*FLEN/8, x4, x1, x2)

inst_1148:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x27fe000; 
   valaddr_reg:x3; val_offset:2296*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2296*FLEN/8, x4, x1, x2)

inst_1149:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x27ff000; 
   valaddr_reg:x3; val_offset:2298*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2298*FLEN/8, x4, x1, x2)

inst_1150:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x27ff800; 
   valaddr_reg:x3; val_offset:2300*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2300*FLEN/8, x4, x1, x2)

inst_1151:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x27ffc00; 
   valaddr_reg:x3; val_offset:2302*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2302*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_10)

inst_1152:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x27ffe00; 
   valaddr_reg:x3; val_offset:2304*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2304*FLEN/8, x4, x1, x2)

inst_1153:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x27fff00; 
   valaddr_reg:x3; val_offset:2306*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2306*FLEN/8, x4, x1, x2)

inst_1154:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x27fff80; 
   valaddr_reg:x3; val_offset:2308*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2308*FLEN/8, x4, x1, x2)

inst_1155:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x27fffc0; 
   valaddr_reg:x3; val_offset:2310*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2310*FLEN/8, x4, x1, x2)

inst_1156:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x27fffe0; 
   valaddr_reg:x3; val_offset:2312*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2312*FLEN/8, x4, x1, x2)

inst_1157:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x27ffff0; 
   valaddr_reg:x3; val_offset:2314*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2314*FLEN/8, x4, x1, x2)

inst_1158:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x27ffff8; 
   valaddr_reg:x3; val_offset:2316*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2316*FLEN/8, x4, x1, x2)

inst_1159:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x27ffffc; 
   valaddr_reg:x3; val_offset:2318*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2318*FLEN/8, x4, x1, x2)

inst_1160:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x27ffffe; 
   valaddr_reg:x3; val_offset:2320*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2320*FLEN/8, x4, x1, x2)

inst_1161:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x27fffff; 
   valaddr_reg:x3; val_offset:2322*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2322*FLEN/8, x4, x1, x2)

inst_1162:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x36000000; 
   valaddr_reg:x3; val_offset:2324*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2324*FLEN/8, x4, x1, x2)

inst_1163:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x36000001; 
   valaddr_reg:x3; val_offset:2326*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2326*FLEN/8, x4, x1, x2)

inst_1164:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x36000003; 
   valaddr_reg:x3; val_offset:2328*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2328*FLEN/8, x4, x1, x2)

inst_1165:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x36000007; 
   valaddr_reg:x3; val_offset:2330*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2330*FLEN/8, x4, x1, x2)

inst_1166:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x3600000f; 
   valaddr_reg:x3; val_offset:2332*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2332*FLEN/8, x4, x1, x2)

inst_1167:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x3600001f; 
   valaddr_reg:x3; val_offset:2334*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2334*FLEN/8, x4, x1, x2)

inst_1168:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x3600003f; 
   valaddr_reg:x3; val_offset:2336*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2336*FLEN/8, x4, x1, x2)

inst_1169:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x3600007f; 
   valaddr_reg:x3; val_offset:2338*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2338*FLEN/8, x4, x1, x2)

inst_1170:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x360000ff; 
   valaddr_reg:x3; val_offset:2340*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2340*FLEN/8, x4, x1, x2)

inst_1171:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x360001ff; 
   valaddr_reg:x3; val_offset:2342*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2342*FLEN/8, x4, x1, x2)

inst_1172:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x360003ff; 
   valaddr_reg:x3; val_offset:2344*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2344*FLEN/8, x4, x1, x2)

inst_1173:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x360007ff; 
   valaddr_reg:x3; val_offset:2346*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2346*FLEN/8, x4, x1, x2)

inst_1174:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x36000fff; 
   valaddr_reg:x3; val_offset:2348*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2348*FLEN/8, x4, x1, x2)

inst_1175:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x36001fff; 
   valaddr_reg:x3; val_offset:2350*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2350*FLEN/8, x4, x1, x2)

inst_1176:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x36003fff; 
   valaddr_reg:x3; val_offset:2352*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2352*FLEN/8, x4, x1, x2)

inst_1177:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x36007fff; 
   valaddr_reg:x3; val_offset:2354*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2354*FLEN/8, x4, x1, x2)

inst_1178:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x3600ffff; 
   valaddr_reg:x3; val_offset:2356*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2356*FLEN/8, x4, x1, x2)

inst_1179:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x3601ffff; 
   valaddr_reg:x3; val_offset:2358*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2358*FLEN/8, x4, x1, x2)

inst_1180:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x3603ffff; 
   valaddr_reg:x3; val_offset:2360*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2360*FLEN/8, x4, x1, x2)

inst_1181:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x3607ffff; 
   valaddr_reg:x3; val_offset:2362*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2362*FLEN/8, x4, x1, x2)

inst_1182:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x360fffff; 
   valaddr_reg:x3; val_offset:2364*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2364*FLEN/8, x4, x1, x2)

inst_1183:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x361fffff; 
   valaddr_reg:x3; val_offset:2366*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2366*FLEN/8, x4, x1, x2)

inst_1184:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x363fffff; 
   valaddr_reg:x3; val_offset:2368*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2368*FLEN/8, x4, x1, x2)

inst_1185:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x36400000; 
   valaddr_reg:x3; val_offset:2370*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2370*FLEN/8, x4, x1, x2)

inst_1186:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x36600000; 
   valaddr_reg:x3; val_offset:2372*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2372*FLEN/8, x4, x1, x2)

inst_1187:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x36700000; 
   valaddr_reg:x3; val_offset:2374*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2374*FLEN/8, x4, x1, x2)

inst_1188:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x36780000; 
   valaddr_reg:x3; val_offset:2376*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2376*FLEN/8, x4, x1, x2)

inst_1189:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x367c0000; 
   valaddr_reg:x3; val_offset:2378*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2378*FLEN/8, x4, x1, x2)

inst_1190:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x367e0000; 
   valaddr_reg:x3; val_offset:2380*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2380*FLEN/8, x4, x1, x2)

inst_1191:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x367f0000; 
   valaddr_reg:x3; val_offset:2382*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2382*FLEN/8, x4, x1, x2)

inst_1192:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x367f8000; 
   valaddr_reg:x3; val_offset:2384*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2384*FLEN/8, x4, x1, x2)

inst_1193:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x367fc000; 
   valaddr_reg:x3; val_offset:2386*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2386*FLEN/8, x4, x1, x2)

inst_1194:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x367fe000; 
   valaddr_reg:x3; val_offset:2388*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2388*FLEN/8, x4, x1, x2)

inst_1195:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x367ff000; 
   valaddr_reg:x3; val_offset:2390*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2390*FLEN/8, x4, x1, x2)

inst_1196:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x367ff800; 
   valaddr_reg:x3; val_offset:2392*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2392*FLEN/8, x4, x1, x2)

inst_1197:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x367ffc00; 
   valaddr_reg:x3; val_offset:2394*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2394*FLEN/8, x4, x1, x2)

inst_1198:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x367ffe00; 
   valaddr_reg:x3; val_offset:2396*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2396*FLEN/8, x4, x1, x2)

inst_1199:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x367fff00; 
   valaddr_reg:x3; val_offset:2398*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2398*FLEN/8, x4, x1, x2)

inst_1200:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x367fff80; 
   valaddr_reg:x3; val_offset:2400*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2400*FLEN/8, x4, x1, x2)

inst_1201:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x367fffc0; 
   valaddr_reg:x3; val_offset:2402*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2402*FLEN/8, x4, x1, x2)

inst_1202:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x367fffe0; 
   valaddr_reg:x3; val_offset:2404*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2404*FLEN/8, x4, x1, x2)

inst_1203:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x367ffff0; 
   valaddr_reg:x3; val_offset:2406*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2406*FLEN/8, x4, x1, x2)

inst_1204:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x367ffff8; 
   valaddr_reg:x3; val_offset:2408*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2408*FLEN/8, x4, x1, x2)

inst_1205:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x367ffffc; 
   valaddr_reg:x3; val_offset:2410*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2410*FLEN/8, x4, x1, x2)

inst_1206:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x367ffffe; 
   valaddr_reg:x3; val_offset:2412*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2412*FLEN/8, x4, x1, x2)

inst_1207:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000; op2val:0x367fffff; 
   valaddr_reg:x3; val_offset:2414*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2414*FLEN/8, x4, x1, x2)

inst_1208:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800001; op2val:0x0; 
   valaddr_reg:x3; val_offset:2416*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2416*FLEN/8, x4, x1, x2)

inst_1209:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800001; op2val:0x1; 
   valaddr_reg:x3; val_offset:2418*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2418*FLEN/8, x4, x1, x2)

inst_1210:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800001; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2420*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2420*FLEN/8, x4, x1, x2)

inst_1211:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800001; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2422*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2422*FLEN/8, x4, x1, x2)

inst_1212:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800003; op2val:0x0; 
   valaddr_reg:x3; val_offset:2424*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2424*FLEN/8, x4, x1, x2)

inst_1213:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800003; op2val:0x1; 
   valaddr_reg:x3; val_offset:2426*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2426*FLEN/8, x4, x1, x2)

inst_1214:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800003; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2428*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2428*FLEN/8, x4, x1, x2)

inst_1215:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800003; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2430*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2430*FLEN/8, x4, x1, x2)

inst_1216:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800007; op2val:0x0; 
   valaddr_reg:x3; val_offset:2432*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2432*FLEN/8, x4, x1, x2)

inst_1217:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800007; op2val:0x1; 
   valaddr_reg:x3; val_offset:2434*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2434*FLEN/8, x4, x1, x2)

inst_1218:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800007; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2436*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2436*FLEN/8, x4, x1, x2)

inst_1219:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800007; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2438*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2438*FLEN/8, x4, x1, x2)

inst_1220:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000f; op2val:0x0; 
   valaddr_reg:x3; val_offset:2440*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2440*FLEN/8, x4, x1, x2)

inst_1221:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000f; op2val:0x1; 
   valaddr_reg:x3; val_offset:2442*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2442*FLEN/8, x4, x1, x2)

inst_1222:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000f; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2444*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2444*FLEN/8, x4, x1, x2)

inst_1223:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000f; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2446*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2446*FLEN/8, x4, x1, x2)

inst_1224:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80001f; op2val:0x0; 
   valaddr_reg:x3; val_offset:2448*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2448*FLEN/8, x4, x1, x2)

inst_1225:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80001f; op2val:0x1; 
   valaddr_reg:x3; val_offset:2450*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2450*FLEN/8, x4, x1, x2)

inst_1226:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80001f; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2452*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2452*FLEN/8, x4, x1, x2)

inst_1227:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80001f; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2454*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2454*FLEN/8, x4, x1, x2)

inst_1228:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80003f; op2val:0x0; 
   valaddr_reg:x3; val_offset:2456*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2456*FLEN/8, x4, x1, x2)

inst_1229:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80003f; op2val:0x1; 
   valaddr_reg:x3; val_offset:2458*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2458*FLEN/8, x4, x1, x2)

inst_1230:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80003f; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2460*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2460*FLEN/8, x4, x1, x2)

inst_1231:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80003f; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2462*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2462*FLEN/8, x4, x1, x2)

inst_1232:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00007f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80007f; op2val:0x0; 
   valaddr_reg:x3; val_offset:2464*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2464*FLEN/8, x4, x1, x2)

inst_1233:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00007f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80007f; op2val:0x1; 
   valaddr_reg:x3; val_offset:2466*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2466*FLEN/8, x4, x1, x2)

inst_1234:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00007f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80007f; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2468*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2468*FLEN/8, x4, x1, x2)

inst_1235:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00007f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80007f; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2470*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2470*FLEN/8, x4, x1, x2)

inst_1236:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8000ff; op2val:0x0; 
   valaddr_reg:x3; val_offset:2472*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2472*FLEN/8, x4, x1, x2)

inst_1237:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8000ff; op2val:0x1; 
   valaddr_reg:x3; val_offset:2474*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2474*FLEN/8, x4, x1, x2)

inst_1238:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8000ff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2476*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2476*FLEN/8, x4, x1, x2)

inst_1239:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8000ff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2478*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2478*FLEN/8, x4, x1, x2)

inst_1240:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8001ff; op2val:0x0; 
   valaddr_reg:x3; val_offset:2480*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2480*FLEN/8, x4, x1, x2)

inst_1241:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8001ff; op2val:0x1; 
   valaddr_reg:x3; val_offset:2482*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2482*FLEN/8, x4, x1, x2)

inst_1242:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8001ff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2484*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2484*FLEN/8, x4, x1, x2)

inst_1243:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8001ff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2486*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2486*FLEN/8, x4, x1, x2)

inst_1244:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8003ff; op2val:0x0; 
   valaddr_reg:x3; val_offset:2488*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2488*FLEN/8, x4, x1, x2)

inst_1245:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8003ff; op2val:0x1; 
   valaddr_reg:x3; val_offset:2490*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2490*FLEN/8, x4, x1, x2)

inst_1246:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8003ff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2492*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2492*FLEN/8, x4, x1, x2)

inst_1247:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8003ff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2494*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2494*FLEN/8, x4, x1, x2)

inst_1248:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8007ff; op2val:0x0; 
   valaddr_reg:x3; val_offset:2496*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2496*FLEN/8, x4, x1, x2)

inst_1249:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8007ff; op2val:0x1; 
   valaddr_reg:x3; val_offset:2498*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2498*FLEN/8, x4, x1, x2)

inst_1250:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8007ff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2500*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2500*FLEN/8, x4, x1, x2)

inst_1251:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8007ff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2502*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2502*FLEN/8, x4, x1, x2)

inst_1252:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800fff; op2val:0x0; 
   valaddr_reg:x3; val_offset:2504*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2504*FLEN/8, x4, x1, x2)

inst_1253:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800fff; op2val:0x1; 
   valaddr_reg:x3; val_offset:2506*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2506*FLEN/8, x4, x1, x2)

inst_1254:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800fff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2508*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2508*FLEN/8, x4, x1, x2)

inst_1255:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000fff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800fff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2510*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2510*FLEN/8, x4, x1, x2)

inst_1256:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x001fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x801fff; op2val:0x0; 
   valaddr_reg:x3; val_offset:2512*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2512*FLEN/8, x4, x1, x2)

inst_1257:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x001fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x801fff; op2val:0x1; 
   valaddr_reg:x3; val_offset:2514*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2514*FLEN/8, x4, x1, x2)

inst_1258:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x001fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x801fff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2516*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2516*FLEN/8, x4, x1, x2)

inst_1259:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x001fff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x801fff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2518*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2518*FLEN/8, x4, x1, x2)

inst_1260:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x003fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x803fff; op2val:0x0; 
   valaddr_reg:x3; val_offset:2520*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2520*FLEN/8, x4, x1, x2)

inst_1261:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x003fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x803fff; op2val:0x1; 
   valaddr_reg:x3; val_offset:2522*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2522*FLEN/8, x4, x1, x2)

inst_1262:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x003fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x803fff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2524*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2524*FLEN/8, x4, x1, x2)

inst_1263:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x003fff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x803fff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2526*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2526*FLEN/8, x4, x1, x2)

inst_1264:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x007fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fff; op2val:0x0; 
   valaddr_reg:x3; val_offset:2528*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2528*FLEN/8, x4, x1, x2)

inst_1265:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x007fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fff; op2val:0x1; 
   valaddr_reg:x3; val_offset:2530*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2530*FLEN/8, x4, x1, x2)

inst_1266:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x007fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2532*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2532*FLEN/8, x4, x1, x2)

inst_1267:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x007fff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2534*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2534*FLEN/8, x4, x1, x2)

inst_1268:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:2536*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2536*FLEN/8, x4, x1, x2)

inst_1269:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:2538*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2538*FLEN/8, x4, x1, x2)

inst_1270:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2540*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2540*FLEN/8, x4, x1, x2)

inst_1271:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2542*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2542*FLEN/8, x4, x1, x2)

inst_1272:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:2544*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2544*FLEN/8, x4, x1, x2)

inst_1273:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:2546*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2546*FLEN/8, x4, x1, x2)

inst_1274:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2548*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2548*FLEN/8, x4, x1, x2)

inst_1275:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2550*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2550*FLEN/8, x4, x1, x2)

inst_1276:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x83ffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:2552*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2552*FLEN/8, x4, x1, x2)

inst_1277:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x83ffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:2554*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2554*FLEN/8, x4, x1, x2)

inst_1278:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x83ffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2556*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2556*FLEN/8, x4, x1, x2)

inst_1279:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x83ffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2558*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2558*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_11)

inst_1280:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x87ffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:2560*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2560*FLEN/8, x4, x1, x2)

inst_1281:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x87ffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:2562*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2562*FLEN/8, x4, x1, x2)

inst_1282:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x87ffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2564*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2564*FLEN/8, x4, x1, x2)

inst_1283:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x87ffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2566*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2566*FLEN/8, x4, x1, x2)

inst_1284:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8fffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:2568*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2568*FLEN/8, x4, x1, x2)

inst_1285:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8fffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:2570*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2570*FLEN/8, x4, x1, x2)

inst_1286:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8fffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2572*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2572*FLEN/8, x4, x1, x2)

inst_1287:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8fffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2574*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2574*FLEN/8, x4, x1, x2)

inst_1288:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x199999 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x999999; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2576*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2576*FLEN/8, x4, x1, x2)

inst_1289:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9fffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:2578*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2578*FLEN/8, x4, x1, x2)

inst_1290:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9fffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:2580*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2580*FLEN/8, x4, x1, x2)

inst_1291:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9fffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2582*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2582*FLEN/8, x4, x1, x2)

inst_1292:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9fffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2584*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2584*FLEN/8, x4, x1, x2)

inst_1293:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x249249 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xa49249; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2586*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2586*FLEN/8, x4, x1, x2)

inst_1294:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x333333 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb33333; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2588*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2588*FLEN/8, x4, x1, x2)

inst_1295:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x36db6d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb6db6d; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2590*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2590*FLEN/8, x4, x1, x2)

inst_1296:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x3bbbbb and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbbbbbb; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2592*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2592*FLEN/8, x4, x1, x2)

inst_1297:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbfffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:2594*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2594*FLEN/8, x4, x1, x2)

inst_1298:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbfffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:2596*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2596*FLEN/8, x4, x1, x2)

inst_1299:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbfffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2598*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2598*FLEN/8, x4, x1, x2)

inst_1300:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbfffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2600*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2600*FLEN/8, x4, x1, x2)

inst_1301:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x400000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc00000; op2val:0x0; 
   valaddr_reg:x3; val_offset:2602*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2602*FLEN/8, x4, x1, x2)

inst_1302:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x400000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc00000; op2val:0x1; 
   valaddr_reg:x3; val_offset:2604*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2604*FLEN/8, x4, x1, x2)

inst_1303:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x400000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc00000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2606*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2606*FLEN/8, x4, x1, x2)

inst_1304:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x400000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc00000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2608*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2608*FLEN/8, x4, x1, x2)

inst_1305:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x444444 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc44444; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2610*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2610*FLEN/8, x4, x1, x2)

inst_1306:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x4ccccc and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xcccccc; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2612*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2612*FLEN/8, x4, x1, x2)

inst_1307:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x5b6db6 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xdb6db6; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2614*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2614*FLEN/8, x4, x1, x2)

inst_1308:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x600000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xe00000; op2val:0x0; 
   valaddr_reg:x3; val_offset:2616*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2616*FLEN/8, x4, x1, x2)

inst_1309:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x600000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xe00000; op2val:0x1; 
   valaddr_reg:x3; val_offset:2618*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2618*FLEN/8, x4, x1, x2)

inst_1310:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x600000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xe00000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2620*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2620*FLEN/8, x4, x1, x2)

inst_1311:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x600000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xe00000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2622*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2622*FLEN/8, x4, x1, x2)

inst_1312:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x666666 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xe66666; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2624*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2624*FLEN/8, x4, x1, x2)

inst_1313:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x6db6db and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xedb6db; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2626*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2626*FLEN/8, x4, x1, x2)

inst_1314:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x700000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf00000; op2val:0x0; 
   valaddr_reg:x3; val_offset:2628*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2628*FLEN/8, x4, x1, x2)

inst_1315:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x700000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf00000; op2val:0x1; 
   valaddr_reg:x3; val_offset:2630*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2630*FLEN/8, x4, x1, x2)

inst_1316:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x700000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf00000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2632*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2632*FLEN/8, x4, x1, x2)

inst_1317:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x700000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf00000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2634*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2634*FLEN/8, x4, x1, x2)

inst_1318:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x780000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf80000; op2val:0x0; 
   valaddr_reg:x3; val_offset:2636*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2636*FLEN/8, x4, x1, x2)

inst_1319:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x780000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf80000; op2val:0x1; 
   valaddr_reg:x3; val_offset:2638*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2638*FLEN/8, x4, x1, x2)

inst_1320:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x780000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf80000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2640*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2640*FLEN/8, x4, x1, x2)

inst_1321:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x780000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf80000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2642*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2642*FLEN/8, x4, x1, x2)

inst_1322:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfc0000; op2val:0x0; 
   valaddr_reg:x3; val_offset:2644*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2644*FLEN/8, x4, x1, x2)

inst_1323:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfc0000; op2val:0x1; 
   valaddr_reg:x3; val_offset:2646*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2646*FLEN/8, x4, x1, x2)

inst_1324:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfc0000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2648*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2648*FLEN/8, x4, x1, x2)

inst_1325:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfc0000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2650*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2650*FLEN/8, x4, x1, x2)

inst_1326:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe0000; op2val:0x0; 
   valaddr_reg:x3; val_offset:2652*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2652*FLEN/8, x4, x1, x2)

inst_1327:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe0000; op2val:0x1; 
   valaddr_reg:x3; val_offset:2654*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2654*FLEN/8, x4, x1, x2)

inst_1328:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe0000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2656*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2656*FLEN/8, x4, x1, x2)

inst_1329:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe0000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2658*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2658*FLEN/8, x4, x1, x2)

inst_1330:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff0000; op2val:0x0; 
   valaddr_reg:x3; val_offset:2660*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2660*FLEN/8, x4, x1, x2)

inst_1331:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff0000; op2val:0x1; 
   valaddr_reg:x3; val_offset:2662*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2662*FLEN/8, x4, x1, x2)

inst_1332:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff0000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2664*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2664*FLEN/8, x4, x1, x2)

inst_1333:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff0000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2666*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2666*FLEN/8, x4, x1, x2)

inst_1334:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff8000; op2val:0x0; 
   valaddr_reg:x3; val_offset:2668*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2668*FLEN/8, x4, x1, x2)

inst_1335:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff8000; op2val:0x1; 
   valaddr_reg:x3; val_offset:2670*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2670*FLEN/8, x4, x1, x2)

inst_1336:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff8000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2672*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2672*FLEN/8, x4, x1, x2)

inst_1337:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff8000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2674*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2674*FLEN/8, x4, x1, x2)

inst_1338:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xffc000; op2val:0x0; 
   valaddr_reg:x3; val_offset:2676*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2676*FLEN/8, x4, x1, x2)

inst_1339:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xffc000; op2val:0x1; 
   valaddr_reg:x3; val_offset:2678*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2678*FLEN/8, x4, x1, x2)

inst_1340:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xffc000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2680*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2680*FLEN/8, x4, x1, x2)

inst_1341:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xffc000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2682*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2682*FLEN/8, x4, x1, x2)

inst_1342:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xffe000; op2val:0x0; 
   valaddr_reg:x3; val_offset:2684*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2684*FLEN/8, x4, x1, x2)

inst_1343:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xffe000; op2val:0x1; 
   valaddr_reg:x3; val_offset:2686*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2686*FLEN/8, x4, x1, x2)

inst_1344:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xffe000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2688*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2688*FLEN/8, x4, x1, x2)

inst_1345:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xffe000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2690*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2690*FLEN/8, x4, x1, x2)

inst_1346:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfff000; op2val:0x0; 
   valaddr_reg:x3; val_offset:2692*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2692*FLEN/8, x4, x1, x2)

inst_1347:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfff000; op2val:0x1; 
   valaddr_reg:x3; val_offset:2694*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2694*FLEN/8, x4, x1, x2)

inst_1348:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfff000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2696*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2696*FLEN/8, x4, x1, x2)

inst_1349:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfff000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2698*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2698*FLEN/8, x4, x1, x2)

inst_1350:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfff800; op2val:0x0; 
   valaddr_reg:x3; val_offset:2700*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2700*FLEN/8, x4, x1, x2)

inst_1351:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfff800; op2val:0x1; 
   valaddr_reg:x3; val_offset:2702*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2702*FLEN/8, x4, x1, x2)

inst_1352:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfff800; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2704*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2704*FLEN/8, x4, x1, x2)

inst_1353:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfff800; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2706*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2706*FLEN/8, x4, x1, x2)

inst_1354:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfffc00; op2val:0x0; 
   valaddr_reg:x3; val_offset:2708*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2708*FLEN/8, x4, x1, x2)

inst_1355:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfffc00; op2val:0x1; 
   valaddr_reg:x3; val_offset:2710*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2710*FLEN/8, x4, x1, x2)

inst_1356:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfffc00; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2712*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2712*FLEN/8, x4, x1, x2)

inst_1357:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfffc00; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2714*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2714*FLEN/8, x4, x1, x2)

inst_1358:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfffe00; op2val:0x0; 
   valaddr_reg:x3; val_offset:2716*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2716*FLEN/8, x4, x1, x2)

inst_1359:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfffe00; op2val:0x1; 
   valaddr_reg:x3; val_offset:2718*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2718*FLEN/8, x4, x1, x2)

inst_1360:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfffe00; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2720*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2720*FLEN/8, x4, x1, x2)

inst_1361:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfffe00; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2722*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2722*FLEN/8, x4, x1, x2)

inst_1362:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xffff00; op2val:0x0; 
   valaddr_reg:x3; val_offset:2724*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2724*FLEN/8, x4, x1, x2)

inst_1363:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xffff00; op2val:0x1; 
   valaddr_reg:x3; val_offset:2726*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2726*FLEN/8, x4, x1, x2)

inst_1364:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xffff00; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2728*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2728*FLEN/8, x4, x1, x2)

inst_1365:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xffff00; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2730*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2730*FLEN/8, x4, x1, x2)

inst_1366:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xffff80; op2val:0x0; 
   valaddr_reg:x3; val_offset:2732*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2732*FLEN/8, x4, x1, x2)

inst_1367:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xffff80; op2val:0x1; 
   valaddr_reg:x3; val_offset:2734*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2734*FLEN/8, x4, x1, x2)

inst_1368:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xffff80; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2736*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2736*FLEN/8, x4, x1, x2)

inst_1369:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xffff80; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2738*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2738*FLEN/8, x4, x1, x2)

inst_1370:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xffffc0; op2val:0x0; 
   valaddr_reg:x3; val_offset:2740*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2740*FLEN/8, x4, x1, x2)

inst_1371:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xffffc0; op2val:0x1; 
   valaddr_reg:x3; val_offset:2742*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2742*FLEN/8, x4, x1, x2)

inst_1372:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xffffc0; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2744*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2744*FLEN/8, x4, x1, x2)

inst_1373:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xffffc0; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2746*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2746*FLEN/8, x4, x1, x2)

inst_1374:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xffffe0; op2val:0x0; 
   valaddr_reg:x3; val_offset:2748*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2748*FLEN/8, x4, x1, x2)

inst_1375:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xffffe0; op2val:0x1; 
   valaddr_reg:x3; val_offset:2750*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2750*FLEN/8, x4, x1, x2)

inst_1376:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xffffe0; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2752*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2752*FLEN/8, x4, x1, x2)

inst_1377:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xffffe0; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2754*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2754*FLEN/8, x4, x1, x2)

inst_1378:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfffff0; op2val:0x0; 
   valaddr_reg:x3; val_offset:2756*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2756*FLEN/8, x4, x1, x2)

inst_1379:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfffff0; op2val:0x1; 
   valaddr_reg:x3; val_offset:2758*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2758*FLEN/8, x4, x1, x2)

inst_1380:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfffff0; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2760*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2760*FLEN/8, x4, x1, x2)

inst_1381:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfffff0; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2762*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2762*FLEN/8, x4, x1, x2)

inst_1382:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfffff8; op2val:0x0; 
   valaddr_reg:x3; val_offset:2764*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2764*FLEN/8, x4, x1, x2)

inst_1383:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfffff8; op2val:0x1; 
   valaddr_reg:x3; val_offset:2766*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2766*FLEN/8, x4, x1, x2)

inst_1384:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfffff8; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2768*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2768*FLEN/8, x4, x1, x2)

inst_1385:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfffff8; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2770*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2770*FLEN/8, x4, x1, x2)

inst_1386:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfffffc; op2val:0x0; 
   valaddr_reg:x3; val_offset:2772*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2772*FLEN/8, x4, x1, x2)

inst_1387:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfffffc; op2val:0x1; 
   valaddr_reg:x3; val_offset:2774*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2774*FLEN/8, x4, x1, x2)

inst_1388:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfffffc; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2776*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2776*FLEN/8, x4, x1, x2)

inst_1389:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfffffc; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2778*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2778*FLEN/8, x4, x1, x2)

inst_1390:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfffffe; op2val:0x0; 
   valaddr_reg:x3; val_offset:2780*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2780*FLEN/8, x4, x1, x2)

inst_1391:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfffffe; op2val:0x1; 
   valaddr_reg:x3; val_offset:2782*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2782*FLEN/8, x4, x1, x2)

inst_1392:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfffffe; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2784*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2784*FLEN/8, x4, x1, x2)

inst_1393:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfffffe; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2786*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2786*FLEN/8, x4, x1, x2)

inst_1394:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xffffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:2788*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2788*FLEN/8, x4, x1, x2)

inst_1395:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xffffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:2790*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2790*FLEN/8, x4, x1, x2)

inst_1396:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xffffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2792*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2792*FLEN/8, x4, x1, x2)

inst_1397:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xffffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2794*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2794*FLEN/8, x4, x1, x2)

inst_1398:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1000000; op2val:0x0; 
   valaddr_reg:x3; val_offset:2796*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2796*FLEN/8, x4, x1, x2)

inst_1399:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1000000; op2val:0x1; 
   valaddr_reg:x3; val_offset:2798*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2798*FLEN/8, x4, x1, x2)

inst_1400:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1000000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2800*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2800*FLEN/8, x4, x1, x2)

inst_1401:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1000000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2802*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2802*FLEN/8, x4, x1, x2)

inst_1402:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1000001; op2val:0x0; 
   valaddr_reg:x3; val_offset:2804*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2804*FLEN/8, x4, x1, x2)

inst_1403:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1000001; op2val:0x1; 
   valaddr_reg:x3; val_offset:2806*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2806*FLEN/8, x4, x1, x2)

inst_1404:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1000001; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2808*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2808*FLEN/8, x4, x1, x2)

inst_1405:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1000001; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2810*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2810*FLEN/8, x4, x1, x2)

inst_1406:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1000003; op2val:0x0; 
   valaddr_reg:x3; val_offset:2812*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2812*FLEN/8, x4, x1, x2)

inst_1407:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1000003; op2val:0x1; 
   valaddr_reg:x3; val_offset:2814*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2814*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_12)

inst_1408:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1000003; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2816*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2816*FLEN/8, x4, x1, x2)

inst_1409:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1000003; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2818*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2818*FLEN/8, x4, x1, x2)

inst_1410:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1000007; op2val:0x0; 
   valaddr_reg:x3; val_offset:2820*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2820*FLEN/8, x4, x1, x2)

inst_1411:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1000007; op2val:0x1; 
   valaddr_reg:x3; val_offset:2822*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2822*FLEN/8, x4, x1, x2)

inst_1412:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1000007; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2824*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2824*FLEN/8, x4, x1, x2)

inst_1413:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1000007; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2826*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2826*FLEN/8, x4, x1, x2)

inst_1414:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x100000f; op2val:0x0; 
   valaddr_reg:x3; val_offset:2828*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2828*FLEN/8, x4, x1, x2)

inst_1415:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x100000f; op2val:0x1; 
   valaddr_reg:x3; val_offset:2830*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2830*FLEN/8, x4, x1, x2)

inst_1416:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x100000f; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2832*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2832*FLEN/8, x4, x1, x2)

inst_1417:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x100000f; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2834*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2834*FLEN/8, x4, x1, x2)

inst_1418:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x100001f; op2val:0x0; 
   valaddr_reg:x3; val_offset:2836*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2836*FLEN/8, x4, x1, x2)

inst_1419:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x100001f; op2val:0x1; 
   valaddr_reg:x3; val_offset:2838*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2838*FLEN/8, x4, x1, x2)

inst_1420:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x100001f; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2840*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2840*FLEN/8, x4, x1, x2)

inst_1421:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x100001f; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2842*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2842*FLEN/8, x4, x1, x2)

inst_1422:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x100003f; op2val:0x0; 
   valaddr_reg:x3; val_offset:2844*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2844*FLEN/8, x4, x1, x2)

inst_1423:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x100003f; op2val:0x1; 
   valaddr_reg:x3; val_offset:2846*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2846*FLEN/8, x4, x1, x2)

inst_1424:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x100003f; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2848*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2848*FLEN/8, x4, x1, x2)

inst_1425:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x100003f; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2850*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2850*FLEN/8, x4, x1, x2)

inst_1426:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x00007f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x100007f; op2val:0x0; 
   valaddr_reg:x3; val_offset:2852*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2852*FLEN/8, x4, x1, x2)

inst_1427:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x00007f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x100007f; op2val:0x1; 
   valaddr_reg:x3; val_offset:2854*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2854*FLEN/8, x4, x1, x2)

inst_1428:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x00007f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x100007f; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2856*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2856*FLEN/8, x4, x1, x2)

inst_1429:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x00007f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x100007f; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2858*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2858*FLEN/8, x4, x1, x2)

inst_1430:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x10000ff; op2val:0x0; 
   valaddr_reg:x3; val_offset:2860*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2860*FLEN/8, x4, x1, x2)

inst_1431:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x10000ff; op2val:0x1; 
   valaddr_reg:x3; val_offset:2862*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2862*FLEN/8, x4, x1, x2)

inst_1432:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x10000ff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2864*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2864*FLEN/8, x4, x1, x2)

inst_1433:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x10000ff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2866*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2866*FLEN/8, x4, x1, x2)

inst_1434:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x10001ff; op2val:0x0; 
   valaddr_reg:x3; val_offset:2868*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2868*FLEN/8, x4, x1, x2)

inst_1435:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x10001ff; op2val:0x1; 
   valaddr_reg:x3; val_offset:2870*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2870*FLEN/8, x4, x1, x2)

inst_1436:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x10001ff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2872*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2872*FLEN/8, x4, x1, x2)

inst_1437:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x10001ff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2874*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2874*FLEN/8, x4, x1, x2)

inst_1438:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x10003ff; op2val:0x0; 
   valaddr_reg:x3; val_offset:2876*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2876*FLEN/8, x4, x1, x2)

inst_1439:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x10003ff; op2val:0x1; 
   valaddr_reg:x3; val_offset:2878*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2878*FLEN/8, x4, x1, x2)

inst_1440:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x10003ff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2880*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2880*FLEN/8, x4, x1, x2)

inst_1441:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x10003ff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2882*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2882*FLEN/8, x4, x1, x2)

inst_1442:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x10007ff; op2val:0x0; 
   valaddr_reg:x3; val_offset:2884*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2884*FLEN/8, x4, x1, x2)

inst_1443:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x10007ff; op2val:0x1; 
   valaddr_reg:x3; val_offset:2886*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2886*FLEN/8, x4, x1, x2)

inst_1444:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x10007ff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2888*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2888*FLEN/8, x4, x1, x2)

inst_1445:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x10007ff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2890*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2890*FLEN/8, x4, x1, x2)

inst_1446:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x000fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1000fff; op2val:0x0; 
   valaddr_reg:x3; val_offset:2892*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2892*FLEN/8, x4, x1, x2)

inst_1447:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x000fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1000fff; op2val:0x1; 
   valaddr_reg:x3; val_offset:2894*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2894*FLEN/8, x4, x1, x2)

inst_1448:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x000fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1000fff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2896*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2896*FLEN/8, x4, x1, x2)

inst_1449:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x000fff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1000fff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2898*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2898*FLEN/8, x4, x1, x2)

inst_1450:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x001fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1001fff; op2val:0x0; 
   valaddr_reg:x3; val_offset:2900*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2900*FLEN/8, x4, x1, x2)

inst_1451:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x001fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1001fff; op2val:0x1; 
   valaddr_reg:x3; val_offset:2902*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2902*FLEN/8, x4, x1, x2)

inst_1452:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x001fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1001fff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2904*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2904*FLEN/8, x4, x1, x2)

inst_1453:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x001fff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1001fff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2906*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2906*FLEN/8, x4, x1, x2)

inst_1454:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x003fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1003fff; op2val:0x0; 
   valaddr_reg:x3; val_offset:2908*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2908*FLEN/8, x4, x1, x2)

inst_1455:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x003fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1003fff; op2val:0x1; 
   valaddr_reg:x3; val_offset:2910*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2910*FLEN/8, x4, x1, x2)

inst_1456:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x003fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1003fff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2912*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2912*FLEN/8, x4, x1, x2)

inst_1457:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x003fff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1003fff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2914*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2914*FLEN/8, x4, x1, x2)

inst_1458:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x007fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1007fff; op2val:0x0; 
   valaddr_reg:x3; val_offset:2916*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2916*FLEN/8, x4, x1, x2)

inst_1459:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x007fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1007fff; op2val:0x1; 
   valaddr_reg:x3; val_offset:2918*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2918*FLEN/8, x4, x1, x2)

inst_1460:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x007fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1007fff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2920*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2920*FLEN/8, x4, x1, x2)

inst_1461:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x007fff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1007fff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2922*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2922*FLEN/8, x4, x1, x2)

inst_1462:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x100ffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:2924*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2924*FLEN/8, x4, x1, x2)

inst_1463:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x100ffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:2926*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2926*FLEN/8, x4, x1, x2)

inst_1464:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x100ffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2928*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2928*FLEN/8, x4, x1, x2)

inst_1465:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x100ffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2930*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2930*FLEN/8, x4, x1, x2)

inst_1466:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x101ffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:2932*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2932*FLEN/8, x4, x1, x2)

inst_1467:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x101ffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:2934*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2934*FLEN/8, x4, x1, x2)

inst_1468:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x101ffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2936*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2936*FLEN/8, x4, x1, x2)

inst_1469:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x101ffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2938*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2938*FLEN/8, x4, x1, x2)

inst_1470:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x103ffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:2940*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2940*FLEN/8, x4, x1, x2)

inst_1471:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x103ffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:2942*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2942*FLEN/8, x4, x1, x2)

inst_1472:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x103ffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2944*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2944*FLEN/8, x4, x1, x2)

inst_1473:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x103ffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2946*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2946*FLEN/8, x4, x1, x2)

inst_1474:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x107ffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:2948*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2948*FLEN/8, x4, x1, x2)

inst_1475:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x107ffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:2950*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2950*FLEN/8, x4, x1, x2)

inst_1476:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x107ffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2952*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2952*FLEN/8, x4, x1, x2)

inst_1477:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x107ffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2954*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2954*FLEN/8, x4, x1, x2)

inst_1478:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x10fffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:2956*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2956*FLEN/8, x4, x1, x2)

inst_1479:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x10fffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:2958*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2958*FLEN/8, x4, x1, x2)

inst_1480:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x10fffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2960*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2960*FLEN/8, x4, x1, x2)

inst_1481:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x10fffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2962*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2962*FLEN/8, x4, x1, x2)

inst_1482:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x11fffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:2964*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2964*FLEN/8, x4, x1, x2)

inst_1483:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x11fffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:2966*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2966*FLEN/8, x4, x1, x2)

inst_1484:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x11fffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2968*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2968*FLEN/8, x4, x1, x2)

inst_1485:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x11fffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2970*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2970*FLEN/8, x4, x1, x2)

inst_1486:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x13fffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:2972*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2972*FLEN/8, x4, x1, x2)

inst_1487:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x13fffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:2974*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2974*FLEN/8, x4, x1, x2)

inst_1488:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x13fffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2976*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2976*FLEN/8, x4, x1, x2)

inst_1489:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x13fffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2978*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2978*FLEN/8, x4, x1, x2)

inst_1490:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x400000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1400000; op2val:0x0; 
   valaddr_reg:x3; val_offset:2980*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2980*FLEN/8, x4, x1, x2)

inst_1491:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x400000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1400000; op2val:0x1; 
   valaddr_reg:x3; val_offset:2982*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2982*FLEN/8, x4, x1, x2)

inst_1492:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x400000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1400000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2984*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2984*FLEN/8, x4, x1, x2)

inst_1493:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x400000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1400000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2986*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2986*FLEN/8, x4, x1, x2)

inst_1494:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x600000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1600000; op2val:0x0; 
   valaddr_reg:x3; val_offset:2988*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2988*FLEN/8, x4, x1, x2)

inst_1495:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x600000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1600000; op2val:0x1; 
   valaddr_reg:x3; val_offset:2990*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2990*FLEN/8, x4, x1, x2)

inst_1496:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x600000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1600000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:2992*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2992*FLEN/8, x4, x1, x2)

inst_1497:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x600000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1600000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:2994*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2994*FLEN/8, x4, x1, x2)

inst_1498:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x700000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1700000; op2val:0x0; 
   valaddr_reg:x3; val_offset:2996*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2996*FLEN/8, x4, x1, x2)

inst_1499:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x700000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1700000; op2val:0x1; 
   valaddr_reg:x3; val_offset:2998*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 2998*FLEN/8, x4, x1, x2)

inst_1500:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x700000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1700000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3000*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3000*FLEN/8, x4, x1, x2)

inst_1501:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x700000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1700000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3002*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3002*FLEN/8, x4, x1, x2)

inst_1502:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x780000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1780000; op2val:0x0; 
   valaddr_reg:x3; val_offset:3004*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3004*FLEN/8, x4, x1, x2)

inst_1503:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x780000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1780000; op2val:0x1; 
   valaddr_reg:x3; val_offset:3006*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3006*FLEN/8, x4, x1, x2)

inst_1504:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x780000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1780000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3008*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3008*FLEN/8, x4, x1, x2)

inst_1505:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x780000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1780000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3010*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3010*FLEN/8, x4, x1, x2)

inst_1506:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17c0000; op2val:0x0; 
   valaddr_reg:x3; val_offset:3012*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3012*FLEN/8, x4, x1, x2)

inst_1507:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17c0000; op2val:0x1; 
   valaddr_reg:x3; val_offset:3014*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3014*FLEN/8, x4, x1, x2)

inst_1508:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17c0000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3016*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3016*FLEN/8, x4, x1, x2)

inst_1509:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17c0000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3018*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3018*FLEN/8, x4, x1, x2)

inst_1510:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17e0000; op2val:0x0; 
   valaddr_reg:x3; val_offset:3020*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3020*FLEN/8, x4, x1, x2)

inst_1511:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17e0000; op2val:0x1; 
   valaddr_reg:x3; val_offset:3022*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3022*FLEN/8, x4, x1, x2)

inst_1512:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17e0000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3024*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3024*FLEN/8, x4, x1, x2)

inst_1513:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17e0000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3026*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3026*FLEN/8, x4, x1, x2)

inst_1514:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17f0000; op2val:0x0; 
   valaddr_reg:x3; val_offset:3028*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3028*FLEN/8, x4, x1, x2)

inst_1515:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17f0000; op2val:0x1; 
   valaddr_reg:x3; val_offset:3030*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3030*FLEN/8, x4, x1, x2)

inst_1516:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17f0000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3032*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3032*FLEN/8, x4, x1, x2)

inst_1517:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17f0000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3034*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3034*FLEN/8, x4, x1, x2)

inst_1518:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17f8000; op2val:0x0; 
   valaddr_reg:x3; val_offset:3036*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3036*FLEN/8, x4, x1, x2)

inst_1519:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17f8000; op2val:0x1; 
   valaddr_reg:x3; val_offset:3038*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3038*FLEN/8, x4, x1, x2)

inst_1520:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17f8000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3040*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3040*FLEN/8, x4, x1, x2)

inst_1521:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17f8000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3042*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3042*FLEN/8, x4, x1, x2)

inst_1522:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17fc000; op2val:0x0; 
   valaddr_reg:x3; val_offset:3044*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3044*FLEN/8, x4, x1, x2)

inst_1523:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17fc000; op2val:0x1; 
   valaddr_reg:x3; val_offset:3046*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3046*FLEN/8, x4, x1, x2)

inst_1524:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17fc000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3048*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3048*FLEN/8, x4, x1, x2)

inst_1525:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17fc000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3050*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3050*FLEN/8, x4, x1, x2)

inst_1526:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17fe000; op2val:0x0; 
   valaddr_reg:x3; val_offset:3052*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3052*FLEN/8, x4, x1, x2)

inst_1527:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17fe000; op2val:0x1; 
   valaddr_reg:x3; val_offset:3054*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3054*FLEN/8, x4, x1, x2)

inst_1528:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17fe000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3056*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3056*FLEN/8, x4, x1, x2)

inst_1529:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17fe000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3058*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3058*FLEN/8, x4, x1, x2)

inst_1530:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17ff000; op2val:0x0; 
   valaddr_reg:x3; val_offset:3060*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3060*FLEN/8, x4, x1, x2)

inst_1531:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17ff000; op2val:0x1; 
   valaddr_reg:x3; val_offset:3062*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3062*FLEN/8, x4, x1, x2)

inst_1532:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17ff000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3064*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3064*FLEN/8, x4, x1, x2)

inst_1533:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17ff000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3066*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3066*FLEN/8, x4, x1, x2)

inst_1534:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17ff800; op2val:0x0; 
   valaddr_reg:x3; val_offset:3068*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3068*FLEN/8, x4, x1, x2)

inst_1535:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17ff800; op2val:0x1; 
   valaddr_reg:x3; val_offset:3070*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3070*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_13)

inst_1536:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17ff800; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3072*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3072*FLEN/8, x4, x1, x2)

inst_1537:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17ff800; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3074*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3074*FLEN/8, x4, x1, x2)

inst_1538:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17ffc00; op2val:0x0; 
   valaddr_reg:x3; val_offset:3076*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3076*FLEN/8, x4, x1, x2)

inst_1539:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17ffc00; op2val:0x1; 
   valaddr_reg:x3; val_offset:3078*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3078*FLEN/8, x4, x1, x2)

inst_1540:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17ffc00; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3080*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3080*FLEN/8, x4, x1, x2)

inst_1541:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17ffc00; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3082*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3082*FLEN/8, x4, x1, x2)

inst_1542:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17ffe00; op2val:0x0; 
   valaddr_reg:x3; val_offset:3084*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3084*FLEN/8, x4, x1, x2)

inst_1543:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17ffe00; op2val:0x1; 
   valaddr_reg:x3; val_offset:3086*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3086*FLEN/8, x4, x1, x2)

inst_1544:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17ffe00; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3088*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3088*FLEN/8, x4, x1, x2)

inst_1545:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17ffe00; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3090*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3090*FLEN/8, x4, x1, x2)

inst_1546:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17fff00; op2val:0x0; 
   valaddr_reg:x3; val_offset:3092*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3092*FLEN/8, x4, x1, x2)

inst_1547:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17fff00; op2val:0x1; 
   valaddr_reg:x3; val_offset:3094*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3094*FLEN/8, x4, x1, x2)

inst_1548:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17fff00; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3096*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3096*FLEN/8, x4, x1, x2)

inst_1549:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17fff00; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3098*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3098*FLEN/8, x4, x1, x2)

inst_1550:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17fff80; op2val:0x0; 
   valaddr_reg:x3; val_offset:3100*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3100*FLEN/8, x4, x1, x2)

inst_1551:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17fff80; op2val:0x1; 
   valaddr_reg:x3; val_offset:3102*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3102*FLEN/8, x4, x1, x2)

inst_1552:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17fff80; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3104*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3104*FLEN/8, x4, x1, x2)

inst_1553:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17fff80; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3106*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3106*FLEN/8, x4, x1, x2)

inst_1554:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17fffc0; op2val:0x0; 
   valaddr_reg:x3; val_offset:3108*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3108*FLEN/8, x4, x1, x2)

inst_1555:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17fffc0; op2val:0x1; 
   valaddr_reg:x3; val_offset:3110*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3110*FLEN/8, x4, x1, x2)

inst_1556:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17fffc0; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3112*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3112*FLEN/8, x4, x1, x2)

inst_1557:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17fffc0; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3114*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3114*FLEN/8, x4, x1, x2)

inst_1558:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17fffe0; op2val:0x0; 
   valaddr_reg:x3; val_offset:3116*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3116*FLEN/8, x4, x1, x2)

inst_1559:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17fffe0; op2val:0x1; 
   valaddr_reg:x3; val_offset:3118*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3118*FLEN/8, x4, x1, x2)

inst_1560:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17fffe0; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3120*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3120*FLEN/8, x4, x1, x2)

inst_1561:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17fffe0; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3122*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3122*FLEN/8, x4, x1, x2)

inst_1562:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17ffff0; op2val:0x0; 
   valaddr_reg:x3; val_offset:3124*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3124*FLEN/8, x4, x1, x2)

inst_1563:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17ffff0; op2val:0x1; 
   valaddr_reg:x3; val_offset:3126*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3126*FLEN/8, x4, x1, x2)

inst_1564:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17ffff0; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3128*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3128*FLEN/8, x4, x1, x2)

inst_1565:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17ffff0; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3130*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3130*FLEN/8, x4, x1, x2)

inst_1566:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17ffff8; op2val:0x0; 
   valaddr_reg:x3; val_offset:3132*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3132*FLEN/8, x4, x1, x2)

inst_1567:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17ffff8; op2val:0x1; 
   valaddr_reg:x3; val_offset:3134*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3134*FLEN/8, x4, x1, x2)

inst_1568:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17ffff8; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3136*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3136*FLEN/8, x4, x1, x2)

inst_1569:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17ffff8; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3138*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3138*FLEN/8, x4, x1, x2)

inst_1570:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17ffffc; op2val:0x0; 
   valaddr_reg:x3; val_offset:3140*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3140*FLEN/8, x4, x1, x2)

inst_1571:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17ffffc; op2val:0x1; 
   valaddr_reg:x3; val_offset:3142*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3142*FLEN/8, x4, x1, x2)

inst_1572:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17ffffc; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3144*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3144*FLEN/8, x4, x1, x2)

inst_1573:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17ffffc; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3146*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3146*FLEN/8, x4, x1, x2)

inst_1574:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17ffffe; op2val:0x0; 
   valaddr_reg:x3; val_offset:3148*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3148*FLEN/8, x4, x1, x2)

inst_1575:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17ffffe; op2val:0x1; 
   valaddr_reg:x3; val_offset:3150*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3150*FLEN/8, x4, x1, x2)

inst_1576:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17ffffe; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3152*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3152*FLEN/8, x4, x1, x2)

inst_1577:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17ffffe; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3154*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3154*FLEN/8, x4, x1, x2)

inst_1578:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17fffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:3156*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3156*FLEN/8, x4, x1, x2)

inst_1579:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17fffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:3158*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3158*FLEN/8, x4, x1, x2)

inst_1580:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17fffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3160*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3160*FLEN/8, x4, x1, x2)

inst_1581:
// fs1 == 0 and fe1 == 0x02 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x17fffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3162*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3162*FLEN/8, x4, x1, x2)

inst_1582:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1800000; op2val:0x0; 
   valaddr_reg:x3; val_offset:3164*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3164*FLEN/8, x4, x1, x2)

inst_1583:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1800000; op2val:0x1; 
   valaddr_reg:x3; val_offset:3166*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3166*FLEN/8, x4, x1, x2)

inst_1584:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1800000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3168*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3168*FLEN/8, x4, x1, x2)

inst_1585:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1800000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3170*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3170*FLEN/8, x4, x1, x2)

inst_1586:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1800001; op2val:0x0; 
   valaddr_reg:x3; val_offset:3172*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3172*FLEN/8, x4, x1, x2)

inst_1587:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1800001; op2val:0x1; 
   valaddr_reg:x3; val_offset:3174*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3174*FLEN/8, x4, x1, x2)

inst_1588:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1800001; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3176*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3176*FLEN/8, x4, x1, x2)

inst_1589:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1800001; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3178*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3178*FLEN/8, x4, x1, x2)

inst_1590:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1800003; op2val:0x0; 
   valaddr_reg:x3; val_offset:3180*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3180*FLEN/8, x4, x1, x2)

inst_1591:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1800003; op2val:0x1; 
   valaddr_reg:x3; val_offset:3182*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3182*FLEN/8, x4, x1, x2)

inst_1592:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1800003; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3184*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3184*FLEN/8, x4, x1, x2)

inst_1593:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1800003; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3186*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3186*FLEN/8, x4, x1, x2)

inst_1594:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1800007; op2val:0x0; 
   valaddr_reg:x3; val_offset:3188*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3188*FLEN/8, x4, x1, x2)

inst_1595:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1800007; op2val:0x1; 
   valaddr_reg:x3; val_offset:3190*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3190*FLEN/8, x4, x1, x2)

inst_1596:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1800007; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3192*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3192*FLEN/8, x4, x1, x2)

inst_1597:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1800007; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3194*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3194*FLEN/8, x4, x1, x2)

inst_1598:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x180000f; op2val:0x0; 
   valaddr_reg:x3; val_offset:3196*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3196*FLEN/8, x4, x1, x2)

inst_1599:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x180000f; op2val:0x1; 
   valaddr_reg:x3; val_offset:3198*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3198*FLEN/8, x4, x1, x2)

inst_1600:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x180000f; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3200*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3200*FLEN/8, x4, x1, x2)

inst_1601:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x180000f; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3202*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3202*FLEN/8, x4, x1, x2)

inst_1602:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x180001f; op2val:0x0; 
   valaddr_reg:x3; val_offset:3204*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3204*FLEN/8, x4, x1, x2)

inst_1603:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x180001f; op2val:0x1; 
   valaddr_reg:x3; val_offset:3206*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3206*FLEN/8, x4, x1, x2)

inst_1604:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x180001f; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3208*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3208*FLEN/8, x4, x1, x2)

inst_1605:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x180001f; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3210*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3210*FLEN/8, x4, x1, x2)

inst_1606:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x180003f; op2val:0x0; 
   valaddr_reg:x3; val_offset:3212*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3212*FLEN/8, x4, x1, x2)

inst_1607:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x180003f; op2val:0x1; 
   valaddr_reg:x3; val_offset:3214*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3214*FLEN/8, x4, x1, x2)

inst_1608:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x180003f; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3216*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3216*FLEN/8, x4, x1, x2)

inst_1609:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x180003f; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3218*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3218*FLEN/8, x4, x1, x2)

inst_1610:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x00007f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x180007f; op2val:0x0; 
   valaddr_reg:x3; val_offset:3220*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3220*FLEN/8, x4, x1, x2)

inst_1611:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x00007f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x180007f; op2val:0x1; 
   valaddr_reg:x3; val_offset:3222*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3222*FLEN/8, x4, x1, x2)

inst_1612:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x00007f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x180007f; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3224*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3224*FLEN/8, x4, x1, x2)

inst_1613:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x00007f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x180007f; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3226*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3226*FLEN/8, x4, x1, x2)

inst_1614:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x18000ff; op2val:0x0; 
   valaddr_reg:x3; val_offset:3228*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3228*FLEN/8, x4, x1, x2)

inst_1615:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x18000ff; op2val:0x1; 
   valaddr_reg:x3; val_offset:3230*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3230*FLEN/8, x4, x1, x2)

inst_1616:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x18000ff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3232*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3232*FLEN/8, x4, x1, x2)

inst_1617:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x18000ff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3234*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3234*FLEN/8, x4, x1, x2)

inst_1618:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x18001ff; op2val:0x0; 
   valaddr_reg:x3; val_offset:3236*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3236*FLEN/8, x4, x1, x2)

inst_1619:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x18001ff; op2val:0x1; 
   valaddr_reg:x3; val_offset:3238*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3238*FLEN/8, x4, x1, x2)

inst_1620:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x18001ff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3240*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3240*FLEN/8, x4, x1, x2)

inst_1621:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x18001ff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3242*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3242*FLEN/8, x4, x1, x2)

inst_1622:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x18003ff; op2val:0x0; 
   valaddr_reg:x3; val_offset:3244*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3244*FLEN/8, x4, x1, x2)

inst_1623:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x18003ff; op2val:0x1; 
   valaddr_reg:x3; val_offset:3246*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3246*FLEN/8, x4, x1, x2)

inst_1624:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x18003ff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3248*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3248*FLEN/8, x4, x1, x2)

inst_1625:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x18003ff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3250*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3250*FLEN/8, x4, x1, x2)

inst_1626:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x18007ff; op2val:0x0; 
   valaddr_reg:x3; val_offset:3252*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3252*FLEN/8, x4, x1, x2)

inst_1627:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x18007ff; op2val:0x1; 
   valaddr_reg:x3; val_offset:3254*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3254*FLEN/8, x4, x1, x2)

inst_1628:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x18007ff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3256*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3256*FLEN/8, x4, x1, x2)

inst_1629:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x18007ff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3258*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3258*FLEN/8, x4, x1, x2)

inst_1630:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x000fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1800fff; op2val:0x0; 
   valaddr_reg:x3; val_offset:3260*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3260*FLEN/8, x4, x1, x2)

inst_1631:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x000fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1800fff; op2val:0x1; 
   valaddr_reg:x3; val_offset:3262*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3262*FLEN/8, x4, x1, x2)

inst_1632:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x000fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1800fff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3264*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3264*FLEN/8, x4, x1, x2)

inst_1633:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x000fff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1800fff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3266*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3266*FLEN/8, x4, x1, x2)

inst_1634:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x001fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1801fff; op2val:0x0; 
   valaddr_reg:x3; val_offset:3268*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3268*FLEN/8, x4, x1, x2)

inst_1635:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x001fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1801fff; op2val:0x1; 
   valaddr_reg:x3; val_offset:3270*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3270*FLEN/8, x4, x1, x2)

inst_1636:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x001fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1801fff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3272*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3272*FLEN/8, x4, x1, x2)

inst_1637:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x001fff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1801fff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3274*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3274*FLEN/8, x4, x1, x2)

inst_1638:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x003fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1803fff; op2val:0x0; 
   valaddr_reg:x3; val_offset:3276*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3276*FLEN/8, x4, x1, x2)

inst_1639:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x003fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1803fff; op2val:0x1; 
   valaddr_reg:x3; val_offset:3278*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3278*FLEN/8, x4, x1, x2)

inst_1640:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x003fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1803fff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3280*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3280*FLEN/8, x4, x1, x2)

inst_1641:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x003fff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1803fff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3282*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3282*FLEN/8, x4, x1, x2)

inst_1642:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x007fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1807fff; op2val:0x0; 
   valaddr_reg:x3; val_offset:3284*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3284*FLEN/8, x4, x1, x2)

inst_1643:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x007fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1807fff; op2val:0x1; 
   valaddr_reg:x3; val_offset:3286*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3286*FLEN/8, x4, x1, x2)

inst_1644:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x007fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1807fff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3288*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3288*FLEN/8, x4, x1, x2)

inst_1645:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x007fff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1807fff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3290*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3290*FLEN/8, x4, x1, x2)

inst_1646:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x180ffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:3292*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3292*FLEN/8, x4, x1, x2)

inst_1647:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x180ffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:3294*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3294*FLEN/8, x4, x1, x2)

inst_1648:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x180ffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3296*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3296*FLEN/8, x4, x1, x2)

inst_1649:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x180ffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3298*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3298*FLEN/8, x4, x1, x2)

inst_1650:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x181ffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:3300*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3300*FLEN/8, x4, x1, x2)

inst_1651:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x181ffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:3302*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3302*FLEN/8, x4, x1, x2)

inst_1652:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x181ffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3304*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3304*FLEN/8, x4, x1, x2)

inst_1653:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x181ffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3306*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3306*FLEN/8, x4, x1, x2)

inst_1654:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x183ffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:3308*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3308*FLEN/8, x4, x1, x2)

inst_1655:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x183ffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:3310*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3310*FLEN/8, x4, x1, x2)

inst_1656:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x183ffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3312*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3312*FLEN/8, x4, x1, x2)

inst_1657:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x183ffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3314*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3314*FLEN/8, x4, x1, x2)

inst_1658:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x187ffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:3316*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3316*FLEN/8, x4, x1, x2)

inst_1659:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x187ffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:3318*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3318*FLEN/8, x4, x1, x2)

inst_1660:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x187ffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3320*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3320*FLEN/8, x4, x1, x2)

inst_1661:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x187ffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3322*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3322*FLEN/8, x4, x1, x2)

inst_1662:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x18fffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:3324*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3324*FLEN/8, x4, x1, x2)

inst_1663:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x18fffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:3326*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3326*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_14)

inst_1664:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x18fffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3328*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3328*FLEN/8, x4, x1, x2)

inst_1665:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x18fffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3330*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3330*FLEN/8, x4, x1, x2)

inst_1666:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x19fffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:3332*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3332*FLEN/8, x4, x1, x2)

inst_1667:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x19fffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:3334*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3334*FLEN/8, x4, x1, x2)

inst_1668:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x19fffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3336*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3336*FLEN/8, x4, x1, x2)

inst_1669:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x19fffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3338*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3338*FLEN/8, x4, x1, x2)

inst_1670:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1bfffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:3340*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3340*FLEN/8, x4, x1, x2)

inst_1671:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1bfffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:3342*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3342*FLEN/8, x4, x1, x2)

inst_1672:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1bfffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3344*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3344*FLEN/8, x4, x1, x2)

inst_1673:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1bfffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3346*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3346*FLEN/8, x4, x1, x2)

inst_1674:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x400000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1c00000; op2val:0x0; 
   valaddr_reg:x3; val_offset:3348*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3348*FLEN/8, x4, x1, x2)

inst_1675:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x400000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1c00000; op2val:0x1; 
   valaddr_reg:x3; val_offset:3350*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3350*FLEN/8, x4, x1, x2)

inst_1676:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x400000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1c00000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3352*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3352*FLEN/8, x4, x1, x2)

inst_1677:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x400000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1c00000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3354*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3354*FLEN/8, x4, x1, x2)

inst_1678:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x600000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1e00000; op2val:0x0; 
   valaddr_reg:x3; val_offset:3356*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3356*FLEN/8, x4, x1, x2)

inst_1679:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x600000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1e00000; op2val:0x1; 
   valaddr_reg:x3; val_offset:3358*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3358*FLEN/8, x4, x1, x2)

inst_1680:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x600000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1e00000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3360*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3360*FLEN/8, x4, x1, x2)

inst_1681:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x600000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1e00000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3362*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3362*FLEN/8, x4, x1, x2)

inst_1682:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x700000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1f00000; op2val:0x0; 
   valaddr_reg:x3; val_offset:3364*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3364*FLEN/8, x4, x1, x2)

inst_1683:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x700000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1f00000; op2val:0x1; 
   valaddr_reg:x3; val_offset:3366*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3366*FLEN/8, x4, x1, x2)

inst_1684:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x700000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1f00000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3368*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3368*FLEN/8, x4, x1, x2)

inst_1685:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x700000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1f00000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3370*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3370*FLEN/8, x4, x1, x2)

inst_1686:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x780000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1f80000; op2val:0x0; 
   valaddr_reg:x3; val_offset:3372*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3372*FLEN/8, x4, x1, x2)

inst_1687:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x780000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1f80000; op2val:0x1; 
   valaddr_reg:x3; val_offset:3374*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3374*FLEN/8, x4, x1, x2)

inst_1688:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x780000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1f80000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3376*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3376*FLEN/8, x4, x1, x2)

inst_1689:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x780000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1f80000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3378*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3378*FLEN/8, x4, x1, x2)

inst_1690:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fc0000; op2val:0x0; 
   valaddr_reg:x3; val_offset:3380*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3380*FLEN/8, x4, x1, x2)

inst_1691:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fc0000; op2val:0x1; 
   valaddr_reg:x3; val_offset:3382*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3382*FLEN/8, x4, x1, x2)

inst_1692:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fc0000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3384*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3384*FLEN/8, x4, x1, x2)

inst_1693:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fc0000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3386*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3386*FLEN/8, x4, x1, x2)

inst_1694:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fe0000; op2val:0x0; 
   valaddr_reg:x3; val_offset:3388*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3388*FLEN/8, x4, x1, x2)

inst_1695:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fe0000; op2val:0x1; 
   valaddr_reg:x3; val_offset:3390*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3390*FLEN/8, x4, x1, x2)

inst_1696:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fe0000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3392*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3392*FLEN/8, x4, x1, x2)

inst_1697:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fe0000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3394*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3394*FLEN/8, x4, x1, x2)

inst_1698:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ff0000; op2val:0x0; 
   valaddr_reg:x3; val_offset:3396*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3396*FLEN/8, x4, x1, x2)

inst_1699:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ff0000; op2val:0x1; 
   valaddr_reg:x3; val_offset:3398*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3398*FLEN/8, x4, x1, x2)

inst_1700:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ff0000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3400*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3400*FLEN/8, x4, x1, x2)

inst_1701:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ff0000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3402*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3402*FLEN/8, x4, x1, x2)

inst_1702:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ff8000; op2val:0x0; 
   valaddr_reg:x3; val_offset:3404*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3404*FLEN/8, x4, x1, x2)

inst_1703:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ff8000; op2val:0x1; 
   valaddr_reg:x3; val_offset:3406*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3406*FLEN/8, x4, x1, x2)

inst_1704:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ff8000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3408*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3408*FLEN/8, x4, x1, x2)

inst_1705:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ff8000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3410*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3410*FLEN/8, x4, x1, x2)

inst_1706:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ffc000; op2val:0x0; 
   valaddr_reg:x3; val_offset:3412*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3412*FLEN/8, x4, x1, x2)

inst_1707:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ffc000; op2val:0x1; 
   valaddr_reg:x3; val_offset:3414*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3414*FLEN/8, x4, x1, x2)

inst_1708:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ffc000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3416*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3416*FLEN/8, x4, x1, x2)

inst_1709:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ffc000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3418*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3418*FLEN/8, x4, x1, x2)

inst_1710:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ffe000; op2val:0x0; 
   valaddr_reg:x3; val_offset:3420*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3420*FLEN/8, x4, x1, x2)

inst_1711:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ffe000; op2val:0x1; 
   valaddr_reg:x3; val_offset:3422*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3422*FLEN/8, x4, x1, x2)

inst_1712:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ffe000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3424*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3424*FLEN/8, x4, x1, x2)

inst_1713:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ffe000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3426*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3426*FLEN/8, x4, x1, x2)

inst_1714:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fff000; op2val:0x0; 
   valaddr_reg:x3; val_offset:3428*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3428*FLEN/8, x4, x1, x2)

inst_1715:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fff000; op2val:0x1; 
   valaddr_reg:x3; val_offset:3430*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3430*FLEN/8, x4, x1, x2)

inst_1716:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fff000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3432*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3432*FLEN/8, x4, x1, x2)

inst_1717:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fff000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3434*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3434*FLEN/8, x4, x1, x2)

inst_1718:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fff800; op2val:0x0; 
   valaddr_reg:x3; val_offset:3436*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3436*FLEN/8, x4, x1, x2)

inst_1719:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fff800; op2val:0x1; 
   valaddr_reg:x3; val_offset:3438*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3438*FLEN/8, x4, x1, x2)

inst_1720:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fff800; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3440*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3440*FLEN/8, x4, x1, x2)

inst_1721:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fff800; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3442*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3442*FLEN/8, x4, x1, x2)

inst_1722:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fffc00; op2val:0x0; 
   valaddr_reg:x3; val_offset:3444*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3444*FLEN/8, x4, x1, x2)

inst_1723:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fffc00; op2val:0x1; 
   valaddr_reg:x3; val_offset:3446*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3446*FLEN/8, x4, x1, x2)

inst_1724:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fffc00; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3448*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3448*FLEN/8, x4, x1, x2)

inst_1725:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fffc00; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3450*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3450*FLEN/8, x4, x1, x2)

inst_1726:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fffe00; op2val:0x0; 
   valaddr_reg:x3; val_offset:3452*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3452*FLEN/8, x4, x1, x2)

inst_1727:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fffe00; op2val:0x1; 
   valaddr_reg:x3; val_offset:3454*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3454*FLEN/8, x4, x1, x2)

inst_1728:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fffe00; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3456*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3456*FLEN/8, x4, x1, x2)

inst_1729:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fffe00; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3458*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3458*FLEN/8, x4, x1, x2)

inst_1730:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ffff00; op2val:0x0; 
   valaddr_reg:x3; val_offset:3460*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3460*FLEN/8, x4, x1, x2)

inst_1731:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ffff00; op2val:0x1; 
   valaddr_reg:x3; val_offset:3462*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3462*FLEN/8, x4, x1, x2)

inst_1732:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ffff00; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3464*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3464*FLEN/8, x4, x1, x2)

inst_1733:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ffff00; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3466*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3466*FLEN/8, x4, x1, x2)

inst_1734:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ffff80; op2val:0x0; 
   valaddr_reg:x3; val_offset:3468*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3468*FLEN/8, x4, x1, x2)

inst_1735:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ffff80; op2val:0x1; 
   valaddr_reg:x3; val_offset:3470*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3470*FLEN/8, x4, x1, x2)

inst_1736:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ffff80; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3472*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3472*FLEN/8, x4, x1, x2)

inst_1737:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ffff80; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3474*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3474*FLEN/8, x4, x1, x2)

inst_1738:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ffffc0; op2val:0x0; 
   valaddr_reg:x3; val_offset:3476*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3476*FLEN/8, x4, x1, x2)

inst_1739:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ffffc0; op2val:0x1; 
   valaddr_reg:x3; val_offset:3478*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3478*FLEN/8, x4, x1, x2)

inst_1740:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ffffc0; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3480*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3480*FLEN/8, x4, x1, x2)

inst_1741:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ffffc0; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3482*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3482*FLEN/8, x4, x1, x2)

inst_1742:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ffffe0; op2val:0x0; 
   valaddr_reg:x3; val_offset:3484*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3484*FLEN/8, x4, x1, x2)

inst_1743:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ffffe0; op2val:0x1; 
   valaddr_reg:x3; val_offset:3486*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3486*FLEN/8, x4, x1, x2)

inst_1744:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ffffe0; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3488*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3488*FLEN/8, x4, x1, x2)

inst_1745:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ffffe0; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3490*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3490*FLEN/8, x4, x1, x2)

inst_1746:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fffff0; op2val:0x0; 
   valaddr_reg:x3; val_offset:3492*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3492*FLEN/8, x4, x1, x2)

inst_1747:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fffff0; op2val:0x1; 
   valaddr_reg:x3; val_offset:3494*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3494*FLEN/8, x4, x1, x2)

inst_1748:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fffff0; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3496*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3496*FLEN/8, x4, x1, x2)

inst_1749:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fffff0; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3498*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3498*FLEN/8, x4, x1, x2)

inst_1750:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fffff8; op2val:0x0; 
   valaddr_reg:x3; val_offset:3500*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3500*FLEN/8, x4, x1, x2)

inst_1751:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fffff8; op2val:0x1; 
   valaddr_reg:x3; val_offset:3502*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3502*FLEN/8, x4, x1, x2)

inst_1752:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fffff8; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3504*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3504*FLEN/8, x4, x1, x2)

inst_1753:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fffff8; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3506*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3506*FLEN/8, x4, x1, x2)

inst_1754:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fffffc; op2val:0x0; 
   valaddr_reg:x3; val_offset:3508*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3508*FLEN/8, x4, x1, x2)

inst_1755:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fffffc; op2val:0x1; 
   valaddr_reg:x3; val_offset:3510*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3510*FLEN/8, x4, x1, x2)

inst_1756:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fffffc; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3512*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3512*FLEN/8, x4, x1, x2)

inst_1757:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fffffc; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3514*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3514*FLEN/8, x4, x1, x2)

inst_1758:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fffffe; op2val:0x0; 
   valaddr_reg:x3; val_offset:3516*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3516*FLEN/8, x4, x1, x2)

inst_1759:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fffffe; op2val:0x1; 
   valaddr_reg:x3; val_offset:3518*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3518*FLEN/8, x4, x1, x2)

inst_1760:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fffffe; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3520*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3520*FLEN/8, x4, x1, x2)

inst_1761:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1fffffe; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3522*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3522*FLEN/8, x4, x1, x2)

inst_1762:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ffffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:3524*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3524*FLEN/8, x4, x1, x2)

inst_1763:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ffffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:3526*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3526*FLEN/8, x4, x1, x2)

inst_1764:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ffffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:3528*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3528*FLEN/8, x4, x1, x2)

inst_1765:
// fs1 == 0 and fe1 == 0x03 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x1ffffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3530*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3530*FLEN/8, x4, x1, x2)

inst_1766:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x2000000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3532*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3532*FLEN/8, x4, x1, x2)

inst_1767:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x2000001; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3534*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3534*FLEN/8, x4, x1, x2)

inst_1768:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x2000003; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3536*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3536*FLEN/8, x4, x1, x2)

inst_1769:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x2000007; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3538*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3538*FLEN/8, x4, x1, x2)

inst_1770:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x200000f; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3540*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3540*FLEN/8, x4, x1, x2)

inst_1771:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x200001f; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3542*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3542*FLEN/8, x4, x1, x2)

inst_1772:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x200003f; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3544*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3544*FLEN/8, x4, x1, x2)

inst_1773:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x00007f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x200007f; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3546*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3546*FLEN/8, x4, x1, x2)

inst_1774:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x20000ff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3548*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3548*FLEN/8, x4, x1, x2)

inst_1775:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x20001ff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3550*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3550*FLEN/8, x4, x1, x2)

inst_1776:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x20003ff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3552*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3552*FLEN/8, x4, x1, x2)

inst_1777:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x20007ff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3554*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3554*FLEN/8, x4, x1, x2)

inst_1778:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x000fff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x2000fff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3556*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3556*FLEN/8, x4, x1, x2)

inst_1779:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x001fff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x2001fff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3558*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3558*FLEN/8, x4, x1, x2)

inst_1780:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x003fff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x2003fff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3560*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3560*FLEN/8, x4, x1, x2)

inst_1781:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x007fff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x2007fff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3562*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3562*FLEN/8, x4, x1, x2)

inst_1782:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x200ffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3564*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3564*FLEN/8, x4, x1, x2)

inst_1783:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x201ffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3566*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3566*FLEN/8, x4, x1, x2)

inst_1784:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x203ffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3568*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3568*FLEN/8, x4, x1, x2)

inst_1785:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x207ffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3570*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3570*FLEN/8, x4, x1, x2)

inst_1786:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x20fffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3572*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3572*FLEN/8, x4, x1, x2)

inst_1787:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x21fffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3574*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3574*FLEN/8, x4, x1, x2)

inst_1788:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x23fffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3576*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3576*FLEN/8, x4, x1, x2)

inst_1789:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x400000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x2400000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3578*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3578*FLEN/8, x4, x1, x2)

inst_1790:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x600000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x2600000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3580*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3580*FLEN/8, x4, x1, x2)

inst_1791:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x700000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x2700000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3582*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3582*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_15)

inst_1792:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x780000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x2780000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3584*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3584*FLEN/8, x4, x1, x2)

inst_1793:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x27c0000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3586*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3586*FLEN/8, x4, x1, x2)

inst_1794:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x27e0000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3588*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3588*FLEN/8, x4, x1, x2)

inst_1795:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x27f0000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3590*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3590*FLEN/8, x4, x1, x2)

inst_1796:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x27f8000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3592*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3592*FLEN/8, x4, x1, x2)

inst_1797:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x27fc000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3594*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3594*FLEN/8, x4, x1, x2)

inst_1798:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x27fe000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3596*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3596*FLEN/8, x4, x1, x2)

inst_1799:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x27ff000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3598*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3598*FLEN/8, x4, x1, x2)

inst_1800:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x27ff800; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3600*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3600*FLEN/8, x4, x1, x2)

inst_1801:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x27ffc00; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3602*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3602*FLEN/8, x4, x1, x2)

inst_1802:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x27ffe00; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3604*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3604*FLEN/8, x4, x1, x2)

inst_1803:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x27fff00; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3606*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3606*FLEN/8, x4, x1, x2)

inst_1804:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x27fff80; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3608*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3608*FLEN/8, x4, x1, x2)

inst_1805:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x27fffc0; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3610*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3610*FLEN/8, x4, x1, x2)

inst_1806:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x27fffe0; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3612*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3612*FLEN/8, x4, x1, x2)

inst_1807:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x27ffff0; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3614*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3614*FLEN/8, x4, x1, x2)

inst_1808:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x27ffff8; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3616*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3616*FLEN/8, x4, x1, x2)

inst_1809:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x27ffffc; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3618*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3618*FLEN/8, x4, x1, x2)

inst_1810:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x27ffffe; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3620*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3620*FLEN/8, x4, x1, x2)

inst_1811:
// fs1 == 0 and fe1 == 0x04 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x27fffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3622*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3622*FLEN/8, x4, x1, x2)

inst_1812:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x23000000; op2val:0x1; 
   valaddr_reg:x3; val_offset:3624*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3624*FLEN/8, x4, x1, x2)

inst_1813:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x23000001; op2val:0x1; 
   valaddr_reg:x3; val_offset:3626*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3626*FLEN/8, x4, x1, x2)

inst_1814:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x23000003; op2val:0x1; 
   valaddr_reg:x3; val_offset:3628*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3628*FLEN/8, x4, x1, x2)

inst_1815:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x23000007; op2val:0x1; 
   valaddr_reg:x3; val_offset:3630*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3630*FLEN/8, x4, x1, x2)

inst_1816:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x2300000f; op2val:0x1; 
   valaddr_reg:x3; val_offset:3632*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3632*FLEN/8, x4, x1, x2)

inst_1817:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x2300001f; op2val:0x1; 
   valaddr_reg:x3; val_offset:3634*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3634*FLEN/8, x4, x1, x2)

inst_1818:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x2300003f; op2val:0x1; 
   valaddr_reg:x3; val_offset:3636*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3636*FLEN/8, x4, x1, x2)

inst_1819:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x00007f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x2300007f; op2val:0x1; 
   valaddr_reg:x3; val_offset:3638*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3638*FLEN/8, x4, x1, x2)

inst_1820:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x230000ff; op2val:0x1; 
   valaddr_reg:x3; val_offset:3640*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3640*FLEN/8, x4, x1, x2)

inst_1821:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x230001ff; op2val:0x1; 
   valaddr_reg:x3; val_offset:3642*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3642*FLEN/8, x4, x1, x2)

inst_1822:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x230003ff; op2val:0x1; 
   valaddr_reg:x3; val_offset:3644*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3644*FLEN/8, x4, x1, x2)

inst_1823:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x230007ff; op2val:0x1; 
   valaddr_reg:x3; val_offset:3646*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3646*FLEN/8, x4, x1, x2)

inst_1824:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x000fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x23000fff; op2val:0x1; 
   valaddr_reg:x3; val_offset:3648*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3648*FLEN/8, x4, x1, x2)

inst_1825:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x001fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x23001fff; op2val:0x1; 
   valaddr_reg:x3; val_offset:3650*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3650*FLEN/8, x4, x1, x2)

inst_1826:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x003fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x23003fff; op2val:0x1; 
   valaddr_reg:x3; val_offset:3652*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3652*FLEN/8, x4, x1, x2)

inst_1827:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x007fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x23007fff; op2val:0x1; 
   valaddr_reg:x3; val_offset:3654*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3654*FLEN/8, x4, x1, x2)

inst_1828:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x2300ffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:3656*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3656*FLEN/8, x4, x1, x2)

inst_1829:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x2301ffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:3658*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3658*FLEN/8, x4, x1, x2)

inst_1830:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x2303ffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:3660*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3660*FLEN/8, x4, x1, x2)

inst_1831:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x2307ffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:3662*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3662*FLEN/8, x4, x1, x2)

inst_1832:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x230fffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:3664*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3664*FLEN/8, x4, x1, x2)

inst_1833:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x231fffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:3666*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3666*FLEN/8, x4, x1, x2)

inst_1834:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x233fffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:3668*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3668*FLEN/8, x4, x1, x2)

inst_1835:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x400000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x23400000; op2val:0x1; 
   valaddr_reg:x3; val_offset:3670*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3670*FLEN/8, x4, x1, x2)

inst_1836:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x600000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x23600000; op2val:0x1; 
   valaddr_reg:x3; val_offset:3672*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3672*FLEN/8, x4, x1, x2)

inst_1837:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x700000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x23700000; op2val:0x1; 
   valaddr_reg:x3; val_offset:3674*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3674*FLEN/8, x4, x1, x2)

inst_1838:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x780000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x23780000; op2val:0x1; 
   valaddr_reg:x3; val_offset:3676*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3676*FLEN/8, x4, x1, x2)

inst_1839:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x237c0000; op2val:0x1; 
   valaddr_reg:x3; val_offset:3678*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3678*FLEN/8, x4, x1, x2)

inst_1840:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x237e0000; op2val:0x1; 
   valaddr_reg:x3; val_offset:3680*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3680*FLEN/8, x4, x1, x2)

inst_1841:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x237f0000; op2val:0x1; 
   valaddr_reg:x3; val_offset:3682*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3682*FLEN/8, x4, x1, x2)

inst_1842:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x237f8000; op2val:0x1; 
   valaddr_reg:x3; val_offset:3684*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3684*FLEN/8, x4, x1, x2)

inst_1843:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x237fc000; op2val:0x1; 
   valaddr_reg:x3; val_offset:3686*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3686*FLEN/8, x4, x1, x2)

inst_1844:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x237fe000; op2val:0x1; 
   valaddr_reg:x3; val_offset:3688*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3688*FLEN/8, x4, x1, x2)

inst_1845:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x237ff000; op2val:0x1; 
   valaddr_reg:x3; val_offset:3690*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3690*FLEN/8, x4, x1, x2)

inst_1846:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x237ff800; op2val:0x1; 
   valaddr_reg:x3; val_offset:3692*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3692*FLEN/8, x4, x1, x2)

inst_1847:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x237ffc00; op2val:0x1; 
   valaddr_reg:x3; val_offset:3694*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3694*FLEN/8, x4, x1, x2)

inst_1848:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x237ffe00; op2val:0x1; 
   valaddr_reg:x3; val_offset:3696*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3696*FLEN/8, x4, x1, x2)

inst_1849:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x237fff00; op2val:0x1; 
   valaddr_reg:x3; val_offset:3698*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3698*FLEN/8, x4, x1, x2)

inst_1850:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x237fff80; op2val:0x1; 
   valaddr_reg:x3; val_offset:3700*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3700*FLEN/8, x4, x1, x2)

inst_1851:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x237fffc0; op2val:0x1; 
   valaddr_reg:x3; val_offset:3702*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3702*FLEN/8, x4, x1, x2)

inst_1852:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x237fffe0; op2val:0x1; 
   valaddr_reg:x3; val_offset:3704*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3704*FLEN/8, x4, x1, x2)

inst_1853:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x237ffff0; op2val:0x1; 
   valaddr_reg:x3; val_offset:3706*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3706*FLEN/8, x4, x1, x2)

inst_1854:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x237ffff8; op2val:0x1; 
   valaddr_reg:x3; val_offset:3708*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3708*FLEN/8, x4, x1, x2)

inst_1855:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x237ffffc; op2val:0x1; 
   valaddr_reg:x3; val_offset:3710*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3710*FLEN/8, x4, x1, x2)

inst_1856:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x237ffffe; op2val:0x1; 
   valaddr_reg:x3; val_offset:3712*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3712*FLEN/8, x4, x1, x2)

inst_1857:
// fs1 == 0 and fe1 == 0x46 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x237fffff; op2val:0x1; 
   valaddr_reg:x3; val_offset:3714*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3714*FLEN/8, x4, x1, x2)

inst_1858:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x30800000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3716*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3716*FLEN/8, x4, x1, x2)

inst_1859:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x30800001; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3718*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3718*FLEN/8, x4, x1, x2)

inst_1860:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x30800003; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3720*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3720*FLEN/8, x4, x1, x2)

inst_1861:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x30800007; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3722*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3722*FLEN/8, x4, x1, x2)

inst_1862:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3080000f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3724*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3724*FLEN/8, x4, x1, x2)

inst_1863:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3080001f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3726*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3726*FLEN/8, x4, x1, x2)

inst_1864:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3080003f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3728*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3728*FLEN/8, x4, x1, x2)

inst_1865:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x00007f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3080007f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3730*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3730*FLEN/8, x4, x1, x2)

inst_1866:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x308000ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3732*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3732*FLEN/8, x4, x1, x2)

inst_1867:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x308001ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3734*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3734*FLEN/8, x4, x1, x2)

inst_1868:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x308003ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3736*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3736*FLEN/8, x4, x1, x2)

inst_1869:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x308007ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3738*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3738*FLEN/8, x4, x1, x2)

inst_1870:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x000fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x30800fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3740*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3740*FLEN/8, x4, x1, x2)

inst_1871:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x001fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x30801fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3742*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3742*FLEN/8, x4, x1, x2)

inst_1872:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x003fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x30803fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3744*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3744*FLEN/8, x4, x1, x2)

inst_1873:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x007fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x30807fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3746*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3746*FLEN/8, x4, x1, x2)

inst_1874:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3080ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3748*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3748*FLEN/8, x4, x1, x2)

inst_1875:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3081ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3750*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3750*FLEN/8, x4, x1, x2)

inst_1876:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3083ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3752*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3752*FLEN/8, x4, x1, x2)

inst_1877:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3087ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3754*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3754*FLEN/8, x4, x1, x2)

inst_1878:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x308fffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3756*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3756*FLEN/8, x4, x1, x2)

inst_1879:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x309fffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3758*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3758*FLEN/8, x4, x1, x2)

inst_1880:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x30bfffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3760*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3760*FLEN/8, x4, x1, x2)

inst_1881:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x400000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x30c00000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3762*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3762*FLEN/8, x4, x1, x2)

inst_1882:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x600000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x30e00000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3764*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3764*FLEN/8, x4, x1, x2)

inst_1883:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x700000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x30f00000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3766*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3766*FLEN/8, x4, x1, x2)

inst_1884:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x780000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x30f80000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3768*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3768*FLEN/8, x4, x1, x2)

inst_1885:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x30fc0000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3770*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3770*FLEN/8, x4, x1, x2)

inst_1886:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x30fe0000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3772*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3772*FLEN/8, x4, x1, x2)

inst_1887:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x30ff0000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3774*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3774*FLEN/8, x4, x1, x2)

inst_1888:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x30ff8000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3776*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3776*FLEN/8, x4, x1, x2)

inst_1889:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x30ffc000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3778*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3778*FLEN/8, x4, x1, x2)

inst_1890:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x30ffe000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3780*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3780*FLEN/8, x4, x1, x2)

inst_1891:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x30fff000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3782*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3782*FLEN/8, x4, x1, x2)

inst_1892:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x30fff800; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3784*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3784*FLEN/8, x4, x1, x2)

inst_1893:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x30fffc00; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3786*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3786*FLEN/8, x4, x1, x2)

inst_1894:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x30fffe00; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3788*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3788*FLEN/8, x4, x1, x2)

inst_1895:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x30ffff00; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3790*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3790*FLEN/8, x4, x1, x2)

inst_1896:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x30ffff80; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3792*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3792*FLEN/8, x4, x1, x2)

inst_1897:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x30ffffc0; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3794*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3794*FLEN/8, x4, x1, x2)

inst_1898:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x30ffffe0; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3796*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3796*FLEN/8, x4, x1, x2)

inst_1899:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x30fffff0; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3798*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3798*FLEN/8, x4, x1, x2)

inst_1900:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x30fffff8; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3800*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3800*FLEN/8, x4, x1, x2)

inst_1901:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x30fffffc; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3802*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3802*FLEN/8, x4, x1, x2)

inst_1902:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x30fffffe; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3804*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3804*FLEN/8, x4, x1, x2)

inst_1903:
// fs1 == 0 and fe1 == 0x61 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x30ffffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3806*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3806*FLEN/8, x4, x1, x2)

inst_1904:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x36000000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3808*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3808*FLEN/8, x4, x1, x2)

inst_1905:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x36000001; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3810*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3810*FLEN/8, x4, x1, x2)

inst_1906:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x36000003; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3812*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3812*FLEN/8, x4, x1, x2)

inst_1907:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x36000007; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3814*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3814*FLEN/8, x4, x1, x2)

inst_1908:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3600000f; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3816*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3816*FLEN/8, x4, x1, x2)

inst_1909:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3600001f; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3818*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3818*FLEN/8, x4, x1, x2)

inst_1910:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3600003f; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3820*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3820*FLEN/8, x4, x1, x2)

inst_1911:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x00007f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3600007f; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3822*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3822*FLEN/8, x4, x1, x2)

inst_1912:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x360000ff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3824*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3824*FLEN/8, x4, x1, x2)

inst_1913:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x360001ff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3826*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3826*FLEN/8, x4, x1, x2)

inst_1914:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x360003ff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3828*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3828*FLEN/8, x4, x1, x2)

inst_1915:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x360007ff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3830*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3830*FLEN/8, x4, x1, x2)

inst_1916:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x000fff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x36000fff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3832*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3832*FLEN/8, x4, x1, x2)

inst_1917:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x001fff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x36001fff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3834*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3834*FLEN/8, x4, x1, x2)

inst_1918:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x003fff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x36003fff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3836*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3836*FLEN/8, x4, x1, x2)

inst_1919:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x007fff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x36007fff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3838*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3838*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_16)

inst_1920:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3600ffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3840*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3840*FLEN/8, x4, x1, x2)

inst_1921:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3601ffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3842*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3842*FLEN/8, x4, x1, x2)

inst_1922:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3603ffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3844*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3844*FLEN/8, x4, x1, x2)

inst_1923:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3607ffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3846*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3846*FLEN/8, x4, x1, x2)

inst_1924:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x360fffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3848*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3848*FLEN/8, x4, x1, x2)

inst_1925:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x361fffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3850*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3850*FLEN/8, x4, x1, x2)

inst_1926:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x363fffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3852*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3852*FLEN/8, x4, x1, x2)

inst_1927:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x400000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x36400000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3854*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3854*FLEN/8, x4, x1, x2)

inst_1928:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x600000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x36600000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3856*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3856*FLEN/8, x4, x1, x2)

inst_1929:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x700000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x36700000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3858*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3858*FLEN/8, x4, x1, x2)

inst_1930:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x780000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x36780000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3860*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3860*FLEN/8, x4, x1, x2)

inst_1931:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x367c0000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3862*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3862*FLEN/8, x4, x1, x2)

inst_1932:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x367e0000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3864*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3864*FLEN/8, x4, x1, x2)

inst_1933:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x367f0000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3866*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3866*FLEN/8, x4, x1, x2)

inst_1934:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x367f8000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3868*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3868*FLEN/8, x4, x1, x2)

inst_1935:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x367fc000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3870*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3870*FLEN/8, x4, x1, x2)

inst_1936:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x367fe000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3872*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3872*FLEN/8, x4, x1, x2)

inst_1937:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x367ff000; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3874*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3874*FLEN/8, x4, x1, x2)

inst_1938:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x367ff800; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3876*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3876*FLEN/8, x4, x1, x2)

inst_1939:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x367ffc00; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3878*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3878*FLEN/8, x4, x1, x2)

inst_1940:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x367ffe00; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3880*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3880*FLEN/8, x4, x1, x2)

inst_1941:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x367fff00; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3882*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3882*FLEN/8, x4, x1, x2)

inst_1942:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x367fff80; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3884*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3884*FLEN/8, x4, x1, x2)

inst_1943:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x367fffc0; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3886*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3886*FLEN/8, x4, x1, x2)

inst_1944:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x367fffe0; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3888*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3888*FLEN/8, x4, x1, x2)

inst_1945:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x367ffff0; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3890*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3890*FLEN/8, x4, x1, x2)

inst_1946:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x367ffff8; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3892*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3892*FLEN/8, x4, x1, x2)

inst_1947:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x367ffffc; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3894*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3894*FLEN/8, x4, x1, x2)

inst_1948:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x367ffffe; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3896*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3896*FLEN/8, x4, x1, x2)

inst_1949:
// fs1 == 0 and fe1 == 0x6c and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x367fffff; op2val:0x800000; 
   valaddr_reg:x3; val_offset:3898*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3898*FLEN/8, x4, x1, x2)

inst_1950:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3d800000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3900*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3900*FLEN/8, x4, x1, x2)

inst_1951:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3d800001; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3902*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3902*FLEN/8, x4, x1, x2)

inst_1952:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3d800003; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3904*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3904*FLEN/8, x4, x1, x2)

inst_1953:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3d800007; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3906*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3906*FLEN/8, x4, x1, x2)

inst_1954:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3d80000f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3908*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3908*FLEN/8, x4, x1, x2)

inst_1955:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3d80001f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3910*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3910*FLEN/8, x4, x1, x2)

inst_1956:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3d80003f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3912*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3912*FLEN/8, x4, x1, x2)

inst_1957:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x00007f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3d80007f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3914*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3914*FLEN/8, x4, x1, x2)

inst_1958:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3d8000ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3916*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3916*FLEN/8, x4, x1, x2)

inst_1959:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3d8001ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3918*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3918*FLEN/8, x4, x1, x2)

inst_1960:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3d8003ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3920*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3920*FLEN/8, x4, x1, x2)

inst_1961:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3d8007ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3922*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3922*FLEN/8, x4, x1, x2)

inst_1962:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x000fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3d800fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3924*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3924*FLEN/8, x4, x1, x2)

inst_1963:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x001fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3d801fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3926*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3926*FLEN/8, x4, x1, x2)

inst_1964:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x003fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3d803fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3928*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3928*FLEN/8, x4, x1, x2)

inst_1965:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x007fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3d807fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3930*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3930*FLEN/8, x4, x1, x2)

inst_1966:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3d80ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3932*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3932*FLEN/8, x4, x1, x2)

inst_1967:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3d81ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3934*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3934*FLEN/8, x4, x1, x2)

inst_1968:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3d83ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3936*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3936*FLEN/8, x4, x1, x2)

inst_1969:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3d87ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3938*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3938*FLEN/8, x4, x1, x2)

inst_1970:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3d8fffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3940*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3940*FLEN/8, x4, x1, x2)

inst_1971:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3d9fffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3942*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3942*FLEN/8, x4, x1, x2)

inst_1972:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3dbfffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3944*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3944*FLEN/8, x4, x1, x2)

inst_1973:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x400000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3dc00000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3946*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3946*FLEN/8, x4, x1, x2)

inst_1974:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x600000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3de00000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3948*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3948*FLEN/8, x4, x1, x2)

inst_1975:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x700000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3df00000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3950*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3950*FLEN/8, x4, x1, x2)

inst_1976:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x780000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3df80000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3952*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3952*FLEN/8, x4, x1, x2)

inst_1977:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3dfc0000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3954*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3954*FLEN/8, x4, x1, x2)

inst_1978:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3dfe0000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3956*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3956*FLEN/8, x4, x1, x2)

inst_1979:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3dff0000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3958*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3958*FLEN/8, x4, x1, x2)

inst_1980:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3dff8000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3960*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3960*FLEN/8, x4, x1, x2)

inst_1981:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3dffc000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3962*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3962*FLEN/8, x4, x1, x2)

inst_1982:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3dffe000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3964*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3964*FLEN/8, x4, x1, x2)

inst_1983:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3dfff000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3966*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3966*FLEN/8, x4, x1, x2)

inst_1984:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3dfff800; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3968*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3968*FLEN/8, x4, x1, x2)

inst_1985:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3dfffc00; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3970*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3970*FLEN/8, x4, x1, x2)

inst_1986:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3dfffe00; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3972*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3972*FLEN/8, x4, x1, x2)

inst_1987:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3dffff00; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3974*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3974*FLEN/8, x4, x1, x2)

inst_1988:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3dffff80; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3976*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3976*FLEN/8, x4, x1, x2)

inst_1989:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3dffffc0; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3978*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3978*FLEN/8, x4, x1, x2)

inst_1990:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3dffffe0; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3980*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3980*FLEN/8, x4, x1, x2)

inst_1991:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3dfffff0; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3982*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3982*FLEN/8, x4, x1, x2)

inst_1992:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3dfffff8; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3984*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3984*FLEN/8, x4, x1, x2)

inst_1993:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3dfffffc; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3986*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3986*FLEN/8, x4, x1, x2)

inst_1994:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3dfffffe; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3988*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3988*FLEN/8, x4, x1, x2)

inst_1995:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3dffffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3990*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3990*FLEN/8, x4, x1, x2)

inst_1996:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e000000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3992*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3992*FLEN/8, x4, x1, x2)

inst_1997:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e000001; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3994*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3994*FLEN/8, x4, x1, x2)

inst_1998:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e000003; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3996*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3996*FLEN/8, x4, x1, x2)

inst_1999:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e000007; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:3998*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 3998*FLEN/8, x4, x1, x2)

inst_2000:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e00000f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4000*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4000*FLEN/8, x4, x1, x2)

inst_2001:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e00001f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4002*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4002*FLEN/8, x4, x1, x2)

inst_2002:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e00003f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4004*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4004*FLEN/8, x4, x1, x2)

inst_2003:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x00007f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e00007f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4006*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4006*FLEN/8, x4, x1, x2)

inst_2004:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e0000ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4008*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4008*FLEN/8, x4, x1, x2)

inst_2005:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e0001ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4010*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4010*FLEN/8, x4, x1, x2)

inst_2006:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e0003ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4012*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4012*FLEN/8, x4, x1, x2)

inst_2007:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e0007ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4014*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4014*FLEN/8, x4, x1, x2)

inst_2008:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x000fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e000fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4016*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4016*FLEN/8, x4, x1, x2)

inst_2009:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x001fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e001fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4018*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4018*FLEN/8, x4, x1, x2)

inst_2010:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x003fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e003fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4020*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4020*FLEN/8, x4, x1, x2)

inst_2011:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x007fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e007fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4022*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4022*FLEN/8, x4, x1, x2)

inst_2012:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e00ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4024*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4024*FLEN/8, x4, x1, x2)

inst_2013:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e01ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4026*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4026*FLEN/8, x4, x1, x2)

inst_2014:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e03ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4028*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4028*FLEN/8, x4, x1, x2)

inst_2015:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e07ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4030*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4030*FLEN/8, x4, x1, x2)

inst_2016:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e0fffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4032*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4032*FLEN/8, x4, x1, x2)

inst_2017:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e1fffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4034*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4034*FLEN/8, x4, x1, x2)

inst_2018:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e3fffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4036*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4036*FLEN/8, x4, x1, x2)

inst_2019:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x400000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e400000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4038*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4038*FLEN/8, x4, x1, x2)

inst_2020:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x600000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e600000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4040*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4040*FLEN/8, x4, x1, x2)

inst_2021:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x700000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e700000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4042*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4042*FLEN/8, x4, x1, x2)

inst_2022:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x780000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e780000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4044*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4044*FLEN/8, x4, x1, x2)

inst_2023:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e7c0000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4046*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4046*FLEN/8, x4, x1, x2)

inst_2024:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e7e0000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4048*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4048*FLEN/8, x4, x1, x2)

inst_2025:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e7f0000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4050*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4050*FLEN/8, x4, x1, x2)

inst_2026:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e7f8000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4052*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4052*FLEN/8, x4, x1, x2)

inst_2027:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e7fc000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4054*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4054*FLEN/8, x4, x1, x2)

inst_2028:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e7fe000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4056*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4056*FLEN/8, x4, x1, x2)

inst_2029:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e7ff000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4058*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4058*FLEN/8, x4, x1, x2)

inst_2030:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e7ff800; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4060*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4060*FLEN/8, x4, x1, x2)

inst_2031:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e7ffc00; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4062*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4062*FLEN/8, x4, x1, x2)

inst_2032:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e7ffe00; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4064*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4064*FLEN/8, x4, x1, x2)

inst_2033:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e7fff00; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4066*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4066*FLEN/8, x4, x1, x2)

inst_2034:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e7fff80; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4068*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4068*FLEN/8, x4, x1, x2)

inst_2035:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e7fffc0; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4070*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4070*FLEN/8, x4, x1, x2)

inst_2036:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e7fffe0; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4072*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4072*FLEN/8, x4, x1, x2)

inst_2037:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e7ffff0; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4074*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4074*FLEN/8, x4, x1, x2)

inst_2038:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e7ffff8; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4076*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4076*FLEN/8, x4, x1, x2)

inst_2039:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e7ffffc; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4078*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4078*FLEN/8, x4, x1, x2)

inst_2040:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e7ffffe; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4080*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4080*FLEN/8, x4, x1, x2)

inst_2041:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e7fffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4082*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4082*FLEN/8, x4, x1, x2)

inst_2042:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e800000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4084*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4084*FLEN/8, x4, x1, x2)

inst_2043:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e800001; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4086*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4086*FLEN/8, x4, x1, x2)

inst_2044:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e800003; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4088*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4088*FLEN/8, x4, x1, x2)

inst_2045:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e800007; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4090*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4090*FLEN/8, x4, x1, x2)

inst_2046:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e80000f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4092*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4092*FLEN/8, x4, x1, x2)

inst_2047:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e80001f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4094*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4094*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_17)

inst_2048:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e80003f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4096*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4096*FLEN/8, x4, x1, x2)

inst_2049:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x00007f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e80007f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4098*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4098*FLEN/8, x4, x1, x2)

inst_2050:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e8000ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4100*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4100*FLEN/8, x4, x1, x2)

inst_2051:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e8001ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4102*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4102*FLEN/8, x4, x1, x2)

inst_2052:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e8003ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4104*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4104*FLEN/8, x4, x1, x2)

inst_2053:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e8007ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4106*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4106*FLEN/8, x4, x1, x2)

inst_2054:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x000fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e800fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4108*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4108*FLEN/8, x4, x1, x2)

inst_2055:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x001fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e801fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4110*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4110*FLEN/8, x4, x1, x2)

inst_2056:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x003fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e803fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4112*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4112*FLEN/8, x4, x1, x2)

inst_2057:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x007fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e807fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4114*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4114*FLEN/8, x4, x1, x2)

inst_2058:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e80ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4116*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4116*FLEN/8, x4, x1, x2)

inst_2059:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e81ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4118*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4118*FLEN/8, x4, x1, x2)

inst_2060:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e83ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4120*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4120*FLEN/8, x4, x1, x2)

inst_2061:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e87ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4122*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4122*FLEN/8, x4, x1, x2)

inst_2062:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e8fffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4124*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4124*FLEN/8, x4, x1, x2)

inst_2063:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3e9fffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4126*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4126*FLEN/8, x4, x1, x2)

inst_2064:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3ebfffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4128*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4128*FLEN/8, x4, x1, x2)

inst_2065:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x400000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3ec00000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4130*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4130*FLEN/8, x4, x1, x2)

inst_2066:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x600000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3ee00000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4132*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4132*FLEN/8, x4, x1, x2)

inst_2067:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x700000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3ef00000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4134*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4134*FLEN/8, x4, x1, x2)

inst_2068:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x780000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3ef80000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4136*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4136*FLEN/8, x4, x1, x2)

inst_2069:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3efc0000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4138*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4138*FLEN/8, x4, x1, x2)

inst_2070:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3efe0000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4140*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4140*FLEN/8, x4, x1, x2)

inst_2071:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3eff0000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4142*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4142*FLEN/8, x4, x1, x2)

inst_2072:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3eff8000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4144*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4144*FLEN/8, x4, x1, x2)

inst_2073:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3effc000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4146*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4146*FLEN/8, x4, x1, x2)

inst_2074:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3effe000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4148*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4148*FLEN/8, x4, x1, x2)

inst_2075:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3efff000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4150*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4150*FLEN/8, x4, x1, x2)

inst_2076:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3efff800; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4152*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4152*FLEN/8, x4, x1, x2)

inst_2077:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3efffc00; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4154*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4154*FLEN/8, x4, x1, x2)

inst_2078:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3efffe00; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4156*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4156*FLEN/8, x4, x1, x2)

inst_2079:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3effff00; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4158*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4158*FLEN/8, x4, x1, x2)

inst_2080:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3effff80; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4160*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4160*FLEN/8, x4, x1, x2)

inst_2081:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3effffc0; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4162*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4162*FLEN/8, x4, x1, x2)

inst_2082:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3effffe0; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4164*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4164*FLEN/8, x4, x1, x2)

inst_2083:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3efffff0; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4166*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4166*FLEN/8, x4, x1, x2)

inst_2084:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3efffff8; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4168*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4168*FLEN/8, x4, x1, x2)

inst_2085:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3efffffc; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4170*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4170*FLEN/8, x4, x1, x2)

inst_2086:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3efffffe; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4172*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4172*FLEN/8, x4, x1, x2)

inst_2087:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3effffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4174*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4174*FLEN/8, x4, x1, x2)

inst_2088:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f000000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4176*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4176*FLEN/8, x4, x1, x2)

inst_2089:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f000001; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4178*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4178*FLEN/8, x4, x1, x2)

inst_2090:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f000003; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4180*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4180*FLEN/8, x4, x1, x2)

inst_2091:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f000007; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4182*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4182*FLEN/8, x4, x1, x2)

inst_2092:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f00000f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4184*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4184*FLEN/8, x4, x1, x2)

inst_2093:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f00001f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4186*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4186*FLEN/8, x4, x1, x2)

inst_2094:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f00003f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4188*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4188*FLEN/8, x4, x1, x2)

inst_2095:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x00007f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f00007f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4190*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4190*FLEN/8, x4, x1, x2)

inst_2096:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f0000ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4192*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4192*FLEN/8, x4, x1, x2)

inst_2097:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f0001ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4194*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4194*FLEN/8, x4, x1, x2)

inst_2098:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f0003ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4196*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4196*FLEN/8, x4, x1, x2)

inst_2099:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f0007ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4198*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4198*FLEN/8, x4, x1, x2)

inst_2100:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x000fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f000fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4200*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4200*FLEN/8, x4, x1, x2)

inst_2101:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x001fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f001fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4202*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4202*FLEN/8, x4, x1, x2)

inst_2102:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x003fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f003fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4204*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4204*FLEN/8, x4, x1, x2)

inst_2103:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x007fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f007fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4206*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4206*FLEN/8, x4, x1, x2)

inst_2104:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f00ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4208*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4208*FLEN/8, x4, x1, x2)

inst_2105:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f01ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4210*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4210*FLEN/8, x4, x1, x2)

inst_2106:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f03ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4212*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4212*FLEN/8, x4, x1, x2)

inst_2107:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f07ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4214*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4214*FLEN/8, x4, x1, x2)

inst_2108:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f0fffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4216*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4216*FLEN/8, x4, x1, x2)

inst_2109:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f1fffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4218*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4218*FLEN/8, x4, x1, x2)

inst_2110:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f3fffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4220*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4220*FLEN/8, x4, x1, x2)

inst_2111:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x400000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f400000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4222*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4222*FLEN/8, x4, x1, x2)

inst_2112:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x600000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f600000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4224*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4224*FLEN/8, x4, x1, x2)

inst_2113:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x700000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f700000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4226*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4226*FLEN/8, x4, x1, x2)

inst_2114:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x780000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f780000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4228*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4228*FLEN/8, x4, x1, x2)

inst_2115:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f7c0000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4230*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4230*FLEN/8, x4, x1, x2)

inst_2116:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f7e0000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4232*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4232*FLEN/8, x4, x1, x2)

inst_2117:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f7f0000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4234*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4234*FLEN/8, x4, x1, x2)

inst_2118:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f7f8000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4236*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4236*FLEN/8, x4, x1, x2)

inst_2119:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f7fc000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4238*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4238*FLEN/8, x4, x1, x2)

inst_2120:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f7fe000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4240*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4240*FLEN/8, x4, x1, x2)

inst_2121:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f7ff000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4242*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4242*FLEN/8, x4, x1, x2)

inst_2122:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f7ff800; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4244*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4244*FLEN/8, x4, x1, x2)

inst_2123:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f7ffc00; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4246*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4246*FLEN/8, x4, x1, x2)

inst_2124:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f7ffe00; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4248*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4248*FLEN/8, x4, x1, x2)

inst_2125:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f7fff00; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4250*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4250*FLEN/8, x4, x1, x2)

inst_2126:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f7fff80; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4252*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4252*FLEN/8, x4, x1, x2)

inst_2127:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f7fffc0; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4254*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4254*FLEN/8, x4, x1, x2)

inst_2128:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f7fffe0; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4256*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4256*FLEN/8, x4, x1, x2)

inst_2129:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f7ffff0; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4258*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4258*FLEN/8, x4, x1, x2)

inst_2130:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f7ffff8; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4260*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4260*FLEN/8, x4, x1, x2)

inst_2131:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f7ffffc; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4262*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4262*FLEN/8, x4, x1, x2)

inst_2132:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f7ffffe; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4264*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4264*FLEN/8, x4, x1, x2)

inst_2133:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f7fffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4266*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4266*FLEN/8, x4, x1, x2)

inst_2134:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x30800000; 
   valaddr_reg:x3; val_offset:4268*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4268*FLEN/8, x4, x1, x2)

inst_2135:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x30800001; 
   valaddr_reg:x3; val_offset:4270*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4270*FLEN/8, x4, x1, x2)

inst_2136:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x30800003; 
   valaddr_reg:x3; val_offset:4272*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4272*FLEN/8, x4, x1, x2)

inst_2137:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x30800007; 
   valaddr_reg:x3; val_offset:4274*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4274*FLEN/8, x4, x1, x2)

inst_2138:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3080000f; 
   valaddr_reg:x3; val_offset:4276*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4276*FLEN/8, x4, x1, x2)

inst_2139:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3080001f; 
   valaddr_reg:x3; val_offset:4278*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4278*FLEN/8, x4, x1, x2)

inst_2140:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3080003f; 
   valaddr_reg:x3; val_offset:4280*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4280*FLEN/8, x4, x1, x2)

inst_2141:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3080007f; 
   valaddr_reg:x3; val_offset:4282*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4282*FLEN/8, x4, x1, x2)

inst_2142:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x308000ff; 
   valaddr_reg:x3; val_offset:4284*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4284*FLEN/8, x4, x1, x2)

inst_2143:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x308001ff; 
   valaddr_reg:x3; val_offset:4286*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4286*FLEN/8, x4, x1, x2)

inst_2144:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x308003ff; 
   valaddr_reg:x3; val_offset:4288*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4288*FLEN/8, x4, x1, x2)

inst_2145:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x308007ff; 
   valaddr_reg:x3; val_offset:4290*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4290*FLEN/8, x4, x1, x2)

inst_2146:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x30800fff; 
   valaddr_reg:x3; val_offset:4292*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4292*FLEN/8, x4, x1, x2)

inst_2147:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x30801fff; 
   valaddr_reg:x3; val_offset:4294*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4294*FLEN/8, x4, x1, x2)

inst_2148:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x30803fff; 
   valaddr_reg:x3; val_offset:4296*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4296*FLEN/8, x4, x1, x2)

inst_2149:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x30807fff; 
   valaddr_reg:x3; val_offset:4298*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4298*FLEN/8, x4, x1, x2)

inst_2150:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3080ffff; 
   valaddr_reg:x3; val_offset:4300*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4300*FLEN/8, x4, x1, x2)

inst_2151:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3081ffff; 
   valaddr_reg:x3; val_offset:4302*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4302*FLEN/8, x4, x1, x2)

inst_2152:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3083ffff; 
   valaddr_reg:x3; val_offset:4304*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4304*FLEN/8, x4, x1, x2)

inst_2153:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3087ffff; 
   valaddr_reg:x3; val_offset:4306*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4306*FLEN/8, x4, x1, x2)

inst_2154:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x308fffff; 
   valaddr_reg:x3; val_offset:4308*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4308*FLEN/8, x4, x1, x2)

inst_2155:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x309fffff; 
   valaddr_reg:x3; val_offset:4310*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4310*FLEN/8, x4, x1, x2)

inst_2156:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x30bfffff; 
   valaddr_reg:x3; val_offset:4312*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4312*FLEN/8, x4, x1, x2)

inst_2157:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x30c00000; 
   valaddr_reg:x3; val_offset:4314*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4314*FLEN/8, x4, x1, x2)

inst_2158:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x30e00000; 
   valaddr_reg:x3; val_offset:4316*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4316*FLEN/8, x4, x1, x2)

inst_2159:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x30f00000; 
   valaddr_reg:x3; val_offset:4318*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4318*FLEN/8, x4, x1, x2)

inst_2160:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x30f80000; 
   valaddr_reg:x3; val_offset:4320*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4320*FLEN/8, x4, x1, x2)

inst_2161:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x30fc0000; 
   valaddr_reg:x3; val_offset:4322*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4322*FLEN/8, x4, x1, x2)

inst_2162:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x30fe0000; 
   valaddr_reg:x3; val_offset:4324*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4324*FLEN/8, x4, x1, x2)

inst_2163:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x30ff0000; 
   valaddr_reg:x3; val_offset:4326*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4326*FLEN/8, x4, x1, x2)

inst_2164:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x30ff8000; 
   valaddr_reg:x3; val_offset:4328*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4328*FLEN/8, x4, x1, x2)

inst_2165:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x30ffc000; 
   valaddr_reg:x3; val_offset:4330*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4330*FLEN/8, x4, x1, x2)

inst_2166:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x30ffe000; 
   valaddr_reg:x3; val_offset:4332*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4332*FLEN/8, x4, x1, x2)

inst_2167:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x30fff000; 
   valaddr_reg:x3; val_offset:4334*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4334*FLEN/8, x4, x1, x2)

inst_2168:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x30fff800; 
   valaddr_reg:x3; val_offset:4336*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4336*FLEN/8, x4, x1, x2)

inst_2169:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x30fffc00; 
   valaddr_reg:x3; val_offset:4338*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4338*FLEN/8, x4, x1, x2)

inst_2170:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x30fffe00; 
   valaddr_reg:x3; val_offset:4340*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4340*FLEN/8, x4, x1, x2)

inst_2171:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x30ffff00; 
   valaddr_reg:x3; val_offset:4342*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4342*FLEN/8, x4, x1, x2)

inst_2172:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x30ffff80; 
   valaddr_reg:x3; val_offset:4344*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4344*FLEN/8, x4, x1, x2)

inst_2173:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x30ffffc0; 
   valaddr_reg:x3; val_offset:4346*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4346*FLEN/8, x4, x1, x2)

inst_2174:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x30ffffe0; 
   valaddr_reg:x3; val_offset:4348*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4348*FLEN/8, x4, x1, x2)

inst_2175:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x30fffff0; 
   valaddr_reg:x3; val_offset:4350*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4350*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_18)

inst_2176:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x30fffff8; 
   valaddr_reg:x3; val_offset:4352*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4352*FLEN/8, x4, x1, x2)

inst_2177:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x30fffffc; 
   valaddr_reg:x3; val_offset:4354*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4354*FLEN/8, x4, x1, x2)

inst_2178:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x30fffffe; 
   valaddr_reg:x3; val_offset:4356*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4356*FLEN/8, x4, x1, x2)

inst_2179:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x61 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x30ffffff; 
   valaddr_reg:x3; val_offset:4358*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4358*FLEN/8, x4, x1, x2)

inst_2180:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3d800000; 
   valaddr_reg:x3; val_offset:4360*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4360*FLEN/8, x4, x1, x2)

inst_2181:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3d800001; 
   valaddr_reg:x3; val_offset:4362*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4362*FLEN/8, x4, x1, x2)

inst_2182:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3d800003; 
   valaddr_reg:x3; val_offset:4364*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4364*FLEN/8, x4, x1, x2)

inst_2183:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3d800007; 
   valaddr_reg:x3; val_offset:4366*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4366*FLEN/8, x4, x1, x2)

inst_2184:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3d80000f; 
   valaddr_reg:x3; val_offset:4368*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4368*FLEN/8, x4, x1, x2)

inst_2185:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3d80001f; 
   valaddr_reg:x3; val_offset:4370*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4370*FLEN/8, x4, x1, x2)

inst_2186:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3d80003f; 
   valaddr_reg:x3; val_offset:4372*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4372*FLEN/8, x4, x1, x2)

inst_2187:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3d80007f; 
   valaddr_reg:x3; val_offset:4374*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4374*FLEN/8, x4, x1, x2)

inst_2188:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3d8000ff; 
   valaddr_reg:x3; val_offset:4376*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4376*FLEN/8, x4, x1, x2)

inst_2189:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3d8001ff; 
   valaddr_reg:x3; val_offset:4378*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4378*FLEN/8, x4, x1, x2)

inst_2190:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3d8003ff; 
   valaddr_reg:x3; val_offset:4380*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4380*FLEN/8, x4, x1, x2)

inst_2191:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3d8007ff; 
   valaddr_reg:x3; val_offset:4382*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4382*FLEN/8, x4, x1, x2)

inst_2192:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3d800fff; 
   valaddr_reg:x3; val_offset:4384*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4384*FLEN/8, x4, x1, x2)

inst_2193:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3d801fff; 
   valaddr_reg:x3; val_offset:4386*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4386*FLEN/8, x4, x1, x2)

inst_2194:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3d803fff; 
   valaddr_reg:x3; val_offset:4388*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4388*FLEN/8, x4, x1, x2)

inst_2195:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3d807fff; 
   valaddr_reg:x3; val_offset:4390*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4390*FLEN/8, x4, x1, x2)

inst_2196:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3d80ffff; 
   valaddr_reg:x3; val_offset:4392*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4392*FLEN/8, x4, x1, x2)

inst_2197:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3d81ffff; 
   valaddr_reg:x3; val_offset:4394*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4394*FLEN/8, x4, x1, x2)

inst_2198:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3d83ffff; 
   valaddr_reg:x3; val_offset:4396*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4396*FLEN/8, x4, x1, x2)

inst_2199:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3d87ffff; 
   valaddr_reg:x3; val_offset:4398*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4398*FLEN/8, x4, x1, x2)

inst_2200:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3d8fffff; 
   valaddr_reg:x3; val_offset:4400*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4400*FLEN/8, x4, x1, x2)

inst_2201:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3d9fffff; 
   valaddr_reg:x3; val_offset:4402*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4402*FLEN/8, x4, x1, x2)

inst_2202:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3dbfffff; 
   valaddr_reg:x3; val_offset:4404*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4404*FLEN/8, x4, x1, x2)

inst_2203:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3dc00000; 
   valaddr_reg:x3; val_offset:4406*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4406*FLEN/8, x4, x1, x2)

inst_2204:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3de00000; 
   valaddr_reg:x3; val_offset:4408*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4408*FLEN/8, x4, x1, x2)

inst_2205:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3df00000; 
   valaddr_reg:x3; val_offset:4410*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4410*FLEN/8, x4, x1, x2)

inst_2206:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3df80000; 
   valaddr_reg:x3; val_offset:4412*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4412*FLEN/8, x4, x1, x2)

inst_2207:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3dfc0000; 
   valaddr_reg:x3; val_offset:4414*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4414*FLEN/8, x4, x1, x2)

inst_2208:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3dfe0000; 
   valaddr_reg:x3; val_offset:4416*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4416*FLEN/8, x4, x1, x2)

inst_2209:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3dff0000; 
   valaddr_reg:x3; val_offset:4418*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4418*FLEN/8, x4, x1, x2)

inst_2210:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3dff8000; 
   valaddr_reg:x3; val_offset:4420*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4420*FLEN/8, x4, x1, x2)

inst_2211:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3dffc000; 
   valaddr_reg:x3; val_offset:4422*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4422*FLEN/8, x4, x1, x2)

inst_2212:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3dffe000; 
   valaddr_reg:x3; val_offset:4424*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4424*FLEN/8, x4, x1, x2)

inst_2213:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3dfff000; 
   valaddr_reg:x3; val_offset:4426*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4426*FLEN/8, x4, x1, x2)

inst_2214:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3dfff800; 
   valaddr_reg:x3; val_offset:4428*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4428*FLEN/8, x4, x1, x2)

inst_2215:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3dfffc00; 
   valaddr_reg:x3; val_offset:4430*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4430*FLEN/8, x4, x1, x2)

inst_2216:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3dfffe00; 
   valaddr_reg:x3; val_offset:4432*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4432*FLEN/8, x4, x1, x2)

inst_2217:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3dffff00; 
   valaddr_reg:x3; val_offset:4434*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4434*FLEN/8, x4, x1, x2)

inst_2218:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3dffff80; 
   valaddr_reg:x3; val_offset:4436*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4436*FLEN/8, x4, x1, x2)

inst_2219:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3dffffc0; 
   valaddr_reg:x3; val_offset:4438*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4438*FLEN/8, x4, x1, x2)

inst_2220:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3dffffe0; 
   valaddr_reg:x3; val_offset:4440*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4440*FLEN/8, x4, x1, x2)

inst_2221:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3dfffff0; 
   valaddr_reg:x3; val_offset:4442*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4442*FLEN/8, x4, x1, x2)

inst_2222:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3dfffff8; 
   valaddr_reg:x3; val_offset:4444*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4444*FLEN/8, x4, x1, x2)

inst_2223:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3dfffffc; 
   valaddr_reg:x3; val_offset:4446*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4446*FLEN/8, x4, x1, x2)

inst_2224:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3dfffffe; 
   valaddr_reg:x3; val_offset:4448*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4448*FLEN/8, x4, x1, x2)

inst_2225:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3dffffff; 
   valaddr_reg:x3; val_offset:4450*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4450*FLEN/8, x4, x1, x2)

inst_2226:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e000000; 
   valaddr_reg:x3; val_offset:4452*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4452*FLEN/8, x4, x1, x2)

inst_2227:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e000001; 
   valaddr_reg:x3; val_offset:4454*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4454*FLEN/8, x4, x1, x2)

inst_2228:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e000003; 
   valaddr_reg:x3; val_offset:4456*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4456*FLEN/8, x4, x1, x2)

inst_2229:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e000007; 
   valaddr_reg:x3; val_offset:4458*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4458*FLEN/8, x4, x1, x2)

inst_2230:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e00000f; 
   valaddr_reg:x3; val_offset:4460*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4460*FLEN/8, x4, x1, x2)

inst_2231:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e00001f; 
   valaddr_reg:x3; val_offset:4462*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4462*FLEN/8, x4, x1, x2)

inst_2232:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e00003f; 
   valaddr_reg:x3; val_offset:4464*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4464*FLEN/8, x4, x1, x2)

inst_2233:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e00007f; 
   valaddr_reg:x3; val_offset:4466*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4466*FLEN/8, x4, x1, x2)

inst_2234:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e0000ff; 
   valaddr_reg:x3; val_offset:4468*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4468*FLEN/8, x4, x1, x2)

inst_2235:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e0001ff; 
   valaddr_reg:x3; val_offset:4470*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4470*FLEN/8, x4, x1, x2)

inst_2236:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e0003ff; 
   valaddr_reg:x3; val_offset:4472*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4472*FLEN/8, x4, x1, x2)

inst_2237:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e0007ff; 
   valaddr_reg:x3; val_offset:4474*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4474*FLEN/8, x4, x1, x2)

inst_2238:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e000fff; 
   valaddr_reg:x3; val_offset:4476*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4476*FLEN/8, x4, x1, x2)

inst_2239:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e001fff; 
   valaddr_reg:x3; val_offset:4478*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4478*FLEN/8, x4, x1, x2)

inst_2240:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e003fff; 
   valaddr_reg:x3; val_offset:4480*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4480*FLEN/8, x4, x1, x2)

inst_2241:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e007fff; 
   valaddr_reg:x3; val_offset:4482*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4482*FLEN/8, x4, x1, x2)

inst_2242:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e00ffff; 
   valaddr_reg:x3; val_offset:4484*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4484*FLEN/8, x4, x1, x2)

inst_2243:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e01ffff; 
   valaddr_reg:x3; val_offset:4486*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4486*FLEN/8, x4, x1, x2)

inst_2244:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e03ffff; 
   valaddr_reg:x3; val_offset:4488*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4488*FLEN/8, x4, x1, x2)

inst_2245:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e07ffff; 
   valaddr_reg:x3; val_offset:4490*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4490*FLEN/8, x4, x1, x2)

inst_2246:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e0fffff; 
   valaddr_reg:x3; val_offset:4492*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4492*FLEN/8, x4, x1, x2)

inst_2247:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e1fffff; 
   valaddr_reg:x3; val_offset:4494*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4494*FLEN/8, x4, x1, x2)

inst_2248:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e3fffff; 
   valaddr_reg:x3; val_offset:4496*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4496*FLEN/8, x4, x1, x2)

inst_2249:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e400000; 
   valaddr_reg:x3; val_offset:4498*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4498*FLEN/8, x4, x1, x2)

inst_2250:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e600000; 
   valaddr_reg:x3; val_offset:4500*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4500*FLEN/8, x4, x1, x2)

inst_2251:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e700000; 
   valaddr_reg:x3; val_offset:4502*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4502*FLEN/8, x4, x1, x2)

inst_2252:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e780000; 
   valaddr_reg:x3; val_offset:4504*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4504*FLEN/8, x4, x1, x2)

inst_2253:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e7c0000; 
   valaddr_reg:x3; val_offset:4506*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4506*FLEN/8, x4, x1, x2)

inst_2254:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e7e0000; 
   valaddr_reg:x3; val_offset:4508*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4508*FLEN/8, x4, x1, x2)

inst_2255:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e7f0000; 
   valaddr_reg:x3; val_offset:4510*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4510*FLEN/8, x4, x1, x2)

inst_2256:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e7f8000; 
   valaddr_reg:x3; val_offset:4512*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4512*FLEN/8, x4, x1, x2)

inst_2257:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e7fc000; 
   valaddr_reg:x3; val_offset:4514*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4514*FLEN/8, x4, x1, x2)

inst_2258:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e7fe000; 
   valaddr_reg:x3; val_offset:4516*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4516*FLEN/8, x4, x1, x2)

inst_2259:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e7ff000; 
   valaddr_reg:x3; val_offset:4518*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4518*FLEN/8, x4, x1, x2)

inst_2260:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e7ff800; 
   valaddr_reg:x3; val_offset:4520*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4520*FLEN/8, x4, x1, x2)

inst_2261:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e7ffc00; 
   valaddr_reg:x3; val_offset:4522*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4522*FLEN/8, x4, x1, x2)

inst_2262:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e7ffe00; 
   valaddr_reg:x3; val_offset:4524*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4524*FLEN/8, x4, x1, x2)

inst_2263:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e7fff00; 
   valaddr_reg:x3; val_offset:4526*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4526*FLEN/8, x4, x1, x2)

inst_2264:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e7fff80; 
   valaddr_reg:x3; val_offset:4528*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4528*FLEN/8, x4, x1, x2)

inst_2265:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e7fffc0; 
   valaddr_reg:x3; val_offset:4530*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4530*FLEN/8, x4, x1, x2)

inst_2266:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e7fffe0; 
   valaddr_reg:x3; val_offset:4532*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4532*FLEN/8, x4, x1, x2)

inst_2267:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e7ffff0; 
   valaddr_reg:x3; val_offset:4534*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4534*FLEN/8, x4, x1, x2)

inst_2268:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e7ffff8; 
   valaddr_reg:x3; val_offset:4536*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4536*FLEN/8, x4, x1, x2)

inst_2269:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e7ffffc; 
   valaddr_reg:x3; val_offset:4538*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4538*FLEN/8, x4, x1, x2)

inst_2270:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e7ffffe; 
   valaddr_reg:x3; val_offset:4540*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4540*FLEN/8, x4, x1, x2)

inst_2271:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e7fffff; 
   valaddr_reg:x3; val_offset:4542*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4542*FLEN/8, x4, x1, x2)

inst_2272:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e800000; 
   valaddr_reg:x3; val_offset:4544*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4544*FLEN/8, x4, x1, x2)

inst_2273:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e800001; 
   valaddr_reg:x3; val_offset:4546*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4546*FLEN/8, x4, x1, x2)

inst_2274:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e800003; 
   valaddr_reg:x3; val_offset:4548*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4548*FLEN/8, x4, x1, x2)

inst_2275:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e800007; 
   valaddr_reg:x3; val_offset:4550*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4550*FLEN/8, x4, x1, x2)

inst_2276:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e80000f; 
   valaddr_reg:x3; val_offset:4552*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4552*FLEN/8, x4, x1, x2)

inst_2277:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e80001f; 
   valaddr_reg:x3; val_offset:4554*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4554*FLEN/8, x4, x1, x2)

inst_2278:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e80003f; 
   valaddr_reg:x3; val_offset:4556*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4556*FLEN/8, x4, x1, x2)

inst_2279:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e80007f; 
   valaddr_reg:x3; val_offset:4558*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4558*FLEN/8, x4, x1, x2)

inst_2280:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e8000ff; 
   valaddr_reg:x3; val_offset:4560*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4560*FLEN/8, x4, x1, x2)

inst_2281:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e8001ff; 
   valaddr_reg:x3; val_offset:4562*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4562*FLEN/8, x4, x1, x2)

inst_2282:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e8003ff; 
   valaddr_reg:x3; val_offset:4564*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4564*FLEN/8, x4, x1, x2)

inst_2283:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e8007ff; 
   valaddr_reg:x3; val_offset:4566*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4566*FLEN/8, x4, x1, x2)

inst_2284:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e800fff; 
   valaddr_reg:x3; val_offset:4568*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4568*FLEN/8, x4, x1, x2)

inst_2285:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e801fff; 
   valaddr_reg:x3; val_offset:4570*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4570*FLEN/8, x4, x1, x2)

inst_2286:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e803fff; 
   valaddr_reg:x3; val_offset:4572*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4572*FLEN/8, x4, x1, x2)

inst_2287:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e807fff; 
   valaddr_reg:x3; val_offset:4574*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4574*FLEN/8, x4, x1, x2)

inst_2288:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e80ffff; 
   valaddr_reg:x3; val_offset:4576*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4576*FLEN/8, x4, x1, x2)

inst_2289:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e81ffff; 
   valaddr_reg:x3; val_offset:4578*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4578*FLEN/8, x4, x1, x2)

inst_2290:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e83ffff; 
   valaddr_reg:x3; val_offset:4580*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4580*FLEN/8, x4, x1, x2)

inst_2291:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e87ffff; 
   valaddr_reg:x3; val_offset:4582*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4582*FLEN/8, x4, x1, x2)

inst_2292:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e8fffff; 
   valaddr_reg:x3; val_offset:4584*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4584*FLEN/8, x4, x1, x2)

inst_2293:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3e9fffff; 
   valaddr_reg:x3; val_offset:4586*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4586*FLEN/8, x4, x1, x2)

inst_2294:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3ebfffff; 
   valaddr_reg:x3; val_offset:4588*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4588*FLEN/8, x4, x1, x2)

inst_2295:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3ec00000; 
   valaddr_reg:x3; val_offset:4590*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4590*FLEN/8, x4, x1, x2)

inst_2296:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3ee00000; 
   valaddr_reg:x3; val_offset:4592*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4592*FLEN/8, x4, x1, x2)

inst_2297:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3ef00000; 
   valaddr_reg:x3; val_offset:4594*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4594*FLEN/8, x4, x1, x2)

inst_2298:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3ef80000; 
   valaddr_reg:x3; val_offset:4596*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4596*FLEN/8, x4, x1, x2)

inst_2299:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3efc0000; 
   valaddr_reg:x3; val_offset:4598*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4598*FLEN/8, x4, x1, x2)

inst_2300:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3efe0000; 
   valaddr_reg:x3; val_offset:4600*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4600*FLEN/8, x4, x1, x2)

inst_2301:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3eff0000; 
   valaddr_reg:x3; val_offset:4602*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4602*FLEN/8, x4, x1, x2)

inst_2302:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3eff8000; 
   valaddr_reg:x3; val_offset:4604*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4604*FLEN/8, x4, x1, x2)

inst_2303:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3effc000; 
   valaddr_reg:x3; val_offset:4606*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4606*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_19)

inst_2304:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3effe000; 
   valaddr_reg:x3; val_offset:4608*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4608*FLEN/8, x4, x1, x2)

inst_2305:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3efff000; 
   valaddr_reg:x3; val_offset:4610*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4610*FLEN/8, x4, x1, x2)

inst_2306:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3efff800; 
   valaddr_reg:x3; val_offset:4612*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4612*FLEN/8, x4, x1, x2)

inst_2307:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3efffc00; 
   valaddr_reg:x3; val_offset:4614*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4614*FLEN/8, x4, x1, x2)

inst_2308:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3efffe00; 
   valaddr_reg:x3; val_offset:4616*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4616*FLEN/8, x4, x1, x2)

inst_2309:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3effff00; 
   valaddr_reg:x3; val_offset:4618*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4618*FLEN/8, x4, x1, x2)

inst_2310:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3effff80; 
   valaddr_reg:x3; val_offset:4620*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4620*FLEN/8, x4, x1, x2)

inst_2311:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3effffc0; 
   valaddr_reg:x3; val_offset:4622*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4622*FLEN/8, x4, x1, x2)

inst_2312:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3effffe0; 
   valaddr_reg:x3; val_offset:4624*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4624*FLEN/8, x4, x1, x2)

inst_2313:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3efffff0; 
   valaddr_reg:x3; val_offset:4626*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4626*FLEN/8, x4, x1, x2)

inst_2314:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3efffff8; 
   valaddr_reg:x3; val_offset:4628*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4628*FLEN/8, x4, x1, x2)

inst_2315:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3efffffc; 
   valaddr_reg:x3; val_offset:4630*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4630*FLEN/8, x4, x1, x2)

inst_2316:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3efffffe; 
   valaddr_reg:x3; val_offset:4632*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4632*FLEN/8, x4, x1, x2)

inst_2317:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3effffff; 
   valaddr_reg:x3; val_offset:4634*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4634*FLEN/8, x4, x1, x2)

inst_2318:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f000000; 
   valaddr_reg:x3; val_offset:4636*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4636*FLEN/8, x4, x1, x2)

inst_2319:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f000001; 
   valaddr_reg:x3; val_offset:4638*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4638*FLEN/8, x4, x1, x2)

inst_2320:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f000003; 
   valaddr_reg:x3; val_offset:4640*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4640*FLEN/8, x4, x1, x2)

inst_2321:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f000007; 
   valaddr_reg:x3; val_offset:4642*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4642*FLEN/8, x4, x1, x2)

inst_2322:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f00000f; 
   valaddr_reg:x3; val_offset:4644*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4644*FLEN/8, x4, x1, x2)

inst_2323:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f00001f; 
   valaddr_reg:x3; val_offset:4646*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4646*FLEN/8, x4, x1, x2)

inst_2324:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f00003f; 
   valaddr_reg:x3; val_offset:4648*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4648*FLEN/8, x4, x1, x2)

inst_2325:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f00007f; 
   valaddr_reg:x3; val_offset:4650*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4650*FLEN/8, x4, x1, x2)

inst_2326:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f0000ff; 
   valaddr_reg:x3; val_offset:4652*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4652*FLEN/8, x4, x1, x2)

inst_2327:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f0001ff; 
   valaddr_reg:x3; val_offset:4654*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4654*FLEN/8, x4, x1, x2)

inst_2328:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f0003ff; 
   valaddr_reg:x3; val_offset:4656*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4656*FLEN/8, x4, x1, x2)

inst_2329:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f0007ff; 
   valaddr_reg:x3; val_offset:4658*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4658*FLEN/8, x4, x1, x2)

inst_2330:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f000fff; 
   valaddr_reg:x3; val_offset:4660*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4660*FLEN/8, x4, x1, x2)

inst_2331:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f001fff; 
   valaddr_reg:x3; val_offset:4662*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4662*FLEN/8, x4, x1, x2)

inst_2332:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f003fff; 
   valaddr_reg:x3; val_offset:4664*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4664*FLEN/8, x4, x1, x2)

inst_2333:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f007fff; 
   valaddr_reg:x3; val_offset:4666*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4666*FLEN/8, x4, x1, x2)

inst_2334:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f00ffff; 
   valaddr_reg:x3; val_offset:4668*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4668*FLEN/8, x4, x1, x2)

inst_2335:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f01ffff; 
   valaddr_reg:x3; val_offset:4670*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4670*FLEN/8, x4, x1, x2)

inst_2336:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f03ffff; 
   valaddr_reg:x3; val_offset:4672*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4672*FLEN/8, x4, x1, x2)

inst_2337:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f07ffff; 
   valaddr_reg:x3; val_offset:4674*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4674*FLEN/8, x4, x1, x2)

inst_2338:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f0fffff; 
   valaddr_reg:x3; val_offset:4676*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4676*FLEN/8, x4, x1, x2)

inst_2339:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f1fffff; 
   valaddr_reg:x3; val_offset:4678*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4678*FLEN/8, x4, x1, x2)

inst_2340:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f3fffff; 
   valaddr_reg:x3; val_offset:4680*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4680*FLEN/8, x4, x1, x2)

inst_2341:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f400000; 
   valaddr_reg:x3; val_offset:4682*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4682*FLEN/8, x4, x1, x2)

inst_2342:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f600000; 
   valaddr_reg:x3; val_offset:4684*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4684*FLEN/8, x4, x1, x2)

inst_2343:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f700000; 
   valaddr_reg:x3; val_offset:4686*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4686*FLEN/8, x4, x1, x2)

inst_2344:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f780000; 
   valaddr_reg:x3; val_offset:4688*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4688*FLEN/8, x4, x1, x2)

inst_2345:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f7c0000; 
   valaddr_reg:x3; val_offset:4690*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4690*FLEN/8, x4, x1, x2)

inst_2346:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f7e0000; 
   valaddr_reg:x3; val_offset:4692*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4692*FLEN/8, x4, x1, x2)

inst_2347:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f7f0000; 
   valaddr_reg:x3; val_offset:4694*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4694*FLEN/8, x4, x1, x2)

inst_2348:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f7f8000; 
   valaddr_reg:x3; val_offset:4696*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4696*FLEN/8, x4, x1, x2)

inst_2349:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f7fc000; 
   valaddr_reg:x3; val_offset:4698*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4698*FLEN/8, x4, x1, x2)

inst_2350:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f7fe000; 
   valaddr_reg:x3; val_offset:4700*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4700*FLEN/8, x4, x1, x2)

inst_2351:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f7ff000; 
   valaddr_reg:x3; val_offset:4702*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4702*FLEN/8, x4, x1, x2)

inst_2352:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f7ff800; 
   valaddr_reg:x3; val_offset:4704*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4704*FLEN/8, x4, x1, x2)

inst_2353:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f7ffc00; 
   valaddr_reg:x3; val_offset:4706*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4706*FLEN/8, x4, x1, x2)

inst_2354:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f7ffe00; 
   valaddr_reg:x3; val_offset:4708*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4708*FLEN/8, x4, x1, x2)

inst_2355:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f7fff00; 
   valaddr_reg:x3; val_offset:4710*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4710*FLEN/8, x4, x1, x2)

inst_2356:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f7fff80; 
   valaddr_reg:x3; val_offset:4712*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4712*FLEN/8, x4, x1, x2)

inst_2357:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f7fffc0; 
   valaddr_reg:x3; val_offset:4714*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4714*FLEN/8, x4, x1, x2)

inst_2358:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f7fffe0; 
   valaddr_reg:x3; val_offset:4716*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4716*FLEN/8, x4, x1, x2)

inst_2359:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f7ffff0; 
   valaddr_reg:x3; val_offset:4718*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4718*FLEN/8, x4, x1, x2)

inst_2360:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f7ffff8; 
   valaddr_reg:x3; val_offset:4720*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4720*FLEN/8, x4, x1, x2)

inst_2361:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f7ffffc; 
   valaddr_reg:x3; val_offset:4722*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4722*FLEN/8, x4, x1, x2)

inst_2362:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f7ffffe; 
   valaddr_reg:x3; val_offset:4724*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4724*FLEN/8, x4, x1, x2)

inst_2363:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f7fffff; 
   valaddr_reg:x3; val_offset:4726*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4726*FLEN/8, x4, x1, x2)

inst_2364:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:4728*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4728*FLEN/8, x4, x1, x2)

inst_2365:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f800001; 
   valaddr_reg:x3; val_offset:4730*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4730*FLEN/8, x4, x1, x2)

inst_2366:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f800003; 
   valaddr_reg:x3; val_offset:4732*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4732*FLEN/8, x4, x1, x2)

inst_2367:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f800007; 
   valaddr_reg:x3; val_offset:4734*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4734*FLEN/8, x4, x1, x2)

inst_2368:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f80000f; 
   valaddr_reg:x3; val_offset:4736*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4736*FLEN/8, x4, x1, x2)

inst_2369:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f80001f; 
   valaddr_reg:x3; val_offset:4738*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4738*FLEN/8, x4, x1, x2)

inst_2370:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f80003f; 
   valaddr_reg:x3; val_offset:4740*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4740*FLEN/8, x4, x1, x2)

inst_2371:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f80007f; 
   valaddr_reg:x3; val_offset:4742*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4742*FLEN/8, x4, x1, x2)

inst_2372:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f8000ff; 
   valaddr_reg:x3; val_offset:4744*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4744*FLEN/8, x4, x1, x2)

inst_2373:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f8001ff; 
   valaddr_reg:x3; val_offset:4746*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4746*FLEN/8, x4, x1, x2)

inst_2374:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f8003ff; 
   valaddr_reg:x3; val_offset:4748*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4748*FLEN/8, x4, x1, x2)

inst_2375:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f8007ff; 
   valaddr_reg:x3; val_offset:4750*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4750*FLEN/8, x4, x1, x2)

inst_2376:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f800fff; 
   valaddr_reg:x3; val_offset:4752*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4752*FLEN/8, x4, x1, x2)

inst_2377:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f801fff; 
   valaddr_reg:x3; val_offset:4754*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4754*FLEN/8, x4, x1, x2)

inst_2378:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f803fff; 
   valaddr_reg:x3; val_offset:4756*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4756*FLEN/8, x4, x1, x2)

inst_2379:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f807fff; 
   valaddr_reg:x3; val_offset:4758*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4758*FLEN/8, x4, x1, x2)

inst_2380:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f80ffff; 
   valaddr_reg:x3; val_offset:4760*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4760*FLEN/8, x4, x1, x2)

inst_2381:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f81ffff; 
   valaddr_reg:x3; val_offset:4762*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4762*FLEN/8, x4, x1, x2)

inst_2382:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f83ffff; 
   valaddr_reg:x3; val_offset:4764*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4764*FLEN/8, x4, x1, x2)

inst_2383:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f87ffff; 
   valaddr_reg:x3; val_offset:4766*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4766*FLEN/8, x4, x1, x2)

inst_2384:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f8fffff; 
   valaddr_reg:x3; val_offset:4768*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4768*FLEN/8, x4, x1, x2)

inst_2385:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f999999; 
   valaddr_reg:x3; val_offset:4770*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4770*FLEN/8, x4, x1, x2)

inst_2386:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3f9fffff; 
   valaddr_reg:x3; val_offset:4772*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4772*FLEN/8, x4, x1, x2)

inst_2387:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3fa49249; 
   valaddr_reg:x3; val_offset:4774*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4774*FLEN/8, x4, x1, x2)

inst_2388:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3fb33333; 
   valaddr_reg:x3; val_offset:4776*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4776*FLEN/8, x4, x1, x2)

inst_2389:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3fb6db6d; 
   valaddr_reg:x3; val_offset:4778*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4778*FLEN/8, x4, x1, x2)

inst_2390:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3fbbbbbb; 
   valaddr_reg:x3; val_offset:4780*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4780*FLEN/8, x4, x1, x2)

inst_2391:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3fbfffff; 
   valaddr_reg:x3; val_offset:4782*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4782*FLEN/8, x4, x1, x2)

inst_2392:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3fc00000; 
   valaddr_reg:x3; val_offset:4784*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4784*FLEN/8, x4, x1, x2)

inst_2393:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3fc44444; 
   valaddr_reg:x3; val_offset:4786*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4786*FLEN/8, x4, x1, x2)

inst_2394:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3fcccccc; 
   valaddr_reg:x3; val_offset:4788*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4788*FLEN/8, x4, x1, x2)

inst_2395:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3fdb6db6; 
   valaddr_reg:x3; val_offset:4790*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4790*FLEN/8, x4, x1, x2)

inst_2396:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3fe00000; 
   valaddr_reg:x3; val_offset:4792*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4792*FLEN/8, x4, x1, x2)

inst_2397:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3fe66666; 
   valaddr_reg:x3; val_offset:4794*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4794*FLEN/8, x4, x1, x2)

inst_2398:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3fedb6db; 
   valaddr_reg:x3; val_offset:4796*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4796*FLEN/8, x4, x1, x2)

inst_2399:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3ff00000; 
   valaddr_reg:x3; val_offset:4798*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4798*FLEN/8, x4, x1, x2)

inst_2400:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3ff80000; 
   valaddr_reg:x3; val_offset:4800*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4800*FLEN/8, x4, x1, x2)

inst_2401:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3ffc0000; 
   valaddr_reg:x3; val_offset:4802*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4802*FLEN/8, x4, x1, x2)

inst_2402:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3ffe0000; 
   valaddr_reg:x3; val_offset:4804*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4804*FLEN/8, x4, x1, x2)

inst_2403:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3fff0000; 
   valaddr_reg:x3; val_offset:4806*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4806*FLEN/8, x4, x1, x2)

inst_2404:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3fff8000; 
   valaddr_reg:x3; val_offset:4808*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4808*FLEN/8, x4, x1, x2)

inst_2405:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3fffc000; 
   valaddr_reg:x3; val_offset:4810*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4810*FLEN/8, x4, x1, x2)

inst_2406:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3fffe000; 
   valaddr_reg:x3; val_offset:4812*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4812*FLEN/8, x4, x1, x2)

inst_2407:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3ffff000; 
   valaddr_reg:x3; val_offset:4814*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4814*FLEN/8, x4, x1, x2)

inst_2408:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3ffff800; 
   valaddr_reg:x3; val_offset:4816*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4816*FLEN/8, x4, x1, x2)

inst_2409:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3ffffc00; 
   valaddr_reg:x3; val_offset:4818*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4818*FLEN/8, x4, x1, x2)

inst_2410:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3ffffe00; 
   valaddr_reg:x3; val_offset:4820*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4820*FLEN/8, x4, x1, x2)

inst_2411:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3fffff00; 
   valaddr_reg:x3; val_offset:4822*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4822*FLEN/8, x4, x1, x2)

inst_2412:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3fffff80; 
   valaddr_reg:x3; val_offset:4824*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4824*FLEN/8, x4, x1, x2)

inst_2413:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3fffffc0; 
   valaddr_reg:x3; val_offset:4826*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4826*FLEN/8, x4, x1, x2)

inst_2414:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3fffffe0; 
   valaddr_reg:x3; val_offset:4828*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4828*FLEN/8, x4, x1, x2)

inst_2415:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3ffffff0; 
   valaddr_reg:x3; val_offset:4830*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4830*FLEN/8, x4, x1, x2)

inst_2416:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3ffffff8; 
   valaddr_reg:x3; val_offset:4832*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4832*FLEN/8, x4, x1, x2)

inst_2417:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3ffffffc; 
   valaddr_reg:x3; val_offset:4834*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4834*FLEN/8, x4, x1, x2)

inst_2418:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3ffffffe; 
   valaddr_reg:x3; val_offset:4836*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4836*FLEN/8, x4, x1, x2)

inst_2419:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x3fffffff; 
   valaddr_reg:x3; val_offset:4838*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4838*FLEN/8, x4, x1, x2)

inst_2420:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40000000; 
   valaddr_reg:x3; val_offset:4840*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4840*FLEN/8, x4, x1, x2)

inst_2421:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40000001; 
   valaddr_reg:x3; val_offset:4842*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4842*FLEN/8, x4, x1, x2)

inst_2422:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40000003; 
   valaddr_reg:x3; val_offset:4844*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4844*FLEN/8, x4, x1, x2)

inst_2423:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40000007; 
   valaddr_reg:x3; val_offset:4846*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4846*FLEN/8, x4, x1, x2)

inst_2424:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x4000000f; 
   valaddr_reg:x3; val_offset:4848*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4848*FLEN/8, x4, x1, x2)

inst_2425:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x4000001f; 
   valaddr_reg:x3; val_offset:4850*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4850*FLEN/8, x4, x1, x2)

inst_2426:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x4000003f; 
   valaddr_reg:x3; val_offset:4852*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4852*FLEN/8, x4, x1, x2)

inst_2427:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x4000007f; 
   valaddr_reg:x3; val_offset:4854*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4854*FLEN/8, x4, x1, x2)

inst_2428:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x400000ff; 
   valaddr_reg:x3; val_offset:4856*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4856*FLEN/8, x4, x1, x2)

inst_2429:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x400001ff; 
   valaddr_reg:x3; val_offset:4858*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4858*FLEN/8, x4, x1, x2)

inst_2430:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x400003ff; 
   valaddr_reg:x3; val_offset:4860*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4860*FLEN/8, x4, x1, x2)

inst_2431:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x400007ff; 
   valaddr_reg:x3; val_offset:4862*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4862*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_20)

inst_2432:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40000fff; 
   valaddr_reg:x3; val_offset:4864*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4864*FLEN/8, x4, x1, x2)

inst_2433:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40001fff; 
   valaddr_reg:x3; val_offset:4866*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4866*FLEN/8, x4, x1, x2)

inst_2434:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40003fff; 
   valaddr_reg:x3; val_offset:4868*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4868*FLEN/8, x4, x1, x2)

inst_2435:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40007fff; 
   valaddr_reg:x3; val_offset:4870*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4870*FLEN/8, x4, x1, x2)

inst_2436:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x4000ffff; 
   valaddr_reg:x3; val_offset:4872*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4872*FLEN/8, x4, x1, x2)

inst_2437:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x4001ffff; 
   valaddr_reg:x3; val_offset:4874*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4874*FLEN/8, x4, x1, x2)

inst_2438:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x4003ffff; 
   valaddr_reg:x3; val_offset:4876*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4876*FLEN/8, x4, x1, x2)

inst_2439:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x4007ffff; 
   valaddr_reg:x3; val_offset:4878*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4878*FLEN/8, x4, x1, x2)

inst_2440:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x400fffff; 
   valaddr_reg:x3; val_offset:4880*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4880*FLEN/8, x4, x1, x2)

inst_2441:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x401fffff; 
   valaddr_reg:x3; val_offset:4882*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4882*FLEN/8, x4, x1, x2)

inst_2442:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x403fffff; 
   valaddr_reg:x3; val_offset:4884*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4884*FLEN/8, x4, x1, x2)

inst_2443:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40400000; 
   valaddr_reg:x3; val_offset:4886*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4886*FLEN/8, x4, x1, x2)

inst_2444:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40600000; 
   valaddr_reg:x3; val_offset:4888*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4888*FLEN/8, x4, x1, x2)

inst_2445:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40700000; 
   valaddr_reg:x3; val_offset:4890*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4890*FLEN/8, x4, x1, x2)

inst_2446:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40780000; 
   valaddr_reg:x3; val_offset:4892*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4892*FLEN/8, x4, x1, x2)

inst_2447:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x407c0000; 
   valaddr_reg:x3; val_offset:4894*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4894*FLEN/8, x4, x1, x2)

inst_2448:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x407e0000; 
   valaddr_reg:x3; val_offset:4896*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4896*FLEN/8, x4, x1, x2)

inst_2449:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x407f0000; 
   valaddr_reg:x3; val_offset:4898*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4898*FLEN/8, x4, x1, x2)

inst_2450:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x407f8000; 
   valaddr_reg:x3; val_offset:4900*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4900*FLEN/8, x4, x1, x2)

inst_2451:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x407fc000; 
   valaddr_reg:x3; val_offset:4902*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4902*FLEN/8, x4, x1, x2)

inst_2452:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x407fe000; 
   valaddr_reg:x3; val_offset:4904*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4904*FLEN/8, x4, x1, x2)

inst_2453:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x407ff000; 
   valaddr_reg:x3; val_offset:4906*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4906*FLEN/8, x4, x1, x2)

inst_2454:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x407ff800; 
   valaddr_reg:x3; val_offset:4908*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4908*FLEN/8, x4, x1, x2)

inst_2455:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x407ffc00; 
   valaddr_reg:x3; val_offset:4910*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4910*FLEN/8, x4, x1, x2)

inst_2456:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x407ffe00; 
   valaddr_reg:x3; val_offset:4912*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4912*FLEN/8, x4, x1, x2)

inst_2457:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x407fff00; 
   valaddr_reg:x3; val_offset:4914*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4914*FLEN/8, x4, x1, x2)

inst_2458:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x407fff80; 
   valaddr_reg:x3; val_offset:4916*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4916*FLEN/8, x4, x1, x2)

inst_2459:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x407fffc0; 
   valaddr_reg:x3; val_offset:4918*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4918*FLEN/8, x4, x1, x2)

inst_2460:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x407fffe0; 
   valaddr_reg:x3; val_offset:4920*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4920*FLEN/8, x4, x1, x2)

inst_2461:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x407ffff0; 
   valaddr_reg:x3; val_offset:4922*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4922*FLEN/8, x4, x1, x2)

inst_2462:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x407ffff8; 
   valaddr_reg:x3; val_offset:4924*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4924*FLEN/8, x4, x1, x2)

inst_2463:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x407ffffc; 
   valaddr_reg:x3; val_offset:4926*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4926*FLEN/8, x4, x1, x2)

inst_2464:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x407ffffe; 
   valaddr_reg:x3; val_offset:4928*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4928*FLEN/8, x4, x1, x2)

inst_2465:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x407fffff; 
   valaddr_reg:x3; val_offset:4930*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4930*FLEN/8, x4, x1, x2)

inst_2466:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40800000; 
   valaddr_reg:x3; val_offset:4932*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4932*FLEN/8, x4, x1, x2)

inst_2467:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40800001; 
   valaddr_reg:x3; val_offset:4934*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4934*FLEN/8, x4, x1, x2)

inst_2468:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40800003; 
   valaddr_reg:x3; val_offset:4936*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4936*FLEN/8, x4, x1, x2)

inst_2469:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40800007; 
   valaddr_reg:x3; val_offset:4938*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4938*FLEN/8, x4, x1, x2)

inst_2470:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x4080000f; 
   valaddr_reg:x3; val_offset:4940*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4940*FLEN/8, x4, x1, x2)

inst_2471:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x4080001f; 
   valaddr_reg:x3; val_offset:4942*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4942*FLEN/8, x4, x1, x2)

inst_2472:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x4080003f; 
   valaddr_reg:x3; val_offset:4944*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4944*FLEN/8, x4, x1, x2)

inst_2473:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x4080007f; 
   valaddr_reg:x3; val_offset:4946*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4946*FLEN/8, x4, x1, x2)

inst_2474:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x408000ff; 
   valaddr_reg:x3; val_offset:4948*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4948*FLEN/8, x4, x1, x2)

inst_2475:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x408001ff; 
   valaddr_reg:x3; val_offset:4950*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4950*FLEN/8, x4, x1, x2)

inst_2476:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x408003ff; 
   valaddr_reg:x3; val_offset:4952*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4952*FLEN/8, x4, x1, x2)

inst_2477:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x408007ff; 
   valaddr_reg:x3; val_offset:4954*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4954*FLEN/8, x4, x1, x2)

inst_2478:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40800fff; 
   valaddr_reg:x3; val_offset:4956*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4956*FLEN/8, x4, x1, x2)

inst_2479:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40801fff; 
   valaddr_reg:x3; val_offset:4958*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4958*FLEN/8, x4, x1, x2)

inst_2480:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40803fff; 
   valaddr_reg:x3; val_offset:4960*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4960*FLEN/8, x4, x1, x2)

inst_2481:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40807fff; 
   valaddr_reg:x3; val_offset:4962*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4962*FLEN/8, x4, x1, x2)

inst_2482:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x4080ffff; 
   valaddr_reg:x3; val_offset:4964*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4964*FLEN/8, x4, x1, x2)

inst_2483:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x4081ffff; 
   valaddr_reg:x3; val_offset:4966*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4966*FLEN/8, x4, x1, x2)

inst_2484:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x4083ffff; 
   valaddr_reg:x3; val_offset:4968*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4968*FLEN/8, x4, x1, x2)

inst_2485:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x4087ffff; 
   valaddr_reg:x3; val_offset:4970*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4970*FLEN/8, x4, x1, x2)

inst_2486:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x408fffff; 
   valaddr_reg:x3; val_offset:4972*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4972*FLEN/8, x4, x1, x2)

inst_2487:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x409fffff; 
   valaddr_reg:x3; val_offset:4974*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4974*FLEN/8, x4, x1, x2)

inst_2488:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40bfffff; 
   valaddr_reg:x3; val_offset:4976*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4976*FLEN/8, x4, x1, x2)

inst_2489:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40c00000; 
   valaddr_reg:x3; val_offset:4978*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4978*FLEN/8, x4, x1, x2)

inst_2490:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40e00000; 
   valaddr_reg:x3; val_offset:4980*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4980*FLEN/8, x4, x1, x2)

inst_2491:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40f00000; 
   valaddr_reg:x3; val_offset:4982*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4982*FLEN/8, x4, x1, x2)

inst_2492:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40f80000; 
   valaddr_reg:x3; val_offset:4984*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4984*FLEN/8, x4, x1, x2)

inst_2493:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40fc0000; 
   valaddr_reg:x3; val_offset:4986*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4986*FLEN/8, x4, x1, x2)

inst_2494:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40fe0000; 
   valaddr_reg:x3; val_offset:4988*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4988*FLEN/8, x4, x1, x2)

inst_2495:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40ff0000; 
   valaddr_reg:x3; val_offset:4990*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4990*FLEN/8, x4, x1, x2)

inst_2496:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40ff8000; 
   valaddr_reg:x3; val_offset:4992*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4992*FLEN/8, x4, x1, x2)

inst_2497:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40ffc000; 
   valaddr_reg:x3; val_offset:4994*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4994*FLEN/8, x4, x1, x2)

inst_2498:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40ffe000; 
   valaddr_reg:x3; val_offset:4996*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4996*FLEN/8, x4, x1, x2)

inst_2499:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40fff000; 
   valaddr_reg:x3; val_offset:4998*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 4998*FLEN/8, x4, x1, x2)

inst_2500:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40fff800; 
   valaddr_reg:x3; val_offset:5000*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5000*FLEN/8, x4, x1, x2)

inst_2501:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40fffc00; 
   valaddr_reg:x3; val_offset:5002*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5002*FLEN/8, x4, x1, x2)

inst_2502:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40fffe00; 
   valaddr_reg:x3; val_offset:5004*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5004*FLEN/8, x4, x1, x2)

inst_2503:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40ffff00; 
   valaddr_reg:x3; val_offset:5006*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5006*FLEN/8, x4, x1, x2)

inst_2504:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40ffff80; 
   valaddr_reg:x3; val_offset:5008*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5008*FLEN/8, x4, x1, x2)

inst_2505:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40ffffc0; 
   valaddr_reg:x3; val_offset:5010*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5010*FLEN/8, x4, x1, x2)

inst_2506:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40ffffe0; 
   valaddr_reg:x3; val_offset:5012*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5012*FLEN/8, x4, x1, x2)

inst_2507:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40fffff0; 
   valaddr_reg:x3; val_offset:5014*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5014*FLEN/8, x4, x1, x2)

inst_2508:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40fffff8; 
   valaddr_reg:x3; val_offset:5016*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5016*FLEN/8, x4, x1, x2)

inst_2509:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40fffffc; 
   valaddr_reg:x3; val_offset:5018*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5018*FLEN/8, x4, x1, x2)

inst_2510:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40fffffe; 
   valaddr_reg:x3; val_offset:5020*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5020*FLEN/8, x4, x1, x2)

inst_2511:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x40ffffff; 
   valaddr_reg:x3; val_offset:5022*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5022*FLEN/8, x4, x1, x2)

inst_2512:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x41000000; 
   valaddr_reg:x3; val_offset:5024*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5024*FLEN/8, x4, x1, x2)

inst_2513:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x41000001; 
   valaddr_reg:x3; val_offset:5026*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5026*FLEN/8, x4, x1, x2)

inst_2514:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x41000003; 
   valaddr_reg:x3; val_offset:5028*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5028*FLEN/8, x4, x1, x2)

inst_2515:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x41000007; 
   valaddr_reg:x3; val_offset:5030*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5030*FLEN/8, x4, x1, x2)

inst_2516:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x4100000f; 
   valaddr_reg:x3; val_offset:5032*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5032*FLEN/8, x4, x1, x2)

inst_2517:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x4100001f; 
   valaddr_reg:x3; val_offset:5034*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5034*FLEN/8, x4, x1, x2)

inst_2518:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x4100003f; 
   valaddr_reg:x3; val_offset:5036*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5036*FLEN/8, x4, x1, x2)

inst_2519:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x4100007f; 
   valaddr_reg:x3; val_offset:5038*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5038*FLEN/8, x4, x1, x2)

inst_2520:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x410000ff; 
   valaddr_reg:x3; val_offset:5040*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5040*FLEN/8, x4, x1, x2)

inst_2521:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x410001ff; 
   valaddr_reg:x3; val_offset:5042*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5042*FLEN/8, x4, x1, x2)

inst_2522:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x410003ff; 
   valaddr_reg:x3; val_offset:5044*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5044*FLEN/8, x4, x1, x2)

inst_2523:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x410007ff; 
   valaddr_reg:x3; val_offset:5046*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5046*FLEN/8, x4, x1, x2)

inst_2524:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x41000fff; 
   valaddr_reg:x3; val_offset:5048*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5048*FLEN/8, x4, x1, x2)

inst_2525:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x41001fff; 
   valaddr_reg:x3; val_offset:5050*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5050*FLEN/8, x4, x1, x2)

inst_2526:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x41003fff; 
   valaddr_reg:x3; val_offset:5052*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5052*FLEN/8, x4, x1, x2)

inst_2527:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x41007fff; 
   valaddr_reg:x3; val_offset:5054*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5054*FLEN/8, x4, x1, x2)

inst_2528:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x4100ffff; 
   valaddr_reg:x3; val_offset:5056*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5056*FLEN/8, x4, x1, x2)

inst_2529:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x4101ffff; 
   valaddr_reg:x3; val_offset:5058*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5058*FLEN/8, x4, x1, x2)

inst_2530:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x4103ffff; 
   valaddr_reg:x3; val_offset:5060*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5060*FLEN/8, x4, x1, x2)

inst_2531:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x4107ffff; 
   valaddr_reg:x3; val_offset:5062*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5062*FLEN/8, x4, x1, x2)

inst_2532:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x410fffff; 
   valaddr_reg:x3; val_offset:5064*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5064*FLEN/8, x4, x1, x2)

inst_2533:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x411fffff; 
   valaddr_reg:x3; val_offset:5066*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5066*FLEN/8, x4, x1, x2)

inst_2534:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x413fffff; 
   valaddr_reg:x3; val_offset:5068*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5068*FLEN/8, x4, x1, x2)

inst_2535:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x41400000; 
   valaddr_reg:x3; val_offset:5070*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5070*FLEN/8, x4, x1, x2)

inst_2536:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x41600000; 
   valaddr_reg:x3; val_offset:5072*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5072*FLEN/8, x4, x1, x2)

inst_2537:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x41700000; 
   valaddr_reg:x3; val_offset:5074*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5074*FLEN/8, x4, x1, x2)

inst_2538:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x41780000; 
   valaddr_reg:x3; val_offset:5076*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5076*FLEN/8, x4, x1, x2)

inst_2539:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x417c0000; 
   valaddr_reg:x3; val_offset:5078*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5078*FLEN/8, x4, x1, x2)

inst_2540:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x417e0000; 
   valaddr_reg:x3; val_offset:5080*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5080*FLEN/8, x4, x1, x2)

inst_2541:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x417f0000; 
   valaddr_reg:x3; val_offset:5082*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5082*FLEN/8, x4, x1, x2)

inst_2542:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x417f8000; 
   valaddr_reg:x3; val_offset:5084*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5084*FLEN/8, x4, x1, x2)

inst_2543:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x417fc000; 
   valaddr_reg:x3; val_offset:5086*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5086*FLEN/8, x4, x1, x2)

inst_2544:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x417fe000; 
   valaddr_reg:x3; val_offset:5088*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5088*FLEN/8, x4, x1, x2)

inst_2545:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x417ff000; 
   valaddr_reg:x3; val_offset:5090*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5090*FLEN/8, x4, x1, x2)

inst_2546:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x417ff800; 
   valaddr_reg:x3; val_offset:5092*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5092*FLEN/8, x4, x1, x2)

inst_2547:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x417ffc00; 
   valaddr_reg:x3; val_offset:5094*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5094*FLEN/8, x4, x1, x2)

inst_2548:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x417ffe00; 
   valaddr_reg:x3; val_offset:5096*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5096*FLEN/8, x4, x1, x2)

inst_2549:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x417fff00; 
   valaddr_reg:x3; val_offset:5098*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5098*FLEN/8, x4, x1, x2)

inst_2550:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x417fff80; 
   valaddr_reg:x3; val_offset:5100*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5100*FLEN/8, x4, x1, x2)

inst_2551:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x417fffc0; 
   valaddr_reg:x3; val_offset:5102*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5102*FLEN/8, x4, x1, x2)

inst_2552:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x417fffe0; 
   valaddr_reg:x3; val_offset:5104*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5104*FLEN/8, x4, x1, x2)

inst_2553:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x417ffff0; 
   valaddr_reg:x3; val_offset:5106*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5106*FLEN/8, x4, x1, x2)

inst_2554:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x417ffff8; 
   valaddr_reg:x3; val_offset:5108*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5108*FLEN/8, x4, x1, x2)

inst_2555:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x417ffffc; 
   valaddr_reg:x3; val_offset:5110*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5110*FLEN/8, x4, x1, x2)

inst_2556:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x417ffffe; 
   valaddr_reg:x3; val_offset:5112*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5112*FLEN/8, x4, x1, x2)

inst_2557:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x417fffff; 
   valaddr_reg:x3; val_offset:5114*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5114*FLEN/8, x4, x1, x2)

inst_2558:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a000000; 
   valaddr_reg:x3; val_offset:5116*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5116*FLEN/8, x4, x1, x2)

inst_2559:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a000001; 
   valaddr_reg:x3; val_offset:5118*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5118*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_21)

inst_2560:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a000003; 
   valaddr_reg:x3; val_offset:5120*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5120*FLEN/8, x4, x1, x2)

inst_2561:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a000007; 
   valaddr_reg:x3; val_offset:5122*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5122*FLEN/8, x4, x1, x2)

inst_2562:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a00000f; 
   valaddr_reg:x3; val_offset:5124*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5124*FLEN/8, x4, x1, x2)

inst_2563:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a00001f; 
   valaddr_reg:x3; val_offset:5126*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5126*FLEN/8, x4, x1, x2)

inst_2564:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a00003f; 
   valaddr_reg:x3; val_offset:5128*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5128*FLEN/8, x4, x1, x2)

inst_2565:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a00007f; 
   valaddr_reg:x3; val_offset:5130*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5130*FLEN/8, x4, x1, x2)

inst_2566:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a0000ff; 
   valaddr_reg:x3; val_offset:5132*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5132*FLEN/8, x4, x1, x2)

inst_2567:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a0001ff; 
   valaddr_reg:x3; val_offset:5134*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5134*FLEN/8, x4, x1, x2)

inst_2568:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a0003ff; 
   valaddr_reg:x3; val_offset:5136*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5136*FLEN/8, x4, x1, x2)

inst_2569:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a0007ff; 
   valaddr_reg:x3; val_offset:5138*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5138*FLEN/8, x4, x1, x2)

inst_2570:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a000fff; 
   valaddr_reg:x3; val_offset:5140*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5140*FLEN/8, x4, x1, x2)

inst_2571:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a001fff; 
   valaddr_reg:x3; val_offset:5142*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5142*FLEN/8, x4, x1, x2)

inst_2572:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a003fff; 
   valaddr_reg:x3; val_offset:5144*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5144*FLEN/8, x4, x1, x2)

inst_2573:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a007fff; 
   valaddr_reg:x3; val_offset:5146*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5146*FLEN/8, x4, x1, x2)

inst_2574:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a00ffff; 
   valaddr_reg:x3; val_offset:5148*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5148*FLEN/8, x4, x1, x2)

inst_2575:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a01ffff; 
   valaddr_reg:x3; val_offset:5150*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5150*FLEN/8, x4, x1, x2)

inst_2576:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a03ffff; 
   valaddr_reg:x3; val_offset:5152*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5152*FLEN/8, x4, x1, x2)

inst_2577:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a07ffff; 
   valaddr_reg:x3; val_offset:5154*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5154*FLEN/8, x4, x1, x2)

inst_2578:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a0fffff; 
   valaddr_reg:x3; val_offset:5156*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5156*FLEN/8, x4, x1, x2)

inst_2579:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a1fffff; 
   valaddr_reg:x3; val_offset:5158*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5158*FLEN/8, x4, x1, x2)

inst_2580:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a3fffff; 
   valaddr_reg:x3; val_offset:5160*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5160*FLEN/8, x4, x1, x2)

inst_2581:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a400000; 
   valaddr_reg:x3; val_offset:5162*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5162*FLEN/8, x4, x1, x2)

inst_2582:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a600000; 
   valaddr_reg:x3; val_offset:5164*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5164*FLEN/8, x4, x1, x2)

inst_2583:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a700000; 
   valaddr_reg:x3; val_offset:5166*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5166*FLEN/8, x4, x1, x2)

inst_2584:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a780000; 
   valaddr_reg:x3; val_offset:5168*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5168*FLEN/8, x4, x1, x2)

inst_2585:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a7c0000; 
   valaddr_reg:x3; val_offset:5170*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5170*FLEN/8, x4, x1, x2)

inst_2586:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a7e0000; 
   valaddr_reg:x3; val_offset:5172*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5172*FLEN/8, x4, x1, x2)

inst_2587:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a7f0000; 
   valaddr_reg:x3; val_offset:5174*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5174*FLEN/8, x4, x1, x2)

inst_2588:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a7f8000; 
   valaddr_reg:x3; val_offset:5176*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5176*FLEN/8, x4, x1, x2)

inst_2589:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a7fc000; 
   valaddr_reg:x3; val_offset:5178*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5178*FLEN/8, x4, x1, x2)

inst_2590:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a7fe000; 
   valaddr_reg:x3; val_offset:5180*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5180*FLEN/8, x4, x1, x2)

inst_2591:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a7ff000; 
   valaddr_reg:x3; val_offset:5182*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5182*FLEN/8, x4, x1, x2)

inst_2592:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a7ff800; 
   valaddr_reg:x3; val_offset:5184*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5184*FLEN/8, x4, x1, x2)

inst_2593:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a7ffc00; 
   valaddr_reg:x3; val_offset:5186*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5186*FLEN/8, x4, x1, x2)

inst_2594:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a7ffe00; 
   valaddr_reg:x3; val_offset:5188*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5188*FLEN/8, x4, x1, x2)

inst_2595:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a7fff00; 
   valaddr_reg:x3; val_offset:5190*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5190*FLEN/8, x4, x1, x2)

inst_2596:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a7fff80; 
   valaddr_reg:x3; val_offset:5192*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5192*FLEN/8, x4, x1, x2)

inst_2597:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a7fffc0; 
   valaddr_reg:x3; val_offset:5194*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5194*FLEN/8, x4, x1, x2)

inst_2598:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a7fffe0; 
   valaddr_reg:x3; val_offset:5196*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5196*FLEN/8, x4, x1, x2)

inst_2599:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a7ffff0; 
   valaddr_reg:x3; val_offset:5198*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5198*FLEN/8, x4, x1, x2)

inst_2600:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a7ffff8; 
   valaddr_reg:x3; val_offset:5200*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5200*FLEN/8, x4, x1, x2)

inst_2601:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a7ffffc; 
   valaddr_reg:x3; val_offset:5202*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5202*FLEN/8, x4, x1, x2)

inst_2602:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a7ffffe; 
   valaddr_reg:x3; val_offset:5204*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5204*FLEN/8, x4, x1, x2)

inst_2603:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xf4 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800000; op2val:0x7a7fffff; 
   valaddr_reg:x3; val_offset:5206*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5206*FLEN/8, x4, x1, x2)

inst_2604:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800001; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5208*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5208*FLEN/8, x4, x1, x2)

inst_2605:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800003; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5210*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5210*FLEN/8, x4, x1, x2)

inst_2606:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800007; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5212*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5212*FLEN/8, x4, x1, x2)

inst_2607:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f80000f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5214*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5214*FLEN/8, x4, x1, x2)

inst_2608:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f80001f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5216*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5216*FLEN/8, x4, x1, x2)

inst_2609:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f80003f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5218*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5218*FLEN/8, x4, x1, x2)

inst_2610:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00007f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f80007f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5220*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5220*FLEN/8, x4, x1, x2)

inst_2611:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f8000ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5222*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5222*FLEN/8, x4, x1, x2)

inst_2612:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f8001ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5224*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5224*FLEN/8, x4, x1, x2)

inst_2613:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f8003ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5226*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5226*FLEN/8, x4, x1, x2)

inst_2614:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f8007ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5228*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5228*FLEN/8, x4, x1, x2)

inst_2615:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f800fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5230*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5230*FLEN/8, x4, x1, x2)

inst_2616:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x001fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f801fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5232*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5232*FLEN/8, x4, x1, x2)

inst_2617:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x003fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f803fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5234*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5234*FLEN/8, x4, x1, x2)

inst_2618:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x007fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f807fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5236*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5236*FLEN/8, x4, x1, x2)

inst_2619:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f80ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5238*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5238*FLEN/8, x4, x1, x2)

inst_2620:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f81ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5240*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5240*FLEN/8, x4, x1, x2)

inst_2621:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f83ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5242*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5242*FLEN/8, x4, x1, x2)

inst_2622:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f87ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5244*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5244*FLEN/8, x4, x1, x2)

inst_2623:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f8fffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5246*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5246*FLEN/8, x4, x1, x2)

inst_2624:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x199999 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f999999; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5248*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5248*FLEN/8, x4, x1, x2)

inst_2625:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3f9fffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5250*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5250*FLEN/8, x4, x1, x2)

inst_2626:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x249249 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3fa49249; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5252*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5252*FLEN/8, x4, x1, x2)

inst_2627:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x333333 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3fb33333; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5254*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5254*FLEN/8, x4, x1, x2)

inst_2628:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x36db6d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3fb6db6d; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5256*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5256*FLEN/8, x4, x1, x2)

inst_2629:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x3bbbbb and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3fbbbbbb; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5258*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5258*FLEN/8, x4, x1, x2)

inst_2630:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3fbfffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5260*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5260*FLEN/8, x4, x1, x2)

inst_2631:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x400000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3fc00000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5262*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5262*FLEN/8, x4, x1, x2)

inst_2632:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x444444 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3fc44444; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5264*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5264*FLEN/8, x4, x1, x2)

inst_2633:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x4ccccc and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3fcccccc; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5266*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5266*FLEN/8, x4, x1, x2)

inst_2634:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x5b6db6 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3fdb6db6; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5268*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5268*FLEN/8, x4, x1, x2)

inst_2635:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x600000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3fe00000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5270*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5270*FLEN/8, x4, x1, x2)

inst_2636:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x666666 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3fe66666; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5272*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5272*FLEN/8, x4, x1, x2)

inst_2637:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x6db6db and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3fedb6db; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5274*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5274*FLEN/8, x4, x1, x2)

inst_2638:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x700000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3ff00000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5276*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5276*FLEN/8, x4, x1, x2)

inst_2639:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x780000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3ff80000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5278*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5278*FLEN/8, x4, x1, x2)

inst_2640:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3ffc0000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5280*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5280*FLEN/8, x4, x1, x2)

inst_2641:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3ffe0000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5282*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5282*FLEN/8, x4, x1, x2)

inst_2642:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3fff0000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5284*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5284*FLEN/8, x4, x1, x2)

inst_2643:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3fff8000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5286*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5286*FLEN/8, x4, x1, x2)

inst_2644:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3fffc000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5288*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5288*FLEN/8, x4, x1, x2)

inst_2645:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3fffe000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5290*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5290*FLEN/8, x4, x1, x2)

inst_2646:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3ffff000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5292*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5292*FLEN/8, x4, x1, x2)

inst_2647:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3ffff800; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5294*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5294*FLEN/8, x4, x1, x2)

inst_2648:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3ffffc00; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5296*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5296*FLEN/8, x4, x1, x2)

inst_2649:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3ffffe00; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5298*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5298*FLEN/8, x4, x1, x2)

inst_2650:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3fffff00; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5300*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5300*FLEN/8, x4, x1, x2)

inst_2651:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3fffff80; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5302*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5302*FLEN/8, x4, x1, x2)

inst_2652:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3fffffc0; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5304*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5304*FLEN/8, x4, x1, x2)

inst_2653:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3fffffe0; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5306*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5306*FLEN/8, x4, x1, x2)

inst_2654:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3ffffff0; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5308*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5308*FLEN/8, x4, x1, x2)

inst_2655:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3ffffff8; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5310*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5310*FLEN/8, x4, x1, x2)

inst_2656:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3ffffffc; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5312*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5312*FLEN/8, x4, x1, x2)

inst_2657:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3ffffffe; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5314*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5314*FLEN/8, x4, x1, x2)

inst_2658:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x3fffffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5316*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5316*FLEN/8, x4, x1, x2)

inst_2659:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40000000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5318*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5318*FLEN/8, x4, x1, x2)

inst_2660:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40000001; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5320*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5320*FLEN/8, x4, x1, x2)

inst_2661:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40000003; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5322*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5322*FLEN/8, x4, x1, x2)

inst_2662:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40000007; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5324*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5324*FLEN/8, x4, x1, x2)

inst_2663:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4000000f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5326*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5326*FLEN/8, x4, x1, x2)

inst_2664:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4000001f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5328*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5328*FLEN/8, x4, x1, x2)

inst_2665:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4000003f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5330*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5330*FLEN/8, x4, x1, x2)

inst_2666:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x00007f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4000007f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5332*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5332*FLEN/8, x4, x1, x2)

inst_2667:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x400000ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5334*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5334*FLEN/8, x4, x1, x2)

inst_2668:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x400001ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5336*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5336*FLEN/8, x4, x1, x2)

inst_2669:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x400003ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5338*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5338*FLEN/8, x4, x1, x2)

inst_2670:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x400007ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5340*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5340*FLEN/8, x4, x1, x2)

inst_2671:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x000fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40000fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5342*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5342*FLEN/8, x4, x1, x2)

inst_2672:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x001fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40001fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5344*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5344*FLEN/8, x4, x1, x2)

inst_2673:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x003fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40003fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5346*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5346*FLEN/8, x4, x1, x2)

inst_2674:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x007fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40007fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5348*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5348*FLEN/8, x4, x1, x2)

inst_2675:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4000ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5350*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5350*FLEN/8, x4, x1, x2)

inst_2676:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4001ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5352*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5352*FLEN/8, x4, x1, x2)

inst_2677:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4003ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5354*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5354*FLEN/8, x4, x1, x2)

inst_2678:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4007ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5356*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5356*FLEN/8, x4, x1, x2)

inst_2679:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x400fffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5358*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5358*FLEN/8, x4, x1, x2)

inst_2680:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x401fffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5360*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5360*FLEN/8, x4, x1, x2)

inst_2681:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x403fffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5362*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5362*FLEN/8, x4, x1, x2)

inst_2682:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x400000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40400000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5364*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5364*FLEN/8, x4, x1, x2)

inst_2683:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x600000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40600000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5366*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5366*FLEN/8, x4, x1, x2)

inst_2684:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x700000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40700000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5368*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5368*FLEN/8, x4, x1, x2)

inst_2685:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x780000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40780000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5370*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5370*FLEN/8, x4, x1, x2)

inst_2686:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x407c0000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5372*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5372*FLEN/8, x4, x1, x2)

inst_2687:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x407e0000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5374*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5374*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_22)

inst_2688:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x407f0000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5376*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5376*FLEN/8, x4, x1, x2)

inst_2689:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x407f8000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5378*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5378*FLEN/8, x4, x1, x2)

inst_2690:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x407fc000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5380*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5380*FLEN/8, x4, x1, x2)

inst_2691:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x407fe000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5382*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5382*FLEN/8, x4, x1, x2)

inst_2692:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x407ff000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5384*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5384*FLEN/8, x4, x1, x2)

inst_2693:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x407ff800; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5386*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5386*FLEN/8, x4, x1, x2)

inst_2694:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x407ffc00; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5388*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5388*FLEN/8, x4, x1, x2)

inst_2695:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x407ffe00; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5390*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5390*FLEN/8, x4, x1, x2)

inst_2696:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x407fff00; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5392*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5392*FLEN/8, x4, x1, x2)

inst_2697:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x407fff80; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5394*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5394*FLEN/8, x4, x1, x2)

inst_2698:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x407fffc0; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5396*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5396*FLEN/8, x4, x1, x2)

inst_2699:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x407fffe0; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5398*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5398*FLEN/8, x4, x1, x2)

inst_2700:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x407ffff0; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5400*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5400*FLEN/8, x4, x1, x2)

inst_2701:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x407ffff8; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5402*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5402*FLEN/8, x4, x1, x2)

inst_2702:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x407ffffc; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5404*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5404*FLEN/8, x4, x1, x2)

inst_2703:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x407ffffe; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5406*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5406*FLEN/8, x4, x1, x2)

inst_2704:
// fs1 == 0 and fe1 == 0x80 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x407fffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5408*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5408*FLEN/8, x4, x1, x2)

inst_2705:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40800000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5410*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5410*FLEN/8, x4, x1, x2)

inst_2706:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40800001; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5412*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5412*FLEN/8, x4, x1, x2)

inst_2707:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40800003; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5414*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5414*FLEN/8, x4, x1, x2)

inst_2708:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40800007; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5416*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5416*FLEN/8, x4, x1, x2)

inst_2709:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4080000f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5418*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5418*FLEN/8, x4, x1, x2)

inst_2710:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4080001f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5420*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5420*FLEN/8, x4, x1, x2)

inst_2711:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4080003f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5422*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5422*FLEN/8, x4, x1, x2)

inst_2712:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x00007f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4080007f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5424*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5424*FLEN/8, x4, x1, x2)

inst_2713:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x408000ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5426*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5426*FLEN/8, x4, x1, x2)

inst_2714:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x408001ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5428*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5428*FLEN/8, x4, x1, x2)

inst_2715:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x408003ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5430*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5430*FLEN/8, x4, x1, x2)

inst_2716:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x408007ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5432*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5432*FLEN/8, x4, x1, x2)

inst_2717:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x000fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40800fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5434*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5434*FLEN/8, x4, x1, x2)

inst_2718:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x001fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40801fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5436*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5436*FLEN/8, x4, x1, x2)

inst_2719:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x003fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40803fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5438*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5438*FLEN/8, x4, x1, x2)

inst_2720:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x007fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40807fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5440*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5440*FLEN/8, x4, x1, x2)

inst_2721:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4080ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5442*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5442*FLEN/8, x4, x1, x2)

inst_2722:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4081ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5444*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5444*FLEN/8, x4, x1, x2)

inst_2723:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4083ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5446*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5446*FLEN/8, x4, x1, x2)

inst_2724:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4087ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5448*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5448*FLEN/8, x4, x1, x2)

inst_2725:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x408fffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5450*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5450*FLEN/8, x4, x1, x2)

inst_2726:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x409fffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5452*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5452*FLEN/8, x4, x1, x2)

inst_2727:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40bfffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5454*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5454*FLEN/8, x4, x1, x2)

inst_2728:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x400000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40c00000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5456*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5456*FLEN/8, x4, x1, x2)

inst_2729:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x600000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40e00000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5458*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5458*FLEN/8, x4, x1, x2)

inst_2730:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x700000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40f00000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5460*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5460*FLEN/8, x4, x1, x2)

inst_2731:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x780000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40f80000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5462*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5462*FLEN/8, x4, x1, x2)

inst_2732:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40fc0000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5464*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5464*FLEN/8, x4, x1, x2)

inst_2733:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40fe0000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5466*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5466*FLEN/8, x4, x1, x2)

inst_2734:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40ff0000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5468*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5468*FLEN/8, x4, x1, x2)

inst_2735:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40ff8000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5470*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5470*FLEN/8, x4, x1, x2)

inst_2736:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40ffc000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5472*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5472*FLEN/8, x4, x1, x2)

inst_2737:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40ffe000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5474*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5474*FLEN/8, x4, x1, x2)

inst_2738:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40fff000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5476*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5476*FLEN/8, x4, x1, x2)

inst_2739:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40fff800; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5478*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5478*FLEN/8, x4, x1, x2)

inst_2740:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40fffc00; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5480*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5480*FLEN/8, x4, x1, x2)

inst_2741:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40fffe00; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5482*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5482*FLEN/8, x4, x1, x2)

inst_2742:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40ffff00; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5484*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5484*FLEN/8, x4, x1, x2)

inst_2743:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40ffff80; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5486*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5486*FLEN/8, x4, x1, x2)

inst_2744:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40ffffc0; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5488*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5488*FLEN/8, x4, x1, x2)

inst_2745:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40ffffe0; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5490*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5490*FLEN/8, x4, x1, x2)

inst_2746:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40fffff0; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5492*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5492*FLEN/8, x4, x1, x2)

inst_2747:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40fffff8; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5494*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5494*FLEN/8, x4, x1, x2)

inst_2748:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40fffffc; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5496*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5496*FLEN/8, x4, x1, x2)

inst_2749:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40fffffe; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5498*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5498*FLEN/8, x4, x1, x2)

inst_2750:
// fs1 == 0 and fe1 == 0x81 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x40ffffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5500*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5500*FLEN/8, x4, x1, x2)

inst_2751:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x41000000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5502*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5502*FLEN/8, x4, x1, x2)

inst_2752:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x41000001; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5504*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5504*FLEN/8, x4, x1, x2)

inst_2753:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x41000003; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5506*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5506*FLEN/8, x4, x1, x2)

inst_2754:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x41000007; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5508*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5508*FLEN/8, x4, x1, x2)

inst_2755:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4100000f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5510*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5510*FLEN/8, x4, x1, x2)

inst_2756:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4100001f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5512*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5512*FLEN/8, x4, x1, x2)

inst_2757:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4100003f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5514*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5514*FLEN/8, x4, x1, x2)

inst_2758:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x00007f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4100007f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5516*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5516*FLEN/8, x4, x1, x2)

inst_2759:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x410000ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5518*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5518*FLEN/8, x4, x1, x2)

inst_2760:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x410001ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5520*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5520*FLEN/8, x4, x1, x2)

inst_2761:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x410003ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5522*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5522*FLEN/8, x4, x1, x2)

inst_2762:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x410007ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5524*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5524*FLEN/8, x4, x1, x2)

inst_2763:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x000fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x41000fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5526*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5526*FLEN/8, x4, x1, x2)

inst_2764:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x001fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x41001fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5528*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5528*FLEN/8, x4, x1, x2)

inst_2765:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x003fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x41003fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5530*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5530*FLEN/8, x4, x1, x2)

inst_2766:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x007fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x41007fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5532*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5532*FLEN/8, x4, x1, x2)

inst_2767:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4100ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5534*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5534*FLEN/8, x4, x1, x2)

inst_2768:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4101ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5536*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5536*FLEN/8, x4, x1, x2)

inst_2769:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4103ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5538*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5538*FLEN/8, x4, x1, x2)

inst_2770:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4107ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5540*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5540*FLEN/8, x4, x1, x2)

inst_2771:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x410fffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5542*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5542*FLEN/8, x4, x1, x2)

inst_2772:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x411fffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5544*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5544*FLEN/8, x4, x1, x2)

inst_2773:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x413fffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5546*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5546*FLEN/8, x4, x1, x2)

inst_2774:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x400000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x41400000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5548*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5548*FLEN/8, x4, x1, x2)

inst_2775:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x600000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x41600000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5550*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5550*FLEN/8, x4, x1, x2)

inst_2776:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x700000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x41700000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5552*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5552*FLEN/8, x4, x1, x2)

inst_2777:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x780000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x41780000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5554*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5554*FLEN/8, x4, x1, x2)

inst_2778:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x417c0000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5556*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5556*FLEN/8, x4, x1, x2)

inst_2779:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x417e0000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5558*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5558*FLEN/8, x4, x1, x2)

inst_2780:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x417f0000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5560*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5560*FLEN/8, x4, x1, x2)

inst_2781:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x417f8000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5562*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5562*FLEN/8, x4, x1, x2)

inst_2782:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x417fc000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5564*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5564*FLEN/8, x4, x1, x2)

inst_2783:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x417fe000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5566*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5566*FLEN/8, x4, x1, x2)

inst_2784:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x417ff000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5568*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5568*FLEN/8, x4, x1, x2)

inst_2785:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x417ff800; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5570*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5570*FLEN/8, x4, x1, x2)

inst_2786:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x417ffc00; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5572*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5572*FLEN/8, x4, x1, x2)

inst_2787:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x417ffe00; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5574*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5574*FLEN/8, x4, x1, x2)

inst_2788:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x417fff00; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5576*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5576*FLEN/8, x4, x1, x2)

inst_2789:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x417fff80; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5578*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5578*FLEN/8, x4, x1, x2)

inst_2790:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x417fffc0; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5580*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5580*FLEN/8, x4, x1, x2)

inst_2791:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x417fffe0; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5582*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5582*FLEN/8, x4, x1, x2)

inst_2792:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x417ffff0; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5584*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5584*FLEN/8, x4, x1, x2)

inst_2793:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x417ffff8; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5586*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5586*FLEN/8, x4, x1, x2)

inst_2794:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x417ffffc; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5588*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5588*FLEN/8, x4, x1, x2)

inst_2795:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x417ffffe; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5590*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5590*FLEN/8, x4, x1, x2)

inst_2796:
// fs1 == 0 and fe1 == 0x82 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x417fffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5592*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5592*FLEN/8, x4, x1, x2)

inst_2797:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x43000000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5594*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5594*FLEN/8, x4, x1, x2)

inst_2798:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x43000001; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5596*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5596*FLEN/8, x4, x1, x2)

inst_2799:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x43000003; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5598*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5598*FLEN/8, x4, x1, x2)

inst_2800:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x43000007; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5600*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5600*FLEN/8, x4, x1, x2)

inst_2801:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4300000f; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5602*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5602*FLEN/8, x4, x1, x2)

inst_2802:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4300001f; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5604*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5604*FLEN/8, x4, x1, x2)

inst_2803:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4300003f; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5606*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5606*FLEN/8, x4, x1, x2)

inst_2804:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x00007f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4300007f; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5608*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5608*FLEN/8, x4, x1, x2)

inst_2805:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x430000ff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5610*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5610*FLEN/8, x4, x1, x2)

inst_2806:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x430001ff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5612*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5612*FLEN/8, x4, x1, x2)

inst_2807:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x430003ff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5614*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5614*FLEN/8, x4, x1, x2)

inst_2808:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x430007ff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5616*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5616*FLEN/8, x4, x1, x2)

inst_2809:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x000fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x43000fff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5618*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5618*FLEN/8, x4, x1, x2)

inst_2810:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x001fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x43001fff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5620*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5620*FLEN/8, x4, x1, x2)

inst_2811:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x003fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x43003fff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5622*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5622*FLEN/8, x4, x1, x2)

inst_2812:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x007fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x43007fff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5624*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5624*FLEN/8, x4, x1, x2)

inst_2813:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4300ffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5626*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5626*FLEN/8, x4, x1, x2)

inst_2814:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4301ffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5628*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5628*FLEN/8, x4, x1, x2)

inst_2815:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4303ffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5630*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5630*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_23)

inst_2816:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x4307ffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5632*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5632*FLEN/8, x4, x1, x2)

inst_2817:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x430fffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5634*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5634*FLEN/8, x4, x1, x2)

inst_2818:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x431fffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5636*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5636*FLEN/8, x4, x1, x2)

inst_2819:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x433fffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5638*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5638*FLEN/8, x4, x1, x2)

inst_2820:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x400000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x43400000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5640*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5640*FLEN/8, x4, x1, x2)

inst_2821:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x600000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x43600000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5642*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5642*FLEN/8, x4, x1, x2)

inst_2822:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x700000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x43700000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5644*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5644*FLEN/8, x4, x1, x2)

inst_2823:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x780000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x43780000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5646*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5646*FLEN/8, x4, x1, x2)

inst_2824:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x437c0000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5648*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5648*FLEN/8, x4, x1, x2)

inst_2825:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x437e0000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5650*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5650*FLEN/8, x4, x1, x2)

inst_2826:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x437f0000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5652*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5652*FLEN/8, x4, x1, x2)

inst_2827:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x437f8000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5654*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5654*FLEN/8, x4, x1, x2)

inst_2828:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x437fc000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5656*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5656*FLEN/8, x4, x1, x2)

inst_2829:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x437fe000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5658*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5658*FLEN/8, x4, x1, x2)

inst_2830:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x437ff000; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5660*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5660*FLEN/8, x4, x1, x2)

inst_2831:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x437ff800; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5662*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5662*FLEN/8, x4, x1, x2)

inst_2832:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x437ffc00; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5664*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5664*FLEN/8, x4, x1, x2)

inst_2833:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x437ffe00; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5666*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5666*FLEN/8, x4, x1, x2)

inst_2834:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x437fff00; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5668*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5668*FLEN/8, x4, x1, x2)

inst_2835:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x437fff80; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5670*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5670*FLEN/8, x4, x1, x2)

inst_2836:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x437fffc0; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5672*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5672*FLEN/8, x4, x1, x2)

inst_2837:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x437fffe0; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5674*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5674*FLEN/8, x4, x1, x2)

inst_2838:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x437ffff0; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5676*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5676*FLEN/8, x4, x1, x2)

inst_2839:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x437ffff8; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5678*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5678*FLEN/8, x4, x1, x2)

inst_2840:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x437ffffc; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5680*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5680*FLEN/8, x4, x1, x2)

inst_2841:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x437ffffe; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5682*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5682*FLEN/8, x4, x1, x2)

inst_2842:
// fs1 == 0 and fe1 == 0x86 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x437fffff; op2val:0x7fffff; 
   valaddr_reg:x3; val_offset:5684*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5684*FLEN/8, x4, x1, x2)

inst_2843:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x64000000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5686*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5686*FLEN/8, x4, x1, x2)

inst_2844:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x64000001; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5688*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5688*FLEN/8, x4, x1, x2)

inst_2845:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x000003 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x64000003; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5690*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5690*FLEN/8, x4, x1, x2)

inst_2846:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x000007 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x64000007; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5692*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5692*FLEN/8, x4, x1, x2)

inst_2847:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x00000f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6400000f; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5694*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5694*FLEN/8, x4, x1, x2)

inst_2848:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x00001f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6400001f; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5696*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5696*FLEN/8, x4, x1, x2)

inst_2849:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x00003f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6400003f; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5698*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5698*FLEN/8, x4, x1, x2)

inst_2850:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x00007f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6400007f; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5700*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5700*FLEN/8, x4, x1, x2)

inst_2851:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x640000ff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5702*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5702*FLEN/8, x4, x1, x2)

inst_2852:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x640001ff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5704*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5704*FLEN/8, x4, x1, x2)

inst_2853:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x640003ff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5706*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5706*FLEN/8, x4, x1, x2)

inst_2854:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x640007ff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5708*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5708*FLEN/8, x4, x1, x2)

inst_2855:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x000fff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x64000fff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5710*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5710*FLEN/8, x4, x1, x2)

inst_2856:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x001fff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x64001fff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5712*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5712*FLEN/8, x4, x1, x2)

inst_2857:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x003fff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x64003fff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5714*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5714*FLEN/8, x4, x1, x2)

inst_2858:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x007fff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x64007fff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5716*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5716*FLEN/8, x4, x1, x2)

inst_2859:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6400ffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5718*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5718*FLEN/8, x4, x1, x2)

inst_2860:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6401ffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5720*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5720*FLEN/8, x4, x1, x2)

inst_2861:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6403ffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5722*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5722*FLEN/8, x4, x1, x2)

inst_2862:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6407ffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5724*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5724*FLEN/8, x4, x1, x2)

inst_2863:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x640fffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5726*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5726*FLEN/8, x4, x1, x2)

inst_2864:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x641fffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5728*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5728*FLEN/8, x4, x1, x2)

inst_2865:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x643fffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5730*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5730*FLEN/8, x4, x1, x2)

inst_2866:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x400000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x64400000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5732*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5732*FLEN/8, x4, x1, x2)

inst_2867:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x600000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x64600000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5734*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5734*FLEN/8, x4, x1, x2)

inst_2868:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x700000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x64700000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5736*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5736*FLEN/8, x4, x1, x2)

inst_2869:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x780000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x64780000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5738*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5738*FLEN/8, x4, x1, x2)

inst_2870:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x647c0000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5740*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5740*FLEN/8, x4, x1, x2)

inst_2871:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x647e0000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5742*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5742*FLEN/8, x4, x1, x2)

inst_2872:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x647f0000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5744*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5744*FLEN/8, x4, x1, x2)

inst_2873:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x647f8000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5746*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5746*FLEN/8, x4, x1, x2)

inst_2874:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x647fc000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5748*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5748*FLEN/8, x4, x1, x2)

inst_2875:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x647fe000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5750*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5750*FLEN/8, x4, x1, x2)

inst_2876:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x647ff000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5752*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5752*FLEN/8, x4, x1, x2)

inst_2877:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x647ff800; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5754*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5754*FLEN/8, x4, x1, x2)

inst_2878:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x647ffc00; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5756*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5756*FLEN/8, x4, x1, x2)

inst_2879:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x647ffe00; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5758*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5758*FLEN/8, x4, x1, x2)

inst_2880:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x647fff00; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5760*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5760*FLEN/8, x4, x1, x2)

inst_2881:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x647fff80; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5762*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5762*FLEN/8, x4, x1, x2)

inst_2882:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x647fffc0; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5764*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5764*FLEN/8, x4, x1, x2)

inst_2883:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x647fffe0; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5766*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5766*FLEN/8, x4, x1, x2)

inst_2884:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x647ffff0; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5768*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5768*FLEN/8, x4, x1, x2)

inst_2885:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x647ffff8; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5770*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5770*FLEN/8, x4, x1, x2)

inst_2886:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x647ffffc; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5772*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5772*FLEN/8, x4, x1, x2)

inst_2887:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x647ffffe; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5774*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5774*FLEN/8, x4, x1, x2)

inst_2888:
// fs1 == 0 and fe1 == 0xc8 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x647fffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5776*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5776*FLEN/8, x4, x1, x2)

inst_2889:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e000000; op2val:0x0; 
   valaddr_reg:x3; val_offset:5778*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5778*FLEN/8, x4, x1, x2)

inst_2890:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e000001; op2val:0x0; 
   valaddr_reg:x3; val_offset:5780*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5780*FLEN/8, x4, x1, x2)

inst_2891:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e000003; op2val:0x0; 
   valaddr_reg:x3; val_offset:5782*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5782*FLEN/8, x4, x1, x2)

inst_2892:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e000007; op2val:0x0; 
   valaddr_reg:x3; val_offset:5784*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5784*FLEN/8, x4, x1, x2)

inst_2893:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e00000f; op2val:0x0; 
   valaddr_reg:x3; val_offset:5786*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5786*FLEN/8, x4, x1, x2)

inst_2894:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e00001f; op2val:0x0; 
   valaddr_reg:x3; val_offset:5788*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5788*FLEN/8, x4, x1, x2)

inst_2895:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e00003f; op2val:0x0; 
   valaddr_reg:x3; val_offset:5790*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5790*FLEN/8, x4, x1, x2)

inst_2896:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x00007f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e00007f; op2val:0x0; 
   valaddr_reg:x3; val_offset:5792*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5792*FLEN/8, x4, x1, x2)

inst_2897:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e0000ff; op2val:0x0; 
   valaddr_reg:x3; val_offset:5794*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5794*FLEN/8, x4, x1, x2)

inst_2898:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e0001ff; op2val:0x0; 
   valaddr_reg:x3; val_offset:5796*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5796*FLEN/8, x4, x1, x2)

inst_2899:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e0003ff; op2val:0x0; 
   valaddr_reg:x3; val_offset:5798*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5798*FLEN/8, x4, x1, x2)

inst_2900:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e0007ff; op2val:0x0; 
   valaddr_reg:x3; val_offset:5800*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5800*FLEN/8, x4, x1, x2)

inst_2901:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x000fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e000fff; op2val:0x0; 
   valaddr_reg:x3; val_offset:5802*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5802*FLEN/8, x4, x1, x2)

inst_2902:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x001fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e001fff; op2val:0x0; 
   valaddr_reg:x3; val_offset:5804*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5804*FLEN/8, x4, x1, x2)

inst_2903:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x003fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e003fff; op2val:0x0; 
   valaddr_reg:x3; val_offset:5806*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5806*FLEN/8, x4, x1, x2)

inst_2904:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x007fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e007fff; op2val:0x0; 
   valaddr_reg:x3; val_offset:5808*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5808*FLEN/8, x4, x1, x2)

inst_2905:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e00ffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:5810*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5810*FLEN/8, x4, x1, x2)

inst_2906:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e01ffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:5812*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5812*FLEN/8, x4, x1, x2)

inst_2907:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e03ffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:5814*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5814*FLEN/8, x4, x1, x2)

inst_2908:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e07ffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:5816*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5816*FLEN/8, x4, x1, x2)

inst_2909:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e0fffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:5818*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5818*FLEN/8, x4, x1, x2)

inst_2910:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e1fffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:5820*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5820*FLEN/8, x4, x1, x2)

inst_2911:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e3fffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:5822*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5822*FLEN/8, x4, x1, x2)

inst_2912:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x400000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e400000; op2val:0x0; 
   valaddr_reg:x3; val_offset:5824*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5824*FLEN/8, x4, x1, x2)

inst_2913:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x600000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e600000; op2val:0x0; 
   valaddr_reg:x3; val_offset:5826*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5826*FLEN/8, x4, x1, x2)

inst_2914:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x700000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e700000; op2val:0x0; 
   valaddr_reg:x3; val_offset:5828*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5828*FLEN/8, x4, x1, x2)

inst_2915:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x780000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e780000; op2val:0x0; 
   valaddr_reg:x3; val_offset:5830*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5830*FLEN/8, x4, x1, x2)

inst_2916:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e7c0000; op2val:0x0; 
   valaddr_reg:x3; val_offset:5832*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5832*FLEN/8, x4, x1, x2)

inst_2917:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e7e0000; op2val:0x0; 
   valaddr_reg:x3; val_offset:5834*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5834*FLEN/8, x4, x1, x2)

inst_2918:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e7f0000; op2val:0x0; 
   valaddr_reg:x3; val_offset:5836*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5836*FLEN/8, x4, x1, x2)

inst_2919:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e7f8000; op2val:0x0; 
   valaddr_reg:x3; val_offset:5838*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5838*FLEN/8, x4, x1, x2)

inst_2920:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e7fc000; op2val:0x0; 
   valaddr_reg:x3; val_offset:5840*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5840*FLEN/8, x4, x1, x2)

inst_2921:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e7fe000; op2val:0x0; 
   valaddr_reg:x3; val_offset:5842*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5842*FLEN/8, x4, x1, x2)

inst_2922:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e7ff000; op2val:0x0; 
   valaddr_reg:x3; val_offset:5844*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5844*FLEN/8, x4, x1, x2)

inst_2923:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e7ff800; op2val:0x0; 
   valaddr_reg:x3; val_offset:5846*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5846*FLEN/8, x4, x1, x2)

inst_2924:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e7ffc00; op2val:0x0; 
   valaddr_reg:x3; val_offset:5848*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5848*FLEN/8, x4, x1, x2)

inst_2925:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e7ffe00; op2val:0x0; 
   valaddr_reg:x3; val_offset:5850*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5850*FLEN/8, x4, x1, x2)

inst_2926:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e7fff00; op2val:0x0; 
   valaddr_reg:x3; val_offset:5852*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5852*FLEN/8, x4, x1, x2)

inst_2927:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e7fff80; op2val:0x0; 
   valaddr_reg:x3; val_offset:5854*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5854*FLEN/8, x4, x1, x2)

inst_2928:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e7fffc0; op2val:0x0; 
   valaddr_reg:x3; val_offset:5856*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5856*FLEN/8, x4, x1, x2)

inst_2929:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e7fffe0; op2val:0x0; 
   valaddr_reg:x3; val_offset:5858*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5858*FLEN/8, x4, x1, x2)

inst_2930:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e7ffff0; op2val:0x0; 
   valaddr_reg:x3; val_offset:5860*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5860*FLEN/8, x4, x1, x2)

inst_2931:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e7ffff8; op2val:0x0; 
   valaddr_reg:x3; val_offset:5862*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5862*FLEN/8, x4, x1, x2)

inst_2932:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e7ffffc; op2val:0x0; 
   valaddr_reg:x3; val_offset:5864*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5864*FLEN/8, x4, x1, x2)

inst_2933:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e7ffffe; op2val:0x0; 
   valaddr_reg:x3; val_offset:5866*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5866*FLEN/8, x4, x1, x2)

inst_2934:
// fs1 == 0 and fe1 == 0xdc and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x6e7fffff; op2val:0x0; 
   valaddr_reg:x3; val_offset:5868*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5868*FLEN/8, x4, x1, x2)

inst_2935:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a000000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5870*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5870*FLEN/8, x4, x1, x2)

inst_2936:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a000001; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5872*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5872*FLEN/8, x4, x1, x2)

inst_2937:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a000003; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5874*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5874*FLEN/8, x4, x1, x2)

inst_2938:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a000007; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5876*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5876*FLEN/8, x4, x1, x2)

inst_2939:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a00000f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5878*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5878*FLEN/8, x4, x1, x2)

inst_2940:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a00001f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5880*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5880*FLEN/8, x4, x1, x2)

inst_2941:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a00003f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5882*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5882*FLEN/8, x4, x1, x2)

inst_2942:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x00007f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a00007f; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5884*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5884*FLEN/8, x4, x1, x2)

inst_2943:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a0000ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5886*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5886*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_24)

inst_2944:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a0001ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5888*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5888*FLEN/8, x4, x1, x2)

inst_2945:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a0003ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5890*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5890*FLEN/8, x4, x1, x2)

inst_2946:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a0007ff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5892*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5892*FLEN/8, x4, x1, x2)

inst_2947:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x000fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a000fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5894*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5894*FLEN/8, x4, x1, x2)

inst_2948:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x001fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a001fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5896*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5896*FLEN/8, x4, x1, x2)

inst_2949:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x003fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a003fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5898*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5898*FLEN/8, x4, x1, x2)

inst_2950:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x007fff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a007fff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5900*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5900*FLEN/8, x4, x1, x2)

inst_2951:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a00ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5902*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5902*FLEN/8, x4, x1, x2)

inst_2952:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a01ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5904*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5904*FLEN/8, x4, x1, x2)

inst_2953:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a03ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5906*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5906*FLEN/8, x4, x1, x2)

inst_2954:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a07ffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5908*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5908*FLEN/8, x4, x1, x2)

inst_2955:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a0fffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5910*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5910*FLEN/8, x4, x1, x2)

inst_2956:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a1fffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5912*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5912*FLEN/8, x4, x1, x2)

inst_2957:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a3fffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5914*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5914*FLEN/8, x4, x1, x2)

inst_2958:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x400000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a400000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5916*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5916*FLEN/8, x4, x1, x2)

inst_2959:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x600000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a600000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5918*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5918*FLEN/8, x4, x1, x2)

inst_2960:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x700000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a700000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5920*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5920*FLEN/8, x4, x1, x2)

inst_2961:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x780000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a780000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5922*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5922*FLEN/8, x4, x1, x2)

inst_2962:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a7c0000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5924*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5924*FLEN/8, x4, x1, x2)

inst_2963:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a7e0000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5926*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5926*FLEN/8, x4, x1, x2)

inst_2964:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a7f0000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5928*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5928*FLEN/8, x4, x1, x2)

inst_2965:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a7f8000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5930*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5930*FLEN/8, x4, x1, x2)

inst_2966:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a7fc000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5932*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5932*FLEN/8, x4, x1, x2)

inst_2967:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a7fe000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5934*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5934*FLEN/8, x4, x1, x2)

inst_2968:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a7ff000; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5936*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5936*FLEN/8, x4, x1, x2)

inst_2969:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a7ff800; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5938*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5938*FLEN/8, x4, x1, x2)

inst_2970:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a7ffc00; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5940*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5940*FLEN/8, x4, x1, x2)

inst_2971:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a7ffe00; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5942*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5942*FLEN/8, x4, x1, x2)

inst_2972:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a7fff00; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5944*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5944*FLEN/8, x4, x1, x2)

inst_2973:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a7fff80; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5946*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5946*FLEN/8, x4, x1, x2)

inst_2974:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a7fffc0; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5948*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5948*FLEN/8, x4, x1, x2)

inst_2975:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a7fffe0; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5950*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5950*FLEN/8, x4, x1, x2)

inst_2976:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a7ffff0; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5952*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5952*FLEN/8, x4, x1, x2)

inst_2977:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a7ffff8; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5954*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5954*FLEN/8, x4, x1, x2)

inst_2978:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a7ffffc; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5956*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5956*FLEN/8, x4, x1, x2)

inst_2979:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a7ffffe; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5958*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5958*FLEN/8, x4, x1, x2)

inst_2980:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7a7fffff; op2val:0x3f800000; 
   valaddr_reg:x3; val_offset:5960*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5960*FLEN/8, x4, x1, x2)

inst_2981:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d000000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5962*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5962*FLEN/8, x4, x1, x2)

inst_2982:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x000001 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d000001; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5964*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5964*FLEN/8, x4, x1, x2)

inst_2983:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x000003 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d000003; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5966*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5966*FLEN/8, x4, x1, x2)

inst_2984:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x000007 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d000007; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5968*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5968*FLEN/8, x4, x1, x2)

inst_2985:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x00000f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d00000f; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5970*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5970*FLEN/8, x4, x1, x2)

inst_2986:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x00001f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d00001f; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5972*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5972*FLEN/8, x4, x1, x2)

inst_2987:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x00003f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d00003f; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5974*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5974*FLEN/8, x4, x1, x2)

inst_2988:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x00007f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d00007f; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5976*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5976*FLEN/8, x4, x1, x2)

inst_2989:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d0000ff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5978*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5978*FLEN/8, x4, x1, x2)

inst_2990:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d0001ff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5980*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5980*FLEN/8, x4, x1, x2)

inst_2991:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d0003ff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5982*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5982*FLEN/8, x4, x1, x2)

inst_2992:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d0007ff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5984*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5984*FLEN/8, x4, x1, x2)

inst_2993:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x000fff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d000fff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5986*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5986*FLEN/8, x4, x1, x2)

inst_2994:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x001fff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d001fff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5988*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5988*FLEN/8, x4, x1, x2)

inst_2995:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x003fff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d003fff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5990*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5990*FLEN/8, x4, x1, x2)

inst_2996:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x007fff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d007fff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5992*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5992*FLEN/8, x4, x1, x2)

inst_2997:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d00ffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5994*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5994*FLEN/8, x4, x1, x2)

inst_2998:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d01ffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5996*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5996*FLEN/8, x4, x1, x2)

inst_2999:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d03ffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:5998*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 5998*FLEN/8, x4, x1, x2)

inst_3000:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d07ffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6000*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6000*FLEN/8, x4, x1, x2)

inst_3001:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d0fffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6002*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6002*FLEN/8, x4, x1, x2)

inst_3002:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d1fffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6004*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6004*FLEN/8, x4, x1, x2)

inst_3003:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d3fffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6006*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6006*FLEN/8, x4, x1, x2)

inst_3004:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x400000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d400000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6008*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6008*FLEN/8, x4, x1, x2)

inst_3005:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x600000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d600000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6010*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6010*FLEN/8, x4, x1, x2)

inst_3006:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x700000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d700000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6012*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6012*FLEN/8, x4, x1, x2)

inst_3007:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x780000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d780000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6014*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6014*FLEN/8, x4, x1, x2)

inst_3008:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d7c0000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6016*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6016*FLEN/8, x4, x1, x2)

inst_3009:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d7e0000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6018*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6018*FLEN/8, x4, x1, x2)

inst_3010:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d7f0000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6020*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6020*FLEN/8, x4, x1, x2)

inst_3011:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d7f8000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6022*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6022*FLEN/8, x4, x1, x2)

inst_3012:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d7fc000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6024*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6024*FLEN/8, x4, x1, x2)

inst_3013:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d7fe000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6026*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6026*FLEN/8, x4, x1, x2)

inst_3014:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d7ff000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6028*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6028*FLEN/8, x4, x1, x2)

inst_3015:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d7ff800; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6030*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6030*FLEN/8, x4, x1, x2)

inst_3016:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d7ffc00; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6032*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6032*FLEN/8, x4, x1, x2)

inst_3017:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d7ffe00; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6034*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6034*FLEN/8, x4, x1, x2)

inst_3018:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d7fff00; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6036*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6036*FLEN/8, x4, x1, x2)

inst_3019:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d7fff80; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6038*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6038*FLEN/8, x4, x1, x2)

inst_3020:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d7fffc0; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6040*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6040*FLEN/8, x4, x1, x2)

inst_3021:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d7fffe0; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6042*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6042*FLEN/8, x4, x1, x2)

inst_3022:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d7ffff0; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6044*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6044*FLEN/8, x4, x1, x2)

inst_3023:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d7ffff8; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6046*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6046*FLEN/8, x4, x1, x2)

inst_3024:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d7ffffc; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6048*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6048*FLEN/8, x4, x1, x2)

inst_3025:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d7ffffe; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6050*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6050*FLEN/8, x4, x1, x2)

inst_3026:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d7fffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6052*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6052*FLEN/8, x4, x1, x2)

inst_3027:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d800000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6054*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6054*FLEN/8, x4, x1, x2)

inst_3028:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x000001 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d800001; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6056*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6056*FLEN/8, x4, x1, x2)

inst_3029:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x000003 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d800003; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6058*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6058*FLEN/8, x4, x1, x2)

inst_3030:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x000007 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d800007; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6060*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6060*FLEN/8, x4, x1, x2)

inst_3031:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x00000f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d80000f; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6062*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6062*FLEN/8, x4, x1, x2)

inst_3032:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x00001f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d80001f; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6064*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6064*FLEN/8, x4, x1, x2)

inst_3033:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x00003f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d80003f; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6066*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6066*FLEN/8, x4, x1, x2)

inst_3034:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x00007f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d80007f; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6068*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6068*FLEN/8, x4, x1, x2)

inst_3035:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d8000ff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6070*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6070*FLEN/8, x4, x1, x2)

inst_3036:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d8001ff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6072*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6072*FLEN/8, x4, x1, x2)

inst_3037:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d8003ff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6074*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6074*FLEN/8, x4, x1, x2)

inst_3038:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d8007ff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6076*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6076*FLEN/8, x4, x1, x2)

inst_3039:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x000fff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d800fff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6078*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6078*FLEN/8, x4, x1, x2)

inst_3040:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x001fff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d801fff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6080*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6080*FLEN/8, x4, x1, x2)

inst_3041:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x003fff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d803fff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6082*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6082*FLEN/8, x4, x1, x2)

inst_3042:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x007fff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d807fff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6084*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6084*FLEN/8, x4, x1, x2)

inst_3043:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d80ffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6086*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6086*FLEN/8, x4, x1, x2)

inst_3044:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d81ffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6088*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6088*FLEN/8, x4, x1, x2)

inst_3045:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d83ffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6090*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6090*FLEN/8, x4, x1, x2)

inst_3046:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d87ffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6092*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6092*FLEN/8, x4, x1, x2)

inst_3047:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d8fffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6094*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6094*FLEN/8, x4, x1, x2)

inst_3048:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d9fffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6096*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6096*FLEN/8, x4, x1, x2)

inst_3049:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7dbfffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6098*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6098*FLEN/8, x4, x1, x2)

inst_3050:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x400000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7dc00000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6100*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6100*FLEN/8, x4, x1, x2)

inst_3051:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x600000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7de00000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6102*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6102*FLEN/8, x4, x1, x2)

inst_3052:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x700000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7df00000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6104*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6104*FLEN/8, x4, x1, x2)

inst_3053:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x780000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7df80000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6106*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6106*FLEN/8, x4, x1, x2)

inst_3054:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7dfc0000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6108*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6108*FLEN/8, x4, x1, x2)

inst_3055:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7dfe0000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6110*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6110*FLEN/8, x4, x1, x2)

inst_3056:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7dff0000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6112*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6112*FLEN/8, x4, x1, x2)

inst_3057:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7dff8000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6114*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6114*FLEN/8, x4, x1, x2)

inst_3058:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7dffc000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6116*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6116*FLEN/8, x4, x1, x2)

inst_3059:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7dffe000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6118*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6118*FLEN/8, x4, x1, x2)

inst_3060:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7dfff000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6120*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6120*FLEN/8, x4, x1, x2)

inst_3061:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7dfff800; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6122*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6122*FLEN/8, x4, x1, x2)

inst_3062:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7dfffc00; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6124*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6124*FLEN/8, x4, x1, x2)

inst_3063:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7dfffe00; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6126*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6126*FLEN/8, x4, x1, x2)

inst_3064:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7dffff00; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6128*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6128*FLEN/8, x4, x1, x2)

inst_3065:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7dffff80; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6130*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6130*FLEN/8, x4, x1, x2)

inst_3066:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7dffffc0; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6132*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6132*FLEN/8, x4, x1, x2)

inst_3067:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7dffffe0; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6134*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6134*FLEN/8, x4, x1, x2)

inst_3068:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7dfffff0; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6136*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6136*FLEN/8, x4, x1, x2)

inst_3069:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7dfffff8; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6138*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6138*FLEN/8, x4, x1, x2)

inst_3070:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7dfffffc; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6140*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6140*FLEN/8, x4, x1, x2)

inst_3071:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7dfffffe; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6142*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6142*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_25)

inst_3072:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7dffffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6144*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6144*FLEN/8, x4, x1, x2)

inst_3073:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e000000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6146*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6146*FLEN/8, x4, x1, x2)

inst_3074:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x000001 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e000001; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6148*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6148*FLEN/8, x4, x1, x2)

inst_3075:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x000003 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e000003; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6150*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6150*FLEN/8, x4, x1, x2)

inst_3076:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x000007 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e000007; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6152*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6152*FLEN/8, x4, x1, x2)

inst_3077:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x00000f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e00000f; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6154*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6154*FLEN/8, x4, x1, x2)

inst_3078:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x00001f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e00001f; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6156*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6156*FLEN/8, x4, x1, x2)

inst_3079:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x00003f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e00003f; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6158*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6158*FLEN/8, x4, x1, x2)

inst_3080:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x00007f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e00007f; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6160*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6160*FLEN/8, x4, x1, x2)

inst_3081:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e0000ff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6162*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6162*FLEN/8, x4, x1, x2)

inst_3082:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e0001ff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6164*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6164*FLEN/8, x4, x1, x2)

inst_3083:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e0003ff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6166*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6166*FLEN/8, x4, x1, x2)

inst_3084:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e0007ff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6168*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6168*FLEN/8, x4, x1, x2)

inst_3085:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x000fff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e000fff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6170*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6170*FLEN/8, x4, x1, x2)

inst_3086:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x001fff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e001fff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6172*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6172*FLEN/8, x4, x1, x2)

inst_3087:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x003fff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e003fff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6174*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6174*FLEN/8, x4, x1, x2)

inst_3088:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x007fff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e007fff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6176*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6176*FLEN/8, x4, x1, x2)

inst_3089:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e00ffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6178*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6178*FLEN/8, x4, x1, x2)

inst_3090:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e01ffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6180*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6180*FLEN/8, x4, x1, x2)

inst_3091:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e03ffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6182*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6182*FLEN/8, x4, x1, x2)

inst_3092:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e07ffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6184*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6184*FLEN/8, x4, x1, x2)

inst_3093:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e0fffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6186*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6186*FLEN/8, x4, x1, x2)

inst_3094:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e1fffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6188*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6188*FLEN/8, x4, x1, x2)

inst_3095:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e3fffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6190*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6190*FLEN/8, x4, x1, x2)

inst_3096:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x400000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e400000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6192*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6192*FLEN/8, x4, x1, x2)

inst_3097:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x600000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e600000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6194*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6194*FLEN/8, x4, x1, x2)

inst_3098:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x700000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e700000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6196*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6196*FLEN/8, x4, x1, x2)

inst_3099:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x780000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e780000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6198*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6198*FLEN/8, x4, x1, x2)

inst_3100:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e7c0000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6200*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6200*FLEN/8, x4, x1, x2)

inst_3101:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e7e0000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6202*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6202*FLEN/8, x4, x1, x2)

inst_3102:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e7f0000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6204*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6204*FLEN/8, x4, x1, x2)

inst_3103:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e7f8000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6206*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6206*FLEN/8, x4, x1, x2)

inst_3104:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e7fc000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6208*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6208*FLEN/8, x4, x1, x2)

inst_3105:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e7fe000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6210*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6210*FLEN/8, x4, x1, x2)

inst_3106:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e7ff000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6212*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6212*FLEN/8, x4, x1, x2)

inst_3107:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e7ff800; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6214*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6214*FLEN/8, x4, x1, x2)

inst_3108:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e7ffc00; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6216*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6216*FLEN/8, x4, x1, x2)

inst_3109:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e7ffe00; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6218*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6218*FLEN/8, x4, x1, x2)

inst_3110:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e7fff00; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6220*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6220*FLEN/8, x4, x1, x2)

inst_3111:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e7fff80; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6222*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6222*FLEN/8, x4, x1, x2)

inst_3112:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e7fffc0; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6224*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6224*FLEN/8, x4, x1, x2)

inst_3113:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e7fffe0; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6226*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6226*FLEN/8, x4, x1, x2)

inst_3114:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e7ffff0; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6228*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6228*FLEN/8, x4, x1, x2)

inst_3115:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e7ffff8; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6230*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6230*FLEN/8, x4, x1, x2)

inst_3116:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e7ffffc; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6232*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6232*FLEN/8, x4, x1, x2)

inst_3117:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e7ffffe; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6234*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6234*FLEN/8, x4, x1, x2)

inst_3118:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e7fffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6236*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6236*FLEN/8, x4, x1, x2)

inst_3119:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e800000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6238*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6238*FLEN/8, x4, x1, x2)

inst_3120:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x000001 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e800001; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6240*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6240*FLEN/8, x4, x1, x2)

inst_3121:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x000003 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e800003; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6242*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6242*FLEN/8, x4, x1, x2)

inst_3122:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x000007 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e800007; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6244*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6244*FLEN/8, x4, x1, x2)

inst_3123:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x00000f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e80000f; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6246*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6246*FLEN/8, x4, x1, x2)

inst_3124:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x00001f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e80001f; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6248*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6248*FLEN/8, x4, x1, x2)

inst_3125:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x00003f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e80003f; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6250*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6250*FLEN/8, x4, x1, x2)

inst_3126:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x00007f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e80007f; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6252*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6252*FLEN/8, x4, x1, x2)

inst_3127:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e8000ff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6254*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6254*FLEN/8, x4, x1, x2)

inst_3128:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e8001ff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6256*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6256*FLEN/8, x4, x1, x2)

inst_3129:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e8003ff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6258*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6258*FLEN/8, x4, x1, x2)

inst_3130:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e8007ff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6260*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6260*FLEN/8, x4, x1, x2)

inst_3131:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x000fff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e800fff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6262*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6262*FLEN/8, x4, x1, x2)

inst_3132:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x001fff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e801fff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6264*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6264*FLEN/8, x4, x1, x2)

inst_3133:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x003fff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e803fff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6266*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6266*FLEN/8, x4, x1, x2)

inst_3134:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x007fff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e807fff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6268*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6268*FLEN/8, x4, x1, x2)

inst_3135:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e80ffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6270*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6270*FLEN/8, x4, x1, x2)

inst_3136:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e81ffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6272*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6272*FLEN/8, x4, x1, x2)

inst_3137:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e83ffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6274*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6274*FLEN/8, x4, x1, x2)

inst_3138:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e87ffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6276*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6276*FLEN/8, x4, x1, x2)

inst_3139:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e8fffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6278*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6278*FLEN/8, x4, x1, x2)

inst_3140:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e9fffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6280*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6280*FLEN/8, x4, x1, x2)

inst_3141:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ebfffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6282*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6282*FLEN/8, x4, x1, x2)

inst_3142:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x400000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ec00000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6284*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6284*FLEN/8, x4, x1, x2)

inst_3143:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x600000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ee00000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6286*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6286*FLEN/8, x4, x1, x2)

inst_3144:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ef00000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6288*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6288*FLEN/8, x4, x1, x2)

inst_3145:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x780000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ef80000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6290*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6290*FLEN/8, x4, x1, x2)

inst_3146:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7efc0000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6292*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6292*FLEN/8, x4, x1, x2)

inst_3147:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7efe0000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6294*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6294*FLEN/8, x4, x1, x2)

inst_3148:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7eff0000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6296*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6296*FLEN/8, x4, x1, x2)

inst_3149:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7eff8000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6298*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6298*FLEN/8, x4, x1, x2)

inst_3150:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7effc000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6300*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6300*FLEN/8, x4, x1, x2)

inst_3151:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7effe000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6302*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6302*FLEN/8, x4, x1, x2)

inst_3152:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7efff000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6304*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6304*FLEN/8, x4, x1, x2)

inst_3153:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7efff800; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6306*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6306*FLEN/8, x4, x1, x2)

inst_3154:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7efffc00; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6308*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6308*FLEN/8, x4, x1, x2)

inst_3155:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7efffe00; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6310*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6310*FLEN/8, x4, x1, x2)

inst_3156:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7effff00; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6312*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6312*FLEN/8, x4, x1, x2)

inst_3157:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7effff80; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6314*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6314*FLEN/8, x4, x1, x2)

inst_3158:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7effffc0; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6316*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6316*FLEN/8, x4, x1, x2)

inst_3159:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7effffe0; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6318*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6318*FLEN/8, x4, x1, x2)

inst_3160:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7efffff0; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6320*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6320*FLEN/8, x4, x1, x2)

inst_3161:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7efffff8; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6322*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6322*FLEN/8, x4, x1, x2)

inst_3162:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7efffffc; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6324*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6324*FLEN/8, x4, x1, x2)

inst_3163:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7efffffe; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6326*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6326*FLEN/8, x4, x1, x2)

inst_3164:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7effffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6328*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6328*FLEN/8, x4, x1, x2)

inst_3165:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f000000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6330*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6330*FLEN/8, x4, x1, x2)

inst_3166:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000001 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f000001; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6332*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6332*FLEN/8, x4, x1, x2)

inst_3167:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000003 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f000003; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6334*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6334*FLEN/8, x4, x1, x2)

inst_3168:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000007 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f000007; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6336*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6336*FLEN/8, x4, x1, x2)

inst_3169:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00000f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f00000f; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6338*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6338*FLEN/8, x4, x1, x2)

inst_3170:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00001f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f00001f; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6340*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6340*FLEN/8, x4, x1, x2)

inst_3171:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00003f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f00003f; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6342*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6342*FLEN/8, x4, x1, x2)

inst_3172:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00007f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f00007f; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6344*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6344*FLEN/8, x4, x1, x2)

inst_3173:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0000ff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f0000ff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6346*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6346*FLEN/8, x4, x1, x2)

inst_3174:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0001ff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f0001ff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6348*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6348*FLEN/8, x4, x1, x2)

inst_3175:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0003ff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f0003ff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6350*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6350*FLEN/8, x4, x1, x2)

inst_3176:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0007ff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f0007ff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6352*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6352*FLEN/8, x4, x1, x2)

inst_3177:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000fff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f000fff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6354*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6354*FLEN/8, x4, x1, x2)

inst_3178:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x001fff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f001fff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6356*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6356*FLEN/8, x4, x1, x2)

inst_3179:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x003fff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f003fff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6358*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6358*FLEN/8, x4, x1, x2)

inst_3180:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x007fff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f007fff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6360*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6360*FLEN/8, x4, x1, x2)

inst_3181:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00ffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f00ffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6362*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6362*FLEN/8, x4, x1, x2)

inst_3182:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x01ffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f01ffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6364*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6364*FLEN/8, x4, x1, x2)

inst_3183:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03ffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f03ffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6366*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6366*FLEN/8, x4, x1, x2)

inst_3184:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x07ffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f07ffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6368*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6368*FLEN/8, x4, x1, x2)

inst_3185:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f0fffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6370*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6370*FLEN/8, x4, x1, x2)

inst_3186:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x199999 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f199999; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6372*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6372*FLEN/8, x4, x1, x2)

inst_3187:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f1fffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6374*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6374*FLEN/8, x4, x1, x2)

inst_3188:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x249249 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f249249; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6376*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6376*FLEN/8, x4, x1, x2)

inst_3189:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x333333 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f333333; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6378*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6378*FLEN/8, x4, x1, x2)

inst_3190:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x36db6d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f36db6d; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6380*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6380*FLEN/8, x4, x1, x2)

inst_3191:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3bbbbb and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f3bbbbb; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6382*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6382*FLEN/8, x4, x1, x2)

inst_3192:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f3fffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6384*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6384*FLEN/8, x4, x1, x2)

inst_3193:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x400000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f400000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6386*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6386*FLEN/8, x4, x1, x2)

inst_3194:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x444444 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f444444; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6388*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6388*FLEN/8, x4, x1, x2)

inst_3195:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x4ccccc and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f4ccccc; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6390*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6390*FLEN/8, x4, x1, x2)

inst_3196:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x5b6db6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f5b6db6; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6392*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6392*FLEN/8, x4, x1, x2)

inst_3197:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x600000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f600000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6394*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6394*FLEN/8, x4, x1, x2)

inst_3198:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x666666 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f666666; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6396*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6396*FLEN/8, x4, x1, x2)

inst_3199:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x6db6db and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f6db6db; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6398*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6398*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_26)

inst_3200:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x700000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f700000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6400*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6400*FLEN/8, x4, x1, x2)

inst_3201:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x780000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f780000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6402*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6402*FLEN/8, x4, x1, x2)

inst_3202:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7c0000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7c0000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6404*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6404*FLEN/8, x4, x1, x2)

inst_3203:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7e0000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7e0000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6406*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6406*FLEN/8, x4, x1, x2)

inst_3204:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7f0000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7f0000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6408*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6408*FLEN/8, x4, x1, x2)

inst_3205:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7f8000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7f8000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6410*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6410*FLEN/8, x4, x1, x2)

inst_3206:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fc000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fc000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6412*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6412*FLEN/8, x4, x1, x2)

inst_3207:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fe000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fe000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6414*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6414*FLEN/8, x4, x1, x2)

inst_3208:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7ff000 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7ff000; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6416*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6416*FLEN/8, x4, x1, x2)

inst_3209:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7ff800 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7ff800; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6418*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6418*FLEN/8, x4, x1, x2)

inst_3210:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7ffc00 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7ffc00; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6420*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6420*FLEN/8, x4, x1, x2)

inst_3211:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7ffe00 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7ffe00; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6422*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6422*FLEN/8, x4, x1, x2)

inst_3212:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fff00 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fff00; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6424*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6424*FLEN/8, x4, x1, x2)

inst_3213:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fff80 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fff80; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6426*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6426*FLEN/8, x4, x1, x2)

inst_3214:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffc0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffc0; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6428*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6428*FLEN/8, x4, x1, x2)

inst_3215:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffe0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffe0; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6430*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6430*FLEN/8, x4, x1, x2)

inst_3216:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7ffff0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7ffff0; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6432*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6432*FLEN/8, x4, x1, x2)

inst_3217:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7ffff8 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7ffff8; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6434*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6434*FLEN/8, x4, x1, x2)

inst_3218:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7ffffc and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7ffffc; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6436*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6436*FLEN/8, x4, x1, x2)

inst_3219:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7ffffe and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7ffffe; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:6438*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6438*FLEN/8, x4, x1, x2)

inst_3220:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x64000000; 
   valaddr_reg:x3; val_offset:6440*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6440*FLEN/8, x4, x1, x2)

inst_3221:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x64000001; 
   valaddr_reg:x3; val_offset:6442*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6442*FLEN/8, x4, x1, x2)

inst_3222:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x64000003; 
   valaddr_reg:x3; val_offset:6444*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6444*FLEN/8, x4, x1, x2)

inst_3223:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x64000007; 
   valaddr_reg:x3; val_offset:6446*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6446*FLEN/8, x4, x1, x2)

inst_3224:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x6400000f; 
   valaddr_reg:x3; val_offset:6448*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6448*FLEN/8, x4, x1, x2)

inst_3225:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x6400001f; 
   valaddr_reg:x3; val_offset:6450*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6450*FLEN/8, x4, x1, x2)

inst_3226:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x6400003f; 
   valaddr_reg:x3; val_offset:6452*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6452*FLEN/8, x4, x1, x2)

inst_3227:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x6400007f; 
   valaddr_reg:x3; val_offset:6454*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6454*FLEN/8, x4, x1, x2)

inst_3228:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x640000ff; 
   valaddr_reg:x3; val_offset:6456*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6456*FLEN/8, x4, x1, x2)

inst_3229:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x640001ff; 
   valaddr_reg:x3; val_offset:6458*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6458*FLEN/8, x4, x1, x2)

inst_3230:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x640003ff; 
   valaddr_reg:x3; val_offset:6460*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6460*FLEN/8, x4, x1, x2)

inst_3231:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x640007ff; 
   valaddr_reg:x3; val_offset:6462*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6462*FLEN/8, x4, x1, x2)

inst_3232:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x64000fff; 
   valaddr_reg:x3; val_offset:6464*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6464*FLEN/8, x4, x1, x2)

inst_3233:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x64001fff; 
   valaddr_reg:x3; val_offset:6466*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6466*FLEN/8, x4, x1, x2)

inst_3234:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x64003fff; 
   valaddr_reg:x3; val_offset:6468*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6468*FLEN/8, x4, x1, x2)

inst_3235:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x64007fff; 
   valaddr_reg:x3; val_offset:6470*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6470*FLEN/8, x4, x1, x2)

inst_3236:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x6400ffff; 
   valaddr_reg:x3; val_offset:6472*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6472*FLEN/8, x4, x1, x2)

inst_3237:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x6401ffff; 
   valaddr_reg:x3; val_offset:6474*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6474*FLEN/8, x4, x1, x2)

inst_3238:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x6403ffff; 
   valaddr_reg:x3; val_offset:6476*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6476*FLEN/8, x4, x1, x2)

inst_3239:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x6407ffff; 
   valaddr_reg:x3; val_offset:6478*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6478*FLEN/8, x4, x1, x2)

inst_3240:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x640fffff; 
   valaddr_reg:x3; val_offset:6480*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6480*FLEN/8, x4, x1, x2)

inst_3241:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x641fffff; 
   valaddr_reg:x3; val_offset:6482*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6482*FLEN/8, x4, x1, x2)

inst_3242:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x643fffff; 
   valaddr_reg:x3; val_offset:6484*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6484*FLEN/8, x4, x1, x2)

inst_3243:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x64400000; 
   valaddr_reg:x3; val_offset:6486*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6486*FLEN/8, x4, x1, x2)

inst_3244:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x64600000; 
   valaddr_reg:x3; val_offset:6488*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6488*FLEN/8, x4, x1, x2)

inst_3245:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x64700000; 
   valaddr_reg:x3; val_offset:6490*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6490*FLEN/8, x4, x1, x2)

inst_3246:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x64780000; 
   valaddr_reg:x3; val_offset:6492*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6492*FLEN/8, x4, x1, x2)

inst_3247:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x647c0000; 
   valaddr_reg:x3; val_offset:6494*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6494*FLEN/8, x4, x1, x2)

inst_3248:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x647e0000; 
   valaddr_reg:x3; val_offset:6496*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6496*FLEN/8, x4, x1, x2)

inst_3249:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x647f0000; 
   valaddr_reg:x3; val_offset:6498*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6498*FLEN/8, x4, x1, x2)

inst_3250:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x647f8000; 
   valaddr_reg:x3; val_offset:6500*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6500*FLEN/8, x4, x1, x2)

inst_3251:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x647fc000; 
   valaddr_reg:x3; val_offset:6502*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6502*FLEN/8, x4, x1, x2)

inst_3252:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x647fe000; 
   valaddr_reg:x3; val_offset:6504*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6504*FLEN/8, x4, x1, x2)

inst_3253:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x647ff000; 
   valaddr_reg:x3; val_offset:6506*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6506*FLEN/8, x4, x1, x2)

inst_3254:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x647ff800; 
   valaddr_reg:x3; val_offset:6508*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6508*FLEN/8, x4, x1, x2)

inst_3255:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x647ffc00; 
   valaddr_reg:x3; val_offset:6510*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6510*FLEN/8, x4, x1, x2)

inst_3256:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x647ffe00; 
   valaddr_reg:x3; val_offset:6512*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6512*FLEN/8, x4, x1, x2)

inst_3257:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x647fff00; 
   valaddr_reg:x3; val_offset:6514*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6514*FLEN/8, x4, x1, x2)

inst_3258:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x647fff80; 
   valaddr_reg:x3; val_offset:6516*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6516*FLEN/8, x4, x1, x2)

inst_3259:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x647fffc0; 
   valaddr_reg:x3; val_offset:6518*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6518*FLEN/8, x4, x1, x2)

inst_3260:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x647fffe0; 
   valaddr_reg:x3; val_offset:6520*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6520*FLEN/8, x4, x1, x2)

inst_3261:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x647ffff0; 
   valaddr_reg:x3; val_offset:6522*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6522*FLEN/8, x4, x1, x2)

inst_3262:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x647ffff8; 
   valaddr_reg:x3; val_offset:6524*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6524*FLEN/8, x4, x1, x2)

inst_3263:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x647ffffc; 
   valaddr_reg:x3; val_offset:6526*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6526*FLEN/8, x4, x1, x2)

inst_3264:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x647ffffe; 
   valaddr_reg:x3; val_offset:6528*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6528*FLEN/8, x4, x1, x2)

inst_3265:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xc8 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x647fffff; 
   valaddr_reg:x3; val_offset:6530*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6530*FLEN/8, x4, x1, x2)

inst_3266:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d000000; 
   valaddr_reg:x3; val_offset:6532*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6532*FLEN/8, x4, x1, x2)

inst_3267:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d000001; 
   valaddr_reg:x3; val_offset:6534*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6534*FLEN/8, x4, x1, x2)

inst_3268:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d000003; 
   valaddr_reg:x3; val_offset:6536*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6536*FLEN/8, x4, x1, x2)

inst_3269:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d000007; 
   valaddr_reg:x3; val_offset:6538*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6538*FLEN/8, x4, x1, x2)

inst_3270:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d00000f; 
   valaddr_reg:x3; val_offset:6540*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6540*FLEN/8, x4, x1, x2)

inst_3271:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d00001f; 
   valaddr_reg:x3; val_offset:6542*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6542*FLEN/8, x4, x1, x2)

inst_3272:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d00003f; 
   valaddr_reg:x3; val_offset:6544*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6544*FLEN/8, x4, x1, x2)

inst_3273:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d00007f; 
   valaddr_reg:x3; val_offset:6546*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6546*FLEN/8, x4, x1, x2)

inst_3274:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d0000ff; 
   valaddr_reg:x3; val_offset:6548*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6548*FLEN/8, x4, x1, x2)

inst_3275:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d0001ff; 
   valaddr_reg:x3; val_offset:6550*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6550*FLEN/8, x4, x1, x2)

inst_3276:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d0003ff; 
   valaddr_reg:x3; val_offset:6552*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6552*FLEN/8, x4, x1, x2)

inst_3277:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d0007ff; 
   valaddr_reg:x3; val_offset:6554*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6554*FLEN/8, x4, x1, x2)

inst_3278:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d000fff; 
   valaddr_reg:x3; val_offset:6556*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6556*FLEN/8, x4, x1, x2)

inst_3279:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d001fff; 
   valaddr_reg:x3; val_offset:6558*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6558*FLEN/8, x4, x1, x2)

inst_3280:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d003fff; 
   valaddr_reg:x3; val_offset:6560*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6560*FLEN/8, x4, x1, x2)

inst_3281:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d007fff; 
   valaddr_reg:x3; val_offset:6562*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6562*FLEN/8, x4, x1, x2)

inst_3282:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d00ffff; 
   valaddr_reg:x3; val_offset:6564*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6564*FLEN/8, x4, x1, x2)

inst_3283:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d01ffff; 
   valaddr_reg:x3; val_offset:6566*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6566*FLEN/8, x4, x1, x2)

inst_3284:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d03ffff; 
   valaddr_reg:x3; val_offset:6568*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6568*FLEN/8, x4, x1, x2)

inst_3285:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d07ffff; 
   valaddr_reg:x3; val_offset:6570*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6570*FLEN/8, x4, x1, x2)

inst_3286:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d0fffff; 
   valaddr_reg:x3; val_offset:6572*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6572*FLEN/8, x4, x1, x2)

inst_3287:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d1fffff; 
   valaddr_reg:x3; val_offset:6574*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6574*FLEN/8, x4, x1, x2)

inst_3288:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d3fffff; 
   valaddr_reg:x3; val_offset:6576*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6576*FLEN/8, x4, x1, x2)

inst_3289:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d400000; 
   valaddr_reg:x3; val_offset:6578*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6578*FLEN/8, x4, x1, x2)

inst_3290:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d600000; 
   valaddr_reg:x3; val_offset:6580*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6580*FLEN/8, x4, x1, x2)

inst_3291:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d700000; 
   valaddr_reg:x3; val_offset:6582*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6582*FLEN/8, x4, x1, x2)

inst_3292:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d780000; 
   valaddr_reg:x3; val_offset:6584*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6584*FLEN/8, x4, x1, x2)

inst_3293:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d7c0000; 
   valaddr_reg:x3; val_offset:6586*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6586*FLEN/8, x4, x1, x2)

inst_3294:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d7e0000; 
   valaddr_reg:x3; val_offset:6588*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6588*FLEN/8, x4, x1, x2)

inst_3295:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d7f0000; 
   valaddr_reg:x3; val_offset:6590*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6590*FLEN/8, x4, x1, x2)

inst_3296:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d7f8000; 
   valaddr_reg:x3; val_offset:6592*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6592*FLEN/8, x4, x1, x2)

inst_3297:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d7fc000; 
   valaddr_reg:x3; val_offset:6594*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6594*FLEN/8, x4, x1, x2)

inst_3298:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d7fe000; 
   valaddr_reg:x3; val_offset:6596*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6596*FLEN/8, x4, x1, x2)

inst_3299:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d7ff000; 
   valaddr_reg:x3; val_offset:6598*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6598*FLEN/8, x4, x1, x2)

inst_3300:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d7ff800; 
   valaddr_reg:x3; val_offset:6600*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6600*FLEN/8, x4, x1, x2)

inst_3301:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d7ffc00; 
   valaddr_reg:x3; val_offset:6602*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6602*FLEN/8, x4, x1, x2)

inst_3302:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d7ffe00; 
   valaddr_reg:x3; val_offset:6604*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6604*FLEN/8, x4, x1, x2)

inst_3303:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d7fff00; 
   valaddr_reg:x3; val_offset:6606*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6606*FLEN/8, x4, x1, x2)

inst_3304:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d7fff80; 
   valaddr_reg:x3; val_offset:6608*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6608*FLEN/8, x4, x1, x2)

inst_3305:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d7fffc0; 
   valaddr_reg:x3; val_offset:6610*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6610*FLEN/8, x4, x1, x2)

inst_3306:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d7fffe0; 
   valaddr_reg:x3; val_offset:6612*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6612*FLEN/8, x4, x1, x2)

inst_3307:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d7ffff0; 
   valaddr_reg:x3; val_offset:6614*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6614*FLEN/8, x4, x1, x2)

inst_3308:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d7ffff8; 
   valaddr_reg:x3; val_offset:6616*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6616*FLEN/8, x4, x1, x2)

inst_3309:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d7ffffc; 
   valaddr_reg:x3; val_offset:6618*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6618*FLEN/8, x4, x1, x2)

inst_3310:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d7ffffe; 
   valaddr_reg:x3; val_offset:6620*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6620*FLEN/8, x4, x1, x2)

inst_3311:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d7fffff; 
   valaddr_reg:x3; val_offset:6622*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6622*FLEN/8, x4, x1, x2)

inst_3312:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d800000; 
   valaddr_reg:x3; val_offset:6624*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6624*FLEN/8, x4, x1, x2)

inst_3313:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d800001; 
   valaddr_reg:x3; val_offset:6626*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6626*FLEN/8, x4, x1, x2)

inst_3314:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d800003; 
   valaddr_reg:x3; val_offset:6628*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6628*FLEN/8, x4, x1, x2)

inst_3315:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d800007; 
   valaddr_reg:x3; val_offset:6630*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6630*FLEN/8, x4, x1, x2)

inst_3316:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d80000f; 
   valaddr_reg:x3; val_offset:6632*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6632*FLEN/8, x4, x1, x2)

inst_3317:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d80001f; 
   valaddr_reg:x3; val_offset:6634*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6634*FLEN/8, x4, x1, x2)

inst_3318:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d80003f; 
   valaddr_reg:x3; val_offset:6636*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6636*FLEN/8, x4, x1, x2)

inst_3319:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d80007f; 
   valaddr_reg:x3; val_offset:6638*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6638*FLEN/8, x4, x1, x2)

inst_3320:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d8000ff; 
   valaddr_reg:x3; val_offset:6640*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6640*FLEN/8, x4, x1, x2)

inst_3321:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d8001ff; 
   valaddr_reg:x3; val_offset:6642*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6642*FLEN/8, x4, x1, x2)

inst_3322:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d8003ff; 
   valaddr_reg:x3; val_offset:6644*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6644*FLEN/8, x4, x1, x2)

inst_3323:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d8007ff; 
   valaddr_reg:x3; val_offset:6646*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6646*FLEN/8, x4, x1, x2)

inst_3324:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d800fff; 
   valaddr_reg:x3; val_offset:6648*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6648*FLEN/8, x4, x1, x2)

inst_3325:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d801fff; 
   valaddr_reg:x3; val_offset:6650*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6650*FLEN/8, x4, x1, x2)

inst_3326:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d803fff; 
   valaddr_reg:x3; val_offset:6652*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6652*FLEN/8, x4, x1, x2)

inst_3327:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d807fff; 
   valaddr_reg:x3; val_offset:6654*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6654*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_27)

inst_3328:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d80ffff; 
   valaddr_reg:x3; val_offset:6656*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6656*FLEN/8, x4, x1, x2)

inst_3329:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d81ffff; 
   valaddr_reg:x3; val_offset:6658*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6658*FLEN/8, x4, x1, x2)

inst_3330:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d83ffff; 
   valaddr_reg:x3; val_offset:6660*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6660*FLEN/8, x4, x1, x2)

inst_3331:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d87ffff; 
   valaddr_reg:x3; val_offset:6662*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6662*FLEN/8, x4, x1, x2)

inst_3332:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d8fffff; 
   valaddr_reg:x3; val_offset:6664*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6664*FLEN/8, x4, x1, x2)

inst_3333:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7d9fffff; 
   valaddr_reg:x3; val_offset:6666*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6666*FLEN/8, x4, x1, x2)

inst_3334:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7dbfffff; 
   valaddr_reg:x3; val_offset:6668*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6668*FLEN/8, x4, x1, x2)

inst_3335:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7dc00000; 
   valaddr_reg:x3; val_offset:6670*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6670*FLEN/8, x4, x1, x2)

inst_3336:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7de00000; 
   valaddr_reg:x3; val_offset:6672*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6672*FLEN/8, x4, x1, x2)

inst_3337:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7df00000; 
   valaddr_reg:x3; val_offset:6674*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6674*FLEN/8, x4, x1, x2)

inst_3338:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7df80000; 
   valaddr_reg:x3; val_offset:6676*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6676*FLEN/8, x4, x1, x2)

inst_3339:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7dfc0000; 
   valaddr_reg:x3; val_offset:6678*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6678*FLEN/8, x4, x1, x2)

inst_3340:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7dfe0000; 
   valaddr_reg:x3; val_offset:6680*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6680*FLEN/8, x4, x1, x2)

inst_3341:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7dff0000; 
   valaddr_reg:x3; val_offset:6682*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6682*FLEN/8, x4, x1, x2)

inst_3342:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7dff8000; 
   valaddr_reg:x3; val_offset:6684*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6684*FLEN/8, x4, x1, x2)

inst_3343:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7dffc000; 
   valaddr_reg:x3; val_offset:6686*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6686*FLEN/8, x4, x1, x2)

inst_3344:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7dffe000; 
   valaddr_reg:x3; val_offset:6688*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6688*FLEN/8, x4, x1, x2)

inst_3345:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7dfff000; 
   valaddr_reg:x3; val_offset:6690*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6690*FLEN/8, x4, x1, x2)

inst_3346:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7dfff800; 
   valaddr_reg:x3; val_offset:6692*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6692*FLEN/8, x4, x1, x2)

inst_3347:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7dfffc00; 
   valaddr_reg:x3; val_offset:6694*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6694*FLEN/8, x4, x1, x2)

inst_3348:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7dfffe00; 
   valaddr_reg:x3; val_offset:6696*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6696*FLEN/8, x4, x1, x2)

inst_3349:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7dffff00; 
   valaddr_reg:x3; val_offset:6698*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6698*FLEN/8, x4, x1, x2)

inst_3350:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7dffff80; 
   valaddr_reg:x3; val_offset:6700*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6700*FLEN/8, x4, x1, x2)

inst_3351:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7dffffc0; 
   valaddr_reg:x3; val_offset:6702*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6702*FLEN/8, x4, x1, x2)

inst_3352:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7dffffe0; 
   valaddr_reg:x3; val_offset:6704*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6704*FLEN/8, x4, x1, x2)

inst_3353:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7dfffff0; 
   valaddr_reg:x3; val_offset:6706*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6706*FLEN/8, x4, x1, x2)

inst_3354:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7dfffff8; 
   valaddr_reg:x3; val_offset:6708*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6708*FLEN/8, x4, x1, x2)

inst_3355:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7dfffffc; 
   valaddr_reg:x3; val_offset:6710*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6710*FLEN/8, x4, x1, x2)

inst_3356:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7dfffffe; 
   valaddr_reg:x3; val_offset:6712*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6712*FLEN/8, x4, x1, x2)

inst_3357:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7dffffff; 
   valaddr_reg:x3; val_offset:6714*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6714*FLEN/8, x4, x1, x2)

inst_3358:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e000000; 
   valaddr_reg:x3; val_offset:6716*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6716*FLEN/8, x4, x1, x2)

inst_3359:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e000001; 
   valaddr_reg:x3; val_offset:6718*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6718*FLEN/8, x4, x1, x2)

inst_3360:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e000003; 
   valaddr_reg:x3; val_offset:6720*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6720*FLEN/8, x4, x1, x2)

inst_3361:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e000007; 
   valaddr_reg:x3; val_offset:6722*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6722*FLEN/8, x4, x1, x2)

inst_3362:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e00000f; 
   valaddr_reg:x3; val_offset:6724*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6724*FLEN/8, x4, x1, x2)

inst_3363:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e00001f; 
   valaddr_reg:x3; val_offset:6726*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6726*FLEN/8, x4, x1, x2)

inst_3364:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e00003f; 
   valaddr_reg:x3; val_offset:6728*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6728*FLEN/8, x4, x1, x2)

inst_3365:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e00007f; 
   valaddr_reg:x3; val_offset:6730*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6730*FLEN/8, x4, x1, x2)

inst_3366:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e0000ff; 
   valaddr_reg:x3; val_offset:6732*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6732*FLEN/8, x4, x1, x2)

inst_3367:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e0001ff; 
   valaddr_reg:x3; val_offset:6734*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6734*FLEN/8, x4, x1, x2)

inst_3368:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e0003ff; 
   valaddr_reg:x3; val_offset:6736*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6736*FLEN/8, x4, x1, x2)

inst_3369:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e0007ff; 
   valaddr_reg:x3; val_offset:6738*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6738*FLEN/8, x4, x1, x2)

inst_3370:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e000fff; 
   valaddr_reg:x3; val_offset:6740*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6740*FLEN/8, x4, x1, x2)

inst_3371:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e001fff; 
   valaddr_reg:x3; val_offset:6742*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6742*FLEN/8, x4, x1, x2)

inst_3372:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e003fff; 
   valaddr_reg:x3; val_offset:6744*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6744*FLEN/8, x4, x1, x2)

inst_3373:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e007fff; 
   valaddr_reg:x3; val_offset:6746*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6746*FLEN/8, x4, x1, x2)

inst_3374:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e00ffff; 
   valaddr_reg:x3; val_offset:6748*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6748*FLEN/8, x4, x1, x2)

inst_3375:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e01ffff; 
   valaddr_reg:x3; val_offset:6750*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6750*FLEN/8, x4, x1, x2)

inst_3376:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e03ffff; 
   valaddr_reg:x3; val_offset:6752*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6752*FLEN/8, x4, x1, x2)

inst_3377:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e07ffff; 
   valaddr_reg:x3; val_offset:6754*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6754*FLEN/8, x4, x1, x2)

inst_3378:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e0fffff; 
   valaddr_reg:x3; val_offset:6756*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6756*FLEN/8, x4, x1, x2)

inst_3379:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e1fffff; 
   valaddr_reg:x3; val_offset:6758*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6758*FLEN/8, x4, x1, x2)

inst_3380:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e3fffff; 
   valaddr_reg:x3; val_offset:6760*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6760*FLEN/8, x4, x1, x2)

inst_3381:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e400000; 
   valaddr_reg:x3; val_offset:6762*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6762*FLEN/8, x4, x1, x2)

inst_3382:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e600000; 
   valaddr_reg:x3; val_offset:6764*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6764*FLEN/8, x4, x1, x2)

inst_3383:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e700000; 
   valaddr_reg:x3; val_offset:6766*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6766*FLEN/8, x4, x1, x2)

inst_3384:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e780000; 
   valaddr_reg:x3; val_offset:6768*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6768*FLEN/8, x4, x1, x2)

inst_3385:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e7c0000; 
   valaddr_reg:x3; val_offset:6770*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6770*FLEN/8, x4, x1, x2)

inst_3386:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e7e0000; 
   valaddr_reg:x3; val_offset:6772*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6772*FLEN/8, x4, x1, x2)

inst_3387:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e7f0000; 
   valaddr_reg:x3; val_offset:6774*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6774*FLEN/8, x4, x1, x2)

inst_3388:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e7f8000; 
   valaddr_reg:x3; val_offset:6776*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6776*FLEN/8, x4, x1, x2)

inst_3389:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e7fc000; 
   valaddr_reg:x3; val_offset:6778*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6778*FLEN/8, x4, x1, x2)

inst_3390:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e7fe000; 
   valaddr_reg:x3; val_offset:6780*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6780*FLEN/8, x4, x1, x2)

inst_3391:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e7ff000; 
   valaddr_reg:x3; val_offset:6782*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6782*FLEN/8, x4, x1, x2)

inst_3392:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e7ff800; 
   valaddr_reg:x3; val_offset:6784*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6784*FLEN/8, x4, x1, x2)

inst_3393:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e7ffc00; 
   valaddr_reg:x3; val_offset:6786*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6786*FLEN/8, x4, x1, x2)

inst_3394:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e7ffe00; 
   valaddr_reg:x3; val_offset:6788*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6788*FLEN/8, x4, x1, x2)

inst_3395:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e7fff00; 
   valaddr_reg:x3; val_offset:6790*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6790*FLEN/8, x4, x1, x2)

inst_3396:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e7fff80; 
   valaddr_reg:x3; val_offset:6792*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6792*FLEN/8, x4, x1, x2)

inst_3397:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e7fffc0; 
   valaddr_reg:x3; val_offset:6794*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6794*FLEN/8, x4, x1, x2)

inst_3398:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e7fffe0; 
   valaddr_reg:x3; val_offset:6796*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6796*FLEN/8, x4, x1, x2)

inst_3399:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e7ffff0; 
   valaddr_reg:x3; val_offset:6798*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6798*FLEN/8, x4, x1, x2)

inst_3400:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e7ffff8; 
   valaddr_reg:x3; val_offset:6800*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6800*FLEN/8, x4, x1, x2)

inst_3401:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e7ffffc; 
   valaddr_reg:x3; val_offset:6802*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6802*FLEN/8, x4, x1, x2)

inst_3402:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e7ffffe; 
   valaddr_reg:x3; val_offset:6804*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6804*FLEN/8, x4, x1, x2)

inst_3403:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e7fffff; 
   valaddr_reg:x3; val_offset:6806*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6806*FLEN/8, x4, x1, x2)

inst_3404:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e800000; 
   valaddr_reg:x3; val_offset:6808*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6808*FLEN/8, x4, x1, x2)

inst_3405:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e800001; 
   valaddr_reg:x3; val_offset:6810*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6810*FLEN/8, x4, x1, x2)

inst_3406:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e800003; 
   valaddr_reg:x3; val_offset:6812*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6812*FLEN/8, x4, x1, x2)

inst_3407:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e800007; 
   valaddr_reg:x3; val_offset:6814*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6814*FLEN/8, x4, x1, x2)

inst_3408:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e80000f; 
   valaddr_reg:x3; val_offset:6816*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6816*FLEN/8, x4, x1, x2)

inst_3409:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e80001f; 
   valaddr_reg:x3; val_offset:6818*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6818*FLEN/8, x4, x1, x2)

inst_3410:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e80003f; 
   valaddr_reg:x3; val_offset:6820*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6820*FLEN/8, x4, x1, x2)

inst_3411:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e80007f; 
   valaddr_reg:x3; val_offset:6822*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6822*FLEN/8, x4, x1, x2)

inst_3412:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e8000ff; 
   valaddr_reg:x3; val_offset:6824*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6824*FLEN/8, x4, x1, x2)

inst_3413:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e8001ff; 
   valaddr_reg:x3; val_offset:6826*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6826*FLEN/8, x4, x1, x2)

inst_3414:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e8003ff; 
   valaddr_reg:x3; val_offset:6828*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6828*FLEN/8, x4, x1, x2)

inst_3415:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e8007ff; 
   valaddr_reg:x3; val_offset:6830*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6830*FLEN/8, x4, x1, x2)

inst_3416:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e800fff; 
   valaddr_reg:x3; val_offset:6832*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6832*FLEN/8, x4, x1, x2)

inst_3417:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e801fff; 
   valaddr_reg:x3; val_offset:6834*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6834*FLEN/8, x4, x1, x2)

inst_3418:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e803fff; 
   valaddr_reg:x3; val_offset:6836*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6836*FLEN/8, x4, x1, x2)

inst_3419:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e807fff; 
   valaddr_reg:x3; val_offset:6838*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6838*FLEN/8, x4, x1, x2)

inst_3420:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e80ffff; 
   valaddr_reg:x3; val_offset:6840*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6840*FLEN/8, x4, x1, x2)

inst_3421:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e81ffff; 
   valaddr_reg:x3; val_offset:6842*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6842*FLEN/8, x4, x1, x2)

inst_3422:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e83ffff; 
   valaddr_reg:x3; val_offset:6844*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6844*FLEN/8, x4, x1, x2)

inst_3423:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e87ffff; 
   valaddr_reg:x3; val_offset:6846*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6846*FLEN/8, x4, x1, x2)

inst_3424:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e8fffff; 
   valaddr_reg:x3; val_offset:6848*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6848*FLEN/8, x4, x1, x2)

inst_3425:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7e9fffff; 
   valaddr_reg:x3; val_offset:6850*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6850*FLEN/8, x4, x1, x2)

inst_3426:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7ebfffff; 
   valaddr_reg:x3; val_offset:6852*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6852*FLEN/8, x4, x1, x2)

inst_3427:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7ec00000; 
   valaddr_reg:x3; val_offset:6854*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6854*FLEN/8, x4, x1, x2)

inst_3428:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7ee00000; 
   valaddr_reg:x3; val_offset:6856*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6856*FLEN/8, x4, x1, x2)

inst_3429:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7ef00000; 
   valaddr_reg:x3; val_offset:6858*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6858*FLEN/8, x4, x1, x2)

inst_3430:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7ef80000; 
   valaddr_reg:x3; val_offset:6860*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6860*FLEN/8, x4, x1, x2)

inst_3431:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7efc0000; 
   valaddr_reg:x3; val_offset:6862*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6862*FLEN/8, x4, x1, x2)

inst_3432:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7efe0000; 
   valaddr_reg:x3; val_offset:6864*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6864*FLEN/8, x4, x1, x2)

inst_3433:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7eff0000; 
   valaddr_reg:x3; val_offset:6866*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6866*FLEN/8, x4, x1, x2)

inst_3434:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7eff8000; 
   valaddr_reg:x3; val_offset:6868*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6868*FLEN/8, x4, x1, x2)

inst_3435:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7effc000; 
   valaddr_reg:x3; val_offset:6870*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6870*FLEN/8, x4, x1, x2)

inst_3436:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7effe000; 
   valaddr_reg:x3; val_offset:6872*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6872*FLEN/8, x4, x1, x2)

inst_3437:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7efff000; 
   valaddr_reg:x3; val_offset:6874*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6874*FLEN/8, x4, x1, x2)

inst_3438:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7efff800; 
   valaddr_reg:x3; val_offset:6876*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6876*FLEN/8, x4, x1, x2)

inst_3439:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7efffc00; 
   valaddr_reg:x3; val_offset:6878*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6878*FLEN/8, x4, x1, x2)

inst_3440:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7efffe00; 
   valaddr_reg:x3; val_offset:6880*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6880*FLEN/8, x4, x1, x2)

inst_3441:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7effff00; 
   valaddr_reg:x3; val_offset:6882*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6882*FLEN/8, x4, x1, x2)

inst_3442:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7effff80; 
   valaddr_reg:x3; val_offset:6884*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6884*FLEN/8, x4, x1, x2)

inst_3443:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7effffc0; 
   valaddr_reg:x3; val_offset:6886*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6886*FLEN/8, x4, x1, x2)

inst_3444:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7effffe0; 
   valaddr_reg:x3; val_offset:6888*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6888*FLEN/8, x4, x1, x2)

inst_3445:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7efffff0; 
   valaddr_reg:x3; val_offset:6890*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6890*FLEN/8, x4, x1, x2)

inst_3446:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7efffff8; 
   valaddr_reg:x3; val_offset:6892*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6892*FLEN/8, x4, x1, x2)

inst_3447:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7efffffc; 
   valaddr_reg:x3; val_offset:6894*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6894*FLEN/8, x4, x1, x2)

inst_3448:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7efffffe; 
   valaddr_reg:x3; val_offset:6896*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6896*FLEN/8, x4, x1, x2)

inst_3449:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7effffff; 
   valaddr_reg:x3; val_offset:6898*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6898*FLEN/8, x4, x1, x2)

inst_3450:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f000000; 
   valaddr_reg:x3; val_offset:6900*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6900*FLEN/8, x4, x1, x2)

inst_3451:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f000001; 
   valaddr_reg:x3; val_offset:6902*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6902*FLEN/8, x4, x1, x2)

inst_3452:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f000003; 
   valaddr_reg:x3; val_offset:6904*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6904*FLEN/8, x4, x1, x2)

inst_3453:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f000007; 
   valaddr_reg:x3; val_offset:6906*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6906*FLEN/8, x4, x1, x2)

inst_3454:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f00000f; 
   valaddr_reg:x3; val_offset:6908*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6908*FLEN/8, x4, x1, x2)

inst_3455:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f00001f; 
   valaddr_reg:x3; val_offset:6910*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6910*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_28)

inst_3456:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f00003f; 
   valaddr_reg:x3; val_offset:6912*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6912*FLEN/8, x4, x1, x2)

inst_3457:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f00007f; 
   valaddr_reg:x3; val_offset:6914*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6914*FLEN/8, x4, x1, x2)

inst_3458:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f0000ff; 
   valaddr_reg:x3; val_offset:6916*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6916*FLEN/8, x4, x1, x2)

inst_3459:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f0001ff; 
   valaddr_reg:x3; val_offset:6918*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6918*FLEN/8, x4, x1, x2)

inst_3460:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f0003ff; 
   valaddr_reg:x3; val_offset:6920*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6920*FLEN/8, x4, x1, x2)

inst_3461:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f0007ff; 
   valaddr_reg:x3; val_offset:6922*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6922*FLEN/8, x4, x1, x2)

inst_3462:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f000fff; 
   valaddr_reg:x3; val_offset:6924*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6924*FLEN/8, x4, x1, x2)

inst_3463:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f001fff; 
   valaddr_reg:x3; val_offset:6926*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6926*FLEN/8, x4, x1, x2)

inst_3464:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f003fff; 
   valaddr_reg:x3; val_offset:6928*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6928*FLEN/8, x4, x1, x2)

inst_3465:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f007fff; 
   valaddr_reg:x3; val_offset:6930*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6930*FLEN/8, x4, x1, x2)

inst_3466:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f00ffff; 
   valaddr_reg:x3; val_offset:6932*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6932*FLEN/8, x4, x1, x2)

inst_3467:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f01ffff; 
   valaddr_reg:x3; val_offset:6934*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6934*FLEN/8, x4, x1, x2)

inst_3468:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f03ffff; 
   valaddr_reg:x3; val_offset:6936*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6936*FLEN/8, x4, x1, x2)

inst_3469:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f07ffff; 
   valaddr_reg:x3; val_offset:6938*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6938*FLEN/8, x4, x1, x2)

inst_3470:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f0fffff; 
   valaddr_reg:x3; val_offset:6940*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6940*FLEN/8, x4, x1, x2)

inst_3471:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f199999; 
   valaddr_reg:x3; val_offset:6942*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6942*FLEN/8, x4, x1, x2)

inst_3472:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f1fffff; 
   valaddr_reg:x3; val_offset:6944*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6944*FLEN/8, x4, x1, x2)

inst_3473:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f249249; 
   valaddr_reg:x3; val_offset:6946*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6946*FLEN/8, x4, x1, x2)

inst_3474:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f333333; 
   valaddr_reg:x3; val_offset:6948*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6948*FLEN/8, x4, x1, x2)

inst_3475:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f36db6d; 
   valaddr_reg:x3; val_offset:6950*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6950*FLEN/8, x4, x1, x2)

inst_3476:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f3bbbbb; 
   valaddr_reg:x3; val_offset:6952*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6952*FLEN/8, x4, x1, x2)

inst_3477:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f3fffff; 
   valaddr_reg:x3; val_offset:6954*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6954*FLEN/8, x4, x1, x2)

inst_3478:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f400000; 
   valaddr_reg:x3; val_offset:6956*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6956*FLEN/8, x4, x1, x2)

inst_3479:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f444444; 
   valaddr_reg:x3; val_offset:6958*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6958*FLEN/8, x4, x1, x2)

inst_3480:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f4ccccc; 
   valaddr_reg:x3; val_offset:6960*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6960*FLEN/8, x4, x1, x2)

inst_3481:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f5b6db6; 
   valaddr_reg:x3; val_offset:6962*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6962*FLEN/8, x4, x1, x2)

inst_3482:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f600000; 
   valaddr_reg:x3; val_offset:6964*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6964*FLEN/8, x4, x1, x2)

inst_3483:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f666666; 
   valaddr_reg:x3; val_offset:6966*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6966*FLEN/8, x4, x1, x2)

inst_3484:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f6db6db; 
   valaddr_reg:x3; val_offset:6968*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6968*FLEN/8, x4, x1, x2)

inst_3485:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f700000; 
   valaddr_reg:x3; val_offset:6970*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6970*FLEN/8, x4, x1, x2)

inst_3486:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f780000; 
   valaddr_reg:x3; val_offset:6972*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6972*FLEN/8, x4, x1, x2)

inst_3487:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f7c0000; 
   valaddr_reg:x3; val_offset:6974*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6974*FLEN/8, x4, x1, x2)

inst_3488:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f7e0000; 
   valaddr_reg:x3; val_offset:6976*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6976*FLEN/8, x4, x1, x2)

inst_3489:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f7f0000; 
   valaddr_reg:x3; val_offset:6978*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6978*FLEN/8, x4, x1, x2)

inst_3490:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f7f8000; 
   valaddr_reg:x3; val_offset:6980*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6980*FLEN/8, x4, x1, x2)

inst_3491:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f7fc000; 
   valaddr_reg:x3; val_offset:6982*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6982*FLEN/8, x4, x1, x2)

inst_3492:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f7fe000; 
   valaddr_reg:x3; val_offset:6984*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6984*FLEN/8, x4, x1, x2)

inst_3493:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f7ff000; 
   valaddr_reg:x3; val_offset:6986*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6986*FLEN/8, x4, x1, x2)

inst_3494:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f7ff800; 
   valaddr_reg:x3; val_offset:6988*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6988*FLEN/8, x4, x1, x2)

inst_3495:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f7ffc00; 
   valaddr_reg:x3; val_offset:6990*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6990*FLEN/8, x4, x1, x2)

inst_3496:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f7ffe00; 
   valaddr_reg:x3; val_offset:6992*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6992*FLEN/8, x4, x1, x2)

inst_3497:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f7fff00; 
   valaddr_reg:x3; val_offset:6994*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6994*FLEN/8, x4, x1, x2)

inst_3498:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f7fff80; 
   valaddr_reg:x3; val_offset:6996*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6996*FLEN/8, x4, x1, x2)

inst_3499:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f7fffc0; 
   valaddr_reg:x3; val_offset:6998*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 6998*FLEN/8, x4, x1, x2)

inst_3500:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f7fffe0; 
   valaddr_reg:x3; val_offset:7000*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7000*FLEN/8, x4, x1, x2)

inst_3501:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f7ffff0; 
   valaddr_reg:x3; val_offset:7002*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7002*FLEN/8, x4, x1, x2)

inst_3502:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f7ffff8; 
   valaddr_reg:x3; val_offset:7004*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7004*FLEN/8, x4, x1, x2)

inst_3503:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f7ffffc; 
   valaddr_reg:x3; val_offset:7006*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7006*FLEN/8, x4, x1, x2)

inst_3504:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f7ffffe; 
   valaddr_reg:x3; val_offset:7008*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7008*FLEN/8, x4, x1, x2)

inst_3505:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f7fffff; op2val:0x7f7fffff; 
   valaddr_reg:x3; val_offset:7010*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7010*FLEN/8, x4, x1, x2)

inst_3506:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:7012*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7012*FLEN/8, x4, x1, x2)

inst_3507:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:7014*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7014*FLEN/8, x4, x1, x2)

inst_3508:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80000003; 
   valaddr_reg:x3; val_offset:7016*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7016*FLEN/8, x4, x1, x2)

inst_3509:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80000007; 
   valaddr_reg:x3; val_offset:7018*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7018*FLEN/8, x4, x1, x2)

inst_3510:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x8000000f; 
   valaddr_reg:x3; val_offset:7020*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7020*FLEN/8, x4, x1, x2)

inst_3511:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x8000001f; 
   valaddr_reg:x3; val_offset:7022*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7022*FLEN/8, x4, x1, x2)

inst_3512:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x8000003f; 
   valaddr_reg:x3; val_offset:7024*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7024*FLEN/8, x4, x1, x2)

inst_3513:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x8000007f; 
   valaddr_reg:x3; val_offset:7026*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7026*FLEN/8, x4, x1, x2)

inst_3514:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x800000ff; 
   valaddr_reg:x3; val_offset:7028*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7028*FLEN/8, x4, x1, x2)

inst_3515:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x800001ff; 
   valaddr_reg:x3; val_offset:7030*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7030*FLEN/8, x4, x1, x2)

inst_3516:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x800003ff; 
   valaddr_reg:x3; val_offset:7032*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7032*FLEN/8, x4, x1, x2)

inst_3517:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x800007ff; 
   valaddr_reg:x3; val_offset:7034*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7034*FLEN/8, x4, x1, x2)

inst_3518:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80000fff; 
   valaddr_reg:x3; val_offset:7036*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7036*FLEN/8, x4, x1, x2)

inst_3519:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80001fff; 
   valaddr_reg:x3; val_offset:7038*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7038*FLEN/8, x4, x1, x2)

inst_3520:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80003fff; 
   valaddr_reg:x3; val_offset:7040*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7040*FLEN/8, x4, x1, x2)

inst_3521:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80007fff; 
   valaddr_reg:x3; val_offset:7042*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7042*FLEN/8, x4, x1, x2)

inst_3522:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x8000ffff; 
   valaddr_reg:x3; val_offset:7044*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7044*FLEN/8, x4, x1, x2)

inst_3523:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x8001ffff; 
   valaddr_reg:x3; val_offset:7046*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7046*FLEN/8, x4, x1, x2)

inst_3524:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x8003ffff; 
   valaddr_reg:x3; val_offset:7048*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7048*FLEN/8, x4, x1, x2)

inst_3525:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x8007ffff; 
   valaddr_reg:x3; val_offset:7050*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7050*FLEN/8, x4, x1, x2)

inst_3526:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x800fffff; 
   valaddr_reg:x3; val_offset:7052*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7052*FLEN/8, x4, x1, x2)

inst_3527:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80199999; 
   valaddr_reg:x3; val_offset:7054*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7054*FLEN/8, x4, x1, x2)

inst_3528:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x801fffff; 
   valaddr_reg:x3; val_offset:7056*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7056*FLEN/8, x4, x1, x2)

inst_3529:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80249249; 
   valaddr_reg:x3; val_offset:7058*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7058*FLEN/8, x4, x1, x2)

inst_3530:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80333333; 
   valaddr_reg:x3; val_offset:7060*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7060*FLEN/8, x4, x1, x2)

inst_3531:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x8036db6d; 
   valaddr_reg:x3; val_offset:7062*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7062*FLEN/8, x4, x1, x2)

inst_3532:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x803bbbbb; 
   valaddr_reg:x3; val_offset:7064*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7064*FLEN/8, x4, x1, x2)

inst_3533:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x803fffff; 
   valaddr_reg:x3; val_offset:7066*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7066*FLEN/8, x4, x1, x2)

inst_3534:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80400000; 
   valaddr_reg:x3; val_offset:7068*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7068*FLEN/8, x4, x1, x2)

inst_3535:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80444444; 
   valaddr_reg:x3; val_offset:7070*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7070*FLEN/8, x4, x1, x2)

inst_3536:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x804ccccc; 
   valaddr_reg:x3; val_offset:7072*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7072*FLEN/8, x4, x1, x2)

inst_3537:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x805b6db6; 
   valaddr_reg:x3; val_offset:7074*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7074*FLEN/8, x4, x1, x2)

inst_3538:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80600000; 
   valaddr_reg:x3; val_offset:7076*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7076*FLEN/8, x4, x1, x2)

inst_3539:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80666666; 
   valaddr_reg:x3; val_offset:7078*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7078*FLEN/8, x4, x1, x2)

inst_3540:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x806db6db; 
   valaddr_reg:x3; val_offset:7080*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7080*FLEN/8, x4, x1, x2)

inst_3541:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80700000; 
   valaddr_reg:x3; val_offset:7082*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7082*FLEN/8, x4, x1, x2)

inst_3542:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80780000; 
   valaddr_reg:x3; val_offset:7084*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7084*FLEN/8, x4, x1, x2)

inst_3543:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x807c0000; 
   valaddr_reg:x3; val_offset:7086*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7086*FLEN/8, x4, x1, x2)

inst_3544:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x807e0000; 
   valaddr_reg:x3; val_offset:7088*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7088*FLEN/8, x4, x1, x2)

inst_3545:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x807f0000; 
   valaddr_reg:x3; val_offset:7090*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7090*FLEN/8, x4, x1, x2)

inst_3546:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x807f8000; 
   valaddr_reg:x3; val_offset:7092*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7092*FLEN/8, x4, x1, x2)

inst_3547:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x807fc000; 
   valaddr_reg:x3; val_offset:7094*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7094*FLEN/8, x4, x1, x2)

inst_3548:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x807fe000; 
   valaddr_reg:x3; val_offset:7096*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7096*FLEN/8, x4, x1, x2)

inst_3549:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x807ff000; 
   valaddr_reg:x3; val_offset:7098*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7098*FLEN/8, x4, x1, x2)

inst_3550:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x807ff800; 
   valaddr_reg:x3; val_offset:7100*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7100*FLEN/8, x4, x1, x2)

inst_3551:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x807ffc00; 
   valaddr_reg:x3; val_offset:7102*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7102*FLEN/8, x4, x1, x2)

inst_3552:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x807ffe00; 
   valaddr_reg:x3; val_offset:7104*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7104*FLEN/8, x4, x1, x2)

inst_3553:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x807fff00; 
   valaddr_reg:x3; val_offset:7106*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7106*FLEN/8, x4, x1, x2)

inst_3554:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x807fff80; 
   valaddr_reg:x3; val_offset:7108*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7108*FLEN/8, x4, x1, x2)

inst_3555:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x807fffc0; 
   valaddr_reg:x3; val_offset:7110*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7110*FLEN/8, x4, x1, x2)

inst_3556:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x807fffe0; 
   valaddr_reg:x3; val_offset:7112*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7112*FLEN/8, x4, x1, x2)

inst_3557:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x807ffff0; 
   valaddr_reg:x3; val_offset:7114*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7114*FLEN/8, x4, x1, x2)

inst_3558:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x807ffff8; 
   valaddr_reg:x3; val_offset:7116*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7116*FLEN/8, x4, x1, x2)

inst_3559:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x807ffffc; 
   valaddr_reg:x3; val_offset:7118*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7118*FLEN/8, x4, x1, x2)

inst_3560:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x807ffffe; 
   valaddr_reg:x3; val_offset:7120*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7120*FLEN/8, x4, x1, x2)

inst_3561:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:7122*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7122*FLEN/8, x4, x1, x2)

inst_3562:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:7124*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7124*FLEN/8, x4, x1, x2)

inst_3563:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80800001; 
   valaddr_reg:x3; val_offset:7126*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7126*FLEN/8, x4, x1, x2)

inst_3564:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80800003; 
   valaddr_reg:x3; val_offset:7128*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7128*FLEN/8, x4, x1, x2)

inst_3565:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80800007; 
   valaddr_reg:x3; val_offset:7130*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7130*FLEN/8, x4, x1, x2)

inst_3566:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x8080000f; 
   valaddr_reg:x3; val_offset:7132*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7132*FLEN/8, x4, x1, x2)

inst_3567:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x8080001f; 
   valaddr_reg:x3; val_offset:7134*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7134*FLEN/8, x4, x1, x2)

inst_3568:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x8080003f; 
   valaddr_reg:x3; val_offset:7136*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7136*FLEN/8, x4, x1, x2)

inst_3569:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x8080007f; 
   valaddr_reg:x3; val_offset:7138*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7138*FLEN/8, x4, x1, x2)

inst_3570:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x808000ff; 
   valaddr_reg:x3; val_offset:7140*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7140*FLEN/8, x4, x1, x2)

inst_3571:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x808001ff; 
   valaddr_reg:x3; val_offset:7142*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7142*FLEN/8, x4, x1, x2)

inst_3572:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x808003ff; 
   valaddr_reg:x3; val_offset:7144*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7144*FLEN/8, x4, x1, x2)

inst_3573:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x808007ff; 
   valaddr_reg:x3; val_offset:7146*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7146*FLEN/8, x4, x1, x2)

inst_3574:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80800fff; 
   valaddr_reg:x3; val_offset:7148*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7148*FLEN/8, x4, x1, x2)

inst_3575:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80801fff; 
   valaddr_reg:x3; val_offset:7150*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7150*FLEN/8, x4, x1, x2)

inst_3576:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80803fff; 
   valaddr_reg:x3; val_offset:7152*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7152*FLEN/8, x4, x1, x2)

inst_3577:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80807fff; 
   valaddr_reg:x3; val_offset:7154*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7154*FLEN/8, x4, x1, x2)

inst_3578:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x8080ffff; 
   valaddr_reg:x3; val_offset:7156*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7156*FLEN/8, x4, x1, x2)

inst_3579:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x8081ffff; 
   valaddr_reg:x3; val_offset:7158*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7158*FLEN/8, x4, x1, x2)

inst_3580:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x8083ffff; 
   valaddr_reg:x3; val_offset:7160*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7160*FLEN/8, x4, x1, x2)

inst_3581:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x8087ffff; 
   valaddr_reg:x3; val_offset:7162*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7162*FLEN/8, x4, x1, x2)

inst_3582:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x808fffff; 
   valaddr_reg:x3; val_offset:7164*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7164*FLEN/8, x4, x1, x2)

inst_3583:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x809fffff; 
   valaddr_reg:x3; val_offset:7166*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7166*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_29)

inst_3584:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80bfffff; 
   valaddr_reg:x3; val_offset:7168*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7168*FLEN/8, x4, x1, x2)

inst_3585:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80c00000; 
   valaddr_reg:x3; val_offset:7170*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7170*FLEN/8, x4, x1, x2)

inst_3586:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80e00000; 
   valaddr_reg:x3; val_offset:7172*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7172*FLEN/8, x4, x1, x2)

inst_3587:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80f00000; 
   valaddr_reg:x3; val_offset:7174*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7174*FLEN/8, x4, x1, x2)

inst_3588:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80f80000; 
   valaddr_reg:x3; val_offset:7176*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7176*FLEN/8, x4, x1, x2)

inst_3589:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80fc0000; 
   valaddr_reg:x3; val_offset:7178*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7178*FLEN/8, x4, x1, x2)

inst_3590:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80fe0000; 
   valaddr_reg:x3; val_offset:7180*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7180*FLEN/8, x4, x1, x2)

inst_3591:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80ff0000; 
   valaddr_reg:x3; val_offset:7182*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7182*FLEN/8, x4, x1, x2)

inst_3592:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80ff8000; 
   valaddr_reg:x3; val_offset:7184*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7184*FLEN/8, x4, x1, x2)

inst_3593:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80ffc000; 
   valaddr_reg:x3; val_offset:7186*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7186*FLEN/8, x4, x1, x2)

inst_3594:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80ffe000; 
   valaddr_reg:x3; val_offset:7188*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7188*FLEN/8, x4, x1, x2)

inst_3595:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80fff000; 
   valaddr_reg:x3; val_offset:7190*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7190*FLEN/8, x4, x1, x2)

inst_3596:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80fff800; 
   valaddr_reg:x3; val_offset:7192*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7192*FLEN/8, x4, x1, x2)

inst_3597:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80fffc00; 
   valaddr_reg:x3; val_offset:7194*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7194*FLEN/8, x4, x1, x2)

inst_3598:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80fffe00; 
   valaddr_reg:x3; val_offset:7196*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7196*FLEN/8, x4, x1, x2)

inst_3599:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80ffff00; 
   valaddr_reg:x3; val_offset:7198*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7198*FLEN/8, x4, x1, x2)

inst_3600:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80ffff80; 
   valaddr_reg:x3; val_offset:7200*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7200*FLEN/8, x4, x1, x2)

inst_3601:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80ffffc0; 
   valaddr_reg:x3; val_offset:7202*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7202*FLEN/8, x4, x1, x2)

inst_3602:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80ffffe0; 
   valaddr_reg:x3; val_offset:7204*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7204*FLEN/8, x4, x1, x2)

inst_3603:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80fffff0; 
   valaddr_reg:x3; val_offset:7206*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7206*FLEN/8, x4, x1, x2)

inst_3604:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80fffff8; 
   valaddr_reg:x3; val_offset:7208*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7208*FLEN/8, x4, x1, x2)

inst_3605:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80fffffc; 
   valaddr_reg:x3; val_offset:7210*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7210*FLEN/8, x4, x1, x2)

inst_3606:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80fffffe; 
   valaddr_reg:x3; val_offset:7212*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7212*FLEN/8, x4, x1, x2)

inst_3607:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x80ffffff; 
   valaddr_reg:x3; val_offset:7214*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7214*FLEN/8, x4, x1, x2)

inst_3608:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81000000; 
   valaddr_reg:x3; val_offset:7216*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7216*FLEN/8, x4, x1, x2)

inst_3609:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81000001; 
   valaddr_reg:x3; val_offset:7218*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7218*FLEN/8, x4, x1, x2)

inst_3610:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81000003; 
   valaddr_reg:x3; val_offset:7220*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7220*FLEN/8, x4, x1, x2)

inst_3611:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81000007; 
   valaddr_reg:x3; val_offset:7222*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7222*FLEN/8, x4, x1, x2)

inst_3612:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x8100000f; 
   valaddr_reg:x3; val_offset:7224*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7224*FLEN/8, x4, x1, x2)

inst_3613:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x8100001f; 
   valaddr_reg:x3; val_offset:7226*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7226*FLEN/8, x4, x1, x2)

inst_3614:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x8100003f; 
   valaddr_reg:x3; val_offset:7228*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7228*FLEN/8, x4, x1, x2)

inst_3615:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x8100007f; 
   valaddr_reg:x3; val_offset:7230*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7230*FLEN/8, x4, x1, x2)

inst_3616:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x810000ff; 
   valaddr_reg:x3; val_offset:7232*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7232*FLEN/8, x4, x1, x2)

inst_3617:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x810001ff; 
   valaddr_reg:x3; val_offset:7234*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7234*FLEN/8, x4, x1, x2)

inst_3618:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x810003ff; 
   valaddr_reg:x3; val_offset:7236*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7236*FLEN/8, x4, x1, x2)

inst_3619:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x810007ff; 
   valaddr_reg:x3; val_offset:7238*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7238*FLEN/8, x4, x1, x2)

inst_3620:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81000fff; 
   valaddr_reg:x3; val_offset:7240*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7240*FLEN/8, x4, x1, x2)

inst_3621:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81001fff; 
   valaddr_reg:x3; val_offset:7242*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7242*FLEN/8, x4, x1, x2)

inst_3622:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81003fff; 
   valaddr_reg:x3; val_offset:7244*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7244*FLEN/8, x4, x1, x2)

inst_3623:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81007fff; 
   valaddr_reg:x3; val_offset:7246*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7246*FLEN/8, x4, x1, x2)

inst_3624:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x8100ffff; 
   valaddr_reg:x3; val_offset:7248*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7248*FLEN/8, x4, x1, x2)

inst_3625:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x8101ffff; 
   valaddr_reg:x3; val_offset:7250*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7250*FLEN/8, x4, x1, x2)

inst_3626:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x8103ffff; 
   valaddr_reg:x3; val_offset:7252*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7252*FLEN/8, x4, x1, x2)

inst_3627:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x8107ffff; 
   valaddr_reg:x3; val_offset:7254*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7254*FLEN/8, x4, x1, x2)

inst_3628:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x810fffff; 
   valaddr_reg:x3; val_offset:7256*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7256*FLEN/8, x4, x1, x2)

inst_3629:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x811fffff; 
   valaddr_reg:x3; val_offset:7258*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7258*FLEN/8, x4, x1, x2)

inst_3630:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x813fffff; 
   valaddr_reg:x3; val_offset:7260*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7260*FLEN/8, x4, x1, x2)

inst_3631:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81400000; 
   valaddr_reg:x3; val_offset:7262*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7262*FLEN/8, x4, x1, x2)

inst_3632:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81600000; 
   valaddr_reg:x3; val_offset:7264*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7264*FLEN/8, x4, x1, x2)

inst_3633:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81700000; 
   valaddr_reg:x3; val_offset:7266*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7266*FLEN/8, x4, x1, x2)

inst_3634:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81780000; 
   valaddr_reg:x3; val_offset:7268*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7268*FLEN/8, x4, x1, x2)

inst_3635:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x817c0000; 
   valaddr_reg:x3; val_offset:7270*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7270*FLEN/8, x4, x1, x2)

inst_3636:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x817e0000; 
   valaddr_reg:x3; val_offset:7272*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7272*FLEN/8, x4, x1, x2)

inst_3637:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x817f0000; 
   valaddr_reg:x3; val_offset:7274*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7274*FLEN/8, x4, x1, x2)

inst_3638:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x817f8000; 
   valaddr_reg:x3; val_offset:7276*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7276*FLEN/8, x4, x1, x2)

inst_3639:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x817fc000; 
   valaddr_reg:x3; val_offset:7278*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7278*FLEN/8, x4, x1, x2)

inst_3640:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x817fe000; 
   valaddr_reg:x3; val_offset:7280*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7280*FLEN/8, x4, x1, x2)

inst_3641:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x817ff000; 
   valaddr_reg:x3; val_offset:7282*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7282*FLEN/8, x4, x1, x2)

inst_3642:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x817ff800; 
   valaddr_reg:x3; val_offset:7284*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7284*FLEN/8, x4, x1, x2)

inst_3643:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x817ffc00; 
   valaddr_reg:x3; val_offset:7286*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7286*FLEN/8, x4, x1, x2)

inst_3644:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x817ffe00; 
   valaddr_reg:x3; val_offset:7288*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7288*FLEN/8, x4, x1, x2)

inst_3645:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x817fff00; 
   valaddr_reg:x3; val_offset:7290*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7290*FLEN/8, x4, x1, x2)

inst_3646:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x817fff80; 
   valaddr_reg:x3; val_offset:7292*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7292*FLEN/8, x4, x1, x2)

inst_3647:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x817fffc0; 
   valaddr_reg:x3; val_offset:7294*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7294*FLEN/8, x4, x1, x2)

inst_3648:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x817fffe0; 
   valaddr_reg:x3; val_offset:7296*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7296*FLEN/8, x4, x1, x2)

inst_3649:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x817ffff0; 
   valaddr_reg:x3; val_offset:7298*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7298*FLEN/8, x4, x1, x2)

inst_3650:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x817ffff8; 
   valaddr_reg:x3; val_offset:7300*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7300*FLEN/8, x4, x1, x2)

inst_3651:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x817ffffc; 
   valaddr_reg:x3; val_offset:7302*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7302*FLEN/8, x4, x1, x2)

inst_3652:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x817ffffe; 
   valaddr_reg:x3; val_offset:7304*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7304*FLEN/8, x4, x1, x2)

inst_3653:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x817fffff; 
   valaddr_reg:x3; val_offset:7306*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7306*FLEN/8, x4, x1, x2)

inst_3654:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81800000; 
   valaddr_reg:x3; val_offset:7308*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7308*FLEN/8, x4, x1, x2)

inst_3655:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81800001; 
   valaddr_reg:x3; val_offset:7310*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7310*FLEN/8, x4, x1, x2)

inst_3656:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81800003; 
   valaddr_reg:x3; val_offset:7312*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7312*FLEN/8, x4, x1, x2)

inst_3657:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81800007; 
   valaddr_reg:x3; val_offset:7314*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7314*FLEN/8, x4, x1, x2)

inst_3658:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x8180000f; 
   valaddr_reg:x3; val_offset:7316*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7316*FLEN/8, x4, x1, x2)

inst_3659:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x8180001f; 
   valaddr_reg:x3; val_offset:7318*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7318*FLEN/8, x4, x1, x2)

inst_3660:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x8180003f; 
   valaddr_reg:x3; val_offset:7320*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7320*FLEN/8, x4, x1, x2)

inst_3661:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x8180007f; 
   valaddr_reg:x3; val_offset:7322*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7322*FLEN/8, x4, x1, x2)

inst_3662:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x818000ff; 
   valaddr_reg:x3; val_offset:7324*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7324*FLEN/8, x4, x1, x2)

inst_3663:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x818001ff; 
   valaddr_reg:x3; val_offset:7326*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7326*FLEN/8, x4, x1, x2)

inst_3664:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x818003ff; 
   valaddr_reg:x3; val_offset:7328*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7328*FLEN/8, x4, x1, x2)

inst_3665:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x818007ff; 
   valaddr_reg:x3; val_offset:7330*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7330*FLEN/8, x4, x1, x2)

inst_3666:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81800fff; 
   valaddr_reg:x3; val_offset:7332*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7332*FLEN/8, x4, x1, x2)

inst_3667:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81801fff; 
   valaddr_reg:x3; val_offset:7334*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7334*FLEN/8, x4, x1, x2)

inst_3668:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81803fff; 
   valaddr_reg:x3; val_offset:7336*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7336*FLEN/8, x4, x1, x2)

inst_3669:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81807fff; 
   valaddr_reg:x3; val_offset:7338*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7338*FLEN/8, x4, x1, x2)

inst_3670:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x8180ffff; 
   valaddr_reg:x3; val_offset:7340*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7340*FLEN/8, x4, x1, x2)

inst_3671:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x8181ffff; 
   valaddr_reg:x3; val_offset:7342*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7342*FLEN/8, x4, x1, x2)

inst_3672:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x8183ffff; 
   valaddr_reg:x3; val_offset:7344*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7344*FLEN/8, x4, x1, x2)

inst_3673:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x8187ffff; 
   valaddr_reg:x3; val_offset:7346*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7346*FLEN/8, x4, x1, x2)

inst_3674:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x818fffff; 
   valaddr_reg:x3; val_offset:7348*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7348*FLEN/8, x4, x1, x2)

inst_3675:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x819fffff; 
   valaddr_reg:x3; val_offset:7350*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7350*FLEN/8, x4, x1, x2)

inst_3676:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81bfffff; 
   valaddr_reg:x3; val_offset:7352*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7352*FLEN/8, x4, x1, x2)

inst_3677:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81c00000; 
   valaddr_reg:x3; val_offset:7354*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7354*FLEN/8, x4, x1, x2)

inst_3678:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81e00000; 
   valaddr_reg:x3; val_offset:7356*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7356*FLEN/8, x4, x1, x2)

inst_3679:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81f00000; 
   valaddr_reg:x3; val_offset:7358*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7358*FLEN/8, x4, x1, x2)

inst_3680:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81f80000; 
   valaddr_reg:x3; val_offset:7360*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7360*FLEN/8, x4, x1, x2)

inst_3681:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81fc0000; 
   valaddr_reg:x3; val_offset:7362*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7362*FLEN/8, x4, x1, x2)

inst_3682:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81fe0000; 
   valaddr_reg:x3; val_offset:7364*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7364*FLEN/8, x4, x1, x2)

inst_3683:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81ff0000; 
   valaddr_reg:x3; val_offset:7366*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7366*FLEN/8, x4, x1, x2)

inst_3684:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81ff8000; 
   valaddr_reg:x3; val_offset:7368*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7368*FLEN/8, x4, x1, x2)

inst_3685:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81ffc000; 
   valaddr_reg:x3; val_offset:7370*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7370*FLEN/8, x4, x1, x2)

inst_3686:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81ffe000; 
   valaddr_reg:x3; val_offset:7372*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7372*FLEN/8, x4, x1, x2)

inst_3687:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81fff000; 
   valaddr_reg:x3; val_offset:7374*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7374*FLEN/8, x4, x1, x2)

inst_3688:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81fff800; 
   valaddr_reg:x3; val_offset:7376*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7376*FLEN/8, x4, x1, x2)

inst_3689:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81fffc00; 
   valaddr_reg:x3; val_offset:7378*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7378*FLEN/8, x4, x1, x2)

inst_3690:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81fffe00; 
   valaddr_reg:x3; val_offset:7380*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7380*FLEN/8, x4, x1, x2)

inst_3691:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81ffff00; 
   valaddr_reg:x3; val_offset:7382*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7382*FLEN/8, x4, x1, x2)

inst_3692:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81ffff80; 
   valaddr_reg:x3; val_offset:7384*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7384*FLEN/8, x4, x1, x2)

inst_3693:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81ffffc0; 
   valaddr_reg:x3; val_offset:7386*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7386*FLEN/8, x4, x1, x2)

inst_3694:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81ffffe0; 
   valaddr_reg:x3; val_offset:7388*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7388*FLEN/8, x4, x1, x2)

inst_3695:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81fffff0; 
   valaddr_reg:x3; val_offset:7390*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7390*FLEN/8, x4, x1, x2)

inst_3696:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81fffff8; 
   valaddr_reg:x3; val_offset:7392*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7392*FLEN/8, x4, x1, x2)

inst_3697:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81fffffc; 
   valaddr_reg:x3; val_offset:7394*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7394*FLEN/8, x4, x1, x2)

inst_3698:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81fffffe; 
   valaddr_reg:x3; val_offset:7396*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7396*FLEN/8, x4, x1, x2)

inst_3699:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0x81ffffff; 
   valaddr_reg:x3; val_offset:7398*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7398*FLEN/8, x4, x1, x2)

inst_3700:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb3000000; 
   valaddr_reg:x3; val_offset:7400*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7400*FLEN/8, x4, x1, x2)

inst_3701:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb3000001; 
   valaddr_reg:x3; val_offset:7402*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7402*FLEN/8, x4, x1, x2)

inst_3702:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb3000003; 
   valaddr_reg:x3; val_offset:7404*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7404*FLEN/8, x4, x1, x2)

inst_3703:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb3000007; 
   valaddr_reg:x3; val_offset:7406*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7406*FLEN/8, x4, x1, x2)

inst_3704:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb300000f; 
   valaddr_reg:x3; val_offset:7408*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7408*FLEN/8, x4, x1, x2)

inst_3705:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb300001f; 
   valaddr_reg:x3; val_offset:7410*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7410*FLEN/8, x4, x1, x2)

inst_3706:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb300003f; 
   valaddr_reg:x3; val_offset:7412*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7412*FLEN/8, x4, x1, x2)

inst_3707:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb300007f; 
   valaddr_reg:x3; val_offset:7414*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7414*FLEN/8, x4, x1, x2)

inst_3708:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb30000ff; 
   valaddr_reg:x3; val_offset:7416*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7416*FLEN/8, x4, x1, x2)

inst_3709:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb30001ff; 
   valaddr_reg:x3; val_offset:7418*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7418*FLEN/8, x4, x1, x2)

inst_3710:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb30003ff; 
   valaddr_reg:x3; val_offset:7420*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7420*FLEN/8, x4, x1, x2)

inst_3711:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb30007ff; 
   valaddr_reg:x3; val_offset:7422*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7422*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_30)

inst_3712:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb3000fff; 
   valaddr_reg:x3; val_offset:7424*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7424*FLEN/8, x4, x1, x2)

inst_3713:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb3001fff; 
   valaddr_reg:x3; val_offset:7426*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7426*FLEN/8, x4, x1, x2)

inst_3714:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb3003fff; 
   valaddr_reg:x3; val_offset:7428*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7428*FLEN/8, x4, x1, x2)

inst_3715:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb3007fff; 
   valaddr_reg:x3; val_offset:7430*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7430*FLEN/8, x4, x1, x2)

inst_3716:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb300ffff; 
   valaddr_reg:x3; val_offset:7432*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7432*FLEN/8, x4, x1, x2)

inst_3717:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb301ffff; 
   valaddr_reg:x3; val_offset:7434*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7434*FLEN/8, x4, x1, x2)

inst_3718:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb303ffff; 
   valaddr_reg:x3; val_offset:7436*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7436*FLEN/8, x4, x1, x2)

inst_3719:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb307ffff; 
   valaddr_reg:x3; val_offset:7438*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7438*FLEN/8, x4, x1, x2)

inst_3720:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb30fffff; 
   valaddr_reg:x3; val_offset:7440*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7440*FLEN/8, x4, x1, x2)

inst_3721:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb31fffff; 
   valaddr_reg:x3; val_offset:7442*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7442*FLEN/8, x4, x1, x2)

inst_3722:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb33fffff; 
   valaddr_reg:x3; val_offset:7444*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7444*FLEN/8, x4, x1, x2)

inst_3723:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb3400000; 
   valaddr_reg:x3; val_offset:7446*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7446*FLEN/8, x4, x1, x2)

inst_3724:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb3600000; 
   valaddr_reg:x3; val_offset:7448*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7448*FLEN/8, x4, x1, x2)

inst_3725:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb3700000; 
   valaddr_reg:x3; val_offset:7450*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7450*FLEN/8, x4, x1, x2)

inst_3726:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb3780000; 
   valaddr_reg:x3; val_offset:7452*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7452*FLEN/8, x4, x1, x2)

inst_3727:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb37c0000; 
   valaddr_reg:x3; val_offset:7454*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7454*FLEN/8, x4, x1, x2)

inst_3728:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb37e0000; 
   valaddr_reg:x3; val_offset:7456*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7456*FLEN/8, x4, x1, x2)

inst_3729:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb37f0000; 
   valaddr_reg:x3; val_offset:7458*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7458*FLEN/8, x4, x1, x2)

inst_3730:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb37f8000; 
   valaddr_reg:x3; val_offset:7460*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7460*FLEN/8, x4, x1, x2)

inst_3731:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb37fc000; 
   valaddr_reg:x3; val_offset:7462*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7462*FLEN/8, x4, x1, x2)

inst_3732:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb37fe000; 
   valaddr_reg:x3; val_offset:7464*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7464*FLEN/8, x4, x1, x2)

inst_3733:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb37ff000; 
   valaddr_reg:x3; val_offset:7466*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7466*FLEN/8, x4, x1, x2)

inst_3734:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb37ff800; 
   valaddr_reg:x3; val_offset:7468*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7468*FLEN/8, x4, x1, x2)

inst_3735:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb37ffc00; 
   valaddr_reg:x3; val_offset:7470*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7470*FLEN/8, x4, x1, x2)

inst_3736:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb37ffe00; 
   valaddr_reg:x3; val_offset:7472*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7472*FLEN/8, x4, x1, x2)

inst_3737:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb37fff00; 
   valaddr_reg:x3; val_offset:7474*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7474*FLEN/8, x4, x1, x2)

inst_3738:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb37fff80; 
   valaddr_reg:x3; val_offset:7476*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7476*FLEN/8, x4, x1, x2)

inst_3739:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb37fffc0; 
   valaddr_reg:x3; val_offset:7478*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7478*FLEN/8, x4, x1, x2)

inst_3740:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb37fffe0; 
   valaddr_reg:x3; val_offset:7480*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7480*FLEN/8, x4, x1, x2)

inst_3741:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb37ffff0; 
   valaddr_reg:x3; val_offset:7482*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7482*FLEN/8, x4, x1, x2)

inst_3742:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb37ffff8; 
   valaddr_reg:x3; val_offset:7484*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7484*FLEN/8, x4, x1, x2)

inst_3743:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb37ffffc; 
   valaddr_reg:x3; val_offset:7486*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7486*FLEN/8, x4, x1, x2)

inst_3744:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb37ffffe; 
   valaddr_reg:x3; val_offset:7488*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7488*FLEN/8, x4, x1, x2)

inst_3745:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x66 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000000; op2val:0xb37fffff; 
   valaddr_reg:x3; val_offset:7490*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7490*FLEN/8, x4, x1, x2)

inst_3746:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:7492*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7492*FLEN/8, x4, x1, x2)

inst_3747:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:7494*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7494*FLEN/8, x4, x1, x2)

inst_3748:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80000003; 
   valaddr_reg:x3; val_offset:7496*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7496*FLEN/8, x4, x1, x2)

inst_3749:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80000007; 
   valaddr_reg:x3; val_offset:7498*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7498*FLEN/8, x4, x1, x2)

inst_3750:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x8000000f; 
   valaddr_reg:x3; val_offset:7500*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7500*FLEN/8, x4, x1, x2)

inst_3751:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x8000001f; 
   valaddr_reg:x3; val_offset:7502*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7502*FLEN/8, x4, x1, x2)

inst_3752:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x8000003f; 
   valaddr_reg:x3; val_offset:7504*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7504*FLEN/8, x4, x1, x2)

inst_3753:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x8000007f; 
   valaddr_reg:x3; val_offset:7506*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7506*FLEN/8, x4, x1, x2)

inst_3754:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x800000ff; 
   valaddr_reg:x3; val_offset:7508*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7508*FLEN/8, x4, x1, x2)

inst_3755:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x800001ff; 
   valaddr_reg:x3; val_offset:7510*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7510*FLEN/8, x4, x1, x2)

inst_3756:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x800003ff; 
   valaddr_reg:x3; val_offset:7512*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7512*FLEN/8, x4, x1, x2)

inst_3757:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x800007ff; 
   valaddr_reg:x3; val_offset:7514*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7514*FLEN/8, x4, x1, x2)

inst_3758:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80000fff; 
   valaddr_reg:x3; val_offset:7516*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7516*FLEN/8, x4, x1, x2)

inst_3759:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80001fff; 
   valaddr_reg:x3; val_offset:7518*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7518*FLEN/8, x4, x1, x2)

inst_3760:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80003fff; 
   valaddr_reg:x3; val_offset:7520*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7520*FLEN/8, x4, x1, x2)

inst_3761:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80007fff; 
   valaddr_reg:x3; val_offset:7522*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7522*FLEN/8, x4, x1, x2)

inst_3762:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x8000ffff; 
   valaddr_reg:x3; val_offset:7524*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7524*FLEN/8, x4, x1, x2)

inst_3763:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x8001ffff; 
   valaddr_reg:x3; val_offset:7526*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7526*FLEN/8, x4, x1, x2)

inst_3764:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x8003ffff; 
   valaddr_reg:x3; val_offset:7528*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7528*FLEN/8, x4, x1, x2)

inst_3765:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x8007ffff; 
   valaddr_reg:x3; val_offset:7530*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7530*FLEN/8, x4, x1, x2)

inst_3766:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x800fffff; 
   valaddr_reg:x3; val_offset:7532*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7532*FLEN/8, x4, x1, x2)

inst_3767:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80199999; 
   valaddr_reg:x3; val_offset:7534*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7534*FLEN/8, x4, x1, x2)

inst_3768:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x801fffff; 
   valaddr_reg:x3; val_offset:7536*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7536*FLEN/8, x4, x1, x2)

inst_3769:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80249249; 
   valaddr_reg:x3; val_offset:7538*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7538*FLEN/8, x4, x1, x2)

inst_3770:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80333333; 
   valaddr_reg:x3; val_offset:7540*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7540*FLEN/8, x4, x1, x2)

inst_3771:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x8036db6d; 
   valaddr_reg:x3; val_offset:7542*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7542*FLEN/8, x4, x1, x2)

inst_3772:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x803bbbbb; 
   valaddr_reg:x3; val_offset:7544*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7544*FLEN/8, x4, x1, x2)

inst_3773:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x803fffff; 
   valaddr_reg:x3; val_offset:7546*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7546*FLEN/8, x4, x1, x2)

inst_3774:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80400000; 
   valaddr_reg:x3; val_offset:7548*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7548*FLEN/8, x4, x1, x2)

inst_3775:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80444444; 
   valaddr_reg:x3; val_offset:7550*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7550*FLEN/8, x4, x1, x2)

inst_3776:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x804ccccc; 
   valaddr_reg:x3; val_offset:7552*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7552*FLEN/8, x4, x1, x2)

inst_3777:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x805b6db6; 
   valaddr_reg:x3; val_offset:7554*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7554*FLEN/8, x4, x1, x2)

inst_3778:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80600000; 
   valaddr_reg:x3; val_offset:7556*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7556*FLEN/8, x4, x1, x2)

inst_3779:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80666666; 
   valaddr_reg:x3; val_offset:7558*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7558*FLEN/8, x4, x1, x2)

inst_3780:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x806db6db; 
   valaddr_reg:x3; val_offset:7560*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7560*FLEN/8, x4, x1, x2)

inst_3781:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80700000; 
   valaddr_reg:x3; val_offset:7562*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7562*FLEN/8, x4, x1, x2)

inst_3782:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80780000; 
   valaddr_reg:x3; val_offset:7564*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7564*FLEN/8, x4, x1, x2)

inst_3783:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x807c0000; 
   valaddr_reg:x3; val_offset:7566*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7566*FLEN/8, x4, x1, x2)

inst_3784:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x807e0000; 
   valaddr_reg:x3; val_offset:7568*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7568*FLEN/8, x4, x1, x2)

inst_3785:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x807f0000; 
   valaddr_reg:x3; val_offset:7570*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7570*FLEN/8, x4, x1, x2)

inst_3786:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x807f8000; 
   valaddr_reg:x3; val_offset:7572*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7572*FLEN/8, x4, x1, x2)

inst_3787:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x807fc000; 
   valaddr_reg:x3; val_offset:7574*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7574*FLEN/8, x4, x1, x2)

inst_3788:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x807fe000; 
   valaddr_reg:x3; val_offset:7576*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7576*FLEN/8, x4, x1, x2)

inst_3789:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x807ff000; 
   valaddr_reg:x3; val_offset:7578*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7578*FLEN/8, x4, x1, x2)

inst_3790:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x807ff800; 
   valaddr_reg:x3; val_offset:7580*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7580*FLEN/8, x4, x1, x2)

inst_3791:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x807ffc00; 
   valaddr_reg:x3; val_offset:7582*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7582*FLEN/8, x4, x1, x2)

inst_3792:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x807ffe00; 
   valaddr_reg:x3; val_offset:7584*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7584*FLEN/8, x4, x1, x2)

inst_3793:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x807fff00; 
   valaddr_reg:x3; val_offset:7586*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7586*FLEN/8, x4, x1, x2)

inst_3794:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x807fff80; 
   valaddr_reg:x3; val_offset:7588*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7588*FLEN/8, x4, x1, x2)

inst_3795:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x807fffc0; 
   valaddr_reg:x3; val_offset:7590*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7590*FLEN/8, x4, x1, x2)

inst_3796:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x807fffe0; 
   valaddr_reg:x3; val_offset:7592*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7592*FLEN/8, x4, x1, x2)

inst_3797:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x807ffff0; 
   valaddr_reg:x3; val_offset:7594*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7594*FLEN/8, x4, x1, x2)

inst_3798:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x807ffff8; 
   valaddr_reg:x3; val_offset:7596*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7596*FLEN/8, x4, x1, x2)

inst_3799:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x807ffffc; 
   valaddr_reg:x3; val_offset:7598*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7598*FLEN/8, x4, x1, x2)

inst_3800:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x807ffffe; 
   valaddr_reg:x3; val_offset:7600*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7600*FLEN/8, x4, x1, x2)

inst_3801:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:7602*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7602*FLEN/8, x4, x1, x2)

inst_3802:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:7604*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7604*FLEN/8, x4, x1, x2)

inst_3803:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80800001; 
   valaddr_reg:x3; val_offset:7606*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7606*FLEN/8, x4, x1, x2)

inst_3804:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80800003; 
   valaddr_reg:x3; val_offset:7608*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7608*FLEN/8, x4, x1, x2)

inst_3805:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80800007; 
   valaddr_reg:x3; val_offset:7610*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7610*FLEN/8, x4, x1, x2)

inst_3806:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x8080000f; 
   valaddr_reg:x3; val_offset:7612*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7612*FLEN/8, x4, x1, x2)

inst_3807:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x8080001f; 
   valaddr_reg:x3; val_offset:7614*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7614*FLEN/8, x4, x1, x2)

inst_3808:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x8080003f; 
   valaddr_reg:x3; val_offset:7616*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7616*FLEN/8, x4, x1, x2)

inst_3809:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x8080007f; 
   valaddr_reg:x3; val_offset:7618*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7618*FLEN/8, x4, x1, x2)

inst_3810:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x808000ff; 
   valaddr_reg:x3; val_offset:7620*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7620*FLEN/8, x4, x1, x2)

inst_3811:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x808001ff; 
   valaddr_reg:x3; val_offset:7622*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7622*FLEN/8, x4, x1, x2)

inst_3812:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x808003ff; 
   valaddr_reg:x3; val_offset:7624*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7624*FLEN/8, x4, x1, x2)

inst_3813:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x808007ff; 
   valaddr_reg:x3; val_offset:7626*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7626*FLEN/8, x4, x1, x2)

inst_3814:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80800fff; 
   valaddr_reg:x3; val_offset:7628*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7628*FLEN/8, x4, x1, x2)

inst_3815:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80801fff; 
   valaddr_reg:x3; val_offset:7630*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7630*FLEN/8, x4, x1, x2)

inst_3816:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80803fff; 
   valaddr_reg:x3; val_offset:7632*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7632*FLEN/8, x4, x1, x2)

inst_3817:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80807fff; 
   valaddr_reg:x3; val_offset:7634*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7634*FLEN/8, x4, x1, x2)

inst_3818:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x8080ffff; 
   valaddr_reg:x3; val_offset:7636*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7636*FLEN/8, x4, x1, x2)

inst_3819:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x8081ffff; 
   valaddr_reg:x3; val_offset:7638*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7638*FLEN/8, x4, x1, x2)

inst_3820:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x8083ffff; 
   valaddr_reg:x3; val_offset:7640*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7640*FLEN/8, x4, x1, x2)

inst_3821:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x8087ffff; 
   valaddr_reg:x3; val_offset:7642*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7642*FLEN/8, x4, x1, x2)

inst_3822:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x808fffff; 
   valaddr_reg:x3; val_offset:7644*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7644*FLEN/8, x4, x1, x2)

inst_3823:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x809fffff; 
   valaddr_reg:x3; val_offset:7646*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7646*FLEN/8, x4, x1, x2)

inst_3824:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80bfffff; 
   valaddr_reg:x3; val_offset:7648*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7648*FLEN/8, x4, x1, x2)

inst_3825:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80c00000; 
   valaddr_reg:x3; val_offset:7650*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7650*FLEN/8, x4, x1, x2)

inst_3826:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80e00000; 
   valaddr_reg:x3; val_offset:7652*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7652*FLEN/8, x4, x1, x2)

inst_3827:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80f00000; 
   valaddr_reg:x3; val_offset:7654*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7654*FLEN/8, x4, x1, x2)

inst_3828:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80f80000; 
   valaddr_reg:x3; val_offset:7656*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7656*FLEN/8, x4, x1, x2)

inst_3829:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80fc0000; 
   valaddr_reg:x3; val_offset:7658*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7658*FLEN/8, x4, x1, x2)

inst_3830:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80fe0000; 
   valaddr_reg:x3; val_offset:7660*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7660*FLEN/8, x4, x1, x2)

inst_3831:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80ff0000; 
   valaddr_reg:x3; val_offset:7662*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7662*FLEN/8, x4, x1, x2)

inst_3832:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80ff8000; 
   valaddr_reg:x3; val_offset:7664*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7664*FLEN/8, x4, x1, x2)

inst_3833:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80ffc000; 
   valaddr_reg:x3; val_offset:7666*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7666*FLEN/8, x4, x1, x2)

inst_3834:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80ffe000; 
   valaddr_reg:x3; val_offset:7668*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7668*FLEN/8, x4, x1, x2)

inst_3835:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80fff000; 
   valaddr_reg:x3; val_offset:7670*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7670*FLEN/8, x4, x1, x2)

inst_3836:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80fff800; 
   valaddr_reg:x3; val_offset:7672*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7672*FLEN/8, x4, x1, x2)

inst_3837:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80fffc00; 
   valaddr_reg:x3; val_offset:7674*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7674*FLEN/8, x4, x1, x2)

inst_3838:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80fffe00; 
   valaddr_reg:x3; val_offset:7676*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7676*FLEN/8, x4, x1, x2)

inst_3839:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80ffff00; 
   valaddr_reg:x3; val_offset:7678*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7678*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_31)

inst_3840:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80ffff80; 
   valaddr_reg:x3; val_offset:7680*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7680*FLEN/8, x4, x1, x2)

inst_3841:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80ffffc0; 
   valaddr_reg:x3; val_offset:7682*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7682*FLEN/8, x4, x1, x2)

inst_3842:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80ffffe0; 
   valaddr_reg:x3; val_offset:7684*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7684*FLEN/8, x4, x1, x2)

inst_3843:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80fffff0; 
   valaddr_reg:x3; val_offset:7686*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7686*FLEN/8, x4, x1, x2)

inst_3844:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80fffff8; 
   valaddr_reg:x3; val_offset:7688*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7688*FLEN/8, x4, x1, x2)

inst_3845:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80fffffc; 
   valaddr_reg:x3; val_offset:7690*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7690*FLEN/8, x4, x1, x2)

inst_3846:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80fffffe; 
   valaddr_reg:x3; val_offset:7692*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7692*FLEN/8, x4, x1, x2)

inst_3847:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x80ffffff; 
   valaddr_reg:x3; val_offset:7694*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7694*FLEN/8, x4, x1, x2)

inst_3848:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81000000; 
   valaddr_reg:x3; val_offset:7696*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7696*FLEN/8, x4, x1, x2)

inst_3849:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81000001; 
   valaddr_reg:x3; val_offset:7698*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7698*FLEN/8, x4, x1, x2)

inst_3850:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81000003; 
   valaddr_reg:x3; val_offset:7700*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7700*FLEN/8, x4, x1, x2)

inst_3851:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81000007; 
   valaddr_reg:x3; val_offset:7702*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7702*FLEN/8, x4, x1, x2)

inst_3852:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x8100000f; 
   valaddr_reg:x3; val_offset:7704*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7704*FLEN/8, x4, x1, x2)

inst_3853:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x8100001f; 
   valaddr_reg:x3; val_offset:7706*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7706*FLEN/8, x4, x1, x2)

inst_3854:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x8100003f; 
   valaddr_reg:x3; val_offset:7708*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7708*FLEN/8, x4, x1, x2)

inst_3855:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x8100007f; 
   valaddr_reg:x3; val_offset:7710*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7710*FLEN/8, x4, x1, x2)

inst_3856:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x810000ff; 
   valaddr_reg:x3; val_offset:7712*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7712*FLEN/8, x4, x1, x2)

inst_3857:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x810001ff; 
   valaddr_reg:x3; val_offset:7714*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7714*FLEN/8, x4, x1, x2)

inst_3858:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x810003ff; 
   valaddr_reg:x3; val_offset:7716*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7716*FLEN/8, x4, x1, x2)

inst_3859:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x810007ff; 
   valaddr_reg:x3; val_offset:7718*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7718*FLEN/8, x4, x1, x2)

inst_3860:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81000fff; 
   valaddr_reg:x3; val_offset:7720*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7720*FLEN/8, x4, x1, x2)

inst_3861:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81001fff; 
   valaddr_reg:x3; val_offset:7722*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7722*FLEN/8, x4, x1, x2)

inst_3862:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81003fff; 
   valaddr_reg:x3; val_offset:7724*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7724*FLEN/8, x4, x1, x2)

inst_3863:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81007fff; 
   valaddr_reg:x3; val_offset:7726*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7726*FLEN/8, x4, x1, x2)

inst_3864:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x8100ffff; 
   valaddr_reg:x3; val_offset:7728*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7728*FLEN/8, x4, x1, x2)

inst_3865:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x8101ffff; 
   valaddr_reg:x3; val_offset:7730*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7730*FLEN/8, x4, x1, x2)

inst_3866:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x8103ffff; 
   valaddr_reg:x3; val_offset:7732*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7732*FLEN/8, x4, x1, x2)

inst_3867:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x8107ffff; 
   valaddr_reg:x3; val_offset:7734*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7734*FLEN/8, x4, x1, x2)

inst_3868:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x810fffff; 
   valaddr_reg:x3; val_offset:7736*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7736*FLEN/8, x4, x1, x2)

inst_3869:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x811fffff; 
   valaddr_reg:x3; val_offset:7738*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7738*FLEN/8, x4, x1, x2)

inst_3870:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x813fffff; 
   valaddr_reg:x3; val_offset:7740*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7740*FLEN/8, x4, x1, x2)

inst_3871:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81400000; 
   valaddr_reg:x3; val_offset:7742*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7742*FLEN/8, x4, x1, x2)

inst_3872:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81600000; 
   valaddr_reg:x3; val_offset:7744*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7744*FLEN/8, x4, x1, x2)

inst_3873:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81700000; 
   valaddr_reg:x3; val_offset:7746*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7746*FLEN/8, x4, x1, x2)

inst_3874:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81780000; 
   valaddr_reg:x3; val_offset:7748*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7748*FLEN/8, x4, x1, x2)

inst_3875:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x817c0000; 
   valaddr_reg:x3; val_offset:7750*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7750*FLEN/8, x4, x1, x2)

inst_3876:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x817e0000; 
   valaddr_reg:x3; val_offset:7752*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7752*FLEN/8, x4, x1, x2)

inst_3877:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x817f0000; 
   valaddr_reg:x3; val_offset:7754*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7754*FLEN/8, x4, x1, x2)

inst_3878:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x817f8000; 
   valaddr_reg:x3; val_offset:7756*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7756*FLEN/8, x4, x1, x2)

inst_3879:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x817fc000; 
   valaddr_reg:x3; val_offset:7758*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7758*FLEN/8, x4, x1, x2)

inst_3880:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x817fe000; 
   valaddr_reg:x3; val_offset:7760*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7760*FLEN/8, x4, x1, x2)

inst_3881:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x817ff000; 
   valaddr_reg:x3; val_offset:7762*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7762*FLEN/8, x4, x1, x2)

inst_3882:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x817ff800; 
   valaddr_reg:x3; val_offset:7764*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7764*FLEN/8, x4, x1, x2)

inst_3883:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x817ffc00; 
   valaddr_reg:x3; val_offset:7766*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7766*FLEN/8, x4, x1, x2)

inst_3884:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x817ffe00; 
   valaddr_reg:x3; val_offset:7768*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7768*FLEN/8, x4, x1, x2)

inst_3885:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x817fff00; 
   valaddr_reg:x3; val_offset:7770*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7770*FLEN/8, x4, x1, x2)

inst_3886:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x817fff80; 
   valaddr_reg:x3; val_offset:7772*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7772*FLEN/8, x4, x1, x2)

inst_3887:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x817fffc0; 
   valaddr_reg:x3; val_offset:7774*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7774*FLEN/8, x4, x1, x2)

inst_3888:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x817fffe0; 
   valaddr_reg:x3; val_offset:7776*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7776*FLEN/8, x4, x1, x2)

inst_3889:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x817ffff0; 
   valaddr_reg:x3; val_offset:7778*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7778*FLEN/8, x4, x1, x2)

inst_3890:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x817ffff8; 
   valaddr_reg:x3; val_offset:7780*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7780*FLEN/8, x4, x1, x2)

inst_3891:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x817ffffc; 
   valaddr_reg:x3; val_offset:7782*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7782*FLEN/8, x4, x1, x2)

inst_3892:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x817ffffe; 
   valaddr_reg:x3; val_offset:7784*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7784*FLEN/8, x4, x1, x2)

inst_3893:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x817fffff; 
   valaddr_reg:x3; val_offset:7786*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7786*FLEN/8, x4, x1, x2)

inst_3894:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81800000; 
   valaddr_reg:x3; val_offset:7788*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7788*FLEN/8, x4, x1, x2)

inst_3895:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81800001; 
   valaddr_reg:x3; val_offset:7790*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7790*FLEN/8, x4, x1, x2)

inst_3896:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81800003; 
   valaddr_reg:x3; val_offset:7792*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7792*FLEN/8, x4, x1, x2)

inst_3897:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81800007; 
   valaddr_reg:x3; val_offset:7794*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7794*FLEN/8, x4, x1, x2)

inst_3898:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x8180000f; 
   valaddr_reg:x3; val_offset:7796*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7796*FLEN/8, x4, x1, x2)

inst_3899:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x8180001f; 
   valaddr_reg:x3; val_offset:7798*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7798*FLEN/8, x4, x1, x2)

inst_3900:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x8180003f; 
   valaddr_reg:x3; val_offset:7800*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7800*FLEN/8, x4, x1, x2)

inst_3901:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x8180007f; 
   valaddr_reg:x3; val_offset:7802*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7802*FLEN/8, x4, x1, x2)

inst_3902:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x818000ff; 
   valaddr_reg:x3; val_offset:7804*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7804*FLEN/8, x4, x1, x2)

inst_3903:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x818001ff; 
   valaddr_reg:x3; val_offset:7806*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7806*FLEN/8, x4, x1, x2)

inst_3904:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x818003ff; 
   valaddr_reg:x3; val_offset:7808*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7808*FLEN/8, x4, x1, x2)

inst_3905:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x818007ff; 
   valaddr_reg:x3; val_offset:7810*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7810*FLEN/8, x4, x1, x2)

inst_3906:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81800fff; 
   valaddr_reg:x3; val_offset:7812*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7812*FLEN/8, x4, x1, x2)

inst_3907:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81801fff; 
   valaddr_reg:x3; val_offset:7814*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7814*FLEN/8, x4, x1, x2)

inst_3908:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81803fff; 
   valaddr_reg:x3; val_offset:7816*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7816*FLEN/8, x4, x1, x2)

inst_3909:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81807fff; 
   valaddr_reg:x3; val_offset:7818*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7818*FLEN/8, x4, x1, x2)

inst_3910:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x8180ffff; 
   valaddr_reg:x3; val_offset:7820*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7820*FLEN/8, x4, x1, x2)

inst_3911:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x8181ffff; 
   valaddr_reg:x3; val_offset:7822*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7822*FLEN/8, x4, x1, x2)

inst_3912:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x8183ffff; 
   valaddr_reg:x3; val_offset:7824*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7824*FLEN/8, x4, x1, x2)

inst_3913:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x8187ffff; 
   valaddr_reg:x3; val_offset:7826*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7826*FLEN/8, x4, x1, x2)

inst_3914:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x818fffff; 
   valaddr_reg:x3; val_offset:7828*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7828*FLEN/8, x4, x1, x2)

inst_3915:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x819fffff; 
   valaddr_reg:x3; val_offset:7830*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7830*FLEN/8, x4, x1, x2)

inst_3916:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81bfffff; 
   valaddr_reg:x3; val_offset:7832*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7832*FLEN/8, x4, x1, x2)

inst_3917:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81c00000; 
   valaddr_reg:x3; val_offset:7834*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7834*FLEN/8, x4, x1, x2)

inst_3918:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81e00000; 
   valaddr_reg:x3; val_offset:7836*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7836*FLEN/8, x4, x1, x2)

inst_3919:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81f00000; 
   valaddr_reg:x3; val_offset:7838*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7838*FLEN/8, x4, x1, x2)

inst_3920:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81f80000; 
   valaddr_reg:x3; val_offset:7840*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7840*FLEN/8, x4, x1, x2)

inst_3921:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81fc0000; 
   valaddr_reg:x3; val_offset:7842*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7842*FLEN/8, x4, x1, x2)

inst_3922:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81fe0000; 
   valaddr_reg:x3; val_offset:7844*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7844*FLEN/8, x4, x1, x2)

inst_3923:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81ff0000; 
   valaddr_reg:x3; val_offset:7846*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7846*FLEN/8, x4, x1, x2)

inst_3924:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81ff8000; 
   valaddr_reg:x3; val_offset:7848*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7848*FLEN/8, x4, x1, x2)

inst_3925:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81ffc000; 
   valaddr_reg:x3; val_offset:7850*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7850*FLEN/8, x4, x1, x2)

inst_3926:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81ffe000; 
   valaddr_reg:x3; val_offset:7852*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7852*FLEN/8, x4, x1, x2)

inst_3927:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81fff000; 
   valaddr_reg:x3; val_offset:7854*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7854*FLEN/8, x4, x1, x2)

inst_3928:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81fff800; 
   valaddr_reg:x3; val_offset:7856*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7856*FLEN/8, x4, x1, x2)

inst_3929:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81fffc00; 
   valaddr_reg:x3; val_offset:7858*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7858*FLEN/8, x4, x1, x2)

inst_3930:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81fffe00; 
   valaddr_reg:x3; val_offset:7860*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7860*FLEN/8, x4, x1, x2)

inst_3931:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81ffff00; 
   valaddr_reg:x3; val_offset:7862*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7862*FLEN/8, x4, x1, x2)

inst_3932:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81ffff80; 
   valaddr_reg:x3; val_offset:7864*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7864*FLEN/8, x4, x1, x2)

inst_3933:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81ffffc0; 
   valaddr_reg:x3; val_offset:7866*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7866*FLEN/8, x4, x1, x2)

inst_3934:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81ffffe0; 
   valaddr_reg:x3; val_offset:7868*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7868*FLEN/8, x4, x1, x2)

inst_3935:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81fffff0; 
   valaddr_reg:x3; val_offset:7870*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7870*FLEN/8, x4, x1, x2)

inst_3936:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81fffff8; 
   valaddr_reg:x3; val_offset:7872*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7872*FLEN/8, x4, x1, x2)

inst_3937:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81fffffc; 
   valaddr_reg:x3; val_offset:7874*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7874*FLEN/8, x4, x1, x2)

inst_3938:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81fffffe; 
   valaddr_reg:x3; val_offset:7876*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7876*FLEN/8, x4, x1, x2)

inst_3939:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0x81ffffff; 
   valaddr_reg:x3; val_offset:7878*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7878*FLEN/8, x4, x1, x2)

inst_3940:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfd800000; 
   valaddr_reg:x3; val_offset:7880*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7880*FLEN/8, x4, x1, x2)

inst_3941:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfd800001; 
   valaddr_reg:x3; val_offset:7882*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7882*FLEN/8, x4, x1, x2)

inst_3942:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfd800003; 
   valaddr_reg:x3; val_offset:7884*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7884*FLEN/8, x4, x1, x2)

inst_3943:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfd800007; 
   valaddr_reg:x3; val_offset:7886*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7886*FLEN/8, x4, x1, x2)

inst_3944:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfd80000f; 
   valaddr_reg:x3; val_offset:7888*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7888*FLEN/8, x4, x1, x2)

inst_3945:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfd80001f; 
   valaddr_reg:x3; val_offset:7890*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7890*FLEN/8, x4, x1, x2)

inst_3946:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfd80003f; 
   valaddr_reg:x3; val_offset:7892*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7892*FLEN/8, x4, x1, x2)

inst_3947:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfd80007f; 
   valaddr_reg:x3; val_offset:7894*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7894*FLEN/8, x4, x1, x2)

inst_3948:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfd8000ff; 
   valaddr_reg:x3; val_offset:7896*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7896*FLEN/8, x4, x1, x2)

inst_3949:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfd8001ff; 
   valaddr_reg:x3; val_offset:7898*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7898*FLEN/8, x4, x1, x2)

inst_3950:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfd8003ff; 
   valaddr_reg:x3; val_offset:7900*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7900*FLEN/8, x4, x1, x2)

inst_3951:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfd8007ff; 
   valaddr_reg:x3; val_offset:7902*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7902*FLEN/8, x4, x1, x2)

inst_3952:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfd800fff; 
   valaddr_reg:x3; val_offset:7904*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7904*FLEN/8, x4, x1, x2)

inst_3953:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfd801fff; 
   valaddr_reg:x3; val_offset:7906*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7906*FLEN/8, x4, x1, x2)

inst_3954:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfd803fff; 
   valaddr_reg:x3; val_offset:7908*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7908*FLEN/8, x4, x1, x2)

inst_3955:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfd807fff; 
   valaddr_reg:x3; val_offset:7910*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7910*FLEN/8, x4, x1, x2)

inst_3956:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfd80ffff; 
   valaddr_reg:x3; val_offset:7912*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7912*FLEN/8, x4, x1, x2)

inst_3957:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfd81ffff; 
   valaddr_reg:x3; val_offset:7914*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7914*FLEN/8, x4, x1, x2)

inst_3958:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfd83ffff; 
   valaddr_reg:x3; val_offset:7916*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7916*FLEN/8, x4, x1, x2)

inst_3959:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfd87ffff; 
   valaddr_reg:x3; val_offset:7918*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7918*FLEN/8, x4, x1, x2)

inst_3960:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfd8fffff; 
   valaddr_reg:x3; val_offset:7920*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7920*FLEN/8, x4, x1, x2)

inst_3961:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfd9fffff; 
   valaddr_reg:x3; val_offset:7922*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7922*FLEN/8, x4, x1, x2)

inst_3962:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfdbfffff; 
   valaddr_reg:x3; val_offset:7924*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7924*FLEN/8, x4, x1, x2)

inst_3963:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfdc00000; 
   valaddr_reg:x3; val_offset:7926*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7926*FLEN/8, x4, x1, x2)

inst_3964:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfde00000; 
   valaddr_reg:x3; val_offset:7928*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7928*FLEN/8, x4, x1, x2)

inst_3965:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfdf00000; 
   valaddr_reg:x3; val_offset:7930*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7930*FLEN/8, x4, x1, x2)

inst_3966:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfdf80000; 
   valaddr_reg:x3; val_offset:7932*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7932*FLEN/8, x4, x1, x2)

inst_3967:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfdfc0000; 
   valaddr_reg:x3; val_offset:7934*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7934*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_32)

inst_3968:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfdfe0000; 
   valaddr_reg:x3; val_offset:7936*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7936*FLEN/8, x4, x1, x2)

inst_3969:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfdff0000; 
   valaddr_reg:x3; val_offset:7938*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7938*FLEN/8, x4, x1, x2)

inst_3970:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfdff8000; 
   valaddr_reg:x3; val_offset:7940*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7940*FLEN/8, x4, x1, x2)

inst_3971:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfdffc000; 
   valaddr_reg:x3; val_offset:7942*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7942*FLEN/8, x4, x1, x2)

inst_3972:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfdffe000; 
   valaddr_reg:x3; val_offset:7944*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7944*FLEN/8, x4, x1, x2)

inst_3973:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfdfff000; 
   valaddr_reg:x3; val_offset:7946*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7946*FLEN/8, x4, x1, x2)

inst_3974:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfdfff800; 
   valaddr_reg:x3; val_offset:7948*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7948*FLEN/8, x4, x1, x2)

inst_3975:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfdfffc00; 
   valaddr_reg:x3; val_offset:7950*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7950*FLEN/8, x4, x1, x2)

inst_3976:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfdfffe00; 
   valaddr_reg:x3; val_offset:7952*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7952*FLEN/8, x4, x1, x2)

inst_3977:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfdffff00; 
   valaddr_reg:x3; val_offset:7954*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7954*FLEN/8, x4, x1, x2)

inst_3978:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfdffff80; 
   valaddr_reg:x3; val_offset:7956*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7956*FLEN/8, x4, x1, x2)

inst_3979:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfdffffc0; 
   valaddr_reg:x3; val_offset:7958*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7958*FLEN/8, x4, x1, x2)

inst_3980:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfdffffe0; 
   valaddr_reg:x3; val_offset:7960*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7960*FLEN/8, x4, x1, x2)

inst_3981:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfdfffff0; 
   valaddr_reg:x3; val_offset:7962*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7962*FLEN/8, x4, x1, x2)

inst_3982:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfdfffff8; 
   valaddr_reg:x3; val_offset:7964*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7964*FLEN/8, x4, x1, x2)

inst_3983:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfdfffffc; 
   valaddr_reg:x3; val_offset:7966*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7966*FLEN/8, x4, x1, x2)

inst_3984:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfdfffffe; 
   valaddr_reg:x3; val_offset:7968*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7968*FLEN/8, x4, x1, x2)

inst_3985:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000001; op2val:0xfdffffff; 
   valaddr_reg:x3; val_offset:7970*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7970*FLEN/8, x4, x1, x2)

inst_3986:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000003; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:7972*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7972*FLEN/8, x4, x1, x2)

inst_3987:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000003; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:7974*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7974*FLEN/8, x4, x1, x2)

inst_3988:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000003; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:7976*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7976*FLEN/8, x4, x1, x2)

inst_3989:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000003; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:7978*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7978*FLEN/8, x4, x1, x2)

inst_3990:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000007; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:7980*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7980*FLEN/8, x4, x1, x2)

inst_3991:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000007; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:7982*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7982*FLEN/8, x4, x1, x2)

inst_3992:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000007; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:7984*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7984*FLEN/8, x4, x1, x2)

inst_3993:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000007; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:7986*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7986*FLEN/8, x4, x1, x2)

inst_3994:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8000000f; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:7988*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7988*FLEN/8, x4, x1, x2)

inst_3995:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8000000f; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:7990*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7990*FLEN/8, x4, x1, x2)

inst_3996:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8000000f; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:7992*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7992*FLEN/8, x4, x1, x2)

inst_3997:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8000000f; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:7994*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7994*FLEN/8, x4, x1, x2)

inst_3998:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8000001f; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:7996*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7996*FLEN/8, x4, x1, x2)

inst_3999:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8000001f; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:7998*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 7998*FLEN/8, x4, x1, x2)

inst_4000:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8000001f; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8000*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8000*FLEN/8, x4, x1, x2)

inst_4001:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8000001f; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8002*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8002*FLEN/8, x4, x1, x2)

inst_4002:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8000003f; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8004*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8004*FLEN/8, x4, x1, x2)

inst_4003:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8000003f; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8006*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8006*FLEN/8, x4, x1, x2)

inst_4004:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8000003f; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8008*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8008*FLEN/8, x4, x1, x2)

inst_4005:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8000003f; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8010*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8010*FLEN/8, x4, x1, x2)

inst_4006:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x00007f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8000007f; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8012*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8012*FLEN/8, x4, x1, x2)

inst_4007:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x00007f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8000007f; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8014*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8014*FLEN/8, x4, x1, x2)

inst_4008:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x00007f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8000007f; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8016*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8016*FLEN/8, x4, x1, x2)

inst_4009:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x00007f and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8000007f; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8018*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8018*FLEN/8, x4, x1, x2)

inst_4010:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000ff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8020*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8020*FLEN/8, x4, x1, x2)

inst_4011:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000ff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8022*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8022*FLEN/8, x4, x1, x2)

inst_4012:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000ff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8024*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8024*FLEN/8, x4, x1, x2)

inst_4013:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800000ff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8026*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8026*FLEN/8, x4, x1, x2)

inst_4014:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800001ff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8028*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8028*FLEN/8, x4, x1, x2)

inst_4015:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800001ff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8030*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8030*FLEN/8, x4, x1, x2)

inst_4016:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800001ff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8032*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8032*FLEN/8, x4, x1, x2)

inst_4017:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800001ff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8034*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8034*FLEN/8, x4, x1, x2)

inst_4018:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800003ff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8036*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8036*FLEN/8, x4, x1, x2)

inst_4019:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800003ff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8038*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8038*FLEN/8, x4, x1, x2)

inst_4020:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800003ff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8040*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8040*FLEN/8, x4, x1, x2)

inst_4021:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800003ff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8042*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8042*FLEN/8, x4, x1, x2)

inst_4022:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800007ff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8044*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8044*FLEN/8, x4, x1, x2)

inst_4023:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800007ff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8046*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8046*FLEN/8, x4, x1, x2)

inst_4024:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800007ff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8048*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8048*FLEN/8, x4, x1, x2)

inst_4025:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800007ff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8050*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8050*FLEN/8, x4, x1, x2)

inst_4026:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000fff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8052*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8052*FLEN/8, x4, x1, x2)

inst_4027:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000fff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8054*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8054*FLEN/8, x4, x1, x2)

inst_4028:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000fff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8056*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8056*FLEN/8, x4, x1, x2)

inst_4029:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000fff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80000fff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8058*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8058*FLEN/8, x4, x1, x2)

inst_4030:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x001fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80001fff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8060*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8060*FLEN/8, x4, x1, x2)

inst_4031:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x001fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80001fff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8062*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8062*FLEN/8, x4, x1, x2)

inst_4032:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x001fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80001fff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8064*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8064*FLEN/8, x4, x1, x2)

inst_4033:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x001fff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80001fff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8066*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8066*FLEN/8, x4, x1, x2)

inst_4034:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x003fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80003fff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8068*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8068*FLEN/8, x4, x1, x2)

inst_4035:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x003fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80003fff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8070*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8070*FLEN/8, x4, x1, x2)

inst_4036:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x003fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80003fff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8072*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8072*FLEN/8, x4, x1, x2)

inst_4037:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x003fff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80003fff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8074*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8074*FLEN/8, x4, x1, x2)

inst_4038:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x007fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80007fff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8076*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8076*FLEN/8, x4, x1, x2)

inst_4039:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x007fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80007fff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8078*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8078*FLEN/8, x4, x1, x2)

inst_4040:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x007fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80007fff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8080*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8080*FLEN/8, x4, x1, x2)

inst_4041:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x007fff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80007fff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8082*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8082*FLEN/8, x4, x1, x2)

inst_4042:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8000ffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8084*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8084*FLEN/8, x4, x1, x2)

inst_4043:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8000ffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8086*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8086*FLEN/8, x4, x1, x2)

inst_4044:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8000ffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8088*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8088*FLEN/8, x4, x1, x2)

inst_4045:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8000ffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8090*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8090*FLEN/8, x4, x1, x2)

inst_4046:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8001ffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8092*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8092*FLEN/8, x4, x1, x2)

inst_4047:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8001ffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8094*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8094*FLEN/8, x4, x1, x2)

inst_4048:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8001ffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8096*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8096*FLEN/8, x4, x1, x2)

inst_4049:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8001ffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8098*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8098*FLEN/8, x4, x1, x2)

inst_4050:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8003ffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8100*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8100*FLEN/8, x4, x1, x2)

inst_4051:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8003ffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8102*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8102*FLEN/8, x4, x1, x2)

inst_4052:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8003ffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8104*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8104*FLEN/8, x4, x1, x2)

inst_4053:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8003ffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8106*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8106*FLEN/8, x4, x1, x2)

inst_4054:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8007ffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8108*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8108*FLEN/8, x4, x1, x2)

inst_4055:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8007ffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8110*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8110*FLEN/8, x4, x1, x2)

inst_4056:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8007ffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8112*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8112*FLEN/8, x4, x1, x2)

inst_4057:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8007ffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8114*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8114*FLEN/8, x4, x1, x2)

inst_4058:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800fffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8116*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8116*FLEN/8, x4, x1, x2)

inst_4059:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800fffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8118*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8118*FLEN/8, x4, x1, x2)

inst_4060:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800fffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8120*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8120*FLEN/8, x4, x1, x2)

inst_4061:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x800fffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8122*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8122*FLEN/8, x4, x1, x2)

inst_4062:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x199999 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80199999; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8124*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8124*FLEN/8, x4, x1, x2)

inst_4063:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x199999 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80199999; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8126*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8126*FLEN/8, x4, x1, x2)

inst_4064:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x199999 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80199999; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8128*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8128*FLEN/8, x4, x1, x2)

inst_4065:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x801fffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8130*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8130*FLEN/8, x4, x1, x2)

inst_4066:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x801fffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8132*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8132*FLEN/8, x4, x1, x2)

inst_4067:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x801fffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8134*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8134*FLEN/8, x4, x1, x2)

inst_4068:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x801fffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8136*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8136*FLEN/8, x4, x1, x2)

inst_4069:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x249249 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80249249; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8138*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8138*FLEN/8, x4, x1, x2)

inst_4070:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x249249 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80249249; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8140*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8140*FLEN/8, x4, x1, x2)

inst_4071:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x249249 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80249249; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8142*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8142*FLEN/8, x4, x1, x2)

inst_4072:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x333333 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80333333; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8144*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8144*FLEN/8, x4, x1, x2)

inst_4073:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x333333 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80333333; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8146*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8146*FLEN/8, x4, x1, x2)

inst_4074:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x333333 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80333333; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8148*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8148*FLEN/8, x4, x1, x2)

inst_4075:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x36db6d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8036db6d; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8150*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8150*FLEN/8, x4, x1, x2)

inst_4076:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x36db6d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8036db6d; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8152*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8152*FLEN/8, x4, x1, x2)

inst_4077:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x36db6d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8036db6d; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8154*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8154*FLEN/8, x4, x1, x2)

inst_4078:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3bbbbb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x803bbbbb; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8156*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8156*FLEN/8, x4, x1, x2)

inst_4079:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3bbbbb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x803bbbbb; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8158*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8158*FLEN/8, x4, x1, x2)

inst_4080:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3bbbbb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x803bbbbb; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8160*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8160*FLEN/8, x4, x1, x2)

inst_4081:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x803fffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8162*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8162*FLEN/8, x4, x1, x2)

inst_4082:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x803fffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8164*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8164*FLEN/8, x4, x1, x2)

inst_4083:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x803fffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8166*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8166*FLEN/8, x4, x1, x2)

inst_4084:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x803fffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8168*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8168*FLEN/8, x4, x1, x2)

inst_4085:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x400000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80400000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8170*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8170*FLEN/8, x4, x1, x2)

inst_4086:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x400000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80400000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8172*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8172*FLEN/8, x4, x1, x2)

inst_4087:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x400000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80400000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8174*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8174*FLEN/8, x4, x1, x2)

inst_4088:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x400000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80400000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8176*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8176*FLEN/8, x4, x1, x2)

inst_4089:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x444444 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80444444; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8178*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8178*FLEN/8, x4, x1, x2)

inst_4090:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x444444 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80444444; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8180*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8180*FLEN/8, x4, x1, x2)

inst_4091:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x444444 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80444444; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8182*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8182*FLEN/8, x4, x1, x2)

inst_4092:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x4ccccc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x804ccccc; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8184*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8184*FLEN/8, x4, x1, x2)

inst_4093:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x4ccccc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x804ccccc; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8186*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8186*FLEN/8, x4, x1, x2)

inst_4094:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x4ccccc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x804ccccc; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8188*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8188*FLEN/8, x4, x1, x2)

inst_4095:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x5b6db6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x805b6db6; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8190*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8190*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_33)

inst_4096:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x5b6db6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x805b6db6; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8192*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8192*FLEN/8, x4, x1, x2)

inst_4097:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x5b6db6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x805b6db6; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8194*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8194*FLEN/8, x4, x1, x2)

inst_4098:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x600000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80600000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8196*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8196*FLEN/8, x4, x1, x2)

inst_4099:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x600000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80600000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8198*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8198*FLEN/8, x4, x1, x2)

inst_4100:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x600000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80600000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8200*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8200*FLEN/8, x4, x1, x2)

inst_4101:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x600000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80600000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8202*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8202*FLEN/8, x4, x1, x2)

inst_4102:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x666666 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80666666; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8204*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8204*FLEN/8, x4, x1, x2)

inst_4103:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x666666 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80666666; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8206*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8206*FLEN/8, x4, x1, x2)

inst_4104:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x666666 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80666666; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8208*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8208*FLEN/8, x4, x1, x2)

inst_4105:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x6db6db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x806db6db; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8210*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8210*FLEN/8, x4, x1, x2)

inst_4106:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x6db6db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x806db6db; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8212*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8212*FLEN/8, x4, x1, x2)

inst_4107:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x6db6db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x806db6db; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8214*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8214*FLEN/8, x4, x1, x2)

inst_4108:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x700000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80700000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8216*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8216*FLEN/8, x4, x1, x2)

inst_4109:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x700000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80700000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8218*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8218*FLEN/8, x4, x1, x2)

inst_4110:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x700000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80700000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8220*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8220*FLEN/8, x4, x1, x2)

inst_4111:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x700000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80700000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8222*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8222*FLEN/8, x4, x1, x2)

inst_4112:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x780000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80780000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8224*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8224*FLEN/8, x4, x1, x2)

inst_4113:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x780000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80780000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8226*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8226*FLEN/8, x4, x1, x2)

inst_4114:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x780000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80780000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8228*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8228*FLEN/8, x4, x1, x2)

inst_4115:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x780000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80780000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8230*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8230*FLEN/8, x4, x1, x2)

inst_4116:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807c0000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8232*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8232*FLEN/8, x4, x1, x2)

inst_4117:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807c0000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8234*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8234*FLEN/8, x4, x1, x2)

inst_4118:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807c0000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8236*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8236*FLEN/8, x4, x1, x2)

inst_4119:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807c0000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8238*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8238*FLEN/8, x4, x1, x2)

inst_4120:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807e0000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8240*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8240*FLEN/8, x4, x1, x2)

inst_4121:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807e0000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8242*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8242*FLEN/8, x4, x1, x2)

inst_4122:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807e0000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8244*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8244*FLEN/8, x4, x1, x2)

inst_4123:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807e0000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8246*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8246*FLEN/8, x4, x1, x2)

inst_4124:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807f0000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8248*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8248*FLEN/8, x4, x1, x2)

inst_4125:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807f0000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8250*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8250*FLEN/8, x4, x1, x2)

inst_4126:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807f0000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8252*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8252*FLEN/8, x4, x1, x2)

inst_4127:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807f0000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8254*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8254*FLEN/8, x4, x1, x2)

inst_4128:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807f8000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8256*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8256*FLEN/8, x4, x1, x2)

inst_4129:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807f8000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8258*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8258*FLEN/8, x4, x1, x2)

inst_4130:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807f8000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8260*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8260*FLEN/8, x4, x1, x2)

inst_4131:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807f8000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8262*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8262*FLEN/8, x4, x1, x2)

inst_4132:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fc000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8264*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8264*FLEN/8, x4, x1, x2)

inst_4133:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fc000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8266*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8266*FLEN/8, x4, x1, x2)

inst_4134:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fc000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8268*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8268*FLEN/8, x4, x1, x2)

inst_4135:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fc000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8270*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8270*FLEN/8, x4, x1, x2)

inst_4136:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fe000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8272*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8272*FLEN/8, x4, x1, x2)

inst_4137:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fe000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8274*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8274*FLEN/8, x4, x1, x2)

inst_4138:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fe000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8276*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8276*FLEN/8, x4, x1, x2)

inst_4139:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fe000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8278*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8278*FLEN/8, x4, x1, x2)

inst_4140:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807ff000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8280*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8280*FLEN/8, x4, x1, x2)

inst_4141:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807ff000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8282*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8282*FLEN/8, x4, x1, x2)

inst_4142:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807ff000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8284*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8284*FLEN/8, x4, x1, x2)

inst_4143:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807ff000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8286*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8286*FLEN/8, x4, x1, x2)

inst_4144:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807ff800; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8288*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8288*FLEN/8, x4, x1, x2)

inst_4145:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807ff800; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8290*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8290*FLEN/8, x4, x1, x2)

inst_4146:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807ff800; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8292*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8292*FLEN/8, x4, x1, x2)

inst_4147:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807ff800; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8294*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8294*FLEN/8, x4, x1, x2)

inst_4148:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807ffc00; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8296*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8296*FLEN/8, x4, x1, x2)

inst_4149:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807ffc00; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8298*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8298*FLEN/8, x4, x1, x2)

inst_4150:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807ffc00; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8300*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8300*FLEN/8, x4, x1, x2)

inst_4151:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807ffc00; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8302*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8302*FLEN/8, x4, x1, x2)

inst_4152:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807ffe00; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8304*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8304*FLEN/8, x4, x1, x2)

inst_4153:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807ffe00; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8306*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8306*FLEN/8, x4, x1, x2)

inst_4154:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807ffe00; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8308*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8308*FLEN/8, x4, x1, x2)

inst_4155:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807ffe00; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8310*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8310*FLEN/8, x4, x1, x2)

inst_4156:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fff00; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8312*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8312*FLEN/8, x4, x1, x2)

inst_4157:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fff00; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8314*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8314*FLEN/8, x4, x1, x2)

inst_4158:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fff00; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8316*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8316*FLEN/8, x4, x1, x2)

inst_4159:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fff00; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8318*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8318*FLEN/8, x4, x1, x2)

inst_4160:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fff80; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8320*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8320*FLEN/8, x4, x1, x2)

inst_4161:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fff80; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8322*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8322*FLEN/8, x4, x1, x2)

inst_4162:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fff80; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8324*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8324*FLEN/8, x4, x1, x2)

inst_4163:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fff80; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8326*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8326*FLEN/8, x4, x1, x2)

inst_4164:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffc0; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8328*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8328*FLEN/8, x4, x1, x2)

inst_4165:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffc0; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8330*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8330*FLEN/8, x4, x1, x2)

inst_4166:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffc0; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8332*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8332*FLEN/8, x4, x1, x2)

inst_4167:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffc0; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8334*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8334*FLEN/8, x4, x1, x2)

inst_4168:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffe0; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8336*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8336*FLEN/8, x4, x1, x2)

inst_4169:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffe0; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8338*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8338*FLEN/8, x4, x1, x2)

inst_4170:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffe0; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8340*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8340*FLEN/8, x4, x1, x2)

inst_4171:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffe0; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8342*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8342*FLEN/8, x4, x1, x2)

inst_4172:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807ffff0; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8344*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8344*FLEN/8, x4, x1, x2)

inst_4173:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807ffff0; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8346*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8346*FLEN/8, x4, x1, x2)

inst_4174:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807ffff0; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8348*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8348*FLEN/8, x4, x1, x2)

inst_4175:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807ffff0; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8350*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8350*FLEN/8, x4, x1, x2)

inst_4176:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807ffff8; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8352*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8352*FLEN/8, x4, x1, x2)

inst_4177:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807ffff8; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8354*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8354*FLEN/8, x4, x1, x2)

inst_4178:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807ffff8; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8356*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8356*FLEN/8, x4, x1, x2)

inst_4179:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807ffff8; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8358*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8358*FLEN/8, x4, x1, x2)

inst_4180:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807ffffc; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8360*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8360*FLEN/8, x4, x1, x2)

inst_4181:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807ffffc; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8362*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8362*FLEN/8, x4, x1, x2)

inst_4182:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807ffffc; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8364*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8364*FLEN/8, x4, x1, x2)

inst_4183:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807ffffc; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8366*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8366*FLEN/8, x4, x1, x2)

inst_4184:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807ffffe; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8368*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8368*FLEN/8, x4, x1, x2)

inst_4185:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807ffffe; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8370*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8370*FLEN/8, x4, x1, x2)

inst_4186:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807ffffe; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8372*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8372*FLEN/8, x4, x1, x2)

inst_4187:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807ffffe; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8374*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8374*FLEN/8, x4, x1, x2)

inst_4188:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8376*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8376*FLEN/8, x4, x1, x2)

inst_4189:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8378*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8378*FLEN/8, x4, x1, x2)

inst_4190:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80000003; 
   valaddr_reg:x3; val_offset:8380*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8380*FLEN/8, x4, x1, x2)

inst_4191:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80000007; 
   valaddr_reg:x3; val_offset:8382*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8382*FLEN/8, x4, x1, x2)

inst_4192:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x8000000f; 
   valaddr_reg:x3; val_offset:8384*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8384*FLEN/8, x4, x1, x2)

inst_4193:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x8000001f; 
   valaddr_reg:x3; val_offset:8386*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8386*FLEN/8, x4, x1, x2)

inst_4194:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x8000003f; 
   valaddr_reg:x3; val_offset:8388*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8388*FLEN/8, x4, x1, x2)

inst_4195:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x8000007f; 
   valaddr_reg:x3; val_offset:8390*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8390*FLEN/8, x4, x1, x2)

inst_4196:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x800000ff; 
   valaddr_reg:x3; val_offset:8392*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8392*FLEN/8, x4, x1, x2)

inst_4197:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x800001ff; 
   valaddr_reg:x3; val_offset:8394*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8394*FLEN/8, x4, x1, x2)

inst_4198:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x800003ff; 
   valaddr_reg:x3; val_offset:8396*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8396*FLEN/8, x4, x1, x2)

inst_4199:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x800007ff; 
   valaddr_reg:x3; val_offset:8398*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8398*FLEN/8, x4, x1, x2)

inst_4200:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80000fff; 
   valaddr_reg:x3; val_offset:8400*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8400*FLEN/8, x4, x1, x2)

inst_4201:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80001fff; 
   valaddr_reg:x3; val_offset:8402*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8402*FLEN/8, x4, x1, x2)

inst_4202:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80003fff; 
   valaddr_reg:x3; val_offset:8404*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8404*FLEN/8, x4, x1, x2)

inst_4203:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80007fff; 
   valaddr_reg:x3; val_offset:8406*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8406*FLEN/8, x4, x1, x2)

inst_4204:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x8000ffff; 
   valaddr_reg:x3; val_offset:8408*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8408*FLEN/8, x4, x1, x2)

inst_4205:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x8001ffff; 
   valaddr_reg:x3; val_offset:8410*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8410*FLEN/8, x4, x1, x2)

inst_4206:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x8003ffff; 
   valaddr_reg:x3; val_offset:8412*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8412*FLEN/8, x4, x1, x2)

inst_4207:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x8007ffff; 
   valaddr_reg:x3; val_offset:8414*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8414*FLEN/8, x4, x1, x2)

inst_4208:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x800fffff; 
   valaddr_reg:x3; val_offset:8416*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8416*FLEN/8, x4, x1, x2)

inst_4209:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80199999; 
   valaddr_reg:x3; val_offset:8418*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8418*FLEN/8, x4, x1, x2)

inst_4210:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x801fffff; 
   valaddr_reg:x3; val_offset:8420*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8420*FLEN/8, x4, x1, x2)

inst_4211:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80249249; 
   valaddr_reg:x3; val_offset:8422*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8422*FLEN/8, x4, x1, x2)

inst_4212:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80333333; 
   valaddr_reg:x3; val_offset:8424*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8424*FLEN/8, x4, x1, x2)

inst_4213:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x8036db6d; 
   valaddr_reg:x3; val_offset:8426*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8426*FLEN/8, x4, x1, x2)

inst_4214:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x803bbbbb; 
   valaddr_reg:x3; val_offset:8428*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8428*FLEN/8, x4, x1, x2)

inst_4215:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x803fffff; 
   valaddr_reg:x3; val_offset:8430*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8430*FLEN/8, x4, x1, x2)

inst_4216:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80400000; 
   valaddr_reg:x3; val_offset:8432*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8432*FLEN/8, x4, x1, x2)

inst_4217:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80444444; 
   valaddr_reg:x3; val_offset:8434*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8434*FLEN/8, x4, x1, x2)

inst_4218:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x804ccccc; 
   valaddr_reg:x3; val_offset:8436*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8436*FLEN/8, x4, x1, x2)

inst_4219:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x805b6db6; 
   valaddr_reg:x3; val_offset:8438*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8438*FLEN/8, x4, x1, x2)

inst_4220:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80600000; 
   valaddr_reg:x3; val_offset:8440*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8440*FLEN/8, x4, x1, x2)

inst_4221:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80666666; 
   valaddr_reg:x3; val_offset:8442*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8442*FLEN/8, x4, x1, x2)

inst_4222:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x806db6db; 
   valaddr_reg:x3; val_offset:8444*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8444*FLEN/8, x4, x1, x2)

inst_4223:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80700000; 
   valaddr_reg:x3; val_offset:8446*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8446*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_34)

inst_4224:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80780000; 
   valaddr_reg:x3; val_offset:8448*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8448*FLEN/8, x4, x1, x2)

inst_4225:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x807c0000; 
   valaddr_reg:x3; val_offset:8450*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8450*FLEN/8, x4, x1, x2)

inst_4226:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x807e0000; 
   valaddr_reg:x3; val_offset:8452*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8452*FLEN/8, x4, x1, x2)

inst_4227:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x807f0000; 
   valaddr_reg:x3; val_offset:8454*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8454*FLEN/8, x4, x1, x2)

inst_4228:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x807f8000; 
   valaddr_reg:x3; val_offset:8456*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8456*FLEN/8, x4, x1, x2)

inst_4229:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x807fc000; 
   valaddr_reg:x3; val_offset:8458*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8458*FLEN/8, x4, x1, x2)

inst_4230:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x807fe000; 
   valaddr_reg:x3; val_offset:8460*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8460*FLEN/8, x4, x1, x2)

inst_4231:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x807ff000; 
   valaddr_reg:x3; val_offset:8462*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8462*FLEN/8, x4, x1, x2)

inst_4232:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x807ff800; 
   valaddr_reg:x3; val_offset:8464*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8464*FLEN/8, x4, x1, x2)

inst_4233:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x807ffc00; 
   valaddr_reg:x3; val_offset:8466*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8466*FLEN/8, x4, x1, x2)

inst_4234:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x807ffe00; 
   valaddr_reg:x3; val_offset:8468*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8468*FLEN/8, x4, x1, x2)

inst_4235:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x807fff00; 
   valaddr_reg:x3; val_offset:8470*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8470*FLEN/8, x4, x1, x2)

inst_4236:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x807fff80; 
   valaddr_reg:x3; val_offset:8472*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8472*FLEN/8, x4, x1, x2)

inst_4237:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x807fffc0; 
   valaddr_reg:x3; val_offset:8474*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8474*FLEN/8, x4, x1, x2)

inst_4238:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x807fffe0; 
   valaddr_reg:x3; val_offset:8476*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8476*FLEN/8, x4, x1, x2)

inst_4239:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x807ffff0; 
   valaddr_reg:x3; val_offset:8478*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8478*FLEN/8, x4, x1, x2)

inst_4240:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x807ffff8; 
   valaddr_reg:x3; val_offset:8480*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8480*FLEN/8, x4, x1, x2)

inst_4241:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x807ffffc; 
   valaddr_reg:x3; val_offset:8482*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8482*FLEN/8, x4, x1, x2)

inst_4242:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x807ffffe; 
   valaddr_reg:x3; val_offset:8484*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8484*FLEN/8, x4, x1, x2)

inst_4243:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8486*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8486*FLEN/8, x4, x1, x2)

inst_4244:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8488*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8488*FLEN/8, x4, x1, x2)

inst_4245:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80800001; 
   valaddr_reg:x3; val_offset:8490*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8490*FLEN/8, x4, x1, x2)

inst_4246:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80800003; 
   valaddr_reg:x3; val_offset:8492*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8492*FLEN/8, x4, x1, x2)

inst_4247:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80800007; 
   valaddr_reg:x3; val_offset:8494*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8494*FLEN/8, x4, x1, x2)

inst_4248:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x8080000f; 
   valaddr_reg:x3; val_offset:8496*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8496*FLEN/8, x4, x1, x2)

inst_4249:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x8080001f; 
   valaddr_reg:x3; val_offset:8498*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8498*FLEN/8, x4, x1, x2)

inst_4250:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x8080003f; 
   valaddr_reg:x3; val_offset:8500*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8500*FLEN/8, x4, x1, x2)

inst_4251:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x8080007f; 
   valaddr_reg:x3; val_offset:8502*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8502*FLEN/8, x4, x1, x2)

inst_4252:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x808000ff; 
   valaddr_reg:x3; val_offset:8504*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8504*FLEN/8, x4, x1, x2)

inst_4253:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x808001ff; 
   valaddr_reg:x3; val_offset:8506*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8506*FLEN/8, x4, x1, x2)

inst_4254:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x808003ff; 
   valaddr_reg:x3; val_offset:8508*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8508*FLEN/8, x4, x1, x2)

inst_4255:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x808007ff; 
   valaddr_reg:x3; val_offset:8510*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8510*FLEN/8, x4, x1, x2)

inst_4256:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80800fff; 
   valaddr_reg:x3; val_offset:8512*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8512*FLEN/8, x4, x1, x2)

inst_4257:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80801fff; 
   valaddr_reg:x3; val_offset:8514*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8514*FLEN/8, x4, x1, x2)

inst_4258:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80803fff; 
   valaddr_reg:x3; val_offset:8516*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8516*FLEN/8, x4, x1, x2)

inst_4259:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80807fff; 
   valaddr_reg:x3; val_offset:8518*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8518*FLEN/8, x4, x1, x2)

inst_4260:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x8080ffff; 
   valaddr_reg:x3; val_offset:8520*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8520*FLEN/8, x4, x1, x2)

inst_4261:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x8081ffff; 
   valaddr_reg:x3; val_offset:8522*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8522*FLEN/8, x4, x1, x2)

inst_4262:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x8083ffff; 
   valaddr_reg:x3; val_offset:8524*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8524*FLEN/8, x4, x1, x2)

inst_4263:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x8087ffff; 
   valaddr_reg:x3; val_offset:8526*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8526*FLEN/8, x4, x1, x2)

inst_4264:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x808fffff; 
   valaddr_reg:x3; val_offset:8528*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8528*FLEN/8, x4, x1, x2)

inst_4265:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x809fffff; 
   valaddr_reg:x3; val_offset:8530*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8530*FLEN/8, x4, x1, x2)

inst_4266:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80bfffff; 
   valaddr_reg:x3; val_offset:8532*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8532*FLEN/8, x4, x1, x2)

inst_4267:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80c00000; 
   valaddr_reg:x3; val_offset:8534*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8534*FLEN/8, x4, x1, x2)

inst_4268:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80e00000; 
   valaddr_reg:x3; val_offset:8536*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8536*FLEN/8, x4, x1, x2)

inst_4269:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80f00000; 
   valaddr_reg:x3; val_offset:8538*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8538*FLEN/8, x4, x1, x2)

inst_4270:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80f80000; 
   valaddr_reg:x3; val_offset:8540*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8540*FLEN/8, x4, x1, x2)

inst_4271:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80fc0000; 
   valaddr_reg:x3; val_offset:8542*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8542*FLEN/8, x4, x1, x2)

inst_4272:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80fe0000; 
   valaddr_reg:x3; val_offset:8544*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8544*FLEN/8, x4, x1, x2)

inst_4273:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80ff0000; 
   valaddr_reg:x3; val_offset:8546*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8546*FLEN/8, x4, x1, x2)

inst_4274:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80ff8000; 
   valaddr_reg:x3; val_offset:8548*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8548*FLEN/8, x4, x1, x2)

inst_4275:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80ffc000; 
   valaddr_reg:x3; val_offset:8550*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8550*FLEN/8, x4, x1, x2)

inst_4276:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80ffe000; 
   valaddr_reg:x3; val_offset:8552*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8552*FLEN/8, x4, x1, x2)

inst_4277:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80fff000; 
   valaddr_reg:x3; val_offset:8554*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8554*FLEN/8, x4, x1, x2)

inst_4278:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80fff800; 
   valaddr_reg:x3; val_offset:8556*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8556*FLEN/8, x4, x1, x2)

inst_4279:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80fffc00; 
   valaddr_reg:x3; val_offset:8558*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8558*FLEN/8, x4, x1, x2)

inst_4280:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80fffe00; 
   valaddr_reg:x3; val_offset:8560*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8560*FLEN/8, x4, x1, x2)

inst_4281:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80ffff00; 
   valaddr_reg:x3; val_offset:8562*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8562*FLEN/8, x4, x1, x2)

inst_4282:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80ffff80; 
   valaddr_reg:x3; val_offset:8564*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8564*FLEN/8, x4, x1, x2)

inst_4283:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80ffffc0; 
   valaddr_reg:x3; val_offset:8566*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8566*FLEN/8, x4, x1, x2)

inst_4284:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80ffffe0; 
   valaddr_reg:x3; val_offset:8568*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8568*FLEN/8, x4, x1, x2)

inst_4285:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80fffff0; 
   valaddr_reg:x3; val_offset:8570*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8570*FLEN/8, x4, x1, x2)

inst_4286:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80fffff8; 
   valaddr_reg:x3; val_offset:8572*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8572*FLEN/8, x4, x1, x2)

inst_4287:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80fffffc; 
   valaddr_reg:x3; val_offset:8574*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8574*FLEN/8, x4, x1, x2)

inst_4288:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80fffffe; 
   valaddr_reg:x3; val_offset:8576*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8576*FLEN/8, x4, x1, x2)

inst_4289:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x80ffffff; 
   valaddr_reg:x3; val_offset:8578*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8578*FLEN/8, x4, x1, x2)

inst_4290:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81000000; 
   valaddr_reg:x3; val_offset:8580*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8580*FLEN/8, x4, x1, x2)

inst_4291:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81000001; 
   valaddr_reg:x3; val_offset:8582*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8582*FLEN/8, x4, x1, x2)

inst_4292:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81000003; 
   valaddr_reg:x3; val_offset:8584*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8584*FLEN/8, x4, x1, x2)

inst_4293:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81000007; 
   valaddr_reg:x3; val_offset:8586*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8586*FLEN/8, x4, x1, x2)

inst_4294:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x8100000f; 
   valaddr_reg:x3; val_offset:8588*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8588*FLEN/8, x4, x1, x2)

inst_4295:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x8100001f; 
   valaddr_reg:x3; val_offset:8590*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8590*FLEN/8, x4, x1, x2)

inst_4296:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x8100003f; 
   valaddr_reg:x3; val_offset:8592*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8592*FLEN/8, x4, x1, x2)

inst_4297:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x8100007f; 
   valaddr_reg:x3; val_offset:8594*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8594*FLEN/8, x4, x1, x2)

inst_4298:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x810000ff; 
   valaddr_reg:x3; val_offset:8596*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8596*FLEN/8, x4, x1, x2)

inst_4299:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x810001ff; 
   valaddr_reg:x3; val_offset:8598*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8598*FLEN/8, x4, x1, x2)

inst_4300:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x810003ff; 
   valaddr_reg:x3; val_offset:8600*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8600*FLEN/8, x4, x1, x2)

inst_4301:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x810007ff; 
   valaddr_reg:x3; val_offset:8602*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8602*FLEN/8, x4, x1, x2)

inst_4302:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81000fff; 
   valaddr_reg:x3; val_offset:8604*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8604*FLEN/8, x4, x1, x2)

inst_4303:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81001fff; 
   valaddr_reg:x3; val_offset:8606*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8606*FLEN/8, x4, x1, x2)

inst_4304:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81003fff; 
   valaddr_reg:x3; val_offset:8608*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8608*FLEN/8, x4, x1, x2)

inst_4305:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81007fff; 
   valaddr_reg:x3; val_offset:8610*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8610*FLEN/8, x4, x1, x2)

inst_4306:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x8100ffff; 
   valaddr_reg:x3; val_offset:8612*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8612*FLEN/8, x4, x1, x2)

inst_4307:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x8101ffff; 
   valaddr_reg:x3; val_offset:8614*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8614*FLEN/8, x4, x1, x2)

inst_4308:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x8103ffff; 
   valaddr_reg:x3; val_offset:8616*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8616*FLEN/8, x4, x1, x2)

inst_4309:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x8107ffff; 
   valaddr_reg:x3; val_offset:8618*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8618*FLEN/8, x4, x1, x2)

inst_4310:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x810fffff; 
   valaddr_reg:x3; val_offset:8620*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8620*FLEN/8, x4, x1, x2)

inst_4311:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x811fffff; 
   valaddr_reg:x3; val_offset:8622*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8622*FLEN/8, x4, x1, x2)

inst_4312:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x813fffff; 
   valaddr_reg:x3; val_offset:8624*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8624*FLEN/8, x4, x1, x2)

inst_4313:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81400000; 
   valaddr_reg:x3; val_offset:8626*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8626*FLEN/8, x4, x1, x2)

inst_4314:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81600000; 
   valaddr_reg:x3; val_offset:8628*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8628*FLEN/8, x4, x1, x2)

inst_4315:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81700000; 
   valaddr_reg:x3; val_offset:8630*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8630*FLEN/8, x4, x1, x2)

inst_4316:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81780000; 
   valaddr_reg:x3; val_offset:8632*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8632*FLEN/8, x4, x1, x2)

inst_4317:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x817c0000; 
   valaddr_reg:x3; val_offset:8634*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8634*FLEN/8, x4, x1, x2)

inst_4318:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x817e0000; 
   valaddr_reg:x3; val_offset:8636*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8636*FLEN/8, x4, x1, x2)

inst_4319:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x817f0000; 
   valaddr_reg:x3; val_offset:8638*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8638*FLEN/8, x4, x1, x2)

inst_4320:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x817f8000; 
   valaddr_reg:x3; val_offset:8640*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8640*FLEN/8, x4, x1, x2)

inst_4321:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x817fc000; 
   valaddr_reg:x3; val_offset:8642*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8642*FLEN/8, x4, x1, x2)

inst_4322:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x817fe000; 
   valaddr_reg:x3; val_offset:8644*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8644*FLEN/8, x4, x1, x2)

inst_4323:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x817ff000; 
   valaddr_reg:x3; val_offset:8646*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8646*FLEN/8, x4, x1, x2)

inst_4324:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x817ff800; 
   valaddr_reg:x3; val_offset:8648*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8648*FLEN/8, x4, x1, x2)

inst_4325:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x817ffc00; 
   valaddr_reg:x3; val_offset:8650*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8650*FLEN/8, x4, x1, x2)

inst_4326:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x817ffe00; 
   valaddr_reg:x3; val_offset:8652*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8652*FLEN/8, x4, x1, x2)

inst_4327:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x817fff00; 
   valaddr_reg:x3; val_offset:8654*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8654*FLEN/8, x4, x1, x2)

inst_4328:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x817fff80; 
   valaddr_reg:x3; val_offset:8656*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8656*FLEN/8, x4, x1, x2)

inst_4329:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x817fffc0; 
   valaddr_reg:x3; val_offset:8658*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8658*FLEN/8, x4, x1, x2)

inst_4330:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x817fffe0; 
   valaddr_reg:x3; val_offset:8660*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8660*FLEN/8, x4, x1, x2)

inst_4331:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x817ffff0; 
   valaddr_reg:x3; val_offset:8662*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8662*FLEN/8, x4, x1, x2)

inst_4332:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x817ffff8; 
   valaddr_reg:x3; val_offset:8664*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8664*FLEN/8, x4, x1, x2)

inst_4333:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x817ffffc; 
   valaddr_reg:x3; val_offset:8666*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8666*FLEN/8, x4, x1, x2)

inst_4334:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x817ffffe; 
   valaddr_reg:x3; val_offset:8668*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8668*FLEN/8, x4, x1, x2)

inst_4335:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x817fffff; 
   valaddr_reg:x3; val_offset:8670*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8670*FLEN/8, x4, x1, x2)

inst_4336:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81800000; 
   valaddr_reg:x3; val_offset:8672*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8672*FLEN/8, x4, x1, x2)

inst_4337:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81800001; 
   valaddr_reg:x3; val_offset:8674*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8674*FLEN/8, x4, x1, x2)

inst_4338:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81800003; 
   valaddr_reg:x3; val_offset:8676*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8676*FLEN/8, x4, x1, x2)

inst_4339:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81800007; 
   valaddr_reg:x3; val_offset:8678*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8678*FLEN/8, x4, x1, x2)

inst_4340:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x8180000f; 
   valaddr_reg:x3; val_offset:8680*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8680*FLEN/8, x4, x1, x2)

inst_4341:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x8180001f; 
   valaddr_reg:x3; val_offset:8682*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8682*FLEN/8, x4, x1, x2)

inst_4342:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x8180003f; 
   valaddr_reg:x3; val_offset:8684*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8684*FLEN/8, x4, x1, x2)

inst_4343:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x8180007f; 
   valaddr_reg:x3; val_offset:8686*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8686*FLEN/8, x4, x1, x2)

inst_4344:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x818000ff; 
   valaddr_reg:x3; val_offset:8688*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8688*FLEN/8, x4, x1, x2)

inst_4345:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x818001ff; 
   valaddr_reg:x3; val_offset:8690*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8690*FLEN/8, x4, x1, x2)

inst_4346:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x818003ff; 
   valaddr_reg:x3; val_offset:8692*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8692*FLEN/8, x4, x1, x2)

inst_4347:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x818007ff; 
   valaddr_reg:x3; val_offset:8694*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8694*FLEN/8, x4, x1, x2)

inst_4348:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81800fff; 
   valaddr_reg:x3; val_offset:8696*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8696*FLEN/8, x4, x1, x2)

inst_4349:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81801fff; 
   valaddr_reg:x3; val_offset:8698*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8698*FLEN/8, x4, x1, x2)

inst_4350:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81803fff; 
   valaddr_reg:x3; val_offset:8700*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8700*FLEN/8, x4, x1, x2)

inst_4351:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81807fff; 
   valaddr_reg:x3; val_offset:8702*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8702*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_35)

inst_4352:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x8180ffff; 
   valaddr_reg:x3; val_offset:8704*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8704*FLEN/8, x4, x1, x2)

inst_4353:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x8181ffff; 
   valaddr_reg:x3; val_offset:8706*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8706*FLEN/8, x4, x1, x2)

inst_4354:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x8183ffff; 
   valaddr_reg:x3; val_offset:8708*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8708*FLEN/8, x4, x1, x2)

inst_4355:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x8187ffff; 
   valaddr_reg:x3; val_offset:8710*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8710*FLEN/8, x4, x1, x2)

inst_4356:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x818fffff; 
   valaddr_reg:x3; val_offset:8712*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8712*FLEN/8, x4, x1, x2)

inst_4357:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x819fffff; 
   valaddr_reg:x3; val_offset:8714*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8714*FLEN/8, x4, x1, x2)

inst_4358:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81bfffff; 
   valaddr_reg:x3; val_offset:8716*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8716*FLEN/8, x4, x1, x2)

inst_4359:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81c00000; 
   valaddr_reg:x3; val_offset:8718*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8718*FLEN/8, x4, x1, x2)

inst_4360:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81e00000; 
   valaddr_reg:x3; val_offset:8720*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8720*FLEN/8, x4, x1, x2)

inst_4361:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81f00000; 
   valaddr_reg:x3; val_offset:8722*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8722*FLEN/8, x4, x1, x2)

inst_4362:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81f80000; 
   valaddr_reg:x3; val_offset:8724*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8724*FLEN/8, x4, x1, x2)

inst_4363:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81fc0000; 
   valaddr_reg:x3; val_offset:8726*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8726*FLEN/8, x4, x1, x2)

inst_4364:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81fe0000; 
   valaddr_reg:x3; val_offset:8728*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8728*FLEN/8, x4, x1, x2)

inst_4365:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81ff0000; 
   valaddr_reg:x3; val_offset:8730*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8730*FLEN/8, x4, x1, x2)

inst_4366:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81ff8000; 
   valaddr_reg:x3; val_offset:8732*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8732*FLEN/8, x4, x1, x2)

inst_4367:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81ffc000; 
   valaddr_reg:x3; val_offset:8734*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8734*FLEN/8, x4, x1, x2)

inst_4368:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81ffe000; 
   valaddr_reg:x3; val_offset:8736*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8736*FLEN/8, x4, x1, x2)

inst_4369:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81fff000; 
   valaddr_reg:x3; val_offset:8738*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8738*FLEN/8, x4, x1, x2)

inst_4370:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81fff800; 
   valaddr_reg:x3; val_offset:8740*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8740*FLEN/8, x4, x1, x2)

inst_4371:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81fffc00; 
   valaddr_reg:x3; val_offset:8742*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8742*FLEN/8, x4, x1, x2)

inst_4372:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81fffe00; 
   valaddr_reg:x3; val_offset:8744*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8744*FLEN/8, x4, x1, x2)

inst_4373:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81ffff00; 
   valaddr_reg:x3; val_offset:8746*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8746*FLEN/8, x4, x1, x2)

inst_4374:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81ffff80; 
   valaddr_reg:x3; val_offset:8748*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8748*FLEN/8, x4, x1, x2)

inst_4375:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81ffffc0; 
   valaddr_reg:x3; val_offset:8750*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8750*FLEN/8, x4, x1, x2)

inst_4376:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81ffffe0; 
   valaddr_reg:x3; val_offset:8752*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8752*FLEN/8, x4, x1, x2)

inst_4377:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81fffff0; 
   valaddr_reg:x3; val_offset:8754*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8754*FLEN/8, x4, x1, x2)

inst_4378:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81fffff8; 
   valaddr_reg:x3; val_offset:8756*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8756*FLEN/8, x4, x1, x2)

inst_4379:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81fffffc; 
   valaddr_reg:x3; val_offset:8758*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8758*FLEN/8, x4, x1, x2)

inst_4380:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81fffffe; 
   valaddr_reg:x3; val_offset:8760*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8760*FLEN/8, x4, x1, x2)

inst_4381:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0x81ffffff; 
   valaddr_reg:x3; val_offset:8762*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8762*FLEN/8, x4, x1, x2)

inst_4382:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc0000000; 
   valaddr_reg:x3; val_offset:8764*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8764*FLEN/8, x4, x1, x2)

inst_4383:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc0000001; 
   valaddr_reg:x3; val_offset:8766*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8766*FLEN/8, x4, x1, x2)

inst_4384:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc0000003; 
   valaddr_reg:x3; val_offset:8768*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8768*FLEN/8, x4, x1, x2)

inst_4385:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc0000007; 
   valaddr_reg:x3; val_offset:8770*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8770*FLEN/8, x4, x1, x2)

inst_4386:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc000000f; 
   valaddr_reg:x3; val_offset:8772*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8772*FLEN/8, x4, x1, x2)

inst_4387:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc000001f; 
   valaddr_reg:x3; val_offset:8774*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8774*FLEN/8, x4, x1, x2)

inst_4388:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc000003f; 
   valaddr_reg:x3; val_offset:8776*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8776*FLEN/8, x4, x1, x2)

inst_4389:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc000007f; 
   valaddr_reg:x3; val_offset:8778*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8778*FLEN/8, x4, x1, x2)

inst_4390:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc00000ff; 
   valaddr_reg:x3; val_offset:8780*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8780*FLEN/8, x4, x1, x2)

inst_4391:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc00001ff; 
   valaddr_reg:x3; val_offset:8782*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8782*FLEN/8, x4, x1, x2)

inst_4392:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc00003ff; 
   valaddr_reg:x3; val_offset:8784*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8784*FLEN/8, x4, x1, x2)

inst_4393:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc00007ff; 
   valaddr_reg:x3; val_offset:8786*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8786*FLEN/8, x4, x1, x2)

inst_4394:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc0000fff; 
   valaddr_reg:x3; val_offset:8788*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8788*FLEN/8, x4, x1, x2)

inst_4395:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc0001fff; 
   valaddr_reg:x3; val_offset:8790*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8790*FLEN/8, x4, x1, x2)

inst_4396:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc0003fff; 
   valaddr_reg:x3; val_offset:8792*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8792*FLEN/8, x4, x1, x2)

inst_4397:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc0007fff; 
   valaddr_reg:x3; val_offset:8794*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8794*FLEN/8, x4, x1, x2)

inst_4398:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc000ffff; 
   valaddr_reg:x3; val_offset:8796*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8796*FLEN/8, x4, x1, x2)

inst_4399:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc001ffff; 
   valaddr_reg:x3; val_offset:8798*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8798*FLEN/8, x4, x1, x2)

inst_4400:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc003ffff; 
   valaddr_reg:x3; val_offset:8800*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8800*FLEN/8, x4, x1, x2)

inst_4401:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc007ffff; 
   valaddr_reg:x3; val_offset:8802*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8802*FLEN/8, x4, x1, x2)

inst_4402:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc00fffff; 
   valaddr_reg:x3; val_offset:8804*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8804*FLEN/8, x4, x1, x2)

inst_4403:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc01fffff; 
   valaddr_reg:x3; val_offset:8806*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8806*FLEN/8, x4, x1, x2)

inst_4404:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc03fffff; 
   valaddr_reg:x3; val_offset:8808*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8808*FLEN/8, x4, x1, x2)

inst_4405:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc0400000; 
   valaddr_reg:x3; val_offset:8810*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8810*FLEN/8, x4, x1, x2)

inst_4406:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc0600000; 
   valaddr_reg:x3; val_offset:8812*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8812*FLEN/8, x4, x1, x2)

inst_4407:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc0700000; 
   valaddr_reg:x3; val_offset:8814*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8814*FLEN/8, x4, x1, x2)

inst_4408:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc0780000; 
   valaddr_reg:x3; val_offset:8816*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8816*FLEN/8, x4, x1, x2)

inst_4409:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc07c0000; 
   valaddr_reg:x3; val_offset:8818*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8818*FLEN/8, x4, x1, x2)

inst_4410:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc07e0000; 
   valaddr_reg:x3; val_offset:8820*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8820*FLEN/8, x4, x1, x2)

inst_4411:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc07f0000; 
   valaddr_reg:x3; val_offset:8822*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8822*FLEN/8, x4, x1, x2)

inst_4412:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc07f8000; 
   valaddr_reg:x3; val_offset:8824*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8824*FLEN/8, x4, x1, x2)

inst_4413:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc07fc000; 
   valaddr_reg:x3; val_offset:8826*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8826*FLEN/8, x4, x1, x2)

inst_4414:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc07fe000; 
   valaddr_reg:x3; val_offset:8828*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8828*FLEN/8, x4, x1, x2)

inst_4415:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc07ff000; 
   valaddr_reg:x3; val_offset:8830*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8830*FLEN/8, x4, x1, x2)

inst_4416:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc07ff800; 
   valaddr_reg:x3; val_offset:8832*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8832*FLEN/8, x4, x1, x2)

inst_4417:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc07ffc00; 
   valaddr_reg:x3; val_offset:8834*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8834*FLEN/8, x4, x1, x2)

inst_4418:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc07ffe00; 
   valaddr_reg:x3; val_offset:8836*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8836*FLEN/8, x4, x1, x2)

inst_4419:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc07fff00; 
   valaddr_reg:x3; val_offset:8838*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8838*FLEN/8, x4, x1, x2)

inst_4420:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc07fff80; 
   valaddr_reg:x3; val_offset:8840*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8840*FLEN/8, x4, x1, x2)

inst_4421:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc07fffc0; 
   valaddr_reg:x3; val_offset:8842*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8842*FLEN/8, x4, x1, x2)

inst_4422:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc07fffe0; 
   valaddr_reg:x3; val_offset:8844*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8844*FLEN/8, x4, x1, x2)

inst_4423:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc07ffff0; 
   valaddr_reg:x3; val_offset:8846*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8846*FLEN/8, x4, x1, x2)

inst_4424:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc07ffff8; 
   valaddr_reg:x3; val_offset:8848*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8848*FLEN/8, x4, x1, x2)

inst_4425:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc07ffffc; 
   valaddr_reg:x3; val_offset:8850*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8850*FLEN/8, x4, x1, x2)

inst_4426:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc07ffffe; 
   valaddr_reg:x3; val_offset:8852*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8852*FLEN/8, x4, x1, x2)

inst_4427:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x807fffff; op2val:0xc07fffff; 
   valaddr_reg:x3; val_offset:8854*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8854*FLEN/8, x4, x1, x2)

inst_4428:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:8856*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8856*FLEN/8, x4, x1, x2)

inst_4429:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:8858*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8858*FLEN/8, x4, x1, x2)

inst_4430:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80000003; 
   valaddr_reg:x3; val_offset:8860*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8860*FLEN/8, x4, x1, x2)

inst_4431:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80000007; 
   valaddr_reg:x3; val_offset:8862*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8862*FLEN/8, x4, x1, x2)

inst_4432:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8000000f; 
   valaddr_reg:x3; val_offset:8864*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8864*FLEN/8, x4, x1, x2)

inst_4433:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8000001f; 
   valaddr_reg:x3; val_offset:8866*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8866*FLEN/8, x4, x1, x2)

inst_4434:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8000003f; 
   valaddr_reg:x3; val_offset:8868*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8868*FLEN/8, x4, x1, x2)

inst_4435:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8000007f; 
   valaddr_reg:x3; val_offset:8870*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8870*FLEN/8, x4, x1, x2)

inst_4436:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x800000ff; 
   valaddr_reg:x3; val_offset:8872*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8872*FLEN/8, x4, x1, x2)

inst_4437:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x800001ff; 
   valaddr_reg:x3; val_offset:8874*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8874*FLEN/8, x4, x1, x2)

inst_4438:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x800003ff; 
   valaddr_reg:x3; val_offset:8876*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8876*FLEN/8, x4, x1, x2)

inst_4439:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x800007ff; 
   valaddr_reg:x3; val_offset:8878*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8878*FLEN/8, x4, x1, x2)

inst_4440:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80000fff; 
   valaddr_reg:x3; val_offset:8880*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8880*FLEN/8, x4, x1, x2)

inst_4441:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80001fff; 
   valaddr_reg:x3; val_offset:8882*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8882*FLEN/8, x4, x1, x2)

inst_4442:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80003fff; 
   valaddr_reg:x3; val_offset:8884*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8884*FLEN/8, x4, x1, x2)

inst_4443:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80007fff; 
   valaddr_reg:x3; val_offset:8886*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8886*FLEN/8, x4, x1, x2)

inst_4444:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8000ffff; 
   valaddr_reg:x3; val_offset:8888*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8888*FLEN/8, x4, x1, x2)

inst_4445:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8001ffff; 
   valaddr_reg:x3; val_offset:8890*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8890*FLEN/8, x4, x1, x2)

inst_4446:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8003ffff; 
   valaddr_reg:x3; val_offset:8892*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8892*FLEN/8, x4, x1, x2)

inst_4447:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8007ffff; 
   valaddr_reg:x3; val_offset:8894*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8894*FLEN/8, x4, x1, x2)

inst_4448:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x800fffff; 
   valaddr_reg:x3; val_offset:8896*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8896*FLEN/8, x4, x1, x2)

inst_4449:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x801fffff; 
   valaddr_reg:x3; val_offset:8898*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8898*FLEN/8, x4, x1, x2)

inst_4450:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x803fffff; 
   valaddr_reg:x3; val_offset:8900*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8900*FLEN/8, x4, x1, x2)

inst_4451:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80400000; 
   valaddr_reg:x3; val_offset:8902*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8902*FLEN/8, x4, x1, x2)

inst_4452:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80600000; 
   valaddr_reg:x3; val_offset:8904*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8904*FLEN/8, x4, x1, x2)

inst_4453:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80700000; 
   valaddr_reg:x3; val_offset:8906*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8906*FLEN/8, x4, x1, x2)

inst_4454:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80780000; 
   valaddr_reg:x3; val_offset:8908*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8908*FLEN/8, x4, x1, x2)

inst_4455:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x807c0000; 
   valaddr_reg:x3; val_offset:8910*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8910*FLEN/8, x4, x1, x2)

inst_4456:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x807e0000; 
   valaddr_reg:x3; val_offset:8912*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8912*FLEN/8, x4, x1, x2)

inst_4457:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x807f0000; 
   valaddr_reg:x3; val_offset:8914*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8914*FLEN/8, x4, x1, x2)

inst_4458:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x807f8000; 
   valaddr_reg:x3; val_offset:8916*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8916*FLEN/8, x4, x1, x2)

inst_4459:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x807fc000; 
   valaddr_reg:x3; val_offset:8918*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8918*FLEN/8, x4, x1, x2)

inst_4460:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x807fe000; 
   valaddr_reg:x3; val_offset:8920*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8920*FLEN/8, x4, x1, x2)

inst_4461:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x807ff000; 
   valaddr_reg:x3; val_offset:8922*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8922*FLEN/8, x4, x1, x2)

inst_4462:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x807ff800; 
   valaddr_reg:x3; val_offset:8924*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8924*FLEN/8, x4, x1, x2)

inst_4463:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x807ffc00; 
   valaddr_reg:x3; val_offset:8926*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8926*FLEN/8, x4, x1, x2)

inst_4464:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x807ffe00; 
   valaddr_reg:x3; val_offset:8928*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8928*FLEN/8, x4, x1, x2)

inst_4465:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x807fff00; 
   valaddr_reg:x3; val_offset:8930*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8930*FLEN/8, x4, x1, x2)

inst_4466:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x807fff80; 
   valaddr_reg:x3; val_offset:8932*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8932*FLEN/8, x4, x1, x2)

inst_4467:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x807fffc0; 
   valaddr_reg:x3; val_offset:8934*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8934*FLEN/8, x4, x1, x2)

inst_4468:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x807fffe0; 
   valaddr_reg:x3; val_offset:8936*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8936*FLEN/8, x4, x1, x2)

inst_4469:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x807ffff0; 
   valaddr_reg:x3; val_offset:8938*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8938*FLEN/8, x4, x1, x2)

inst_4470:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x807ffff8; 
   valaddr_reg:x3; val_offset:8940*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8940*FLEN/8, x4, x1, x2)

inst_4471:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x807ffffc; 
   valaddr_reg:x3; val_offset:8942*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8942*FLEN/8, x4, x1, x2)

inst_4472:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x807ffffe; 
   valaddr_reg:x3; val_offset:8944*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8944*FLEN/8, x4, x1, x2)

inst_4473:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:8946*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8946*FLEN/8, x4, x1, x2)

inst_4474:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:8948*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8948*FLEN/8, x4, x1, x2)

inst_4475:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80800001; 
   valaddr_reg:x3; val_offset:8950*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8950*FLEN/8, x4, x1, x2)

inst_4476:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80800003; 
   valaddr_reg:x3; val_offset:8952*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8952*FLEN/8, x4, x1, x2)

inst_4477:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80800007; 
   valaddr_reg:x3; val_offset:8954*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8954*FLEN/8, x4, x1, x2)

inst_4478:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8080000f; 
   valaddr_reg:x3; val_offset:8956*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8956*FLEN/8, x4, x1, x2)

inst_4479:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8080001f; 
   valaddr_reg:x3; val_offset:8958*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8958*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_36)

inst_4480:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8080003f; 
   valaddr_reg:x3; val_offset:8960*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8960*FLEN/8, x4, x1, x2)

inst_4481:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8080007f; 
   valaddr_reg:x3; val_offset:8962*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8962*FLEN/8, x4, x1, x2)

inst_4482:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x808000ff; 
   valaddr_reg:x3; val_offset:8964*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8964*FLEN/8, x4, x1, x2)

inst_4483:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x808001ff; 
   valaddr_reg:x3; val_offset:8966*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8966*FLEN/8, x4, x1, x2)

inst_4484:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x808003ff; 
   valaddr_reg:x3; val_offset:8968*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8968*FLEN/8, x4, x1, x2)

inst_4485:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x808007ff; 
   valaddr_reg:x3; val_offset:8970*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8970*FLEN/8, x4, x1, x2)

inst_4486:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80800fff; 
   valaddr_reg:x3; val_offset:8972*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8972*FLEN/8, x4, x1, x2)

inst_4487:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80801fff; 
   valaddr_reg:x3; val_offset:8974*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8974*FLEN/8, x4, x1, x2)

inst_4488:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80803fff; 
   valaddr_reg:x3; val_offset:8976*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8976*FLEN/8, x4, x1, x2)

inst_4489:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80807fff; 
   valaddr_reg:x3; val_offset:8978*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8978*FLEN/8, x4, x1, x2)

inst_4490:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8080ffff; 
   valaddr_reg:x3; val_offset:8980*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8980*FLEN/8, x4, x1, x2)

inst_4491:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8081ffff; 
   valaddr_reg:x3; val_offset:8982*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8982*FLEN/8, x4, x1, x2)

inst_4492:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8083ffff; 
   valaddr_reg:x3; val_offset:8984*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8984*FLEN/8, x4, x1, x2)

inst_4493:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8087ffff; 
   valaddr_reg:x3; val_offset:8986*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8986*FLEN/8, x4, x1, x2)

inst_4494:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x808fffff; 
   valaddr_reg:x3; val_offset:8988*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8988*FLEN/8, x4, x1, x2)

inst_4495:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80999999; 
   valaddr_reg:x3; val_offset:8990*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8990*FLEN/8, x4, x1, x2)

inst_4496:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x809fffff; 
   valaddr_reg:x3; val_offset:8992*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8992*FLEN/8, x4, x1, x2)

inst_4497:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80a49249; 
   valaddr_reg:x3; val_offset:8994*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8994*FLEN/8, x4, x1, x2)

inst_4498:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80b33333; 
   valaddr_reg:x3; val_offset:8996*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8996*FLEN/8, x4, x1, x2)

inst_4499:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80b6db6d; 
   valaddr_reg:x3; val_offset:8998*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 8998*FLEN/8, x4, x1, x2)

inst_4500:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80bbbbbb; 
   valaddr_reg:x3; val_offset:9000*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9000*FLEN/8, x4, x1, x2)

inst_4501:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80bfffff; 
   valaddr_reg:x3; val_offset:9002*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9002*FLEN/8, x4, x1, x2)

inst_4502:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80c00000; 
   valaddr_reg:x3; val_offset:9004*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9004*FLEN/8, x4, x1, x2)

inst_4503:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80c44444; 
   valaddr_reg:x3; val_offset:9006*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9006*FLEN/8, x4, x1, x2)

inst_4504:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80cccccc; 
   valaddr_reg:x3; val_offset:9008*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9008*FLEN/8, x4, x1, x2)

inst_4505:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80db6db6; 
   valaddr_reg:x3; val_offset:9010*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9010*FLEN/8, x4, x1, x2)

inst_4506:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80e00000; 
   valaddr_reg:x3; val_offset:9012*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9012*FLEN/8, x4, x1, x2)

inst_4507:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80e66666; 
   valaddr_reg:x3; val_offset:9014*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9014*FLEN/8, x4, x1, x2)

inst_4508:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80edb6db; 
   valaddr_reg:x3; val_offset:9016*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9016*FLEN/8, x4, x1, x2)

inst_4509:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80f00000; 
   valaddr_reg:x3; val_offset:9018*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9018*FLEN/8, x4, x1, x2)

inst_4510:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80f80000; 
   valaddr_reg:x3; val_offset:9020*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9020*FLEN/8, x4, x1, x2)

inst_4511:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80fc0000; 
   valaddr_reg:x3; val_offset:9022*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9022*FLEN/8, x4, x1, x2)

inst_4512:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80fe0000; 
   valaddr_reg:x3; val_offset:9024*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9024*FLEN/8, x4, x1, x2)

inst_4513:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80ff0000; 
   valaddr_reg:x3; val_offset:9026*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9026*FLEN/8, x4, x1, x2)

inst_4514:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80ff8000; 
   valaddr_reg:x3; val_offset:9028*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9028*FLEN/8, x4, x1, x2)

inst_4515:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80ffc000; 
   valaddr_reg:x3; val_offset:9030*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9030*FLEN/8, x4, x1, x2)

inst_4516:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80ffe000; 
   valaddr_reg:x3; val_offset:9032*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9032*FLEN/8, x4, x1, x2)

inst_4517:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80fff000; 
   valaddr_reg:x3; val_offset:9034*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9034*FLEN/8, x4, x1, x2)

inst_4518:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80fff800; 
   valaddr_reg:x3; val_offset:9036*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9036*FLEN/8, x4, x1, x2)

inst_4519:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80fffc00; 
   valaddr_reg:x3; val_offset:9038*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9038*FLEN/8, x4, x1, x2)

inst_4520:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80fffe00; 
   valaddr_reg:x3; val_offset:9040*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9040*FLEN/8, x4, x1, x2)

inst_4521:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80ffff00; 
   valaddr_reg:x3; val_offset:9042*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9042*FLEN/8, x4, x1, x2)

inst_4522:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80ffff80; 
   valaddr_reg:x3; val_offset:9044*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9044*FLEN/8, x4, x1, x2)

inst_4523:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80ffffc0; 
   valaddr_reg:x3; val_offset:9046*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9046*FLEN/8, x4, x1, x2)

inst_4524:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80ffffe0; 
   valaddr_reg:x3; val_offset:9048*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9048*FLEN/8, x4, x1, x2)

inst_4525:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80fffff0; 
   valaddr_reg:x3; val_offset:9050*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9050*FLEN/8, x4, x1, x2)

inst_4526:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80fffff8; 
   valaddr_reg:x3; val_offset:9052*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9052*FLEN/8, x4, x1, x2)

inst_4527:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80fffffc; 
   valaddr_reg:x3; val_offset:9054*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9054*FLEN/8, x4, x1, x2)

inst_4528:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80fffffe; 
   valaddr_reg:x3; val_offset:9056*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9056*FLEN/8, x4, x1, x2)

inst_4529:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x80ffffff; 
   valaddr_reg:x3; val_offset:9058*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9058*FLEN/8, x4, x1, x2)

inst_4530:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81000000; 
   valaddr_reg:x3; val_offset:9060*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9060*FLEN/8, x4, x1, x2)

inst_4531:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81000001; 
   valaddr_reg:x3; val_offset:9062*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9062*FLEN/8, x4, x1, x2)

inst_4532:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81000003; 
   valaddr_reg:x3; val_offset:9064*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9064*FLEN/8, x4, x1, x2)

inst_4533:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81000007; 
   valaddr_reg:x3; val_offset:9066*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9066*FLEN/8, x4, x1, x2)

inst_4534:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8100000f; 
   valaddr_reg:x3; val_offset:9068*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9068*FLEN/8, x4, x1, x2)

inst_4535:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8100001f; 
   valaddr_reg:x3; val_offset:9070*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9070*FLEN/8, x4, x1, x2)

inst_4536:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8100003f; 
   valaddr_reg:x3; val_offset:9072*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9072*FLEN/8, x4, x1, x2)

inst_4537:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8100007f; 
   valaddr_reg:x3; val_offset:9074*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9074*FLEN/8, x4, x1, x2)

inst_4538:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x810000ff; 
   valaddr_reg:x3; val_offset:9076*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9076*FLEN/8, x4, x1, x2)

inst_4539:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x810001ff; 
   valaddr_reg:x3; val_offset:9078*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9078*FLEN/8, x4, x1, x2)

inst_4540:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x810003ff; 
   valaddr_reg:x3; val_offset:9080*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9080*FLEN/8, x4, x1, x2)

inst_4541:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x810007ff; 
   valaddr_reg:x3; val_offset:9082*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9082*FLEN/8, x4, x1, x2)

inst_4542:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81000fff; 
   valaddr_reg:x3; val_offset:9084*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9084*FLEN/8, x4, x1, x2)

inst_4543:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81001fff; 
   valaddr_reg:x3; val_offset:9086*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9086*FLEN/8, x4, x1, x2)

inst_4544:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81003fff; 
   valaddr_reg:x3; val_offset:9088*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9088*FLEN/8, x4, x1, x2)

inst_4545:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81007fff; 
   valaddr_reg:x3; val_offset:9090*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9090*FLEN/8, x4, x1, x2)

inst_4546:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8100ffff; 
   valaddr_reg:x3; val_offset:9092*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9092*FLEN/8, x4, x1, x2)

inst_4547:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8101ffff; 
   valaddr_reg:x3; val_offset:9094*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9094*FLEN/8, x4, x1, x2)

inst_4548:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8103ffff; 
   valaddr_reg:x3; val_offset:9096*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9096*FLEN/8, x4, x1, x2)

inst_4549:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8107ffff; 
   valaddr_reg:x3; val_offset:9098*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9098*FLEN/8, x4, x1, x2)

inst_4550:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x810fffff; 
   valaddr_reg:x3; val_offset:9100*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9100*FLEN/8, x4, x1, x2)

inst_4551:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x811fffff; 
   valaddr_reg:x3; val_offset:9102*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9102*FLEN/8, x4, x1, x2)

inst_4552:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x813fffff; 
   valaddr_reg:x3; val_offset:9104*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9104*FLEN/8, x4, x1, x2)

inst_4553:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81400000; 
   valaddr_reg:x3; val_offset:9106*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9106*FLEN/8, x4, x1, x2)

inst_4554:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81600000; 
   valaddr_reg:x3; val_offset:9108*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9108*FLEN/8, x4, x1, x2)

inst_4555:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81700000; 
   valaddr_reg:x3; val_offset:9110*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9110*FLEN/8, x4, x1, x2)

inst_4556:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81780000; 
   valaddr_reg:x3; val_offset:9112*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9112*FLEN/8, x4, x1, x2)

inst_4557:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x817c0000; 
   valaddr_reg:x3; val_offset:9114*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9114*FLEN/8, x4, x1, x2)

inst_4558:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x817e0000; 
   valaddr_reg:x3; val_offset:9116*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9116*FLEN/8, x4, x1, x2)

inst_4559:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x817f0000; 
   valaddr_reg:x3; val_offset:9118*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9118*FLEN/8, x4, x1, x2)

inst_4560:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x817f8000; 
   valaddr_reg:x3; val_offset:9120*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9120*FLEN/8, x4, x1, x2)

inst_4561:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x817fc000; 
   valaddr_reg:x3; val_offset:9122*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9122*FLEN/8, x4, x1, x2)

inst_4562:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x817fe000; 
   valaddr_reg:x3; val_offset:9124*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9124*FLEN/8, x4, x1, x2)

inst_4563:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x817ff000; 
   valaddr_reg:x3; val_offset:9126*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9126*FLEN/8, x4, x1, x2)

inst_4564:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x817ff800; 
   valaddr_reg:x3; val_offset:9128*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9128*FLEN/8, x4, x1, x2)

inst_4565:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x817ffc00; 
   valaddr_reg:x3; val_offset:9130*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9130*FLEN/8, x4, x1, x2)

inst_4566:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x817ffe00; 
   valaddr_reg:x3; val_offset:9132*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9132*FLEN/8, x4, x1, x2)

inst_4567:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x817fff00; 
   valaddr_reg:x3; val_offset:9134*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9134*FLEN/8, x4, x1, x2)

inst_4568:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x817fff80; 
   valaddr_reg:x3; val_offset:9136*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9136*FLEN/8, x4, x1, x2)

inst_4569:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x817fffc0; 
   valaddr_reg:x3; val_offset:9138*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9138*FLEN/8, x4, x1, x2)

inst_4570:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x817fffe0; 
   valaddr_reg:x3; val_offset:9140*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9140*FLEN/8, x4, x1, x2)

inst_4571:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x817ffff0; 
   valaddr_reg:x3; val_offset:9142*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9142*FLEN/8, x4, x1, x2)

inst_4572:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x817ffff8; 
   valaddr_reg:x3; val_offset:9144*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9144*FLEN/8, x4, x1, x2)

inst_4573:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x817ffffc; 
   valaddr_reg:x3; val_offset:9146*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9146*FLEN/8, x4, x1, x2)

inst_4574:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x817ffffe; 
   valaddr_reg:x3; val_offset:9148*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9148*FLEN/8, x4, x1, x2)

inst_4575:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x817fffff; 
   valaddr_reg:x3; val_offset:9150*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9150*FLEN/8, x4, x1, x2)

inst_4576:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81800000; 
   valaddr_reg:x3; val_offset:9152*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9152*FLEN/8, x4, x1, x2)

inst_4577:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81800001; 
   valaddr_reg:x3; val_offset:9154*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9154*FLEN/8, x4, x1, x2)

inst_4578:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81800003; 
   valaddr_reg:x3; val_offset:9156*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9156*FLEN/8, x4, x1, x2)

inst_4579:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81800007; 
   valaddr_reg:x3; val_offset:9158*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9158*FLEN/8, x4, x1, x2)

inst_4580:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8180000f; 
   valaddr_reg:x3; val_offset:9160*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9160*FLEN/8, x4, x1, x2)

inst_4581:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8180001f; 
   valaddr_reg:x3; val_offset:9162*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9162*FLEN/8, x4, x1, x2)

inst_4582:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8180003f; 
   valaddr_reg:x3; val_offset:9164*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9164*FLEN/8, x4, x1, x2)

inst_4583:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8180007f; 
   valaddr_reg:x3; val_offset:9166*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9166*FLEN/8, x4, x1, x2)

inst_4584:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x818000ff; 
   valaddr_reg:x3; val_offset:9168*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9168*FLEN/8, x4, x1, x2)

inst_4585:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x818001ff; 
   valaddr_reg:x3; val_offset:9170*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9170*FLEN/8, x4, x1, x2)

inst_4586:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x818003ff; 
   valaddr_reg:x3; val_offset:9172*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9172*FLEN/8, x4, x1, x2)

inst_4587:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x818007ff; 
   valaddr_reg:x3; val_offset:9174*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9174*FLEN/8, x4, x1, x2)

inst_4588:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81800fff; 
   valaddr_reg:x3; val_offset:9176*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9176*FLEN/8, x4, x1, x2)

inst_4589:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81801fff; 
   valaddr_reg:x3; val_offset:9178*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9178*FLEN/8, x4, x1, x2)

inst_4590:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81803fff; 
   valaddr_reg:x3; val_offset:9180*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9180*FLEN/8, x4, x1, x2)

inst_4591:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81807fff; 
   valaddr_reg:x3; val_offset:9182*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9182*FLEN/8, x4, x1, x2)

inst_4592:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8180ffff; 
   valaddr_reg:x3; val_offset:9184*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9184*FLEN/8, x4, x1, x2)

inst_4593:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8181ffff; 
   valaddr_reg:x3; val_offset:9186*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9186*FLEN/8, x4, x1, x2)

inst_4594:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8183ffff; 
   valaddr_reg:x3; val_offset:9188*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9188*FLEN/8, x4, x1, x2)

inst_4595:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8187ffff; 
   valaddr_reg:x3; val_offset:9190*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9190*FLEN/8, x4, x1, x2)

inst_4596:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x818fffff; 
   valaddr_reg:x3; val_offset:9192*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9192*FLEN/8, x4, x1, x2)

inst_4597:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x819fffff; 
   valaddr_reg:x3; val_offset:9194*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9194*FLEN/8, x4, x1, x2)

inst_4598:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81bfffff; 
   valaddr_reg:x3; val_offset:9196*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9196*FLEN/8, x4, x1, x2)

inst_4599:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81c00000; 
   valaddr_reg:x3; val_offset:9198*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9198*FLEN/8, x4, x1, x2)

inst_4600:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81e00000; 
   valaddr_reg:x3; val_offset:9200*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9200*FLEN/8, x4, x1, x2)

inst_4601:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81f00000; 
   valaddr_reg:x3; val_offset:9202*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9202*FLEN/8, x4, x1, x2)

inst_4602:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81f80000; 
   valaddr_reg:x3; val_offset:9204*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9204*FLEN/8, x4, x1, x2)

inst_4603:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81fc0000; 
   valaddr_reg:x3; val_offset:9206*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9206*FLEN/8, x4, x1, x2)

inst_4604:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81fe0000; 
   valaddr_reg:x3; val_offset:9208*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9208*FLEN/8, x4, x1, x2)

inst_4605:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81ff0000; 
   valaddr_reg:x3; val_offset:9210*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9210*FLEN/8, x4, x1, x2)

inst_4606:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81ff8000; 
   valaddr_reg:x3; val_offset:9212*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9212*FLEN/8, x4, x1, x2)

inst_4607:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81ffc000; 
   valaddr_reg:x3; val_offset:9214*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9214*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_37)

inst_4608:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81ffe000; 
   valaddr_reg:x3; val_offset:9216*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9216*FLEN/8, x4, x1, x2)

inst_4609:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81fff000; 
   valaddr_reg:x3; val_offset:9218*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9218*FLEN/8, x4, x1, x2)

inst_4610:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81fff800; 
   valaddr_reg:x3; val_offset:9220*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9220*FLEN/8, x4, x1, x2)

inst_4611:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81fffc00; 
   valaddr_reg:x3; val_offset:9222*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9222*FLEN/8, x4, x1, x2)

inst_4612:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81fffe00; 
   valaddr_reg:x3; val_offset:9224*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9224*FLEN/8, x4, x1, x2)

inst_4613:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81ffff00; 
   valaddr_reg:x3; val_offset:9226*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9226*FLEN/8, x4, x1, x2)

inst_4614:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81ffff80; 
   valaddr_reg:x3; val_offset:9228*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9228*FLEN/8, x4, x1, x2)

inst_4615:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81ffffc0; 
   valaddr_reg:x3; val_offset:9230*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9230*FLEN/8, x4, x1, x2)

inst_4616:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81ffffe0; 
   valaddr_reg:x3; val_offset:9232*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9232*FLEN/8, x4, x1, x2)

inst_4617:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81fffff0; 
   valaddr_reg:x3; val_offset:9234*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9234*FLEN/8, x4, x1, x2)

inst_4618:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81fffff8; 
   valaddr_reg:x3; val_offset:9236*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9236*FLEN/8, x4, x1, x2)

inst_4619:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81fffffc; 
   valaddr_reg:x3; val_offset:9238*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9238*FLEN/8, x4, x1, x2)

inst_4620:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81fffffe; 
   valaddr_reg:x3; val_offset:9240*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9240*FLEN/8, x4, x1, x2)

inst_4621:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x81ffffff; 
   valaddr_reg:x3; val_offset:9242*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9242*FLEN/8, x4, x1, x2)

inst_4622:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x82000000; 
   valaddr_reg:x3; val_offset:9244*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9244*FLEN/8, x4, x1, x2)

inst_4623:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x82000001; 
   valaddr_reg:x3; val_offset:9246*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9246*FLEN/8, x4, x1, x2)

inst_4624:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x82000003; 
   valaddr_reg:x3; val_offset:9248*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9248*FLEN/8, x4, x1, x2)

inst_4625:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x82000007; 
   valaddr_reg:x3; val_offset:9250*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9250*FLEN/8, x4, x1, x2)

inst_4626:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8200000f; 
   valaddr_reg:x3; val_offset:9252*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9252*FLEN/8, x4, x1, x2)

inst_4627:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8200001f; 
   valaddr_reg:x3; val_offset:9254*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9254*FLEN/8, x4, x1, x2)

inst_4628:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8200003f; 
   valaddr_reg:x3; val_offset:9256*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9256*FLEN/8, x4, x1, x2)

inst_4629:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8200007f; 
   valaddr_reg:x3; val_offset:9258*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9258*FLEN/8, x4, x1, x2)

inst_4630:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x820000ff; 
   valaddr_reg:x3; val_offset:9260*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9260*FLEN/8, x4, x1, x2)

inst_4631:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x820001ff; 
   valaddr_reg:x3; val_offset:9262*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9262*FLEN/8, x4, x1, x2)

inst_4632:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x820003ff; 
   valaddr_reg:x3; val_offset:9264*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9264*FLEN/8, x4, x1, x2)

inst_4633:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x820007ff; 
   valaddr_reg:x3; val_offset:9266*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9266*FLEN/8, x4, x1, x2)

inst_4634:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x82000fff; 
   valaddr_reg:x3; val_offset:9268*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9268*FLEN/8, x4, x1, x2)

inst_4635:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x82001fff; 
   valaddr_reg:x3; val_offset:9270*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9270*FLEN/8, x4, x1, x2)

inst_4636:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x82003fff; 
   valaddr_reg:x3; val_offset:9272*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9272*FLEN/8, x4, x1, x2)

inst_4637:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x82007fff; 
   valaddr_reg:x3; val_offset:9274*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9274*FLEN/8, x4, x1, x2)

inst_4638:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8200ffff; 
   valaddr_reg:x3; val_offset:9276*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9276*FLEN/8, x4, x1, x2)

inst_4639:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8201ffff; 
   valaddr_reg:x3; val_offset:9278*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9278*FLEN/8, x4, x1, x2)

inst_4640:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8203ffff; 
   valaddr_reg:x3; val_offset:9280*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9280*FLEN/8, x4, x1, x2)

inst_4641:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x8207ffff; 
   valaddr_reg:x3; val_offset:9282*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9282*FLEN/8, x4, x1, x2)

inst_4642:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x820fffff; 
   valaddr_reg:x3; val_offset:9284*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9284*FLEN/8, x4, x1, x2)

inst_4643:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x821fffff; 
   valaddr_reg:x3; val_offset:9286*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9286*FLEN/8, x4, x1, x2)

inst_4644:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x823fffff; 
   valaddr_reg:x3; val_offset:9288*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9288*FLEN/8, x4, x1, x2)

inst_4645:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x82400000; 
   valaddr_reg:x3; val_offset:9290*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9290*FLEN/8, x4, x1, x2)

inst_4646:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x82600000; 
   valaddr_reg:x3; val_offset:9292*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9292*FLEN/8, x4, x1, x2)

inst_4647:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x82700000; 
   valaddr_reg:x3; val_offset:9294*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9294*FLEN/8, x4, x1, x2)

inst_4648:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x82780000; 
   valaddr_reg:x3; val_offset:9296*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9296*FLEN/8, x4, x1, x2)

inst_4649:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x827c0000; 
   valaddr_reg:x3; val_offset:9298*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9298*FLEN/8, x4, x1, x2)

inst_4650:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x827e0000; 
   valaddr_reg:x3; val_offset:9300*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9300*FLEN/8, x4, x1, x2)

inst_4651:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x827f0000; 
   valaddr_reg:x3; val_offset:9302*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9302*FLEN/8, x4, x1, x2)

inst_4652:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x827f8000; 
   valaddr_reg:x3; val_offset:9304*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9304*FLEN/8, x4, x1, x2)

inst_4653:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x827fc000; 
   valaddr_reg:x3; val_offset:9306*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9306*FLEN/8, x4, x1, x2)

inst_4654:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x827fe000; 
   valaddr_reg:x3; val_offset:9308*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9308*FLEN/8, x4, x1, x2)

inst_4655:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x827ff000; 
   valaddr_reg:x3; val_offset:9310*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9310*FLEN/8, x4, x1, x2)

inst_4656:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x827ff800; 
   valaddr_reg:x3; val_offset:9312*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9312*FLEN/8, x4, x1, x2)

inst_4657:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x827ffc00; 
   valaddr_reg:x3; val_offset:9314*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9314*FLEN/8, x4, x1, x2)

inst_4658:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x827ffe00; 
   valaddr_reg:x3; val_offset:9316*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9316*FLEN/8, x4, x1, x2)

inst_4659:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x827fff00; 
   valaddr_reg:x3; val_offset:9318*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9318*FLEN/8, x4, x1, x2)

inst_4660:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x827fff80; 
   valaddr_reg:x3; val_offset:9320*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9320*FLEN/8, x4, x1, x2)

inst_4661:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x827fffc0; 
   valaddr_reg:x3; val_offset:9322*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9322*FLEN/8, x4, x1, x2)

inst_4662:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x827fffe0; 
   valaddr_reg:x3; val_offset:9324*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9324*FLEN/8, x4, x1, x2)

inst_4663:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x827ffff0; 
   valaddr_reg:x3; val_offset:9326*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9326*FLEN/8, x4, x1, x2)

inst_4664:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x827ffff8; 
   valaddr_reg:x3; val_offset:9328*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9328*FLEN/8, x4, x1, x2)

inst_4665:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x827ffffc; 
   valaddr_reg:x3; val_offset:9330*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9330*FLEN/8, x4, x1, x2)

inst_4666:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x827ffffe; 
   valaddr_reg:x3; val_offset:9332*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9332*FLEN/8, x4, x1, x2)

inst_4667:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0x827fffff; 
   valaddr_reg:x3; val_offset:9334*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9334*FLEN/8, x4, x1, x2)

inst_4668:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf8000000; 
   valaddr_reg:x3; val_offset:9336*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9336*FLEN/8, x4, x1, x2)

inst_4669:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf8000001; 
   valaddr_reg:x3; val_offset:9338*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9338*FLEN/8, x4, x1, x2)

inst_4670:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf8000003; 
   valaddr_reg:x3; val_offset:9340*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9340*FLEN/8, x4, x1, x2)

inst_4671:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf8000007; 
   valaddr_reg:x3; val_offset:9342*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9342*FLEN/8, x4, x1, x2)

inst_4672:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf800000f; 
   valaddr_reg:x3; val_offset:9344*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9344*FLEN/8, x4, x1, x2)

inst_4673:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf800001f; 
   valaddr_reg:x3; val_offset:9346*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9346*FLEN/8, x4, x1, x2)

inst_4674:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf800003f; 
   valaddr_reg:x3; val_offset:9348*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9348*FLEN/8, x4, x1, x2)

inst_4675:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf800007f; 
   valaddr_reg:x3; val_offset:9350*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9350*FLEN/8, x4, x1, x2)

inst_4676:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf80000ff; 
   valaddr_reg:x3; val_offset:9352*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9352*FLEN/8, x4, x1, x2)

inst_4677:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf80001ff; 
   valaddr_reg:x3; val_offset:9354*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9354*FLEN/8, x4, x1, x2)

inst_4678:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf80003ff; 
   valaddr_reg:x3; val_offset:9356*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9356*FLEN/8, x4, x1, x2)

inst_4679:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf80007ff; 
   valaddr_reg:x3; val_offset:9358*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9358*FLEN/8, x4, x1, x2)

inst_4680:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf8000fff; 
   valaddr_reg:x3; val_offset:9360*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9360*FLEN/8, x4, x1, x2)

inst_4681:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf8001fff; 
   valaddr_reg:x3; val_offset:9362*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9362*FLEN/8, x4, x1, x2)

inst_4682:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf8003fff; 
   valaddr_reg:x3; val_offset:9364*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9364*FLEN/8, x4, x1, x2)

inst_4683:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf8007fff; 
   valaddr_reg:x3; val_offset:9366*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9366*FLEN/8, x4, x1, x2)

inst_4684:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf800ffff; 
   valaddr_reg:x3; val_offset:9368*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9368*FLEN/8, x4, x1, x2)

inst_4685:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf801ffff; 
   valaddr_reg:x3; val_offset:9370*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9370*FLEN/8, x4, x1, x2)

inst_4686:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf803ffff; 
   valaddr_reg:x3; val_offset:9372*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9372*FLEN/8, x4, x1, x2)

inst_4687:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf807ffff; 
   valaddr_reg:x3; val_offset:9374*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9374*FLEN/8, x4, x1, x2)

inst_4688:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf80fffff; 
   valaddr_reg:x3; val_offset:9376*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9376*FLEN/8, x4, x1, x2)

inst_4689:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf81fffff; 
   valaddr_reg:x3; val_offset:9378*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9378*FLEN/8, x4, x1, x2)

inst_4690:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf83fffff; 
   valaddr_reg:x3; val_offset:9380*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9380*FLEN/8, x4, x1, x2)

inst_4691:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf8400000; 
   valaddr_reg:x3; val_offset:9382*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9382*FLEN/8, x4, x1, x2)

inst_4692:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf8600000; 
   valaddr_reg:x3; val_offset:9384*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9384*FLEN/8, x4, x1, x2)

inst_4693:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf8700000; 
   valaddr_reg:x3; val_offset:9386*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9386*FLEN/8, x4, x1, x2)

inst_4694:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf8780000; 
   valaddr_reg:x3; val_offset:9388*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9388*FLEN/8, x4, x1, x2)

inst_4695:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf87c0000; 
   valaddr_reg:x3; val_offset:9390*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9390*FLEN/8, x4, x1, x2)

inst_4696:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf87e0000; 
   valaddr_reg:x3; val_offset:9392*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9392*FLEN/8, x4, x1, x2)

inst_4697:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf87f0000; 
   valaddr_reg:x3; val_offset:9394*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9394*FLEN/8, x4, x1, x2)

inst_4698:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf87f8000; 
   valaddr_reg:x3; val_offset:9396*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9396*FLEN/8, x4, x1, x2)

inst_4699:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf87fc000; 
   valaddr_reg:x3; val_offset:9398*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9398*FLEN/8, x4, x1, x2)

inst_4700:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf87fe000; 
   valaddr_reg:x3; val_offset:9400*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9400*FLEN/8, x4, x1, x2)

inst_4701:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf87ff000; 
   valaddr_reg:x3; val_offset:9402*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9402*FLEN/8, x4, x1, x2)

inst_4702:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf87ff800; 
   valaddr_reg:x3; val_offset:9404*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9404*FLEN/8, x4, x1, x2)

inst_4703:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf87ffc00; 
   valaddr_reg:x3; val_offset:9406*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9406*FLEN/8, x4, x1, x2)

inst_4704:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf87ffe00; 
   valaddr_reg:x3; val_offset:9408*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9408*FLEN/8, x4, x1, x2)

inst_4705:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf87fff00; 
   valaddr_reg:x3; val_offset:9410*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9410*FLEN/8, x4, x1, x2)

inst_4706:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf87fff80; 
   valaddr_reg:x3; val_offset:9412*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9412*FLEN/8, x4, x1, x2)

inst_4707:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf87fffc0; 
   valaddr_reg:x3; val_offset:9414*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9414*FLEN/8, x4, x1, x2)

inst_4708:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf87fffe0; 
   valaddr_reg:x3; val_offset:9416*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9416*FLEN/8, x4, x1, x2)

inst_4709:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf87ffff0; 
   valaddr_reg:x3; val_offset:9418*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9418*FLEN/8, x4, x1, x2)

inst_4710:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf87ffff8; 
   valaddr_reg:x3; val_offset:9420*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9420*FLEN/8, x4, x1, x2)

inst_4711:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf87ffffc; 
   valaddr_reg:x3; val_offset:9422*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9422*FLEN/8, x4, x1, x2)

inst_4712:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf87ffffe; 
   valaddr_reg:x3; val_offset:9424*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9424*FLEN/8, x4, x1, x2)

inst_4713:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800000; op2val:0xf87fffff; 
   valaddr_reg:x3; val_offset:9426*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9426*FLEN/8, x4, x1, x2)

inst_4714:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800001; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9428*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9428*FLEN/8, x4, x1, x2)

inst_4715:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800001; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9430*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9430*FLEN/8, x4, x1, x2)

inst_4716:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800001; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9432*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9432*FLEN/8, x4, x1, x2)

inst_4717:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800001; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9434*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9434*FLEN/8, x4, x1, x2)

inst_4718:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800003; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9436*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9436*FLEN/8, x4, x1, x2)

inst_4719:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800003; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9438*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9438*FLEN/8, x4, x1, x2)

inst_4720:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800003; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9440*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9440*FLEN/8, x4, x1, x2)

inst_4721:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800003; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9442*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9442*FLEN/8, x4, x1, x2)

inst_4722:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800007; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9444*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9444*FLEN/8, x4, x1, x2)

inst_4723:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800007; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9446*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9446*FLEN/8, x4, x1, x2)

inst_4724:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800007; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9448*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9448*FLEN/8, x4, x1, x2)

inst_4725:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800007; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9450*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9450*FLEN/8, x4, x1, x2)

inst_4726:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8080000f; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9452*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9452*FLEN/8, x4, x1, x2)

inst_4727:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8080000f; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9454*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9454*FLEN/8, x4, x1, x2)

inst_4728:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8080000f; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9456*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9456*FLEN/8, x4, x1, x2)

inst_4729:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8080000f; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9458*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9458*FLEN/8, x4, x1, x2)

inst_4730:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8080001f; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9460*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9460*FLEN/8, x4, x1, x2)

inst_4731:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8080001f; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9462*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9462*FLEN/8, x4, x1, x2)

inst_4732:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8080001f; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9464*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9464*FLEN/8, x4, x1, x2)

inst_4733:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8080001f; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9466*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9466*FLEN/8, x4, x1, x2)

inst_4734:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8080003f; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9468*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9468*FLEN/8, x4, x1, x2)

inst_4735:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8080003f; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9470*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9470*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_38)

inst_4736:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8080003f; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9472*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9472*FLEN/8, x4, x1, x2)

inst_4737:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8080003f; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9474*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9474*FLEN/8, x4, x1, x2)

inst_4738:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x00007f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8080007f; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9476*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9476*FLEN/8, x4, x1, x2)

inst_4739:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x00007f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8080007f; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9478*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9478*FLEN/8, x4, x1, x2)

inst_4740:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x00007f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8080007f; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9480*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9480*FLEN/8, x4, x1, x2)

inst_4741:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x00007f and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8080007f; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9482*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9482*FLEN/8, x4, x1, x2)

inst_4742:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x808000ff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9484*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9484*FLEN/8, x4, x1, x2)

inst_4743:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x808000ff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9486*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9486*FLEN/8, x4, x1, x2)

inst_4744:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x808000ff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9488*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9488*FLEN/8, x4, x1, x2)

inst_4745:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x808000ff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9490*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9490*FLEN/8, x4, x1, x2)

inst_4746:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x808001ff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9492*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9492*FLEN/8, x4, x1, x2)

inst_4747:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x808001ff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9494*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9494*FLEN/8, x4, x1, x2)

inst_4748:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x808001ff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9496*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9496*FLEN/8, x4, x1, x2)

inst_4749:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x808001ff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9498*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9498*FLEN/8, x4, x1, x2)

inst_4750:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x808003ff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9500*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9500*FLEN/8, x4, x1, x2)

inst_4751:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x808003ff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9502*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9502*FLEN/8, x4, x1, x2)

inst_4752:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x808003ff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9504*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9504*FLEN/8, x4, x1, x2)

inst_4753:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x808003ff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9506*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9506*FLEN/8, x4, x1, x2)

inst_4754:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x808007ff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9508*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9508*FLEN/8, x4, x1, x2)

inst_4755:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x808007ff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9510*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9510*FLEN/8, x4, x1, x2)

inst_4756:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x808007ff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9512*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9512*FLEN/8, x4, x1, x2)

inst_4757:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x808007ff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9514*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9514*FLEN/8, x4, x1, x2)

inst_4758:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800fff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9516*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9516*FLEN/8, x4, x1, x2)

inst_4759:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800fff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9518*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9518*FLEN/8, x4, x1, x2)

inst_4760:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800fff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9520*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9520*FLEN/8, x4, x1, x2)

inst_4761:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000fff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80800fff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9522*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9522*FLEN/8, x4, x1, x2)

inst_4762:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x001fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80801fff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9524*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9524*FLEN/8, x4, x1, x2)

inst_4763:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x001fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80801fff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9526*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9526*FLEN/8, x4, x1, x2)

inst_4764:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x001fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80801fff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9528*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9528*FLEN/8, x4, x1, x2)

inst_4765:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x001fff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80801fff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9530*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9530*FLEN/8, x4, x1, x2)

inst_4766:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x003fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80803fff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9532*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9532*FLEN/8, x4, x1, x2)

inst_4767:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x003fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80803fff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9534*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9534*FLEN/8, x4, x1, x2)

inst_4768:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x003fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80803fff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9536*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9536*FLEN/8, x4, x1, x2)

inst_4769:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x003fff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80803fff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9538*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9538*FLEN/8, x4, x1, x2)

inst_4770:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x007fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80807fff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9540*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9540*FLEN/8, x4, x1, x2)

inst_4771:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x007fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80807fff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9542*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9542*FLEN/8, x4, x1, x2)

inst_4772:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x007fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80807fff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9544*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9544*FLEN/8, x4, x1, x2)

inst_4773:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x007fff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80807fff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9546*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9546*FLEN/8, x4, x1, x2)

inst_4774:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8080ffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9548*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9548*FLEN/8, x4, x1, x2)

inst_4775:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8080ffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9550*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9550*FLEN/8, x4, x1, x2)

inst_4776:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8080ffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9552*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9552*FLEN/8, x4, x1, x2)

inst_4777:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8080ffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9554*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9554*FLEN/8, x4, x1, x2)

inst_4778:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8081ffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9556*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9556*FLEN/8, x4, x1, x2)

inst_4779:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8081ffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9558*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9558*FLEN/8, x4, x1, x2)

inst_4780:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8081ffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9560*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9560*FLEN/8, x4, x1, x2)

inst_4781:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8081ffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9562*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9562*FLEN/8, x4, x1, x2)

inst_4782:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8083ffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9564*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9564*FLEN/8, x4, x1, x2)

inst_4783:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8083ffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9566*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9566*FLEN/8, x4, x1, x2)

inst_4784:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8083ffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9568*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9568*FLEN/8, x4, x1, x2)

inst_4785:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8083ffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9570*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9570*FLEN/8, x4, x1, x2)

inst_4786:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8087ffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9572*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9572*FLEN/8, x4, x1, x2)

inst_4787:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8087ffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9574*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9574*FLEN/8, x4, x1, x2)

inst_4788:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8087ffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9576*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9576*FLEN/8, x4, x1, x2)

inst_4789:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8087ffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9578*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9578*FLEN/8, x4, x1, x2)

inst_4790:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x808fffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9580*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9580*FLEN/8, x4, x1, x2)

inst_4791:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x808fffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9582*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9582*FLEN/8, x4, x1, x2)

inst_4792:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x808fffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9584*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9584*FLEN/8, x4, x1, x2)

inst_4793:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x808fffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9586*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9586*FLEN/8, x4, x1, x2)

inst_4794:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x199999 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80999999; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9588*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9588*FLEN/8, x4, x1, x2)

inst_4795:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x809fffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9590*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9590*FLEN/8, x4, x1, x2)

inst_4796:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x809fffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9592*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9592*FLEN/8, x4, x1, x2)

inst_4797:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x809fffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9594*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9594*FLEN/8, x4, x1, x2)

inst_4798:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x809fffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9596*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9596*FLEN/8, x4, x1, x2)

inst_4799:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x249249 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80a49249; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9598*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9598*FLEN/8, x4, x1, x2)

inst_4800:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x333333 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80b33333; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9600*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9600*FLEN/8, x4, x1, x2)

inst_4801:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x36db6d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80b6db6d; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9602*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9602*FLEN/8, x4, x1, x2)

inst_4802:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x3bbbbb and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80bbbbbb; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9604*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9604*FLEN/8, x4, x1, x2)

inst_4803:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80bfffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9606*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9606*FLEN/8, x4, x1, x2)

inst_4804:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80bfffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9608*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9608*FLEN/8, x4, x1, x2)

inst_4805:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80bfffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9610*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9610*FLEN/8, x4, x1, x2)

inst_4806:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80bfffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9612*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9612*FLEN/8, x4, x1, x2)

inst_4807:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x400000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80c00000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9614*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9614*FLEN/8, x4, x1, x2)

inst_4808:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x400000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80c00000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9616*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9616*FLEN/8, x4, x1, x2)

inst_4809:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x400000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80c00000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9618*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9618*FLEN/8, x4, x1, x2)

inst_4810:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x400000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80c00000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9620*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9620*FLEN/8, x4, x1, x2)

inst_4811:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x444444 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80c44444; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9622*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9622*FLEN/8, x4, x1, x2)

inst_4812:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x4ccccc and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80cccccc; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9624*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9624*FLEN/8, x4, x1, x2)

inst_4813:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x5b6db6 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80db6db6; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9626*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9626*FLEN/8, x4, x1, x2)

inst_4814:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x600000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80e00000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9628*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9628*FLEN/8, x4, x1, x2)

inst_4815:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x600000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80e00000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9630*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9630*FLEN/8, x4, x1, x2)

inst_4816:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x600000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80e00000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9632*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9632*FLEN/8, x4, x1, x2)

inst_4817:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x600000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80e00000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9634*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9634*FLEN/8, x4, x1, x2)

inst_4818:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x666666 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80e66666; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9636*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9636*FLEN/8, x4, x1, x2)

inst_4819:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x6db6db and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80edb6db; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9638*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9638*FLEN/8, x4, x1, x2)

inst_4820:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x700000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80f00000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9640*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9640*FLEN/8, x4, x1, x2)

inst_4821:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x700000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80f00000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9642*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9642*FLEN/8, x4, x1, x2)

inst_4822:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x700000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80f00000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9644*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9644*FLEN/8, x4, x1, x2)

inst_4823:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x700000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80f00000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9646*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9646*FLEN/8, x4, x1, x2)

inst_4824:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x780000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80f80000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9648*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9648*FLEN/8, x4, x1, x2)

inst_4825:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x780000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80f80000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9650*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9650*FLEN/8, x4, x1, x2)

inst_4826:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x780000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80f80000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9652*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9652*FLEN/8, x4, x1, x2)

inst_4827:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x780000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80f80000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9654*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9654*FLEN/8, x4, x1, x2)

inst_4828:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fc0000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9656*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9656*FLEN/8, x4, x1, x2)

inst_4829:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fc0000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9658*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9658*FLEN/8, x4, x1, x2)

inst_4830:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fc0000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9660*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9660*FLEN/8, x4, x1, x2)

inst_4831:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fc0000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9662*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9662*FLEN/8, x4, x1, x2)

inst_4832:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fe0000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9664*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9664*FLEN/8, x4, x1, x2)

inst_4833:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fe0000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9666*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9666*FLEN/8, x4, x1, x2)

inst_4834:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fe0000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9668*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9668*FLEN/8, x4, x1, x2)

inst_4835:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fe0000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9670*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9670*FLEN/8, x4, x1, x2)

inst_4836:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ff0000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9672*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9672*FLEN/8, x4, x1, x2)

inst_4837:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ff0000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9674*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9674*FLEN/8, x4, x1, x2)

inst_4838:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ff0000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9676*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9676*FLEN/8, x4, x1, x2)

inst_4839:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ff0000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9678*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9678*FLEN/8, x4, x1, x2)

inst_4840:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ff8000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9680*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9680*FLEN/8, x4, x1, x2)

inst_4841:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ff8000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9682*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9682*FLEN/8, x4, x1, x2)

inst_4842:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ff8000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9684*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9684*FLEN/8, x4, x1, x2)

inst_4843:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ff8000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9686*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9686*FLEN/8, x4, x1, x2)

inst_4844:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ffc000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9688*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9688*FLEN/8, x4, x1, x2)

inst_4845:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ffc000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9690*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9690*FLEN/8, x4, x1, x2)

inst_4846:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ffc000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9692*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9692*FLEN/8, x4, x1, x2)

inst_4847:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ffc000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9694*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9694*FLEN/8, x4, x1, x2)

inst_4848:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ffe000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9696*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9696*FLEN/8, x4, x1, x2)

inst_4849:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ffe000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9698*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9698*FLEN/8, x4, x1, x2)

inst_4850:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ffe000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9700*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9700*FLEN/8, x4, x1, x2)

inst_4851:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ffe000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9702*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9702*FLEN/8, x4, x1, x2)

inst_4852:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fff000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9704*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9704*FLEN/8, x4, x1, x2)

inst_4853:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fff000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9706*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9706*FLEN/8, x4, x1, x2)

inst_4854:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fff000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9708*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9708*FLEN/8, x4, x1, x2)

inst_4855:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fff000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9710*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9710*FLEN/8, x4, x1, x2)

inst_4856:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fff800; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9712*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9712*FLEN/8, x4, x1, x2)

inst_4857:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fff800; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9714*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9714*FLEN/8, x4, x1, x2)

inst_4858:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fff800; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9716*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9716*FLEN/8, x4, x1, x2)

inst_4859:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fff800; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9718*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9718*FLEN/8, x4, x1, x2)

inst_4860:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fffc00; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9720*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9720*FLEN/8, x4, x1, x2)

inst_4861:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fffc00; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9722*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9722*FLEN/8, x4, x1, x2)

inst_4862:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fffc00; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9724*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9724*FLEN/8, x4, x1, x2)

inst_4863:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fffc00; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9726*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9726*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_39)

inst_4864:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fffe00; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9728*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9728*FLEN/8, x4, x1, x2)

inst_4865:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fffe00; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9730*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9730*FLEN/8, x4, x1, x2)

inst_4866:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fffe00; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9732*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9732*FLEN/8, x4, x1, x2)

inst_4867:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fffe00; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9734*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9734*FLEN/8, x4, x1, x2)

inst_4868:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ffff00; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9736*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9736*FLEN/8, x4, x1, x2)

inst_4869:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ffff00; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9738*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9738*FLEN/8, x4, x1, x2)

inst_4870:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ffff00; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9740*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9740*FLEN/8, x4, x1, x2)

inst_4871:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ffff00; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9742*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9742*FLEN/8, x4, x1, x2)

inst_4872:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ffff80; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9744*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9744*FLEN/8, x4, x1, x2)

inst_4873:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ffff80; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9746*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9746*FLEN/8, x4, x1, x2)

inst_4874:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ffff80; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9748*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9748*FLEN/8, x4, x1, x2)

inst_4875:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ffff80; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9750*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9750*FLEN/8, x4, x1, x2)

inst_4876:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ffffc0; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9752*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9752*FLEN/8, x4, x1, x2)

inst_4877:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ffffc0; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9754*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9754*FLEN/8, x4, x1, x2)

inst_4878:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ffffc0; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9756*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9756*FLEN/8, x4, x1, x2)

inst_4879:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ffffc0; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9758*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9758*FLEN/8, x4, x1, x2)

inst_4880:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ffffe0; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9760*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9760*FLEN/8, x4, x1, x2)

inst_4881:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ffffe0; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9762*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9762*FLEN/8, x4, x1, x2)

inst_4882:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ffffe0; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9764*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9764*FLEN/8, x4, x1, x2)

inst_4883:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ffffe0; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9766*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9766*FLEN/8, x4, x1, x2)

inst_4884:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fffff0; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9768*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9768*FLEN/8, x4, x1, x2)

inst_4885:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fffff0; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9770*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9770*FLEN/8, x4, x1, x2)

inst_4886:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fffff0; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9772*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9772*FLEN/8, x4, x1, x2)

inst_4887:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fffff0; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9774*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9774*FLEN/8, x4, x1, x2)

inst_4888:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fffff8; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9776*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9776*FLEN/8, x4, x1, x2)

inst_4889:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fffff8; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9778*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9778*FLEN/8, x4, x1, x2)

inst_4890:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fffff8; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9780*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9780*FLEN/8, x4, x1, x2)

inst_4891:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fffff8; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9782*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9782*FLEN/8, x4, x1, x2)

inst_4892:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fffffc; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9784*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9784*FLEN/8, x4, x1, x2)

inst_4893:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fffffc; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9786*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9786*FLEN/8, x4, x1, x2)

inst_4894:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fffffc; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9788*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9788*FLEN/8, x4, x1, x2)

inst_4895:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fffffc; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9790*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9790*FLEN/8, x4, x1, x2)

inst_4896:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fffffe; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9792*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9792*FLEN/8, x4, x1, x2)

inst_4897:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fffffe; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9794*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9794*FLEN/8, x4, x1, x2)

inst_4898:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fffffe; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9796*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9796*FLEN/8, x4, x1, x2)

inst_4899:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80fffffe; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9798*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9798*FLEN/8, x4, x1, x2)

inst_4900:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ffffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9800*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9800*FLEN/8, x4, x1, x2)

inst_4901:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ffffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9802*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9802*FLEN/8, x4, x1, x2)

inst_4902:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ffffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9804*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9804*FLEN/8, x4, x1, x2)

inst_4903:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x80ffffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9806*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9806*FLEN/8, x4, x1, x2)

inst_4904:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81000000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9808*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9808*FLEN/8, x4, x1, x2)

inst_4905:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81000000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9810*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9810*FLEN/8, x4, x1, x2)

inst_4906:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81000000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9812*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9812*FLEN/8, x4, x1, x2)

inst_4907:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81000000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9814*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9814*FLEN/8, x4, x1, x2)

inst_4908:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81000001; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9816*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9816*FLEN/8, x4, x1, x2)

inst_4909:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81000001; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9818*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9818*FLEN/8, x4, x1, x2)

inst_4910:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81000001; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9820*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9820*FLEN/8, x4, x1, x2)

inst_4911:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81000001; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9822*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9822*FLEN/8, x4, x1, x2)

inst_4912:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81000003; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9824*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9824*FLEN/8, x4, x1, x2)

inst_4913:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81000003; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9826*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9826*FLEN/8, x4, x1, x2)

inst_4914:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81000003; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9828*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9828*FLEN/8, x4, x1, x2)

inst_4915:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81000003; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9830*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9830*FLEN/8, x4, x1, x2)

inst_4916:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81000007; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9832*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9832*FLEN/8, x4, x1, x2)

inst_4917:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81000007; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9834*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9834*FLEN/8, x4, x1, x2)

inst_4918:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81000007; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9836*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9836*FLEN/8, x4, x1, x2)

inst_4919:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81000007; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9838*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9838*FLEN/8, x4, x1, x2)

inst_4920:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8100000f; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9840*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9840*FLEN/8, x4, x1, x2)

inst_4921:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8100000f; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9842*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9842*FLEN/8, x4, x1, x2)

inst_4922:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8100000f; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9844*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9844*FLEN/8, x4, x1, x2)

inst_4923:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8100000f; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9846*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9846*FLEN/8, x4, x1, x2)

inst_4924:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8100001f; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9848*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9848*FLEN/8, x4, x1, x2)

inst_4925:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8100001f; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9850*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9850*FLEN/8, x4, x1, x2)

inst_4926:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8100001f; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9852*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9852*FLEN/8, x4, x1, x2)

inst_4927:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8100001f; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9854*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9854*FLEN/8, x4, x1, x2)

inst_4928:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8100003f; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9856*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9856*FLEN/8, x4, x1, x2)

inst_4929:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8100003f; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9858*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9858*FLEN/8, x4, x1, x2)

inst_4930:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8100003f; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9860*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9860*FLEN/8, x4, x1, x2)

inst_4931:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8100003f; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9862*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9862*FLEN/8, x4, x1, x2)

inst_4932:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x00007f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8100007f; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9864*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9864*FLEN/8, x4, x1, x2)

inst_4933:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x00007f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8100007f; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9866*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9866*FLEN/8, x4, x1, x2)

inst_4934:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x00007f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8100007f; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9868*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9868*FLEN/8, x4, x1, x2)

inst_4935:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x00007f and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8100007f; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9870*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9870*FLEN/8, x4, x1, x2)

inst_4936:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x810000ff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9872*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9872*FLEN/8, x4, x1, x2)

inst_4937:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x810000ff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9874*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9874*FLEN/8, x4, x1, x2)

inst_4938:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x810000ff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9876*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9876*FLEN/8, x4, x1, x2)

inst_4939:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x810000ff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9878*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9878*FLEN/8, x4, x1, x2)

inst_4940:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x810001ff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9880*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9880*FLEN/8, x4, x1, x2)

inst_4941:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x810001ff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9882*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9882*FLEN/8, x4, x1, x2)

inst_4942:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x810001ff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9884*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9884*FLEN/8, x4, x1, x2)

inst_4943:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x810001ff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9886*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9886*FLEN/8, x4, x1, x2)

inst_4944:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x810003ff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9888*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9888*FLEN/8, x4, x1, x2)

inst_4945:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x810003ff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9890*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9890*FLEN/8, x4, x1, x2)

inst_4946:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x810003ff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9892*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9892*FLEN/8, x4, x1, x2)

inst_4947:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x810003ff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9894*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9894*FLEN/8, x4, x1, x2)

inst_4948:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x810007ff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9896*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9896*FLEN/8, x4, x1, x2)

inst_4949:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x810007ff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9898*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9898*FLEN/8, x4, x1, x2)

inst_4950:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x810007ff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9900*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9900*FLEN/8, x4, x1, x2)

inst_4951:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x810007ff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9902*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9902*FLEN/8, x4, x1, x2)

inst_4952:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x000fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81000fff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9904*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9904*FLEN/8, x4, x1, x2)

inst_4953:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x000fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81000fff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9906*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9906*FLEN/8, x4, x1, x2)

inst_4954:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x000fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81000fff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9908*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9908*FLEN/8, x4, x1, x2)

inst_4955:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x000fff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81000fff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9910*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9910*FLEN/8, x4, x1, x2)

inst_4956:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x001fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81001fff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9912*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9912*FLEN/8, x4, x1, x2)

inst_4957:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x001fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81001fff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9914*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9914*FLEN/8, x4, x1, x2)

inst_4958:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x001fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81001fff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9916*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9916*FLEN/8, x4, x1, x2)

inst_4959:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x001fff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81001fff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9918*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9918*FLEN/8, x4, x1, x2)

inst_4960:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x003fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81003fff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9920*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9920*FLEN/8, x4, x1, x2)

inst_4961:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x003fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81003fff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9922*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9922*FLEN/8, x4, x1, x2)

inst_4962:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x003fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81003fff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9924*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9924*FLEN/8, x4, x1, x2)

inst_4963:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x003fff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81003fff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9926*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9926*FLEN/8, x4, x1, x2)

inst_4964:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x007fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81007fff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9928*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9928*FLEN/8, x4, x1, x2)

inst_4965:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x007fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81007fff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9930*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9930*FLEN/8, x4, x1, x2)

inst_4966:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x007fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81007fff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9932*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9932*FLEN/8, x4, x1, x2)

inst_4967:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x007fff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81007fff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9934*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9934*FLEN/8, x4, x1, x2)

inst_4968:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8100ffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9936*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9936*FLEN/8, x4, x1, x2)

inst_4969:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8100ffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9938*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9938*FLEN/8, x4, x1, x2)

inst_4970:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8100ffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9940*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9940*FLEN/8, x4, x1, x2)

inst_4971:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8100ffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9942*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9942*FLEN/8, x4, x1, x2)

inst_4972:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8101ffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9944*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9944*FLEN/8, x4, x1, x2)

inst_4973:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8101ffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9946*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9946*FLEN/8, x4, x1, x2)

inst_4974:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8101ffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9948*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9948*FLEN/8, x4, x1, x2)

inst_4975:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8101ffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9950*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9950*FLEN/8, x4, x1, x2)

inst_4976:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8103ffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9952*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9952*FLEN/8, x4, x1, x2)

inst_4977:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8103ffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9954*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9954*FLEN/8, x4, x1, x2)

inst_4978:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8103ffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9956*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9956*FLEN/8, x4, x1, x2)

inst_4979:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8103ffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9958*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9958*FLEN/8, x4, x1, x2)

inst_4980:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8107ffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9960*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9960*FLEN/8, x4, x1, x2)

inst_4981:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8107ffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9962*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9962*FLEN/8, x4, x1, x2)

inst_4982:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8107ffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9964*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9964*FLEN/8, x4, x1, x2)

inst_4983:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8107ffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9966*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9966*FLEN/8, x4, x1, x2)

inst_4984:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x810fffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9968*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9968*FLEN/8, x4, x1, x2)

inst_4985:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x810fffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9970*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9970*FLEN/8, x4, x1, x2)

inst_4986:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x810fffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9972*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9972*FLEN/8, x4, x1, x2)

inst_4987:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x810fffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9974*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9974*FLEN/8, x4, x1, x2)

inst_4988:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x811fffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9976*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9976*FLEN/8, x4, x1, x2)

inst_4989:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x811fffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9978*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9978*FLEN/8, x4, x1, x2)

inst_4990:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x811fffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9980*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9980*FLEN/8, x4, x1, x2)

inst_4991:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x811fffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9982*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9982*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_40)

inst_4992:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x813fffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9984*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9984*FLEN/8, x4, x1, x2)

inst_4993:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x813fffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9986*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9986*FLEN/8, x4, x1, x2)

inst_4994:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x813fffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9988*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9988*FLEN/8, x4, x1, x2)

inst_4995:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x813fffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9990*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9990*FLEN/8, x4, x1, x2)

inst_4996:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x400000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81400000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:9992*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9992*FLEN/8, x4, x1, x2)

inst_4997:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x400000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81400000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:9994*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9994*FLEN/8, x4, x1, x2)

inst_4998:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x400000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81400000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:9996*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9996*FLEN/8, x4, x1, x2)

inst_4999:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x400000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81400000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:9998*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 9998*FLEN/8, x4, x1, x2)

inst_5000:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x600000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81600000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10000*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10000*FLEN/8, x4, x1, x2)

inst_5001:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x600000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81600000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10002*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10002*FLEN/8, x4, x1, x2)

inst_5002:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x600000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81600000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10004*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10004*FLEN/8, x4, x1, x2)

inst_5003:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x600000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81600000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10006*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10006*FLEN/8, x4, x1, x2)

inst_5004:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x700000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81700000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10008*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10008*FLEN/8, x4, x1, x2)

inst_5005:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x700000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81700000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10010*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10010*FLEN/8, x4, x1, x2)

inst_5006:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x700000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81700000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10012*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10012*FLEN/8, x4, x1, x2)

inst_5007:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x700000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81700000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10014*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10014*FLEN/8, x4, x1, x2)

inst_5008:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x780000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81780000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10016*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10016*FLEN/8, x4, x1, x2)

inst_5009:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x780000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81780000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10018*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10018*FLEN/8, x4, x1, x2)

inst_5010:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x780000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81780000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10020*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10020*FLEN/8, x4, x1, x2)

inst_5011:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x780000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81780000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10022*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10022*FLEN/8, x4, x1, x2)

inst_5012:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817c0000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10024*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10024*FLEN/8, x4, x1, x2)

inst_5013:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817c0000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10026*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10026*FLEN/8, x4, x1, x2)

inst_5014:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817c0000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10028*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10028*FLEN/8, x4, x1, x2)

inst_5015:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817c0000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10030*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10030*FLEN/8, x4, x1, x2)

inst_5016:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817e0000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10032*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10032*FLEN/8, x4, x1, x2)

inst_5017:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817e0000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10034*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10034*FLEN/8, x4, x1, x2)

inst_5018:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817e0000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10036*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10036*FLEN/8, x4, x1, x2)

inst_5019:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817e0000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10038*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10038*FLEN/8, x4, x1, x2)

inst_5020:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817f0000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10040*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10040*FLEN/8, x4, x1, x2)

inst_5021:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817f0000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10042*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10042*FLEN/8, x4, x1, x2)

inst_5022:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817f0000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10044*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10044*FLEN/8, x4, x1, x2)

inst_5023:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817f0000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10046*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10046*FLEN/8, x4, x1, x2)

inst_5024:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817f8000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10048*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10048*FLEN/8, x4, x1, x2)

inst_5025:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817f8000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10050*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10050*FLEN/8, x4, x1, x2)

inst_5026:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817f8000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10052*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10052*FLEN/8, x4, x1, x2)

inst_5027:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817f8000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10054*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10054*FLEN/8, x4, x1, x2)

inst_5028:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817fc000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10056*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10056*FLEN/8, x4, x1, x2)

inst_5029:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817fc000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10058*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10058*FLEN/8, x4, x1, x2)

inst_5030:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817fc000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10060*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10060*FLEN/8, x4, x1, x2)

inst_5031:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817fc000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10062*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10062*FLEN/8, x4, x1, x2)

inst_5032:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817fe000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10064*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10064*FLEN/8, x4, x1, x2)

inst_5033:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817fe000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10066*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10066*FLEN/8, x4, x1, x2)

inst_5034:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817fe000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10068*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10068*FLEN/8, x4, x1, x2)

inst_5035:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817fe000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10070*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10070*FLEN/8, x4, x1, x2)

inst_5036:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817ff000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10072*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10072*FLEN/8, x4, x1, x2)

inst_5037:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817ff000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10074*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10074*FLEN/8, x4, x1, x2)

inst_5038:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817ff000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10076*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10076*FLEN/8, x4, x1, x2)

inst_5039:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817ff000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10078*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10078*FLEN/8, x4, x1, x2)

inst_5040:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817ff800; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10080*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10080*FLEN/8, x4, x1, x2)

inst_5041:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817ff800; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10082*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10082*FLEN/8, x4, x1, x2)

inst_5042:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817ff800; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10084*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10084*FLEN/8, x4, x1, x2)

inst_5043:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817ff800; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10086*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10086*FLEN/8, x4, x1, x2)

inst_5044:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817ffc00; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10088*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10088*FLEN/8, x4, x1, x2)

inst_5045:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817ffc00; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10090*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10090*FLEN/8, x4, x1, x2)

inst_5046:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817ffc00; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10092*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10092*FLEN/8, x4, x1, x2)

inst_5047:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817ffc00; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10094*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10094*FLEN/8, x4, x1, x2)

inst_5048:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817ffe00; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10096*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10096*FLEN/8, x4, x1, x2)

inst_5049:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817ffe00; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10098*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10098*FLEN/8, x4, x1, x2)

inst_5050:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817ffe00; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10100*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10100*FLEN/8, x4, x1, x2)

inst_5051:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817ffe00; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10102*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10102*FLEN/8, x4, x1, x2)

inst_5052:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817fff00; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10104*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10104*FLEN/8, x4, x1, x2)

inst_5053:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817fff00; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10106*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10106*FLEN/8, x4, x1, x2)

inst_5054:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817fff00; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10108*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10108*FLEN/8, x4, x1, x2)

inst_5055:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817fff00; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10110*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10110*FLEN/8, x4, x1, x2)

inst_5056:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817fff80; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10112*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10112*FLEN/8, x4, x1, x2)

inst_5057:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817fff80; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10114*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10114*FLEN/8, x4, x1, x2)

inst_5058:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817fff80; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10116*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10116*FLEN/8, x4, x1, x2)

inst_5059:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817fff80; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10118*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10118*FLEN/8, x4, x1, x2)

inst_5060:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817fffc0; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10120*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10120*FLEN/8, x4, x1, x2)

inst_5061:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817fffc0; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10122*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10122*FLEN/8, x4, x1, x2)

inst_5062:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817fffc0; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10124*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10124*FLEN/8, x4, x1, x2)

inst_5063:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817fffc0; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10126*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10126*FLEN/8, x4, x1, x2)

inst_5064:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817fffe0; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10128*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10128*FLEN/8, x4, x1, x2)

inst_5065:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817fffe0; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10130*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10130*FLEN/8, x4, x1, x2)

inst_5066:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817fffe0; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10132*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10132*FLEN/8, x4, x1, x2)

inst_5067:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817fffe0; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10134*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10134*FLEN/8, x4, x1, x2)

inst_5068:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817ffff0; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10136*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10136*FLEN/8, x4, x1, x2)

inst_5069:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817ffff0; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10138*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10138*FLEN/8, x4, x1, x2)

inst_5070:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817ffff0; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10140*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10140*FLEN/8, x4, x1, x2)

inst_5071:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817ffff0; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10142*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10142*FLEN/8, x4, x1, x2)

inst_5072:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817ffff8; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10144*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10144*FLEN/8, x4, x1, x2)

inst_5073:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817ffff8; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10146*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10146*FLEN/8, x4, x1, x2)

inst_5074:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817ffff8; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10148*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10148*FLEN/8, x4, x1, x2)

inst_5075:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817ffff8; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10150*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10150*FLEN/8, x4, x1, x2)

inst_5076:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817ffffc; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10152*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10152*FLEN/8, x4, x1, x2)

inst_5077:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817ffffc; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10154*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10154*FLEN/8, x4, x1, x2)

inst_5078:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817ffffc; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10156*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10156*FLEN/8, x4, x1, x2)

inst_5079:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817ffffc; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10158*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10158*FLEN/8, x4, x1, x2)

inst_5080:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817ffffe; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10160*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10160*FLEN/8, x4, x1, x2)

inst_5081:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817ffffe; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10162*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10162*FLEN/8, x4, x1, x2)

inst_5082:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817ffffe; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10164*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10164*FLEN/8, x4, x1, x2)

inst_5083:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817ffffe; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10166*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10166*FLEN/8, x4, x1, x2)

inst_5084:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817fffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10168*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10168*FLEN/8, x4, x1, x2)

inst_5085:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817fffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10170*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10170*FLEN/8, x4, x1, x2)

inst_5086:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817fffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10172*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10172*FLEN/8, x4, x1, x2)

inst_5087:
// fs1 == 1 and fe1 == 0x02 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x817fffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10174*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10174*FLEN/8, x4, x1, x2)

inst_5088:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81800000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10176*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10176*FLEN/8, x4, x1, x2)

inst_5089:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81800000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10178*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10178*FLEN/8, x4, x1, x2)

inst_5090:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81800000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10180*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10180*FLEN/8, x4, x1, x2)

inst_5091:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81800000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10182*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10182*FLEN/8, x4, x1, x2)

inst_5092:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81800001; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10184*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10184*FLEN/8, x4, x1, x2)

inst_5093:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81800001; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10186*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10186*FLEN/8, x4, x1, x2)

inst_5094:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81800001; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10188*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10188*FLEN/8, x4, x1, x2)

inst_5095:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81800001; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10190*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10190*FLEN/8, x4, x1, x2)

inst_5096:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81800003; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10192*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10192*FLEN/8, x4, x1, x2)

inst_5097:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81800003; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10194*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10194*FLEN/8, x4, x1, x2)

inst_5098:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81800003; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10196*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10196*FLEN/8, x4, x1, x2)

inst_5099:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81800003; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10198*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10198*FLEN/8, x4, x1, x2)

inst_5100:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81800007; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10200*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10200*FLEN/8, x4, x1, x2)

inst_5101:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81800007; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10202*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10202*FLEN/8, x4, x1, x2)

inst_5102:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81800007; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10204*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10204*FLEN/8, x4, x1, x2)

inst_5103:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81800007; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10206*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10206*FLEN/8, x4, x1, x2)

inst_5104:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8180000f; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10208*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10208*FLEN/8, x4, x1, x2)

inst_5105:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8180000f; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10210*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10210*FLEN/8, x4, x1, x2)

inst_5106:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8180000f; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10212*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10212*FLEN/8, x4, x1, x2)

inst_5107:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8180000f; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10214*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10214*FLEN/8, x4, x1, x2)

inst_5108:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8180001f; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10216*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10216*FLEN/8, x4, x1, x2)

inst_5109:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8180001f; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10218*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10218*FLEN/8, x4, x1, x2)

inst_5110:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8180001f; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10220*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10220*FLEN/8, x4, x1, x2)

inst_5111:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8180001f; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10222*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10222*FLEN/8, x4, x1, x2)

inst_5112:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8180003f; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10224*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10224*FLEN/8, x4, x1, x2)

inst_5113:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8180003f; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10226*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10226*FLEN/8, x4, x1, x2)

inst_5114:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8180003f; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10228*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10228*FLEN/8, x4, x1, x2)

inst_5115:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8180003f; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10230*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10230*FLEN/8, x4, x1, x2)

inst_5116:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x00007f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8180007f; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10232*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10232*FLEN/8, x4, x1, x2)

inst_5117:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x00007f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8180007f; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10234*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10234*FLEN/8, x4, x1, x2)

inst_5118:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x00007f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8180007f; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10236*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10236*FLEN/8, x4, x1, x2)

inst_5119:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x00007f and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8180007f; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10238*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10238*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_41)

inst_5120:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x818000ff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10240*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10240*FLEN/8, x4, x1, x2)

inst_5121:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x818000ff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10242*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10242*FLEN/8, x4, x1, x2)

inst_5122:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x818000ff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10244*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10244*FLEN/8, x4, x1, x2)

inst_5123:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x818000ff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10246*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10246*FLEN/8, x4, x1, x2)

inst_5124:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x818001ff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10248*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10248*FLEN/8, x4, x1, x2)

inst_5125:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x818001ff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10250*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10250*FLEN/8, x4, x1, x2)

inst_5126:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x818001ff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10252*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10252*FLEN/8, x4, x1, x2)

inst_5127:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x818001ff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10254*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10254*FLEN/8, x4, x1, x2)

inst_5128:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x818003ff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10256*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10256*FLEN/8, x4, x1, x2)

inst_5129:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x818003ff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10258*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10258*FLEN/8, x4, x1, x2)

inst_5130:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x818003ff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10260*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10260*FLEN/8, x4, x1, x2)

inst_5131:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x818003ff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10262*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10262*FLEN/8, x4, x1, x2)

inst_5132:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x818007ff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10264*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10264*FLEN/8, x4, x1, x2)

inst_5133:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x818007ff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10266*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10266*FLEN/8, x4, x1, x2)

inst_5134:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x818007ff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10268*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10268*FLEN/8, x4, x1, x2)

inst_5135:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x818007ff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10270*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10270*FLEN/8, x4, x1, x2)

inst_5136:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x000fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81800fff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10272*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10272*FLEN/8, x4, x1, x2)

inst_5137:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x000fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81800fff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10274*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10274*FLEN/8, x4, x1, x2)

inst_5138:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x000fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81800fff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10276*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10276*FLEN/8, x4, x1, x2)

inst_5139:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x000fff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81800fff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10278*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10278*FLEN/8, x4, x1, x2)

inst_5140:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x001fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81801fff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10280*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10280*FLEN/8, x4, x1, x2)

inst_5141:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x001fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81801fff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10282*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10282*FLEN/8, x4, x1, x2)

inst_5142:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x001fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81801fff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10284*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10284*FLEN/8, x4, x1, x2)

inst_5143:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x001fff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81801fff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10286*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10286*FLEN/8, x4, x1, x2)

inst_5144:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x003fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81803fff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10288*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10288*FLEN/8, x4, x1, x2)

inst_5145:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x003fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81803fff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10290*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10290*FLEN/8, x4, x1, x2)

inst_5146:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x003fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81803fff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10292*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10292*FLEN/8, x4, x1, x2)

inst_5147:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x003fff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81803fff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10294*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10294*FLEN/8, x4, x1, x2)

inst_5148:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x007fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81807fff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10296*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10296*FLEN/8, x4, x1, x2)

inst_5149:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x007fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81807fff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10298*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10298*FLEN/8, x4, x1, x2)

inst_5150:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x007fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81807fff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10300*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10300*FLEN/8, x4, x1, x2)

inst_5151:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x007fff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81807fff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10302*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10302*FLEN/8, x4, x1, x2)

inst_5152:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8180ffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10304*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10304*FLEN/8, x4, x1, x2)

inst_5153:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8180ffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10306*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10306*FLEN/8, x4, x1, x2)

inst_5154:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8180ffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10308*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10308*FLEN/8, x4, x1, x2)

inst_5155:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8180ffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10310*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10310*FLEN/8, x4, x1, x2)

inst_5156:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8181ffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10312*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10312*FLEN/8, x4, x1, x2)

inst_5157:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8181ffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10314*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10314*FLEN/8, x4, x1, x2)

inst_5158:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8181ffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10316*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10316*FLEN/8, x4, x1, x2)

inst_5159:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8181ffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10318*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10318*FLEN/8, x4, x1, x2)

inst_5160:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8183ffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10320*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10320*FLEN/8, x4, x1, x2)

inst_5161:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8183ffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10322*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10322*FLEN/8, x4, x1, x2)

inst_5162:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8183ffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10324*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10324*FLEN/8, x4, x1, x2)

inst_5163:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8183ffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10326*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10326*FLEN/8, x4, x1, x2)

inst_5164:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8187ffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10328*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10328*FLEN/8, x4, x1, x2)

inst_5165:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8187ffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10330*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10330*FLEN/8, x4, x1, x2)

inst_5166:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8187ffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10332*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10332*FLEN/8, x4, x1, x2)

inst_5167:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8187ffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10334*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10334*FLEN/8, x4, x1, x2)

inst_5168:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x818fffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10336*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10336*FLEN/8, x4, x1, x2)

inst_5169:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x818fffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10338*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10338*FLEN/8, x4, x1, x2)

inst_5170:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x818fffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10340*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10340*FLEN/8, x4, x1, x2)

inst_5171:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x818fffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10342*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10342*FLEN/8, x4, x1, x2)

inst_5172:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x819fffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10344*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10344*FLEN/8, x4, x1, x2)

inst_5173:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x819fffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10346*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10346*FLEN/8, x4, x1, x2)

inst_5174:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x819fffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10348*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10348*FLEN/8, x4, x1, x2)

inst_5175:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x819fffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10350*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10350*FLEN/8, x4, x1, x2)

inst_5176:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81bfffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10352*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10352*FLEN/8, x4, x1, x2)

inst_5177:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81bfffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10354*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10354*FLEN/8, x4, x1, x2)

inst_5178:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81bfffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10356*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10356*FLEN/8, x4, x1, x2)

inst_5179:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81bfffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10358*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10358*FLEN/8, x4, x1, x2)

inst_5180:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x400000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81c00000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10360*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10360*FLEN/8, x4, x1, x2)

inst_5181:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x400000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81c00000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10362*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10362*FLEN/8, x4, x1, x2)

inst_5182:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x400000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81c00000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10364*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10364*FLEN/8, x4, x1, x2)

inst_5183:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x400000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81c00000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10366*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10366*FLEN/8, x4, x1, x2)

inst_5184:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x600000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81e00000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10368*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10368*FLEN/8, x4, x1, x2)

inst_5185:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x600000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81e00000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10370*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10370*FLEN/8, x4, x1, x2)

inst_5186:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x600000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81e00000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10372*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10372*FLEN/8, x4, x1, x2)

inst_5187:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x600000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81e00000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10374*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10374*FLEN/8, x4, x1, x2)

inst_5188:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x700000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81f00000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10376*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10376*FLEN/8, x4, x1, x2)

inst_5189:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x700000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81f00000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10378*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10378*FLEN/8, x4, x1, x2)

inst_5190:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x700000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81f00000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10380*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10380*FLEN/8, x4, x1, x2)

inst_5191:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x700000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81f00000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10382*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10382*FLEN/8, x4, x1, x2)

inst_5192:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x780000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81f80000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10384*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10384*FLEN/8, x4, x1, x2)

inst_5193:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x780000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81f80000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10386*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10386*FLEN/8, x4, x1, x2)

inst_5194:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x780000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81f80000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10388*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10388*FLEN/8, x4, x1, x2)

inst_5195:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x780000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81f80000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10390*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10390*FLEN/8, x4, x1, x2)

inst_5196:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fc0000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10392*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10392*FLEN/8, x4, x1, x2)

inst_5197:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fc0000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10394*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10394*FLEN/8, x4, x1, x2)

inst_5198:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fc0000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10396*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10396*FLEN/8, x4, x1, x2)

inst_5199:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fc0000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10398*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10398*FLEN/8, x4, x1, x2)

inst_5200:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fe0000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10400*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10400*FLEN/8, x4, x1, x2)

inst_5201:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fe0000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10402*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10402*FLEN/8, x4, x1, x2)

inst_5202:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fe0000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10404*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10404*FLEN/8, x4, x1, x2)

inst_5203:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fe0000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10406*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10406*FLEN/8, x4, x1, x2)

inst_5204:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ff0000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10408*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10408*FLEN/8, x4, x1, x2)

inst_5205:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ff0000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10410*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10410*FLEN/8, x4, x1, x2)

inst_5206:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ff0000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10412*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10412*FLEN/8, x4, x1, x2)

inst_5207:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ff0000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10414*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10414*FLEN/8, x4, x1, x2)

inst_5208:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ff8000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10416*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10416*FLEN/8, x4, x1, x2)

inst_5209:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ff8000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10418*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10418*FLEN/8, x4, x1, x2)

inst_5210:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ff8000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10420*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10420*FLEN/8, x4, x1, x2)

inst_5211:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ff8000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10422*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10422*FLEN/8, x4, x1, x2)

inst_5212:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ffc000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10424*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10424*FLEN/8, x4, x1, x2)

inst_5213:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ffc000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10426*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10426*FLEN/8, x4, x1, x2)

inst_5214:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ffc000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10428*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10428*FLEN/8, x4, x1, x2)

inst_5215:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ffc000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10430*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10430*FLEN/8, x4, x1, x2)

inst_5216:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ffe000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10432*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10432*FLEN/8, x4, x1, x2)

inst_5217:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ffe000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10434*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10434*FLEN/8, x4, x1, x2)

inst_5218:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ffe000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10436*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10436*FLEN/8, x4, x1, x2)

inst_5219:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ffe000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10438*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10438*FLEN/8, x4, x1, x2)

inst_5220:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fff000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10440*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10440*FLEN/8, x4, x1, x2)

inst_5221:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fff000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10442*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10442*FLEN/8, x4, x1, x2)

inst_5222:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fff000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10444*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10444*FLEN/8, x4, x1, x2)

inst_5223:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fff000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10446*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10446*FLEN/8, x4, x1, x2)

inst_5224:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fff800; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10448*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10448*FLEN/8, x4, x1, x2)

inst_5225:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fff800; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10450*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10450*FLEN/8, x4, x1, x2)

inst_5226:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fff800; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10452*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10452*FLEN/8, x4, x1, x2)

inst_5227:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fff800; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10454*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10454*FLEN/8, x4, x1, x2)

inst_5228:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fffc00; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10456*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10456*FLEN/8, x4, x1, x2)

inst_5229:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fffc00; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10458*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10458*FLEN/8, x4, x1, x2)

inst_5230:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fffc00; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10460*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10460*FLEN/8, x4, x1, x2)

inst_5231:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fffc00; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10462*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10462*FLEN/8, x4, x1, x2)

inst_5232:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fffe00; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10464*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10464*FLEN/8, x4, x1, x2)

inst_5233:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fffe00; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10466*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10466*FLEN/8, x4, x1, x2)

inst_5234:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fffe00; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10468*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10468*FLEN/8, x4, x1, x2)

inst_5235:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fffe00; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10470*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10470*FLEN/8, x4, x1, x2)

inst_5236:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ffff00; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10472*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10472*FLEN/8, x4, x1, x2)

inst_5237:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ffff00; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10474*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10474*FLEN/8, x4, x1, x2)

inst_5238:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ffff00; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10476*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10476*FLEN/8, x4, x1, x2)

inst_5239:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ffff00; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10478*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10478*FLEN/8, x4, x1, x2)

inst_5240:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ffff80; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10480*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10480*FLEN/8, x4, x1, x2)

inst_5241:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ffff80; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10482*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10482*FLEN/8, x4, x1, x2)

inst_5242:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ffff80; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10484*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10484*FLEN/8, x4, x1, x2)

inst_5243:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ffff80; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10486*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10486*FLEN/8, x4, x1, x2)

inst_5244:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ffffc0; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10488*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10488*FLEN/8, x4, x1, x2)

inst_5245:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ffffc0; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10490*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10490*FLEN/8, x4, x1, x2)

inst_5246:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ffffc0; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10492*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10492*FLEN/8, x4, x1, x2)

inst_5247:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ffffc0; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10494*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10494*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_42)

inst_5248:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ffffe0; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10496*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10496*FLEN/8, x4, x1, x2)

inst_5249:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ffffe0; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10498*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10498*FLEN/8, x4, x1, x2)

inst_5250:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ffffe0; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10500*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10500*FLEN/8, x4, x1, x2)

inst_5251:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ffffe0; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10502*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10502*FLEN/8, x4, x1, x2)

inst_5252:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fffff0; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10504*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10504*FLEN/8, x4, x1, x2)

inst_5253:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fffff0; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10506*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10506*FLEN/8, x4, x1, x2)

inst_5254:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fffff0; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10508*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10508*FLEN/8, x4, x1, x2)

inst_5255:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fffff0; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10510*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10510*FLEN/8, x4, x1, x2)

inst_5256:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fffff8; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10512*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10512*FLEN/8, x4, x1, x2)

inst_5257:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fffff8; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10514*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10514*FLEN/8, x4, x1, x2)

inst_5258:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fffff8; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10516*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10516*FLEN/8, x4, x1, x2)

inst_5259:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fffff8; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10518*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10518*FLEN/8, x4, x1, x2)

inst_5260:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fffffc; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10520*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10520*FLEN/8, x4, x1, x2)

inst_5261:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fffffc; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10522*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10522*FLEN/8, x4, x1, x2)

inst_5262:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fffffc; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10524*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10524*FLEN/8, x4, x1, x2)

inst_5263:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fffffc; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10526*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10526*FLEN/8, x4, x1, x2)

inst_5264:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fffffe; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10528*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10528*FLEN/8, x4, x1, x2)

inst_5265:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fffffe; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10530*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10530*FLEN/8, x4, x1, x2)

inst_5266:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fffffe; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10532*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10532*FLEN/8, x4, x1, x2)

inst_5267:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81fffffe; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10534*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10534*FLEN/8, x4, x1, x2)

inst_5268:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ffffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10536*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10536*FLEN/8, x4, x1, x2)

inst_5269:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ffffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:10538*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10538*FLEN/8, x4, x1, x2)

inst_5270:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ffffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:10540*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10540*FLEN/8, x4, x1, x2)

inst_5271:
// fs1 == 1 and fe1 == 0x03 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x81ffffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10542*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10542*FLEN/8, x4, x1, x2)

inst_5272:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x82000000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10544*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10544*FLEN/8, x4, x1, x2)

inst_5273:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x82000001; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10546*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10546*FLEN/8, x4, x1, x2)

inst_5274:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x82000003; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10548*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10548*FLEN/8, x4, x1, x2)

inst_5275:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x82000007; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10550*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10550*FLEN/8, x4, x1, x2)

inst_5276:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8200000f; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10552*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10552*FLEN/8, x4, x1, x2)

inst_5277:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8200001f; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10554*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10554*FLEN/8, x4, x1, x2)

inst_5278:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8200003f; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10556*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10556*FLEN/8, x4, x1, x2)

inst_5279:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x00007f and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8200007f; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10558*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10558*FLEN/8, x4, x1, x2)

inst_5280:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x820000ff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10560*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10560*FLEN/8, x4, x1, x2)

inst_5281:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x820001ff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10562*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10562*FLEN/8, x4, x1, x2)

inst_5282:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x820003ff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10564*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10564*FLEN/8, x4, x1, x2)

inst_5283:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x820007ff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10566*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10566*FLEN/8, x4, x1, x2)

inst_5284:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x000fff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x82000fff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10568*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10568*FLEN/8, x4, x1, x2)

inst_5285:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x001fff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x82001fff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10570*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10570*FLEN/8, x4, x1, x2)

inst_5286:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x003fff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x82003fff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10572*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10572*FLEN/8, x4, x1, x2)

inst_5287:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x007fff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x82007fff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10574*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10574*FLEN/8, x4, x1, x2)

inst_5288:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8200ffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10576*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10576*FLEN/8, x4, x1, x2)

inst_5289:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8201ffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10578*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10578*FLEN/8, x4, x1, x2)

inst_5290:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8203ffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10580*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10580*FLEN/8, x4, x1, x2)

inst_5291:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x8207ffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10582*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10582*FLEN/8, x4, x1, x2)

inst_5292:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x820fffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10584*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10584*FLEN/8, x4, x1, x2)

inst_5293:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x821fffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10586*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10586*FLEN/8, x4, x1, x2)

inst_5294:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x823fffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10588*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10588*FLEN/8, x4, x1, x2)

inst_5295:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x400000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x82400000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10590*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10590*FLEN/8, x4, x1, x2)

inst_5296:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x600000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x82600000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10592*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10592*FLEN/8, x4, x1, x2)

inst_5297:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x700000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x82700000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10594*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10594*FLEN/8, x4, x1, x2)

inst_5298:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x780000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x82780000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10596*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10596*FLEN/8, x4, x1, x2)

inst_5299:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x827c0000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10598*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10598*FLEN/8, x4, x1, x2)

inst_5300:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x827e0000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10600*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10600*FLEN/8, x4, x1, x2)

inst_5301:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x827f0000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10602*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10602*FLEN/8, x4, x1, x2)

inst_5302:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x827f8000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10604*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10604*FLEN/8, x4, x1, x2)

inst_5303:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x827fc000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10606*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10606*FLEN/8, x4, x1, x2)

inst_5304:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x827fe000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10608*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10608*FLEN/8, x4, x1, x2)

inst_5305:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x827ff000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10610*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10610*FLEN/8, x4, x1, x2)

inst_5306:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x827ff800; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10612*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10612*FLEN/8, x4, x1, x2)

inst_5307:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x827ffc00; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10614*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10614*FLEN/8, x4, x1, x2)

inst_5308:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x827ffe00; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10616*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10616*FLEN/8, x4, x1, x2)

inst_5309:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x827fff00; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10618*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10618*FLEN/8, x4, x1, x2)

inst_5310:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x827fff80; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10620*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10620*FLEN/8, x4, x1, x2)

inst_5311:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x827fffc0; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10622*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10622*FLEN/8, x4, x1, x2)

inst_5312:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x827fffe0; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10624*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10624*FLEN/8, x4, x1, x2)

inst_5313:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x827ffff0; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10626*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10626*FLEN/8, x4, x1, x2)

inst_5314:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x827ffff8; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10628*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10628*FLEN/8, x4, x1, x2)

inst_5315:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x827ffffc; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10630*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10630*FLEN/8, x4, x1, x2)

inst_5316:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x827ffffe; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10632*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10632*FLEN/8, x4, x1, x2)

inst_5317:
// fs1 == 1 and fe1 == 0x04 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x827fffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:10634*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10634*FLEN/8, x4, x1, x2)

inst_5318:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9a800000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10636*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10636*FLEN/8, x4, x1, x2)

inst_5319:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9a800001; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10638*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10638*FLEN/8, x4, x1, x2)

inst_5320:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9a800003; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10640*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10640*FLEN/8, x4, x1, x2)

inst_5321:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9a800007; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10642*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10642*FLEN/8, x4, x1, x2)

inst_5322:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9a80000f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10644*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10644*FLEN/8, x4, x1, x2)

inst_5323:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9a80001f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10646*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10646*FLEN/8, x4, x1, x2)

inst_5324:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9a80003f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10648*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10648*FLEN/8, x4, x1, x2)

inst_5325:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x00007f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9a80007f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10650*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10650*FLEN/8, x4, x1, x2)

inst_5326:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9a8000ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10652*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10652*FLEN/8, x4, x1, x2)

inst_5327:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9a8001ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10654*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10654*FLEN/8, x4, x1, x2)

inst_5328:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9a8003ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10656*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10656*FLEN/8, x4, x1, x2)

inst_5329:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9a8007ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10658*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10658*FLEN/8, x4, x1, x2)

inst_5330:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x000fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9a800fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10660*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10660*FLEN/8, x4, x1, x2)

inst_5331:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x001fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9a801fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10662*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10662*FLEN/8, x4, x1, x2)

inst_5332:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x003fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9a803fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10664*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10664*FLEN/8, x4, x1, x2)

inst_5333:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x007fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9a807fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10666*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10666*FLEN/8, x4, x1, x2)

inst_5334:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9a80ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10668*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10668*FLEN/8, x4, x1, x2)

inst_5335:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9a81ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10670*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10670*FLEN/8, x4, x1, x2)

inst_5336:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9a83ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10672*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10672*FLEN/8, x4, x1, x2)

inst_5337:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9a87ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10674*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10674*FLEN/8, x4, x1, x2)

inst_5338:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9a8fffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10676*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10676*FLEN/8, x4, x1, x2)

inst_5339:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9a9fffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10678*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10678*FLEN/8, x4, x1, x2)

inst_5340:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9abfffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10680*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10680*FLEN/8, x4, x1, x2)

inst_5341:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x400000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9ac00000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10682*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10682*FLEN/8, x4, x1, x2)

inst_5342:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x600000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9ae00000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10684*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10684*FLEN/8, x4, x1, x2)

inst_5343:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x700000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9af00000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10686*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10686*FLEN/8, x4, x1, x2)

inst_5344:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x780000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9af80000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10688*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10688*FLEN/8, x4, x1, x2)

inst_5345:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9afc0000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10690*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10690*FLEN/8, x4, x1, x2)

inst_5346:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9afe0000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10692*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10692*FLEN/8, x4, x1, x2)

inst_5347:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9aff0000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10694*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10694*FLEN/8, x4, x1, x2)

inst_5348:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9aff8000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10696*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10696*FLEN/8, x4, x1, x2)

inst_5349:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9affc000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10698*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10698*FLEN/8, x4, x1, x2)

inst_5350:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9affe000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10700*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10700*FLEN/8, x4, x1, x2)

inst_5351:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9afff000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10702*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10702*FLEN/8, x4, x1, x2)

inst_5352:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9afff800; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10704*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10704*FLEN/8, x4, x1, x2)

inst_5353:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9afffc00; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10706*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10706*FLEN/8, x4, x1, x2)

inst_5354:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9afffe00; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10708*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10708*FLEN/8, x4, x1, x2)

inst_5355:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9affff00; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10710*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10710*FLEN/8, x4, x1, x2)

inst_5356:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9affff80; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10712*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10712*FLEN/8, x4, x1, x2)

inst_5357:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9affffc0; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10714*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10714*FLEN/8, x4, x1, x2)

inst_5358:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9affffe0; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10716*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10716*FLEN/8, x4, x1, x2)

inst_5359:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9afffff0; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10718*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10718*FLEN/8, x4, x1, x2)

inst_5360:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9afffff8; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10720*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10720*FLEN/8, x4, x1, x2)

inst_5361:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9afffffc; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10722*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10722*FLEN/8, x4, x1, x2)

inst_5362:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9afffffe; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10724*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10724*FLEN/8, x4, x1, x2)

inst_5363:
// fs1 == 1 and fe1 == 0x35 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x9affffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10726*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10726*FLEN/8, x4, x1, x2)

inst_5364:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb3000000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10728*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10728*FLEN/8, x4, x1, x2)

inst_5365:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb3000001; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10730*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10730*FLEN/8, x4, x1, x2)

inst_5366:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb3000003; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10732*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10732*FLEN/8, x4, x1, x2)

inst_5367:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb3000007; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10734*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10734*FLEN/8, x4, x1, x2)

inst_5368:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb300000f; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10736*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10736*FLEN/8, x4, x1, x2)

inst_5369:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb300001f; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10738*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10738*FLEN/8, x4, x1, x2)

inst_5370:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb300003f; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10740*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10740*FLEN/8, x4, x1, x2)

inst_5371:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x00007f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb300007f; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10742*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10742*FLEN/8, x4, x1, x2)

inst_5372:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb30000ff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10744*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10744*FLEN/8, x4, x1, x2)

inst_5373:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb30001ff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10746*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10746*FLEN/8, x4, x1, x2)

inst_5374:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb30003ff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10748*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10748*FLEN/8, x4, x1, x2)

inst_5375:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb30007ff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10750*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10750*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_43)

inst_5376:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x000fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb3000fff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10752*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10752*FLEN/8, x4, x1, x2)

inst_5377:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x001fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb3001fff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10754*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10754*FLEN/8, x4, x1, x2)

inst_5378:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x003fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb3003fff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10756*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10756*FLEN/8, x4, x1, x2)

inst_5379:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x007fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb3007fff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10758*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10758*FLEN/8, x4, x1, x2)

inst_5380:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb300ffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10760*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10760*FLEN/8, x4, x1, x2)

inst_5381:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb301ffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10762*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10762*FLEN/8, x4, x1, x2)

inst_5382:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb303ffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10764*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10764*FLEN/8, x4, x1, x2)

inst_5383:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb307ffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10766*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10766*FLEN/8, x4, x1, x2)

inst_5384:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb30fffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10768*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10768*FLEN/8, x4, x1, x2)

inst_5385:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb31fffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10770*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10770*FLEN/8, x4, x1, x2)

inst_5386:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb33fffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10772*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10772*FLEN/8, x4, x1, x2)

inst_5387:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x400000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb3400000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10774*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10774*FLEN/8, x4, x1, x2)

inst_5388:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x600000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb3600000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10776*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10776*FLEN/8, x4, x1, x2)

inst_5389:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x700000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb3700000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10778*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10778*FLEN/8, x4, x1, x2)

inst_5390:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x780000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb3780000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10780*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10780*FLEN/8, x4, x1, x2)

inst_5391:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb37c0000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10782*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10782*FLEN/8, x4, x1, x2)

inst_5392:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb37e0000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10784*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10784*FLEN/8, x4, x1, x2)

inst_5393:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb37f0000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10786*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10786*FLEN/8, x4, x1, x2)

inst_5394:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb37f8000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10788*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10788*FLEN/8, x4, x1, x2)

inst_5395:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb37fc000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10790*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10790*FLEN/8, x4, x1, x2)

inst_5396:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb37fe000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10792*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10792*FLEN/8, x4, x1, x2)

inst_5397:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb37ff000; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10794*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10794*FLEN/8, x4, x1, x2)

inst_5398:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb37ff800; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10796*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10796*FLEN/8, x4, x1, x2)

inst_5399:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb37ffc00; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10798*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10798*FLEN/8, x4, x1, x2)

inst_5400:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb37ffe00; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10800*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10800*FLEN/8, x4, x1, x2)

inst_5401:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb37fff00; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10802*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10802*FLEN/8, x4, x1, x2)

inst_5402:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb37fff80; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10804*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10804*FLEN/8, x4, x1, x2)

inst_5403:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb37fffc0; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10806*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10806*FLEN/8, x4, x1, x2)

inst_5404:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb37fffe0; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10808*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10808*FLEN/8, x4, x1, x2)

inst_5405:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb37ffff0; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10810*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10810*FLEN/8, x4, x1, x2)

inst_5406:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb37ffff8; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10812*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10812*FLEN/8, x4, x1, x2)

inst_5407:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb37ffffc; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10814*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10814*FLEN/8, x4, x1, x2)

inst_5408:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb37ffffe; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10816*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10816*FLEN/8, x4, x1, x2)

inst_5409:
// fs1 == 1 and fe1 == 0x66 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xb37fffff; op2val:0x80000000; 
   valaddr_reg:x3; val_offset:10818*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10818*FLEN/8, x4, x1, x2)

inst_5410:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbd800000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10820*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10820*FLEN/8, x4, x1, x2)

inst_5411:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbd800001; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10822*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10822*FLEN/8, x4, x1, x2)

inst_5412:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbd800003; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10824*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10824*FLEN/8, x4, x1, x2)

inst_5413:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbd800007; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10826*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10826*FLEN/8, x4, x1, x2)

inst_5414:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbd80000f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10828*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10828*FLEN/8, x4, x1, x2)

inst_5415:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbd80001f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10830*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10830*FLEN/8, x4, x1, x2)

inst_5416:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbd80003f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10832*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10832*FLEN/8, x4, x1, x2)

inst_5417:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x00007f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbd80007f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10834*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10834*FLEN/8, x4, x1, x2)

inst_5418:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbd8000ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10836*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10836*FLEN/8, x4, x1, x2)

inst_5419:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbd8001ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10838*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10838*FLEN/8, x4, x1, x2)

inst_5420:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbd8003ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10840*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10840*FLEN/8, x4, x1, x2)

inst_5421:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbd8007ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10842*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10842*FLEN/8, x4, x1, x2)

inst_5422:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x000fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbd800fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10844*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10844*FLEN/8, x4, x1, x2)

inst_5423:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x001fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbd801fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10846*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10846*FLEN/8, x4, x1, x2)

inst_5424:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x003fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbd803fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10848*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10848*FLEN/8, x4, x1, x2)

inst_5425:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x007fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbd807fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10850*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10850*FLEN/8, x4, x1, x2)

inst_5426:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbd80ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10852*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10852*FLEN/8, x4, x1, x2)

inst_5427:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbd81ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10854*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10854*FLEN/8, x4, x1, x2)

inst_5428:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbd83ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10856*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10856*FLEN/8, x4, x1, x2)

inst_5429:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbd87ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10858*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10858*FLEN/8, x4, x1, x2)

inst_5430:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbd8fffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10860*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10860*FLEN/8, x4, x1, x2)

inst_5431:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbd9fffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10862*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10862*FLEN/8, x4, x1, x2)

inst_5432:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbdbfffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10864*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10864*FLEN/8, x4, x1, x2)

inst_5433:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x400000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbdc00000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10866*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10866*FLEN/8, x4, x1, x2)

inst_5434:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x600000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbde00000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10868*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10868*FLEN/8, x4, x1, x2)

inst_5435:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x700000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbdf00000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10870*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10870*FLEN/8, x4, x1, x2)

inst_5436:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x780000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbdf80000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10872*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10872*FLEN/8, x4, x1, x2)

inst_5437:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbdfc0000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10874*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10874*FLEN/8, x4, x1, x2)

inst_5438:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbdfe0000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10876*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10876*FLEN/8, x4, x1, x2)

inst_5439:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbdff0000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10878*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10878*FLEN/8, x4, x1, x2)

inst_5440:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbdff8000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10880*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10880*FLEN/8, x4, x1, x2)

inst_5441:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbdffc000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10882*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10882*FLEN/8, x4, x1, x2)

inst_5442:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbdffe000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10884*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10884*FLEN/8, x4, x1, x2)

inst_5443:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbdfff000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10886*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10886*FLEN/8, x4, x1, x2)

inst_5444:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbdfff800; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10888*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10888*FLEN/8, x4, x1, x2)

inst_5445:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbdfffc00; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10890*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10890*FLEN/8, x4, x1, x2)

inst_5446:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbdfffe00; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10892*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10892*FLEN/8, x4, x1, x2)

inst_5447:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbdffff00; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10894*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10894*FLEN/8, x4, x1, x2)

inst_5448:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbdffff80; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10896*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10896*FLEN/8, x4, x1, x2)

inst_5449:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbdffffc0; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10898*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10898*FLEN/8, x4, x1, x2)

inst_5450:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbdffffe0; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10900*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10900*FLEN/8, x4, x1, x2)

inst_5451:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbdfffff0; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10902*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10902*FLEN/8, x4, x1, x2)

inst_5452:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbdfffff8; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10904*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10904*FLEN/8, x4, x1, x2)

inst_5453:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbdfffffc; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10906*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10906*FLEN/8, x4, x1, x2)

inst_5454:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbdfffffe; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10908*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10908*FLEN/8, x4, x1, x2)

inst_5455:
// fs1 == 1 and fe1 == 0x7b and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbdffffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10910*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10910*FLEN/8, x4, x1, x2)

inst_5456:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe000000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10912*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10912*FLEN/8, x4, x1, x2)

inst_5457:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe000001; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10914*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10914*FLEN/8, x4, x1, x2)

inst_5458:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe000003; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10916*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10916*FLEN/8, x4, x1, x2)

inst_5459:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe000007; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10918*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10918*FLEN/8, x4, x1, x2)

inst_5460:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe00000f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10920*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10920*FLEN/8, x4, x1, x2)

inst_5461:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe00001f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10922*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10922*FLEN/8, x4, x1, x2)

inst_5462:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe00003f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10924*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10924*FLEN/8, x4, x1, x2)

inst_5463:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x00007f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe00007f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10926*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10926*FLEN/8, x4, x1, x2)

inst_5464:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe0000ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10928*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10928*FLEN/8, x4, x1, x2)

inst_5465:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe0001ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10930*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10930*FLEN/8, x4, x1, x2)

inst_5466:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe0003ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10932*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10932*FLEN/8, x4, x1, x2)

inst_5467:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe0007ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10934*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10934*FLEN/8, x4, x1, x2)

inst_5468:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x000fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe000fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10936*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10936*FLEN/8, x4, x1, x2)

inst_5469:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x001fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe001fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10938*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10938*FLEN/8, x4, x1, x2)

inst_5470:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x003fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe003fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10940*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10940*FLEN/8, x4, x1, x2)

inst_5471:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x007fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe007fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10942*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10942*FLEN/8, x4, x1, x2)

inst_5472:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe00ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10944*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10944*FLEN/8, x4, x1, x2)

inst_5473:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe01ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10946*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10946*FLEN/8, x4, x1, x2)

inst_5474:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe03ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10948*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10948*FLEN/8, x4, x1, x2)

inst_5475:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe07ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10950*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10950*FLEN/8, x4, x1, x2)

inst_5476:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe0fffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10952*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10952*FLEN/8, x4, x1, x2)

inst_5477:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe1fffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10954*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10954*FLEN/8, x4, x1, x2)

inst_5478:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe3fffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10956*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10956*FLEN/8, x4, x1, x2)

inst_5479:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x400000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe400000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10958*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10958*FLEN/8, x4, x1, x2)

inst_5480:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x600000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe600000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10960*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10960*FLEN/8, x4, x1, x2)

inst_5481:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x700000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe700000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10962*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10962*FLEN/8, x4, x1, x2)

inst_5482:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x780000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe780000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10964*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10964*FLEN/8, x4, x1, x2)

inst_5483:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe7c0000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10966*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10966*FLEN/8, x4, x1, x2)

inst_5484:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe7e0000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10968*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10968*FLEN/8, x4, x1, x2)

inst_5485:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe7f0000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10970*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10970*FLEN/8, x4, x1, x2)

inst_5486:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe7f8000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10972*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10972*FLEN/8, x4, x1, x2)

inst_5487:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe7fc000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10974*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10974*FLEN/8, x4, x1, x2)

inst_5488:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe7fe000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10976*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10976*FLEN/8, x4, x1, x2)

inst_5489:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe7ff000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10978*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10978*FLEN/8, x4, x1, x2)

inst_5490:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe7ff800; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10980*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10980*FLEN/8, x4, x1, x2)

inst_5491:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe7ffc00; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10982*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10982*FLEN/8, x4, x1, x2)

inst_5492:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe7ffe00; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10984*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10984*FLEN/8, x4, x1, x2)

inst_5493:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe7fff00; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10986*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10986*FLEN/8, x4, x1, x2)

inst_5494:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe7fff80; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10988*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10988*FLEN/8, x4, x1, x2)

inst_5495:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe7fffc0; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10990*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10990*FLEN/8, x4, x1, x2)

inst_5496:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe7fffe0; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10992*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10992*FLEN/8, x4, x1, x2)

inst_5497:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe7ffff0; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10994*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10994*FLEN/8, x4, x1, x2)

inst_5498:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe7ffff8; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10996*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10996*FLEN/8, x4, x1, x2)

inst_5499:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe7ffffc; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:10998*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 10998*FLEN/8, x4, x1, x2)

inst_5500:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe7ffffe; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11000*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11000*FLEN/8, x4, x1, x2)

inst_5501:
// fs1 == 1 and fe1 == 0x7c and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe7fffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11002*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11002*FLEN/8, x4, x1, x2)

inst_5502:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe800000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11004*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11004*FLEN/8, x4, x1, x2)

inst_5503:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe800001; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11006*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11006*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_44)

inst_5504:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe800003; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11008*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11008*FLEN/8, x4, x1, x2)

inst_5505:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe800007; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11010*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11010*FLEN/8, x4, x1, x2)

inst_5506:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe80000f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11012*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11012*FLEN/8, x4, x1, x2)

inst_5507:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe80001f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11014*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11014*FLEN/8, x4, x1, x2)

inst_5508:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe80003f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11016*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11016*FLEN/8, x4, x1, x2)

inst_5509:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x00007f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe80007f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11018*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11018*FLEN/8, x4, x1, x2)

inst_5510:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe8000ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11020*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11020*FLEN/8, x4, x1, x2)

inst_5511:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe8001ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11022*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11022*FLEN/8, x4, x1, x2)

inst_5512:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe8003ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11024*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11024*FLEN/8, x4, x1, x2)

inst_5513:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe8007ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11026*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11026*FLEN/8, x4, x1, x2)

inst_5514:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x000fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe800fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11028*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11028*FLEN/8, x4, x1, x2)

inst_5515:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x001fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe801fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11030*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11030*FLEN/8, x4, x1, x2)

inst_5516:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x003fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe803fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11032*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11032*FLEN/8, x4, x1, x2)

inst_5517:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x007fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe807fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11034*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11034*FLEN/8, x4, x1, x2)

inst_5518:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe80ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11036*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11036*FLEN/8, x4, x1, x2)

inst_5519:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe81ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11038*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11038*FLEN/8, x4, x1, x2)

inst_5520:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe83ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11040*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11040*FLEN/8, x4, x1, x2)

inst_5521:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe87ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11042*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11042*FLEN/8, x4, x1, x2)

inst_5522:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe8fffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11044*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11044*FLEN/8, x4, x1, x2)

inst_5523:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbe9fffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11046*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11046*FLEN/8, x4, x1, x2)

inst_5524:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbebfffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11048*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11048*FLEN/8, x4, x1, x2)

inst_5525:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x400000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbec00000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11050*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11050*FLEN/8, x4, x1, x2)

inst_5526:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x600000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbee00000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11052*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11052*FLEN/8, x4, x1, x2)

inst_5527:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x700000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbef00000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11054*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11054*FLEN/8, x4, x1, x2)

inst_5528:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x780000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbef80000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11056*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11056*FLEN/8, x4, x1, x2)

inst_5529:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbefc0000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11058*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11058*FLEN/8, x4, x1, x2)

inst_5530:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbefe0000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11060*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11060*FLEN/8, x4, x1, x2)

inst_5531:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbeff0000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11062*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11062*FLEN/8, x4, x1, x2)

inst_5532:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbeff8000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11064*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11064*FLEN/8, x4, x1, x2)

inst_5533:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbeffc000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11066*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11066*FLEN/8, x4, x1, x2)

inst_5534:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbeffe000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11068*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11068*FLEN/8, x4, x1, x2)

inst_5535:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbefff000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11070*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11070*FLEN/8, x4, x1, x2)

inst_5536:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbefff800; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11072*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11072*FLEN/8, x4, x1, x2)

inst_5537:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbefffc00; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11074*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11074*FLEN/8, x4, x1, x2)

inst_5538:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbefffe00; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11076*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11076*FLEN/8, x4, x1, x2)

inst_5539:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbeffff00; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11078*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11078*FLEN/8, x4, x1, x2)

inst_5540:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbeffff80; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11080*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11080*FLEN/8, x4, x1, x2)

inst_5541:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbeffffc0; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11082*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11082*FLEN/8, x4, x1, x2)

inst_5542:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbeffffe0; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11084*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11084*FLEN/8, x4, x1, x2)

inst_5543:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbefffff0; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11086*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11086*FLEN/8, x4, x1, x2)

inst_5544:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbefffff8; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11088*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11088*FLEN/8, x4, x1, x2)

inst_5545:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbefffffc; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11090*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11090*FLEN/8, x4, x1, x2)

inst_5546:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbefffffe; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11092*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11092*FLEN/8, x4, x1, x2)

inst_5547:
// fs1 == 1 and fe1 == 0x7d and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbeffffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11094*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11094*FLEN/8, x4, x1, x2)

inst_5548:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf000000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11096*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11096*FLEN/8, x4, x1, x2)

inst_5549:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf000001; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11098*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11098*FLEN/8, x4, x1, x2)

inst_5550:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf000003; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11100*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11100*FLEN/8, x4, x1, x2)

inst_5551:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf000007; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11102*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11102*FLEN/8, x4, x1, x2)

inst_5552:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf00000f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11104*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11104*FLEN/8, x4, x1, x2)

inst_5553:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf00001f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11106*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11106*FLEN/8, x4, x1, x2)

inst_5554:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf00003f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11108*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11108*FLEN/8, x4, x1, x2)

inst_5555:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x00007f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf00007f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11110*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11110*FLEN/8, x4, x1, x2)

inst_5556:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf0000ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11112*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11112*FLEN/8, x4, x1, x2)

inst_5557:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf0001ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11114*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11114*FLEN/8, x4, x1, x2)

inst_5558:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf0003ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11116*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11116*FLEN/8, x4, x1, x2)

inst_5559:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf0007ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11118*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11118*FLEN/8, x4, x1, x2)

inst_5560:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x000fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf000fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11120*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11120*FLEN/8, x4, x1, x2)

inst_5561:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x001fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf001fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11122*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11122*FLEN/8, x4, x1, x2)

inst_5562:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x003fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf003fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11124*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11124*FLEN/8, x4, x1, x2)

inst_5563:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x007fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf007fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11126*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11126*FLEN/8, x4, x1, x2)

inst_5564:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf00ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11128*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11128*FLEN/8, x4, x1, x2)

inst_5565:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf01ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11130*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11130*FLEN/8, x4, x1, x2)

inst_5566:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf03ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11132*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11132*FLEN/8, x4, x1, x2)

inst_5567:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf07ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11134*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11134*FLEN/8, x4, x1, x2)

inst_5568:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf0fffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11136*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11136*FLEN/8, x4, x1, x2)

inst_5569:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf1fffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11138*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11138*FLEN/8, x4, x1, x2)

inst_5570:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf3fffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11140*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11140*FLEN/8, x4, x1, x2)

inst_5571:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x400000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf400000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11142*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11142*FLEN/8, x4, x1, x2)

inst_5572:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x600000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf600000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11144*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11144*FLEN/8, x4, x1, x2)

inst_5573:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x700000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf700000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11146*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11146*FLEN/8, x4, x1, x2)

inst_5574:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x780000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf780000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11148*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11148*FLEN/8, x4, x1, x2)

inst_5575:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf7c0000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11150*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11150*FLEN/8, x4, x1, x2)

inst_5576:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf7e0000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11152*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11152*FLEN/8, x4, x1, x2)

inst_5577:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf7f0000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11154*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11154*FLEN/8, x4, x1, x2)

inst_5578:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf7f8000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11156*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11156*FLEN/8, x4, x1, x2)

inst_5579:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf7fc000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11158*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11158*FLEN/8, x4, x1, x2)

inst_5580:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf7fe000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11160*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11160*FLEN/8, x4, x1, x2)

inst_5581:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf7ff000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11162*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11162*FLEN/8, x4, x1, x2)

inst_5582:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf7ff800; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11164*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11164*FLEN/8, x4, x1, x2)

inst_5583:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf7ffc00; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11166*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11166*FLEN/8, x4, x1, x2)

inst_5584:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf7ffe00; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11168*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11168*FLEN/8, x4, x1, x2)

inst_5585:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf7fff00; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11170*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11170*FLEN/8, x4, x1, x2)

inst_5586:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf7fff80; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11172*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11172*FLEN/8, x4, x1, x2)

inst_5587:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf7fffc0; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11174*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11174*FLEN/8, x4, x1, x2)

inst_5588:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf7fffe0; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11176*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11176*FLEN/8, x4, x1, x2)

inst_5589:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf7ffff0; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11178*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11178*FLEN/8, x4, x1, x2)

inst_5590:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf7ffff8; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11180*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11180*FLEN/8, x4, x1, x2)

inst_5591:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf7ffffc; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11182*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11182*FLEN/8, x4, x1, x2)

inst_5592:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf7ffffe; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11184*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11184*FLEN/8, x4, x1, x2)

inst_5593:
// fs1 == 1 and fe1 == 0x7e and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf7fffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11186*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11186*FLEN/8, x4, x1, x2)

inst_5594:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9a800000; 
   valaddr_reg:x3; val_offset:11188*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11188*FLEN/8, x4, x1, x2)

inst_5595:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9a800001; 
   valaddr_reg:x3; val_offset:11190*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11190*FLEN/8, x4, x1, x2)

inst_5596:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9a800003; 
   valaddr_reg:x3; val_offset:11192*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11192*FLEN/8, x4, x1, x2)

inst_5597:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9a800007; 
   valaddr_reg:x3; val_offset:11194*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11194*FLEN/8, x4, x1, x2)

inst_5598:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9a80000f; 
   valaddr_reg:x3; val_offset:11196*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11196*FLEN/8, x4, x1, x2)

inst_5599:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9a80001f; 
   valaddr_reg:x3; val_offset:11198*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11198*FLEN/8, x4, x1, x2)

inst_5600:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9a80003f; 
   valaddr_reg:x3; val_offset:11200*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11200*FLEN/8, x4, x1, x2)

inst_5601:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9a80007f; 
   valaddr_reg:x3; val_offset:11202*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11202*FLEN/8, x4, x1, x2)

inst_5602:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9a8000ff; 
   valaddr_reg:x3; val_offset:11204*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11204*FLEN/8, x4, x1, x2)

inst_5603:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9a8001ff; 
   valaddr_reg:x3; val_offset:11206*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11206*FLEN/8, x4, x1, x2)

inst_5604:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9a8003ff; 
   valaddr_reg:x3; val_offset:11208*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11208*FLEN/8, x4, x1, x2)

inst_5605:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9a8007ff; 
   valaddr_reg:x3; val_offset:11210*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11210*FLEN/8, x4, x1, x2)

inst_5606:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9a800fff; 
   valaddr_reg:x3; val_offset:11212*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11212*FLEN/8, x4, x1, x2)

inst_5607:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9a801fff; 
   valaddr_reg:x3; val_offset:11214*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11214*FLEN/8, x4, x1, x2)

inst_5608:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9a803fff; 
   valaddr_reg:x3; val_offset:11216*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11216*FLEN/8, x4, x1, x2)

inst_5609:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9a807fff; 
   valaddr_reg:x3; val_offset:11218*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11218*FLEN/8, x4, x1, x2)

inst_5610:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9a80ffff; 
   valaddr_reg:x3; val_offset:11220*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11220*FLEN/8, x4, x1, x2)

inst_5611:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9a81ffff; 
   valaddr_reg:x3; val_offset:11222*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11222*FLEN/8, x4, x1, x2)

inst_5612:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9a83ffff; 
   valaddr_reg:x3; val_offset:11224*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11224*FLEN/8, x4, x1, x2)

inst_5613:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9a87ffff; 
   valaddr_reg:x3; val_offset:11226*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11226*FLEN/8, x4, x1, x2)

inst_5614:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9a8fffff; 
   valaddr_reg:x3; val_offset:11228*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11228*FLEN/8, x4, x1, x2)

inst_5615:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9a9fffff; 
   valaddr_reg:x3; val_offset:11230*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11230*FLEN/8, x4, x1, x2)

inst_5616:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9abfffff; 
   valaddr_reg:x3; val_offset:11232*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11232*FLEN/8, x4, x1, x2)

inst_5617:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9ac00000; 
   valaddr_reg:x3; val_offset:11234*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11234*FLEN/8, x4, x1, x2)

inst_5618:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9ae00000; 
   valaddr_reg:x3; val_offset:11236*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11236*FLEN/8, x4, x1, x2)

inst_5619:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9af00000; 
   valaddr_reg:x3; val_offset:11238*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11238*FLEN/8, x4, x1, x2)

inst_5620:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9af80000; 
   valaddr_reg:x3; val_offset:11240*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11240*FLEN/8, x4, x1, x2)

inst_5621:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9afc0000; 
   valaddr_reg:x3; val_offset:11242*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11242*FLEN/8, x4, x1, x2)

inst_5622:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9afe0000; 
   valaddr_reg:x3; val_offset:11244*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11244*FLEN/8, x4, x1, x2)

inst_5623:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9aff0000; 
   valaddr_reg:x3; val_offset:11246*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11246*FLEN/8, x4, x1, x2)

inst_5624:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9aff8000; 
   valaddr_reg:x3; val_offset:11248*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11248*FLEN/8, x4, x1, x2)

inst_5625:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9affc000; 
   valaddr_reg:x3; val_offset:11250*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11250*FLEN/8, x4, x1, x2)

inst_5626:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9affe000; 
   valaddr_reg:x3; val_offset:11252*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11252*FLEN/8, x4, x1, x2)

inst_5627:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9afff000; 
   valaddr_reg:x3; val_offset:11254*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11254*FLEN/8, x4, x1, x2)

inst_5628:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9afff800; 
   valaddr_reg:x3; val_offset:11256*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11256*FLEN/8, x4, x1, x2)

inst_5629:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9afffc00; 
   valaddr_reg:x3; val_offset:11258*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11258*FLEN/8, x4, x1, x2)

inst_5630:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9afffe00; 
   valaddr_reg:x3; val_offset:11260*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11260*FLEN/8, x4, x1, x2)

inst_5631:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9affff00; 
   valaddr_reg:x3; val_offset:11262*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11262*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_45)

inst_5632:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9affff80; 
   valaddr_reg:x3; val_offset:11264*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11264*FLEN/8, x4, x1, x2)

inst_5633:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9affffc0; 
   valaddr_reg:x3; val_offset:11266*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11266*FLEN/8, x4, x1, x2)

inst_5634:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9affffe0; 
   valaddr_reg:x3; val_offset:11268*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11268*FLEN/8, x4, x1, x2)

inst_5635:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9afffff0; 
   valaddr_reg:x3; val_offset:11270*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11270*FLEN/8, x4, x1, x2)

inst_5636:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9afffff8; 
   valaddr_reg:x3; val_offset:11272*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11272*FLEN/8, x4, x1, x2)

inst_5637:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9afffffc; 
   valaddr_reg:x3; val_offset:11274*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11274*FLEN/8, x4, x1, x2)

inst_5638:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9afffffe; 
   valaddr_reg:x3; val_offset:11276*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11276*FLEN/8, x4, x1, x2)

inst_5639:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x35 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0x9affffff; 
   valaddr_reg:x3; val_offset:11278*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11278*FLEN/8, x4, x1, x2)

inst_5640:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbd800000; 
   valaddr_reg:x3; val_offset:11280*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11280*FLEN/8, x4, x1, x2)

inst_5641:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbd800001; 
   valaddr_reg:x3; val_offset:11282*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11282*FLEN/8, x4, x1, x2)

inst_5642:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbd800003; 
   valaddr_reg:x3; val_offset:11284*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11284*FLEN/8, x4, x1, x2)

inst_5643:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbd800007; 
   valaddr_reg:x3; val_offset:11286*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11286*FLEN/8, x4, x1, x2)

inst_5644:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbd80000f; 
   valaddr_reg:x3; val_offset:11288*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11288*FLEN/8, x4, x1, x2)

inst_5645:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbd80001f; 
   valaddr_reg:x3; val_offset:11290*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11290*FLEN/8, x4, x1, x2)

inst_5646:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbd80003f; 
   valaddr_reg:x3; val_offset:11292*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11292*FLEN/8, x4, x1, x2)

inst_5647:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbd80007f; 
   valaddr_reg:x3; val_offset:11294*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11294*FLEN/8, x4, x1, x2)

inst_5648:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbd8000ff; 
   valaddr_reg:x3; val_offset:11296*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11296*FLEN/8, x4, x1, x2)

inst_5649:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbd8001ff; 
   valaddr_reg:x3; val_offset:11298*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11298*FLEN/8, x4, x1, x2)

inst_5650:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbd8003ff; 
   valaddr_reg:x3; val_offset:11300*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11300*FLEN/8, x4, x1, x2)

inst_5651:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbd8007ff; 
   valaddr_reg:x3; val_offset:11302*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11302*FLEN/8, x4, x1, x2)

inst_5652:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbd800fff; 
   valaddr_reg:x3; val_offset:11304*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11304*FLEN/8, x4, x1, x2)

inst_5653:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbd801fff; 
   valaddr_reg:x3; val_offset:11306*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11306*FLEN/8, x4, x1, x2)

inst_5654:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbd803fff; 
   valaddr_reg:x3; val_offset:11308*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11308*FLEN/8, x4, x1, x2)

inst_5655:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbd807fff; 
   valaddr_reg:x3; val_offset:11310*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11310*FLEN/8, x4, x1, x2)

inst_5656:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbd80ffff; 
   valaddr_reg:x3; val_offset:11312*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11312*FLEN/8, x4, x1, x2)

inst_5657:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbd81ffff; 
   valaddr_reg:x3; val_offset:11314*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11314*FLEN/8, x4, x1, x2)

inst_5658:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbd83ffff; 
   valaddr_reg:x3; val_offset:11316*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11316*FLEN/8, x4, x1, x2)

inst_5659:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbd87ffff; 
   valaddr_reg:x3; val_offset:11318*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11318*FLEN/8, x4, x1, x2)

inst_5660:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbd8fffff; 
   valaddr_reg:x3; val_offset:11320*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11320*FLEN/8, x4, x1, x2)

inst_5661:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbd9fffff; 
   valaddr_reg:x3; val_offset:11322*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11322*FLEN/8, x4, x1, x2)

inst_5662:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbdbfffff; 
   valaddr_reg:x3; val_offset:11324*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11324*FLEN/8, x4, x1, x2)

inst_5663:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbdc00000; 
   valaddr_reg:x3; val_offset:11326*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11326*FLEN/8, x4, x1, x2)

inst_5664:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbde00000; 
   valaddr_reg:x3; val_offset:11328*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11328*FLEN/8, x4, x1, x2)

inst_5665:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbdf00000; 
   valaddr_reg:x3; val_offset:11330*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11330*FLEN/8, x4, x1, x2)

inst_5666:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbdf80000; 
   valaddr_reg:x3; val_offset:11332*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11332*FLEN/8, x4, x1, x2)

inst_5667:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbdfc0000; 
   valaddr_reg:x3; val_offset:11334*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11334*FLEN/8, x4, x1, x2)

inst_5668:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbdfe0000; 
   valaddr_reg:x3; val_offset:11336*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11336*FLEN/8, x4, x1, x2)

inst_5669:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbdff0000; 
   valaddr_reg:x3; val_offset:11338*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11338*FLEN/8, x4, x1, x2)

inst_5670:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbdff8000; 
   valaddr_reg:x3; val_offset:11340*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11340*FLEN/8, x4, x1, x2)

inst_5671:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbdffc000; 
   valaddr_reg:x3; val_offset:11342*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11342*FLEN/8, x4, x1, x2)

inst_5672:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbdffe000; 
   valaddr_reg:x3; val_offset:11344*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11344*FLEN/8, x4, x1, x2)

inst_5673:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbdfff000; 
   valaddr_reg:x3; val_offset:11346*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11346*FLEN/8, x4, x1, x2)

inst_5674:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbdfff800; 
   valaddr_reg:x3; val_offset:11348*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11348*FLEN/8, x4, x1, x2)

inst_5675:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbdfffc00; 
   valaddr_reg:x3; val_offset:11350*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11350*FLEN/8, x4, x1, x2)

inst_5676:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbdfffe00; 
   valaddr_reg:x3; val_offset:11352*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11352*FLEN/8, x4, x1, x2)

inst_5677:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbdffff00; 
   valaddr_reg:x3; val_offset:11354*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11354*FLEN/8, x4, x1, x2)

inst_5678:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbdffff80; 
   valaddr_reg:x3; val_offset:11356*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11356*FLEN/8, x4, x1, x2)

inst_5679:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbdffffc0; 
   valaddr_reg:x3; val_offset:11358*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11358*FLEN/8, x4, x1, x2)

inst_5680:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbdffffe0; 
   valaddr_reg:x3; val_offset:11360*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11360*FLEN/8, x4, x1, x2)

inst_5681:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbdfffff0; 
   valaddr_reg:x3; val_offset:11362*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11362*FLEN/8, x4, x1, x2)

inst_5682:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbdfffff8; 
   valaddr_reg:x3; val_offset:11364*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11364*FLEN/8, x4, x1, x2)

inst_5683:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbdfffffc; 
   valaddr_reg:x3; val_offset:11366*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11366*FLEN/8, x4, x1, x2)

inst_5684:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbdfffffe; 
   valaddr_reg:x3; val_offset:11368*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11368*FLEN/8, x4, x1, x2)

inst_5685:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbdffffff; 
   valaddr_reg:x3; val_offset:11370*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11370*FLEN/8, x4, x1, x2)

inst_5686:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe000000; 
   valaddr_reg:x3; val_offset:11372*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11372*FLEN/8, x4, x1, x2)

inst_5687:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe000001; 
   valaddr_reg:x3; val_offset:11374*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11374*FLEN/8, x4, x1, x2)

inst_5688:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe000003; 
   valaddr_reg:x3; val_offset:11376*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11376*FLEN/8, x4, x1, x2)

inst_5689:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe000007; 
   valaddr_reg:x3; val_offset:11378*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11378*FLEN/8, x4, x1, x2)

inst_5690:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe00000f; 
   valaddr_reg:x3; val_offset:11380*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11380*FLEN/8, x4, x1, x2)

inst_5691:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe00001f; 
   valaddr_reg:x3; val_offset:11382*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11382*FLEN/8, x4, x1, x2)

inst_5692:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe00003f; 
   valaddr_reg:x3; val_offset:11384*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11384*FLEN/8, x4, x1, x2)

inst_5693:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe00007f; 
   valaddr_reg:x3; val_offset:11386*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11386*FLEN/8, x4, x1, x2)

inst_5694:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe0000ff; 
   valaddr_reg:x3; val_offset:11388*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11388*FLEN/8, x4, x1, x2)

inst_5695:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe0001ff; 
   valaddr_reg:x3; val_offset:11390*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11390*FLEN/8, x4, x1, x2)

inst_5696:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe0003ff; 
   valaddr_reg:x3; val_offset:11392*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11392*FLEN/8, x4, x1, x2)

inst_5697:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe0007ff; 
   valaddr_reg:x3; val_offset:11394*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11394*FLEN/8, x4, x1, x2)

inst_5698:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe000fff; 
   valaddr_reg:x3; val_offset:11396*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11396*FLEN/8, x4, x1, x2)

inst_5699:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe001fff; 
   valaddr_reg:x3; val_offset:11398*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11398*FLEN/8, x4, x1, x2)

inst_5700:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe003fff; 
   valaddr_reg:x3; val_offset:11400*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11400*FLEN/8, x4, x1, x2)

inst_5701:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe007fff; 
   valaddr_reg:x3; val_offset:11402*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11402*FLEN/8, x4, x1, x2)

inst_5702:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe00ffff; 
   valaddr_reg:x3; val_offset:11404*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11404*FLEN/8, x4, x1, x2)

inst_5703:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe01ffff; 
   valaddr_reg:x3; val_offset:11406*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11406*FLEN/8, x4, x1, x2)

inst_5704:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe03ffff; 
   valaddr_reg:x3; val_offset:11408*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11408*FLEN/8, x4, x1, x2)

inst_5705:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe07ffff; 
   valaddr_reg:x3; val_offset:11410*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11410*FLEN/8, x4, x1, x2)

inst_5706:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe0fffff; 
   valaddr_reg:x3; val_offset:11412*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11412*FLEN/8, x4, x1, x2)

inst_5707:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe1fffff; 
   valaddr_reg:x3; val_offset:11414*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11414*FLEN/8, x4, x1, x2)

inst_5708:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe3fffff; 
   valaddr_reg:x3; val_offset:11416*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11416*FLEN/8, x4, x1, x2)

inst_5709:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe400000; 
   valaddr_reg:x3; val_offset:11418*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11418*FLEN/8, x4, x1, x2)

inst_5710:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe600000; 
   valaddr_reg:x3; val_offset:11420*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11420*FLEN/8, x4, x1, x2)

inst_5711:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe700000; 
   valaddr_reg:x3; val_offset:11422*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11422*FLEN/8, x4, x1, x2)

inst_5712:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe780000; 
   valaddr_reg:x3; val_offset:11424*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11424*FLEN/8, x4, x1, x2)

inst_5713:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe7c0000; 
   valaddr_reg:x3; val_offset:11426*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11426*FLEN/8, x4, x1, x2)

inst_5714:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe7e0000; 
   valaddr_reg:x3; val_offset:11428*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11428*FLEN/8, x4, x1, x2)

inst_5715:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe7f0000; 
   valaddr_reg:x3; val_offset:11430*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11430*FLEN/8, x4, x1, x2)

inst_5716:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe7f8000; 
   valaddr_reg:x3; val_offset:11432*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11432*FLEN/8, x4, x1, x2)

inst_5717:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe7fc000; 
   valaddr_reg:x3; val_offset:11434*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11434*FLEN/8, x4, x1, x2)

inst_5718:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe7fe000; 
   valaddr_reg:x3; val_offset:11436*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11436*FLEN/8, x4, x1, x2)

inst_5719:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe7ff000; 
   valaddr_reg:x3; val_offset:11438*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11438*FLEN/8, x4, x1, x2)

inst_5720:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe7ff800; 
   valaddr_reg:x3; val_offset:11440*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11440*FLEN/8, x4, x1, x2)

inst_5721:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe7ffc00; 
   valaddr_reg:x3; val_offset:11442*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11442*FLEN/8, x4, x1, x2)

inst_5722:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe7ffe00; 
   valaddr_reg:x3; val_offset:11444*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11444*FLEN/8, x4, x1, x2)

inst_5723:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe7fff00; 
   valaddr_reg:x3; val_offset:11446*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11446*FLEN/8, x4, x1, x2)

inst_5724:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe7fff80; 
   valaddr_reg:x3; val_offset:11448*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11448*FLEN/8, x4, x1, x2)

inst_5725:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe7fffc0; 
   valaddr_reg:x3; val_offset:11450*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11450*FLEN/8, x4, x1, x2)

inst_5726:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe7fffe0; 
   valaddr_reg:x3; val_offset:11452*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11452*FLEN/8, x4, x1, x2)

inst_5727:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe7ffff0; 
   valaddr_reg:x3; val_offset:11454*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11454*FLEN/8, x4, x1, x2)

inst_5728:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe7ffff8; 
   valaddr_reg:x3; val_offset:11456*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11456*FLEN/8, x4, x1, x2)

inst_5729:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe7ffffc; 
   valaddr_reg:x3; val_offset:11458*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11458*FLEN/8, x4, x1, x2)

inst_5730:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe7ffffe; 
   valaddr_reg:x3; val_offset:11460*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11460*FLEN/8, x4, x1, x2)

inst_5731:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe7fffff; 
   valaddr_reg:x3; val_offset:11462*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11462*FLEN/8, x4, x1, x2)

inst_5732:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe800000; 
   valaddr_reg:x3; val_offset:11464*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11464*FLEN/8, x4, x1, x2)

inst_5733:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe800001; 
   valaddr_reg:x3; val_offset:11466*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11466*FLEN/8, x4, x1, x2)

inst_5734:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe800003; 
   valaddr_reg:x3; val_offset:11468*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11468*FLEN/8, x4, x1, x2)

inst_5735:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe800007; 
   valaddr_reg:x3; val_offset:11470*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11470*FLEN/8, x4, x1, x2)

inst_5736:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe80000f; 
   valaddr_reg:x3; val_offset:11472*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11472*FLEN/8, x4, x1, x2)

inst_5737:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe80001f; 
   valaddr_reg:x3; val_offset:11474*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11474*FLEN/8, x4, x1, x2)

inst_5738:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe80003f; 
   valaddr_reg:x3; val_offset:11476*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11476*FLEN/8, x4, x1, x2)

inst_5739:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe80007f; 
   valaddr_reg:x3; val_offset:11478*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11478*FLEN/8, x4, x1, x2)

inst_5740:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe8000ff; 
   valaddr_reg:x3; val_offset:11480*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11480*FLEN/8, x4, x1, x2)

inst_5741:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe8001ff; 
   valaddr_reg:x3; val_offset:11482*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11482*FLEN/8, x4, x1, x2)

inst_5742:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe8003ff; 
   valaddr_reg:x3; val_offset:11484*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11484*FLEN/8, x4, x1, x2)

inst_5743:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe8007ff; 
   valaddr_reg:x3; val_offset:11486*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11486*FLEN/8, x4, x1, x2)

inst_5744:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe800fff; 
   valaddr_reg:x3; val_offset:11488*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11488*FLEN/8, x4, x1, x2)

inst_5745:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe801fff; 
   valaddr_reg:x3; val_offset:11490*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11490*FLEN/8, x4, x1, x2)

inst_5746:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe803fff; 
   valaddr_reg:x3; val_offset:11492*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11492*FLEN/8, x4, x1, x2)

inst_5747:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe807fff; 
   valaddr_reg:x3; val_offset:11494*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11494*FLEN/8, x4, x1, x2)

inst_5748:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe80ffff; 
   valaddr_reg:x3; val_offset:11496*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11496*FLEN/8, x4, x1, x2)

inst_5749:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe81ffff; 
   valaddr_reg:x3; val_offset:11498*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11498*FLEN/8, x4, x1, x2)

inst_5750:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe83ffff; 
   valaddr_reg:x3; val_offset:11500*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11500*FLEN/8, x4, x1, x2)

inst_5751:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe87ffff; 
   valaddr_reg:x3; val_offset:11502*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11502*FLEN/8, x4, x1, x2)

inst_5752:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe8fffff; 
   valaddr_reg:x3; val_offset:11504*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11504*FLEN/8, x4, x1, x2)

inst_5753:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbe9fffff; 
   valaddr_reg:x3; val_offset:11506*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11506*FLEN/8, x4, x1, x2)

inst_5754:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbebfffff; 
   valaddr_reg:x3; val_offset:11508*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11508*FLEN/8, x4, x1, x2)

inst_5755:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbec00000; 
   valaddr_reg:x3; val_offset:11510*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11510*FLEN/8, x4, x1, x2)

inst_5756:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbee00000; 
   valaddr_reg:x3; val_offset:11512*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11512*FLEN/8, x4, x1, x2)

inst_5757:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbef00000; 
   valaddr_reg:x3; val_offset:11514*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11514*FLEN/8, x4, x1, x2)

inst_5758:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbef80000; 
   valaddr_reg:x3; val_offset:11516*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11516*FLEN/8, x4, x1, x2)

inst_5759:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbefc0000; 
   valaddr_reg:x3; val_offset:11518*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11518*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_46)

inst_5760:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbefe0000; 
   valaddr_reg:x3; val_offset:11520*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11520*FLEN/8, x4, x1, x2)

inst_5761:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbeff0000; 
   valaddr_reg:x3; val_offset:11522*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11522*FLEN/8, x4, x1, x2)

inst_5762:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbeff8000; 
   valaddr_reg:x3; val_offset:11524*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11524*FLEN/8, x4, x1, x2)

inst_5763:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbeffc000; 
   valaddr_reg:x3; val_offset:11526*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11526*FLEN/8, x4, x1, x2)

inst_5764:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbeffe000; 
   valaddr_reg:x3; val_offset:11528*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11528*FLEN/8, x4, x1, x2)

inst_5765:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbefff000; 
   valaddr_reg:x3; val_offset:11530*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11530*FLEN/8, x4, x1, x2)

inst_5766:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbefff800; 
   valaddr_reg:x3; val_offset:11532*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11532*FLEN/8, x4, x1, x2)

inst_5767:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbefffc00; 
   valaddr_reg:x3; val_offset:11534*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11534*FLEN/8, x4, x1, x2)

inst_5768:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbefffe00; 
   valaddr_reg:x3; val_offset:11536*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11536*FLEN/8, x4, x1, x2)

inst_5769:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbeffff00; 
   valaddr_reg:x3; val_offset:11538*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11538*FLEN/8, x4, x1, x2)

inst_5770:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbeffff80; 
   valaddr_reg:x3; val_offset:11540*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11540*FLEN/8, x4, x1, x2)

inst_5771:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbeffffc0; 
   valaddr_reg:x3; val_offset:11542*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11542*FLEN/8, x4, x1, x2)

inst_5772:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbeffffe0; 
   valaddr_reg:x3; val_offset:11544*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11544*FLEN/8, x4, x1, x2)

inst_5773:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbefffff0; 
   valaddr_reg:x3; val_offset:11546*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11546*FLEN/8, x4, x1, x2)

inst_5774:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbefffff8; 
   valaddr_reg:x3; val_offset:11548*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11548*FLEN/8, x4, x1, x2)

inst_5775:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbefffffc; 
   valaddr_reg:x3; val_offset:11550*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11550*FLEN/8, x4, x1, x2)

inst_5776:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbefffffe; 
   valaddr_reg:x3; val_offset:11552*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11552*FLEN/8, x4, x1, x2)

inst_5777:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbeffffff; 
   valaddr_reg:x3; val_offset:11554*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11554*FLEN/8, x4, x1, x2)

inst_5778:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf000000; 
   valaddr_reg:x3; val_offset:11556*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11556*FLEN/8, x4, x1, x2)

inst_5779:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf000001; 
   valaddr_reg:x3; val_offset:11558*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11558*FLEN/8, x4, x1, x2)

inst_5780:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf000003; 
   valaddr_reg:x3; val_offset:11560*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11560*FLEN/8, x4, x1, x2)

inst_5781:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf000007; 
   valaddr_reg:x3; val_offset:11562*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11562*FLEN/8, x4, x1, x2)

inst_5782:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf00000f; 
   valaddr_reg:x3; val_offset:11564*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11564*FLEN/8, x4, x1, x2)

inst_5783:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf00001f; 
   valaddr_reg:x3; val_offset:11566*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11566*FLEN/8, x4, x1, x2)

inst_5784:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf00003f; 
   valaddr_reg:x3; val_offset:11568*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11568*FLEN/8, x4, x1, x2)

inst_5785:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf00007f; 
   valaddr_reg:x3; val_offset:11570*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11570*FLEN/8, x4, x1, x2)

inst_5786:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf0000ff; 
   valaddr_reg:x3; val_offset:11572*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11572*FLEN/8, x4, x1, x2)

inst_5787:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf0001ff; 
   valaddr_reg:x3; val_offset:11574*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11574*FLEN/8, x4, x1, x2)

inst_5788:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf0003ff; 
   valaddr_reg:x3; val_offset:11576*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11576*FLEN/8, x4, x1, x2)

inst_5789:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf0007ff; 
   valaddr_reg:x3; val_offset:11578*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11578*FLEN/8, x4, x1, x2)

inst_5790:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf000fff; 
   valaddr_reg:x3; val_offset:11580*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11580*FLEN/8, x4, x1, x2)

inst_5791:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf001fff; 
   valaddr_reg:x3; val_offset:11582*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11582*FLEN/8, x4, x1, x2)

inst_5792:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf003fff; 
   valaddr_reg:x3; val_offset:11584*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11584*FLEN/8, x4, x1, x2)

inst_5793:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf007fff; 
   valaddr_reg:x3; val_offset:11586*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11586*FLEN/8, x4, x1, x2)

inst_5794:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf00ffff; 
   valaddr_reg:x3; val_offset:11588*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11588*FLEN/8, x4, x1, x2)

inst_5795:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf01ffff; 
   valaddr_reg:x3; val_offset:11590*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11590*FLEN/8, x4, x1, x2)

inst_5796:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf03ffff; 
   valaddr_reg:x3; val_offset:11592*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11592*FLEN/8, x4, x1, x2)

inst_5797:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf07ffff; 
   valaddr_reg:x3; val_offset:11594*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11594*FLEN/8, x4, x1, x2)

inst_5798:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf0fffff; 
   valaddr_reg:x3; val_offset:11596*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11596*FLEN/8, x4, x1, x2)

inst_5799:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf1fffff; 
   valaddr_reg:x3; val_offset:11598*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11598*FLEN/8, x4, x1, x2)

inst_5800:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf3fffff; 
   valaddr_reg:x3; val_offset:11600*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11600*FLEN/8, x4, x1, x2)

inst_5801:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf400000; 
   valaddr_reg:x3; val_offset:11602*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11602*FLEN/8, x4, x1, x2)

inst_5802:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf600000; 
   valaddr_reg:x3; val_offset:11604*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11604*FLEN/8, x4, x1, x2)

inst_5803:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf700000; 
   valaddr_reg:x3; val_offset:11606*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11606*FLEN/8, x4, x1, x2)

inst_5804:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf780000; 
   valaddr_reg:x3; val_offset:11608*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11608*FLEN/8, x4, x1, x2)

inst_5805:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf7c0000; 
   valaddr_reg:x3; val_offset:11610*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11610*FLEN/8, x4, x1, x2)

inst_5806:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf7e0000; 
   valaddr_reg:x3; val_offset:11612*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11612*FLEN/8, x4, x1, x2)

inst_5807:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf7f0000; 
   valaddr_reg:x3; val_offset:11614*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11614*FLEN/8, x4, x1, x2)

inst_5808:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf7f8000; 
   valaddr_reg:x3; val_offset:11616*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11616*FLEN/8, x4, x1, x2)

inst_5809:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf7fc000; 
   valaddr_reg:x3; val_offset:11618*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11618*FLEN/8, x4, x1, x2)

inst_5810:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf7fe000; 
   valaddr_reg:x3; val_offset:11620*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11620*FLEN/8, x4, x1, x2)

inst_5811:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf7ff000; 
   valaddr_reg:x3; val_offset:11622*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11622*FLEN/8, x4, x1, x2)

inst_5812:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf7ff800; 
   valaddr_reg:x3; val_offset:11624*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11624*FLEN/8, x4, x1, x2)

inst_5813:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf7ffc00; 
   valaddr_reg:x3; val_offset:11626*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11626*FLEN/8, x4, x1, x2)

inst_5814:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf7ffe00; 
   valaddr_reg:x3; val_offset:11628*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11628*FLEN/8, x4, x1, x2)

inst_5815:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf7fff00; 
   valaddr_reg:x3; val_offset:11630*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11630*FLEN/8, x4, x1, x2)

inst_5816:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf7fff80; 
   valaddr_reg:x3; val_offset:11632*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11632*FLEN/8, x4, x1, x2)

inst_5817:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf7fffc0; 
   valaddr_reg:x3; val_offset:11634*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11634*FLEN/8, x4, x1, x2)

inst_5818:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf7fffe0; 
   valaddr_reg:x3; val_offset:11636*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11636*FLEN/8, x4, x1, x2)

inst_5819:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf7ffff0; 
   valaddr_reg:x3; val_offset:11638*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11638*FLEN/8, x4, x1, x2)

inst_5820:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf7ffff8; 
   valaddr_reg:x3; val_offset:11640*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11640*FLEN/8, x4, x1, x2)

inst_5821:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf7ffffc; 
   valaddr_reg:x3; val_offset:11642*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11642*FLEN/8, x4, x1, x2)

inst_5822:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf7ffffe; 
   valaddr_reg:x3; val_offset:11644*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11644*FLEN/8, x4, x1, x2)

inst_5823:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf7fffff; 
   valaddr_reg:x3; val_offset:11646*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11646*FLEN/8, x4, x1, x2)

inst_5824:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:11648*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11648*FLEN/8, x4, x1, x2)

inst_5825:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf800001; 
   valaddr_reg:x3; val_offset:11650*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11650*FLEN/8, x4, x1, x2)

inst_5826:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf800003; 
   valaddr_reg:x3; val_offset:11652*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11652*FLEN/8, x4, x1, x2)

inst_5827:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf800007; 
   valaddr_reg:x3; val_offset:11654*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11654*FLEN/8, x4, x1, x2)

inst_5828:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf80000f; 
   valaddr_reg:x3; val_offset:11656*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11656*FLEN/8, x4, x1, x2)

inst_5829:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf80001f; 
   valaddr_reg:x3; val_offset:11658*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11658*FLEN/8, x4, x1, x2)

inst_5830:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf80003f; 
   valaddr_reg:x3; val_offset:11660*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11660*FLEN/8, x4, x1, x2)

inst_5831:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf80007f; 
   valaddr_reg:x3; val_offset:11662*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11662*FLEN/8, x4, x1, x2)

inst_5832:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf8000ff; 
   valaddr_reg:x3; val_offset:11664*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11664*FLEN/8, x4, x1, x2)

inst_5833:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf8001ff; 
   valaddr_reg:x3; val_offset:11666*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11666*FLEN/8, x4, x1, x2)

inst_5834:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf8003ff; 
   valaddr_reg:x3; val_offset:11668*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11668*FLEN/8, x4, x1, x2)

inst_5835:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf8007ff; 
   valaddr_reg:x3; val_offset:11670*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11670*FLEN/8, x4, x1, x2)

inst_5836:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf800fff; 
   valaddr_reg:x3; val_offset:11672*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11672*FLEN/8, x4, x1, x2)

inst_5837:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf801fff; 
   valaddr_reg:x3; val_offset:11674*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11674*FLEN/8, x4, x1, x2)

inst_5838:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf803fff; 
   valaddr_reg:x3; val_offset:11676*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11676*FLEN/8, x4, x1, x2)

inst_5839:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf807fff; 
   valaddr_reg:x3; val_offset:11678*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11678*FLEN/8, x4, x1, x2)

inst_5840:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf80ffff; 
   valaddr_reg:x3; val_offset:11680*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11680*FLEN/8, x4, x1, x2)

inst_5841:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf81ffff; 
   valaddr_reg:x3; val_offset:11682*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11682*FLEN/8, x4, x1, x2)

inst_5842:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf83ffff; 
   valaddr_reg:x3; val_offset:11684*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11684*FLEN/8, x4, x1, x2)

inst_5843:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf87ffff; 
   valaddr_reg:x3; val_offset:11686*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11686*FLEN/8, x4, x1, x2)

inst_5844:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf8fffff; 
   valaddr_reg:x3; val_offset:11688*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11688*FLEN/8, x4, x1, x2)

inst_5845:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf999999; 
   valaddr_reg:x3; val_offset:11690*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11690*FLEN/8, x4, x1, x2)

inst_5846:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbf9fffff; 
   valaddr_reg:x3; val_offset:11692*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11692*FLEN/8, x4, x1, x2)

inst_5847:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbfa49249; 
   valaddr_reg:x3; val_offset:11694*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11694*FLEN/8, x4, x1, x2)

inst_5848:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbfb33333; 
   valaddr_reg:x3; val_offset:11696*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11696*FLEN/8, x4, x1, x2)

inst_5849:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbfb6db6d; 
   valaddr_reg:x3; val_offset:11698*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11698*FLEN/8, x4, x1, x2)

inst_5850:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbfbbbbbb; 
   valaddr_reg:x3; val_offset:11700*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11700*FLEN/8, x4, x1, x2)

inst_5851:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbfbfffff; 
   valaddr_reg:x3; val_offset:11702*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11702*FLEN/8, x4, x1, x2)

inst_5852:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbfc00000; 
   valaddr_reg:x3; val_offset:11704*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11704*FLEN/8, x4, x1, x2)

inst_5853:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbfc44444; 
   valaddr_reg:x3; val_offset:11706*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11706*FLEN/8, x4, x1, x2)

inst_5854:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbfcccccc; 
   valaddr_reg:x3; val_offset:11708*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11708*FLEN/8, x4, x1, x2)

inst_5855:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbfdb6db6; 
   valaddr_reg:x3; val_offset:11710*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11710*FLEN/8, x4, x1, x2)

inst_5856:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbfe00000; 
   valaddr_reg:x3; val_offset:11712*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11712*FLEN/8, x4, x1, x2)

inst_5857:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbfe66666; 
   valaddr_reg:x3; val_offset:11714*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11714*FLEN/8, x4, x1, x2)

inst_5858:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbfedb6db; 
   valaddr_reg:x3; val_offset:11716*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11716*FLEN/8, x4, x1, x2)

inst_5859:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbff00000; 
   valaddr_reg:x3; val_offset:11718*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11718*FLEN/8, x4, x1, x2)

inst_5860:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbff80000; 
   valaddr_reg:x3; val_offset:11720*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11720*FLEN/8, x4, x1, x2)

inst_5861:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbffc0000; 
   valaddr_reg:x3; val_offset:11722*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11722*FLEN/8, x4, x1, x2)

inst_5862:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbffe0000; 
   valaddr_reg:x3; val_offset:11724*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11724*FLEN/8, x4, x1, x2)

inst_5863:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbfff0000; 
   valaddr_reg:x3; val_offset:11726*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11726*FLEN/8, x4, x1, x2)

inst_5864:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbfff8000; 
   valaddr_reg:x3; val_offset:11728*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11728*FLEN/8, x4, x1, x2)

inst_5865:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbfffc000; 
   valaddr_reg:x3; val_offset:11730*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11730*FLEN/8, x4, x1, x2)

inst_5866:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbfffe000; 
   valaddr_reg:x3; val_offset:11732*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11732*FLEN/8, x4, x1, x2)

inst_5867:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbffff000; 
   valaddr_reg:x3; val_offset:11734*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11734*FLEN/8, x4, x1, x2)

inst_5868:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbffff800; 
   valaddr_reg:x3; val_offset:11736*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11736*FLEN/8, x4, x1, x2)

inst_5869:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbffffc00; 
   valaddr_reg:x3; val_offset:11738*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11738*FLEN/8, x4, x1, x2)

inst_5870:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbffffe00; 
   valaddr_reg:x3; val_offset:11740*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11740*FLEN/8, x4, x1, x2)

inst_5871:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbfffff00; 
   valaddr_reg:x3; val_offset:11742*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11742*FLEN/8, x4, x1, x2)

inst_5872:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbfffff80; 
   valaddr_reg:x3; val_offset:11744*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11744*FLEN/8, x4, x1, x2)

inst_5873:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbfffffc0; 
   valaddr_reg:x3; val_offset:11746*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11746*FLEN/8, x4, x1, x2)

inst_5874:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbfffffe0; 
   valaddr_reg:x3; val_offset:11748*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11748*FLEN/8, x4, x1, x2)

inst_5875:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbffffff0; 
   valaddr_reg:x3; val_offset:11750*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11750*FLEN/8, x4, x1, x2)

inst_5876:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbffffff8; 
   valaddr_reg:x3; val_offset:11752*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11752*FLEN/8, x4, x1, x2)

inst_5877:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbffffffc; 
   valaddr_reg:x3; val_offset:11754*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11754*FLEN/8, x4, x1, x2)

inst_5878:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbffffffe; 
   valaddr_reg:x3; val_offset:11756*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11756*FLEN/8, x4, x1, x2)

inst_5879:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xbfffffff; 
   valaddr_reg:x3; val_offset:11758*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11758*FLEN/8, x4, x1, x2)

inst_5880:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0000000; 
   valaddr_reg:x3; val_offset:11760*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11760*FLEN/8, x4, x1, x2)

inst_5881:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0000001; 
   valaddr_reg:x3; val_offset:11762*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11762*FLEN/8, x4, x1, x2)

inst_5882:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0000003; 
   valaddr_reg:x3; val_offset:11764*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11764*FLEN/8, x4, x1, x2)

inst_5883:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0000007; 
   valaddr_reg:x3; val_offset:11766*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11766*FLEN/8, x4, x1, x2)

inst_5884:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc000000f; 
   valaddr_reg:x3; val_offset:11768*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11768*FLEN/8, x4, x1, x2)

inst_5885:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc000001f; 
   valaddr_reg:x3; val_offset:11770*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11770*FLEN/8, x4, x1, x2)

inst_5886:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc000003f; 
   valaddr_reg:x3; val_offset:11772*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11772*FLEN/8, x4, x1, x2)

inst_5887:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc000007f; 
   valaddr_reg:x3; val_offset:11774*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11774*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_47)

inst_5888:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc00000ff; 
   valaddr_reg:x3; val_offset:11776*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11776*FLEN/8, x4, x1, x2)

inst_5889:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc00001ff; 
   valaddr_reg:x3; val_offset:11778*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11778*FLEN/8, x4, x1, x2)

inst_5890:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc00003ff; 
   valaddr_reg:x3; val_offset:11780*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11780*FLEN/8, x4, x1, x2)

inst_5891:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc00007ff; 
   valaddr_reg:x3; val_offset:11782*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11782*FLEN/8, x4, x1, x2)

inst_5892:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0000fff; 
   valaddr_reg:x3; val_offset:11784*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11784*FLEN/8, x4, x1, x2)

inst_5893:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0001fff; 
   valaddr_reg:x3; val_offset:11786*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11786*FLEN/8, x4, x1, x2)

inst_5894:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0003fff; 
   valaddr_reg:x3; val_offset:11788*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11788*FLEN/8, x4, x1, x2)

inst_5895:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0007fff; 
   valaddr_reg:x3; val_offset:11790*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11790*FLEN/8, x4, x1, x2)

inst_5896:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc000ffff; 
   valaddr_reg:x3; val_offset:11792*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11792*FLEN/8, x4, x1, x2)

inst_5897:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc001ffff; 
   valaddr_reg:x3; val_offset:11794*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11794*FLEN/8, x4, x1, x2)

inst_5898:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc003ffff; 
   valaddr_reg:x3; val_offset:11796*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11796*FLEN/8, x4, x1, x2)

inst_5899:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc007ffff; 
   valaddr_reg:x3; val_offset:11798*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11798*FLEN/8, x4, x1, x2)

inst_5900:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc00fffff; 
   valaddr_reg:x3; val_offset:11800*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11800*FLEN/8, x4, x1, x2)

inst_5901:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc01fffff; 
   valaddr_reg:x3; val_offset:11802*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11802*FLEN/8, x4, x1, x2)

inst_5902:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc03fffff; 
   valaddr_reg:x3; val_offset:11804*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11804*FLEN/8, x4, x1, x2)

inst_5903:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0400000; 
   valaddr_reg:x3; val_offset:11806*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11806*FLEN/8, x4, x1, x2)

inst_5904:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0600000; 
   valaddr_reg:x3; val_offset:11808*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11808*FLEN/8, x4, x1, x2)

inst_5905:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0700000; 
   valaddr_reg:x3; val_offset:11810*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11810*FLEN/8, x4, x1, x2)

inst_5906:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0780000; 
   valaddr_reg:x3; val_offset:11812*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11812*FLEN/8, x4, x1, x2)

inst_5907:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc07c0000; 
   valaddr_reg:x3; val_offset:11814*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11814*FLEN/8, x4, x1, x2)

inst_5908:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc07e0000; 
   valaddr_reg:x3; val_offset:11816*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11816*FLEN/8, x4, x1, x2)

inst_5909:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc07f0000; 
   valaddr_reg:x3; val_offset:11818*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11818*FLEN/8, x4, x1, x2)

inst_5910:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc07f8000; 
   valaddr_reg:x3; val_offset:11820*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11820*FLEN/8, x4, x1, x2)

inst_5911:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc07fc000; 
   valaddr_reg:x3; val_offset:11822*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11822*FLEN/8, x4, x1, x2)

inst_5912:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc07fe000; 
   valaddr_reg:x3; val_offset:11824*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11824*FLEN/8, x4, x1, x2)

inst_5913:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc07ff000; 
   valaddr_reg:x3; val_offset:11826*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11826*FLEN/8, x4, x1, x2)

inst_5914:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc07ff800; 
   valaddr_reg:x3; val_offset:11828*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11828*FLEN/8, x4, x1, x2)

inst_5915:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc07ffc00; 
   valaddr_reg:x3; val_offset:11830*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11830*FLEN/8, x4, x1, x2)

inst_5916:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc07ffe00; 
   valaddr_reg:x3; val_offset:11832*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11832*FLEN/8, x4, x1, x2)

inst_5917:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc07fff00; 
   valaddr_reg:x3; val_offset:11834*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11834*FLEN/8, x4, x1, x2)

inst_5918:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc07fff80; 
   valaddr_reg:x3; val_offset:11836*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11836*FLEN/8, x4, x1, x2)

inst_5919:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc07fffc0; 
   valaddr_reg:x3; val_offset:11838*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11838*FLEN/8, x4, x1, x2)

inst_5920:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc07fffe0; 
   valaddr_reg:x3; val_offset:11840*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11840*FLEN/8, x4, x1, x2)

inst_5921:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc07ffff0; 
   valaddr_reg:x3; val_offset:11842*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11842*FLEN/8, x4, x1, x2)

inst_5922:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc07ffff8; 
   valaddr_reg:x3; val_offset:11844*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11844*FLEN/8, x4, x1, x2)

inst_5923:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc07ffffc; 
   valaddr_reg:x3; val_offset:11846*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11846*FLEN/8, x4, x1, x2)

inst_5924:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc07ffffe; 
   valaddr_reg:x3; val_offset:11848*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11848*FLEN/8, x4, x1, x2)

inst_5925:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc07fffff; 
   valaddr_reg:x3; val_offset:11850*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11850*FLEN/8, x4, x1, x2)

inst_5926:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0800000; 
   valaddr_reg:x3; val_offset:11852*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11852*FLEN/8, x4, x1, x2)

inst_5927:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0800001; 
   valaddr_reg:x3; val_offset:11854*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11854*FLEN/8, x4, x1, x2)

inst_5928:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0800003; 
   valaddr_reg:x3; val_offset:11856*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11856*FLEN/8, x4, x1, x2)

inst_5929:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0800007; 
   valaddr_reg:x3; val_offset:11858*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11858*FLEN/8, x4, x1, x2)

inst_5930:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc080000f; 
   valaddr_reg:x3; val_offset:11860*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11860*FLEN/8, x4, x1, x2)

inst_5931:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc080001f; 
   valaddr_reg:x3; val_offset:11862*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11862*FLEN/8, x4, x1, x2)

inst_5932:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc080003f; 
   valaddr_reg:x3; val_offset:11864*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11864*FLEN/8, x4, x1, x2)

inst_5933:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc080007f; 
   valaddr_reg:x3; val_offset:11866*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11866*FLEN/8, x4, x1, x2)

inst_5934:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc08000ff; 
   valaddr_reg:x3; val_offset:11868*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11868*FLEN/8, x4, x1, x2)

inst_5935:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc08001ff; 
   valaddr_reg:x3; val_offset:11870*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11870*FLEN/8, x4, x1, x2)

inst_5936:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc08003ff; 
   valaddr_reg:x3; val_offset:11872*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11872*FLEN/8, x4, x1, x2)

inst_5937:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc08007ff; 
   valaddr_reg:x3; val_offset:11874*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11874*FLEN/8, x4, x1, x2)

inst_5938:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0800fff; 
   valaddr_reg:x3; val_offset:11876*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11876*FLEN/8, x4, x1, x2)

inst_5939:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0801fff; 
   valaddr_reg:x3; val_offset:11878*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11878*FLEN/8, x4, x1, x2)

inst_5940:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0803fff; 
   valaddr_reg:x3; val_offset:11880*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11880*FLEN/8, x4, x1, x2)

inst_5941:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0807fff; 
   valaddr_reg:x3; val_offset:11882*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11882*FLEN/8, x4, x1, x2)

inst_5942:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc080ffff; 
   valaddr_reg:x3; val_offset:11884*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11884*FLEN/8, x4, x1, x2)

inst_5943:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc081ffff; 
   valaddr_reg:x3; val_offset:11886*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11886*FLEN/8, x4, x1, x2)

inst_5944:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc083ffff; 
   valaddr_reg:x3; val_offset:11888*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11888*FLEN/8, x4, x1, x2)

inst_5945:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc087ffff; 
   valaddr_reg:x3; val_offset:11890*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11890*FLEN/8, x4, x1, x2)

inst_5946:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc08fffff; 
   valaddr_reg:x3; val_offset:11892*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11892*FLEN/8, x4, x1, x2)

inst_5947:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc09fffff; 
   valaddr_reg:x3; val_offset:11894*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11894*FLEN/8, x4, x1, x2)

inst_5948:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0bfffff; 
   valaddr_reg:x3; val_offset:11896*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11896*FLEN/8, x4, x1, x2)

inst_5949:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0c00000; 
   valaddr_reg:x3; val_offset:11898*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11898*FLEN/8, x4, x1, x2)

inst_5950:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0e00000; 
   valaddr_reg:x3; val_offset:11900*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11900*FLEN/8, x4, x1, x2)

inst_5951:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0f00000; 
   valaddr_reg:x3; val_offset:11902*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11902*FLEN/8, x4, x1, x2)

inst_5952:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0f80000; 
   valaddr_reg:x3; val_offset:11904*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11904*FLEN/8, x4, x1, x2)

inst_5953:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0fc0000; 
   valaddr_reg:x3; val_offset:11906*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11906*FLEN/8, x4, x1, x2)

inst_5954:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0fe0000; 
   valaddr_reg:x3; val_offset:11908*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11908*FLEN/8, x4, x1, x2)

inst_5955:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0ff0000; 
   valaddr_reg:x3; val_offset:11910*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11910*FLEN/8, x4, x1, x2)

inst_5956:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0ff8000; 
   valaddr_reg:x3; val_offset:11912*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11912*FLEN/8, x4, x1, x2)

inst_5957:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0ffc000; 
   valaddr_reg:x3; val_offset:11914*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11914*FLEN/8, x4, x1, x2)

inst_5958:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0ffe000; 
   valaddr_reg:x3; val_offset:11916*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11916*FLEN/8, x4, x1, x2)

inst_5959:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0fff000; 
   valaddr_reg:x3; val_offset:11918*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11918*FLEN/8, x4, x1, x2)

inst_5960:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0fff800; 
   valaddr_reg:x3; val_offset:11920*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11920*FLEN/8, x4, x1, x2)

inst_5961:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0fffc00; 
   valaddr_reg:x3; val_offset:11922*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11922*FLEN/8, x4, x1, x2)

inst_5962:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0fffe00; 
   valaddr_reg:x3; val_offset:11924*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11924*FLEN/8, x4, x1, x2)

inst_5963:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0ffff00; 
   valaddr_reg:x3; val_offset:11926*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11926*FLEN/8, x4, x1, x2)

inst_5964:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0ffff80; 
   valaddr_reg:x3; val_offset:11928*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11928*FLEN/8, x4, x1, x2)

inst_5965:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0ffffc0; 
   valaddr_reg:x3; val_offset:11930*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11930*FLEN/8, x4, x1, x2)

inst_5966:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0ffffe0; 
   valaddr_reg:x3; val_offset:11932*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11932*FLEN/8, x4, x1, x2)

inst_5967:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0fffff0; 
   valaddr_reg:x3; val_offset:11934*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11934*FLEN/8, x4, x1, x2)

inst_5968:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0fffff8; 
   valaddr_reg:x3; val_offset:11936*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11936*FLEN/8, x4, x1, x2)

inst_5969:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0fffffc; 
   valaddr_reg:x3; val_offset:11938*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11938*FLEN/8, x4, x1, x2)

inst_5970:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0fffffe; 
   valaddr_reg:x3; val_offset:11940*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11940*FLEN/8, x4, x1, x2)

inst_5971:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc0ffffff; 
   valaddr_reg:x3; val_offset:11942*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11942*FLEN/8, x4, x1, x2)

inst_5972:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc1000000; 
   valaddr_reg:x3; val_offset:11944*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11944*FLEN/8, x4, x1, x2)

inst_5973:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc1000001; 
   valaddr_reg:x3; val_offset:11946*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11946*FLEN/8, x4, x1, x2)

inst_5974:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc1000003; 
   valaddr_reg:x3; val_offset:11948*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11948*FLEN/8, x4, x1, x2)

inst_5975:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc1000007; 
   valaddr_reg:x3; val_offset:11950*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11950*FLEN/8, x4, x1, x2)

inst_5976:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc100000f; 
   valaddr_reg:x3; val_offset:11952*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11952*FLEN/8, x4, x1, x2)

inst_5977:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc100001f; 
   valaddr_reg:x3; val_offset:11954*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11954*FLEN/8, x4, x1, x2)

inst_5978:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc100003f; 
   valaddr_reg:x3; val_offset:11956*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11956*FLEN/8, x4, x1, x2)

inst_5979:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc100007f; 
   valaddr_reg:x3; val_offset:11958*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11958*FLEN/8, x4, x1, x2)

inst_5980:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc10000ff; 
   valaddr_reg:x3; val_offset:11960*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11960*FLEN/8, x4, x1, x2)

inst_5981:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc10001ff; 
   valaddr_reg:x3; val_offset:11962*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11962*FLEN/8, x4, x1, x2)

inst_5982:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc10003ff; 
   valaddr_reg:x3; val_offset:11964*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11964*FLEN/8, x4, x1, x2)

inst_5983:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc10007ff; 
   valaddr_reg:x3; val_offset:11966*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11966*FLEN/8, x4, x1, x2)

inst_5984:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc1000fff; 
   valaddr_reg:x3; val_offset:11968*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11968*FLEN/8, x4, x1, x2)

inst_5985:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc1001fff; 
   valaddr_reg:x3; val_offset:11970*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11970*FLEN/8, x4, x1, x2)

inst_5986:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc1003fff; 
   valaddr_reg:x3; val_offset:11972*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11972*FLEN/8, x4, x1, x2)

inst_5987:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc1007fff; 
   valaddr_reg:x3; val_offset:11974*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11974*FLEN/8, x4, x1, x2)

inst_5988:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc100ffff; 
   valaddr_reg:x3; val_offset:11976*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11976*FLEN/8, x4, x1, x2)

inst_5989:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc101ffff; 
   valaddr_reg:x3; val_offset:11978*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11978*FLEN/8, x4, x1, x2)

inst_5990:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc103ffff; 
   valaddr_reg:x3; val_offset:11980*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11980*FLEN/8, x4, x1, x2)

inst_5991:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc107ffff; 
   valaddr_reg:x3; val_offset:11982*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11982*FLEN/8, x4, x1, x2)

inst_5992:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc10fffff; 
   valaddr_reg:x3; val_offset:11984*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11984*FLEN/8, x4, x1, x2)

inst_5993:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc11fffff; 
   valaddr_reg:x3; val_offset:11986*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11986*FLEN/8, x4, x1, x2)

inst_5994:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc13fffff; 
   valaddr_reg:x3; val_offset:11988*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11988*FLEN/8, x4, x1, x2)

inst_5995:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc1400000; 
   valaddr_reg:x3; val_offset:11990*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11990*FLEN/8, x4, x1, x2)

inst_5996:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc1600000; 
   valaddr_reg:x3; val_offset:11992*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11992*FLEN/8, x4, x1, x2)

inst_5997:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc1700000; 
   valaddr_reg:x3; val_offset:11994*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11994*FLEN/8, x4, x1, x2)

inst_5998:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc1780000; 
   valaddr_reg:x3; val_offset:11996*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11996*FLEN/8, x4, x1, x2)

inst_5999:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc17c0000; 
   valaddr_reg:x3; val_offset:11998*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 11998*FLEN/8, x4, x1, x2)

inst_6000:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc17e0000; 
   valaddr_reg:x3; val_offset:12000*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12000*FLEN/8, x4, x1, x2)

inst_6001:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc17f0000; 
   valaddr_reg:x3; val_offset:12002*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12002*FLEN/8, x4, x1, x2)

inst_6002:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc17f8000; 
   valaddr_reg:x3; val_offset:12004*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12004*FLEN/8, x4, x1, x2)

inst_6003:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc17fc000; 
   valaddr_reg:x3; val_offset:12006*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12006*FLEN/8, x4, x1, x2)

inst_6004:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc17fe000; 
   valaddr_reg:x3; val_offset:12008*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12008*FLEN/8, x4, x1, x2)

inst_6005:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc17ff000; 
   valaddr_reg:x3; val_offset:12010*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12010*FLEN/8, x4, x1, x2)

inst_6006:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc17ff800; 
   valaddr_reg:x3; val_offset:12012*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12012*FLEN/8, x4, x1, x2)

inst_6007:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc17ffc00; 
   valaddr_reg:x3; val_offset:12014*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12014*FLEN/8, x4, x1, x2)

inst_6008:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc17ffe00; 
   valaddr_reg:x3; val_offset:12016*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12016*FLEN/8, x4, x1, x2)

inst_6009:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc17fff00; 
   valaddr_reg:x3; val_offset:12018*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12018*FLEN/8, x4, x1, x2)

inst_6010:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc17fff80; 
   valaddr_reg:x3; val_offset:12020*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12020*FLEN/8, x4, x1, x2)

inst_6011:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc17fffc0; 
   valaddr_reg:x3; val_offset:12022*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12022*FLEN/8, x4, x1, x2)

inst_6012:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc17fffe0; 
   valaddr_reg:x3; val_offset:12024*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12024*FLEN/8, x4, x1, x2)

inst_6013:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc17ffff0; 
   valaddr_reg:x3; val_offset:12026*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12026*FLEN/8, x4, x1, x2)

inst_6014:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc17ffff8; 
   valaddr_reg:x3; val_offset:12028*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12028*FLEN/8, x4, x1, x2)

inst_6015:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc17ffffc; 
   valaddr_reg:x3; val_offset:12030*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12030*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_48)

inst_6016:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc17ffffe; 
   valaddr_reg:x3; val_offset:12032*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12032*FLEN/8, x4, x1, x2)

inst_6017:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc17fffff; 
   valaddr_reg:x3; val_offset:12034*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12034*FLEN/8, x4, x1, x2)

inst_6018:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc4000000; 
   valaddr_reg:x3; val_offset:12036*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12036*FLEN/8, x4, x1, x2)

inst_6019:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc4000001; 
   valaddr_reg:x3; val_offset:12038*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12038*FLEN/8, x4, x1, x2)

inst_6020:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc4000003; 
   valaddr_reg:x3; val_offset:12040*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12040*FLEN/8, x4, x1, x2)

inst_6021:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc4000007; 
   valaddr_reg:x3; val_offset:12042*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12042*FLEN/8, x4, x1, x2)

inst_6022:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc400000f; 
   valaddr_reg:x3; val_offset:12044*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12044*FLEN/8, x4, x1, x2)

inst_6023:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc400001f; 
   valaddr_reg:x3; val_offset:12046*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12046*FLEN/8, x4, x1, x2)

inst_6024:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc400003f; 
   valaddr_reg:x3; val_offset:12048*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12048*FLEN/8, x4, x1, x2)

inst_6025:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc400007f; 
   valaddr_reg:x3; val_offset:12050*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12050*FLEN/8, x4, x1, x2)

inst_6026:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc40000ff; 
   valaddr_reg:x3; val_offset:12052*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12052*FLEN/8, x4, x1, x2)

inst_6027:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc40001ff; 
   valaddr_reg:x3; val_offset:12054*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12054*FLEN/8, x4, x1, x2)

inst_6028:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc40003ff; 
   valaddr_reg:x3; val_offset:12056*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12056*FLEN/8, x4, x1, x2)

inst_6029:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc40007ff; 
   valaddr_reg:x3; val_offset:12058*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12058*FLEN/8, x4, x1, x2)

inst_6030:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc4000fff; 
   valaddr_reg:x3; val_offset:12060*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12060*FLEN/8, x4, x1, x2)

inst_6031:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc4001fff; 
   valaddr_reg:x3; val_offset:12062*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12062*FLEN/8, x4, x1, x2)

inst_6032:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc4003fff; 
   valaddr_reg:x3; val_offset:12064*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12064*FLEN/8, x4, x1, x2)

inst_6033:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc4007fff; 
   valaddr_reg:x3; val_offset:12066*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12066*FLEN/8, x4, x1, x2)

inst_6034:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc400ffff; 
   valaddr_reg:x3; val_offset:12068*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12068*FLEN/8, x4, x1, x2)

inst_6035:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc401ffff; 
   valaddr_reg:x3; val_offset:12070*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12070*FLEN/8, x4, x1, x2)

inst_6036:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc403ffff; 
   valaddr_reg:x3; val_offset:12072*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12072*FLEN/8, x4, x1, x2)

inst_6037:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc407ffff; 
   valaddr_reg:x3; val_offset:12074*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12074*FLEN/8, x4, x1, x2)

inst_6038:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc40fffff; 
   valaddr_reg:x3; val_offset:12076*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12076*FLEN/8, x4, x1, x2)

inst_6039:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc41fffff; 
   valaddr_reg:x3; val_offset:12078*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12078*FLEN/8, x4, x1, x2)

inst_6040:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc43fffff; 
   valaddr_reg:x3; val_offset:12080*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12080*FLEN/8, x4, x1, x2)

inst_6041:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc4400000; 
   valaddr_reg:x3; val_offset:12082*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12082*FLEN/8, x4, x1, x2)

inst_6042:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc4600000; 
   valaddr_reg:x3; val_offset:12084*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12084*FLEN/8, x4, x1, x2)

inst_6043:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc4700000; 
   valaddr_reg:x3; val_offset:12086*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12086*FLEN/8, x4, x1, x2)

inst_6044:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc4780000; 
   valaddr_reg:x3; val_offset:12088*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12088*FLEN/8, x4, x1, x2)

inst_6045:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc47c0000; 
   valaddr_reg:x3; val_offset:12090*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12090*FLEN/8, x4, x1, x2)

inst_6046:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc47e0000; 
   valaddr_reg:x3; val_offset:12092*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12092*FLEN/8, x4, x1, x2)

inst_6047:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc47f0000; 
   valaddr_reg:x3; val_offset:12094*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12094*FLEN/8, x4, x1, x2)

inst_6048:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc47f8000; 
   valaddr_reg:x3; val_offset:12096*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12096*FLEN/8, x4, x1, x2)

inst_6049:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc47fc000; 
   valaddr_reg:x3; val_offset:12098*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12098*FLEN/8, x4, x1, x2)

inst_6050:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc47fe000; 
   valaddr_reg:x3; val_offset:12100*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12100*FLEN/8, x4, x1, x2)

inst_6051:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc47ff000; 
   valaddr_reg:x3; val_offset:12102*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12102*FLEN/8, x4, x1, x2)

inst_6052:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc47ff800; 
   valaddr_reg:x3; val_offset:12104*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12104*FLEN/8, x4, x1, x2)

inst_6053:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc47ffc00; 
   valaddr_reg:x3; val_offset:12106*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12106*FLEN/8, x4, x1, x2)

inst_6054:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc47ffe00; 
   valaddr_reg:x3; val_offset:12108*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12108*FLEN/8, x4, x1, x2)

inst_6055:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc47fff00; 
   valaddr_reg:x3; val_offset:12110*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12110*FLEN/8, x4, x1, x2)

inst_6056:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc47fff80; 
   valaddr_reg:x3; val_offset:12112*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12112*FLEN/8, x4, x1, x2)

inst_6057:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc47fffc0; 
   valaddr_reg:x3; val_offset:12114*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12114*FLEN/8, x4, x1, x2)

inst_6058:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc47fffe0; 
   valaddr_reg:x3; val_offset:12116*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12116*FLEN/8, x4, x1, x2)

inst_6059:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc47ffff0; 
   valaddr_reg:x3; val_offset:12118*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12118*FLEN/8, x4, x1, x2)

inst_6060:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc47ffff8; 
   valaddr_reg:x3; val_offset:12120*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12120*FLEN/8, x4, x1, x2)

inst_6061:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc47ffffc; 
   valaddr_reg:x3; val_offset:12122*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12122*FLEN/8, x4, x1, x2)

inst_6062:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc47ffffe; 
   valaddr_reg:x3; val_offset:12124*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12124*FLEN/8, x4, x1, x2)

inst_6063:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800000; op2val:0xc47fffff; 
   valaddr_reg:x3; val_offset:12126*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12126*FLEN/8, x4, x1, x2)

inst_6064:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800001; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12128*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12128*FLEN/8, x4, x1, x2)

inst_6065:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800003; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12130*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12130*FLEN/8, x4, x1, x2)

inst_6066:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800007; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12132*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12132*FLEN/8, x4, x1, x2)

inst_6067:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf80000f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12134*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12134*FLEN/8, x4, x1, x2)

inst_6068:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf80001f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12136*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12136*FLEN/8, x4, x1, x2)

inst_6069:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf80003f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12138*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12138*FLEN/8, x4, x1, x2)

inst_6070:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x00007f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf80007f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12140*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12140*FLEN/8, x4, x1, x2)

inst_6071:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf8000ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12142*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12142*FLEN/8, x4, x1, x2)

inst_6072:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf8001ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12144*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12144*FLEN/8, x4, x1, x2)

inst_6073:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf8003ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12146*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12146*FLEN/8, x4, x1, x2)

inst_6074:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf8007ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12148*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12148*FLEN/8, x4, x1, x2)

inst_6075:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x000fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf800fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12150*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12150*FLEN/8, x4, x1, x2)

inst_6076:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x001fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf801fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12152*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12152*FLEN/8, x4, x1, x2)

inst_6077:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x003fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf803fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12154*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12154*FLEN/8, x4, x1, x2)

inst_6078:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x007fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf807fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12156*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12156*FLEN/8, x4, x1, x2)

inst_6079:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf80ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12158*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12158*FLEN/8, x4, x1, x2)

inst_6080:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf81ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12160*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12160*FLEN/8, x4, x1, x2)

inst_6081:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf83ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12162*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12162*FLEN/8, x4, x1, x2)

inst_6082:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf87ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12164*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12164*FLEN/8, x4, x1, x2)

inst_6083:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf8fffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12166*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12166*FLEN/8, x4, x1, x2)

inst_6084:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x199999 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf999999; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12168*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12168*FLEN/8, x4, x1, x2)

inst_6085:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbf9fffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12170*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12170*FLEN/8, x4, x1, x2)

inst_6086:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x249249 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbfa49249; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12172*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12172*FLEN/8, x4, x1, x2)

inst_6087:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x333333 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbfb33333; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12174*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12174*FLEN/8, x4, x1, x2)

inst_6088:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x36db6d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbfb6db6d; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12176*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12176*FLEN/8, x4, x1, x2)

inst_6089:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x3bbbbb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbfbbbbbb; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12178*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12178*FLEN/8, x4, x1, x2)

inst_6090:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbfbfffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12180*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12180*FLEN/8, x4, x1, x2)

inst_6091:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x400000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbfc00000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12182*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12182*FLEN/8, x4, x1, x2)

inst_6092:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x444444 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbfc44444; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12184*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12184*FLEN/8, x4, x1, x2)

inst_6093:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x4ccccc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbfcccccc; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12186*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12186*FLEN/8, x4, x1, x2)

inst_6094:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x5b6db6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbfdb6db6; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12188*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12188*FLEN/8, x4, x1, x2)

inst_6095:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x600000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbfe00000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12190*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12190*FLEN/8, x4, x1, x2)

inst_6096:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x666666 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbfe66666; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12192*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12192*FLEN/8, x4, x1, x2)

inst_6097:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x6db6db and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbfedb6db; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12194*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12194*FLEN/8, x4, x1, x2)

inst_6098:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x700000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbff00000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12196*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12196*FLEN/8, x4, x1, x2)

inst_6099:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x780000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbff80000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12198*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12198*FLEN/8, x4, x1, x2)

inst_6100:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbffc0000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12200*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12200*FLEN/8, x4, x1, x2)

inst_6101:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbffe0000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12202*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12202*FLEN/8, x4, x1, x2)

inst_6102:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbfff0000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12204*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12204*FLEN/8, x4, x1, x2)

inst_6103:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbfff8000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12206*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12206*FLEN/8, x4, x1, x2)

inst_6104:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbfffc000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12208*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12208*FLEN/8, x4, x1, x2)

inst_6105:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbfffe000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12210*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12210*FLEN/8, x4, x1, x2)

inst_6106:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbffff000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12212*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12212*FLEN/8, x4, x1, x2)

inst_6107:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbffff800; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12214*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12214*FLEN/8, x4, x1, x2)

inst_6108:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbffffc00; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12216*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12216*FLEN/8, x4, x1, x2)

inst_6109:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbffffe00; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12218*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12218*FLEN/8, x4, x1, x2)

inst_6110:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbfffff00; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12220*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12220*FLEN/8, x4, x1, x2)

inst_6111:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbfffff80; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12222*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12222*FLEN/8, x4, x1, x2)

inst_6112:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbfffffc0; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12224*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12224*FLEN/8, x4, x1, x2)

inst_6113:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbfffffe0; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12226*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12226*FLEN/8, x4, x1, x2)

inst_6114:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbffffff0; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12228*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12228*FLEN/8, x4, x1, x2)

inst_6115:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbffffff8; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12230*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12230*FLEN/8, x4, x1, x2)

inst_6116:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbffffffc; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12232*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12232*FLEN/8, x4, x1, x2)

inst_6117:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbffffffe; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12234*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12234*FLEN/8, x4, x1, x2)

inst_6118:
// fs1 == 1 and fe1 == 0x7f and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xbfffffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12236*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12236*FLEN/8, x4, x1, x2)

inst_6119:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0000000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12238*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12238*FLEN/8, x4, x1, x2)

inst_6120:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0000000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12240*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12240*FLEN/8, x4, x1, x2)

inst_6121:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0000001; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12242*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12242*FLEN/8, x4, x1, x2)

inst_6122:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0000001; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12244*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12244*FLEN/8, x4, x1, x2)

inst_6123:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0000003; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12246*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12246*FLEN/8, x4, x1, x2)

inst_6124:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0000003; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12248*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12248*FLEN/8, x4, x1, x2)

inst_6125:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0000007; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12250*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12250*FLEN/8, x4, x1, x2)

inst_6126:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0000007; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12252*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12252*FLEN/8, x4, x1, x2)

inst_6127:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc000000f; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12254*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12254*FLEN/8, x4, x1, x2)

inst_6128:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc000000f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12256*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12256*FLEN/8, x4, x1, x2)

inst_6129:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc000001f; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12258*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12258*FLEN/8, x4, x1, x2)

inst_6130:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc000001f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12260*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12260*FLEN/8, x4, x1, x2)

inst_6131:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc000003f; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12262*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12262*FLEN/8, x4, x1, x2)

inst_6132:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc000003f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12264*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12264*FLEN/8, x4, x1, x2)

inst_6133:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x00007f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc000007f; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12266*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12266*FLEN/8, x4, x1, x2)

inst_6134:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x00007f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc000007f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12268*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12268*FLEN/8, x4, x1, x2)

inst_6135:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc00000ff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12270*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12270*FLEN/8, x4, x1, x2)

inst_6136:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc00000ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12272*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12272*FLEN/8, x4, x1, x2)

inst_6137:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc00001ff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12274*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12274*FLEN/8, x4, x1, x2)

inst_6138:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc00001ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12276*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12276*FLEN/8, x4, x1, x2)

inst_6139:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc00003ff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12278*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12278*FLEN/8, x4, x1, x2)

inst_6140:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc00003ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12280*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12280*FLEN/8, x4, x1, x2)

inst_6141:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc00007ff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12282*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12282*FLEN/8, x4, x1, x2)

inst_6142:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc00007ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12284*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12284*FLEN/8, x4, x1, x2)

inst_6143:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x000fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0000fff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12286*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12286*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_49)

inst_6144:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x000fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0000fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12288*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12288*FLEN/8, x4, x1, x2)

inst_6145:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x001fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0001fff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12290*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12290*FLEN/8, x4, x1, x2)

inst_6146:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x001fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0001fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12292*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12292*FLEN/8, x4, x1, x2)

inst_6147:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x003fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0003fff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12294*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12294*FLEN/8, x4, x1, x2)

inst_6148:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x003fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0003fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12296*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12296*FLEN/8, x4, x1, x2)

inst_6149:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x007fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0007fff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12298*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12298*FLEN/8, x4, x1, x2)

inst_6150:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x007fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0007fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12300*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12300*FLEN/8, x4, x1, x2)

inst_6151:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc000ffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12302*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12302*FLEN/8, x4, x1, x2)

inst_6152:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc000ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12304*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12304*FLEN/8, x4, x1, x2)

inst_6153:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc001ffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12306*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12306*FLEN/8, x4, x1, x2)

inst_6154:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc001ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12308*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12308*FLEN/8, x4, x1, x2)

inst_6155:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc003ffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12310*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12310*FLEN/8, x4, x1, x2)

inst_6156:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc003ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12312*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12312*FLEN/8, x4, x1, x2)

inst_6157:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc007ffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12314*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12314*FLEN/8, x4, x1, x2)

inst_6158:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc007ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12316*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12316*FLEN/8, x4, x1, x2)

inst_6159:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc00fffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12318*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12318*FLEN/8, x4, x1, x2)

inst_6160:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc00fffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12320*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12320*FLEN/8, x4, x1, x2)

inst_6161:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc01fffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12322*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12322*FLEN/8, x4, x1, x2)

inst_6162:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc01fffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12324*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12324*FLEN/8, x4, x1, x2)

inst_6163:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc03fffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12326*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12326*FLEN/8, x4, x1, x2)

inst_6164:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc03fffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12328*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12328*FLEN/8, x4, x1, x2)

inst_6165:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x400000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0400000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12330*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12330*FLEN/8, x4, x1, x2)

inst_6166:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x400000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0400000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12332*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12332*FLEN/8, x4, x1, x2)

inst_6167:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x600000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0600000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12334*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12334*FLEN/8, x4, x1, x2)

inst_6168:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x600000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0600000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12336*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12336*FLEN/8, x4, x1, x2)

inst_6169:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x700000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0700000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12338*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12338*FLEN/8, x4, x1, x2)

inst_6170:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x700000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0700000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12340*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12340*FLEN/8, x4, x1, x2)

inst_6171:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x780000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0780000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12342*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12342*FLEN/8, x4, x1, x2)

inst_6172:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x780000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0780000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12344*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12344*FLEN/8, x4, x1, x2)

inst_6173:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07c0000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12346*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12346*FLEN/8, x4, x1, x2)

inst_6174:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07c0000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12348*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12348*FLEN/8, x4, x1, x2)

inst_6175:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07e0000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12350*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12350*FLEN/8, x4, x1, x2)

inst_6176:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07e0000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12352*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12352*FLEN/8, x4, x1, x2)

inst_6177:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07f0000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12354*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12354*FLEN/8, x4, x1, x2)

inst_6178:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07f0000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12356*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12356*FLEN/8, x4, x1, x2)

inst_6179:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07f8000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12358*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12358*FLEN/8, x4, x1, x2)

inst_6180:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07f8000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12360*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12360*FLEN/8, x4, x1, x2)

inst_6181:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07fc000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12362*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12362*FLEN/8, x4, x1, x2)

inst_6182:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07fc000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12364*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12364*FLEN/8, x4, x1, x2)

inst_6183:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07fe000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12366*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12366*FLEN/8, x4, x1, x2)

inst_6184:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07fe000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12368*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12368*FLEN/8, x4, x1, x2)

inst_6185:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07ff000; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12370*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12370*FLEN/8, x4, x1, x2)

inst_6186:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07ff000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12372*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12372*FLEN/8, x4, x1, x2)

inst_6187:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07ff800; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12374*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12374*FLEN/8, x4, x1, x2)

inst_6188:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07ff800; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12376*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12376*FLEN/8, x4, x1, x2)

inst_6189:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07ffc00; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12378*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12378*FLEN/8, x4, x1, x2)

inst_6190:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07ffc00; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12380*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12380*FLEN/8, x4, x1, x2)

inst_6191:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07ffe00; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12382*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12382*FLEN/8, x4, x1, x2)

inst_6192:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07ffe00; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12384*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12384*FLEN/8, x4, x1, x2)

inst_6193:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07fff00; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12386*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12386*FLEN/8, x4, x1, x2)

inst_6194:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07fff00; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12388*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12388*FLEN/8, x4, x1, x2)

inst_6195:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07fff80; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12390*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12390*FLEN/8, x4, x1, x2)

inst_6196:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07fff80; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12392*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12392*FLEN/8, x4, x1, x2)

inst_6197:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07fffc0; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12394*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12394*FLEN/8, x4, x1, x2)

inst_6198:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07fffc0; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12396*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12396*FLEN/8, x4, x1, x2)

inst_6199:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07fffe0; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12398*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12398*FLEN/8, x4, x1, x2)

inst_6200:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07fffe0; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12400*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12400*FLEN/8, x4, x1, x2)

inst_6201:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07ffff0; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12402*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12402*FLEN/8, x4, x1, x2)

inst_6202:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07ffff0; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12404*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12404*FLEN/8, x4, x1, x2)

inst_6203:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07ffff8; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12406*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12406*FLEN/8, x4, x1, x2)

inst_6204:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07ffff8; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12408*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12408*FLEN/8, x4, x1, x2)

inst_6205:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07ffffc; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12410*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12410*FLEN/8, x4, x1, x2)

inst_6206:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07ffffc; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12412*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12412*FLEN/8, x4, x1, x2)

inst_6207:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07ffffe; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12414*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12414*FLEN/8, x4, x1, x2)

inst_6208:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07ffffe; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12416*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12416*FLEN/8, x4, x1, x2)

inst_6209:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07fffff; op2val:0x807fffff; 
   valaddr_reg:x3; val_offset:12418*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12418*FLEN/8, x4, x1, x2)

inst_6210:
// fs1 == 1 and fe1 == 0x80 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc07fffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12420*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12420*FLEN/8, x4, x1, x2)

inst_6211:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0800000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12422*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12422*FLEN/8, x4, x1, x2)

inst_6212:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0800001; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12424*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12424*FLEN/8, x4, x1, x2)

inst_6213:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0800003; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12426*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12426*FLEN/8, x4, x1, x2)

inst_6214:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0800007; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12428*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12428*FLEN/8, x4, x1, x2)

inst_6215:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc080000f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12430*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12430*FLEN/8, x4, x1, x2)

inst_6216:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc080001f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12432*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12432*FLEN/8, x4, x1, x2)

inst_6217:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc080003f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12434*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12434*FLEN/8, x4, x1, x2)

inst_6218:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x00007f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc080007f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12436*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12436*FLEN/8, x4, x1, x2)

inst_6219:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc08000ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12438*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12438*FLEN/8, x4, x1, x2)

inst_6220:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc08001ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12440*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12440*FLEN/8, x4, x1, x2)

inst_6221:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc08003ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12442*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12442*FLEN/8, x4, x1, x2)

inst_6222:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc08007ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12444*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12444*FLEN/8, x4, x1, x2)

inst_6223:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x000fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0800fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12446*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12446*FLEN/8, x4, x1, x2)

inst_6224:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x001fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0801fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12448*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12448*FLEN/8, x4, x1, x2)

inst_6225:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x003fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0803fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12450*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12450*FLEN/8, x4, x1, x2)

inst_6226:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x007fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0807fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12452*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12452*FLEN/8, x4, x1, x2)

inst_6227:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc080ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12454*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12454*FLEN/8, x4, x1, x2)

inst_6228:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc081ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12456*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12456*FLEN/8, x4, x1, x2)

inst_6229:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc083ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12458*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12458*FLEN/8, x4, x1, x2)

inst_6230:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc087ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12460*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12460*FLEN/8, x4, x1, x2)

inst_6231:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc08fffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12462*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12462*FLEN/8, x4, x1, x2)

inst_6232:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc09fffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12464*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12464*FLEN/8, x4, x1, x2)

inst_6233:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0bfffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12466*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12466*FLEN/8, x4, x1, x2)

inst_6234:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x400000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0c00000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12468*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12468*FLEN/8, x4, x1, x2)

inst_6235:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x600000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0e00000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12470*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12470*FLEN/8, x4, x1, x2)

inst_6236:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x700000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0f00000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12472*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12472*FLEN/8, x4, x1, x2)

inst_6237:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x780000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0f80000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12474*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12474*FLEN/8, x4, x1, x2)

inst_6238:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0fc0000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12476*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12476*FLEN/8, x4, x1, x2)

inst_6239:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0fe0000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12478*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12478*FLEN/8, x4, x1, x2)

inst_6240:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0ff0000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12480*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12480*FLEN/8, x4, x1, x2)

inst_6241:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0ff8000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12482*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12482*FLEN/8, x4, x1, x2)

inst_6242:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0ffc000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12484*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12484*FLEN/8, x4, x1, x2)

inst_6243:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0ffe000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12486*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12486*FLEN/8, x4, x1, x2)

inst_6244:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0fff000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12488*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12488*FLEN/8, x4, x1, x2)

inst_6245:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0fff800; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12490*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12490*FLEN/8, x4, x1, x2)

inst_6246:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0fffc00; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12492*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12492*FLEN/8, x4, x1, x2)

inst_6247:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0fffe00; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12494*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12494*FLEN/8, x4, x1, x2)

inst_6248:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0ffff00; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12496*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12496*FLEN/8, x4, x1, x2)

inst_6249:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0ffff80; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12498*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12498*FLEN/8, x4, x1, x2)

inst_6250:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0ffffc0; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12500*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12500*FLEN/8, x4, x1, x2)

inst_6251:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0ffffe0; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12502*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12502*FLEN/8, x4, x1, x2)

inst_6252:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0fffff0; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12504*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12504*FLEN/8, x4, x1, x2)

inst_6253:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0fffff8; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12506*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12506*FLEN/8, x4, x1, x2)

inst_6254:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0fffffc; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12508*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12508*FLEN/8, x4, x1, x2)

inst_6255:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0fffffe; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12510*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12510*FLEN/8, x4, x1, x2)

inst_6256:
// fs1 == 1 and fe1 == 0x81 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc0ffffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12512*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12512*FLEN/8, x4, x1, x2)

inst_6257:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc1000000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12514*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12514*FLEN/8, x4, x1, x2)

inst_6258:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc1000001; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12516*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12516*FLEN/8, x4, x1, x2)

inst_6259:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc1000003; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12518*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12518*FLEN/8, x4, x1, x2)

inst_6260:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc1000007; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12520*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12520*FLEN/8, x4, x1, x2)

inst_6261:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc100000f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12522*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12522*FLEN/8, x4, x1, x2)

inst_6262:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc100001f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12524*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12524*FLEN/8, x4, x1, x2)

inst_6263:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc100003f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12526*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12526*FLEN/8, x4, x1, x2)

inst_6264:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x00007f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc100007f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12528*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12528*FLEN/8, x4, x1, x2)

inst_6265:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc10000ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12530*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12530*FLEN/8, x4, x1, x2)

inst_6266:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc10001ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12532*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12532*FLEN/8, x4, x1, x2)

inst_6267:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc10003ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12534*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12534*FLEN/8, x4, x1, x2)

inst_6268:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc10007ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12536*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12536*FLEN/8, x4, x1, x2)

inst_6269:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x000fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc1000fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12538*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12538*FLEN/8, x4, x1, x2)

inst_6270:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x001fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc1001fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12540*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12540*FLEN/8, x4, x1, x2)

inst_6271:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x003fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc1003fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12542*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12542*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_50)

inst_6272:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x007fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc1007fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12544*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12544*FLEN/8, x4, x1, x2)

inst_6273:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc100ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12546*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12546*FLEN/8, x4, x1, x2)

inst_6274:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc101ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12548*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12548*FLEN/8, x4, x1, x2)

inst_6275:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc103ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12550*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12550*FLEN/8, x4, x1, x2)

inst_6276:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc107ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12552*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12552*FLEN/8, x4, x1, x2)

inst_6277:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc10fffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12554*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12554*FLEN/8, x4, x1, x2)

inst_6278:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc11fffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12556*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12556*FLEN/8, x4, x1, x2)

inst_6279:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc13fffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12558*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12558*FLEN/8, x4, x1, x2)

inst_6280:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x400000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc1400000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12560*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12560*FLEN/8, x4, x1, x2)

inst_6281:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x600000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc1600000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12562*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12562*FLEN/8, x4, x1, x2)

inst_6282:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x700000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc1700000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12564*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12564*FLEN/8, x4, x1, x2)

inst_6283:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x780000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc1780000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12566*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12566*FLEN/8, x4, x1, x2)

inst_6284:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc17c0000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12568*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12568*FLEN/8, x4, x1, x2)

inst_6285:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc17e0000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12570*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12570*FLEN/8, x4, x1, x2)

inst_6286:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc17f0000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12572*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12572*FLEN/8, x4, x1, x2)

inst_6287:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc17f8000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12574*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12574*FLEN/8, x4, x1, x2)

inst_6288:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc17fc000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12576*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12576*FLEN/8, x4, x1, x2)

inst_6289:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc17fe000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12578*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12578*FLEN/8, x4, x1, x2)

inst_6290:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc17ff000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12580*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12580*FLEN/8, x4, x1, x2)

inst_6291:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc17ff800; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12582*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12582*FLEN/8, x4, x1, x2)

inst_6292:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc17ffc00; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12584*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12584*FLEN/8, x4, x1, x2)

inst_6293:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc17ffe00; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12586*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12586*FLEN/8, x4, x1, x2)

inst_6294:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc17fff00; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12588*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12588*FLEN/8, x4, x1, x2)

inst_6295:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc17fff80; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12590*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12590*FLEN/8, x4, x1, x2)

inst_6296:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc17fffc0; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12592*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12592*FLEN/8, x4, x1, x2)

inst_6297:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc17fffe0; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12594*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12594*FLEN/8, x4, x1, x2)

inst_6298:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc17ffff0; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12596*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12596*FLEN/8, x4, x1, x2)

inst_6299:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc17ffff8; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12598*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12598*FLEN/8, x4, x1, x2)

inst_6300:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc17ffffc; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12600*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12600*FLEN/8, x4, x1, x2)

inst_6301:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc17ffffe; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12602*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12602*FLEN/8, x4, x1, x2)

inst_6302:
// fs1 == 1 and fe1 == 0x82 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc17fffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12604*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12604*FLEN/8, x4, x1, x2)

inst_6303:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc4000000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12606*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12606*FLEN/8, x4, x1, x2)

inst_6304:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc4000001; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12608*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12608*FLEN/8, x4, x1, x2)

inst_6305:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc4000003; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12610*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12610*FLEN/8, x4, x1, x2)

inst_6306:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc4000007; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12612*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12612*FLEN/8, x4, x1, x2)

inst_6307:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc400000f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12614*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12614*FLEN/8, x4, x1, x2)

inst_6308:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc400001f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12616*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12616*FLEN/8, x4, x1, x2)

inst_6309:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc400003f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12618*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12618*FLEN/8, x4, x1, x2)

inst_6310:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x00007f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc400007f; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12620*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12620*FLEN/8, x4, x1, x2)

inst_6311:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc40000ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12622*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12622*FLEN/8, x4, x1, x2)

inst_6312:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc40001ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12624*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12624*FLEN/8, x4, x1, x2)

inst_6313:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc40003ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12626*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12626*FLEN/8, x4, x1, x2)

inst_6314:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc40007ff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12628*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12628*FLEN/8, x4, x1, x2)

inst_6315:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x000fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc4000fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12630*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12630*FLEN/8, x4, x1, x2)

inst_6316:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x001fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc4001fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12632*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12632*FLEN/8, x4, x1, x2)

inst_6317:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x003fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc4003fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12634*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12634*FLEN/8, x4, x1, x2)

inst_6318:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x007fff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc4007fff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12636*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12636*FLEN/8, x4, x1, x2)

inst_6319:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc400ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12638*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12638*FLEN/8, x4, x1, x2)

inst_6320:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc401ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12640*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12640*FLEN/8, x4, x1, x2)

inst_6321:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc403ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12642*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12642*FLEN/8, x4, x1, x2)

inst_6322:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc407ffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12644*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12644*FLEN/8, x4, x1, x2)

inst_6323:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc40fffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12646*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12646*FLEN/8, x4, x1, x2)

inst_6324:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc41fffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12648*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12648*FLEN/8, x4, x1, x2)

inst_6325:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc43fffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12650*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12650*FLEN/8, x4, x1, x2)

inst_6326:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x400000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc4400000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12652*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12652*FLEN/8, x4, x1, x2)

inst_6327:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x600000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc4600000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12654*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12654*FLEN/8, x4, x1, x2)

inst_6328:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x700000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc4700000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12656*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12656*FLEN/8, x4, x1, x2)

inst_6329:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x780000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc4780000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12658*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12658*FLEN/8, x4, x1, x2)

inst_6330:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc47c0000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12660*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12660*FLEN/8, x4, x1, x2)

inst_6331:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc47e0000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12662*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12662*FLEN/8, x4, x1, x2)

inst_6332:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc47f0000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12664*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12664*FLEN/8, x4, x1, x2)

inst_6333:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc47f8000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12666*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12666*FLEN/8, x4, x1, x2)

inst_6334:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc47fc000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12668*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12668*FLEN/8, x4, x1, x2)

inst_6335:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc47fe000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12670*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12670*FLEN/8, x4, x1, x2)

inst_6336:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc47ff000; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12672*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12672*FLEN/8, x4, x1, x2)

inst_6337:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc47ff800; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12674*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12674*FLEN/8, x4, x1, x2)

inst_6338:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc47ffc00; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12676*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12676*FLEN/8, x4, x1, x2)

inst_6339:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc47ffe00; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12678*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12678*FLEN/8, x4, x1, x2)

inst_6340:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc47fff00; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12680*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12680*FLEN/8, x4, x1, x2)

inst_6341:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc47fff80; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12682*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12682*FLEN/8, x4, x1, x2)

inst_6342:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc47fffc0; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12684*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12684*FLEN/8, x4, x1, x2)

inst_6343:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc47fffe0; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12686*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12686*FLEN/8, x4, x1, x2)

inst_6344:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc47ffff0; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12688*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12688*FLEN/8, x4, x1, x2)

inst_6345:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc47ffff8; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12690*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12690*FLEN/8, x4, x1, x2)

inst_6346:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc47ffffc; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12692*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12692*FLEN/8, x4, x1, x2)

inst_6347:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc47ffffe; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12694*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12694*FLEN/8, x4, x1, x2)

inst_6348:
// fs1 == 1 and fe1 == 0x88 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xc47fffff; op2val:0xbf800000; 
   valaddr_reg:x3; val_offset:12696*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12696*FLEN/8, x4, x1, x2)

inst_6349:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea000000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12698*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12698*FLEN/8, x4, x1, x2)

inst_6350:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea000001; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12700*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12700*FLEN/8, x4, x1, x2)

inst_6351:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x000003 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea000003; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12702*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12702*FLEN/8, x4, x1, x2)

inst_6352:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x000007 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea000007; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12704*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12704*FLEN/8, x4, x1, x2)

inst_6353:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x00000f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea00000f; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12706*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12706*FLEN/8, x4, x1, x2)

inst_6354:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x00001f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea00001f; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12708*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12708*FLEN/8, x4, x1, x2)

inst_6355:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x00003f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea00003f; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12710*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12710*FLEN/8, x4, x1, x2)

inst_6356:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x00007f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea00007f; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12712*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12712*FLEN/8, x4, x1, x2)

inst_6357:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea0000ff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12714*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12714*FLEN/8, x4, x1, x2)

inst_6358:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea0001ff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12716*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12716*FLEN/8, x4, x1, x2)

inst_6359:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea0003ff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12718*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12718*FLEN/8, x4, x1, x2)

inst_6360:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea0007ff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12720*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12720*FLEN/8, x4, x1, x2)

inst_6361:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x000fff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea000fff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12722*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12722*FLEN/8, x4, x1, x2)

inst_6362:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x001fff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea001fff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12724*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12724*FLEN/8, x4, x1, x2)

inst_6363:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x003fff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea003fff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12726*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12726*FLEN/8, x4, x1, x2)

inst_6364:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x007fff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea007fff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12728*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12728*FLEN/8, x4, x1, x2)

inst_6365:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea00ffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12730*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12730*FLEN/8, x4, x1, x2)

inst_6366:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea01ffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12732*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12732*FLEN/8, x4, x1, x2)

inst_6367:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea03ffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12734*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12734*FLEN/8, x4, x1, x2)

inst_6368:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea07ffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12736*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12736*FLEN/8, x4, x1, x2)

inst_6369:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea0fffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12738*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12738*FLEN/8, x4, x1, x2)

inst_6370:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea1fffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12740*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12740*FLEN/8, x4, x1, x2)

inst_6371:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea3fffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12742*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12742*FLEN/8, x4, x1, x2)

inst_6372:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x400000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea400000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12744*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12744*FLEN/8, x4, x1, x2)

inst_6373:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x600000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea600000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12746*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12746*FLEN/8, x4, x1, x2)

inst_6374:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x700000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea700000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12748*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12748*FLEN/8, x4, x1, x2)

inst_6375:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x780000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea780000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12750*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12750*FLEN/8, x4, x1, x2)

inst_6376:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea7c0000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12752*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12752*FLEN/8, x4, x1, x2)

inst_6377:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea7e0000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12754*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12754*FLEN/8, x4, x1, x2)

inst_6378:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea7f0000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12756*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12756*FLEN/8, x4, x1, x2)

inst_6379:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea7f8000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12758*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12758*FLEN/8, x4, x1, x2)

inst_6380:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea7fc000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12760*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12760*FLEN/8, x4, x1, x2)

inst_6381:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea7fe000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12762*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12762*FLEN/8, x4, x1, x2)

inst_6382:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea7ff000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12764*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12764*FLEN/8, x4, x1, x2)

inst_6383:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea7ff800; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12766*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12766*FLEN/8, x4, x1, x2)

inst_6384:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea7ffc00; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12768*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12768*FLEN/8, x4, x1, x2)

inst_6385:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea7ffe00; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12770*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12770*FLEN/8, x4, x1, x2)

inst_6386:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea7fff00; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12772*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12772*FLEN/8, x4, x1, x2)

inst_6387:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea7fff80; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12774*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12774*FLEN/8, x4, x1, x2)

inst_6388:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea7fffc0; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12776*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12776*FLEN/8, x4, x1, x2)

inst_6389:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea7fffe0; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12778*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12778*FLEN/8, x4, x1, x2)

inst_6390:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea7ffff0; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12780*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12780*FLEN/8, x4, x1, x2)

inst_6391:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea7ffff8; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12782*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12782*FLEN/8, x4, x1, x2)

inst_6392:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea7ffffc; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12784*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12784*FLEN/8, x4, x1, x2)

inst_6393:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea7ffffe; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12786*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12786*FLEN/8, x4, x1, x2)

inst_6394:
// fs1 == 1 and fe1 == 0xd4 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xea7fffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12788*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12788*FLEN/8, x4, x1, x2)

inst_6395:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf8000000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12790*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12790*FLEN/8, x4, x1, x2)

inst_6396:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf8000001; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12792*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12792*FLEN/8, x4, x1, x2)

inst_6397:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf8000003; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12794*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12794*FLEN/8, x4, x1, x2)

inst_6398:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf8000007; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12796*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12796*FLEN/8, x4, x1, x2)

inst_6399:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf800000f; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12798*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12798*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_51)

inst_6400:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf800001f; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12800*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12800*FLEN/8, x4, x1, x2)

inst_6401:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf800003f; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12802*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12802*FLEN/8, x4, x1, x2)

inst_6402:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x00007f and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf800007f; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12804*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12804*FLEN/8, x4, x1, x2)

inst_6403:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf80000ff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12806*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12806*FLEN/8, x4, x1, x2)

inst_6404:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf80001ff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12808*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12808*FLEN/8, x4, x1, x2)

inst_6405:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf80003ff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12810*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12810*FLEN/8, x4, x1, x2)

inst_6406:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf80007ff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12812*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12812*FLEN/8, x4, x1, x2)

inst_6407:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x000fff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf8000fff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12814*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12814*FLEN/8, x4, x1, x2)

inst_6408:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x001fff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf8001fff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12816*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12816*FLEN/8, x4, x1, x2)

inst_6409:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x003fff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf8003fff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12818*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12818*FLEN/8, x4, x1, x2)

inst_6410:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x007fff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf8007fff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12820*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12820*FLEN/8, x4, x1, x2)

inst_6411:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf800ffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12822*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12822*FLEN/8, x4, x1, x2)

inst_6412:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf801ffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12824*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12824*FLEN/8, x4, x1, x2)

inst_6413:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf803ffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12826*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12826*FLEN/8, x4, x1, x2)

inst_6414:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf807ffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12828*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12828*FLEN/8, x4, x1, x2)

inst_6415:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf80fffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12830*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12830*FLEN/8, x4, x1, x2)

inst_6416:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf81fffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12832*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12832*FLEN/8, x4, x1, x2)

inst_6417:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf83fffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12834*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12834*FLEN/8, x4, x1, x2)

inst_6418:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x400000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf8400000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12836*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12836*FLEN/8, x4, x1, x2)

inst_6419:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x600000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf8600000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12838*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12838*FLEN/8, x4, x1, x2)

inst_6420:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x700000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf8700000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12840*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12840*FLEN/8, x4, x1, x2)

inst_6421:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x780000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf8780000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12842*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12842*FLEN/8, x4, x1, x2)

inst_6422:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf87c0000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12844*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12844*FLEN/8, x4, x1, x2)

inst_6423:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf87e0000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12846*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12846*FLEN/8, x4, x1, x2)

inst_6424:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf87f0000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12848*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12848*FLEN/8, x4, x1, x2)

inst_6425:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf87f8000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12850*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12850*FLEN/8, x4, x1, x2)

inst_6426:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf87fc000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12852*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12852*FLEN/8, x4, x1, x2)

inst_6427:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf87fe000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12854*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12854*FLEN/8, x4, x1, x2)

inst_6428:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf87ff000; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12856*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12856*FLEN/8, x4, x1, x2)

inst_6429:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf87ff800; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12858*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12858*FLEN/8, x4, x1, x2)

inst_6430:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf87ffc00; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12860*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12860*FLEN/8, x4, x1, x2)

inst_6431:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf87ffe00; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12862*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12862*FLEN/8, x4, x1, x2)

inst_6432:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf87fff00; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12864*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12864*FLEN/8, x4, x1, x2)

inst_6433:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf87fff80; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12866*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12866*FLEN/8, x4, x1, x2)

inst_6434:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf87fffc0; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12868*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12868*FLEN/8, x4, x1, x2)

inst_6435:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf87fffe0; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12870*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12870*FLEN/8, x4, x1, x2)

inst_6436:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf87ffff0; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12872*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12872*FLEN/8, x4, x1, x2)

inst_6437:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf87ffff8; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12874*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12874*FLEN/8, x4, x1, x2)

inst_6438:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf87ffffc; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12876*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12876*FLEN/8, x4, x1, x2)

inst_6439:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf87ffffe; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12878*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12878*FLEN/8, x4, x1, x2)

inst_6440:
// fs1 == 1 and fe1 == 0xf0 and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xf87fffff; op2val:0x80800000; 
   valaddr_reg:x3; val_offset:12880*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12880*FLEN/8, x4, x1, x2)

inst_6441:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd000000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12882*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12882*FLEN/8, x4, x1, x2)

inst_6442:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd000001; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12884*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12884*FLEN/8, x4, x1, x2)

inst_6443:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x000003 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd000003; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12886*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12886*FLEN/8, x4, x1, x2)

inst_6444:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x000007 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd000007; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12888*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12888*FLEN/8, x4, x1, x2)

inst_6445:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x00000f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd00000f; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12890*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12890*FLEN/8, x4, x1, x2)

inst_6446:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x00001f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd00001f; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12892*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12892*FLEN/8, x4, x1, x2)

inst_6447:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x00003f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd00003f; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12894*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12894*FLEN/8, x4, x1, x2)

inst_6448:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x00007f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd00007f; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12896*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12896*FLEN/8, x4, x1, x2)

inst_6449:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd0000ff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12898*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12898*FLEN/8, x4, x1, x2)

inst_6450:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd0001ff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12900*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12900*FLEN/8, x4, x1, x2)

inst_6451:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd0003ff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12902*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12902*FLEN/8, x4, x1, x2)

inst_6452:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd0007ff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12904*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12904*FLEN/8, x4, x1, x2)

inst_6453:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x000fff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd000fff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12906*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12906*FLEN/8, x4, x1, x2)

inst_6454:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x001fff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd001fff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12908*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12908*FLEN/8, x4, x1, x2)

inst_6455:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x003fff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd003fff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12910*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12910*FLEN/8, x4, x1, x2)

inst_6456:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x007fff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd007fff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12912*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12912*FLEN/8, x4, x1, x2)

inst_6457:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd00ffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12914*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12914*FLEN/8, x4, x1, x2)

inst_6458:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd01ffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12916*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12916*FLEN/8, x4, x1, x2)

inst_6459:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd03ffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12918*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12918*FLEN/8, x4, x1, x2)

inst_6460:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd07ffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12920*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12920*FLEN/8, x4, x1, x2)

inst_6461:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd0fffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12922*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12922*FLEN/8, x4, x1, x2)

inst_6462:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd1fffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12924*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12924*FLEN/8, x4, x1, x2)

inst_6463:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd3fffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12926*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12926*FLEN/8, x4, x1, x2)

inst_6464:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x400000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd400000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12928*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12928*FLEN/8, x4, x1, x2)

inst_6465:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x600000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd600000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12930*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12930*FLEN/8, x4, x1, x2)

inst_6466:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x700000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd700000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12932*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12932*FLEN/8, x4, x1, x2)

inst_6467:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x780000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd780000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12934*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12934*FLEN/8, x4, x1, x2)

inst_6468:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd7c0000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12936*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12936*FLEN/8, x4, x1, x2)

inst_6469:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd7e0000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12938*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12938*FLEN/8, x4, x1, x2)

inst_6470:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd7f0000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12940*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12940*FLEN/8, x4, x1, x2)

inst_6471:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd7f8000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12942*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12942*FLEN/8, x4, x1, x2)

inst_6472:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd7fc000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12944*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12944*FLEN/8, x4, x1, x2)

inst_6473:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd7fe000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12946*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12946*FLEN/8, x4, x1, x2)

inst_6474:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd7ff000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12948*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12948*FLEN/8, x4, x1, x2)

inst_6475:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd7ff800; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12950*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12950*FLEN/8, x4, x1, x2)

inst_6476:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd7ffc00; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12952*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12952*FLEN/8, x4, x1, x2)

inst_6477:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd7ffe00; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12954*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12954*FLEN/8, x4, x1, x2)

inst_6478:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd7fff00; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12956*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12956*FLEN/8, x4, x1, x2)

inst_6479:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd7fff80; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12958*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12958*FLEN/8, x4, x1, x2)

inst_6480:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd7fffc0; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12960*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12960*FLEN/8, x4, x1, x2)

inst_6481:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd7fffe0; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12962*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12962*FLEN/8, x4, x1, x2)

inst_6482:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd7ffff0; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12964*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12964*FLEN/8, x4, x1, x2)

inst_6483:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd7ffff8; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12966*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12966*FLEN/8, x4, x1, x2)

inst_6484:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd7ffffc; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12968*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12968*FLEN/8, x4, x1, x2)

inst_6485:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd7ffffe; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12970*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12970*FLEN/8, x4, x1, x2)

inst_6486:
// fs1 == 1 and fe1 == 0xfa and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd7fffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12972*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12972*FLEN/8, x4, x1, x2)

inst_6487:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x000000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd800000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:12974*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12974*FLEN/8, x4, x1, x2)

inst_6488:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd800000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12976*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12976*FLEN/8, x4, x1, x2)

inst_6489:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd800001; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:12978*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12978*FLEN/8, x4, x1, x2)

inst_6490:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd800001; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12980*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12980*FLEN/8, x4, x1, x2)

inst_6491:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd800003; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:12982*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12982*FLEN/8, x4, x1, x2)

inst_6492:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x000003 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd800003; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12984*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12984*FLEN/8, x4, x1, x2)

inst_6493:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd800007; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:12986*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12986*FLEN/8, x4, x1, x2)

inst_6494:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x000007 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd800007; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12988*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12988*FLEN/8, x4, x1, x2)

inst_6495:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd80000f; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:12990*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12990*FLEN/8, x4, x1, x2)

inst_6496:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x00000f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd80000f; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12992*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12992*FLEN/8, x4, x1, x2)

inst_6497:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd80001f; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:12994*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12994*FLEN/8, x4, x1, x2)

inst_6498:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x00001f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd80001f; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:12996*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12996*FLEN/8, x4, x1, x2)

inst_6499:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x00003f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd80003f; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:12998*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 12998*FLEN/8, x4, x1, x2)

inst_6500:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x00003f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd80003f; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13000*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13000*FLEN/8, x4, x1, x2)

inst_6501:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x00007f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd80007f; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13002*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13002*FLEN/8, x4, x1, x2)

inst_6502:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x00007f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd80007f; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13004*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13004*FLEN/8, x4, x1, x2)

inst_6503:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd8000ff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13006*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13006*FLEN/8, x4, x1, x2)

inst_6504:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd8000ff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13008*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13008*FLEN/8, x4, x1, x2)

inst_6505:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd8001ff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13010*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13010*FLEN/8, x4, x1, x2)

inst_6506:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd8001ff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13012*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13012*FLEN/8, x4, x1, x2)

inst_6507:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd8003ff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13014*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13014*FLEN/8, x4, x1, x2)

inst_6508:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd8003ff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13016*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13016*FLEN/8, x4, x1, x2)

inst_6509:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd8007ff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13018*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13018*FLEN/8, x4, x1, x2)

inst_6510:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd8007ff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13020*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13020*FLEN/8, x4, x1, x2)

inst_6511:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x000fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd800fff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13022*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13022*FLEN/8, x4, x1, x2)

inst_6512:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x000fff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd800fff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13024*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13024*FLEN/8, x4, x1, x2)

inst_6513:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x001fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd801fff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13026*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13026*FLEN/8, x4, x1, x2)

inst_6514:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x001fff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd801fff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13028*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13028*FLEN/8, x4, x1, x2)

inst_6515:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x003fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd803fff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13030*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13030*FLEN/8, x4, x1, x2)

inst_6516:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x003fff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd803fff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13032*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13032*FLEN/8, x4, x1, x2)

inst_6517:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x007fff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd807fff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13034*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13034*FLEN/8, x4, x1, x2)

inst_6518:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x007fff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd807fff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13036*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13036*FLEN/8, x4, x1, x2)

inst_6519:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd80ffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13038*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13038*FLEN/8, x4, x1, x2)

inst_6520:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd80ffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13040*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13040*FLEN/8, x4, x1, x2)

inst_6521:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd81ffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13042*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13042*FLEN/8, x4, x1, x2)

inst_6522:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd81ffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13044*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13044*FLEN/8, x4, x1, x2)

inst_6523:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd83ffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13046*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13046*FLEN/8, x4, x1, x2)

inst_6524:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd83ffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13048*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13048*FLEN/8, x4, x1, x2)

inst_6525:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd87ffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13050*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13050*FLEN/8, x4, x1, x2)

inst_6526:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd87ffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13052*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13052*FLEN/8, x4, x1, x2)

inst_6527:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd8fffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13054*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13054*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_52)

inst_6528:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd8fffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13056*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13056*FLEN/8, x4, x1, x2)

inst_6529:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd9fffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13058*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13058*FLEN/8, x4, x1, x2)

inst_6530:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfd9fffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13060*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13060*FLEN/8, x4, x1, x2)

inst_6531:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdbfffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13062*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13062*FLEN/8, x4, x1, x2)

inst_6532:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdbfffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13064*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13064*FLEN/8, x4, x1, x2)

inst_6533:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x400000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdc00000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13066*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13066*FLEN/8, x4, x1, x2)

inst_6534:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x400000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdc00000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13068*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13068*FLEN/8, x4, x1, x2)

inst_6535:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x600000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfde00000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13070*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13070*FLEN/8, x4, x1, x2)

inst_6536:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x600000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfde00000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13072*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13072*FLEN/8, x4, x1, x2)

inst_6537:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x700000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdf00000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13074*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13074*FLEN/8, x4, x1, x2)

inst_6538:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x700000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdf00000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13076*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13076*FLEN/8, x4, x1, x2)

inst_6539:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x780000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdf80000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13078*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13078*FLEN/8, x4, x1, x2)

inst_6540:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x780000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdf80000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13080*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13080*FLEN/8, x4, x1, x2)

inst_6541:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdfc0000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13082*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13082*FLEN/8, x4, x1, x2)

inst_6542:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdfc0000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13084*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13084*FLEN/8, x4, x1, x2)

inst_6543:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdfe0000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13086*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13086*FLEN/8, x4, x1, x2)

inst_6544:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdfe0000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13088*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13088*FLEN/8, x4, x1, x2)

inst_6545:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdff0000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13090*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13090*FLEN/8, x4, x1, x2)

inst_6546:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdff0000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13092*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13092*FLEN/8, x4, x1, x2)

inst_6547:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdff8000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13094*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13094*FLEN/8, x4, x1, x2)

inst_6548:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdff8000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13096*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13096*FLEN/8, x4, x1, x2)

inst_6549:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdffc000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13098*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13098*FLEN/8, x4, x1, x2)

inst_6550:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdffc000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13100*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13100*FLEN/8, x4, x1, x2)

inst_6551:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdffe000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13102*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13102*FLEN/8, x4, x1, x2)

inst_6552:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdffe000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13104*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13104*FLEN/8, x4, x1, x2)

inst_6553:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdfff000; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13106*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13106*FLEN/8, x4, x1, x2)

inst_6554:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdfff000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13108*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13108*FLEN/8, x4, x1, x2)

inst_6555:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdfff800; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13110*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13110*FLEN/8, x4, x1, x2)

inst_6556:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdfff800; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13112*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13112*FLEN/8, x4, x1, x2)

inst_6557:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdfffc00; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13114*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13114*FLEN/8, x4, x1, x2)

inst_6558:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdfffc00; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13116*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13116*FLEN/8, x4, x1, x2)

inst_6559:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdfffe00; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13118*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13118*FLEN/8, x4, x1, x2)

inst_6560:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdfffe00; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13120*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13120*FLEN/8, x4, x1, x2)

inst_6561:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdffff00; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13122*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13122*FLEN/8, x4, x1, x2)

inst_6562:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdffff00; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13124*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13124*FLEN/8, x4, x1, x2)

inst_6563:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdffff80; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13126*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13126*FLEN/8, x4, x1, x2)

inst_6564:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdffff80; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13128*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13128*FLEN/8, x4, x1, x2)

inst_6565:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdffffc0; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13130*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13130*FLEN/8, x4, x1, x2)

inst_6566:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdffffc0; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13132*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13132*FLEN/8, x4, x1, x2)

inst_6567:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdffffe0; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13134*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13134*FLEN/8, x4, x1, x2)

inst_6568:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdffffe0; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13136*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13136*FLEN/8, x4, x1, x2)

inst_6569:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdfffff0; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13138*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13138*FLEN/8, x4, x1, x2)

inst_6570:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdfffff0; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13140*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13140*FLEN/8, x4, x1, x2)

inst_6571:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdfffff8; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13142*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13142*FLEN/8, x4, x1, x2)

inst_6572:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdfffff8; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13144*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13144*FLEN/8, x4, x1, x2)

inst_6573:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdfffffc; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13146*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13146*FLEN/8, x4, x1, x2)

inst_6574:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdfffffc; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13148*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13148*FLEN/8, x4, x1, x2)

inst_6575:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdfffffe; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13150*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13150*FLEN/8, x4, x1, x2)

inst_6576:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdfffffe; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13152*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13152*FLEN/8, x4, x1, x2)

inst_6577:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdffffff; op2val:0x80000001; 
   valaddr_reg:x3; val_offset:13154*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13154*FLEN/8, x4, x1, x2)

inst_6578:
// fs1 == 1 and fe1 == 0xfb and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfdffffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13156*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13156*FLEN/8, x4, x1, x2)

inst_6579:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe000000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13158*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13158*FLEN/8, x4, x1, x2)

inst_6580:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe000001; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13160*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13160*FLEN/8, x4, x1, x2)

inst_6581:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x000003 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe000003; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13162*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13162*FLEN/8, x4, x1, x2)

inst_6582:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x000007 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe000007; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13164*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13164*FLEN/8, x4, x1, x2)

inst_6583:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x00000f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe00000f; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13166*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13166*FLEN/8, x4, x1, x2)

inst_6584:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x00001f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe00001f; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13168*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13168*FLEN/8, x4, x1, x2)

inst_6585:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x00003f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe00003f; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13170*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13170*FLEN/8, x4, x1, x2)

inst_6586:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x00007f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe00007f; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13172*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13172*FLEN/8, x4, x1, x2)

inst_6587:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe0000ff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13174*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13174*FLEN/8, x4, x1, x2)

inst_6588:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe0001ff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13176*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13176*FLEN/8, x4, x1, x2)

inst_6589:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe0003ff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13178*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13178*FLEN/8, x4, x1, x2)

inst_6590:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe0007ff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13180*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13180*FLEN/8, x4, x1, x2)

inst_6591:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x000fff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe000fff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13182*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13182*FLEN/8, x4, x1, x2)

inst_6592:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x001fff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe001fff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13184*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13184*FLEN/8, x4, x1, x2)

inst_6593:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x003fff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe003fff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13186*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13186*FLEN/8, x4, x1, x2)

inst_6594:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x007fff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe007fff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13188*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13188*FLEN/8, x4, x1, x2)

inst_6595:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe00ffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13190*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13190*FLEN/8, x4, x1, x2)

inst_6596:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe01ffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13192*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13192*FLEN/8, x4, x1, x2)

inst_6597:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe03ffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13194*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13194*FLEN/8, x4, x1, x2)

inst_6598:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe07ffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13196*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13196*FLEN/8, x4, x1, x2)

inst_6599:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe0fffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13198*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13198*FLEN/8, x4, x1, x2)

inst_6600:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe1fffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13200*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13200*FLEN/8, x4, x1, x2)

inst_6601:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe3fffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13202*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13202*FLEN/8, x4, x1, x2)

inst_6602:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x400000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe400000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13204*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13204*FLEN/8, x4, x1, x2)

inst_6603:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x600000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe600000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13206*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13206*FLEN/8, x4, x1, x2)

inst_6604:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x700000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe700000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13208*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13208*FLEN/8, x4, x1, x2)

inst_6605:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x780000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe780000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13210*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13210*FLEN/8, x4, x1, x2)

inst_6606:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe7c0000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13212*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13212*FLEN/8, x4, x1, x2)

inst_6607:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe7e0000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13214*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13214*FLEN/8, x4, x1, x2)

inst_6608:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe7f0000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13216*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13216*FLEN/8, x4, x1, x2)

inst_6609:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe7f8000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13218*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13218*FLEN/8, x4, x1, x2)

inst_6610:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe7fc000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13220*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13220*FLEN/8, x4, x1, x2)

inst_6611:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe7fe000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13222*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13222*FLEN/8, x4, x1, x2)

inst_6612:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe7ff000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13224*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13224*FLEN/8, x4, x1, x2)

inst_6613:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe7ff800; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13226*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13226*FLEN/8, x4, x1, x2)

inst_6614:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe7ffc00; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13228*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13228*FLEN/8, x4, x1, x2)

inst_6615:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe7ffe00; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13230*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13230*FLEN/8, x4, x1, x2)

inst_6616:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe7fff00; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13232*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13232*FLEN/8, x4, x1, x2)

inst_6617:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe7fff80; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13234*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13234*FLEN/8, x4, x1, x2)

inst_6618:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe7fffc0; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13236*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13236*FLEN/8, x4, x1, x2)

inst_6619:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe7fffe0; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13238*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13238*FLEN/8, x4, x1, x2)

inst_6620:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe7ffff0; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13240*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13240*FLEN/8, x4, x1, x2)

inst_6621:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe7ffff8; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13242*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13242*FLEN/8, x4, x1, x2)

inst_6622:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe7ffffc; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13244*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13244*FLEN/8, x4, x1, x2)

inst_6623:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe7ffffe; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13246*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13246*FLEN/8, x4, x1, x2)

inst_6624:
// fs1 == 1 and fe1 == 0xfc and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe7fffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13248*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13248*FLEN/8, x4, x1, x2)

inst_6625:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe800000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13250*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13250*FLEN/8, x4, x1, x2)

inst_6626:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe800001; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13252*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13252*FLEN/8, x4, x1, x2)

inst_6627:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x000003 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe800003; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13254*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13254*FLEN/8, x4, x1, x2)

inst_6628:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x000007 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe800007; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13256*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13256*FLEN/8, x4, x1, x2)

inst_6629:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x00000f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe80000f; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13258*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13258*FLEN/8, x4, x1, x2)

inst_6630:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x00001f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe80001f; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13260*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13260*FLEN/8, x4, x1, x2)

inst_6631:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x00003f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe80003f; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13262*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13262*FLEN/8, x4, x1, x2)

inst_6632:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x00007f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe80007f; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13264*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13264*FLEN/8, x4, x1, x2)

inst_6633:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe8000ff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13266*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13266*FLEN/8, x4, x1, x2)

inst_6634:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe8001ff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13268*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13268*FLEN/8, x4, x1, x2)

inst_6635:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe8003ff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13270*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13270*FLEN/8, x4, x1, x2)

inst_6636:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe8007ff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13272*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13272*FLEN/8, x4, x1, x2)

inst_6637:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x000fff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe800fff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13274*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13274*FLEN/8, x4, x1, x2)

inst_6638:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x001fff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe801fff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13276*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13276*FLEN/8, x4, x1, x2)

inst_6639:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x003fff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe803fff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13278*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13278*FLEN/8, x4, x1, x2)

inst_6640:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x007fff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe807fff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13280*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13280*FLEN/8, x4, x1, x2)

inst_6641:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe80ffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13282*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13282*FLEN/8, x4, x1, x2)

inst_6642:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe81ffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13284*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13284*FLEN/8, x4, x1, x2)

inst_6643:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe83ffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13286*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13286*FLEN/8, x4, x1, x2)

inst_6644:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe87ffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13288*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13288*FLEN/8, x4, x1, x2)

inst_6645:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe8fffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13290*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13290*FLEN/8, x4, x1, x2)

inst_6646:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfe9fffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13292*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13292*FLEN/8, x4, x1, x2)

inst_6647:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfebfffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13294*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13294*FLEN/8, x4, x1, x2)

inst_6648:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x400000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfec00000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13296*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13296*FLEN/8, x4, x1, x2)

inst_6649:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x600000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfee00000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13298*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13298*FLEN/8, x4, x1, x2)

inst_6650:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x700000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfef00000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13300*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13300*FLEN/8, x4, x1, x2)

inst_6651:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x780000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfef80000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13302*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13302*FLEN/8, x4, x1, x2)

inst_6652:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfefc0000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13304*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13304*FLEN/8, x4, x1, x2)

inst_6653:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfefe0000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13306*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13306*FLEN/8, x4, x1, x2)

inst_6654:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfeff0000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13308*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13308*FLEN/8, x4, x1, x2)

inst_6655:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfeff8000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13310*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13310*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_53)

inst_6656:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfeffc000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13312*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13312*FLEN/8, x4, x1, x2)

inst_6657:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfeffe000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13314*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13314*FLEN/8, x4, x1, x2)

inst_6658:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfefff000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13316*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13316*FLEN/8, x4, x1, x2)

inst_6659:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfefff800; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13318*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13318*FLEN/8, x4, x1, x2)

inst_6660:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfefffc00; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13320*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13320*FLEN/8, x4, x1, x2)

inst_6661:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfefffe00; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13322*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13322*FLEN/8, x4, x1, x2)

inst_6662:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfeffff00; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13324*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13324*FLEN/8, x4, x1, x2)

inst_6663:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfeffff80; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13326*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13326*FLEN/8, x4, x1, x2)

inst_6664:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfeffffc0; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13328*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13328*FLEN/8, x4, x1, x2)

inst_6665:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfeffffe0; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13330*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13330*FLEN/8, x4, x1, x2)

inst_6666:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfefffff0; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13332*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13332*FLEN/8, x4, x1, x2)

inst_6667:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfefffff8; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13334*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13334*FLEN/8, x4, x1, x2)

inst_6668:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfefffffc; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13336*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13336*FLEN/8, x4, x1, x2)

inst_6669:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfefffffe; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13338*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13338*FLEN/8, x4, x1, x2)

inst_6670:
// fs1 == 1 and fe1 == 0xfd and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xfeffffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13340*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13340*FLEN/8, x4, x1, x2)

inst_6671:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x000000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff000000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13342*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13342*FLEN/8, x4, x1, x2)

inst_6672:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x000001 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff000001; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13344*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13344*FLEN/8, x4, x1, x2)

inst_6673:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x000003 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff000003; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13346*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13346*FLEN/8, x4, x1, x2)

inst_6674:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x000007 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff000007; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13348*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13348*FLEN/8, x4, x1, x2)

inst_6675:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x00000f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff00000f; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13350*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13350*FLEN/8, x4, x1, x2)

inst_6676:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x00001f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff00001f; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13352*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13352*FLEN/8, x4, x1, x2)

inst_6677:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x00003f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff00003f; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13354*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13354*FLEN/8, x4, x1, x2)

inst_6678:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x00007f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff00007f; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13356*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13356*FLEN/8, x4, x1, x2)

inst_6679:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x0000ff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff0000ff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13358*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13358*FLEN/8, x4, x1, x2)

inst_6680:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x0001ff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff0001ff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13360*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13360*FLEN/8, x4, x1, x2)

inst_6681:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x0003ff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff0003ff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13362*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13362*FLEN/8, x4, x1, x2)

inst_6682:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x0007ff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff0007ff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13364*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13364*FLEN/8, x4, x1, x2)

inst_6683:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x000fff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff000fff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13366*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13366*FLEN/8, x4, x1, x2)

inst_6684:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x001fff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff001fff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13368*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13368*FLEN/8, x4, x1, x2)

inst_6685:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x003fff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff003fff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13370*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13370*FLEN/8, x4, x1, x2)

inst_6686:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x007fff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff007fff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13372*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13372*FLEN/8, x4, x1, x2)

inst_6687:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x00ffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff00ffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13374*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13374*FLEN/8, x4, x1, x2)

inst_6688:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x01ffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff01ffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13376*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13376*FLEN/8, x4, x1, x2)

inst_6689:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x03ffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff03ffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13378*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13378*FLEN/8, x4, x1, x2)

inst_6690:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x07ffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff07ffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13380*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13380*FLEN/8, x4, x1, x2)

inst_6691:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x0fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff0fffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13382*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13382*FLEN/8, x4, x1, x2)

inst_6692:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x199999 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff199999; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13384*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13384*FLEN/8, x4, x1, x2)

inst_6693:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x1fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff1fffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13386*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13386*FLEN/8, x4, x1, x2)

inst_6694:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x249249 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff249249; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13388*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13388*FLEN/8, x4, x1, x2)

inst_6695:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x333333 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff333333; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13390*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13390*FLEN/8, x4, x1, x2)

inst_6696:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x36db6d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff36db6d; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13392*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13392*FLEN/8, x4, x1, x2)

inst_6697:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x3bbbbb and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff3bbbbb; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13394*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13394*FLEN/8, x4, x1, x2)

inst_6698:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x3fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff3fffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13396*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13396*FLEN/8, x4, x1, x2)

inst_6699:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x400000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff400000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13398*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13398*FLEN/8, x4, x1, x2)

inst_6700:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x444444 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff444444; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13400*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13400*FLEN/8, x4, x1, x2)

inst_6701:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x4ccccc and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff4ccccc; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13402*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13402*FLEN/8, x4, x1, x2)

inst_6702:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x5b6db6 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff5b6db6; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13404*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13404*FLEN/8, x4, x1, x2)

inst_6703:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x600000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff600000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13406*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13406*FLEN/8, x4, x1, x2)

inst_6704:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x666666 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff666666; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13408*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13408*FLEN/8, x4, x1, x2)

inst_6705:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x6db6db and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff6db6db; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13410*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13410*FLEN/8, x4, x1, x2)

inst_6706:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x700000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff700000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13412*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13412*FLEN/8, x4, x1, x2)

inst_6707:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x780000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff780000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13414*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13414*FLEN/8, x4, x1, x2)

inst_6708:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7c0000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7c0000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13416*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13416*FLEN/8, x4, x1, x2)

inst_6709:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7e0000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7e0000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13418*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13418*FLEN/8, x4, x1, x2)

inst_6710:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7f0000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7f0000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13420*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13420*FLEN/8, x4, x1, x2)

inst_6711:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7f8000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7f8000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13422*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13422*FLEN/8, x4, x1, x2)

inst_6712:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fc000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fc000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13424*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13424*FLEN/8, x4, x1, x2)

inst_6713:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fe000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fe000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13426*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13426*FLEN/8, x4, x1, x2)

inst_6714:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7ff000 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7ff000; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13428*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13428*FLEN/8, x4, x1, x2)

inst_6715:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7ff800 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7ff800; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13430*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13430*FLEN/8, x4, x1, x2)

inst_6716:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7ffc00 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7ffc00; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13432*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13432*FLEN/8, x4, x1, x2)

inst_6717:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7ffe00 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7ffe00; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13434*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13434*FLEN/8, x4, x1, x2)

inst_6718:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fff00 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fff00; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13436*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13436*FLEN/8, x4, x1, x2)

inst_6719:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fff80 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fff80; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13438*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13438*FLEN/8, x4, x1, x2)

inst_6720:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffc0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffc0; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13440*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13440*FLEN/8, x4, x1, x2)

inst_6721:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffe0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffe0; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13442*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13442*FLEN/8, x4, x1, x2)

inst_6722:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7ffff0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7ffff0; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13444*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13444*FLEN/8, x4, x1, x2)

inst_6723:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7ffff8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7ffff8; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13446*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13446*FLEN/8, x4, x1, x2)

inst_6724:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7ffffc and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7ffffc; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13448*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13448*FLEN/8, x4, x1, x2)

inst_6725:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7ffffe and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7ffffe; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:13450*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13450*FLEN/8, x4, x1, x2)

inst_6726:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea000000; 
   valaddr_reg:x3; val_offset:13452*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13452*FLEN/8, x4, x1, x2)

inst_6727:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea000001; 
   valaddr_reg:x3; val_offset:13454*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13454*FLEN/8, x4, x1, x2)

inst_6728:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea000003; 
   valaddr_reg:x3; val_offset:13456*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13456*FLEN/8, x4, x1, x2)

inst_6729:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea000007; 
   valaddr_reg:x3; val_offset:13458*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13458*FLEN/8, x4, x1, x2)

inst_6730:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea00000f; 
   valaddr_reg:x3; val_offset:13460*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13460*FLEN/8, x4, x1, x2)

inst_6731:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea00001f; 
   valaddr_reg:x3; val_offset:13462*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13462*FLEN/8, x4, x1, x2)

inst_6732:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea00003f; 
   valaddr_reg:x3; val_offset:13464*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13464*FLEN/8, x4, x1, x2)

inst_6733:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea00007f; 
   valaddr_reg:x3; val_offset:13466*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13466*FLEN/8, x4, x1, x2)

inst_6734:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea0000ff; 
   valaddr_reg:x3; val_offset:13468*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13468*FLEN/8, x4, x1, x2)

inst_6735:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea0001ff; 
   valaddr_reg:x3; val_offset:13470*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13470*FLEN/8, x4, x1, x2)

inst_6736:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea0003ff; 
   valaddr_reg:x3; val_offset:13472*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13472*FLEN/8, x4, x1, x2)

inst_6737:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea0007ff; 
   valaddr_reg:x3; val_offset:13474*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13474*FLEN/8, x4, x1, x2)

inst_6738:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea000fff; 
   valaddr_reg:x3; val_offset:13476*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13476*FLEN/8, x4, x1, x2)

inst_6739:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea001fff; 
   valaddr_reg:x3; val_offset:13478*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13478*FLEN/8, x4, x1, x2)

inst_6740:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea003fff; 
   valaddr_reg:x3; val_offset:13480*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13480*FLEN/8, x4, x1, x2)

inst_6741:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea007fff; 
   valaddr_reg:x3; val_offset:13482*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13482*FLEN/8, x4, x1, x2)

inst_6742:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea00ffff; 
   valaddr_reg:x3; val_offset:13484*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13484*FLEN/8, x4, x1, x2)

inst_6743:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea01ffff; 
   valaddr_reg:x3; val_offset:13486*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13486*FLEN/8, x4, x1, x2)

inst_6744:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea03ffff; 
   valaddr_reg:x3; val_offset:13488*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13488*FLEN/8, x4, x1, x2)

inst_6745:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea07ffff; 
   valaddr_reg:x3; val_offset:13490*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13490*FLEN/8, x4, x1, x2)

inst_6746:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea0fffff; 
   valaddr_reg:x3; val_offset:13492*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13492*FLEN/8, x4, x1, x2)

inst_6747:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea1fffff; 
   valaddr_reg:x3; val_offset:13494*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13494*FLEN/8, x4, x1, x2)

inst_6748:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea3fffff; 
   valaddr_reg:x3; val_offset:13496*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13496*FLEN/8, x4, x1, x2)

inst_6749:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea400000; 
   valaddr_reg:x3; val_offset:13498*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13498*FLEN/8, x4, x1, x2)

inst_6750:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea600000; 
   valaddr_reg:x3; val_offset:13500*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13500*FLEN/8, x4, x1, x2)

inst_6751:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea700000; 
   valaddr_reg:x3; val_offset:13502*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13502*FLEN/8, x4, x1, x2)

inst_6752:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea780000; 
   valaddr_reg:x3; val_offset:13504*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13504*FLEN/8, x4, x1, x2)

inst_6753:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea7c0000; 
   valaddr_reg:x3; val_offset:13506*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13506*FLEN/8, x4, x1, x2)

inst_6754:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea7e0000; 
   valaddr_reg:x3; val_offset:13508*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13508*FLEN/8, x4, x1, x2)

inst_6755:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea7f0000; 
   valaddr_reg:x3; val_offset:13510*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13510*FLEN/8, x4, x1, x2)

inst_6756:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea7f8000; 
   valaddr_reg:x3; val_offset:13512*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13512*FLEN/8, x4, x1, x2)

inst_6757:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea7fc000; 
   valaddr_reg:x3; val_offset:13514*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13514*FLEN/8, x4, x1, x2)

inst_6758:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea7fe000; 
   valaddr_reg:x3; val_offset:13516*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13516*FLEN/8, x4, x1, x2)

inst_6759:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea7ff000; 
   valaddr_reg:x3; val_offset:13518*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13518*FLEN/8, x4, x1, x2)

inst_6760:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea7ff800; 
   valaddr_reg:x3; val_offset:13520*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13520*FLEN/8, x4, x1, x2)

inst_6761:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea7ffc00; 
   valaddr_reg:x3; val_offset:13522*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13522*FLEN/8, x4, x1, x2)

inst_6762:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea7ffe00; 
   valaddr_reg:x3; val_offset:13524*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13524*FLEN/8, x4, x1, x2)

inst_6763:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea7fff00; 
   valaddr_reg:x3; val_offset:13526*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13526*FLEN/8, x4, x1, x2)

inst_6764:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea7fff80; 
   valaddr_reg:x3; val_offset:13528*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13528*FLEN/8, x4, x1, x2)

inst_6765:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea7fffc0; 
   valaddr_reg:x3; val_offset:13530*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13530*FLEN/8, x4, x1, x2)

inst_6766:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea7fffe0; 
   valaddr_reg:x3; val_offset:13532*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13532*FLEN/8, x4, x1, x2)

inst_6767:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea7ffff0; 
   valaddr_reg:x3; val_offset:13534*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13534*FLEN/8, x4, x1, x2)

inst_6768:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea7ffff8; 
   valaddr_reg:x3; val_offset:13536*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13536*FLEN/8, x4, x1, x2)

inst_6769:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea7ffffc; 
   valaddr_reg:x3; val_offset:13538*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13538*FLEN/8, x4, x1, x2)

inst_6770:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea7ffffe; 
   valaddr_reg:x3; val_offset:13540*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13540*FLEN/8, x4, x1, x2)

inst_6771:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xd4 and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xea7fffff; 
   valaddr_reg:x3; val_offset:13542*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13542*FLEN/8, x4, x1, x2)

inst_6772:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd000000; 
   valaddr_reg:x3; val_offset:13544*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13544*FLEN/8, x4, x1, x2)

inst_6773:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd000001; 
   valaddr_reg:x3; val_offset:13546*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13546*FLEN/8, x4, x1, x2)

inst_6774:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd000003; 
   valaddr_reg:x3; val_offset:13548*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13548*FLEN/8, x4, x1, x2)

inst_6775:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd000007; 
   valaddr_reg:x3; val_offset:13550*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13550*FLEN/8, x4, x1, x2)

inst_6776:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd00000f; 
   valaddr_reg:x3; val_offset:13552*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13552*FLEN/8, x4, x1, x2)

inst_6777:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd00001f; 
   valaddr_reg:x3; val_offset:13554*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13554*FLEN/8, x4, x1, x2)

inst_6778:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd00003f; 
   valaddr_reg:x3; val_offset:13556*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13556*FLEN/8, x4, x1, x2)

inst_6779:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd00007f; 
   valaddr_reg:x3; val_offset:13558*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13558*FLEN/8, x4, x1, x2)

inst_6780:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd0000ff; 
   valaddr_reg:x3; val_offset:13560*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13560*FLEN/8, x4, x1, x2)

inst_6781:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd0001ff; 
   valaddr_reg:x3; val_offset:13562*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13562*FLEN/8, x4, x1, x2)

inst_6782:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd0003ff; 
   valaddr_reg:x3; val_offset:13564*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13564*FLEN/8, x4, x1, x2)

inst_6783:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd0007ff; 
   valaddr_reg:x3; val_offset:13566*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13566*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_54)

inst_6784:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd000fff; 
   valaddr_reg:x3; val_offset:13568*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13568*FLEN/8, x4, x1, x2)

inst_6785:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd001fff; 
   valaddr_reg:x3; val_offset:13570*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13570*FLEN/8, x4, x1, x2)

inst_6786:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd003fff; 
   valaddr_reg:x3; val_offset:13572*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13572*FLEN/8, x4, x1, x2)

inst_6787:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd007fff; 
   valaddr_reg:x3; val_offset:13574*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13574*FLEN/8, x4, x1, x2)

inst_6788:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd00ffff; 
   valaddr_reg:x3; val_offset:13576*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13576*FLEN/8, x4, x1, x2)

inst_6789:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd01ffff; 
   valaddr_reg:x3; val_offset:13578*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13578*FLEN/8, x4, x1, x2)

inst_6790:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd03ffff; 
   valaddr_reg:x3; val_offset:13580*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13580*FLEN/8, x4, x1, x2)

inst_6791:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd07ffff; 
   valaddr_reg:x3; val_offset:13582*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13582*FLEN/8, x4, x1, x2)

inst_6792:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd0fffff; 
   valaddr_reg:x3; val_offset:13584*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13584*FLEN/8, x4, x1, x2)

inst_6793:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd1fffff; 
   valaddr_reg:x3; val_offset:13586*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13586*FLEN/8, x4, x1, x2)

inst_6794:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd3fffff; 
   valaddr_reg:x3; val_offset:13588*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13588*FLEN/8, x4, x1, x2)

inst_6795:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd400000; 
   valaddr_reg:x3; val_offset:13590*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13590*FLEN/8, x4, x1, x2)

inst_6796:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd600000; 
   valaddr_reg:x3; val_offset:13592*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13592*FLEN/8, x4, x1, x2)

inst_6797:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd700000; 
   valaddr_reg:x3; val_offset:13594*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13594*FLEN/8, x4, x1, x2)

inst_6798:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd780000; 
   valaddr_reg:x3; val_offset:13596*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13596*FLEN/8, x4, x1, x2)

inst_6799:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd7c0000; 
   valaddr_reg:x3; val_offset:13598*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13598*FLEN/8, x4, x1, x2)

inst_6800:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd7e0000; 
   valaddr_reg:x3; val_offset:13600*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13600*FLEN/8, x4, x1, x2)

inst_6801:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd7f0000; 
   valaddr_reg:x3; val_offset:13602*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13602*FLEN/8, x4, x1, x2)

inst_6802:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd7f8000; 
   valaddr_reg:x3; val_offset:13604*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13604*FLEN/8, x4, x1, x2)

inst_6803:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd7fc000; 
   valaddr_reg:x3; val_offset:13606*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13606*FLEN/8, x4, x1, x2)

inst_6804:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd7fe000; 
   valaddr_reg:x3; val_offset:13608*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13608*FLEN/8, x4, x1, x2)

inst_6805:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd7ff000; 
   valaddr_reg:x3; val_offset:13610*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13610*FLEN/8, x4, x1, x2)

inst_6806:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd7ff800; 
   valaddr_reg:x3; val_offset:13612*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13612*FLEN/8, x4, x1, x2)

inst_6807:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd7ffc00; 
   valaddr_reg:x3; val_offset:13614*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13614*FLEN/8, x4, x1, x2)

inst_6808:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd7ffe00; 
   valaddr_reg:x3; val_offset:13616*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13616*FLEN/8, x4, x1, x2)

inst_6809:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd7fff00; 
   valaddr_reg:x3; val_offset:13618*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13618*FLEN/8, x4, x1, x2)

inst_6810:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd7fff80; 
   valaddr_reg:x3; val_offset:13620*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13620*FLEN/8, x4, x1, x2)

inst_6811:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd7fffc0; 
   valaddr_reg:x3; val_offset:13622*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13622*FLEN/8, x4, x1, x2)

inst_6812:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd7fffe0; 
   valaddr_reg:x3; val_offset:13624*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13624*FLEN/8, x4, x1, x2)

inst_6813:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd7ffff0; 
   valaddr_reg:x3; val_offset:13626*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13626*FLEN/8, x4, x1, x2)

inst_6814:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd7ffff8; 
   valaddr_reg:x3; val_offset:13628*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13628*FLEN/8, x4, x1, x2)

inst_6815:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd7ffffc; 
   valaddr_reg:x3; val_offset:13630*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13630*FLEN/8, x4, x1, x2)

inst_6816:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd7ffffe; 
   valaddr_reg:x3; val_offset:13632*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13632*FLEN/8, x4, x1, x2)

inst_6817:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd7fffff; 
   valaddr_reg:x3; val_offset:13634*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13634*FLEN/8, x4, x1, x2)

inst_6818:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd800000; 
   valaddr_reg:x3; val_offset:13636*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13636*FLEN/8, x4, x1, x2)

inst_6819:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd800001; 
   valaddr_reg:x3; val_offset:13638*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13638*FLEN/8, x4, x1, x2)

inst_6820:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd800003; 
   valaddr_reg:x3; val_offset:13640*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13640*FLEN/8, x4, x1, x2)

inst_6821:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd800007; 
   valaddr_reg:x3; val_offset:13642*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13642*FLEN/8, x4, x1, x2)

inst_6822:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd80000f; 
   valaddr_reg:x3; val_offset:13644*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13644*FLEN/8, x4, x1, x2)

inst_6823:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd80001f; 
   valaddr_reg:x3; val_offset:13646*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13646*FLEN/8, x4, x1, x2)

inst_6824:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd80003f; 
   valaddr_reg:x3; val_offset:13648*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13648*FLEN/8, x4, x1, x2)

inst_6825:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd80007f; 
   valaddr_reg:x3; val_offset:13650*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13650*FLEN/8, x4, x1, x2)

inst_6826:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd8000ff; 
   valaddr_reg:x3; val_offset:13652*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13652*FLEN/8, x4, x1, x2)

inst_6827:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd8001ff; 
   valaddr_reg:x3; val_offset:13654*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13654*FLEN/8, x4, x1, x2)

inst_6828:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd8003ff; 
   valaddr_reg:x3; val_offset:13656*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13656*FLEN/8, x4, x1, x2)

inst_6829:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd8007ff; 
   valaddr_reg:x3; val_offset:13658*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13658*FLEN/8, x4, x1, x2)

inst_6830:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd800fff; 
   valaddr_reg:x3; val_offset:13660*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13660*FLEN/8, x4, x1, x2)

inst_6831:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd801fff; 
   valaddr_reg:x3; val_offset:13662*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13662*FLEN/8, x4, x1, x2)

inst_6832:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd803fff; 
   valaddr_reg:x3; val_offset:13664*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13664*FLEN/8, x4, x1, x2)

inst_6833:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd807fff; 
   valaddr_reg:x3; val_offset:13666*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13666*FLEN/8, x4, x1, x2)

inst_6834:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd80ffff; 
   valaddr_reg:x3; val_offset:13668*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13668*FLEN/8, x4, x1, x2)

inst_6835:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd81ffff; 
   valaddr_reg:x3; val_offset:13670*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13670*FLEN/8, x4, x1, x2)

inst_6836:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd83ffff; 
   valaddr_reg:x3; val_offset:13672*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13672*FLEN/8, x4, x1, x2)

inst_6837:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd87ffff; 
   valaddr_reg:x3; val_offset:13674*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13674*FLEN/8, x4, x1, x2)

inst_6838:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd8fffff; 
   valaddr_reg:x3; val_offset:13676*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13676*FLEN/8, x4, x1, x2)

inst_6839:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfd9fffff; 
   valaddr_reg:x3; val_offset:13678*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13678*FLEN/8, x4, x1, x2)

inst_6840:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfdbfffff; 
   valaddr_reg:x3; val_offset:13680*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13680*FLEN/8, x4, x1, x2)

inst_6841:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfdc00000; 
   valaddr_reg:x3; val_offset:13682*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13682*FLEN/8, x4, x1, x2)

inst_6842:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfde00000; 
   valaddr_reg:x3; val_offset:13684*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13684*FLEN/8, x4, x1, x2)

inst_6843:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfdf00000; 
   valaddr_reg:x3; val_offset:13686*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13686*FLEN/8, x4, x1, x2)

inst_6844:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfdf80000; 
   valaddr_reg:x3; val_offset:13688*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13688*FLEN/8, x4, x1, x2)

inst_6845:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfdfc0000; 
   valaddr_reg:x3; val_offset:13690*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13690*FLEN/8, x4, x1, x2)

inst_6846:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfdfe0000; 
   valaddr_reg:x3; val_offset:13692*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13692*FLEN/8, x4, x1, x2)

inst_6847:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfdff0000; 
   valaddr_reg:x3; val_offset:13694*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13694*FLEN/8, x4, x1, x2)

inst_6848:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfdff8000; 
   valaddr_reg:x3; val_offset:13696*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13696*FLEN/8, x4, x1, x2)

inst_6849:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfdffc000; 
   valaddr_reg:x3; val_offset:13698*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13698*FLEN/8, x4, x1, x2)

inst_6850:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfdffe000; 
   valaddr_reg:x3; val_offset:13700*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13700*FLEN/8, x4, x1, x2)

inst_6851:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfdfff000; 
   valaddr_reg:x3; val_offset:13702*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13702*FLEN/8, x4, x1, x2)

inst_6852:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfdfff800; 
   valaddr_reg:x3; val_offset:13704*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13704*FLEN/8, x4, x1, x2)

inst_6853:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfdfffc00; 
   valaddr_reg:x3; val_offset:13706*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13706*FLEN/8, x4, x1, x2)

inst_6854:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfdfffe00; 
   valaddr_reg:x3; val_offset:13708*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13708*FLEN/8, x4, x1, x2)

inst_6855:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfdffff00; 
   valaddr_reg:x3; val_offset:13710*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13710*FLEN/8, x4, x1, x2)

inst_6856:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfdffff80; 
   valaddr_reg:x3; val_offset:13712*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13712*FLEN/8, x4, x1, x2)

inst_6857:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfdffffc0; 
   valaddr_reg:x3; val_offset:13714*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13714*FLEN/8, x4, x1, x2)

inst_6858:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfdffffe0; 
   valaddr_reg:x3; val_offset:13716*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13716*FLEN/8, x4, x1, x2)

inst_6859:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfdfffff0; 
   valaddr_reg:x3; val_offset:13718*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13718*FLEN/8, x4, x1, x2)

inst_6860:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfdfffff8; 
   valaddr_reg:x3; val_offset:13720*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13720*FLEN/8, x4, x1, x2)

inst_6861:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfdfffffc; 
   valaddr_reg:x3; val_offset:13722*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13722*FLEN/8, x4, x1, x2)

inst_6862:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfdfffffe; 
   valaddr_reg:x3; val_offset:13724*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13724*FLEN/8, x4, x1, x2)

inst_6863:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfdffffff; 
   valaddr_reg:x3; val_offset:13726*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13726*FLEN/8, x4, x1, x2)

inst_6864:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe000000; 
   valaddr_reg:x3; val_offset:13728*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13728*FLEN/8, x4, x1, x2)

inst_6865:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe000001; 
   valaddr_reg:x3; val_offset:13730*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13730*FLEN/8, x4, x1, x2)

inst_6866:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe000003; 
   valaddr_reg:x3; val_offset:13732*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13732*FLEN/8, x4, x1, x2)

inst_6867:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe000007; 
   valaddr_reg:x3; val_offset:13734*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13734*FLEN/8, x4, x1, x2)

inst_6868:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe00000f; 
   valaddr_reg:x3; val_offset:13736*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13736*FLEN/8, x4, x1, x2)

inst_6869:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe00001f; 
   valaddr_reg:x3; val_offset:13738*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13738*FLEN/8, x4, x1, x2)

inst_6870:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe00003f; 
   valaddr_reg:x3; val_offset:13740*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13740*FLEN/8, x4, x1, x2)

inst_6871:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe00007f; 
   valaddr_reg:x3; val_offset:13742*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13742*FLEN/8, x4, x1, x2)

inst_6872:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe0000ff; 
   valaddr_reg:x3; val_offset:13744*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13744*FLEN/8, x4, x1, x2)

inst_6873:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe0001ff; 
   valaddr_reg:x3; val_offset:13746*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13746*FLEN/8, x4, x1, x2)

inst_6874:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe0003ff; 
   valaddr_reg:x3; val_offset:13748*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13748*FLEN/8, x4, x1, x2)

inst_6875:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe0007ff; 
   valaddr_reg:x3; val_offset:13750*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13750*FLEN/8, x4, x1, x2)

inst_6876:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe000fff; 
   valaddr_reg:x3; val_offset:13752*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13752*FLEN/8, x4, x1, x2)

inst_6877:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe001fff; 
   valaddr_reg:x3; val_offset:13754*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13754*FLEN/8, x4, x1, x2)

inst_6878:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe003fff; 
   valaddr_reg:x3; val_offset:13756*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13756*FLEN/8, x4, x1, x2)

inst_6879:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe007fff; 
   valaddr_reg:x3; val_offset:13758*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13758*FLEN/8, x4, x1, x2)

inst_6880:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe00ffff; 
   valaddr_reg:x3; val_offset:13760*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13760*FLEN/8, x4, x1, x2)

inst_6881:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe01ffff; 
   valaddr_reg:x3; val_offset:13762*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13762*FLEN/8, x4, x1, x2)

inst_6882:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe03ffff; 
   valaddr_reg:x3; val_offset:13764*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13764*FLEN/8, x4, x1, x2)

inst_6883:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe07ffff; 
   valaddr_reg:x3; val_offset:13766*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13766*FLEN/8, x4, x1, x2)

inst_6884:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe0fffff; 
   valaddr_reg:x3; val_offset:13768*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13768*FLEN/8, x4, x1, x2)

inst_6885:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe1fffff; 
   valaddr_reg:x3; val_offset:13770*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13770*FLEN/8, x4, x1, x2)

inst_6886:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe3fffff; 
   valaddr_reg:x3; val_offset:13772*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13772*FLEN/8, x4, x1, x2)

inst_6887:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe400000; 
   valaddr_reg:x3; val_offset:13774*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13774*FLEN/8, x4, x1, x2)

inst_6888:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe600000; 
   valaddr_reg:x3; val_offset:13776*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13776*FLEN/8, x4, x1, x2)

inst_6889:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe700000; 
   valaddr_reg:x3; val_offset:13778*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13778*FLEN/8, x4, x1, x2)

inst_6890:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe780000; 
   valaddr_reg:x3; val_offset:13780*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13780*FLEN/8, x4, x1, x2)

inst_6891:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe7c0000; 
   valaddr_reg:x3; val_offset:13782*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13782*FLEN/8, x4, x1, x2)

inst_6892:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe7e0000; 
   valaddr_reg:x3; val_offset:13784*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13784*FLEN/8, x4, x1, x2)

inst_6893:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe7f0000; 
   valaddr_reg:x3; val_offset:13786*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13786*FLEN/8, x4, x1, x2)

inst_6894:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe7f8000; 
   valaddr_reg:x3; val_offset:13788*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13788*FLEN/8, x4, x1, x2)

inst_6895:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe7fc000; 
   valaddr_reg:x3; val_offset:13790*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13790*FLEN/8, x4, x1, x2)

inst_6896:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe7fe000; 
   valaddr_reg:x3; val_offset:13792*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13792*FLEN/8, x4, x1, x2)

inst_6897:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe7ff000; 
   valaddr_reg:x3; val_offset:13794*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13794*FLEN/8, x4, x1, x2)

inst_6898:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe7ff800; 
   valaddr_reg:x3; val_offset:13796*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13796*FLEN/8, x4, x1, x2)

inst_6899:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe7ffc00; 
   valaddr_reg:x3; val_offset:13798*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13798*FLEN/8, x4, x1, x2)

inst_6900:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe7ffe00; 
   valaddr_reg:x3; val_offset:13800*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13800*FLEN/8, x4, x1, x2)

inst_6901:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe7fff00; 
   valaddr_reg:x3; val_offset:13802*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13802*FLEN/8, x4, x1, x2)

inst_6902:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe7fff80; 
   valaddr_reg:x3; val_offset:13804*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13804*FLEN/8, x4, x1, x2)

inst_6903:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe7fffc0; 
   valaddr_reg:x3; val_offset:13806*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13806*FLEN/8, x4, x1, x2)

inst_6904:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe7fffe0; 
   valaddr_reg:x3; val_offset:13808*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13808*FLEN/8, x4, x1, x2)

inst_6905:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe7ffff0; 
   valaddr_reg:x3; val_offset:13810*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13810*FLEN/8, x4, x1, x2)

inst_6906:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe7ffff8; 
   valaddr_reg:x3; val_offset:13812*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13812*FLEN/8, x4, x1, x2)

inst_6907:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe7ffffc; 
   valaddr_reg:x3; val_offset:13814*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13814*FLEN/8, x4, x1, x2)

inst_6908:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe7ffffe; 
   valaddr_reg:x3; val_offset:13816*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13816*FLEN/8, x4, x1, x2)

inst_6909:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfc and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe7fffff; 
   valaddr_reg:x3; val_offset:13818*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13818*FLEN/8, x4, x1, x2)

inst_6910:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe800000; 
   valaddr_reg:x3; val_offset:13820*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13820*FLEN/8, x4, x1, x2)

inst_6911:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe800001; 
   valaddr_reg:x3; val_offset:13822*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13822*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_55)

inst_6912:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe800003; 
   valaddr_reg:x3; val_offset:13824*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13824*FLEN/8, x4, x1, x2)

inst_6913:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe800007; 
   valaddr_reg:x3; val_offset:13826*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13826*FLEN/8, x4, x1, x2)

inst_6914:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe80000f; 
   valaddr_reg:x3; val_offset:13828*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13828*FLEN/8, x4, x1, x2)

inst_6915:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe80001f; 
   valaddr_reg:x3; val_offset:13830*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13830*FLEN/8, x4, x1, x2)

inst_6916:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe80003f; 
   valaddr_reg:x3; val_offset:13832*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13832*FLEN/8, x4, x1, x2)

inst_6917:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe80007f; 
   valaddr_reg:x3; val_offset:13834*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13834*FLEN/8, x4, x1, x2)

inst_6918:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe8000ff; 
   valaddr_reg:x3; val_offset:13836*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13836*FLEN/8, x4, x1, x2)

inst_6919:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe8001ff; 
   valaddr_reg:x3; val_offset:13838*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13838*FLEN/8, x4, x1, x2)

inst_6920:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe8003ff; 
   valaddr_reg:x3; val_offset:13840*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13840*FLEN/8, x4, x1, x2)

inst_6921:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe8007ff; 
   valaddr_reg:x3; val_offset:13842*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13842*FLEN/8, x4, x1, x2)

inst_6922:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe800fff; 
   valaddr_reg:x3; val_offset:13844*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13844*FLEN/8, x4, x1, x2)

inst_6923:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe801fff; 
   valaddr_reg:x3; val_offset:13846*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13846*FLEN/8, x4, x1, x2)

inst_6924:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe803fff; 
   valaddr_reg:x3; val_offset:13848*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13848*FLEN/8, x4, x1, x2)

inst_6925:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe807fff; 
   valaddr_reg:x3; val_offset:13850*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13850*FLEN/8, x4, x1, x2)

inst_6926:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe80ffff; 
   valaddr_reg:x3; val_offset:13852*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13852*FLEN/8, x4, x1, x2)

inst_6927:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe81ffff; 
   valaddr_reg:x3; val_offset:13854*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13854*FLEN/8, x4, x1, x2)

inst_6928:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe83ffff; 
   valaddr_reg:x3; val_offset:13856*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13856*FLEN/8, x4, x1, x2)

inst_6929:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe87ffff; 
   valaddr_reg:x3; val_offset:13858*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13858*FLEN/8, x4, x1, x2)

inst_6930:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe8fffff; 
   valaddr_reg:x3; val_offset:13860*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13860*FLEN/8, x4, x1, x2)

inst_6931:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfe9fffff; 
   valaddr_reg:x3; val_offset:13862*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13862*FLEN/8, x4, x1, x2)

inst_6932:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfebfffff; 
   valaddr_reg:x3; val_offset:13864*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13864*FLEN/8, x4, x1, x2)

inst_6933:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfec00000; 
   valaddr_reg:x3; val_offset:13866*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13866*FLEN/8, x4, x1, x2)

inst_6934:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfee00000; 
   valaddr_reg:x3; val_offset:13868*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13868*FLEN/8, x4, x1, x2)

inst_6935:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfef00000; 
   valaddr_reg:x3; val_offset:13870*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13870*FLEN/8, x4, x1, x2)

inst_6936:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfef80000; 
   valaddr_reg:x3; val_offset:13872*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13872*FLEN/8, x4, x1, x2)

inst_6937:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfefc0000; 
   valaddr_reg:x3; val_offset:13874*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13874*FLEN/8, x4, x1, x2)

inst_6938:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfefe0000; 
   valaddr_reg:x3; val_offset:13876*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13876*FLEN/8, x4, x1, x2)

inst_6939:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfeff0000; 
   valaddr_reg:x3; val_offset:13878*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13878*FLEN/8, x4, x1, x2)

inst_6940:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfeff8000; 
   valaddr_reg:x3; val_offset:13880*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13880*FLEN/8, x4, x1, x2)

inst_6941:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfeffc000; 
   valaddr_reg:x3; val_offset:13882*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13882*FLEN/8, x4, x1, x2)

inst_6942:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfeffe000; 
   valaddr_reg:x3; val_offset:13884*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13884*FLEN/8, x4, x1, x2)

inst_6943:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfefff000; 
   valaddr_reg:x3; val_offset:13886*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13886*FLEN/8, x4, x1, x2)

inst_6944:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfefff800; 
   valaddr_reg:x3; val_offset:13888*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13888*FLEN/8, x4, x1, x2)

inst_6945:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfefffc00; 
   valaddr_reg:x3; val_offset:13890*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13890*FLEN/8, x4, x1, x2)

inst_6946:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfefffe00; 
   valaddr_reg:x3; val_offset:13892*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13892*FLEN/8, x4, x1, x2)

inst_6947:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfeffff00; 
   valaddr_reg:x3; val_offset:13894*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13894*FLEN/8, x4, x1, x2)

inst_6948:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfeffff80; 
   valaddr_reg:x3; val_offset:13896*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13896*FLEN/8, x4, x1, x2)

inst_6949:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfeffffc0; 
   valaddr_reg:x3; val_offset:13898*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13898*FLEN/8, x4, x1, x2)

inst_6950:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfeffffe0; 
   valaddr_reg:x3; val_offset:13900*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13900*FLEN/8, x4, x1, x2)

inst_6951:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfefffff0; 
   valaddr_reg:x3; val_offset:13902*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13902*FLEN/8, x4, x1, x2)

inst_6952:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfefffff8; 
   valaddr_reg:x3; val_offset:13904*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13904*FLEN/8, x4, x1, x2)

inst_6953:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfefffffc; 
   valaddr_reg:x3; val_offset:13906*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13906*FLEN/8, x4, x1, x2)

inst_6954:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfefffffe; 
   valaddr_reg:x3; val_offset:13908*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13908*FLEN/8, x4, x1, x2)

inst_6955:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xfeffffff; 
   valaddr_reg:x3; val_offset:13910*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13910*FLEN/8, x4, x1, x2)

inst_6956:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff000000; 
   valaddr_reg:x3; val_offset:13912*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13912*FLEN/8, x4, x1, x2)

inst_6957:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff000001; 
   valaddr_reg:x3; val_offset:13914*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13914*FLEN/8, x4, x1, x2)

inst_6958:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff000003; 
   valaddr_reg:x3; val_offset:13916*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13916*FLEN/8, x4, x1, x2)

inst_6959:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff000007; 
   valaddr_reg:x3; val_offset:13918*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13918*FLEN/8, x4, x1, x2)

inst_6960:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff00000f; 
   valaddr_reg:x3; val_offset:13920*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13920*FLEN/8, x4, x1, x2)

inst_6961:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff00001f; 
   valaddr_reg:x3; val_offset:13922*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13922*FLEN/8, x4, x1, x2)

inst_6962:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff00003f; 
   valaddr_reg:x3; val_offset:13924*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13924*FLEN/8, x4, x1, x2)

inst_6963:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff00007f; 
   valaddr_reg:x3; val_offset:13926*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13926*FLEN/8, x4, x1, x2)

inst_6964:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff0000ff; 
   valaddr_reg:x3; val_offset:13928*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13928*FLEN/8, x4, x1, x2)

inst_6965:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff0001ff; 
   valaddr_reg:x3; val_offset:13930*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13930*FLEN/8, x4, x1, x2)

inst_6966:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff0003ff; 
   valaddr_reg:x3; val_offset:13932*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13932*FLEN/8, x4, x1, x2)

inst_6967:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff0007ff; 
   valaddr_reg:x3; val_offset:13934*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13934*FLEN/8, x4, x1, x2)

inst_6968:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff000fff; 
   valaddr_reg:x3; val_offset:13936*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13936*FLEN/8, x4, x1, x2)

inst_6969:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff001fff; 
   valaddr_reg:x3; val_offset:13938*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13938*FLEN/8, x4, x1, x2)

inst_6970:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff003fff; 
   valaddr_reg:x3; val_offset:13940*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13940*FLEN/8, x4, x1, x2)

inst_6971:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff007fff; 
   valaddr_reg:x3; val_offset:13942*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13942*FLEN/8, x4, x1, x2)

inst_6972:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff00ffff; 
   valaddr_reg:x3; val_offset:13944*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13944*FLEN/8, x4, x1, x2)

inst_6973:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff01ffff; 
   valaddr_reg:x3; val_offset:13946*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13946*FLEN/8, x4, x1, x2)

inst_6974:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff03ffff; 
   valaddr_reg:x3; val_offset:13948*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13948*FLEN/8, x4, x1, x2)

inst_6975:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff07ffff; 
   valaddr_reg:x3; val_offset:13950*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13950*FLEN/8, x4, x1, x2)

inst_6976:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff0fffff; 
   valaddr_reg:x3; val_offset:13952*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13952*FLEN/8, x4, x1, x2)

inst_6977:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff199999; 
   valaddr_reg:x3; val_offset:13954*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13954*FLEN/8, x4, x1, x2)

inst_6978:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff1fffff; 
   valaddr_reg:x3; val_offset:13956*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13956*FLEN/8, x4, x1, x2)

inst_6979:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff249249; 
   valaddr_reg:x3; val_offset:13958*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13958*FLEN/8, x4, x1, x2)

inst_6980:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff333333; 
   valaddr_reg:x3; val_offset:13960*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13960*FLEN/8, x4, x1, x2)

inst_6981:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff36db6d; 
   valaddr_reg:x3; val_offset:13962*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13962*FLEN/8, x4, x1, x2)

inst_6982:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff3bbbbb; 
   valaddr_reg:x3; val_offset:13964*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13964*FLEN/8, x4, x1, x2)

inst_6983:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff3fffff; 
   valaddr_reg:x3; val_offset:13966*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13966*FLEN/8, x4, x1, x2)

inst_6984:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff400000; 
   valaddr_reg:x3; val_offset:13968*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13968*FLEN/8, x4, x1, x2)

inst_6985:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff444444; 
   valaddr_reg:x3; val_offset:13970*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13970*FLEN/8, x4, x1, x2)

inst_6986:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff4ccccc; 
   valaddr_reg:x3; val_offset:13972*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13972*FLEN/8, x4, x1, x2)

inst_6987:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff5b6db6; 
   valaddr_reg:x3; val_offset:13974*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13974*FLEN/8, x4, x1, x2)

inst_6988:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff600000; 
   valaddr_reg:x3; val_offset:13976*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13976*FLEN/8, x4, x1, x2)

inst_6989:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff666666; 
   valaddr_reg:x3; val_offset:13978*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13978*FLEN/8, x4, x1, x2)

inst_6990:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff6db6db; 
   valaddr_reg:x3; val_offset:13980*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13980*FLEN/8, x4, x1, x2)

inst_6991:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff700000; 
   valaddr_reg:x3; val_offset:13982*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13982*FLEN/8, x4, x1, x2)

inst_6992:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff780000; 
   valaddr_reg:x3; val_offset:13984*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13984*FLEN/8, x4, x1, x2)

inst_6993:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff7c0000; 
   valaddr_reg:x3; val_offset:13986*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13986*FLEN/8, x4, x1, x2)

inst_6994:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff7e0000; 
   valaddr_reg:x3; val_offset:13988*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13988*FLEN/8, x4, x1, x2)

inst_6995:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff7f0000; 
   valaddr_reg:x3; val_offset:13990*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13990*FLEN/8, x4, x1, x2)

inst_6996:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff7f8000; 
   valaddr_reg:x3; val_offset:13992*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13992*FLEN/8, x4, x1, x2)

inst_6997:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff7fc000; 
   valaddr_reg:x3; val_offset:13994*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13994*FLEN/8, x4, x1, x2)

inst_6998:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff7fe000; 
   valaddr_reg:x3; val_offset:13996*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13996*FLEN/8, x4, x1, x2)

inst_6999:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff7ff000; 
   valaddr_reg:x3; val_offset:13998*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 13998*FLEN/8, x4, x1, x2)

inst_7000:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff7ff800; 
   valaddr_reg:x3; val_offset:14000*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 14000*FLEN/8, x4, x1, x2)

inst_7001:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff7ffc00; 
   valaddr_reg:x3; val_offset:14002*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 14002*FLEN/8, x4, x1, x2)

inst_7002:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff7ffe00; 
   valaddr_reg:x3; val_offset:14004*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 14004*FLEN/8, x4, x1, x2)

inst_7003:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff7fff00; 
   valaddr_reg:x3; val_offset:14006*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 14006*FLEN/8, x4, x1, x2)

inst_7004:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff7fff80; 
   valaddr_reg:x3; val_offset:14008*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 14008*FLEN/8, x4, x1, x2)

inst_7005:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff7fffc0; 
   valaddr_reg:x3; val_offset:14010*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 14010*FLEN/8, x4, x1, x2)

inst_7006:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff7fffe0; 
   valaddr_reg:x3; val_offset:14012*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 14012*FLEN/8, x4, x1, x2)

inst_7007:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff7ffff0; 
   valaddr_reg:x3; val_offset:14014*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 14014*FLEN/8, x4, x1, x2)

inst_7008:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff7ffff8; 
   valaddr_reg:x3; val_offset:14016*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 14016*FLEN/8, x4, x1, x2)

inst_7009:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff7ffffc; 
   valaddr_reg:x3; val_offset:14018*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 14018*FLEN/8, x4, x1, x2)

inst_7010:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff7ffffe; 
   valaddr_reg:x3; val_offset:14020*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 14020*FLEN/8, x4, x1, x2)

inst_7011:
// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0xff7fffff; op2val:0xff7fffff; 
   valaddr_reg:x3; val_offset:14022*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 14022*FLEN/8, x4, x1, x2)

inst_7012:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x0; 
   valaddr_reg:x3; val_offset:14024*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 14024*FLEN/8, x4, x1, x2)

inst_7013:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x3; 
   valaddr_reg:x3; val_offset:14026*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 14026*FLEN/8, x4, x1, x2)

inst_7014:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x7; 
   valaddr_reg:x3; val_offset:14028*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 14028*FLEN/8, x4, x1, x2)

inst_7015:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.s ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0xf; 
   valaddr_reg:x3; val_offset:14030*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2 
*/
TEST_FPRR_OP(fadd.s, f31, f30, f29, dyn, 0, 0, x3, 14030*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(31,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(63,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(127,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(255,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(511,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1023,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2047,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4095,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8191,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16383,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(32767,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(65535,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(131071,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(262143,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(524287,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1048575,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2097151,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4194303,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4194304,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6291456,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7340032,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7864320,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8126464,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8257536,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8323072,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8355840,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8372224,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8380416,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8384512,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8386560,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8387584,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388096,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388352,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388480,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388544,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388576,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388592,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388609,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388611,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388615,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388671,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388735,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388863,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8389119,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8389631,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8390655,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8392703,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8396799,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8404991,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8421375,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8454143,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8519679,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8650751,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8912895,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(9437183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10485759,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12582911,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12582912,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(14680064,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15728640,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16252928,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16515072,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16646144,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16711680,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16744448,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16760832,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16769024,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16773120,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16775168,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16776192,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16776704,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16776960,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777088,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777152,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777184,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777200,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777208,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777212,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777214,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777215,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777216,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777217,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777219,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777223,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777231,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777247,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777279,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777343,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777471,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777727,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16778239,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16779263,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16781311,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16785407,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16793599,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16809983,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16842751,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16908287,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(17039359,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(17301503,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(17825791,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(18874367,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(20971519,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(20971520,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(23068672,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(24117248,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(24641536,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(24903680,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25034752,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25100288,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25133056,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25149440,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25157632,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25161728,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25163776,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25164800,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165312,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165568,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165696,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165760,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165792,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165808,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165816,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165820,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165822,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165823,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165824,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165825,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165827,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165831,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165839,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165855,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165887,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165951,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25166079,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25166335,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25166847,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25167871,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25169919,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25174015,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25182207,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25198591,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25231359,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25296895,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25427967,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25690111,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(26214399,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(27262975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(29360127,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(29360128,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(31457280,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(32505856,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33030144,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33292288,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33423360,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33488896,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33521664,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33538048,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33546240,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33550336,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33552384,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33553408,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33553920,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554176,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554304,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554368,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554400,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554416,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554424,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554428,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554430,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554431,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845493760,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845493761,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845493763,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845493767,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845493775,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845493791,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845493823,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845493887,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845494015,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845494271,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845494783,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845495807,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845497855,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845501951,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845510143,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845526527,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845559295,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845624831,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845755903,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1846018047,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1846542335,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1847590911,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1849688063,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1849688064,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1851785216,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1852833792,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853358080,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853620224,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853751296,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853816832,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853849600,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853865984,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853874176,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853878272,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853880320,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853881344,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853881856,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853882112,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853882240,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853882304,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853882336,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853882352,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853882360,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853882364,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853882366,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853882367,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(15,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(31,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(63,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(127,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(255,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(511,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(1023,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2047,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(4095,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8191,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16383,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(32767,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(65535,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(131071,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(262143,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(524287,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(1048575,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2097151,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(4194303,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(4194304,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(6291456,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(7340032,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(7864320,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8126464,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8257536,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8323072,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8355840,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8372224,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8380416,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8384512,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8386560,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8387584,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388096,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388352,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388480,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388544,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388576,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388592,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388609,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388611,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388615,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388623,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388639,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388671,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388735,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388863,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8389119,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8389631,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8390655,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8392703,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8396799,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8404991,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8421375,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8454143,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8519679,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8650751,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8912895,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(9437183,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(10485759,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(12582911,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(12582912,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(14680064,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(15728640,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16252928,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16515072,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16646144,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16711680,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16744448,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16760832,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16769024,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16773120,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16775168,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16776192,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16776704,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16776960,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777088,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777152,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777184,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777200,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777208,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777212,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777214,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777215,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777216,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777217,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777219,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777223,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777231,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777247,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777279,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777343,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777471,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777727,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16778239,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16779263,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16781311,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16785407,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16793599,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16809983,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16842751,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16908287,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(17039359,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(17301503,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(17825791,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(18874367,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(20971519,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(20971520,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(23068672,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(24117248,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(24641536,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(24903680,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25034752,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25100288,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25133056,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25149440,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25157632,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25161728,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25163776,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25164800,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165312,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165568,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165696,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165760,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165792,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165808,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165816,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165820,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165822,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165823,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165824,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165825,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165827,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165831,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165839,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165855,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165887,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165951,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25166079,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25166335,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25166847,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25167871,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25169919,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25174015,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25182207,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25198591,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25231359,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25296895,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25427967,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25690111,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(26214399,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(27262975,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(29360127,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(29360128,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(31457280,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(32505856,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33030144,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33292288,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33423360,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33488896,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33521664,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33538048,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33546240,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33550336,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33552384,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33553408,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33553920,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33554176,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33554304,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33554368,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33554400,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33554416,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33554424,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33554428,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33554430,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33554431,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587202560,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587202561,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587202563,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587202567,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587202575,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587202591,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587202623,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587202687,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587202815,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587203071,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587203583,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587204607,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587206655,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587210751,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587218943,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587235327,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587268095,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587333631,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587464703,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587726847,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(588251135,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(589299711,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(591396863,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(591396864,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(593494016,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(594542592,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595066880,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595329024,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595460096,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595525632,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595558400,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595574784,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595582976,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595587072,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595589120,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595590144,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595590656,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595590912,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595591040,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595591104,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595591136,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595591152,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595591160,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595591164,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595591166,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595591167,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(15,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(15,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(15,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(31,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(31,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(31,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(31,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(63,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(63,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(63,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(63,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(127,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(127,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(127,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(127,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(255,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(255,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(255,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(255,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(511,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(511,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(511,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(511,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(1023,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1023,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(1023,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1023,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(2047,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2047,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2047,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(2047,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(4095,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4095,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(4095,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(4095,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8191,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8191,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8191,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8191,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16383,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16383,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16383,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16383,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(32767,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(32767,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(32767,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(32767,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(65535,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(65535,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(65535,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(65535,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(131071,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(131071,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(131071,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(131071,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(262143,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(262143,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(262143,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(262143,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(524287,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(524287,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(524287,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(524287,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(1048575,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1048575,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(1048575,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1048575,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(2097151,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2097151,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2097151,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(2097151,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(4194303,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4194303,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(4194303,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(4194303,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(4194304,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4194304,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(4194304,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(4194304,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(6291456,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6291456,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(6291456,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(6291456,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(7340032,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7340032,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(7340032,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(7340032,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(7864320,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7864320,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(7864320,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(7864320,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8126464,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8126464,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8126464,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8126464,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8257536,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8257536,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8257536,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8257536,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8323072,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8323072,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8323072,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8323072,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8355840,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8355840,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8355840,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8355840,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8372224,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8372224,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8372224,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8372224,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8380416,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8380416,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8380416,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8380416,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8384512,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8384512,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8384512,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8384512,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8386560,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8386560,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8386560,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8386560,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8387584,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8387584,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8387584,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8387584,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388096,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388096,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388096,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388096,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388352,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388352,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388352,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388352,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388480,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388480,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388480,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388480,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388544,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388544,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388544,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388544,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388576,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388576,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388576,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388576,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388592,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388592,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388592,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388592,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(15,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(31,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(63,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(127,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(255,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(511,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1023,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(2047,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(4095,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8191,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16383,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(32767,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(65535,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(131071,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(262143,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(524287,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1048575,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(2097151,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(4194303,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(4194304,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(6291456,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(7340032,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(7864320,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8126464,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8257536,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8323072,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8355840,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8372224,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8380416,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8384512,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8386560,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8387584,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388096,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388352,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388480,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388544,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388576,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388592,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388609,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388611,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388615,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388623,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388639,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388671,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388735,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388863,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8389119,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8389631,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8390655,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8392703,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8396799,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8404991,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8421375,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8454143,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8519679,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8650751,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8912895,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(9437183,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(10485759,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(12582911,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(12582912,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(14680064,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(15728640,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16252928,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16515072,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16646144,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16711680,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16744448,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16760832,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16769024,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16773120,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16775168,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16776192,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16776704,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16776960,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777088,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777152,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777184,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777200,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777208,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777212,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777214,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777215,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777216,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777217,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777219,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777223,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777231,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777247,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777279,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777343,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777471,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777727,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16778239,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16779263,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16781311,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16785407,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16793599,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16809983,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16842751,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16908287,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(17039359,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(17301503,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(17825791,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(18874367,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(20971519,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(20971520,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(23068672,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(24117248,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(24641536,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(24903680,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25034752,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25100288,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25133056,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25149440,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25157632,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25161728,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25163776,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25164800,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165312,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165568,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165696,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165760,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165792,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165808,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165816,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165820,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165822,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165823,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165824,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165825,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165827,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165831,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165839,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165855,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165887,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165951,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25166079,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25166335,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25166847,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25167871,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25169919,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25174015,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25182207,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25198591,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25231359,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25296895,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25427967,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25690111,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(26214399,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(27262975,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(29360127,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(29360128,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(31457280,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(32505856,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33030144,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33292288,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33423360,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33488896,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33521664,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33538048,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33546240,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33550336,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33552384,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33553408,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33553920,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33554176,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33554304,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33554368,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33554400,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33554416,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33554424,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33554428,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33554430,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33554431,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124073472,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124073473,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124073475,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124073479,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124073487,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124073503,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124073535,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124073599,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124073727,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124073983,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124074495,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124075519,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124077567,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124081663,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124089855,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124106239,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124139007,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124204543,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124335615,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124597759,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1125122047,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1126170623,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1128267775,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1128267776,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1130364928,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1131413504,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1131937792,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132199936,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132331008,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132396544,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132429312,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132445696,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132453888,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132457984,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132460032,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132461056,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132461568,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132461824,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132461952,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132462016,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132462048,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132462064,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132462072,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132462076,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132462078,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132462079,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(15,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(31,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(63,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(127,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(255,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(511,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(1023,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(2047,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(4095,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8191,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16383,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(32767,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(65535,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(131071,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(262143,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(524287,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(1048575,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(2097151,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(4194303,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(4194304,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(6291456,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(7340032,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(7864320,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8126464,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8257536,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8323072,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8355840,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8372224,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8380416,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8384512,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8386560,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8387584,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388096,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388352,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388480,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388544,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388576,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388592,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388609,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388611,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388615,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388623,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388639,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388671,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388735,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388863,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8389119,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8389631,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8390655,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8392703,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8396799,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8404991,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8421375,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8454143,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8519679,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8650751,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8912895,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(9437183,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(10066329,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(10485759,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(10785353,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(11744051,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(11983725,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(12303291,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(12582911,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(12582912,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(12862532,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(13421772,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(14380470,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(14680064,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(15099494,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(15578843,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(15728640,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16252928,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16515072,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16646144,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16711680,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16744448,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16760832,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16769024,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16773120,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16775168,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16776192,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16776704,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16776960,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777088,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777152,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777184,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777200,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777208,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777212,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777214,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777215,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777216,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777217,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777219,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777223,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777231,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777247,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777279,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777343,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777471,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777727,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16778239,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16779263,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16781311,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16785407,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16793599,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16809983,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16842751,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16908287,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(17039359,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(17301503,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(17825791,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(18874367,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(20971519,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(20971520,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(23068672,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(24117248,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(24641536,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(24903680,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25034752,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25100288,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25133056,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25149440,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25157632,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25161728,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25163776,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25164800,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165312,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165568,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165696,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165760,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165792,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165808,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165816,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165820,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165822,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165823,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165824,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165825,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165827,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165831,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165839,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165855,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165887,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165951,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25166079,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25166335,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25166847,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25167871,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25169919,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25174015,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25182207,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25198591,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25231359,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25296895,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25427967,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25690111,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(26214399,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(27262975,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(29360127,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(29360128,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(31457280,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(32505856,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33030144,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33292288,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33423360,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33488896,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33521664,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33538048,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33546240,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33550336,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33552384,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33553408,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33553920,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554176,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554304,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554368,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554400,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554416,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554424,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554428,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554430,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554431,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554432,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554433,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554435,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554439,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554447,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554463,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554495,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554559,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554687,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554943,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33555455,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33556479,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33558527,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33562623,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33570815,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33587199,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33619967,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33685503,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33816575,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(34078719,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(34603007,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(35651583,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(37748735,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(37748736,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(39845888,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(40894464,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41418752,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41680896,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41811968,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41877504,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41910272,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41926656,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41934848,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41938944,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41940992,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41942016,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41942528,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41942784,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41942912,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41942976,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41943008,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41943024,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41943032,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41943036,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41943038,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41943039,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(905969664,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(905969665,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(905969667,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(905969671,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(905969679,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(905969695,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(905969727,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(905969791,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(905969919,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(905970175,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(905970687,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(905971711,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(905973759,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(905977855,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(905986047,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(906002431,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(906035199,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(906100735,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(906231807,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(906493951,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(907018239,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(908066815,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(910163967,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(910163968,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(912261120,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(913309696,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(913833984,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914096128,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914227200,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914292736,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914325504,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914341888,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914350080,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914354176,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914356224,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914357248,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914357760,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914358016,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914358144,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914358208,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914358240,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914358256,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914358264,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914358268,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914358270,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914358271,32,FLEN)
NAN_BOXED(8388609,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388609,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388609,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388609,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388611,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388611,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388611,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388611,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388615,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388615,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388615,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388615,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388623,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388623,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388623,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388639,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388639,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388639,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388671,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388671,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388671,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388671,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388735,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388735,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388735,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388735,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8388863,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388863,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8388863,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8388863,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8389119,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8389119,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8389119,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8389119,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8389631,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8389631,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8389631,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8389631,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8390655,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8390655,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8390655,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8390655,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8392703,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8392703,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8392703,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8392703,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8396799,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8396799,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8396799,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8396799,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8404991,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8404991,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8404991,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8404991,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8421375,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8421375,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8421375,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8421375,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8454143,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8454143,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8454143,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8454143,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8519679,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8519679,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8519679,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8519679,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8650751,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8650751,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8650751,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8650751,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(8912895,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8912895,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(8912895,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(8912895,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(9437183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(9437183,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(9437183,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(9437183,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(10066329,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(10485759,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10485759,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(10485759,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(10485759,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(10785353,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(11744051,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(11983725,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(12303291,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(12582911,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12582911,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(12582911,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(12582911,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(12582912,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12582912,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(12582912,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(12582912,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(12862532,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(13421772,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(14380470,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(14680064,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(14680064,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(14680064,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(14680064,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(15099494,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(15578843,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(15728640,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15728640,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(15728640,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(15728640,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16252928,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16252928,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16252928,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16252928,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16515072,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16515072,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16515072,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16515072,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16646144,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16646144,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16646144,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16646144,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16711680,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16711680,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16711680,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16711680,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16744448,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16744448,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16744448,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16744448,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16760832,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16760832,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16760832,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16760832,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16769024,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16769024,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16769024,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16769024,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16773120,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16773120,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16773120,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16773120,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16775168,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16775168,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16775168,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16775168,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16776192,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16776192,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16776192,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16776192,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16776704,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16776704,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16776704,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16776704,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16776960,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16776960,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16776960,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16776960,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777088,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777088,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777088,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777088,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777152,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777152,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777152,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777152,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777184,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777184,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777184,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777184,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777200,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777200,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777200,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777200,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777208,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777208,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777208,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777208,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777212,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777212,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777212,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777212,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777214,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777214,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777214,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777214,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777215,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777215,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777215,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777215,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777216,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777216,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777216,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777216,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777217,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777217,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777217,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777217,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777219,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777219,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777219,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777219,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777223,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777223,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777223,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777223,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777231,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777231,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777231,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777231,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777247,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777247,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777247,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777247,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777279,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777279,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777279,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777279,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777343,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777343,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777343,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777343,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777471,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777471,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777471,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777471,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16777727,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777727,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16777727,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16777727,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16778239,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16778239,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16778239,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16778239,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16779263,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16779263,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16779263,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16779263,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16781311,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16781311,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16781311,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16781311,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16785407,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16785407,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16785407,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16785407,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16793599,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16793599,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16793599,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16793599,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16809983,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16809983,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16809983,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16809983,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16842751,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16842751,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16842751,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16842751,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(16908287,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16908287,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(16908287,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(16908287,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(17039359,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(17039359,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(17039359,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(17039359,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(17301503,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(17301503,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(17301503,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(17301503,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(17825791,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(17825791,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(17825791,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(17825791,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(18874367,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(18874367,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(18874367,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(18874367,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(20971519,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(20971519,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(20971519,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(20971519,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(20971520,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(20971520,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(20971520,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(20971520,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(23068672,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(23068672,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(23068672,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(23068672,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(24117248,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(24117248,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(24117248,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(24117248,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(24641536,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(24641536,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(24641536,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(24641536,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(24903680,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(24903680,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(24903680,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(24903680,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25034752,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25034752,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25034752,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25034752,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25100288,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25100288,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25100288,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25100288,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25133056,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25133056,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25133056,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25133056,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25149440,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25149440,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25149440,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25149440,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25157632,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25157632,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25157632,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25157632,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25161728,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25161728,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25161728,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25161728,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25163776,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25163776,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25163776,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25163776,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25164800,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25164800,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25164800,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25164800,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165312,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165312,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165312,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165312,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165568,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165568,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165568,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165568,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165696,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165696,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165696,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165696,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165760,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165760,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165760,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165760,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165792,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165792,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165792,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165792,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165808,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165808,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165808,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165808,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165816,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165816,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165816,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165816,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165820,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165820,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165820,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165820,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165822,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165822,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165822,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165822,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165823,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165823,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165823,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165823,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165824,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165824,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165824,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165824,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165825,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165825,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165825,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165825,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165827,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165827,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165827,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165827,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165831,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165831,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165831,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165831,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165839,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165839,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165839,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165839,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165855,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165855,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165855,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165855,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165887,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165887,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165887,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165887,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25165951,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165951,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25165951,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25165951,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25166079,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25166079,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25166079,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25166079,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25166335,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25166335,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25166335,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25166335,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25166847,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25166847,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25166847,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25166847,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25167871,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25167871,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25167871,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25167871,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25169919,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25169919,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25169919,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25169919,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25174015,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25174015,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25174015,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25174015,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25182207,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25182207,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25182207,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25182207,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25198591,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25198591,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25198591,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25198591,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25231359,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25231359,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25231359,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25231359,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25296895,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25296895,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25296895,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25296895,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25427967,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25427967,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25427967,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25427967,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(25690111,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25690111,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(25690111,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(25690111,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(26214399,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(26214399,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(26214399,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(26214399,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(27262975,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(27262975,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(27262975,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(27262975,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(29360127,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(29360127,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(29360127,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(29360127,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(29360128,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(29360128,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(29360128,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(29360128,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(31457280,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(31457280,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(31457280,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(31457280,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(32505856,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(32505856,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(32505856,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(32505856,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33030144,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33030144,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33030144,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33030144,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33292288,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33292288,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33292288,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33292288,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33423360,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33423360,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33423360,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33423360,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33488896,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33488896,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33488896,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33488896,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33521664,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33521664,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33521664,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33521664,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33538048,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33538048,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33538048,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33538048,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33546240,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33546240,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33546240,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33546240,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33550336,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33550336,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33550336,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33550336,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33552384,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33552384,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33552384,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33552384,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33553408,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33553408,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33553408,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33553408,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33553920,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33553920,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33553920,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33553920,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554176,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554176,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33554176,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33554176,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554304,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554304,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33554304,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33554304,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554368,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554368,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33554368,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33554368,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554400,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554400,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33554400,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33554400,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554416,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554416,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33554416,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33554416,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554424,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554424,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33554424,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33554424,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554428,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554428,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33554428,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33554428,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554430,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554430,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33554430,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33554430,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554431,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554431,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(33554431,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(33554431,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554432,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554433,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554435,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554439,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554447,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554463,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554495,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554559,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554687,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33554943,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33555455,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33556479,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33558527,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33562623,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33570815,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33587199,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33619967,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33685503,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(33816575,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(34078719,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(34603007,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(35651583,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(37748735,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(37748736,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(39845888,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(40894464,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41418752,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41680896,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41811968,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41877504,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41910272,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41926656,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41934848,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41938944,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41940992,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41942016,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41942528,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41942784,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41942912,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41942976,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41943008,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41943024,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41943032,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41943036,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41943038,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(41943039,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(587202560,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587202561,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587202563,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587202567,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587202575,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587202591,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587202623,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587202687,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587202815,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587203071,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587203583,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587204607,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587206655,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587210751,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587218943,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587235327,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587268095,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587333631,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587464703,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(587726847,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(588251135,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(589299711,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(591396863,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(591396864,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(593494016,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(594542592,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595066880,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595329024,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595460096,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595525632,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595558400,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595574784,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595582976,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595587072,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595589120,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595590144,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595590656,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595590912,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595591040,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595591104,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595591136,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595591152,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595591160,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595591164,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595591166,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(595591167,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(813694976,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813694977,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813694979,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813694983,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813694991,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813695007,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813695039,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813695103,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813695231,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813695487,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813695999,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813697023,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813699071,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813703167,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813711359,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813727743,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813760511,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813826047,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813957119,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(814219263,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(814743551,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(815792127,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(817889279,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(817889280,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(819986432,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(821035008,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(821559296,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(821821440,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(821952512,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(822018048,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(822050816,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(822067200,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(822075392,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(822079488,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(822081536,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(822082560,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(822083072,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(822083328,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(822083456,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(822083520,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(822083552,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(822083568,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(822083576,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(822083580,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(822083582,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(822083583,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(905969664,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(905969665,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(905969667,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(905969671,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(905969679,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(905969695,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(905969727,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(905969791,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(905969919,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(905970175,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(905970687,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(905971711,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(905973759,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(905977855,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(905986047,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(906002431,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(906035199,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(906100735,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(906231807,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(906493951,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(907018239,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(908066815,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(910163967,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(910163968,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(912261120,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(913309696,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(913833984,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914096128,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914227200,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914292736,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914325504,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914341888,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914350080,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914354176,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914356224,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914357248,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914357760,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914358016,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914358144,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914358208,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914358240,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914358256,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914358264,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914358268,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914358270,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(914358271,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(1031798784,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031798785,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031798787,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031798791,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031798799,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031798815,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031798847,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031798911,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031799039,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031799295,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031799807,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031800831,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031802879,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031806975,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031815167,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031831551,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031864319,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031929855,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1032060927,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1032323071,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1032847359,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1033895935,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1035993087,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1035993088,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1038090240,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1039138816,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1039663104,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1039925248,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040056320,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040121856,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040154624,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040171008,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040179200,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040183296,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040185344,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040186368,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040186880,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187136,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187264,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187328,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187360,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187376,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187384,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187388,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187390,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187391,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187392,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187393,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187395,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187399,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187407,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187423,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187455,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187519,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187647,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187903,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040188415,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040189439,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040191487,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040195583,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040203775,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040220159,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040252927,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040318463,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040449535,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040711679,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1041235967,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1042284543,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1044381695,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1044381696,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1046478848,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1047527424,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048051712,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048313856,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048444928,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048510464,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048543232,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048559616,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048567808,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048571904,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048573952,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048574976,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048575488,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048575744,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048575872,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048575936,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048575968,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048575984,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048575992,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048575996,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048575998,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048575999,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048576000,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048576001,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048576003,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048576007,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048576015,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048576031,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048576063,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048576127,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048576255,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048576511,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048577023,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048578047,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048580095,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048584191,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048592383,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048608767,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048641535,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048707071,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048838143,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1049100287,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1049624575,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1050673151,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1052770303,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1052770304,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1054867456,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1055916032,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056440320,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056702464,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056833536,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056899072,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056931840,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056948224,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056956416,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056960512,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056962560,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056963584,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964096,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964352,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964480,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964544,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964576,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964592,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964600,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964604,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964606,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964607,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964608,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964609,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964611,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964615,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964623,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964639,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964671,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964735,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964863,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056965119,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056965631,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056966655,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056968703,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056972799,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056980991,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056997375,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1057030143,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1057095679,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1057226751,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1057488895,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1058013183,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1059061759,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1061158911,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1061158912,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1063256064,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1064304640,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1064828928,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065091072,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065222144,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065287680,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065320448,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065336832,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065345024,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065349120,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065351168,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065352192,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065352704,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065352960,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353088,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353152,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353184,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353200,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353208,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353212,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353214,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353215,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813694976,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813694977,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813694979,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813694983,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813694991,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813695007,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813695039,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813695103,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813695231,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813695487,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813695999,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813697023,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813699071,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813703167,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813711359,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813727743,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813760511,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813826047,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(813957119,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(814219263,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(814743551,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(815792127,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(817889279,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(817889280,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(819986432,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(821035008,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(821559296,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(821821440,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(821952512,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(822018048,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(822050816,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(822067200,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(822075392,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(822079488,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(822081536,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(822082560,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(822083072,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(822083328,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(822083456,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(822083520,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(822083552,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(822083568,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(822083576,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(822083580,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(822083582,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(822083583,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031798784,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031798785,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031798787,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031798791,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031798799,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031798815,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031798847,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031798911,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031799039,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031799295,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031799807,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031800831,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031802879,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031806975,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031815167,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031831551,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031864319,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1031929855,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1032060927,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1032323071,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1032847359,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1033895935,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1035993087,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1035993088,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1038090240,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1039138816,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1039663104,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1039925248,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040056320,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040121856,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040154624,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040171008,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040179200,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040183296,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040185344,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040186368,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040186880,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187136,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187264,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187328,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187360,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187376,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187384,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187388,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187390,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187391,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187392,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187393,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187395,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187399,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187407,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187423,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187455,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187519,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187647,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040187903,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040188415,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040189439,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040191487,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040195583,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040203775,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040220159,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040252927,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040318463,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040449535,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1040711679,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1041235967,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1042284543,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1044381695,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1044381696,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1046478848,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1047527424,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048051712,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048313856,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048444928,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048510464,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048543232,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048559616,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048567808,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048571904,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048573952,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048574976,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048575488,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048575744,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048575872,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048575936,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048575968,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048575984,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048575992,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048575996,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048575998,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048575999,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048576000,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048576001,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048576003,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048576007,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048576015,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048576031,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048576063,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048576127,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048576255,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048576511,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048577023,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048578047,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048580095,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048584191,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048592383,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048608767,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048641535,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048707071,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1048838143,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1049100287,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1049624575,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1050673151,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1052770303,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1052770304,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1054867456,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1055916032,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056440320,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056702464,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056833536,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056899072,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056931840,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056948224,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056956416,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056960512,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056962560,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056963584,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964096,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964352,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964480,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964544,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964576,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964592,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964600,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964604,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964606,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964607,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964608,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964609,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964611,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964615,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964623,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964639,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964671,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964735,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056964863,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056965119,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056965631,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056966655,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056968703,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056972799,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056980991,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1056997375,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1057030143,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1057095679,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1057226751,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1057488895,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1058013183,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1059061759,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1061158911,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1061158912,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1063256064,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1064304640,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1064828928,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065091072,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065222144,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065287680,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065320448,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065336832,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065345024,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065349120,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065351168,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065352192,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065352704,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065352960,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353088,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353152,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353184,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353200,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353208,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353212,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353214,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353215,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353231,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353247,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353279,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353343,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353471,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353727,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065354239,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065355263,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065357311,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065361407,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065369599,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065385983,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065418751,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065484287,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065615359,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065877503,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1066401791,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1067450367,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1069547519,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1069547520,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1071644672,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1072693248,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073217536,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073479680,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073610752,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073676288,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073709056,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073725440,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073733632,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073737728,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073739776,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073740800,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741312,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741568,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741696,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741760,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741792,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741808,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741823,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741824,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741825,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741827,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741831,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741839,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741855,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741887,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741951,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073742079,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073742335,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073742847,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073743871,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073745919,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073750015,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073758207,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073774591,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073807359,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073872895,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1074003967,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1074266111,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1074790399,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1075838975,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1077936127,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1077936128,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1080033280,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1081081856,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1081606144,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1081868288,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1081999360,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082064896,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082097664,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082114048,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082122240,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082126336,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082128384,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082129408,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082129920,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130176,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130304,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130368,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130400,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130416,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130424,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130428,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130430,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130431,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130432,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130433,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130435,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130439,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130447,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130463,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130495,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130559,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130687,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130943,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082131455,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082132479,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082134527,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082138623,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082146815,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082163199,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082195967,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082261503,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082392575,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082654719,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1083179007,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1084227583,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1086324735,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1086324736,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1088421888,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1089470464,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1089994752,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090256896,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090387968,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090453504,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090486272,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090502656,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090510848,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090514944,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090516992,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090518016,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090518528,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090518784,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090518912,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090518976,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090519008,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090519024,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090519032,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090519036,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090519038,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090519039,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090519040,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090519041,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090519043,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090519047,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090519055,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090519071,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090519103,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090519167,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090519295,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090519551,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090520063,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090521087,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090523135,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090527231,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090535423,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090551807,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090584575,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090650111,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090781183,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1091043327,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1091567615,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1092616191,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1094713343,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1094713344,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1096810496,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1097859072,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098383360,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098645504,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098776576,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098842112,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098874880,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098891264,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098899456,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098903552,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098905600,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098906624,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098907136,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098907392,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098907520,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098907584,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098907616,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098907632,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098907640,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098907644,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098907646,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098907647,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046820352,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046820353,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046820355,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046820359,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046820367,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046820383,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046820415,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046820479,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046820607,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046820863,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046821375,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046822399,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046824447,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046828543,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046836735,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046853119,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046885887,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046951423,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2047082495,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2047344639,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2047868927,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2048917503,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2051014655,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2051014656,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2053111808,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2054160384,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2054684672,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2054946816,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055077888,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055143424,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055176192,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055192576,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055200768,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055204864,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055206912,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055207936,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055208448,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055208704,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055208832,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055208896,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055208928,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055208944,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055208952,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055208956,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055208958,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055208959,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353231,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353247,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353279,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353343,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353471,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065353727,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065354239,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065355263,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065357311,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065361407,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065369599,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065385983,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065418751,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065484287,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065615359,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1065877503,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1066401791,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1067450367,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1069547519,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1069547520,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1071644672,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1072693248,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073217536,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073479680,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073610752,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073676288,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073709056,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073725440,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073733632,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073737728,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073739776,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073740800,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741312,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741568,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741696,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741760,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741792,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741808,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741823,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741824,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741825,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741827,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741831,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741839,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741855,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741887,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073741951,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073742079,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073742335,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073742847,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073743871,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073745919,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073750015,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073758207,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073774591,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073807359,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1073872895,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1074003967,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1074266111,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1074790399,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1075838975,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1077936127,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1077936128,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1080033280,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1081081856,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1081606144,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1081868288,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1081999360,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082064896,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082097664,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082114048,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082122240,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082126336,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082128384,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082129408,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082129920,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130176,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130304,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130368,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130400,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130416,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130424,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130428,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130430,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130431,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130432,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130433,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130435,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130439,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130447,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130463,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130495,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130559,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130687,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082130943,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082131455,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082132479,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082134527,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082138623,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082146815,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082163199,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082195967,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082261503,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082392575,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1082654719,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1083179007,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1084227583,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1086324735,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1086324736,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1088421888,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1089470464,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1089994752,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090256896,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090387968,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090453504,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090486272,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090502656,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090510848,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090514944,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090516992,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090518016,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090518528,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090518784,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090518912,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090518976,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090519008,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090519024,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090519032,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090519036,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090519038,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090519039,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090519040,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090519041,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090519043,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090519047,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090519055,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090519071,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090519103,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090519167,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090519295,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090519551,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090520063,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090521087,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090523135,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090527231,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090535423,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090551807,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090584575,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090650111,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1090781183,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1091043327,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1091567615,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1092616191,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1094713343,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1094713344,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1096810496,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1097859072,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098383360,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098645504,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098776576,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098842112,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098874880,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098891264,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098899456,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098903552,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098905600,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098906624,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098907136,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098907392,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098907520,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098907584,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098907616,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098907632,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098907640,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098907644,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098907646,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1098907647,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1124073472,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124073473,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124073475,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124073479,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124073487,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124073503,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124073535,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124073599,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124073727,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124073983,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124074495,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124075519,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124077567,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124081663,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124089855,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124106239,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124139007,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124204543,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124335615,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1124597759,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1125122047,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1126170623,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1128267775,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1128267776,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1130364928,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1131413504,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1131937792,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132199936,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132331008,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132396544,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132429312,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132445696,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132453888,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132457984,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132460032,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132461056,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132461568,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132461824,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132461952,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132462016,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132462048,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132462064,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132462072,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132462076,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132462078,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1132462079,32,FLEN)
NAN_BOXED(8388607,32,FLEN)
NAN_BOXED(1677721600,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677721601,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677721603,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677721607,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677721615,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677721631,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677721663,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677721727,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677721855,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677722111,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677722623,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677723647,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677725695,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677729791,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677737983,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677754367,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677787135,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677852671,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677983743,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1678245887,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1678770175,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1679818751,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1681915903,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1681915904,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1684013056,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1685061632,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1685585920,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1685848064,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1685979136,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1686044672,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1686077440,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1686093824,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1686102016,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1686106112,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1686108160,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1686109184,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1686109696,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1686109952,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1686110080,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1686110144,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1686110176,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1686110192,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1686110200,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1686110204,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1686110206,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1686110207,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1845493760,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845493761,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845493763,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845493767,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845493775,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845493791,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845493823,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845493887,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845494015,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845494271,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845494783,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845495807,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845497855,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845501951,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845510143,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845526527,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845559295,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845624831,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1845755903,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1846018047,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1846542335,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1847590911,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1849688063,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1849688064,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1851785216,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1852833792,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853358080,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853620224,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853751296,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853816832,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853849600,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853865984,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853874176,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853878272,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853880320,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853881344,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853881856,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853882112,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853882240,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853882304,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853882336,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853882352,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853882360,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853882364,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853882366,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1853882367,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2046820352,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046820353,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046820355,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046820359,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046820367,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046820383,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046820415,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046820479,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046820607,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046820863,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046821375,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046822399,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046824447,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046828543,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046836735,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046853119,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046885887,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2046951423,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2047082495,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2047344639,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2047868927,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2048917503,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2051014655,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2051014656,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2053111808,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2054160384,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2054684672,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2054946816,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055077888,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055143424,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055176192,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055192576,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055200768,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055204864,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055206912,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055207936,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055208448,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055208704,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055208832,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055208896,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055208928,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055208944,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055208952,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055208956,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055208958,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2055208959,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2097152000,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097152001,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097152003,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097152007,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097152015,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097152031,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097152063,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097152127,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097152255,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097152511,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097153023,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097154047,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097156095,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097160191,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097168383,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097184767,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097217535,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097283071,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097414143,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097676287,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2098200575,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2099249151,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2101346303,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2101346304,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2103443456,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2104492032,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105016320,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105278464,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105409536,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105475072,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105507840,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105524224,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105532416,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105536512,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105538560,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105539584,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540096,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540352,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540480,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540544,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540576,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540592,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540600,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540604,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540606,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540607,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540608,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540609,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540611,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540615,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540623,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540639,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540671,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540735,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540863,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105541119,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105541631,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105542655,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105544703,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105548799,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105556991,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105573375,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105606143,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105671679,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105802751,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2106064895,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2106589183,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2107637759,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2109734911,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2109734912,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2111832064,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2112880640,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113404928,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113667072,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113798144,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113863680,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113896448,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113912832,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113921024,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113925120,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113927168,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113928192,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113928704,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113928960,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929088,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929152,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929184,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929200,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929208,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929212,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929214,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929215,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929216,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929217,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929219,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929223,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929231,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929247,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929279,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929343,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929471,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929727,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113930239,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113931263,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113933311,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113937407,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113945599,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113961983,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113994751,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2114060287,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2114191359,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2114453503,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2114977791,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2116026367,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2118123519,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2118123520,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2120220672,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2121269248,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2121793536,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122055680,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122186752,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122252288,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122285056,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122301440,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122309632,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122313728,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122315776,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122316800,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317312,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317568,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317696,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317760,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317792,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317808,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317816,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317820,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317822,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317823,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317824,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317825,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317827,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317831,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317839,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317855,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317887,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317951,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122318079,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122318335,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122318847,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122319871,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122321919,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122326015,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122334207,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122350591,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122383359,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122448895,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122579967,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122842111,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2123366399,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2124414975,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2126512127,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2126512128,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2128609280,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2129657856,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130182144,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130444288,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130575360,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130640896,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130673664,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130690048,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130698240,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130702336,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130704384,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130705408,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130705920,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706176,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706304,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706368,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706400,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706416,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706424,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706428,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706430,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706431,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706432,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706447,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706463,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706495,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706559,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706687,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706943,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130707455,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130708479,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130710527,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130714623,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130722815,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130739199,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130771967,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130837503,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130968575,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2131230719,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2131755007,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2132803583,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2134900735,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2134900736,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2136997888,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2138046464,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2138570752,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2138832896,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2138963968,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2139029504,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2139062272,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2139078656,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2139086848,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2139090944,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2139092992,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2139094016,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2139094528,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2139094784,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2139094912,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2139094976,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2139095008,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2139095024,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677721600,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677721601,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677721603,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677721607,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677721615,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677721631,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677721663,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677721727,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677721855,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677722111,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677722623,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677723647,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677725695,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677729791,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677737983,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677754367,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677787135,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677852671,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1677983743,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1678245887,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1678770175,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1679818751,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1681915903,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1681915904,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1684013056,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1685061632,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1685585920,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1685848064,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1685979136,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1686044672,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1686077440,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1686093824,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1686102016,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1686106112,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1686108160,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1686109184,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1686109696,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1686109952,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1686110080,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1686110144,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1686110176,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1686110192,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1686110200,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1686110204,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1686110206,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(1686110207,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097152000,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097152001,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097152003,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097152007,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097152015,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097152031,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097152063,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097152127,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097152255,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097152511,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097153023,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097154047,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097156095,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097160191,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097168383,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097184767,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097217535,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097283071,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097414143,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2097676287,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2098200575,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2099249151,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2101346303,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2101346304,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2103443456,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2104492032,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105016320,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105278464,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105409536,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105475072,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105507840,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105524224,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105532416,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105536512,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105538560,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105539584,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540096,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540352,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540480,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540544,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540576,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540592,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540600,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540604,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540606,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540607,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540608,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540609,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540611,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540615,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540623,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540639,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540671,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540735,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105540863,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105541119,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105541631,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105542655,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105544703,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105548799,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105556991,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105573375,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105606143,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105671679,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105802751,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2106064895,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2106589183,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2107637759,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2109734911,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2109734912,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2111832064,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2112880640,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113404928,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113667072,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113798144,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113863680,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113896448,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113912832,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113921024,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113925120,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113927168,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113928192,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113928704,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113928960,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929088,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929152,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929184,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929200,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929208,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929212,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929214,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929215,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929216,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929217,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929219,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929223,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929231,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929247,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929279,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929343,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929471,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113929727,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113930239,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113931263,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113933311,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113937407,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113945599,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113961983,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113994751,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2114060287,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2114191359,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2114453503,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2114977791,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2116026367,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2118123519,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2118123520,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2120220672,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2121269248,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2121793536,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122055680,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122186752,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122252288,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122285056,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122301440,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122309632,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122313728,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122315776,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122316800,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317312,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317568,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317696,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317760,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317792,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317808,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317816,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317820,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317822,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317823,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317824,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317825,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317827,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317831,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317839,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317855,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317887,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122317951,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122318079,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122318335,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122318847,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122319871,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122321919,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122326015,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122334207,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122350591,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122383359,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122448895,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122579967,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122842111,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2123366399,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2124414975,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2126512127,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2126512128,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2128609280,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2129657856,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130182144,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130444288,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130575360,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130640896,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130673664,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130690048,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130698240,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130702336,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130704384,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130705408,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130705920,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706176,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706304,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706368,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706400,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706416,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706424,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706428,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706430,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706431,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706432,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706447,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706463,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706495,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706559,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706687,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130706943,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130707455,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130708479,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130710527,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130714623,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130722815,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130739199,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130771967,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130837503,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2130968575,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2131230719,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2131755007,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2132803583,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2134900735,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2134900736,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2136997888,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2138046464,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2138570752,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2138832896,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2138963968,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2139029504,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2139062272,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2139078656,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2139086848,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2139090944,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2139092992,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2139094016,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2139094528,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2139094784,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2139094912,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2139094976,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2139095008,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2139095024,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483663,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483679,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483711,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483775,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483903,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147484159,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147484671,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147485695,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147487743,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147491839,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147500031,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147516415,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147549183,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147614719,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147745791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2148007935,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2148532223,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149580799,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151677951,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151677952,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153775104,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154823680,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155347968,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155610112,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155741184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155806720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155839488,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155855872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155864064,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155868160,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155870208,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155871232,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155871744,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872000,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872128,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872192,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872224,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872240,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872271,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872319,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872383,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872511,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872767,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155873279,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155874303,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155876351,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155880447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155888639,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155905023,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155937791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2156003327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2156134399,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2156396543,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2156920831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157969407,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160066559,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160066560,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162163712,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163212288,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163736576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163998720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164129792,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164195328,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164228096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164244480,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164252672,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164256768,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164258816,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164259840,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260352,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260608,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260736,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260800,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260832,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260848,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260863,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260864,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260865,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260867,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260871,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260879,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260895,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260927,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260991,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164261119,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164261375,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164261887,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164262911,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164264959,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164269055,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164277247,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164293631,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164326399,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164391935,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164523007,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164785151,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2165309439,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2166358015,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2168455167,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2168455168,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2170552320,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2171600896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172125184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172387328,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172518400,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172583936,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172616704,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172633088,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172641280,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172645376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172647424,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172648448,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172648960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649216,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649344,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649408,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649440,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649456,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649464,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649468,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649470,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649471,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649472,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649473,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649475,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649479,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649487,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649503,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649535,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649599,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649727,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649983,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172650495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172651519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172653567,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172657663,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172665855,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172682239,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172715007,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172780543,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172911615,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2173173759,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2173698047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2174746623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2176843775,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2176843776,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2178940928,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2179989504,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2180513792,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2180775936,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2180907008,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2180972544,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181005312,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181021696,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181029888,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181033984,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181036032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181037056,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181037568,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181037824,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181037952,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038048,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038064,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038072,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038076,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038079,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003121664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003121665,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003121667,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003121671,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003121679,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003121695,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003121727,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003121791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003121919,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003122175,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003122687,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003123711,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003125759,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003129855,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003138047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003154431,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003187199,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003252735,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003383807,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003645951,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3004170239,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3005218815,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3007315967,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3007315968,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3009413120,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3010461696,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3010985984,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011248128,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011379200,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011444736,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011477504,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011493888,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011502080,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011506176,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011508224,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011509248,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011509760,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011510016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011510144,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011510208,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011510240,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011510256,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011510264,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011510268,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011510270,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011510271,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147483663,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147483679,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147483711,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147483775,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147483903,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147484159,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147484671,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147485695,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147487743,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147491839,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147500031,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147516415,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147549183,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147614719,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147745791,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2148007935,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2148532223,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2149580799,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2151677951,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2151677952,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2153775104,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2154823680,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155347968,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155610112,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155741184,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155806720,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155839488,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155855872,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155864064,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155868160,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155870208,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155871232,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155871744,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872000,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872128,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872192,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872224,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872240,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872271,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872287,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872319,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872383,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872511,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872767,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155873279,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155874303,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155876351,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155880447,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155888639,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155905023,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155937791,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2156003327,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2156134399,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2156396543,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2156920831,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2157969407,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2160066559,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2160066560,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2162163712,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2163212288,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2163736576,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2163998720,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164129792,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164195328,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164228096,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164244480,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164252672,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164256768,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164258816,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164259840,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260352,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260608,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260736,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260800,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260832,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260848,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260863,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260864,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260865,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260867,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260871,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260879,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260895,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260927,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260991,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164261119,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164261375,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164261887,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164262911,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164264959,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164269055,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164277247,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164293631,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164326399,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164391935,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164523007,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164785151,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2165309439,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2166358015,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2168455167,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2168455168,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2170552320,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2171600896,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172125184,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172387328,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172518400,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172583936,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172616704,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172633088,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172641280,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172645376,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172647424,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172648448,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172648960,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649216,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649344,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649408,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649440,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649456,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649464,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649468,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649470,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649471,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649472,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649473,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649475,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649479,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649487,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649503,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649535,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649599,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649727,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649983,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172650495,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172651519,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172653567,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172657663,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172665855,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172682239,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172715007,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172780543,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172911615,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2173173759,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2173698047,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2174746623,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2176843775,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2176843776,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2178940928,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2179989504,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2180513792,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2180775936,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2180907008,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2180972544,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2181005312,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2181021696,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2181029888,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2181033984,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2181036032,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2181037056,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2181037568,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2181037824,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2181037952,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2181038016,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2181038048,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2181038064,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2181038072,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2181038076,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2181038078,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2181038079,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253024256,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253024257,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253024259,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253024263,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253024271,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253024287,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253024319,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253024383,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253024511,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253024767,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253025279,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253026303,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253028351,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253032447,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253040639,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253057023,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253089791,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253155327,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253286399,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253548543,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4254072831,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4255121407,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4257218559,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4257218560,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4259315712,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4260364288,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4260888576,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261150720,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261281792,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261347328,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261380096,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261396480,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261404672,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261408768,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261410816,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261411840,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261412352,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261412608,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261412736,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261412800,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261412832,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261412848,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261412856,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261412860,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261412862,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261412863,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147483663,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483663,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147483663,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147483663,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147483679,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483679,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147483679,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147483679,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147483711,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483711,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147483711,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147483711,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147483775,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483775,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147483775,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147483775,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147483903,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483903,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147483903,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147483903,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147484159,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147484159,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147484159,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147484159,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147484671,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147484671,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147484671,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147484671,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147485695,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147485695,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147485695,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147485695,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147487743,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147487743,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147487743,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147487743,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147491839,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147491839,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147491839,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147491839,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147500031,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147500031,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147500031,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147500031,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147516415,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147516415,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147516415,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147516415,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147549183,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147549183,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147549183,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147549183,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147614719,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147614719,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147614719,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147614719,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147745791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147745791,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2147745791,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147745791,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2148007935,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2148007935,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2148007935,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2148007935,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2148532223,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2148532223,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2148532223,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2148532223,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2149580799,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149580799,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2149580799,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2149580799,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2151677951,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151677951,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2151677951,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2151677951,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2151677952,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151677952,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2151677952,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2151677952,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2153775104,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153775104,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2153775104,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2153775104,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2154823680,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154823680,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2154823680,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2154823680,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155347968,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155347968,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155347968,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155347968,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155610112,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155610112,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155610112,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155610112,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155741184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155741184,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155741184,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155741184,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155806720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155806720,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155806720,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155806720,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155839488,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155839488,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155839488,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155839488,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155855872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155855872,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155855872,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155855872,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155864064,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155864064,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155864064,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155864064,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155868160,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155868160,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155868160,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155868160,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155870208,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155870208,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155870208,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155870208,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155871232,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155871232,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155871232,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155871232,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155871744,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155871744,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155871744,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155871744,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872000,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872000,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872000,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872000,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872128,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872128,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872128,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872128,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872192,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872192,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872192,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872192,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872224,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872224,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872224,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872224,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872240,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872240,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872240,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872240,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147483663,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147483679,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147483711,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147483775,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147483903,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147484159,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147484671,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147485695,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147487743,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147491839,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147500031,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147516415,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147549183,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147614719,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2147745791,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2148007935,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2148532223,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2149580799,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2151677951,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2151677952,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2153775104,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2154823680,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155347968,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155610112,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155741184,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155806720,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155839488,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155855872,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155864064,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155868160,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155870208,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155871232,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155871744,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872000,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872128,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872192,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872224,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872240,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872271,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872287,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872319,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872383,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872511,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872767,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155873279,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155874303,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155876351,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155880447,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155888639,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155905023,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155937791,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2156003327,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2156134399,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2156396543,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2156920831,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2157969407,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2160066559,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2160066560,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2162163712,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2163212288,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2163736576,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2163998720,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164129792,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164195328,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164228096,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164244480,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164252672,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164256768,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164258816,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164259840,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260352,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260608,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260736,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260800,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260832,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260848,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260863,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260864,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260865,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260867,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260871,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260879,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260895,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260927,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260991,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164261119,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164261375,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164261887,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164262911,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164264959,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164269055,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164277247,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164293631,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164326399,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164391935,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164523007,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164785151,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2165309439,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2166358015,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2168455167,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2168455168,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2170552320,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2171600896,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172125184,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172387328,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172518400,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172583936,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172616704,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172633088,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172641280,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172645376,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172647424,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172648448,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172648960,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649216,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649344,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649408,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649440,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649456,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649464,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649468,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649470,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649471,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649472,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649473,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649475,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649479,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649487,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649503,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649535,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649599,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649727,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649983,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172650495,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172651519,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172653567,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172657663,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172665855,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172682239,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172715007,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172780543,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172911615,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2173173759,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2173698047,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2174746623,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2176843775,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2176843776,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2178940928,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2179989504,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2180513792,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2180775936,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2180907008,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2180972544,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2181005312,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2181021696,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2181029888,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2181033984,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2181036032,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2181037056,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2181037568,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2181037824,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2181037952,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2181038016,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2181038048,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2181038064,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2181038072,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2181038076,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2181038078,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2181038079,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221225472,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221225473,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221225475,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221225479,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221225487,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221225503,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221225535,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221225599,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221225727,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221225983,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221226495,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221227519,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221229567,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221233663,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221241855,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221258239,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221291007,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221356543,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221487615,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221749759,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3222274047,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3223322623,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3225419775,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3225419776,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3227516928,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3228565504,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229089792,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229351936,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229483008,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229548544,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229581312,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229597696,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229605888,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229609984,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229612032,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229613056,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229613568,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229613824,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229613952,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229614016,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229614048,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229614064,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229614072,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229614076,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229614078,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229614079,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147483663,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147483679,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147483711,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147483775,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147483903,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147484159,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147484671,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147485695,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147487743,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147491839,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147500031,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147516415,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147549183,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147614719,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2147745791,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2148007935,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2148532223,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2149580799,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2151677951,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2151677952,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2153775104,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2154823680,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155347968,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155610112,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155741184,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155806720,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155839488,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155855872,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155864064,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155868160,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155870208,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155871232,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155871744,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872000,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872128,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872192,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872224,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872240,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872271,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872287,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872319,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872383,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872511,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872767,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155873279,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155874303,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155876351,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155880447,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155888639,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155905023,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155937791,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2156003327,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2156134399,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2156396543,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2156920831,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2157549977,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2157969407,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2158269001,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2159227699,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2159467373,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2159786939,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2160066559,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2160066560,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2160346180,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2160905420,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2161864118,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2162163712,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2162583142,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2163062491,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2163212288,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2163736576,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2163998720,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164129792,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164195328,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164228096,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164244480,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164252672,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164256768,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164258816,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164259840,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260352,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260608,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260736,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260800,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260832,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260848,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260863,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260864,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260865,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260867,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260871,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260879,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260895,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260927,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260991,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164261119,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164261375,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164261887,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164262911,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164264959,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164269055,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164277247,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164293631,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164326399,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164391935,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164523007,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164785151,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2165309439,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2166358015,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2168455167,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2168455168,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2170552320,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2171600896,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172125184,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172387328,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172518400,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172583936,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172616704,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172633088,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172641280,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172645376,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172647424,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172648448,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172648960,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649216,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649344,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649408,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649440,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649456,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649464,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649468,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649470,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649471,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649472,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649473,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649475,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649479,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649487,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649503,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649535,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649599,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649727,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649983,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172650495,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172651519,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172653567,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172657663,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172665855,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172682239,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172715007,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172780543,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172911615,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2173173759,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2173698047,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2174746623,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2176843775,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2176843776,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2178940928,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2179989504,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2180513792,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2180775936,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2180907008,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2180972544,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181005312,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181021696,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181029888,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181033984,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181036032,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181037056,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181037568,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181037824,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181037952,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181038016,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181038048,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181038064,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181038072,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181038076,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181038078,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181038079,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181038080,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181038081,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181038083,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181038087,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181038095,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181038111,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181038143,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181038207,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181038335,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181038591,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181039103,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181040127,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181042175,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181046271,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181054463,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181070847,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181103615,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181169151,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181300223,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181562367,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2182086655,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2183135231,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2185232383,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2185232384,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2187329536,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2188378112,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2188902400,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189164544,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189295616,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189361152,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189393920,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189410304,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189418496,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189422592,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189424640,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189425664,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189426176,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189426432,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189426560,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189426624,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189426656,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189426672,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189426680,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189426684,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189426686,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189426687,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160749568,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160749569,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160749571,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160749575,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160749583,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160749599,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160749631,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160749695,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160749823,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160750079,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160750591,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160751615,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160753663,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160757759,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160765951,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160782335,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160815103,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160880639,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4161011711,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4161273855,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4161798143,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4162846719,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4164943871,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4164943872,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4167041024,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4168089600,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4168613888,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4168876032,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169007104,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169072640,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169105408,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169121792,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169129984,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169134080,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169136128,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169137152,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169137664,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169137920,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169138048,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169138112,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169138144,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169138160,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169138168,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169138172,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169138174,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169138175,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872271,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872271,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872271,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872271,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872287,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872287,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872287,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872319,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872319,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872319,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872319,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872383,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872383,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872383,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872383,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872511,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872511,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872511,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872511,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155872767,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872767,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155872767,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155872767,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155873279,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155873279,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155873279,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155873279,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155874303,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155874303,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155874303,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155874303,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155876351,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155876351,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155876351,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155876351,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155880447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155880447,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155880447,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155880447,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155888639,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155888639,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155888639,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155888639,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155905023,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155905023,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155905023,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155905023,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2155937791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155937791,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2155937791,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2155937791,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2156003327,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2156003327,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2156003327,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2156003327,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2156134399,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2156134399,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2156134399,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2156134399,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2156396543,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2156396543,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2156396543,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2156396543,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2156920831,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2156920831,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2156920831,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2156920831,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2157549977,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2157969407,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157969407,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2157969407,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2157969407,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2158269001,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2159227699,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2159467373,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2159786939,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2160066559,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160066559,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2160066559,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2160066559,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2160066560,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160066560,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2160066560,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2160066560,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2160346180,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2160905420,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2161864118,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2162163712,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162163712,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2162163712,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2162163712,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2162583142,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2163062491,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2163212288,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163212288,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2163212288,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2163212288,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2163736576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163736576,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2163736576,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2163736576,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2163998720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163998720,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2163998720,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2163998720,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164129792,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164129792,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164129792,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164129792,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164195328,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164195328,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164195328,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164195328,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164228096,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164228096,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164228096,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164228096,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164244480,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164244480,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164244480,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164244480,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164252672,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164252672,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164252672,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164252672,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164256768,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164256768,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164256768,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164256768,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164258816,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164258816,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164258816,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164258816,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164259840,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164259840,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164259840,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164259840,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260352,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260352,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260352,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260352,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260608,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260608,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260608,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260608,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260736,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260736,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260736,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260736,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260800,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260800,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260800,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260800,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260832,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260832,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260832,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260832,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260848,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260848,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260848,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260848,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260863,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260863,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260863,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260863,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260864,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260864,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260864,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260864,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260865,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260865,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260865,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260865,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260867,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260867,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260867,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260867,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260871,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260871,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260871,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260871,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260879,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260879,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260879,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260879,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260895,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260895,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260895,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260895,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260927,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260927,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260927,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260927,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164260991,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260991,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164260991,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164260991,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164261119,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164261119,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164261119,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164261119,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164261375,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164261375,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164261375,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164261375,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164261887,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164261887,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164261887,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164261887,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164262911,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164262911,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164262911,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164262911,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164264959,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164264959,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164264959,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164264959,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164269055,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164269055,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164269055,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164269055,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164277247,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164277247,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164277247,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164277247,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164293631,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164293631,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164293631,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164293631,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164326399,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164326399,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164326399,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164326399,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164391935,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164391935,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164391935,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164391935,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164523007,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164523007,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164523007,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164523007,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2164785151,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164785151,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2164785151,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2164785151,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2165309439,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2165309439,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2165309439,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2165309439,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2166358015,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2166358015,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2166358015,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2166358015,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2168455167,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2168455167,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2168455167,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2168455167,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2168455168,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2168455168,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2168455168,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2168455168,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2170552320,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2170552320,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2170552320,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2170552320,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2171600896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2171600896,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2171600896,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2171600896,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172125184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172125184,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172125184,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172125184,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172387328,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172387328,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172387328,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172387328,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172518400,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172518400,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172518400,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172518400,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172583936,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172583936,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172583936,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172583936,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172616704,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172616704,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172616704,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172616704,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172633088,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172633088,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172633088,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172633088,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172641280,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172641280,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172641280,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172641280,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172645376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172645376,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172645376,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172645376,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172647424,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172647424,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172647424,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172647424,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172648448,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172648448,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172648448,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172648448,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172648960,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172648960,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172648960,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172648960,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649216,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649216,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649216,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649216,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649344,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649344,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649344,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649344,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649408,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649408,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649408,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649408,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649440,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649440,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649440,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649440,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649456,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649456,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649456,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649456,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649464,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649464,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649464,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649464,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649468,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649468,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649468,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649468,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649470,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649470,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649470,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649470,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649471,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649471,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649471,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649471,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649472,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649472,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649472,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649472,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649473,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649473,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649473,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649473,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649475,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649475,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649475,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649475,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649479,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649479,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649479,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649479,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649487,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649487,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649487,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649487,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649503,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649503,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649503,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649503,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649535,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649535,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649535,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649535,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649599,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649599,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649599,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649599,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649727,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649727,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649727,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649727,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172649983,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649983,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172649983,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172649983,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172650495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172650495,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172650495,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172650495,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172651519,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172651519,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172651519,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172651519,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172653567,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172653567,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172653567,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172653567,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172657663,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172657663,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172657663,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172657663,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172665855,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172665855,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172665855,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172665855,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172682239,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172682239,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172682239,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172682239,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172715007,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172715007,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172715007,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172715007,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172780543,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172780543,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172780543,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172780543,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2172911615,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172911615,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2172911615,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2172911615,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2173173759,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2173173759,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2173173759,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2173173759,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2173698047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2173698047,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2173698047,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2173698047,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2174746623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2174746623,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2174746623,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2174746623,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2176843775,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2176843775,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2176843775,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2176843775,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2176843776,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2176843776,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2176843776,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2176843776,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2178940928,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2178940928,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2178940928,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2178940928,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2179989504,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2179989504,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2179989504,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2179989504,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2180513792,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2180513792,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2180513792,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2180513792,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2180775936,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2180775936,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2180775936,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2180775936,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2180907008,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2180907008,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2180907008,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2180907008,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2180972544,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2180972544,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2180972544,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2180972544,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181005312,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181005312,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2181005312,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2181005312,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181021696,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181021696,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2181021696,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2181021696,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181029888,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181029888,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2181029888,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2181029888,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181033984,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181033984,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2181033984,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2181033984,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181036032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181036032,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2181036032,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2181036032,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181037056,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181037056,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2181037056,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2181037056,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181037568,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181037568,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2181037568,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2181037568,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181037824,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181037824,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2181037824,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2181037824,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181037952,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181037952,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2181037952,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2181037952,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181038016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038016,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2181038016,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2181038016,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181038048,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038048,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2181038048,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2181038048,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181038064,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038064,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2181038064,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2181038064,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181038072,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038072,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2181038072,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2181038072,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181038076,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038076,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2181038076,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2181038076,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181038078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038078,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2181038078,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2181038078,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181038079,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038079,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2181038079,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2181038079,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181038080,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181038081,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181038083,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181038087,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181038095,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181038111,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181038143,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181038207,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181038335,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181038591,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181039103,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181040127,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181042175,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181046271,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181054463,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181070847,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181103615,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181169151,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181300223,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2181562367,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2182086655,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2183135231,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2185232383,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2185232384,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2187329536,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2188378112,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2188902400,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189164544,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189295616,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189361152,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189393920,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189410304,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189418496,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189422592,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189424640,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189425664,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189426176,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189426432,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189426560,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189426624,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189426656,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189426672,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189426680,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189426684,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189426686,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2189426687,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2592079872,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592079873,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592079875,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592079879,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592079887,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592079903,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592079935,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592079999,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592080127,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592080383,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592080895,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592081919,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592083967,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592088063,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592096255,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592112639,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592145407,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592210943,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592342015,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592604159,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2593128447,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2594177023,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2596274175,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2596274176,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2598371328,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2599419904,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2599944192,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600206336,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600337408,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600402944,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600435712,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600452096,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600460288,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600464384,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600466432,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600467456,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600467968,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600468224,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600468352,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600468416,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600468448,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600468464,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600468472,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600468476,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600468478,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600468479,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3003121664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003121665,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003121667,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003121671,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003121679,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003121695,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003121727,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003121791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003121919,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003122175,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003122687,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003123711,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003125759,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003129855,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003138047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003154431,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003187199,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003252735,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003383807,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3003645951,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3004170239,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3005218815,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3007315967,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3007315968,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3009413120,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3010461696,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3010985984,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011248128,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011379200,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011444736,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011477504,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011493888,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011502080,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011506176,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011508224,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011509248,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011509760,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011510016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011510144,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011510208,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011510240,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011510256,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011510264,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011510268,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011510270,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3011510271,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3179282432,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179282433,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179282435,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179282439,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179282447,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179282463,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179282495,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179282559,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179282687,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179282943,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179283455,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179284479,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179286527,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179290623,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179298815,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179315199,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179347967,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179413503,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179544575,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179806719,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3180331007,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3181379583,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3183476735,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3183476736,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3185573888,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3186622464,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187146752,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187408896,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187539968,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187605504,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187638272,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187654656,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187662848,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187666944,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187668992,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187670016,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187670528,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187670784,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187670912,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187670976,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187671008,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187671024,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187671032,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187671036,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187671038,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187671039,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187671040,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187671041,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187671043,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187671047,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187671055,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187671071,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187671103,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187671167,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187671295,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187671551,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187672063,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187673087,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187675135,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187679231,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187687423,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187703807,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187736575,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187802111,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187933183,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3188195327,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3188719615,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3189768191,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3191865343,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3191865344,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3193962496,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3195011072,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3195535360,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3195797504,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3195928576,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3195994112,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196026880,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196043264,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196051456,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196055552,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196057600,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196058624,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059136,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059392,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059520,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059584,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059616,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059632,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059640,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059644,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059646,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059647,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059648,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059649,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059651,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059655,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059663,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059679,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059711,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059775,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059903,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196060159,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196060671,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196061695,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196063743,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196067839,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196076031,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196092415,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196125183,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196190719,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196321791,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196583935,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3197108223,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3198156799,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3200253951,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3200253952,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3202351104,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3203399680,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3203923968,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204186112,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204317184,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204382720,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204415488,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204431872,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204440064,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204444160,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204446208,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204447232,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204447744,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448000,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448128,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448192,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448224,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448240,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448248,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448252,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448254,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448255,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448256,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448257,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448259,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448263,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448271,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448287,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448319,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448383,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448511,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448767,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204449279,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204450303,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204452351,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204456447,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204464639,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204481023,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204513791,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204579327,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204710399,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204972543,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3205496831,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3206545407,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3208642559,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3208642560,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3210739712,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3211788288,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212312576,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212574720,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212705792,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212771328,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212804096,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212820480,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212828672,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212832768,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212834816,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212835840,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836352,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836608,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836736,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836800,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836832,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836848,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836856,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836860,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836862,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836863,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592079872,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592079873,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592079875,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592079879,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592079887,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592079903,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592079935,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592079999,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592080127,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592080383,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592080895,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592081919,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592083967,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592088063,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592096255,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592112639,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592145407,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592210943,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592342015,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2592604159,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2593128447,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2594177023,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2596274175,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2596274176,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2598371328,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2599419904,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2599944192,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600206336,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600337408,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600402944,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600435712,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600452096,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600460288,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600464384,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600466432,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600467456,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600467968,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600468224,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600468352,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600468416,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600468448,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600468464,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600468472,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600468476,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600468478,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2600468479,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179282432,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179282433,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179282435,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179282439,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179282447,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179282463,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179282495,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179282559,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179282687,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179282943,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179283455,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179284479,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179286527,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179290623,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179298815,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179315199,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179347967,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179413503,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179544575,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3179806719,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3180331007,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3181379583,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3183476735,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3183476736,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3185573888,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3186622464,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187146752,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187408896,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187539968,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187605504,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187638272,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187654656,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187662848,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187666944,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187668992,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187670016,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187670528,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187670784,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187670912,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187670976,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187671008,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187671024,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187671032,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187671036,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187671038,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187671039,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187671040,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187671041,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187671043,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187671047,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187671055,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187671071,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187671103,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187671167,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187671295,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187671551,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187672063,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187673087,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187675135,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187679231,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187687423,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187703807,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187736575,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187802111,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3187933183,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3188195327,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3188719615,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3189768191,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3191865343,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3191865344,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3193962496,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3195011072,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3195535360,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3195797504,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3195928576,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3195994112,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196026880,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196043264,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196051456,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196055552,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196057600,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196058624,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059136,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059392,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059520,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059584,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059616,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059632,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059640,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059644,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059646,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059647,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059648,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059649,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059651,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059655,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059663,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059679,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059711,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059775,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196059903,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196060159,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196060671,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196061695,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196063743,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196067839,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196076031,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196092415,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196125183,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196190719,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196321791,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3196583935,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3197108223,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3198156799,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3200253951,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3200253952,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3202351104,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3203399680,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3203923968,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204186112,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204317184,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204382720,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204415488,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204431872,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204440064,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204444160,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204446208,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204447232,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204447744,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448000,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448128,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448192,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448224,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448240,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448248,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448252,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448254,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448255,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448256,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448257,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448259,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448263,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448271,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448287,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448319,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448383,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448511,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204448767,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204449279,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204450303,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204452351,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204456447,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204464639,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204481023,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204513791,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204579327,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204710399,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3204972543,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3205496831,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3206545407,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3208642559,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3208642560,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3210739712,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3211788288,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212312576,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212574720,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212705792,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212771328,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212804096,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212820480,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212828672,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212832768,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212834816,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212835840,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836352,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836608,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836736,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836800,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836832,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836848,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836856,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836860,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836862,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836863,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836879,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836895,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836927,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836991,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212837119,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212837375,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212837887,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212838911,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212840959,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212845055,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212853247,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212869631,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212902399,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212967935,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3213099007,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3213361151,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3213885439,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3214934015,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3217031167,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3217031168,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3219128320,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3220176896,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3220701184,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3220963328,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221094400,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221159936,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221192704,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221209088,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221217280,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221221376,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221223424,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221224448,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221224960,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225216,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225344,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225408,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225440,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225456,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225471,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225472,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225473,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225475,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225479,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225487,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225503,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225535,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225599,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225727,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225983,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221226495,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221227519,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221229567,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221233663,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221241855,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221258239,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221291007,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221356543,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221487615,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221749759,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3222274047,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3223322623,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3225419775,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3225419776,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3227516928,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3228565504,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229089792,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229351936,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229483008,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229548544,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229581312,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229597696,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229605888,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229609984,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229612032,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229613056,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229613568,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229613824,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229613952,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229614016,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229614048,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229614064,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229614072,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229614076,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229614078,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229614079,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229614080,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229614081,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229614083,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229614087,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229614095,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229614111,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229614143,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229614207,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229614335,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229614591,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229615103,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229616127,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229618175,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229622271,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229630463,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229646847,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229679615,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229745151,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229876223,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3230138367,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3230662655,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3231711231,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3233808383,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3233808384,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3235905536,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3236954112,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3237478400,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3237740544,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3237871616,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3237937152,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3237969920,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3237986304,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3237994496,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3237998592,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238000640,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238001664,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002176,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002432,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002560,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002624,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002656,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002672,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002680,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002684,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002686,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002687,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002688,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002689,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002691,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002695,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002703,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002719,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002751,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002815,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002943,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238003199,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238003711,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238004735,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238006783,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238010879,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238019071,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238035455,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238068223,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238133759,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238264831,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238526975,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3239051263,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3240099839,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3242196991,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3242196992,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3244294144,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3245342720,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3245867008,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246129152,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246260224,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246325760,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246358528,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246374912,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246383104,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246387200,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246389248,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246390272,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246390784,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246391040,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246391168,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246391232,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246391264,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246391280,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246391288,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246391292,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246391294,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246391295,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288334336,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288334337,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288334339,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288334343,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288334351,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288334367,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288334399,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288334463,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288334591,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288334847,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288335359,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288336383,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288338431,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288342527,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288350719,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288367103,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288399871,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288465407,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288596479,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288858623,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3289382911,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3290431487,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3292528639,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3292528640,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3294625792,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3295674368,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296198656,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296460800,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296591872,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296657408,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296690176,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296706560,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296714752,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296718848,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296720896,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296721920,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296722432,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296722688,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296722816,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296722880,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296722912,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296722928,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296722936,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296722940,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296722942,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296722943,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836879,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836895,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836927,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212836991,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212837119,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212837375,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212837887,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212838911,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212840959,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212845055,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212853247,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212869631,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212902399,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3212967935,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3213099007,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3213361151,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3213885439,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3214934015,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3217031167,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3217031168,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3219128320,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3220176896,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3220701184,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3220963328,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221094400,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221159936,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221192704,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221209088,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221217280,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221221376,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221223424,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221224448,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221224960,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225216,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225344,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225408,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225440,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225456,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225471,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225472,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221225472,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225473,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221225473,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225475,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221225475,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225479,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221225479,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225487,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221225487,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225503,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221225503,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225535,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221225535,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225599,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221225599,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225727,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221225727,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221225983,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221225983,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221226495,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221226495,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221227519,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221227519,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221229567,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221229567,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221233663,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221233663,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221241855,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221241855,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221258239,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221258239,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221291007,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221291007,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221356543,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221356543,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221487615,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221487615,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3221749759,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3221749759,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3222274047,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3222274047,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3223322623,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3223322623,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3225419775,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3225419775,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3225419776,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3225419776,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3227516928,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3227516928,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3228565504,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3228565504,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229089792,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229089792,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229351936,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229351936,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229483008,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229483008,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229548544,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229548544,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229581312,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229581312,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229597696,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229597696,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229605888,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229605888,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229609984,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229609984,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229612032,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229612032,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229613056,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229613056,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229613568,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229613568,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229613824,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229613824,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229613952,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229613952,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229614016,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229614016,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229614048,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229614048,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229614064,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229614064,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229614072,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229614072,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229614076,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229614076,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229614078,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229614078,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229614079,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(3229614079,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229614080,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229614081,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229614083,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229614087,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229614095,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229614111,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229614143,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229614207,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229614335,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229614591,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229615103,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229616127,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229618175,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229622271,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229630463,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229646847,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229679615,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229745151,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3229876223,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3230138367,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3230662655,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3231711231,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3233808383,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3233808384,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3235905536,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3236954112,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3237478400,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3237740544,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3237871616,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3237937152,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3237969920,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3237986304,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3237994496,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3237998592,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238000640,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238001664,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002176,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002432,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002560,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002624,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002656,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002672,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002680,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002684,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002686,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002687,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002688,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002689,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002691,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002695,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002703,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002719,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002751,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002815,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238002943,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238003199,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238003711,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238004735,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238006783,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238010879,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238019071,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238035455,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238068223,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238133759,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238264831,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3238526975,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3239051263,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3240099839,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3242196991,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3242196992,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3244294144,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3245342720,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3245867008,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246129152,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246260224,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246325760,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246358528,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246374912,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246383104,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246387200,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246389248,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246390272,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246390784,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246391040,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246391168,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246391232,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246391264,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246391280,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246391288,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246391292,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246391294,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3246391295,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288334336,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288334337,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288334339,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288334343,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288334351,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288334367,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288334399,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288334463,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288334591,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288334847,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288335359,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288336383,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288338431,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288342527,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288350719,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288367103,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288399871,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288465407,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288596479,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3288858623,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3289382911,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3290431487,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3292528639,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3292528640,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3294625792,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3295674368,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296198656,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296460800,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296591872,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296657408,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296690176,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296706560,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296714752,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296718848,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296720896,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296721920,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296722432,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296722688,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296722816,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296722880,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296722912,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296722928,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296722936,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296722940,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296722942,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3296722943,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3925868544,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925868545,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925868547,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925868551,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925868559,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925868575,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925868607,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925868671,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925868799,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925869055,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925869567,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925870591,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925872639,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925876735,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925884927,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925901311,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925934079,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925999615,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3926130687,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3926392831,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3926917119,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3927965695,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3930062847,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3930062848,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3932160000,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3933208576,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3933732864,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3933995008,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934126080,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934191616,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934224384,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934240768,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934248960,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934253056,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934255104,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934256128,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934256640,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934256896,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934257024,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934257088,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934257120,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934257136,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934257144,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934257148,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934257150,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934257151,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4160749568,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160749569,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160749571,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160749575,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160749583,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160749599,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160749631,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160749695,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160749823,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160750079,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160750591,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160751615,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160753663,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160757759,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160765951,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160782335,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160815103,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4160880639,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4161011711,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4161273855,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4161798143,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4162846719,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4164943871,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4164943872,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4167041024,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4168089600,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4168613888,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4168876032,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169007104,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169072640,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169105408,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169121792,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169129984,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169134080,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169136128,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169137152,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169137664,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169137920,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169138048,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169138112,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169138144,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169138160,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169138168,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169138172,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169138174,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4169138175,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(4244635648,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244635649,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244635651,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244635655,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244635663,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244635679,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244635711,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244635775,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244635903,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244636159,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244636671,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244637695,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244639743,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244643839,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244652031,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244668415,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244701183,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244766719,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244897791,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4245159935,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4245684223,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4246732799,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4248829951,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4248829952,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4250927104,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4251975680,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4252499968,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4252762112,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4252893184,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4252958720,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4252991488,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253007872,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253016064,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253020160,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253022208,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253023232,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253023744,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024000,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024128,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024192,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024224,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024240,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024248,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024252,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024254,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024255,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024256,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253024256,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024257,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253024257,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024259,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253024259,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024263,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253024263,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024271,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253024271,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024287,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253024287,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024319,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253024319,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024383,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253024383,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024511,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253024511,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024767,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253024767,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253025279,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253025279,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253026303,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253026303,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253028351,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253028351,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253032447,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253032447,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253040639,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253040639,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253057023,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253057023,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253089791,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253089791,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253155327,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253155327,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253286399,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253286399,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253548543,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4253548543,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4254072831,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4254072831,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4255121407,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4255121407,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4257218559,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4257218559,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4257218560,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4257218560,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4259315712,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4259315712,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4260364288,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4260364288,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4260888576,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4260888576,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261150720,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261150720,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261281792,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261281792,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261347328,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261347328,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261380096,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261380096,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261396480,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261396480,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261404672,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261404672,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261408768,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261408768,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261410816,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261410816,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261411840,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261411840,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412352,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261412352,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412608,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261412608,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412736,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261412736,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412800,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261412800,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412832,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261412832,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412848,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261412848,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412856,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261412856,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412860,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261412860,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412862,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261412862,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412863,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(4261412863,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412864,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412865,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412867,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412871,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412879,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412895,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412927,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412991,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261413119,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261413375,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261413887,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261414911,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261416959,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261421055,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261429247,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261445631,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261478399,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261543935,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261675007,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261937151,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4262461439,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4263510015,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4265607167,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4265607168,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4267704320,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4268752896,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269277184,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269539328,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269670400,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269735936,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269768704,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269785088,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269793280,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269797376,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269799424,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269800448,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269800960,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801216,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801344,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801408,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801440,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801456,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801464,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801468,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801470,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801471,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801472,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801473,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801475,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801479,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801487,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801503,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801535,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801599,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801727,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801983,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269802495,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269803519,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269805567,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269809663,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269817855,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269834239,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269867007,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269932543,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4270063615,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4270325759,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4270850047,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4271898623,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4273995775,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4273995776,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4276092928,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4277141504,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4277665792,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4277927936,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278059008,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278124544,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278157312,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278173696,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278181888,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278185984,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278188032,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278189056,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278189568,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278189824,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278189952,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278190016,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278190048,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278190064,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278190072,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278190076,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278190078,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278190079,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278190080,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278190095,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278190111,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278190143,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278190207,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278190335,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278190591,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278191103,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278192127,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278194175,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278198271,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278206463,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278222847,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278255615,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278321151,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278452223,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278714367,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4279238655,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4280287231,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4282384383,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4282384384,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4284481536,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4285530112,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286054400,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286316544,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286447616,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286513152,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286545920,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286562304,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286570496,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286574592,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286576640,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286577664,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286578176,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286578432,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286578560,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286578624,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286578656,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286578672,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925868544,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925868545,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925868547,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925868551,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925868559,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925868575,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925868607,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925868671,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925868799,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925869055,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925869567,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925870591,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925872639,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925876735,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925884927,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925901311,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925934079,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3925999615,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3926130687,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3926392831,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3926917119,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3927965695,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3930062847,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3930062848,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3932160000,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3933208576,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3933732864,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3933995008,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934126080,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934191616,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934224384,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934240768,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934248960,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934253056,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934255104,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934256128,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934256640,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934256896,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934257024,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934257088,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934257120,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934257136,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934257144,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934257148,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934257150,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(3934257151,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244635648,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244635649,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244635651,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244635655,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244635663,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244635679,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244635711,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244635775,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244635903,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244636159,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244636671,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244637695,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244639743,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244643839,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244652031,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244668415,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244701183,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244766719,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4244897791,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4245159935,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4245684223,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4246732799,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4248829951,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4248829952,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4250927104,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4251975680,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4252499968,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4252762112,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4252893184,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4252958720,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4252991488,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253007872,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253016064,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253020160,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253022208,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253023232,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253023744,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024000,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024128,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024192,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024224,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024240,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024248,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024252,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024254,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024255,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024256,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024257,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024259,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024263,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024271,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024287,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024319,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024383,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024511,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253024767,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253025279,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253026303,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253028351,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253032447,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253040639,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253057023,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253089791,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253155327,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253286399,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4253548543,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4254072831,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4255121407,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4257218559,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4257218560,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4259315712,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4260364288,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4260888576,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261150720,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261281792,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261347328,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261380096,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261396480,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261404672,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261408768,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261410816,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261411840,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412352,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412608,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412736,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412800,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412832,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412848,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412856,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412860,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412862,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412863,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412864,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412865,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412867,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412871,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412879,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412895,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412927,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261412991,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261413119,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261413375,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261413887,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261414911,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261416959,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261421055,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261429247,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261445631,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261478399,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261543935,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261675007,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4261937151,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4262461439,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4263510015,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4265607167,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4265607168,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4267704320,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4268752896,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269277184,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269539328,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269670400,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269735936,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269768704,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269785088,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269793280,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269797376,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269799424,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269800448,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269800960,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801216,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801344,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801408,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801440,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801456,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801464,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801468,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801470,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801471,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801472,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801473,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801475,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801479,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801487,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801503,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801535,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801599,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801727,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269801983,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269802495,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269803519,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269805567,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269809663,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269817855,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269834239,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269867007,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4269932543,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4270063615,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4270325759,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4270850047,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4271898623,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4273995775,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4273995776,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4276092928,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4277141504,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4277665792,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4277927936,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278059008,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278124544,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278157312,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278173696,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278181888,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278185984,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278188032,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278189056,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278189568,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278189824,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278189952,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278190016,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278190048,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278190064,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278190072,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278190076,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278190078,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278190079,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278190080,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278190095,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278190111,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278190143,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278190207,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278190335,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278190591,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278191103,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278192127,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278194175,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278198271,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278206463,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278222847,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278255615,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278321151,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278452223,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4278714367,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4279238655,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4280287231,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4282384383,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4282384384,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4284481536,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4285530112,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286054400,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286316544,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286447616,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286513152,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286545920,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286562304,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286570496,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286574592,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286576640,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286577664,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286578176,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286578432,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286578560,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286578624,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286578656,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286578672,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_7:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_8:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_9:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_10:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_11:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_12:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_13:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_14:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_15:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_16:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_17:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_18:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_19:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_20:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_21:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_22:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_23:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_24:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_25:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_26:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_27:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_28:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_29:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_30:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_31:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_32:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_33:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_34:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_35:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_36:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_37:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_38:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_39:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_40:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_41:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_42:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_43:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_44:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_45:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_46:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_47:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_48:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_49:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_50:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_51:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_52:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_53:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_54:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_55:
    .fill 208*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

RVMODEL_DATA_END
