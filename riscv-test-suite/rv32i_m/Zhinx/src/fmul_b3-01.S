
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.12.2
// timestamp : Wed Sep 25 04:50:26 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/testing/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/testing/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV32Zhinx/rv32h_fmul.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmul.h instruction of the RISC-V RV32_Zfinx_Zhinx,RV64_Zfinx_Zhinx extension for the fmul_b3 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32I_Zfinx_Zhinx,RV64I_Zfinx_Zhinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*Zhinx.*);def TEST_CASE_1=True;",fmul_b3)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x7,test_dataset_0)
RVTEST_SIGBASE(x2,signature_x2_1)

inst_0:
// rs1 == rd != rs2, rs1==x20, rs2==x11, rd==x20,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3a5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x20; op2:x11; dest:x20; op1val:0x7ba5; op2val:0x0;
   valaddr_reg:x7; val_offset:0*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3
*/
TEST_FPRR_OP(fmul.h, x20, x20, x11, dyn, 0, 0, x7, 0*FLEN/8, x10, x2, x3)

inst_1:
// rs1 == rs2 == rd, rs1==x22, rs2==x22, rd==x22,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3a5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x22; op2:x22; dest:x22; op1val:0x7ba5; op2val:0x7ba5;
   valaddr_reg:x7; val_offset:2*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x3
*/
TEST_FPRR_OP(fmul.h, x22, x22, x22, dyn, 32, 0, x7, 2*FLEN/8, x10, x2, x3)

inst_2:
// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x19, rs2==x4, rd==x16,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3a5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x19; op2:x4; dest:x16; op1val:0x7ba5; op2val:0x0;
   valaddr_reg:x7; val_offset:4*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x3
*/
TEST_FPRR_OP(fmul.h, x16, x19, x4, dyn, 64, 0, x7, 4*FLEN/8, x10, x2, x3)

inst_3:
// rs1 == rs2 != rd, rs1==x6, rs2==x6, rd==x5,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3a5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x6; op2:x6; dest:x5; op1val:0x7ba5; op2val:0x7ba5;
   valaddr_reg:x7; val_offset:6*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x3
*/
TEST_FPRR_OP(fmul.h, x5, x6, x6, dyn, 96, 0, x7, 6*FLEN/8, x10, x2, x3)

inst_4:
// rs2 == rd != rs1, rs1==x26, rs2==x14, rd==x14,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3a5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x26; op2:x14; dest:x14; op1val:0x7ba5; op2val:0x0;
   valaddr_reg:x7; val_offset:8*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x3
*/
TEST_FPRR_OP(fmul.h, x14, x26, x14, dyn, 128, 0, x7, 8*FLEN/8, x10, x2, x3)

inst_5:
// rs1==x21, rs2==x31, rd==x27,fs1 == 0 and fe1 == 0x1a and fm1 == 0x33c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x21; op2:x31; dest:x27; op1val:0x6b3c; op2val:0x0;
   valaddr_reg:x7; val_offset:10*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3
*/
TEST_FPRR_OP(fmul.h, x27, x21, x31, dyn, 0, 0, x7, 10*FLEN/8, x10, x2, x3)

inst_6:
// rs1==x8, rs2==x25, rd==x24,fs1 == 0 and fe1 == 0x1a and fm1 == 0x33c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x8; op2:x25; dest:x24; op1val:0x6b3c; op2val:0x0;
   valaddr_reg:x7; val_offset:12*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x3
*/
TEST_FPRR_OP(fmul.h, x24, x8, x25, dyn, 32, 0, x7, 12*FLEN/8, x10, x2, x3)

inst_7:
// rs1==x9, rs2==x5, rd==x30,fs1 == 0 and fe1 == 0x1a and fm1 == 0x33c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x9; op2:x5; dest:x30; op1val:0x6b3c; op2val:0x0;
   valaddr_reg:x7; val_offset:14*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x3
*/
TEST_FPRR_OP(fmul.h, x30, x9, x5, dyn, 64, 0, x7, 14*FLEN/8, x10, x2, x3)

inst_8:
// rs1==x13, rs2==x16, rd==x28,fs1 == 0 and fe1 == 0x1a and fm1 == 0x33c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x13; op2:x16; dest:x28; op1val:0x6b3c; op2val:0x0;
   valaddr_reg:x7; val_offset:16*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x3
*/
TEST_FPRR_OP(fmul.h, x28, x13, x16, dyn, 96, 0, x7, 16*FLEN/8, x10, x2, x3)

inst_9:
// rs1==x14, rs2==x24, rd==x26,fs1 == 0 and fe1 == 0x1a and fm1 == 0x33c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x14; op2:x24; dest:x26; op1val:0x6b3c; op2val:0x0;
   valaddr_reg:x7; val_offset:18*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x3
*/
TEST_FPRR_OP(fmul.h, x26, x14, x24, dyn, 128, 0, x7, 18*FLEN/8, x10, x2, x3)

inst_10:
// rs1==x15, rs2==x8, rd==x13,fs1 == 0 and fe1 == 0x1e and fm1 == 0x2ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x15; op2:x8; dest:x13; op1val:0x7aae; op2val:0x0;
   valaddr_reg:x7; val_offset:20*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3
*/
TEST_FPRR_OP(fmul.h, x13, x15, x8, dyn, 0, 0, x7, 20*FLEN/8, x10, x2, x3)

inst_11:
// rs1==x1, rs2==x19, rd==x17,fs1 == 0 and fe1 == 0x1e and fm1 == 0x2ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x1; op2:x19; dest:x17; op1val:0x7aae; op2val:0x0;
   valaddr_reg:x7; val_offset:22*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x3
*/
TEST_FPRR_OP(fmul.h, x17, x1, x19, dyn, 32, 0, x7, 22*FLEN/8, x10, x2, x3)
RVTEST_VALBASEUPD(x5,test_dataset_1)

inst_12:
// rs1==x0, rs2==x12, rd==x19,fs1 == 0 and fe1 == 0x1e and fm1 == 0x2ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x0; op2:x12; dest:x19; op1val:0x0; op2val:0x0;
   valaddr_reg:x5; val_offset:0*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x3
*/
TEST_FPRR_OP(fmul.h, x19, x0, x12, dyn, 64, 0, x5, 0*FLEN/8, x8, x2, x3)

inst_13:
// rs1==x28, rs2==x20, rd==x9,fs1 == 0 and fe1 == 0x1e and fm1 == 0x2ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x28; op2:x20; dest:x9; op1val:0x7aae; op2val:0x0;
   valaddr_reg:x5; val_offset:2*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x3
*/
TEST_FPRR_OP(fmul.h, x9, x28, x20, dyn, 96, 0, x5, 2*FLEN/8, x8, x2, x3)

inst_14:
// rs1==x25, rs2==x23, rd==x29,fs1 == 0 and fe1 == 0x1e and fm1 == 0x2ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x25; op2:x23; dest:x29; op1val:0x7aae; op2val:0x0;
   valaddr_reg:x5; val_offset:4*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x3
*/
TEST_FPRR_OP(fmul.h, x29, x25, x23, dyn, 128, 0, x5, 4*FLEN/8, x8, x2, x3)
RVTEST_SIGBASE(x14,signature_x14_0)

inst_15:
// rs1==x30, rs2==x2, rd==x11,fs1 == 0 and fe1 == 0x1e and fm1 == 0x15a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x2; dest:x11; op1val:0x795a; op2val:0x0;
   valaddr_reg:x5; val_offset:6*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x19
*/
TEST_FPRR_OP(fmul.h, x11, x30, x2, dyn, 0, 0, x5, 6*FLEN/8, x8, x14, x19)

inst_16:
// rs1==x17, rs2==x30, rd==x3,fs1 == 0 and fe1 == 0x1e and fm1 == 0x15a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x17; op2:x30; dest:x3; op1val:0x795a; op2val:0x0;
   valaddr_reg:x5; val_offset:8*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x19
*/
TEST_FPRR_OP(fmul.h, x3, x17, x30, dyn, 32, 0, x5, 8*FLEN/8, x8, x14, x19)

inst_17:
// rs1==x16, rs2==x7, rd==x4,fs1 == 0 and fe1 == 0x1e and fm1 == 0x15a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x16; op2:x7; dest:x4; op1val:0x795a; op2val:0x0;
   valaddr_reg:x5; val_offset:10*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x19
*/
TEST_FPRR_OP(fmul.h, x4, x16, x7, dyn, 64, 0, x5, 10*FLEN/8, x8, x14, x19)

inst_18:
// rs1==x4, rs2==x28, rd==x0,fs1 == 0 and fe1 == 0x1e and fm1 == 0x15a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x4; op2:x28; dest:x0; op1val:0x795a; op2val:0x0;
   valaddr_reg:x5; val_offset:12*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x19
*/
TEST_FPRR_OP(fmul.h, x0, x4, x28, dyn, 96, 0, x5, 12*FLEN/8, x8, x14, x19)

inst_19:
// rs1==x31, rs2==x29, rd==x10,fs1 == 0 and fe1 == 0x1e and fm1 == 0x15a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x31; op2:x29; dest:x10; op1val:0x795a; op2val:0x0;
   valaddr_reg:x5; val_offset:14*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x19
*/
TEST_FPRR_OP(fmul.h, x10, x31, x29, dyn, 128, 0, x5, 14*FLEN/8, x8, x14, x19)

inst_20:
// rs1==x7, rs2==x18, rd==x15,fs1 == 0 and fe1 == 0x1e and fm1 == 0x0d8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x7; op2:x18; dest:x15; op1val:0x78d8; op2val:0x0;
   valaddr_reg:x5; val_offset:16*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x19
*/
TEST_FPRR_OP(fmul.h, x15, x7, x18, dyn, 0, 0, x5, 16*FLEN/8, x8, x14, x19)

inst_21:
// rs1==x2, rs2==x9, rd==x23,fs1 == 0 and fe1 == 0x1e and fm1 == 0x0d8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x2; op2:x9; dest:x23; op1val:0x78d8; op2val:0x0;
   valaddr_reg:x5; val_offset:18*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x19
*/
TEST_FPRR_OP(fmul.h, x23, x2, x9, dyn, 32, 0, x5, 18*FLEN/8, x8, x14, x19)

inst_22:
// rs1==x10, rs2==x17, rd==x12,fs1 == 0 and fe1 == 0x1e and fm1 == 0x0d8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x10; op2:x17; dest:x12; op1val:0x78d8; op2val:0x0;
   valaddr_reg:x5; val_offset:20*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x19
*/
TEST_FPRR_OP(fmul.h, x12, x10, x17, dyn, 64, 0, x5, 20*FLEN/8, x8, x14, x19)

inst_23:
// rs1==x12, rs2==x26, rd==x1,fs1 == 0 and fe1 == 0x1e and fm1 == 0x0d8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x12; op2:x26; dest:x1; op1val:0x78d8; op2val:0x0;
   valaddr_reg:x5; val_offset:22*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x19
*/
TEST_FPRR_OP(fmul.h, x1, x12, x26, dyn, 96, 0, x5, 22*FLEN/8, x8, x14, x19)

inst_24:
// rs1==x29, rs2==x21, rd==x6,fs1 == 0 and fe1 == 0x1e and fm1 == 0x0d8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x29; op2:x21; dest:x6; op1val:0x78d8; op2val:0x0;
   valaddr_reg:x5; val_offset:24*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x19
*/
TEST_FPRR_OP(fmul.h, x6, x29, x21, dyn, 128, 0, x5, 24*FLEN/8, x8, x14, x19)
RVTEST_VALBASEUPD(x4,test_dataset_2)

inst_25:
// rs1==x11, rs2==x13, rd==x8,fs1 == 0 and fe1 == 0x1e and fm1 == 0x0a5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x11; op2:x13; dest:x8; op1val:0x78a5; op2val:0x0;
   valaddr_reg:x4; val_offset:0*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x19
*/
TEST_FPRR_OP(fmul.h, x8, x11, x13, dyn, 0, 0, x4, 0*FLEN/8, x6, x14, x19)

inst_26:
// rs1==x3, rs2==x27, rd==x2,fs1 == 0 and fe1 == 0x1e and fm1 == 0x0a5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x3; op2:x27; dest:x2; op1val:0x78a5; op2val:0x0;
   valaddr_reg:x4; val_offset:2*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x19
*/
TEST_FPRR_OP(fmul.h, x2, x3, x27, dyn, 32, 0, x4, 2*FLEN/8, x6, x14, x19)

inst_27:
// rs1==x5, rs2==x1, rd==x25,fs1 == 0 and fe1 == 0x1e and fm1 == 0x0a5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x5; op2:x1; dest:x25; op1val:0x78a5; op2val:0x0;
   valaddr_reg:x4; val_offset:4*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x19
*/
TEST_FPRR_OP(fmul.h, x25, x5, x1, dyn, 64, 0, x4, 4*FLEN/8, x6, x14, x19)
RVTEST_SIGBASE(x1,signature_x1_0)

inst_28:
// rs1==x27, rs2==x3, rd==x31,fs1 == 0 and fe1 == 0x1e and fm1 == 0x0a5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x27; op2:x3; dest:x31; op1val:0x78a5; op2val:0x0;
   valaddr_reg:x4; val_offset:6*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x27, x3, dyn, 96, 0, x4, 6*FLEN/8, x6, x1, x2)

inst_29:
// rs1==x23, rs2==x10, rd==x18,fs1 == 0 and fe1 == 0x1e and fm1 == 0x0a5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x23; op2:x10; dest:x18; op1val:0x78a5; op2val:0x0;
   valaddr_reg:x4; val_offset:8*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x18, x23, x10, dyn, 128, 0, x4, 8*FLEN/8, x6, x1, x2)

inst_30:
// rs1==x24, rs2==x15, rd==x7,fs1 == 0 and fe1 == 0x1d and fm1 == 0x2e3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x24; op2:x15; dest:x7; op1val:0x76e3; op2val:0x0;
   valaddr_reg:x4; val_offset:10*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x7, x24, x15, dyn, 0, 0, x4, 10*FLEN/8, x6, x1, x2)

inst_31:
// rs1==x18, rs2==x0, rd==x21,fs1 == 0 and fe1 == 0x1d and fm1 == 0x2e3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x18; op2:x0; dest:x21; op1val:0x76e3; op2val:0x0;
   valaddr_reg:x4; val_offset:12*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x21, x18, x0, dyn, 32, 0, x4, 12*FLEN/8, x6, x1, x2)

inst_32:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2e3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x76e3; op2val:0x0;
   valaddr_reg:x4; val_offset:14*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 14*FLEN/8, x6, x1, x2)

inst_33:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2e3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x76e3; op2val:0x0;
   valaddr_reg:x4; val_offset:16*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 16*FLEN/8, x6, x1, x2)

inst_34:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2e3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x76e3; op2val:0x0;
   valaddr_reg:x4; val_offset:18*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 18*FLEN/8, x6, x1, x2)

inst_35:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1c8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79c8; op2val:0x8000;
   valaddr_reg:x4; val_offset:20*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 20*FLEN/8, x6, x1, x2)

inst_36:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1c8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79c8; op2val:0x8000;
   valaddr_reg:x4; val_offset:22*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 22*FLEN/8, x6, x1, x2)

inst_37:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1c8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79c8; op2val:0x8000;
   valaddr_reg:x4; val_offset:24*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 24*FLEN/8, x6, x1, x2)

inst_38:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1c8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79c8; op2val:0x8000;
   valaddr_reg:x4; val_offset:26*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 26*FLEN/8, x6, x1, x2)

inst_39:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1c8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79c8; op2val:0x8000;
   valaddr_reg:x4; val_offset:28*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 28*FLEN/8, x6, x1, x2)

inst_40:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x397 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b97; op2val:0x8000;
   valaddr_reg:x4; val_offset:30*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 30*FLEN/8, x6, x1, x2)

inst_41:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x397 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b97; op2val:0x8000;
   valaddr_reg:x4; val_offset:32*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 32*FLEN/8, x6, x1, x2)

inst_42:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x397 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b97; op2val:0x8000;
   valaddr_reg:x4; val_offset:34*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 34*FLEN/8, x6, x1, x2)

inst_43:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x397 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b97; op2val:0x8000;
   valaddr_reg:x4; val_offset:36*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 36*FLEN/8, x6, x1, x2)

inst_44:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x397 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b97; op2val:0x8000;
   valaddr_reg:x4; val_offset:38*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 38*FLEN/8, x6, x1, x2)

inst_45:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x31d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x771d; op2val:0x8000;
   valaddr_reg:x4; val_offset:40*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 40*FLEN/8, x6, x1, x2)

inst_46:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x31d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x771d; op2val:0x8000;
   valaddr_reg:x4; val_offset:42*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 42*FLEN/8, x6, x1, x2)

inst_47:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x31d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x771d; op2val:0x8000;
   valaddr_reg:x4; val_offset:44*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 44*FLEN/8, x6, x1, x2)

inst_48:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x31d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x771d; op2val:0x8000;
   valaddr_reg:x4; val_offset:46*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 46*FLEN/8, x6, x1, x2)

inst_49:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x31d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x771d; op2val:0x8000;
   valaddr_reg:x4; val_offset:48*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 48*FLEN/8, x6, x1, x2)

inst_50:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x099 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6899; op2val:0x8000;
   valaddr_reg:x4; val_offset:50*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 50*FLEN/8, x6, x1, x2)

inst_51:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x099 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6899; op2val:0x8000;
   valaddr_reg:x4; val_offset:52*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 52*FLEN/8, x6, x1, x2)

inst_52:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x099 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6899; op2val:0x8000;
   valaddr_reg:x4; val_offset:54*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 54*FLEN/8, x6, x1, x2)

inst_53:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x099 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6899; op2val:0x8000;
   valaddr_reg:x4; val_offset:56*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 56*FLEN/8, x6, x1, x2)

inst_54:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x099 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6899; op2val:0x8000;
   valaddr_reg:x4; val_offset:58*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 58*FLEN/8, x6, x1, x2)

inst_55:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x36f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x776f; op2val:0x8000;
   valaddr_reg:x4; val_offset:60*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 60*FLEN/8, x6, x1, x2)

inst_56:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x36f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x776f; op2val:0x8000;
   valaddr_reg:x4; val_offset:62*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 62*FLEN/8, x6, x1, x2)

inst_57:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x36f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x776f; op2val:0x8000;
   valaddr_reg:x4; val_offset:64*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 64*FLEN/8, x6, x1, x2)

inst_58:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x36f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x776f; op2val:0x8000;
   valaddr_reg:x4; val_offset:66*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 66*FLEN/8, x6, x1, x2)

inst_59:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x36f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x776f; op2val:0x8000;
   valaddr_reg:x4; val_offset:68*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 68*FLEN/8, x6, x1, x2)

inst_60:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x213 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7613; op2val:0x8000;
   valaddr_reg:x4; val_offset:70*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 70*FLEN/8, x6, x1, x2)

inst_61:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x213 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7613; op2val:0x8000;
   valaddr_reg:x4; val_offset:72*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 72*FLEN/8, x6, x1, x2)

inst_62:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x213 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7613; op2val:0x8000;
   valaddr_reg:x4; val_offset:74*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 74*FLEN/8, x6, x1, x2)

inst_63:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x213 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7613; op2val:0x8000;
   valaddr_reg:x4; val_offset:76*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 76*FLEN/8, x6, x1, x2)

inst_64:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x213 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7613; op2val:0x8000;
   valaddr_reg:x4; val_offset:78*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 78*FLEN/8, x6, x1, x2)

inst_65:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x034 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7834; op2val:0x8000;
   valaddr_reg:x4; val_offset:80*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 80*FLEN/8, x6, x1, x2)

inst_66:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x034 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7834; op2val:0x8000;
   valaddr_reg:x4; val_offset:82*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 82*FLEN/8, x6, x1, x2)

inst_67:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x034 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7834; op2val:0x8000;
   valaddr_reg:x4; val_offset:84*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 84*FLEN/8, x6, x1, x2)

inst_68:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x034 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7834; op2val:0x8000;
   valaddr_reg:x4; val_offset:86*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 86*FLEN/8, x6, x1, x2)

inst_69:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x034 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7834; op2val:0x8000;
   valaddr_reg:x4; val_offset:88*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 88*FLEN/8, x6, x1, x2)

inst_70:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x38d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x738d; op2val:0x8000;
   valaddr_reg:x4; val_offset:90*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 90*FLEN/8, x6, x1, x2)

inst_71:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x38d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x738d; op2val:0x8000;
   valaddr_reg:x4; val_offset:92*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 92*FLEN/8, x6, x1, x2)

inst_72:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x38d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x738d; op2val:0x8000;
   valaddr_reg:x4; val_offset:94*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 94*FLEN/8, x6, x1, x2)

inst_73:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x38d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x738d; op2val:0x8000;
   valaddr_reg:x4; val_offset:96*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 96*FLEN/8, x6, x1, x2)

inst_74:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x38d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x738d; op2val:0x8000;
   valaddr_reg:x4; val_offset:98*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 98*FLEN/8, x6, x1, x2)

inst_75:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x133 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7533; op2val:0x8000;
   valaddr_reg:x4; val_offset:100*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 100*FLEN/8, x6, x1, x2)

inst_76:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x133 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7533; op2val:0x8000;
   valaddr_reg:x4; val_offset:102*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 102*FLEN/8, x6, x1, x2)

inst_77:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x133 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7533; op2val:0x8000;
   valaddr_reg:x4; val_offset:104*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 104*FLEN/8, x6, x1, x2)

inst_78:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x133 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7533; op2val:0x8000;
   valaddr_reg:x4; val_offset:106*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 106*FLEN/8, x6, x1, x2)

inst_79:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x133 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7533; op2val:0x8000;
   valaddr_reg:x4; val_offset:108*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 108*FLEN/8, x6, x1, x2)

inst_80:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x014 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7814; op2val:0x8000;
   valaddr_reg:x4; val_offset:110*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 110*FLEN/8, x6, x1, x2)

inst_81:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x014 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7814; op2val:0x8000;
   valaddr_reg:x4; val_offset:112*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 112*FLEN/8, x6, x1, x2)

inst_82:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x014 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7814; op2val:0x8000;
   valaddr_reg:x4; val_offset:114*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 114*FLEN/8, x6, x1, x2)

inst_83:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x014 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7814; op2val:0x8000;
   valaddr_reg:x4; val_offset:116*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 116*FLEN/8, x6, x1, x2)

inst_84:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x014 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7814; op2val:0x8000;
   valaddr_reg:x4; val_offset:118*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 118*FLEN/8, x6, x1, x2)

inst_85:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x164 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7964; op2val:0x8000;
   valaddr_reg:x4; val_offset:120*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 120*FLEN/8, x6, x1, x2)

inst_86:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x164 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7964; op2val:0x8000;
   valaddr_reg:x4; val_offset:122*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 122*FLEN/8, x6, x1, x2)

inst_87:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x164 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7964; op2val:0x8000;
   valaddr_reg:x4; val_offset:124*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 124*FLEN/8, x6, x1, x2)

inst_88:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x164 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7964; op2val:0x8000;
   valaddr_reg:x4; val_offset:126*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 126*FLEN/8, x6, x1, x2)

inst_89:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x164 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7964; op2val:0x8000;
   valaddr_reg:x4; val_offset:128*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 128*FLEN/8, x6, x1, x2)

inst_90:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x325 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b25; op2val:0x8000;
   valaddr_reg:x4; val_offset:130*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 130*FLEN/8, x6, x1, x2)

inst_91:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x325 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b25; op2val:0x8000;
   valaddr_reg:x4; val_offset:132*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 132*FLEN/8, x6, x1, x2)

inst_92:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x325 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b25; op2val:0x8000;
   valaddr_reg:x4; val_offset:134*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 134*FLEN/8, x6, x1, x2)

inst_93:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x325 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b25; op2val:0x8000;
   valaddr_reg:x4; val_offset:136*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 136*FLEN/8, x6, x1, x2)

inst_94:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x325 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b25; op2val:0x8000;
   valaddr_reg:x4; val_offset:138*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 138*FLEN/8, x6, x1, x2)

inst_95:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1df and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79df; op2val:0x8000;
   valaddr_reg:x4; val_offset:140*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 140*FLEN/8, x6, x1, x2)

inst_96:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1df and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79df; op2val:0x8000;
   valaddr_reg:x4; val_offset:142*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 142*FLEN/8, x6, x1, x2)

inst_97:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1df and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79df; op2val:0x8000;
   valaddr_reg:x4; val_offset:144*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 144*FLEN/8, x6, x1, x2)

inst_98:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1df and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79df; op2val:0x8000;
   valaddr_reg:x4; val_offset:146*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 146*FLEN/8, x6, x1, x2)

inst_99:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1df and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79df; op2val:0x8000;
   valaddr_reg:x4; val_offset:148*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 148*FLEN/8, x6, x1, x2)

inst_100:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x219 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a19; op2val:0x8000;
   valaddr_reg:x4; val_offset:150*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 150*FLEN/8, x6, x1, x2)

inst_101:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x219 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a19; op2val:0x8000;
   valaddr_reg:x4; val_offset:152*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 152*FLEN/8, x6, x1, x2)

inst_102:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x219 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a19; op2val:0x8000;
   valaddr_reg:x4; val_offset:154*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 154*FLEN/8, x6, x1, x2)

inst_103:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x219 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a19; op2val:0x8000;
   valaddr_reg:x4; val_offset:156*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 156*FLEN/8, x6, x1, x2)

inst_104:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x219 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a19; op2val:0x8000;
   valaddr_reg:x4; val_offset:158*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 158*FLEN/8, x6, x1, x2)

inst_105:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1a8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x75a8; op2val:0x0;
   valaddr_reg:x4; val_offset:160*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 160*FLEN/8, x6, x1, x2)

inst_106:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1a8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x75a8; op2val:0x0;
   valaddr_reg:x4; val_offset:162*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 162*FLEN/8, x6, x1, x2)

inst_107:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1a8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x75a8; op2val:0x0;
   valaddr_reg:x4; val_offset:164*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 164*FLEN/8, x6, x1, x2)

inst_108:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1a8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x75a8; op2val:0x0;
   valaddr_reg:x4; val_offset:166*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 166*FLEN/8, x6, x1, x2)

inst_109:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1a8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x75a8; op2val:0x0;
   valaddr_reg:x4; val_offset:168*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 168*FLEN/8, x6, x1, x2)

inst_110:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3b1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bb1; op2val:0x0;
   valaddr_reg:x4; val_offset:170*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 170*FLEN/8, x6, x1, x2)

inst_111:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3b1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bb1; op2val:0x0;
   valaddr_reg:x4; val_offset:172*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 172*FLEN/8, x6, x1, x2)

inst_112:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3b1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bb1; op2val:0x0;
   valaddr_reg:x4; val_offset:174*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 174*FLEN/8, x6, x1, x2)

inst_113:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3b1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bb1; op2val:0x0;
   valaddr_reg:x4; val_offset:176*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 176*FLEN/8, x6, x1, x2)

inst_114:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3b1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bb1; op2val:0x0;
   valaddr_reg:x4; val_offset:178*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 178*FLEN/8, x6, x1, x2)

inst_115:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x207 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a07; op2val:0x0;
   valaddr_reg:x4; val_offset:180*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 180*FLEN/8, x6, x1, x2)

inst_116:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x207 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a07; op2val:0x0;
   valaddr_reg:x4; val_offset:182*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 182*FLEN/8, x6, x1, x2)

inst_117:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x207 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a07; op2val:0x0;
   valaddr_reg:x4; val_offset:184*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 184*FLEN/8, x6, x1, x2)

inst_118:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x207 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a07; op2val:0x0;
   valaddr_reg:x4; val_offset:186*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 186*FLEN/8, x6, x1, x2)

inst_119:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x207 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a07; op2val:0x0;
   valaddr_reg:x4; val_offset:188*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 188*FLEN/8, x6, x1, x2)

inst_120:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x361 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7761; op2val:0x0;
   valaddr_reg:x4; val_offset:190*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 190*FLEN/8, x6, x1, x2)

inst_121:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x361 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7761; op2val:0x0;
   valaddr_reg:x4; val_offset:192*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 192*FLEN/8, x6, x1, x2)

inst_122:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x361 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7761; op2val:0x0;
   valaddr_reg:x4; val_offset:194*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 194*FLEN/8, x6, x1, x2)

inst_123:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x361 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7761; op2val:0x0;
   valaddr_reg:x4; val_offset:196*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 196*FLEN/8, x6, x1, x2)

inst_124:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x361 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7761; op2val:0x0;
   valaddr_reg:x4; val_offset:198*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 198*FLEN/8, x6, x1, x2)

inst_125:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x77d6; op2val:0x0;
   valaddr_reg:x4; val_offset:200*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 200*FLEN/8, x6, x1, x2)

inst_126:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x77d6; op2val:0x0;
   valaddr_reg:x4; val_offset:202*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 202*FLEN/8, x6, x1, x2)

inst_127:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x77d6; op2val:0x0;
   valaddr_reg:x4; val_offset:204*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 204*FLEN/8, x6, x1, x2)

inst_128:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x77d6; op2val:0x0;
   valaddr_reg:x4; val_offset:206*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 206*FLEN/8, x6, x1, x2)

inst_129:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x77d6; op2val:0x0;
   valaddr_reg:x4; val_offset:208*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 208*FLEN/8, x6, x1, x2)

inst_130:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7801; op2val:0x0;
   valaddr_reg:x4; val_offset:210*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 210*FLEN/8, x6, x1, x2)

inst_131:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7801; op2val:0x0;
   valaddr_reg:x4; val_offset:212*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 212*FLEN/8, x6, x1, x2)

inst_132:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7801; op2val:0x0;
   valaddr_reg:x4; val_offset:214*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 214*FLEN/8, x6, x1, x2)

inst_133:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7801; op2val:0x0;
   valaddr_reg:x4; val_offset:216*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 216*FLEN/8, x6, x1, x2)

inst_134:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7801; op2val:0x0;
   valaddr_reg:x4; val_offset:218*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 218*FLEN/8, x6, x1, x2)

inst_135:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x75a9; op2val:0x0;
   valaddr_reg:x4; val_offset:220*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 220*FLEN/8, x6, x1, x2)

inst_136:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x75a9; op2val:0x0;
   valaddr_reg:x4; val_offset:222*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 222*FLEN/8, x6, x1, x2)

inst_137:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x75a9; op2val:0x0;
   valaddr_reg:x4; val_offset:224*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 224*FLEN/8, x6, x1, x2)

inst_138:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x75a9; op2val:0x0;
   valaddr_reg:x4; val_offset:226*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 226*FLEN/8, x6, x1, x2)

inst_139:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x75a9; op2val:0x0;
   valaddr_reg:x4; val_offset:228*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 228*FLEN/8, x6, x1, x2)

inst_140:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x331 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b31; op2val:0x0;
   valaddr_reg:x4; val_offset:230*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 230*FLEN/8, x6, x1, x2)

inst_141:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x331 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b31; op2val:0x0;
   valaddr_reg:x4; val_offset:232*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 232*FLEN/8, x6, x1, x2)

inst_142:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x331 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b31; op2val:0x0;
   valaddr_reg:x4; val_offset:234*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 234*FLEN/8, x6, x1, x2)

inst_143:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x331 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b31; op2val:0x0;
   valaddr_reg:x4; val_offset:236*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 236*FLEN/8, x6, x1, x2)

inst_144:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x331 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b31; op2val:0x0;
   valaddr_reg:x4; val_offset:238*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 238*FLEN/8, x6, x1, x2)

inst_145:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x08a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x788a; op2val:0x0;
   valaddr_reg:x4; val_offset:240*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 240*FLEN/8, x6, x1, x2)

inst_146:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x08a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x788a; op2val:0x0;
   valaddr_reg:x4; val_offset:242*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 242*FLEN/8, x6, x1, x2)

inst_147:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x08a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x788a; op2val:0x0;
   valaddr_reg:x4; val_offset:244*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 244*FLEN/8, x6, x1, x2)

inst_148:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x08a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x788a; op2val:0x0;
   valaddr_reg:x4; val_offset:246*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 246*FLEN/8, x6, x1, x2)

inst_149:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x08a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x788a; op2val:0x0;
   valaddr_reg:x4; val_offset:248*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 248*FLEN/8, x6, x1, x2)

inst_150:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1c9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79c9; op2val:0x0;
   valaddr_reg:x4; val_offset:250*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 250*FLEN/8, x6, x1, x2)

inst_151:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1c9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79c9; op2val:0x0;
   valaddr_reg:x4; val_offset:252*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 252*FLEN/8, x6, x1, x2)

inst_152:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1c9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79c9; op2val:0x0;
   valaddr_reg:x4; val_offset:254*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 254*FLEN/8, x6, x1, x2)

inst_153:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1c9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79c9; op2val:0x0;
   valaddr_reg:x4; val_offset:256*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 256*FLEN/8, x6, x1, x2)

inst_154:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1c9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79c9; op2val:0x0;
   valaddr_reg:x4; val_offset:258*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 258*FLEN/8, x6, x1, x2)

inst_155:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x318 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7318; op2val:0x0;
   valaddr_reg:x4; val_offset:260*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 260*FLEN/8, x6, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_156:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x318 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7318; op2val:0x0;
   valaddr_reg:x4; val_offset:262*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 262*FLEN/8, x6, x1, x2)

inst_157:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x318 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7318; op2val:0x0;
   valaddr_reg:x4; val_offset:264*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 264*FLEN/8, x6, x1, x2)

inst_158:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x318 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7318; op2val:0x0;
   valaddr_reg:x4; val_offset:266*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 266*FLEN/8, x6, x1, x2)

inst_159:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x318 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7318; op2val:0x0;
   valaddr_reg:x4; val_offset:268*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 268*FLEN/8, x6, x1, x2)

inst_160:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x198 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7998; op2val:0x0;
   valaddr_reg:x4; val_offset:270*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 270*FLEN/8, x6, x1, x2)

inst_161:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x198 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7998; op2val:0x0;
   valaddr_reg:x4; val_offset:272*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 272*FLEN/8, x6, x1, x2)

inst_162:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x198 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7998; op2val:0x0;
   valaddr_reg:x4; val_offset:274*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 274*FLEN/8, x6, x1, x2)

inst_163:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x198 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7998; op2val:0x0;
   valaddr_reg:x4; val_offset:276*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 276*FLEN/8, x6, x1, x2)

inst_164:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x198 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7998; op2val:0x0;
   valaddr_reg:x4; val_offset:278*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 278*FLEN/8, x6, x1, x2)

inst_165:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x342 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b42; op2val:0x0;
   valaddr_reg:x4; val_offset:280*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 280*FLEN/8, x6, x1, x2)

inst_166:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x342 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b42; op2val:0x0;
   valaddr_reg:x4; val_offset:282*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 282*FLEN/8, x6, x1, x2)

inst_167:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x342 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b42; op2val:0x0;
   valaddr_reg:x4; val_offset:284*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 284*FLEN/8, x6, x1, x2)

inst_168:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x342 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b42; op2val:0x0;
   valaddr_reg:x4; val_offset:286*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 286*FLEN/8, x6, x1, x2)

inst_169:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x342 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b42; op2val:0x0;
   valaddr_reg:x4; val_offset:288*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 288*FLEN/8, x6, x1, x2)

inst_170:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x349 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b49; op2val:0x0;
   valaddr_reg:x4; val_offset:290*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 290*FLEN/8, x6, x1, x2)

inst_171:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x349 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b49; op2val:0x0;
   valaddr_reg:x4; val_offset:292*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 292*FLEN/8, x6, x1, x2)

inst_172:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x349 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b49; op2val:0x0;
   valaddr_reg:x4; val_offset:294*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 294*FLEN/8, x6, x1, x2)

inst_173:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x349 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b49; op2val:0x0;
   valaddr_reg:x4; val_offset:296*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 296*FLEN/8, x6, x1, x2)

inst_174:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x349 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b49; op2val:0x0;
   valaddr_reg:x4; val_offset:298*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 298*FLEN/8, x6, x1, x2)

inst_175:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ba7; op2val:0x8000;
   valaddr_reg:x4; val_offset:300*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 300*FLEN/8, x6, x1, x2)

inst_176:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ba7; op2val:0x8000;
   valaddr_reg:x4; val_offset:302*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 302*FLEN/8, x6, x1, x2)

inst_177:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ba7; op2val:0x8000;
   valaddr_reg:x4; val_offset:304*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 304*FLEN/8, x6, x1, x2)

inst_178:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ba7; op2val:0x8000;
   valaddr_reg:x4; val_offset:306*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 306*FLEN/8, x6, x1, x2)

inst_179:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ba7; op2val:0x8000;
   valaddr_reg:x4; val_offset:308*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 308*FLEN/8, x6, x1, x2)

inst_180:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x008 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7808; op2val:0x8000;
   valaddr_reg:x4; val_offset:310*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 310*FLEN/8, x6, x1, x2)

inst_181:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x008 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7808; op2val:0x8000;
   valaddr_reg:x4; val_offset:312*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 312*FLEN/8, x6, x1, x2)

inst_182:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x008 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7808; op2val:0x8000;
   valaddr_reg:x4; val_offset:314*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 314*FLEN/8, x6, x1, x2)

inst_183:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x008 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7808; op2val:0x8000;
   valaddr_reg:x4; val_offset:316*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 316*FLEN/8, x6, x1, x2)

inst_184:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x008 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7808; op2val:0x8000;
   valaddr_reg:x4; val_offset:318*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 318*FLEN/8, x6, x1, x2)

inst_185:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x135 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7935; op2val:0x8000;
   valaddr_reg:x4; val_offset:320*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 320*FLEN/8, x6, x1, x2)

inst_186:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x135 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7935; op2val:0x8000;
   valaddr_reg:x4; val_offset:322*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 322*FLEN/8, x6, x1, x2)

inst_187:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x135 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7935; op2val:0x8000;
   valaddr_reg:x4; val_offset:324*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 324*FLEN/8, x6, x1, x2)

inst_188:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x135 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7935; op2val:0x8000;
   valaddr_reg:x4; val_offset:326*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 326*FLEN/8, x6, x1, x2)

inst_189:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x135 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7935; op2val:0x8000;
   valaddr_reg:x4; val_offset:328*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 328*FLEN/8, x6, x1, x2)

inst_190:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0fc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74fc; op2val:0x8000;
   valaddr_reg:x4; val_offset:330*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 330*FLEN/8, x6, x1, x2)

inst_191:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0fc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74fc; op2val:0x8000;
   valaddr_reg:x4; val_offset:332*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 332*FLEN/8, x6, x1, x2)

inst_192:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0fc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74fc; op2val:0x8000;
   valaddr_reg:x4; val_offset:334*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 334*FLEN/8, x6, x1, x2)

inst_193:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0fc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74fc; op2val:0x8000;
   valaddr_reg:x4; val_offset:336*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 336*FLEN/8, x6, x1, x2)

inst_194:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0fc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74fc; op2val:0x8000;
   valaddr_reg:x4; val_offset:338*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 338*FLEN/8, x6, x1, x2)

inst_195:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x017 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7817; op2val:0x8000;
   valaddr_reg:x4; val_offset:340*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 340*FLEN/8, x6, x1, x2)

inst_196:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x017 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7817; op2val:0x8000;
   valaddr_reg:x4; val_offset:342*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 342*FLEN/8, x6, x1, x2)

inst_197:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x017 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7817; op2val:0x8000;
   valaddr_reg:x4; val_offset:344*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 344*FLEN/8, x6, x1, x2)

inst_198:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x017 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7817; op2val:0x8000;
   valaddr_reg:x4; val_offset:346*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 346*FLEN/8, x6, x1, x2)

inst_199:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x017 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7817; op2val:0x8000;
   valaddr_reg:x4; val_offset:348*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 348*FLEN/8, x6, x1, x2)

inst_200:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0fb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78fb; op2val:0x8000;
   valaddr_reg:x4; val_offset:350*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 350*FLEN/8, x6, x1, x2)

inst_201:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0fb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78fb; op2val:0x8000;
   valaddr_reg:x4; val_offset:352*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 352*FLEN/8, x6, x1, x2)

inst_202:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0fb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78fb; op2val:0x8000;
   valaddr_reg:x4; val_offset:354*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 354*FLEN/8, x6, x1, x2)

inst_203:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0fb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78fb; op2val:0x8000;
   valaddr_reg:x4; val_offset:356*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 356*FLEN/8, x6, x1, x2)

inst_204:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0fb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78fb; op2val:0x8000;
   valaddr_reg:x4; val_offset:358*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 358*FLEN/8, x6, x1, x2)

inst_205:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x28f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a8f; op2val:0x8000;
   valaddr_reg:x4; val_offset:360*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 360*FLEN/8, x6, x1, x2)

inst_206:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x28f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a8f; op2val:0x8000;
   valaddr_reg:x4; val_offset:362*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 362*FLEN/8, x6, x1, x2)

inst_207:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x28f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a8f; op2val:0x8000;
   valaddr_reg:x4; val_offset:364*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 364*FLEN/8, x6, x1, x2)

inst_208:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x28f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a8f; op2val:0x8000;
   valaddr_reg:x4; val_offset:366*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 366*FLEN/8, x6, x1, x2)

inst_209:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x28f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a8f; op2val:0x8000;
   valaddr_reg:x4; val_offset:368*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 368*FLEN/8, x6, x1, x2)

inst_210:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x341 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b41; op2val:0x8000;
   valaddr_reg:x4; val_offset:370*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 370*FLEN/8, x6, x1, x2)

inst_211:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x341 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b41; op2val:0x8000;
   valaddr_reg:x4; val_offset:372*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 372*FLEN/8, x6, x1, x2)

inst_212:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x341 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b41; op2val:0x8000;
   valaddr_reg:x4; val_offset:374*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 374*FLEN/8, x6, x1, x2)

inst_213:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x341 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b41; op2val:0x8000;
   valaddr_reg:x4; val_offset:376*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 376*FLEN/8, x6, x1, x2)

inst_214:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x341 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b41; op2val:0x8000;
   valaddr_reg:x4; val_offset:378*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 378*FLEN/8, x6, x1, x2)

inst_215:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79f4; op2val:0x8000;
   valaddr_reg:x4; val_offset:380*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 380*FLEN/8, x6, x1, x2)

inst_216:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79f4; op2val:0x8000;
   valaddr_reg:x4; val_offset:382*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 382*FLEN/8, x6, x1, x2)

inst_217:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79f4; op2val:0x8000;
   valaddr_reg:x4; val_offset:384*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 384*FLEN/8, x6, x1, x2)

inst_218:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79f4; op2val:0x8000;
   valaddr_reg:x4; val_offset:386*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 386*FLEN/8, x6, x1, x2)

inst_219:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79f4; op2val:0x8000;
   valaddr_reg:x4; val_offset:388*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 388*FLEN/8, x6, x1, x2)

inst_220:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x138 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7938; op2val:0x8000;
   valaddr_reg:x4; val_offset:390*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 390*FLEN/8, x6, x1, x2)

inst_221:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x138 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7938; op2val:0x8000;
   valaddr_reg:x4; val_offset:392*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 392*FLEN/8, x6, x1, x2)

inst_222:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x138 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7938; op2val:0x8000;
   valaddr_reg:x4; val_offset:394*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 394*FLEN/8, x6, x1, x2)

inst_223:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x138 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7938; op2val:0x8000;
   valaddr_reg:x4; val_offset:396*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 396*FLEN/8, x6, x1, x2)

inst_224:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x138 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7938; op2val:0x8000;
   valaddr_reg:x4; val_offset:398*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 398*FLEN/8, x6, x1, x2)

inst_225:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x33f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x733f; op2val:0x8000;
   valaddr_reg:x4; val_offset:400*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 400*FLEN/8, x6, x1, x2)

inst_226:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x33f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x733f; op2val:0x8000;
   valaddr_reg:x4; val_offset:402*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 402*FLEN/8, x6, x1, x2)

inst_227:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x33f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x733f; op2val:0x8000;
   valaddr_reg:x4; val_offset:404*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 404*FLEN/8, x6, x1, x2)

inst_228:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x33f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x733f; op2val:0x8000;
   valaddr_reg:x4; val_offset:406*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 406*FLEN/8, x6, x1, x2)

inst_229:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x33f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x733f; op2val:0x8000;
   valaddr_reg:x4; val_offset:408*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 408*FLEN/8, x6, x1, x2)

inst_230:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x2cc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6ecc; op2val:0x8000;
   valaddr_reg:x4; val_offset:410*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 410*FLEN/8, x6, x1, x2)

inst_231:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x2cc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6ecc; op2val:0x8000;
   valaddr_reg:x4; val_offset:412*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 412*FLEN/8, x6, x1, x2)

inst_232:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x2cc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6ecc; op2val:0x8000;
   valaddr_reg:x4; val_offset:414*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 414*FLEN/8, x6, x1, x2)

inst_233:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x2cc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6ecc; op2val:0x8000;
   valaddr_reg:x4; val_offset:416*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 416*FLEN/8, x6, x1, x2)

inst_234:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x2cc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6ecc; op2val:0x8000;
   valaddr_reg:x4; val_offset:418*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 418*FLEN/8, x6, x1, x2)

inst_235:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2d4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ad4; op2val:0x8000;
   valaddr_reg:x4; val_offset:420*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 420*FLEN/8, x6, x1, x2)

inst_236:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2d4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ad4; op2val:0x8000;
   valaddr_reg:x4; val_offset:422*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 422*FLEN/8, x6, x1, x2)

inst_237:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2d4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ad4; op2val:0x8000;
   valaddr_reg:x4; val_offset:424*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 424*FLEN/8, x6, x1, x2)

inst_238:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2d4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ad4; op2val:0x8000;
   valaddr_reg:x4; val_offset:426*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 426*FLEN/8, x6, x1, x2)

inst_239:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2d4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ad4; op2val:0x8000;
   valaddr_reg:x4; val_offset:428*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 428*FLEN/8, x6, x1, x2)

inst_240:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x2bb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x72bb; op2val:0x8000;
   valaddr_reg:x4; val_offset:430*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 430*FLEN/8, x6, x1, x2)

inst_241:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x2bb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x72bb; op2val:0x8000;
   valaddr_reg:x4; val_offset:432*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 432*FLEN/8, x6, x1, x2)

inst_242:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x2bb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x72bb; op2val:0x8000;
   valaddr_reg:x4; val_offset:434*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 434*FLEN/8, x6, x1, x2)

inst_243:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x2bb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x72bb; op2val:0x8000;
   valaddr_reg:x4; val_offset:436*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 436*FLEN/8, x6, x1, x2)

inst_244:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x2bb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x72bb; op2val:0x8000;
   valaddr_reg:x4; val_offset:438*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 438*FLEN/8, x6, x1, x2)

inst_245:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x76c3; op2val:0x0;
   valaddr_reg:x4; val_offset:440*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 440*FLEN/8, x6, x1, x2)

inst_246:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x76c3; op2val:0x0;
   valaddr_reg:x4; val_offset:442*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 442*FLEN/8, x6, x1, x2)

inst_247:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x76c3; op2val:0x0;
   valaddr_reg:x4; val_offset:444*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 444*FLEN/8, x6, x1, x2)

inst_248:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x76c3; op2val:0x0;
   valaddr_reg:x4; val_offset:446*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 446*FLEN/8, x6, x1, x2)

inst_249:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x76c3; op2val:0x0;
   valaddr_reg:x4; val_offset:448*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 448*FLEN/8, x6, x1, x2)

inst_250:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x014 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6814; op2val:0x0;
   valaddr_reg:x4; val_offset:450*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 450*FLEN/8, x6, x1, x2)

inst_251:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x014 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6814; op2val:0x0;
   valaddr_reg:x4; val_offset:452*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 452*FLEN/8, x6, x1, x2)

inst_252:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x014 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6814; op2val:0x0;
   valaddr_reg:x4; val_offset:454*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 454*FLEN/8, x6, x1, x2)

inst_253:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x014 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6814; op2val:0x0;
   valaddr_reg:x4; val_offset:456*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 456*FLEN/8, x6, x1, x2)

inst_254:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x014 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6814; op2val:0x0;
   valaddr_reg:x4; val_offset:458*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 458*FLEN/8, x6, x1, x2)

inst_255:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x17f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x717f; op2val:0x0;
   valaddr_reg:x4; val_offset:460*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 460*FLEN/8, x6, x1, x2)

inst_256:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x17f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x717f; op2val:0x0;
   valaddr_reg:x4; val_offset:462*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 462*FLEN/8, x6, x1, x2)

inst_257:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x17f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x717f; op2val:0x0;
   valaddr_reg:x4; val_offset:464*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 464*FLEN/8, x6, x1, x2)

inst_258:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x17f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x717f; op2val:0x0;
   valaddr_reg:x4; val_offset:466*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 466*FLEN/8, x6, x1, x2)

inst_259:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x17f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x717f; op2val:0x0;
   valaddr_reg:x4; val_offset:468*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 468*FLEN/8, x6, x1, x2)

inst_260:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x14d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6d4d; op2val:0x0;
   valaddr_reg:x4; val_offset:470*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 470*FLEN/8, x6, x1, x2)

inst_261:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x14d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6d4d; op2val:0x0;
   valaddr_reg:x4; val_offset:472*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 472*FLEN/8, x6, x1, x2)

inst_262:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x14d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6d4d; op2val:0x0;
   valaddr_reg:x4; val_offset:474*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 474*FLEN/8, x6, x1, x2)

inst_263:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x14d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6d4d; op2val:0x0;
   valaddr_reg:x4; val_offset:476*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 476*FLEN/8, x6, x1, x2)

inst_264:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x14d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6d4d; op2val:0x0;
   valaddr_reg:x4; val_offset:478*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 478*FLEN/8, x6, x1, x2)

inst_265:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x27d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x667d; op2val:0x0;
   valaddr_reg:x4; val_offset:480*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 480*FLEN/8, x6, x1, x2)

inst_266:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x27d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x667d; op2val:0x0;
   valaddr_reg:x4; val_offset:482*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 482*FLEN/8, x6, x1, x2)

inst_267:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x27d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x667d; op2val:0x0;
   valaddr_reg:x4; val_offset:484*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 484*FLEN/8, x6, x1, x2)

inst_268:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x27d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x667d; op2val:0x0;
   valaddr_reg:x4; val_offset:486*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 486*FLEN/8, x6, x1, x2)

inst_269:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x27d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x667d; op2val:0x0;
   valaddr_reg:x4; val_offset:488*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 488*FLEN/8, x6, x1, x2)

inst_270:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x16a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x656a; op2val:0x0;
   valaddr_reg:x4; val_offset:490*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 490*FLEN/8, x6, x1, x2)

inst_271:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x16a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x656a; op2val:0x0;
   valaddr_reg:x4; val_offset:492*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 492*FLEN/8, x6, x1, x2)

inst_272:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x16a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x656a; op2val:0x0;
   valaddr_reg:x4; val_offset:494*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 494*FLEN/8, x6, x1, x2)

inst_273:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x16a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x656a; op2val:0x0;
   valaddr_reg:x4; val_offset:496*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 496*FLEN/8, x6, x1, x2)

inst_274:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x16a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x656a; op2val:0x0;
   valaddr_reg:x4; val_offset:498*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 498*FLEN/8, x6, x1, x2)

inst_275:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x280 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a80; op2val:0x0;
   valaddr_reg:x4; val_offset:500*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 500*FLEN/8, x6, x1, x2)

inst_276:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x280 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a80; op2val:0x0;
   valaddr_reg:x4; val_offset:502*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 502*FLEN/8, x6, x1, x2)

inst_277:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x280 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a80; op2val:0x0;
   valaddr_reg:x4; val_offset:504*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 504*FLEN/8, x6, x1, x2)

inst_278:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x280 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a80; op2val:0x0;
   valaddr_reg:x4; val_offset:506*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 506*FLEN/8, x6, x1, x2)

inst_279:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x280 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a80; op2val:0x0;
   valaddr_reg:x4; val_offset:508*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 508*FLEN/8, x6, x1, x2)

inst_280:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x1e0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x71e0; op2val:0x0;
   valaddr_reg:x4; val_offset:510*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 510*FLEN/8, x6, x1, x2)

inst_281:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x1e0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x71e0; op2val:0x0;
   valaddr_reg:x4; val_offset:512*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 512*FLEN/8, x6, x1, x2)

inst_282:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x1e0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x71e0; op2val:0x0;
   valaddr_reg:x4; val_offset:514*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 514*FLEN/8, x6, x1, x2)

inst_283:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x1e0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x71e0; op2val:0x0;
   valaddr_reg:x4; val_offset:516*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 516*FLEN/8, x6, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_284:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x1e0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x71e0; op2val:0x0;
   valaddr_reg:x4; val_offset:518*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 518*FLEN/8, x6, x1, x2)

inst_285:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x22a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x762a; op2val:0x0;
   valaddr_reg:x4; val_offset:520*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 520*FLEN/8, x6, x1, x2)

inst_286:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x22a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x762a; op2val:0x0;
   valaddr_reg:x4; val_offset:522*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 522*FLEN/8, x6, x1, x2)

inst_287:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x22a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x762a; op2val:0x0;
   valaddr_reg:x4; val_offset:524*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 524*FLEN/8, x6, x1, x2)

inst_288:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x22a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x762a; op2val:0x0;
   valaddr_reg:x4; val_offset:526*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 526*FLEN/8, x6, x1, x2)

inst_289:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x22a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x762a; op2val:0x0;
   valaddr_reg:x4; val_offset:528*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 528*FLEN/8, x6, x1, x2)

inst_290:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bea; op2val:0x0;
   valaddr_reg:x4; val_offset:530*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 530*FLEN/8, x6, x1, x2)

inst_291:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bea; op2val:0x0;
   valaddr_reg:x4; val_offset:532*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 532*FLEN/8, x6, x1, x2)

inst_292:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bea; op2val:0x0;
   valaddr_reg:x4; val_offset:534*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 534*FLEN/8, x6, x1, x2)

inst_293:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bea; op2val:0x0;
   valaddr_reg:x4; val_offset:536*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 536*FLEN/8, x6, x1, x2)

inst_294:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bea; op2val:0x0;
   valaddr_reg:x4; val_offset:538*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 538*FLEN/8, x6, x1, x2)

inst_295:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x0a4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x68a4; op2val:0x0;
   valaddr_reg:x4; val_offset:540*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 540*FLEN/8, x6, x1, x2)

inst_296:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x0a4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x68a4; op2val:0x0;
   valaddr_reg:x4; val_offset:542*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 542*FLEN/8, x6, x1, x2)

inst_297:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x0a4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x68a4; op2val:0x0;
   valaddr_reg:x4; val_offset:544*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 544*FLEN/8, x6, x1, x2)

inst_298:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x0a4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x68a4; op2val:0x0;
   valaddr_reg:x4; val_offset:546*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 546*FLEN/8, x6, x1, x2)

inst_299:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x0a4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x68a4; op2val:0x0;
   valaddr_reg:x4; val_offset:548*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 548*FLEN/8, x6, x1, x2)

inst_300:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78eb; op2val:0x0;
   valaddr_reg:x4; val_offset:550*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 550*FLEN/8, x6, x1, x2)

inst_301:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78eb; op2val:0x0;
   valaddr_reg:x4; val_offset:552*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 552*FLEN/8, x6, x1, x2)

inst_302:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78eb; op2val:0x0;
   valaddr_reg:x4; val_offset:554*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 554*FLEN/8, x6, x1, x2)

inst_303:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78eb; op2val:0x0;
   valaddr_reg:x4; val_offset:556*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 556*FLEN/8, x6, x1, x2)

inst_304:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78eb; op2val:0x0;
   valaddr_reg:x4; val_offset:558*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 558*FLEN/8, x6, x1, x2)

inst_305:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x33c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6f3c; op2val:0x0;
   valaddr_reg:x4; val_offset:560*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 560*FLEN/8, x6, x1, x2)

inst_306:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x33c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6f3c; op2val:0x0;
   valaddr_reg:x4; val_offset:562*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 562*FLEN/8, x6, x1, x2)

inst_307:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x33c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6f3c; op2val:0x0;
   valaddr_reg:x4; val_offset:564*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 564*FLEN/8, x6, x1, x2)

inst_308:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x33c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6f3c; op2val:0x0;
   valaddr_reg:x4; val_offset:566*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 566*FLEN/8, x6, x1, x2)

inst_309:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x33c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6f3c; op2val:0x0;
   valaddr_reg:x4; val_offset:568*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 568*FLEN/8, x6, x1, x2)

inst_310:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x3e3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x67e3; op2val:0x0;
   valaddr_reg:x4; val_offset:570*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 570*FLEN/8, x6, x1, x2)

inst_311:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x3e3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x67e3; op2val:0x0;
   valaddr_reg:x4; val_offset:572*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 572*FLEN/8, x6, x1, x2)

inst_312:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x3e3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x67e3; op2val:0x0;
   valaddr_reg:x4; val_offset:574*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 574*FLEN/8, x6, x1, x2)

inst_313:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x3e3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x67e3; op2val:0x0;
   valaddr_reg:x4; val_offset:576*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 576*FLEN/8, x6, x1, x2)

inst_314:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x3e3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x67e3; op2val:0x0;
   valaddr_reg:x4; val_offset:578*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 578*FLEN/8, x6, x1, x2)

inst_315:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x21f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a1f; op2val:0x8000;
   valaddr_reg:x4; val_offset:580*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 580*FLEN/8, x6, x1, x2)

inst_316:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x21f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a1f; op2val:0x8000;
   valaddr_reg:x4; val_offset:582*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 582*FLEN/8, x6, x1, x2)

inst_317:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x21f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a1f; op2val:0x8000;
   valaddr_reg:x4; val_offset:584*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 584*FLEN/8, x6, x1, x2)

inst_318:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x21f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a1f; op2val:0x8000;
   valaddr_reg:x4; val_offset:586*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 586*FLEN/8, x6, x1, x2)

inst_319:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x21f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a1f; op2val:0x8000;
   valaddr_reg:x4; val_offset:588*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 588*FLEN/8, x6, x1, x2)

inst_320:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x336 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b36; op2val:0x8000;
   valaddr_reg:x4; val_offset:590*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 590*FLEN/8, x6, x1, x2)

inst_321:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x336 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b36; op2val:0x8000;
   valaddr_reg:x4; val_offset:592*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 592*FLEN/8, x6, x1, x2)

inst_322:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x336 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b36; op2val:0x8000;
   valaddr_reg:x4; val_offset:594*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 594*FLEN/8, x6, x1, x2)

inst_323:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x336 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b36; op2val:0x8000;
   valaddr_reg:x4; val_offset:596*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 596*FLEN/8, x6, x1, x2)

inst_324:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x336 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b36; op2val:0x8000;
   valaddr_reg:x4; val_offset:598*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 598*FLEN/8, x6, x1, x2)

inst_325:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2e5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ae5; op2val:0x8000;
   valaddr_reg:x4; val_offset:600*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 600*FLEN/8, x6, x1, x2)

inst_326:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2e5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ae5; op2val:0x8000;
   valaddr_reg:x4; val_offset:602*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 602*FLEN/8, x6, x1, x2)

inst_327:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2e5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ae5; op2val:0x8000;
   valaddr_reg:x4; val_offset:604*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 604*FLEN/8, x6, x1, x2)

inst_328:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2e5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ae5; op2val:0x8000;
   valaddr_reg:x4; val_offset:606*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 606*FLEN/8, x6, x1, x2)

inst_329:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2e5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ae5; op2val:0x8000;
   valaddr_reg:x4; val_offset:608*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 608*FLEN/8, x6, x1, x2)

inst_330:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x38f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x778f; op2val:0x8000;
   valaddr_reg:x4; val_offset:610*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 610*FLEN/8, x6, x1, x2)

inst_331:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x38f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x778f; op2val:0x8000;
   valaddr_reg:x4; val_offset:612*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 612*FLEN/8, x6, x1, x2)

inst_332:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x38f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x778f; op2val:0x8000;
   valaddr_reg:x4; val_offset:614*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 614*FLEN/8, x6, x1, x2)

inst_333:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x38f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x778f; op2val:0x8000;
   valaddr_reg:x4; val_offset:616*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 616*FLEN/8, x6, x1, x2)

inst_334:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x38f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x778f; op2val:0x8000;
   valaddr_reg:x4; val_offset:618*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 618*FLEN/8, x6, x1, x2)

inst_335:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x148 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7948; op2val:0x8000;
   valaddr_reg:x4; val_offset:620*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 620*FLEN/8, x6, x1, x2)

inst_336:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x148 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7948; op2val:0x8000;
   valaddr_reg:x4; val_offset:622*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 622*FLEN/8, x6, x1, x2)

inst_337:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x148 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7948; op2val:0x8000;
   valaddr_reg:x4; val_offset:624*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 624*FLEN/8, x6, x1, x2)

inst_338:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x148 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7948; op2val:0x8000;
   valaddr_reg:x4; val_offset:626*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 626*FLEN/8, x6, x1, x2)

inst_339:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x148 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7948; op2val:0x8000;
   valaddr_reg:x4; val_offset:628*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 628*FLEN/8, x6, x1, x2)

inst_340:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x287 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e87; op2val:0x8000;
   valaddr_reg:x4; val_offset:630*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 630*FLEN/8, x6, x1, x2)

inst_341:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x287 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e87; op2val:0x8000;
   valaddr_reg:x4; val_offset:632*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 632*FLEN/8, x6, x1, x2)

inst_342:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x287 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e87; op2val:0x8000;
   valaddr_reg:x4; val_offset:634*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 634*FLEN/8, x6, x1, x2)

inst_343:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x287 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e87; op2val:0x8000;
   valaddr_reg:x4; val_offset:636*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 636*FLEN/8, x6, x1, x2)

inst_344:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x287 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e87; op2val:0x8000;
   valaddr_reg:x4; val_offset:638*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 638*FLEN/8, x6, x1, x2)

inst_345:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2fe and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7afe; op2val:0x8000;
   valaddr_reg:x4; val_offset:640*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 640*FLEN/8, x6, x1, x2)

inst_346:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2fe and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7afe; op2val:0x8000;
   valaddr_reg:x4; val_offset:642*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 642*FLEN/8, x6, x1, x2)

inst_347:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2fe and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7afe; op2val:0x8000;
   valaddr_reg:x4; val_offset:644*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 644*FLEN/8, x6, x1, x2)

inst_348:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2fe and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7afe; op2val:0x8000;
   valaddr_reg:x4; val_offset:646*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 646*FLEN/8, x6, x1, x2)

inst_349:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2fe and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7afe; op2val:0x8000;
   valaddr_reg:x4; val_offset:648*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 648*FLEN/8, x6, x1, x2)

inst_350:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0ad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78ad; op2val:0x8000;
   valaddr_reg:x4; val_offset:650*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 650*FLEN/8, x6, x1, x2)

inst_351:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0ad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78ad; op2val:0x8000;
   valaddr_reg:x4; val_offset:652*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 652*FLEN/8, x6, x1, x2)

inst_352:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0ad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78ad; op2val:0x8000;
   valaddr_reg:x4; val_offset:654*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 654*FLEN/8, x6, x1, x2)

inst_353:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0ad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78ad; op2val:0x8000;
   valaddr_reg:x4; val_offset:656*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 656*FLEN/8, x6, x1, x2)

inst_354:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0ad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78ad; op2val:0x8000;
   valaddr_reg:x4; val_offset:658*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 658*FLEN/8, x6, x1, x2)

inst_355:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x01d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x781d; op2val:0x8000;
   valaddr_reg:x4; val_offset:660*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 660*FLEN/8, x6, x1, x2)

inst_356:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x01d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x781d; op2val:0x8000;
   valaddr_reg:x4; val_offset:662*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 662*FLEN/8, x6, x1, x2)

inst_357:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x01d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x781d; op2val:0x8000;
   valaddr_reg:x4; val_offset:664*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 664*FLEN/8, x6, x1, x2)

inst_358:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x01d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x781d; op2val:0x8000;
   valaddr_reg:x4; val_offset:666*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 666*FLEN/8, x6, x1, x2)

inst_359:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x01d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x781d; op2val:0x8000;
   valaddr_reg:x4; val_offset:668*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 668*FLEN/8, x6, x1, x2)

inst_360:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ac and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bac; op2val:0x8000;
   valaddr_reg:x4; val_offset:670*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 670*FLEN/8, x6, x1, x2)

inst_361:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ac and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bac; op2val:0x8000;
   valaddr_reg:x4; val_offset:672*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 672*FLEN/8, x6, x1, x2)

inst_362:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ac and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bac; op2val:0x8000;
   valaddr_reg:x4; val_offset:674*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 674*FLEN/8, x6, x1, x2)

inst_363:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ac and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bac; op2val:0x8000;
   valaddr_reg:x4; val_offset:676*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 676*FLEN/8, x6, x1, x2)

inst_364:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ac and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bac; op2val:0x8000;
   valaddr_reg:x4; val_offset:678*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 678*FLEN/8, x6, x1, x2)

inst_365:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78d8; op2val:0x8000;
   valaddr_reg:x4; val_offset:680*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 680*FLEN/8, x6, x1, x2)

inst_366:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78d8; op2val:0x8000;
   valaddr_reg:x4; val_offset:682*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 682*FLEN/8, x6, x1, x2)

inst_367:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78d8; op2val:0x8000;
   valaddr_reg:x4; val_offset:684*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 684*FLEN/8, x6, x1, x2)

inst_368:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78d8; op2val:0x8000;
   valaddr_reg:x4; val_offset:686*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 686*FLEN/8, x6, x1, x2)

inst_369:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78d8; op2val:0x8000;
   valaddr_reg:x4; val_offset:688*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 688*FLEN/8, x6, x1, x2)

inst_370:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x09e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x649e; op2val:0x8000;
   valaddr_reg:x4; val_offset:690*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 690*FLEN/8, x6, x1, x2)

inst_371:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x09e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x649e; op2val:0x8000;
   valaddr_reg:x4; val_offset:692*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 692*FLEN/8, x6, x1, x2)

inst_372:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x09e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x649e; op2val:0x8000;
   valaddr_reg:x4; val_offset:694*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 694*FLEN/8, x6, x1, x2)

inst_373:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x09e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x649e; op2val:0x8000;
   valaddr_reg:x4; val_offset:696*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 696*FLEN/8, x6, x1, x2)

inst_374:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x09e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x649e; op2val:0x8000;
   valaddr_reg:x4; val_offset:698*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 698*FLEN/8, x6, x1, x2)

inst_375:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x07f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x707f; op2val:0x8000;
   valaddr_reg:x4; val_offset:700*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 700*FLEN/8, x6, x1, x2)

inst_376:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x07f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x707f; op2val:0x8000;
   valaddr_reg:x4; val_offset:702*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 702*FLEN/8, x6, x1, x2)

inst_377:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x07f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x707f; op2val:0x8000;
   valaddr_reg:x4; val_offset:704*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 704*FLEN/8, x6, x1, x2)

inst_378:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x07f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x707f; op2val:0x8000;
   valaddr_reg:x4; val_offset:706*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 706*FLEN/8, x6, x1, x2)

inst_379:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x07f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x707f; op2val:0x8000;
   valaddr_reg:x4; val_offset:708*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 708*FLEN/8, x6, x1, x2)

inst_380:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x04b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x684b; op2val:0x8000;
   valaddr_reg:x4; val_offset:710*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 710*FLEN/8, x6, x1, x2)

inst_381:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x04b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x684b; op2val:0x8000;
   valaddr_reg:x4; val_offset:712*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 712*FLEN/8, x6, x1, x2)

inst_382:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x04b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x684b; op2val:0x8000;
   valaddr_reg:x4; val_offset:714*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 714*FLEN/8, x6, x1, x2)

inst_383:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x04b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x684b; op2val:0x8000;
   valaddr_reg:x4; val_offset:716*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 716*FLEN/8, x6, x1, x2)

inst_384:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x04b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x684b; op2val:0x8000;
   valaddr_reg:x4; val_offset:718*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 718*FLEN/8, x6, x1, x2)

inst_385:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x222 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e22; op2val:0x0;
   valaddr_reg:x4; val_offset:720*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 720*FLEN/8, x6, x1, x2)

inst_386:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x222 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e22; op2val:0x0;
   valaddr_reg:x4; val_offset:722*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 722*FLEN/8, x6, x1, x2)

inst_387:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x222 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e22; op2val:0x0;
   valaddr_reg:x4; val_offset:724*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 724*FLEN/8, x6, x1, x2)

inst_388:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x222 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e22; op2val:0x0;
   valaddr_reg:x4; val_offset:726*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 726*FLEN/8, x6, x1, x2)

inst_389:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x222 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e22; op2val:0x0;
   valaddr_reg:x4; val_offset:728*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 728*FLEN/8, x6, x1, x2)

inst_390:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x010 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7810; op2val:0x0;
   valaddr_reg:x4; val_offset:730*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 730*FLEN/8, x6, x1, x2)

inst_391:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x010 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7810; op2val:0x0;
   valaddr_reg:x4; val_offset:732*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 732*FLEN/8, x6, x1, x2)

inst_392:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x010 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7810; op2val:0x0;
   valaddr_reg:x4; val_offset:734*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 734*FLEN/8, x6, x1, x2)

inst_393:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x010 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7810; op2val:0x0;
   valaddr_reg:x4; val_offset:736*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 736*FLEN/8, x6, x1, x2)

inst_394:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x010 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7810; op2val:0x0;
   valaddr_reg:x4; val_offset:738*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 738*FLEN/8, x6, x1, x2)

inst_395:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x378 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b78; op2val:0x0;
   valaddr_reg:x4; val_offset:740*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 740*FLEN/8, x6, x1, x2)

inst_396:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x378 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b78; op2val:0x0;
   valaddr_reg:x4; val_offset:742*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 742*FLEN/8, x6, x1, x2)

inst_397:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x378 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b78; op2val:0x0;
   valaddr_reg:x4; val_offset:744*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 744*FLEN/8, x6, x1, x2)

inst_398:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x378 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b78; op2val:0x0;
   valaddr_reg:x4; val_offset:746*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 746*FLEN/8, x6, x1, x2)

inst_399:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x378 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b78; op2val:0x0;
   valaddr_reg:x4; val_offset:748*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 748*FLEN/8, x6, x1, x2)

inst_400:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x36f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x736f; op2val:0x0;
   valaddr_reg:x4; val_offset:750*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 750*FLEN/8, x6, x1, x2)

inst_401:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x36f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x736f; op2val:0x0;
   valaddr_reg:x4; val_offset:752*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 752*FLEN/8, x6, x1, x2)

inst_402:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x36f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x736f; op2val:0x0;
   valaddr_reg:x4; val_offset:754*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 754*FLEN/8, x6, x1, x2)

inst_403:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x36f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x736f; op2val:0x0;
   valaddr_reg:x4; val_offset:756*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 756*FLEN/8, x6, x1, x2)

inst_404:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x36f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x736f; op2val:0x0;
   valaddr_reg:x4; val_offset:758*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 758*FLEN/8, x6, x1, x2)

inst_405:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x002 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7402; op2val:0x0;
   valaddr_reg:x4; val_offset:760*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 760*FLEN/8, x6, x1, x2)

inst_406:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x002 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7402; op2val:0x0;
   valaddr_reg:x4; val_offset:762*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 762*FLEN/8, x6, x1, x2)

inst_407:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x002 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7402; op2val:0x0;
   valaddr_reg:x4; val_offset:764*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 764*FLEN/8, x6, x1, x2)

inst_408:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x002 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7402; op2val:0x0;
   valaddr_reg:x4; val_offset:766*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 766*FLEN/8, x6, x1, x2)

inst_409:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x002 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7402; op2val:0x0;
   valaddr_reg:x4; val_offset:768*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 768*FLEN/8, x6, x1, x2)

inst_410:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0fd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78fd; op2val:0x0;
   valaddr_reg:x4; val_offset:770*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 770*FLEN/8, x6, x1, x2)

inst_411:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0fd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78fd; op2val:0x0;
   valaddr_reg:x4; val_offset:772*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 772*FLEN/8, x6, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_412:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0fd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78fd; op2val:0x0;
   valaddr_reg:x4; val_offset:774*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 774*FLEN/8, x6, x1, x2)

inst_413:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0fd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78fd; op2val:0x0;
   valaddr_reg:x4; val_offset:776*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 776*FLEN/8, x6, x1, x2)

inst_414:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0fd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78fd; op2val:0x0;
   valaddr_reg:x4; val_offset:778*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 778*FLEN/8, x6, x1, x2)

inst_415:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79ac; op2val:0x0;
   valaddr_reg:x4; val_offset:780*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 780*FLEN/8, x6, x1, x2)

inst_416:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79ac; op2val:0x0;
   valaddr_reg:x4; val_offset:782*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 782*FLEN/8, x6, x1, x2)

inst_417:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79ac; op2val:0x0;
   valaddr_reg:x4; val_offset:784*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 784*FLEN/8, x6, x1, x2)

inst_418:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79ac; op2val:0x0;
   valaddr_reg:x4; val_offset:786*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 786*FLEN/8, x6, x1, x2)

inst_419:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79ac; op2val:0x0;
   valaddr_reg:x4; val_offset:788*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 788*FLEN/8, x6, x1, x2)

inst_420:
// fs1 == 0 and fe1 == 0x17 and fm1 == 0x0f4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x5cf4; op2val:0x3;
   valaddr_reg:x4; val_offset:790*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 790*FLEN/8, x6, x1, x2)

inst_421:
// fs1 == 0 and fe1 == 0x17 and fm1 == 0x0f4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x5cf4; op2val:0x3;
   valaddr_reg:x4; val_offset:792*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 792*FLEN/8, x6, x1, x2)

inst_422:
// fs1 == 0 and fe1 == 0x17 and fm1 == 0x0f4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x5cf4; op2val:0x3;
   valaddr_reg:x4; val_offset:794*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 794*FLEN/8, x6, x1, x2)

inst_423:
// fs1 == 0 and fe1 == 0x17 and fm1 == 0x0f4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x5cf4; op2val:0x3;
   valaddr_reg:x4; val_offset:796*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 796*FLEN/8, x6, x1, x2)

inst_424:
// fs1 == 0 and fe1 == 0x17 and fm1 == 0x0f4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x5cf4; op2val:0x3;
   valaddr_reg:x4; val_offset:798*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 798*FLEN/8, x6, x1, x2)

inst_425:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x289 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7689; op2val:0x0;
   valaddr_reg:x4; val_offset:800*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 800*FLEN/8, x6, x1, x2)

inst_426:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x289 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7689; op2val:0x0;
   valaddr_reg:x4; val_offset:802*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 802*FLEN/8, x6, x1, x2)

inst_427:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x289 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7689; op2val:0x0;
   valaddr_reg:x4; val_offset:804*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 804*FLEN/8, x6, x1, x2)

inst_428:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x289 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7689; op2val:0x0;
   valaddr_reg:x4; val_offset:806*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 806*FLEN/8, x6, x1, x2)

inst_429:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x289 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7689; op2val:0x0;
   valaddr_reg:x4; val_offset:808*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 808*FLEN/8, x6, x1, x2)

inst_430:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x262 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e62; op2val:0x0;
   valaddr_reg:x4; val_offset:810*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 810*FLEN/8, x6, x1, x2)

inst_431:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x262 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e62; op2val:0x0;
   valaddr_reg:x4; val_offset:812*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 812*FLEN/8, x6, x1, x2)

inst_432:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x262 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e62; op2val:0x0;
   valaddr_reg:x4; val_offset:814*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 814*FLEN/8, x6, x1, x2)

inst_433:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x262 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e62; op2val:0x0;
   valaddr_reg:x4; val_offset:816*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 816*FLEN/8, x6, x1, x2)

inst_434:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x262 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e62; op2val:0x0;
   valaddr_reg:x4; val_offset:818*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 818*FLEN/8, x6, x1, x2)

inst_435:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x367 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7367; op2val:0x0;
   valaddr_reg:x4; val_offset:820*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 820*FLEN/8, x6, x1, x2)

inst_436:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x367 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7367; op2val:0x0;
   valaddr_reg:x4; val_offset:822*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 822*FLEN/8, x6, x1, x2)

inst_437:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x367 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7367; op2val:0x0;
   valaddr_reg:x4; val_offset:824*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 824*FLEN/8, x6, x1, x2)

inst_438:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x367 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7367; op2val:0x0;
   valaddr_reg:x4; val_offset:826*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 826*FLEN/8, x6, x1, x2)

inst_439:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x367 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7367; op2val:0x0;
   valaddr_reg:x4; val_offset:828*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 828*FLEN/8, x6, x1, x2)

inst_440:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x029 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7829; op2val:0x0;
   valaddr_reg:x4; val_offset:830*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 830*FLEN/8, x6, x1, x2)

inst_441:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x029 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7829; op2val:0x0;
   valaddr_reg:x4; val_offset:832*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 832*FLEN/8, x6, x1, x2)

inst_442:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x029 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7829; op2val:0x0;
   valaddr_reg:x4; val_offset:834*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 834*FLEN/8, x6, x1, x2)

inst_443:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x029 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7829; op2val:0x0;
   valaddr_reg:x4; val_offset:836*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 836*FLEN/8, x6, x1, x2)

inst_444:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x029 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7829; op2val:0x0;
   valaddr_reg:x4; val_offset:838*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 838*FLEN/8, x6, x1, x2)

inst_445:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74f4; op2val:0x8000;
   valaddr_reg:x4; val_offset:840*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 840*FLEN/8, x6, x1, x2)

inst_446:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74f4; op2val:0x8000;
   valaddr_reg:x4; val_offset:842*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 842*FLEN/8, x6, x1, x2)

inst_447:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74f4; op2val:0x8000;
   valaddr_reg:x4; val_offset:844*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 844*FLEN/8, x6, x1, x2)

inst_448:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74f4; op2val:0x8000;
   valaddr_reg:x4; val_offset:846*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 846*FLEN/8, x6, x1, x2)

inst_449:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74f4; op2val:0x8000;
   valaddr_reg:x4; val_offset:848*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 848*FLEN/8, x6, x1, x2)

inst_450:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x2cb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x72cb; op2val:0x8000;
   valaddr_reg:x4; val_offset:850*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 850*FLEN/8, x6, x1, x2)

inst_451:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x2cb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x72cb; op2val:0x8000;
   valaddr_reg:x4; val_offset:852*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 852*FLEN/8, x6, x1, x2)

inst_452:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x2cb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x72cb; op2val:0x8000;
   valaddr_reg:x4; val_offset:854*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 854*FLEN/8, x6, x1, x2)

inst_453:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x2cb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x72cb; op2val:0x8000;
   valaddr_reg:x4; val_offset:856*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 856*FLEN/8, x6, x1, x2)

inst_454:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x2cb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x72cb; op2val:0x8000;
   valaddr_reg:x4; val_offset:858*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 858*FLEN/8, x6, x1, x2)

inst_455:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3b3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bb3; op2val:0x8000;
   valaddr_reg:x4; val_offset:860*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 860*FLEN/8, x6, x1, x2)

inst_456:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3b3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bb3; op2val:0x8000;
   valaddr_reg:x4; val_offset:862*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 862*FLEN/8, x6, x1, x2)

inst_457:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3b3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bb3; op2val:0x8000;
   valaddr_reg:x4; val_offset:864*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 864*FLEN/8, x6, x1, x2)

inst_458:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3b3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bb3; op2val:0x8000;
   valaddr_reg:x4; val_offset:866*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 866*FLEN/8, x6, x1, x2)

inst_459:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3b3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bb3; op2val:0x8000;
   valaddr_reg:x4; val_offset:868*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 868*FLEN/8, x6, x1, x2)

inst_460:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2ef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x76ef; op2val:0x8000;
   valaddr_reg:x4; val_offset:870*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 870*FLEN/8, x6, x1, x2)

inst_461:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2ef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x76ef; op2val:0x8000;
   valaddr_reg:x4; val_offset:872*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 872*FLEN/8, x6, x1, x2)

inst_462:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2ef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x76ef; op2val:0x8000;
   valaddr_reg:x4; val_offset:874*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 874*FLEN/8, x6, x1, x2)

inst_463:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2ef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x76ef; op2val:0x8000;
   valaddr_reg:x4; val_offset:876*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 876*FLEN/8, x6, x1, x2)

inst_464:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2ef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x76ef; op2val:0x8000;
   valaddr_reg:x4; val_offset:878*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 878*FLEN/8, x6, x1, x2)

inst_465:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0a5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78a5; op2val:0x8000;
   valaddr_reg:x4; val_offset:880*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 880*FLEN/8, x6, x1, x2)

inst_466:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0a5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78a5; op2val:0x8000;
   valaddr_reg:x4; val_offset:882*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 882*FLEN/8, x6, x1, x2)

inst_467:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0a5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78a5; op2val:0x8000;
   valaddr_reg:x4; val_offset:884*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 884*FLEN/8, x6, x1, x2)

inst_468:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0a5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78a5; op2val:0x8000;
   valaddr_reg:x4; val_offset:886*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 886*FLEN/8, x6, x1, x2)

inst_469:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0a5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78a5; op2val:0x8000;
   valaddr_reg:x4; val_offset:888*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 888*FLEN/8, x6, x1, x2)

inst_470:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x76af; op2val:0x8000;
   valaddr_reg:x4; val_offset:890*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 890*FLEN/8, x6, x1, x2)

inst_471:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x76af; op2val:0x8000;
   valaddr_reg:x4; val_offset:892*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 892*FLEN/8, x6, x1, x2)

inst_472:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x76af; op2val:0x8000;
   valaddr_reg:x4; val_offset:894*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 894*FLEN/8, x6, x1, x2)

inst_473:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x76af; op2val:0x8000;
   valaddr_reg:x4; val_offset:896*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 896*FLEN/8, x6, x1, x2)

inst_474:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x76af; op2val:0x8000;
   valaddr_reg:x4; val_offset:898*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 898*FLEN/8, x6, x1, x2)

inst_475:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x1cb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x71cb; op2val:0x8000;
   valaddr_reg:x4; val_offset:900*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 900*FLEN/8, x6, x1, x2)

inst_476:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x1cb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x71cb; op2val:0x8000;
   valaddr_reg:x4; val_offset:902*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 902*FLEN/8, x6, x1, x2)

inst_477:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x1cb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x71cb; op2val:0x8000;
   valaddr_reg:x4; val_offset:904*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 904*FLEN/8, x6, x1, x2)

inst_478:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x1cb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x71cb; op2val:0x8000;
   valaddr_reg:x4; val_offset:906*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 906*FLEN/8, x6, x1, x2)

inst_479:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x1cb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x71cb; op2val:0x8000;
   valaddr_reg:x4; val_offset:908*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 908*FLEN/8, x6, x1, x2)

inst_480:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x26b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a6b; op2val:0x8000;
   valaddr_reg:x4; val_offset:910*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 910*FLEN/8, x6, x1, x2)

inst_481:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x26b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a6b; op2val:0x8000;
   valaddr_reg:x4; val_offset:912*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 912*FLEN/8, x6, x1, x2)

inst_482:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x26b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a6b; op2val:0x8000;
   valaddr_reg:x4; val_offset:914*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 914*FLEN/8, x6, x1, x2)

inst_483:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x26b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a6b; op2val:0x8000;
   valaddr_reg:x4; val_offset:916*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 916*FLEN/8, x6, x1, x2)

inst_484:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x26b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a6b; op2val:0x8000;
   valaddr_reg:x4; val_offset:918*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 918*FLEN/8, x6, x1, x2)

inst_485:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x026 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7826; op2val:0x8000;
   valaddr_reg:x4; val_offset:920*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 920*FLEN/8, x6, x1, x2)

inst_486:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x026 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7826; op2val:0x8000;
   valaddr_reg:x4; val_offset:922*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 922*FLEN/8, x6, x1, x2)

inst_487:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x026 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7826; op2val:0x8000;
   valaddr_reg:x4; val_offset:924*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 924*FLEN/8, x6, x1, x2)

inst_488:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x026 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7826; op2val:0x8000;
   valaddr_reg:x4; val_offset:926*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 926*FLEN/8, x6, x1, x2)

inst_489:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x026 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7826; op2val:0x8000;
   valaddr_reg:x4; val_offset:928*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 928*FLEN/8, x6, x1, x2)

inst_490:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78e1; op2val:0x8000;
   valaddr_reg:x4; val_offset:930*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 930*FLEN/8, x6, x1, x2)

inst_491:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78e1; op2val:0x8000;
   valaddr_reg:x4; val_offset:932*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 932*FLEN/8, x6, x1, x2)

inst_492:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78e1; op2val:0x8000;
   valaddr_reg:x4; val_offset:934*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 934*FLEN/8, x6, x1, x2)

inst_493:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78e1; op2val:0x8000;
   valaddr_reg:x4; val_offset:936*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 936*FLEN/8, x6, x1, x2)

inst_494:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78e1; op2val:0x8000;
   valaddr_reg:x4; val_offset:938*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 938*FLEN/8, x6, x1, x2)

inst_495:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3dd and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bdd; op2val:0x8000;
   valaddr_reg:x4; val_offset:940*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 940*FLEN/8, x6, x1, x2)

inst_496:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3dd and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bdd; op2val:0x8000;
   valaddr_reg:x4; val_offset:942*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 942*FLEN/8, x6, x1, x2)

inst_497:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3dd and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bdd; op2val:0x8000;
   valaddr_reg:x4; val_offset:944*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 944*FLEN/8, x6, x1, x2)

inst_498:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3dd and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bdd; op2val:0x8000;
   valaddr_reg:x4; val_offset:946*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 946*FLEN/8, x6, x1, x2)

inst_499:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3dd and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bdd; op2val:0x8000;
   valaddr_reg:x4; val_offset:948*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 948*FLEN/8, x6, x1, x2)

inst_500:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x0e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x64e1; op2val:0x8000;
   valaddr_reg:x4; val_offset:950*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 950*FLEN/8, x6, x1, x2)

inst_501:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x0e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x64e1; op2val:0x8000;
   valaddr_reg:x4; val_offset:952*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 952*FLEN/8, x6, x1, x2)

inst_502:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x0e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x64e1; op2val:0x8000;
   valaddr_reg:x4; val_offset:954*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 954*FLEN/8, x6, x1, x2)

inst_503:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x0e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x64e1; op2val:0x8000;
   valaddr_reg:x4; val_offset:956*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 956*FLEN/8, x6, x1, x2)

inst_504:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x0e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x64e1; op2val:0x8000;
   valaddr_reg:x4; val_offset:958*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 958*FLEN/8, x6, x1, x2)

inst_505:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e78; op2val:0x8000;
   valaddr_reg:x4; val_offset:960*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 960*FLEN/8, x6, x1, x2)

inst_506:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e78; op2val:0x8000;
   valaddr_reg:x4; val_offset:962*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 962*FLEN/8, x6, x1, x2)

inst_507:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e78; op2val:0x8000;
   valaddr_reg:x4; val_offset:964*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 964*FLEN/8, x6, x1, x2)

inst_508:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e78; op2val:0x8000;
   valaddr_reg:x4; val_offset:966*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 966*FLEN/8, x6, x1, x2)

inst_509:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x278 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e78; op2val:0x8000;
   valaddr_reg:x4; val_offset:968*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 968*FLEN/8, x6, x1, x2)

inst_510:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2b8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ab8; op2val:0x8000;
   valaddr_reg:x4; val_offset:970*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 970*FLEN/8, x6, x1, x2)

inst_511:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2b8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ab8; op2val:0x8000;
   valaddr_reg:x4; val_offset:972*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 972*FLEN/8, x6, x1, x2)

inst_512:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2b8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ab8; op2val:0x8000;
   valaddr_reg:x4; val_offset:974*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 974*FLEN/8, x6, x1, x2)

inst_513:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2b8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ab8; op2val:0x8000;
   valaddr_reg:x4; val_offset:976*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 976*FLEN/8, x6, x1, x2)

inst_514:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2b8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ab8; op2val:0x8000;
   valaddr_reg:x4; val_offset:978*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 978*FLEN/8, x6, x1, x2)

inst_515:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x006 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6406; op2val:0x0;
   valaddr_reg:x4; val_offset:980*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 980*FLEN/8, x6, x1, x2)

inst_516:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x006 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6406; op2val:0x0;
   valaddr_reg:x4; val_offset:982*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 982*FLEN/8, x6, x1, x2)

inst_517:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x006 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6406; op2val:0x0;
   valaddr_reg:x4; val_offset:984*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 984*FLEN/8, x6, x1, x2)

inst_518:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x006 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6406; op2val:0x0;
   valaddr_reg:x4; val_offset:986*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 986*FLEN/8, x6, x1, x2)

inst_519:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x006 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6406; op2val:0x0;
   valaddr_reg:x4; val_offset:988*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 988*FLEN/8, x6, x1, x2)

inst_520:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x291 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7691; op2val:0x0;
   valaddr_reg:x4; val_offset:990*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 990*FLEN/8, x6, x1, x2)

inst_521:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x291 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7691; op2val:0x0;
   valaddr_reg:x4; val_offset:992*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 992*FLEN/8, x6, x1, x2)

inst_522:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x291 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7691; op2val:0x0;
   valaddr_reg:x4; val_offset:994*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 994*FLEN/8, x6, x1, x2)

inst_523:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x291 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7691; op2val:0x0;
   valaddr_reg:x4; val_offset:996*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 996*FLEN/8, x6, x1, x2)

inst_524:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x291 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7691; op2val:0x0;
   valaddr_reg:x4; val_offset:998*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 998*FLEN/8, x6, x1, x2)

inst_525:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x72a9; op2val:0x0;
   valaddr_reg:x4; val_offset:1000*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1000*FLEN/8, x6, x1, x2)

inst_526:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x72a9; op2val:0x0;
   valaddr_reg:x4; val_offset:1002*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1002*FLEN/8, x6, x1, x2)

inst_527:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x72a9; op2val:0x0;
   valaddr_reg:x4; val_offset:1004*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1004*FLEN/8, x6, x1, x2)

inst_528:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x72a9; op2val:0x0;
   valaddr_reg:x4; val_offset:1006*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1006*FLEN/8, x6, x1, x2)

inst_529:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x72a9; op2val:0x0;
   valaddr_reg:x4; val_offset:1008*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1008*FLEN/8, x6, x1, x2)

inst_530:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x0b8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6cb8; op2val:0x0;
   valaddr_reg:x4; val_offset:1010*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1010*FLEN/8, x6, x1, x2)

inst_531:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x0b8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6cb8; op2val:0x0;
   valaddr_reg:x4; val_offset:1012*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1012*FLEN/8, x6, x1, x2)

inst_532:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x0b8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6cb8; op2val:0x0;
   valaddr_reg:x4; val_offset:1014*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1014*FLEN/8, x6, x1, x2)

inst_533:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x0b8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6cb8; op2val:0x0;
   valaddr_reg:x4; val_offset:1016*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1016*FLEN/8, x6, x1, x2)

inst_534:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x0b8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6cb8; op2val:0x0;
   valaddr_reg:x4; val_offset:1018*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1018*FLEN/8, x6, x1, x2)

inst_535:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1f6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x75f6; op2val:0x0;
   valaddr_reg:x4; val_offset:1020*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1020*FLEN/8, x6, x1, x2)

inst_536:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1f6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x75f6; op2val:0x0;
   valaddr_reg:x4; val_offset:1022*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1022*FLEN/8, x6, x1, x2)

inst_537:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1f6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x75f6; op2val:0x0;
   valaddr_reg:x4; val_offset:1024*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1024*FLEN/8, x6, x1, x2)

inst_538:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1f6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x75f6; op2val:0x0;
   valaddr_reg:x4; val_offset:1026*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1026*FLEN/8, x6, x1, x2)

inst_539:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1f6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x75f6; op2val:0x0;
   valaddr_reg:x4; val_offset:1028*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1028*FLEN/8, x6, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_540:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x0e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6ce5; op2val:0x0;
   valaddr_reg:x4; val_offset:1030*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1030*FLEN/8, x6, x1, x2)

inst_541:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x0e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6ce5; op2val:0x0;
   valaddr_reg:x4; val_offset:1032*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1032*FLEN/8, x6, x1, x2)

inst_542:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x0e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6ce5; op2val:0x0;
   valaddr_reg:x4; val_offset:1034*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1034*FLEN/8, x6, x1, x2)

inst_543:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x0e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6ce5; op2val:0x0;
   valaddr_reg:x4; val_offset:1036*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1036*FLEN/8, x6, x1, x2)

inst_544:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x0e5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6ce5; op2val:0x0;
   valaddr_reg:x4; val_offset:1038*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1038*FLEN/8, x6, x1, x2)

inst_545:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x227 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7227; op2val:0x0;
   valaddr_reg:x4; val_offset:1040*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1040*FLEN/8, x6, x1, x2)

inst_546:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x227 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7227; op2val:0x0;
   valaddr_reg:x4; val_offset:1042*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1042*FLEN/8, x6, x1, x2)

inst_547:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x227 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7227; op2val:0x0;
   valaddr_reg:x4; val_offset:1044*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1044*FLEN/8, x6, x1, x2)

inst_548:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x227 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7227; op2val:0x0;
   valaddr_reg:x4; val_offset:1046*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1046*FLEN/8, x6, x1, x2)

inst_549:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x227 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7227; op2val:0x0;
   valaddr_reg:x4; val_offset:1048*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1048*FLEN/8, x6, x1, x2)

inst_550:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x243 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7643; op2val:0x0;
   valaddr_reg:x4; val_offset:1050*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1050*FLEN/8, x6, x1, x2)

inst_551:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x243 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7643; op2val:0x0;
   valaddr_reg:x4; val_offset:1052*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1052*FLEN/8, x6, x1, x2)

inst_552:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x243 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7643; op2val:0x0;
   valaddr_reg:x4; val_offset:1054*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1054*FLEN/8, x6, x1, x2)

inst_553:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x243 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7643; op2val:0x0;
   valaddr_reg:x4; val_offset:1056*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1056*FLEN/8, x6, x1, x2)

inst_554:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x243 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7643; op2val:0x0;
   valaddr_reg:x4; val_offset:1058*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1058*FLEN/8, x6, x1, x2)

inst_555:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x206 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a06; op2val:0x0;
   valaddr_reg:x4; val_offset:1060*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1060*FLEN/8, x6, x1, x2)

inst_556:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x206 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a06; op2val:0x0;
   valaddr_reg:x4; val_offset:1062*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1062*FLEN/8, x6, x1, x2)

inst_557:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x206 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a06; op2val:0x0;
   valaddr_reg:x4; val_offset:1064*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1064*FLEN/8, x6, x1, x2)

inst_558:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x206 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a06; op2val:0x0;
   valaddr_reg:x4; val_offset:1066*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1066*FLEN/8, x6, x1, x2)

inst_559:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x206 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a06; op2val:0x0;
   valaddr_reg:x4; val_offset:1068*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1068*FLEN/8, x6, x1, x2)

inst_560:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x3c9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6fc9; op2val:0x0;
   valaddr_reg:x4; val_offset:1070*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1070*FLEN/8, x6, x1, x2)

inst_561:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x3c9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6fc9; op2val:0x0;
   valaddr_reg:x4; val_offset:1072*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1072*FLEN/8, x6, x1, x2)

inst_562:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x3c9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6fc9; op2val:0x0;
   valaddr_reg:x4; val_offset:1074*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1074*FLEN/8, x6, x1, x2)

inst_563:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x3c9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6fc9; op2val:0x0;
   valaddr_reg:x4; val_offset:1076*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1076*FLEN/8, x6, x1, x2)

inst_564:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x3c9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6fc9; op2val:0x0;
   valaddr_reg:x4; val_offset:1078*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1078*FLEN/8, x6, x1, x2)

inst_565:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x126 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6d26; op2val:0x0;
   valaddr_reg:x4; val_offset:1080*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1080*FLEN/8, x6, x1, x2)

inst_566:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x126 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6d26; op2val:0x0;
   valaddr_reg:x4; val_offset:1082*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1082*FLEN/8, x6, x1, x2)

inst_567:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x126 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6d26; op2val:0x0;
   valaddr_reg:x4; val_offset:1084*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1084*FLEN/8, x6, x1, x2)

inst_568:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x126 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6d26; op2val:0x0;
   valaddr_reg:x4; val_offset:1086*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1086*FLEN/8, x6, x1, x2)

inst_569:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x126 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6d26; op2val:0x0;
   valaddr_reg:x4; val_offset:1088*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1088*FLEN/8, x6, x1, x2)

inst_570:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x120 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7920; op2val:0x0;
   valaddr_reg:x4; val_offset:1090*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1090*FLEN/8, x6, x1, x2)

inst_571:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x120 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7920; op2val:0x0;
   valaddr_reg:x4; val_offset:1092*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1092*FLEN/8, x6, x1, x2)

inst_572:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x120 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7920; op2val:0x0;
   valaddr_reg:x4; val_offset:1094*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1094*FLEN/8, x6, x1, x2)

inst_573:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x120 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7920; op2val:0x0;
   valaddr_reg:x4; val_offset:1096*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1096*FLEN/8, x6, x1, x2)

inst_574:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x120 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7920; op2val:0x0;
   valaddr_reg:x4; val_offset:1098*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1098*FLEN/8, x6, x1, x2)

inst_575:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x189 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7989; op2val:0x0;
   valaddr_reg:x4; val_offset:1100*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1100*FLEN/8, x6, x1, x2)

inst_576:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x189 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7989; op2val:0x0;
   valaddr_reg:x4; val_offset:1102*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1102*FLEN/8, x6, x1, x2)

inst_577:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x189 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7989; op2val:0x0;
   valaddr_reg:x4; val_offset:1104*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1104*FLEN/8, x6, x1, x2)

inst_578:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x189 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7989; op2val:0x0;
   valaddr_reg:x4; val_offset:1106*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1106*FLEN/8, x6, x1, x2)

inst_579:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x189 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7989; op2val:0x0;
   valaddr_reg:x4; val_offset:1108*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1108*FLEN/8, x6, x1, x2)

inst_580:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x145 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7945; op2val:0x0;
   valaddr_reg:x4; val_offset:1110*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1110*FLEN/8, x6, x1, x2)

inst_581:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x145 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7945; op2val:0x0;
   valaddr_reg:x4; val_offset:1112*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1112*FLEN/8, x6, x1, x2)

inst_582:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x145 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7945; op2val:0x0;
   valaddr_reg:x4; val_offset:1114*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1114*FLEN/8, x6, x1, x2)

inst_583:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x145 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7945; op2val:0x0;
   valaddr_reg:x4; val_offset:1116*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1116*FLEN/8, x6, x1, x2)

inst_584:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x145 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7945; op2val:0x0;
   valaddr_reg:x4; val_offset:1118*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1118*FLEN/8, x6, x1, x2)

inst_585:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1c9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79c9; op2val:0x8000;
   valaddr_reg:x4; val_offset:1120*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1120*FLEN/8, x6, x1, x2)

inst_586:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1c9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79c9; op2val:0x8000;
   valaddr_reg:x4; val_offset:1122*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1122*FLEN/8, x6, x1, x2)

inst_587:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1c9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79c9; op2val:0x8000;
   valaddr_reg:x4; val_offset:1124*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1124*FLEN/8, x6, x1, x2)

inst_588:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1c9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79c9; op2val:0x8000;
   valaddr_reg:x4; val_offset:1126*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1126*FLEN/8, x6, x1, x2)

inst_589:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1c9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79c9; op2val:0x8000;
   valaddr_reg:x4; val_offset:1128*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1128*FLEN/8, x6, x1, x2)

inst_590:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x75b7; op2val:0x8000;
   valaddr_reg:x4; val_offset:1130*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1130*FLEN/8, x6, x1, x2)

inst_591:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x75b7; op2val:0x8000;
   valaddr_reg:x4; val_offset:1132*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1132*FLEN/8, x6, x1, x2)

inst_592:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x75b7; op2val:0x8000;
   valaddr_reg:x4; val_offset:1134*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1134*FLEN/8, x6, x1, x2)

inst_593:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x75b7; op2val:0x8000;
   valaddr_reg:x4; val_offset:1136*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1136*FLEN/8, x6, x1, x2)

inst_594:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x75b7; op2val:0x8000;
   valaddr_reg:x4; val_offset:1138*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1138*FLEN/8, x6, x1, x2)

inst_595:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x262 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a62; op2val:0x8000;
   valaddr_reg:x4; val_offset:1140*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1140*FLEN/8, x6, x1, x2)

inst_596:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x262 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a62; op2val:0x8000;
   valaddr_reg:x4; val_offset:1142*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1142*FLEN/8, x6, x1, x2)

inst_597:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x262 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a62; op2val:0x8000;
   valaddr_reg:x4; val_offset:1144*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1144*FLEN/8, x6, x1, x2)

inst_598:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x262 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a62; op2val:0x8000;
   valaddr_reg:x4; val_offset:1146*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1146*FLEN/8, x6, x1, x2)

inst_599:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x262 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a62; op2val:0x8000;
   valaddr_reg:x4; val_offset:1148*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1148*FLEN/8, x6, x1, x2)

inst_600:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x035 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7835; op2val:0x8000;
   valaddr_reg:x4; val_offset:1150*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1150*FLEN/8, x6, x1, x2)

inst_601:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x035 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7835; op2val:0x8000;
   valaddr_reg:x4; val_offset:1152*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1152*FLEN/8, x6, x1, x2)

inst_602:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x035 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7835; op2val:0x8000;
   valaddr_reg:x4; val_offset:1154*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1154*FLEN/8, x6, x1, x2)

inst_603:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x035 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7835; op2val:0x8000;
   valaddr_reg:x4; val_offset:1156*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1156*FLEN/8, x6, x1, x2)

inst_604:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x035 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7835; op2val:0x8000;
   valaddr_reg:x4; val_offset:1158*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1158*FLEN/8, x6, x1, x2)

inst_605:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3a2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ba2; op2val:0x8000;
   valaddr_reg:x4; val_offset:1160*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1160*FLEN/8, x6, x1, x2)

inst_606:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3a2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ba2; op2val:0x8000;
   valaddr_reg:x4; val_offset:1162*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1162*FLEN/8, x6, x1, x2)

inst_607:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3a2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ba2; op2val:0x8000;
   valaddr_reg:x4; val_offset:1164*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1164*FLEN/8, x6, x1, x2)

inst_608:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3a2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ba2; op2val:0x8000;
   valaddr_reg:x4; val_offset:1166*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1166*FLEN/8, x6, x1, x2)

inst_609:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3a2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ba2; op2val:0x8000;
   valaddr_reg:x4; val_offset:1168*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1168*FLEN/8, x6, x1, x2)

inst_610:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x373 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b73; op2val:0x8000;
   valaddr_reg:x4; val_offset:1170*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1170*FLEN/8, x6, x1, x2)

inst_611:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x373 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b73; op2val:0x8000;
   valaddr_reg:x4; val_offset:1172*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1172*FLEN/8, x6, x1, x2)

inst_612:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x373 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b73; op2val:0x8000;
   valaddr_reg:x4; val_offset:1174*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1174*FLEN/8, x6, x1, x2)

inst_613:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x373 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b73; op2val:0x8000;
   valaddr_reg:x4; val_offset:1176*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1176*FLEN/8, x6, x1, x2)

inst_614:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x373 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b73; op2val:0x8000;
   valaddr_reg:x4; val_offset:1178*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1178*FLEN/8, x6, x1, x2)

inst_615:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0be and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74be; op2val:0x8000;
   valaddr_reg:x4; val_offset:1180*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1180*FLEN/8, x6, x1, x2)

inst_616:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0be and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74be; op2val:0x8000;
   valaddr_reg:x4; val_offset:1182*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1182*FLEN/8, x6, x1, x2)

inst_617:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0be and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74be; op2val:0x8000;
   valaddr_reg:x4; val_offset:1184*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1184*FLEN/8, x6, x1, x2)

inst_618:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0be and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74be; op2val:0x8000;
   valaddr_reg:x4; val_offset:1186*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1186*FLEN/8, x6, x1, x2)

inst_619:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0be and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74be; op2val:0x8000;
   valaddr_reg:x4; val_offset:1188*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1188*FLEN/8, x6, x1, x2)

inst_620:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3d1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x77d1; op2val:0x8000;
   valaddr_reg:x4; val_offset:1190*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1190*FLEN/8, x6, x1, x2)

inst_621:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3d1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x77d1; op2val:0x8000;
   valaddr_reg:x4; val_offset:1192*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1192*FLEN/8, x6, x1, x2)

inst_622:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3d1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x77d1; op2val:0x8000;
   valaddr_reg:x4; val_offset:1194*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1194*FLEN/8, x6, x1, x2)

inst_623:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3d1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x77d1; op2val:0x8000;
   valaddr_reg:x4; val_offset:1196*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1196*FLEN/8, x6, x1, x2)

inst_624:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3d1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x77d1; op2val:0x8000;
   valaddr_reg:x4; val_offset:1198*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1198*FLEN/8, x6, x1, x2)

inst_625:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2d6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x76d6; op2val:0x8000;
   valaddr_reg:x4; val_offset:1200*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1200*FLEN/8, x6, x1, x2)

inst_626:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2d6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x76d6; op2val:0x8000;
   valaddr_reg:x4; val_offset:1202*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1202*FLEN/8, x6, x1, x2)

inst_627:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2d6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x76d6; op2val:0x8000;
   valaddr_reg:x4; val_offset:1204*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1204*FLEN/8, x6, x1, x2)

inst_628:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2d6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x76d6; op2val:0x8000;
   valaddr_reg:x4; val_offset:1206*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1206*FLEN/8, x6, x1, x2)

inst_629:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2d6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x76d6; op2val:0x8000;
   valaddr_reg:x4; val_offset:1208*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1208*FLEN/8, x6, x1, x2)

inst_630:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x358 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b58; op2val:0x8000;
   valaddr_reg:x4; val_offset:1210*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1210*FLEN/8, x6, x1, x2)

inst_631:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x358 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b58; op2val:0x8000;
   valaddr_reg:x4; val_offset:1212*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1212*FLEN/8, x6, x1, x2)

inst_632:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x358 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b58; op2val:0x8000;
   valaddr_reg:x4; val_offset:1214*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1214*FLEN/8, x6, x1, x2)

inst_633:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x358 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b58; op2val:0x8000;
   valaddr_reg:x4; val_offset:1216*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1216*FLEN/8, x6, x1, x2)

inst_634:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x358 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b58; op2val:0x8000;
   valaddr_reg:x4; val_offset:1218*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1218*FLEN/8, x6, x1, x2)

inst_635:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a8a; op2val:0x8000;
   valaddr_reg:x4; val_offset:1220*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1220*FLEN/8, x6, x1, x2)

inst_636:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a8a; op2val:0x8000;
   valaddr_reg:x4; val_offset:1222*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1222*FLEN/8, x6, x1, x2)

inst_637:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a8a; op2val:0x8000;
   valaddr_reg:x4; val_offset:1224*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1224*FLEN/8, x6, x1, x2)

inst_638:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a8a; op2val:0x8000;
   valaddr_reg:x4; val_offset:1226*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1226*FLEN/8, x6, x1, x2)

inst_639:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a8a; op2val:0x8000;
   valaddr_reg:x4; val_offset:1228*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1228*FLEN/8, x6, x1, x2)

inst_640:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1b1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x75b1; op2val:0x8000;
   valaddr_reg:x4; val_offset:1230*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1230*FLEN/8, x6, x1, x2)

inst_641:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1b1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x75b1; op2val:0x8000;
   valaddr_reg:x4; val_offset:1232*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1232*FLEN/8, x6, x1, x2)

inst_642:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1b1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x75b1; op2val:0x8000;
   valaddr_reg:x4; val_offset:1234*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1234*FLEN/8, x6, x1, x2)

inst_643:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1b1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x75b1; op2val:0x8000;
   valaddr_reg:x4; val_offset:1236*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1236*FLEN/8, x6, x1, x2)

inst_644:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1b1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x75b1; op2val:0x8000;
   valaddr_reg:x4; val_offset:1238*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1238*FLEN/8, x6, x1, x2)

inst_645:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x0af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x70af; op2val:0x8000;
   valaddr_reg:x4; val_offset:1240*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1240*FLEN/8, x6, x1, x2)

inst_646:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x0af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x70af; op2val:0x8000;
   valaddr_reg:x4; val_offset:1242*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1242*FLEN/8, x6, x1, x2)

inst_647:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x0af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x70af; op2val:0x8000;
   valaddr_reg:x4; val_offset:1244*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1244*FLEN/8, x6, x1, x2)

inst_648:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x0af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x70af; op2val:0x8000;
   valaddr_reg:x4; val_offset:1246*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1246*FLEN/8, x6, x1, x2)

inst_649:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x0af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x70af; op2val:0x8000;
   valaddr_reg:x4; val_offset:1248*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1248*FLEN/8, x6, x1, x2)

inst_650:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x046 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6c46; op2val:0x8000;
   valaddr_reg:x4; val_offset:1250*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1250*FLEN/8, x6, x1, x2)

inst_651:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x046 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6c46; op2val:0x8000;
   valaddr_reg:x4; val_offset:1252*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1252*FLEN/8, x6, x1, x2)

inst_652:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x046 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6c46; op2val:0x8000;
   valaddr_reg:x4; val_offset:1254*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1254*FLEN/8, x6, x1, x2)

inst_653:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x046 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6c46; op2val:0x8000;
   valaddr_reg:x4; val_offset:1256*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1256*FLEN/8, x6, x1, x2)

inst_654:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x046 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6c46; op2val:0x8000;
   valaddr_reg:x4; val_offset:1258*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1258*FLEN/8, x6, x1, x2)

inst_655:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x329 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b29; op2val:0x0;
   valaddr_reg:x4; val_offset:1260*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1260*FLEN/8, x6, x1, x2)

inst_656:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x329 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b29; op2val:0x0;
   valaddr_reg:x4; val_offset:1262*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1262*FLEN/8, x6, x1, x2)

inst_657:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x329 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b29; op2val:0x0;
   valaddr_reg:x4; val_offset:1264*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1264*FLEN/8, x6, x1, x2)

inst_658:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x329 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b29; op2val:0x0;
   valaddr_reg:x4; val_offset:1266*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1266*FLEN/8, x6, x1, x2)

inst_659:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x329 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b29; op2val:0x0;
   valaddr_reg:x4; val_offset:1268*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1268*FLEN/8, x6, x1, x2)

inst_660:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x12e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x792e; op2val:0x0;
   valaddr_reg:x4; val_offset:1270*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1270*FLEN/8, x6, x1, x2)

inst_661:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x12e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x792e; op2val:0x0;
   valaddr_reg:x4; val_offset:1272*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1272*FLEN/8, x6, x1, x2)

inst_662:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x12e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x792e; op2val:0x0;
   valaddr_reg:x4; val_offset:1274*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1274*FLEN/8, x6, x1, x2)

inst_663:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x12e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x792e; op2val:0x0;
   valaddr_reg:x4; val_offset:1276*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1276*FLEN/8, x6, x1, x2)

inst_664:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x12e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x792e; op2val:0x0;
   valaddr_reg:x4; val_offset:1278*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1278*FLEN/8, x6, x1, x2)

inst_665:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0bd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74bd; op2val:0x0;
   valaddr_reg:x4; val_offset:1280*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1280*FLEN/8, x6, x1, x2)

inst_666:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0bd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74bd; op2val:0x0;
   valaddr_reg:x4; val_offset:1282*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1282*FLEN/8, x6, x1, x2)

inst_667:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0bd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74bd; op2val:0x0;
   valaddr_reg:x4; val_offset:1284*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1284*FLEN/8, x6, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_668:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0bd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74bd; op2val:0x0;
   valaddr_reg:x4; val_offset:1286*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1286*FLEN/8, x6, x1, x2)

inst_669:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0bd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74bd; op2val:0x0;
   valaddr_reg:x4; val_offset:1288*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1288*FLEN/8, x6, x1, x2)

inst_670:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x15c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x795c; op2val:0x0;
   valaddr_reg:x4; val_offset:1290*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1290*FLEN/8, x6, x1, x2)

inst_671:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x15c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x795c; op2val:0x0;
   valaddr_reg:x4; val_offset:1292*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1292*FLEN/8, x6, x1, x2)

inst_672:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x15c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x795c; op2val:0x0;
   valaddr_reg:x4; val_offset:1294*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1294*FLEN/8, x6, x1, x2)

inst_673:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x15c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x795c; op2val:0x0;
   valaddr_reg:x4; val_offset:1296*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1296*FLEN/8, x6, x1, x2)

inst_674:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x15c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x795c; op2val:0x0;
   valaddr_reg:x4; val_offset:1298*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1298*FLEN/8, x6, x1, x2)

inst_675:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x304 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7704; op2val:0x0;
   valaddr_reg:x4; val_offset:1300*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1300*FLEN/8, x6, x1, x2)

inst_676:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x304 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7704; op2val:0x0;
   valaddr_reg:x4; val_offset:1302*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1302*FLEN/8, x6, x1, x2)

inst_677:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x304 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7704; op2val:0x0;
   valaddr_reg:x4; val_offset:1304*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1304*FLEN/8, x6, x1, x2)

inst_678:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x304 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7704; op2val:0x0;
   valaddr_reg:x4; val_offset:1306*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1306*FLEN/8, x6, x1, x2)

inst_679:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x304 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7704; op2val:0x0;
   valaddr_reg:x4; val_offset:1308*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1308*FLEN/8, x6, x1, x2)

inst_680:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x32b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6f2b; op2val:0x0;
   valaddr_reg:x4; val_offset:1310*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1310*FLEN/8, x6, x1, x2)

inst_681:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x32b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6f2b; op2val:0x0;
   valaddr_reg:x4; val_offset:1312*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1312*FLEN/8, x6, x1, x2)

inst_682:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x32b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6f2b; op2val:0x0;
   valaddr_reg:x4; val_offset:1314*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1314*FLEN/8, x6, x1, x2)

inst_683:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x32b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6f2b; op2val:0x0;
   valaddr_reg:x4; val_offset:1316*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1316*FLEN/8, x6, x1, x2)

inst_684:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x32b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6f2b; op2val:0x0;
   valaddr_reg:x4; val_offset:1318*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1318*FLEN/8, x6, x1, x2)

inst_685:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x398 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b98; op2val:0x0;
   valaddr_reg:x4; val_offset:1320*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1320*FLEN/8, x6, x1, x2)

inst_686:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x398 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b98; op2val:0x0;
   valaddr_reg:x4; val_offset:1322*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1322*FLEN/8, x6, x1, x2)

inst_687:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x398 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b98; op2val:0x0;
   valaddr_reg:x4; val_offset:1324*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1324*FLEN/8, x6, x1, x2)

inst_688:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x398 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b98; op2val:0x0;
   valaddr_reg:x4; val_offset:1326*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1326*FLEN/8, x6, x1, x2)

inst_689:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x398 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b98; op2val:0x0;
   valaddr_reg:x4; val_offset:1328*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1328*FLEN/8, x6, x1, x2)

inst_690:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x226 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e26; op2val:0x0;
   valaddr_reg:x4; val_offset:1330*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1330*FLEN/8, x6, x1, x2)

inst_691:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x226 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e26; op2val:0x0;
   valaddr_reg:x4; val_offset:1332*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1332*FLEN/8, x6, x1, x2)

inst_692:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x226 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e26; op2val:0x0;
   valaddr_reg:x4; val_offset:1334*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1334*FLEN/8, x6, x1, x2)

inst_693:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x226 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e26; op2val:0x0;
   valaddr_reg:x4; val_offset:1336*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1336*FLEN/8, x6, x1, x2)

inst_694:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x226 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e26; op2val:0x0;
   valaddr_reg:x4; val_offset:1338*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1338*FLEN/8, x6, x1, x2)

inst_695:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1b8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79b8; op2val:0x0;
   valaddr_reg:x4; val_offset:1340*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1340*FLEN/8, x6, x1, x2)

inst_696:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1b8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79b8; op2val:0x0;
   valaddr_reg:x4; val_offset:1342*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1342*FLEN/8, x6, x1, x2)

inst_697:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1b8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79b8; op2val:0x0;
   valaddr_reg:x4; val_offset:1344*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1344*FLEN/8, x6, x1, x2)

inst_698:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1b8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79b8; op2val:0x0;
   valaddr_reg:x4; val_offset:1346*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1346*FLEN/8, x6, x1, x2)

inst_699:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1b8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79b8; op2val:0x0;
   valaddr_reg:x4; val_offset:1348*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1348*FLEN/8, x6, x1, x2)

inst_700:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x327 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b27; op2val:0x0;
   valaddr_reg:x4; val_offset:1350*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1350*FLEN/8, x6, x1, x2)

inst_701:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x327 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b27; op2val:0x0;
   valaddr_reg:x4; val_offset:1352*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1352*FLEN/8, x6, x1, x2)

inst_702:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x327 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b27; op2val:0x0;
   valaddr_reg:x4; val_offset:1354*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1354*FLEN/8, x6, x1, x2)

inst_703:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x327 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b27; op2val:0x0;
   valaddr_reg:x4; val_offset:1356*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1356*FLEN/8, x6, x1, x2)

inst_704:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x327 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b27; op2val:0x0;
   valaddr_reg:x4; val_offset:1358*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1358*FLEN/8, x6, x1, x2)

inst_705:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x19f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x799f; op2val:0x0;
   valaddr_reg:x4; val_offset:1360*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1360*FLEN/8, x6, x1, x2)

inst_706:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x19f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x799f; op2val:0x0;
   valaddr_reg:x4; val_offset:1362*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1362*FLEN/8, x6, x1, x2)

inst_707:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x19f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x799f; op2val:0x0;
   valaddr_reg:x4; val_offset:1364*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1364*FLEN/8, x6, x1, x2)

inst_708:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x19f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x799f; op2val:0x0;
   valaddr_reg:x4; val_offset:1366*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1366*FLEN/8, x6, x1, x2)

inst_709:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x19f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x799f; op2val:0x0;
   valaddr_reg:x4; val_offset:1368*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1368*FLEN/8, x6, x1, x2)

inst_710:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3f5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bf5; op2val:0x0;
   valaddr_reg:x4; val_offset:1370*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1370*FLEN/8, x6, x1, x2)

inst_711:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3f5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bf5; op2val:0x0;
   valaddr_reg:x4; val_offset:1372*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1372*FLEN/8, x6, x1, x2)

inst_712:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3f5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bf5; op2val:0x0;
   valaddr_reg:x4; val_offset:1374*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1374*FLEN/8, x6, x1, x2)

inst_713:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3f5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bf5; op2val:0x0;
   valaddr_reg:x4; val_offset:1376*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1376*FLEN/8, x6, x1, x2)

inst_714:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3f5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bf5; op2val:0x0;
   valaddr_reg:x4; val_offset:1378*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1378*FLEN/8, x6, x1, x2)

inst_715:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x095 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7895; op2val:0x0;
   valaddr_reg:x4; val_offset:1380*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1380*FLEN/8, x6, x1, x2)

inst_716:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x095 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7895; op2val:0x0;
   valaddr_reg:x4; val_offset:1382*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1382*FLEN/8, x6, x1, x2)

inst_717:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x095 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7895; op2val:0x0;
   valaddr_reg:x4; val_offset:1384*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1384*FLEN/8, x6, x1, x2)

inst_718:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x095 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7895; op2val:0x0;
   valaddr_reg:x4; val_offset:1386*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1386*FLEN/8, x6, x1, x2)

inst_719:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x095 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7895; op2val:0x0;
   valaddr_reg:x4; val_offset:1388*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1388*FLEN/8, x6, x1, x2)

inst_720:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x30e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x770e; op2val:0x0;
   valaddr_reg:x4; val_offset:1390*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1390*FLEN/8, x6, x1, x2)

inst_721:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x30e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x770e; op2val:0x0;
   valaddr_reg:x4; val_offset:1392*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1392*FLEN/8, x6, x1, x2)

inst_722:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x30e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x770e; op2val:0x0;
   valaddr_reg:x4; val_offset:1394*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1394*FLEN/8, x6, x1, x2)

inst_723:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x30e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x770e; op2val:0x0;
   valaddr_reg:x4; val_offset:1396*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1396*FLEN/8, x6, x1, x2)

inst_724:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x30e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x770e; op2val:0x0;
   valaddr_reg:x4; val_offset:1398*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1398*FLEN/8, x6, x1, x2)

inst_725:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78c2; op2val:0x8000;
   valaddr_reg:x4; val_offset:1400*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1400*FLEN/8, x6, x1, x2)

inst_726:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78c2; op2val:0x8000;
   valaddr_reg:x4; val_offset:1402*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1402*FLEN/8, x6, x1, x2)

inst_727:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78c2; op2val:0x8000;
   valaddr_reg:x4; val_offset:1404*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1404*FLEN/8, x6, x1, x2)

inst_728:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78c2; op2val:0x8000;
   valaddr_reg:x4; val_offset:1406*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1406*FLEN/8, x6, x1, x2)

inst_729:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x78c2; op2val:0x8000;
   valaddr_reg:x4; val_offset:1408*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1408*FLEN/8, x6, x1, x2)

inst_730:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x1c5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x71c5; op2val:0x8000;
   valaddr_reg:x4; val_offset:1410*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1410*FLEN/8, x6, x1, x2)

inst_731:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x1c5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x71c5; op2val:0x8000;
   valaddr_reg:x4; val_offset:1412*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1412*FLEN/8, x6, x1, x2)

inst_732:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x1c5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x71c5; op2val:0x8000;
   valaddr_reg:x4; val_offset:1414*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1414*FLEN/8, x6, x1, x2)

inst_733:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x1c5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x71c5; op2val:0x8000;
   valaddr_reg:x4; val_offset:1416*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1416*FLEN/8, x6, x1, x2)

inst_734:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x1c5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x71c5; op2val:0x8000;
   valaddr_reg:x4; val_offset:1418*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1418*FLEN/8, x6, x1, x2)

inst_735:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x77b7; op2val:0x8000;
   valaddr_reg:x4; val_offset:1420*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1420*FLEN/8, x6, x1, x2)

inst_736:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x77b7; op2val:0x8000;
   valaddr_reg:x4; val_offset:1422*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1422*FLEN/8, x6, x1, x2)

inst_737:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x77b7; op2val:0x8000;
   valaddr_reg:x4; val_offset:1424*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1424*FLEN/8, x6, x1, x2)

inst_738:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x77b7; op2val:0x8000;
   valaddr_reg:x4; val_offset:1426*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1426*FLEN/8, x6, x1, x2)

inst_739:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x77b7; op2val:0x8000;
   valaddr_reg:x4; val_offset:1428*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1428*FLEN/8, x6, x1, x2)

inst_740:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1ae and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79ae; op2val:0x8000;
   valaddr_reg:x4; val_offset:1430*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1430*FLEN/8, x6, x1, x2)

inst_741:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1ae and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79ae; op2val:0x8000;
   valaddr_reg:x4; val_offset:1432*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1432*FLEN/8, x6, x1, x2)

inst_742:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1ae and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79ae; op2val:0x8000;
   valaddr_reg:x4; val_offset:1434*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1434*FLEN/8, x6, x1, x2)

inst_743:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1ae and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79ae; op2val:0x8000;
   valaddr_reg:x4; val_offset:1436*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1436*FLEN/8, x6, x1, x2)

inst_744:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1ae and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79ae; op2val:0x8000;
   valaddr_reg:x4; val_offset:1438*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1438*FLEN/8, x6, x1, x2)

inst_745:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1a3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79a3; op2val:0x8000;
   valaddr_reg:x4; val_offset:1440*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1440*FLEN/8, x6, x1, x2)

inst_746:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1a3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79a3; op2val:0x8000;
   valaddr_reg:x4; val_offset:1442*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1442*FLEN/8, x6, x1, x2)

inst_747:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1a3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79a3; op2val:0x8000;
   valaddr_reg:x4; val_offset:1444*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1444*FLEN/8, x6, x1, x2)

inst_748:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1a3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79a3; op2val:0x8000;
   valaddr_reg:x4; val_offset:1446*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1446*FLEN/8, x6, x1, x2)

inst_749:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1a3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79a3; op2val:0x8000;
   valaddr_reg:x4; val_offset:1448*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1448*FLEN/8, x6, x1, x2)

inst_750:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3b1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bb1; op2val:0x8000;
   valaddr_reg:x4; val_offset:1450*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1450*FLEN/8, x6, x1, x2)

inst_751:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3b1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bb1; op2val:0x8000;
   valaddr_reg:x4; val_offset:1452*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1452*FLEN/8, x6, x1, x2)

inst_752:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3b1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bb1; op2val:0x8000;
   valaddr_reg:x4; val_offset:1454*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1454*FLEN/8, x6, x1, x2)

inst_753:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3b1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bb1; op2val:0x8000;
   valaddr_reg:x4; val_offset:1456*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1456*FLEN/8, x6, x1, x2)

inst_754:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3b1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bb1; op2val:0x8000;
   valaddr_reg:x4; val_offset:1458*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1458*FLEN/8, x6, x1, x2)

inst_755:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79f6; op2val:0x8000;
   valaddr_reg:x4; val_offset:1460*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1460*FLEN/8, x6, x1, x2)

inst_756:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79f6; op2val:0x8000;
   valaddr_reg:x4; val_offset:1462*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1462*FLEN/8, x6, x1, x2)

inst_757:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79f6; op2val:0x8000;
   valaddr_reg:x4; val_offset:1464*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1464*FLEN/8, x6, x1, x2)

inst_758:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79f6; op2val:0x8000;
   valaddr_reg:x4; val_offset:1466*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1466*FLEN/8, x6, x1, x2)

inst_759:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79f6; op2val:0x8000;
   valaddr_reg:x4; val_offset:1468*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1468*FLEN/8, x6, x1, x2)

inst_760:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x217 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a17; op2val:0x8000;
   valaddr_reg:x4; val_offset:1470*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1470*FLEN/8, x6, x1, x2)

inst_761:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x217 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a17; op2val:0x8000;
   valaddr_reg:x4; val_offset:1472*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1472*FLEN/8, x6, x1, x2)

inst_762:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x217 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a17; op2val:0x8000;
   valaddr_reg:x4; val_offset:1474*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1474*FLEN/8, x6, x1, x2)

inst_763:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x217 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a17; op2val:0x8000;
   valaddr_reg:x4; val_offset:1476*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1476*FLEN/8, x6, x1, x2)

inst_764:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x217 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a17; op2val:0x8000;
   valaddr_reg:x4; val_offset:1478*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1478*FLEN/8, x6, x1, x2)

inst_765:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x332 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7332; op2val:0x8000;
   valaddr_reg:x4; val_offset:1480*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1480*FLEN/8, x6, x1, x2)

inst_766:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x332 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7332; op2val:0x8000;
   valaddr_reg:x4; val_offset:1482*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1482*FLEN/8, x6, x1, x2)

inst_767:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x332 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7332; op2val:0x8000;
   valaddr_reg:x4; val_offset:1484*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1484*FLEN/8, x6, x1, x2)

inst_768:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x332 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7332; op2val:0x8000;
   valaddr_reg:x4; val_offset:1486*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1486*FLEN/8, x6, x1, x2)

inst_769:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x332 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7332; op2val:0x8000;
   valaddr_reg:x4; val_offset:1488*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1488*FLEN/8, x6, x1, x2)

inst_770:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x270 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7670; op2val:0x8000;
   valaddr_reg:x4; val_offset:1490*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1490*FLEN/8, x6, x1, x2)

inst_771:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x270 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7670; op2val:0x8000;
   valaddr_reg:x4; val_offset:1492*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1492*FLEN/8, x6, x1, x2)

inst_772:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x270 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7670; op2val:0x8000;
   valaddr_reg:x4; val_offset:1494*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1494*FLEN/8, x6, x1, x2)

inst_773:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x270 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7670; op2val:0x8000;
   valaddr_reg:x4; val_offset:1496*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1496*FLEN/8, x6, x1, x2)

inst_774:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x270 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7670; op2val:0x8000;
   valaddr_reg:x4; val_offset:1498*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1498*FLEN/8, x6, x1, x2)

inst_775:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3d0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bd0; op2val:0x8000;
   valaddr_reg:x4; val_offset:1500*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1500*FLEN/8, x6, x1, x2)

inst_776:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3d0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bd0; op2val:0x8000;
   valaddr_reg:x4; val_offset:1502*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1502*FLEN/8, x6, x1, x2)

inst_777:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3d0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bd0; op2val:0x8000;
   valaddr_reg:x4; val_offset:1504*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1504*FLEN/8, x6, x1, x2)

inst_778:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3d0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bd0; op2val:0x8000;
   valaddr_reg:x4; val_offset:1506*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1506*FLEN/8, x6, x1, x2)

inst_779:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3d0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bd0; op2val:0x8000;
   valaddr_reg:x4; val_offset:1508*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1508*FLEN/8, x6, x1, x2)

inst_780:
// fs1 == 0 and fe1 == 0x18 and fm1 == 0x1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x001 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x61f2; op2val:0x8001;
   valaddr_reg:x4; val_offset:1510*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1510*FLEN/8, x6, x1, x2)

inst_781:
// fs1 == 0 and fe1 == 0x18 and fm1 == 0x1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x001 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x61f2; op2val:0x8001;
   valaddr_reg:x4; val_offset:1512*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1512*FLEN/8, x6, x1, x2)

inst_782:
// fs1 == 0 and fe1 == 0x18 and fm1 == 0x1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x001 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x61f2; op2val:0x8001;
   valaddr_reg:x4; val_offset:1514*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1514*FLEN/8, x6, x1, x2)

inst_783:
// fs1 == 0 and fe1 == 0x18 and fm1 == 0x1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x001 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x61f2; op2val:0x8001;
   valaddr_reg:x4; val_offset:1516*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1516*FLEN/8, x6, x1, x2)

inst_784:
// fs1 == 0 and fe1 == 0x18 and fm1 == 0x1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x001 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x61f2; op2val:0x8001;
   valaddr_reg:x4; val_offset:1518*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1518*FLEN/8, x6, x1, x2)

inst_785:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79b0; op2val:0x8000;
   valaddr_reg:x4; val_offset:1520*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1520*FLEN/8, x6, x1, x2)

inst_786:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79b0; op2val:0x8000;
   valaddr_reg:x4; val_offset:1522*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1522*FLEN/8, x6, x1, x2)

inst_787:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79b0; op2val:0x8000;
   valaddr_reg:x4; val_offset:1524*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1524*FLEN/8, x6, x1, x2)

inst_788:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79b0; op2val:0x8000;
   valaddr_reg:x4; val_offset:1526*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1526*FLEN/8, x6, x1, x2)

inst_789:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79b0; op2val:0x8000;
   valaddr_reg:x4; val_offset:1528*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1528*FLEN/8, x6, x1, x2)

inst_790:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x132 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7932; op2val:0x8000;
   valaddr_reg:x4; val_offset:1530*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1530*FLEN/8, x6, x1, x2)

inst_791:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x132 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7932; op2val:0x8000;
   valaddr_reg:x4; val_offset:1532*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1532*FLEN/8, x6, x1, x2)

inst_792:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x132 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7932; op2val:0x8000;
   valaddr_reg:x4; val_offset:1534*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1534*FLEN/8, x6, x1, x2)

inst_793:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x132 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7932; op2val:0x8000;
   valaddr_reg:x4; val_offset:1536*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1536*FLEN/8, x6, x1, x2)

inst_794:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x132 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7932; op2val:0x8000;
   valaddr_reg:x4; val_offset:1538*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1538*FLEN/8, x6, x1, x2)

inst_795:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x063 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x001 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6463; op2val:0x1;
   valaddr_reg:x4; val_offset:1540*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1540*FLEN/8, x6, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_796:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x063 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x001 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6463; op2val:0x1;
   valaddr_reg:x4; val_offset:1542*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1542*FLEN/8, x6, x1, x2)

inst_797:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x063 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x001 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6463; op2val:0x1;
   valaddr_reg:x4; val_offset:1544*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1544*FLEN/8, x6, x1, x2)

inst_798:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x063 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x001 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6463; op2val:0x1;
   valaddr_reg:x4; val_offset:1546*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1546*FLEN/8, x6, x1, x2)

inst_799:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x063 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x001 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6463; op2val:0x1;
   valaddr_reg:x4; val_offset:1548*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1548*FLEN/8, x6, x1, x2)

inst_800:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79d5; op2val:0x0;
   valaddr_reg:x4; val_offset:1550*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1550*FLEN/8, x6, x1, x2)

inst_801:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79d5; op2val:0x0;
   valaddr_reg:x4; val_offset:1552*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1552*FLEN/8, x6, x1, x2)

inst_802:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79d5; op2val:0x0;
   valaddr_reg:x4; val_offset:1554*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1554*FLEN/8, x6, x1, x2)

inst_803:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79d5; op2val:0x0;
   valaddr_reg:x4; val_offset:1556*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1556*FLEN/8, x6, x1, x2)

inst_804:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79d5; op2val:0x0;
   valaddr_reg:x4; val_offset:1558*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1558*FLEN/8, x6, x1, x2)

inst_805:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x33d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b3d; op2val:0x0;
   valaddr_reg:x4; val_offset:1560*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1560*FLEN/8, x6, x1, x2)

inst_806:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x33d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b3d; op2val:0x0;
   valaddr_reg:x4; val_offset:1562*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1562*FLEN/8, x6, x1, x2)

inst_807:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x33d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b3d; op2val:0x0;
   valaddr_reg:x4; val_offset:1564*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1564*FLEN/8, x6, x1, x2)

inst_808:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x33d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b3d; op2val:0x0;
   valaddr_reg:x4; val_offset:1566*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1566*FLEN/8, x6, x1, x2)

inst_809:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x33d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b3d; op2val:0x0;
   valaddr_reg:x4; val_offset:1568*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1568*FLEN/8, x6, x1, x2)

inst_810:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x26d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e6d; op2val:0x0;
   valaddr_reg:x4; val_offset:1570*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1570*FLEN/8, x6, x1, x2)

inst_811:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x26d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e6d; op2val:0x0;
   valaddr_reg:x4; val_offset:1572*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1572*FLEN/8, x6, x1, x2)

inst_812:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x26d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e6d; op2val:0x0;
   valaddr_reg:x4; val_offset:1574*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1574*FLEN/8, x6, x1, x2)

inst_813:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x26d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e6d; op2val:0x0;
   valaddr_reg:x4; val_offset:1576*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1576*FLEN/8, x6, x1, x2)

inst_814:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x26d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e6d; op2val:0x0;
   valaddr_reg:x4; val_offset:1578*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1578*FLEN/8, x6, x1, x2)

inst_815:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x222 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a22; op2val:0x0;
   valaddr_reg:x4; val_offset:1580*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1580*FLEN/8, x6, x1, x2)

inst_816:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x222 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a22; op2val:0x0;
   valaddr_reg:x4; val_offset:1582*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1582*FLEN/8, x6, x1, x2)

inst_817:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x222 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a22; op2val:0x0;
   valaddr_reg:x4; val_offset:1584*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1584*FLEN/8, x6, x1, x2)

inst_818:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x222 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a22; op2val:0x0;
   valaddr_reg:x4; val_offset:1586*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1586*FLEN/8, x6, x1, x2)

inst_819:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x222 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a22; op2val:0x0;
   valaddr_reg:x4; val_offset:1588*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1588*FLEN/8, x6, x1, x2)

inst_820:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1f3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79f3; op2val:0x0;
   valaddr_reg:x4; val_offset:1590*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1590*FLEN/8, x6, x1, x2)

inst_821:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1f3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79f3; op2val:0x0;
   valaddr_reg:x4; val_offset:1592*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1592*FLEN/8, x6, x1, x2)

inst_822:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1f3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79f3; op2val:0x0;
   valaddr_reg:x4; val_offset:1594*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1594*FLEN/8, x6, x1, x2)

inst_823:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1f3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79f3; op2val:0x0;
   valaddr_reg:x4; val_offset:1596*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1596*FLEN/8, x6, x1, x2)

inst_824:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1f3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79f3; op2val:0x0;
   valaddr_reg:x4; val_offset:1598*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1598*FLEN/8, x6, x1, x2)

inst_825:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x220 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7220; op2val:0x0;
   valaddr_reg:x4; val_offset:1600*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1600*FLEN/8, x6, x1, x2)

inst_826:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x220 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7220; op2val:0x0;
   valaddr_reg:x4; val_offset:1602*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1602*FLEN/8, x6, x1, x2)

inst_827:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x220 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7220; op2val:0x0;
   valaddr_reg:x4; val_offset:1604*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1604*FLEN/8, x6, x1, x2)

inst_828:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x220 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7220; op2val:0x0;
   valaddr_reg:x4; val_offset:1606*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1606*FLEN/8, x6, x1, x2)

inst_829:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x220 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7220; op2val:0x0;
   valaddr_reg:x4; val_offset:1608*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1608*FLEN/8, x6, x1, x2)

inst_830:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x069 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x341 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7069; op2val:0x1f41;
   valaddr_reg:x4; val_offset:1610*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1610*FLEN/8, x6, x1, x2)

inst_831:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x069 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x341 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7069; op2val:0x1f41;
   valaddr_reg:x4; val_offset:1612*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1612*FLEN/8, x6, x1, x2)

inst_832:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x069 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x341 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7069; op2val:0x1f41;
   valaddr_reg:x4; val_offset:1614*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1614*FLEN/8, x6, x1, x2)

inst_833:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x069 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x341 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7069; op2val:0x1f41;
   valaddr_reg:x4; val_offset:1616*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1616*FLEN/8, x6, x1, x2)

inst_834:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x069 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x341 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7069; op2val:0x1f41;
   valaddr_reg:x4; val_offset:1618*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1618*FLEN/8, x6, x1, x2)

inst_835:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2f2 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x09b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x76f2; op2val:0x189b;
   valaddr_reg:x4; val_offset:1620*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1620*FLEN/8, x6, x1, x2)

inst_836:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2f2 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x09b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x76f2; op2val:0x189b;
   valaddr_reg:x4; val_offset:1622*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1622*FLEN/8, x6, x1, x2)

inst_837:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2f2 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x09b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x76f2; op2val:0x189b;
   valaddr_reg:x4; val_offset:1624*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1624*FLEN/8, x6, x1, x2)

inst_838:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2f2 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x09b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x76f2; op2val:0x189b;
   valaddr_reg:x4; val_offset:1626*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1626*FLEN/8, x6, x1, x2)

inst_839:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2f2 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x09b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x76f2; op2val:0x189b;
   valaddr_reg:x4; val_offset:1628*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1628*FLEN/8, x6, x1, x2)

inst_840:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x086 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x311 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7886; op2val:0x1711;
   valaddr_reg:x4; val_offset:1630*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1630*FLEN/8, x6, x1, x2)

inst_841:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x086 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x311 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7886; op2val:0x1711;
   valaddr_reg:x4; val_offset:1632*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1632*FLEN/8, x6, x1, x2)

inst_842:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x086 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x311 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7886; op2val:0x1711;
   valaddr_reg:x4; val_offset:1634*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1634*FLEN/8, x6, x1, x2)

inst_843:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x086 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x311 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7886; op2val:0x1711;
   valaddr_reg:x4; val_offset:1636*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1636*FLEN/8, x6, x1, x2)

inst_844:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x086 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x311 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7886; op2val:0x1711;
   valaddr_reg:x4; val_offset:1638*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1638*FLEN/8, x6, x1, x2)

inst_845:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x28e and fs2 == 0 and fe2 == 0x07 and fm2 == 0x0e1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x728e; op2val:0x1ce1;
   valaddr_reg:x4; val_offset:1640*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1640*FLEN/8, x6, x1, x2)

inst_846:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x28e and fs2 == 0 and fe2 == 0x07 and fm2 == 0x0e1 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x728e; op2val:0x1ce1;
   valaddr_reg:x4; val_offset:1642*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1642*FLEN/8, x6, x1, x2)

inst_847:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x28e and fs2 == 0 and fe2 == 0x07 and fm2 == 0x0e1 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x728e; op2val:0x1ce1;
   valaddr_reg:x4; val_offset:1644*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1644*FLEN/8, x6, x1, x2)

inst_848:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x28e and fs2 == 0 and fe2 == 0x07 and fm2 == 0x0e1 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x728e; op2val:0x1ce1;
   valaddr_reg:x4; val_offset:1646*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1646*FLEN/8, x6, x1, x2)

inst_849:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x28e and fs2 == 0 and fe2 == 0x07 and fm2 == 0x0e1 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x728e; op2val:0x1ce1;
   valaddr_reg:x4; val_offset:1648*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1648*FLEN/8, x6, x1, x2)

inst_850:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x0a8 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2de and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6ca8; op2val:0x22de;
   valaddr_reg:x4; val_offset:1650*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1650*FLEN/8, x6, x1, x2)

inst_851:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x0a8 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2de and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6ca8; op2val:0x22de;
   valaddr_reg:x4; val_offset:1652*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1652*FLEN/8, x6, x1, x2)

inst_852:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x0a8 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2de and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6ca8; op2val:0x22de;
   valaddr_reg:x4; val_offset:1654*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1654*FLEN/8, x6, x1, x2)

inst_853:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x0a8 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2de and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6ca8; op2val:0x22de;
   valaddr_reg:x4; val_offset:1656*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1656*FLEN/8, x6, x1, x2)

inst_854:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x0a8 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2de and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6ca8; op2val:0x22de;
   valaddr_reg:x4; val_offset:1658*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1658*FLEN/8, x6, x1, x2)

inst_855:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3c3 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x01f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x77c3; op2val:0x181f;
   valaddr_reg:x4; val_offset:1660*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1660*FLEN/8, x6, x1, x2)

inst_856:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3c3 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x01f and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x77c3; op2val:0x181f;
   valaddr_reg:x4; val_offset:1662*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1662*FLEN/8, x6, x1, x2)

inst_857:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3c3 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x01f and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x77c3; op2val:0x181f;
   valaddr_reg:x4; val_offset:1664*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1664*FLEN/8, x6, x1, x2)

inst_858:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3c3 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x01f and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x77c3; op2val:0x181f;
   valaddr_reg:x4; val_offset:1666*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1666*FLEN/8, x6, x1, x2)

inst_859:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3c3 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x01f and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x77c3; op2val:0x181f;
   valaddr_reg:x4; val_offset:1668*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1668*FLEN/8, x6, x1, x2)

inst_860:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x143 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x214 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7943; op2val:0x1614;
   valaddr_reg:x4; val_offset:1670*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1670*FLEN/8, x6, x1, x2)

inst_861:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x143 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x214 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7943; op2val:0x1614;
   valaddr_reg:x4; val_offset:1672*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1672*FLEN/8, x6, x1, x2)

inst_862:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x143 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x214 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7943; op2val:0x1614;
   valaddr_reg:x4; val_offset:1674*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1674*FLEN/8, x6, x1, x2)

inst_863:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x143 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x214 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7943; op2val:0x1614;
   valaddr_reg:x4; val_offset:1676*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1676*FLEN/8, x6, x1, x2)

inst_864:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x143 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x214 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7943; op2val:0x1614;
   valaddr_reg:x4; val_offset:1678*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1678*FLEN/8, x6, x1, x2)

inst_865:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3c1 and fs2 == 1 and fe2 == 0x06 and fm2 == 0x020 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x77c1; op2val:0x9820;
   valaddr_reg:x4; val_offset:1680*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1680*FLEN/8, x6, x1, x2)

inst_866:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3c1 and fs2 == 1 and fe2 == 0x06 and fm2 == 0x020 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x77c1; op2val:0x9820;
   valaddr_reg:x4; val_offset:1682*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1682*FLEN/8, x6, x1, x2)

inst_867:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3c1 and fs2 == 1 and fe2 == 0x06 and fm2 == 0x020 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x77c1; op2val:0x9820;
   valaddr_reg:x4; val_offset:1684*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1684*FLEN/8, x6, x1, x2)

inst_868:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3c1 and fs2 == 1 and fe2 == 0x06 and fm2 == 0x020 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x77c1; op2val:0x9820;
   valaddr_reg:x4; val_offset:1686*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1686*FLEN/8, x6, x1, x2)

inst_869:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3c1 and fs2 == 1 and fe2 == 0x06 and fm2 == 0x020 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x77c1; op2val:0x9820;
   valaddr_reg:x4; val_offset:1688*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1688*FLEN/8, x6, x1, x2)

inst_870:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x15b and fs2 == 1 and fe2 == 0x06 and fm2 == 0x1f9 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x755b; op2val:0x99f9;
   valaddr_reg:x4; val_offset:1690*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1690*FLEN/8, x6, x1, x2)

inst_871:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x15b and fs2 == 1 and fe2 == 0x06 and fm2 == 0x1f9 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x755b; op2val:0x99f9;
   valaddr_reg:x4; val_offset:1692*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1692*FLEN/8, x6, x1, x2)

inst_872:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x15b and fs2 == 1 and fe2 == 0x06 and fm2 == 0x1f9 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x755b; op2val:0x99f9;
   valaddr_reg:x4; val_offset:1694*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1694*FLEN/8, x6, x1, x2)

inst_873:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x15b and fs2 == 1 and fe2 == 0x06 and fm2 == 0x1f9 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x755b; op2val:0x99f9;
   valaddr_reg:x4; val_offset:1696*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1696*FLEN/8, x6, x1, x2)

inst_874:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x15b and fs2 == 1 and fe2 == 0x06 and fm2 == 0x1f9 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x755b; op2val:0x99f9;
   valaddr_reg:x4; val_offset:1698*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1698*FLEN/8, x6, x1, x2)

inst_875:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x005 and fs2 == 1 and fe2 == 0x05 and fm2 == 0x3f5 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7805; op2val:0x97f5;
   valaddr_reg:x4; val_offset:1700*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1700*FLEN/8, x6, x1, x2)

inst_876:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x005 and fs2 == 1 and fe2 == 0x05 and fm2 == 0x3f5 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7805; op2val:0x97f5;
   valaddr_reg:x4; val_offset:1702*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1702*FLEN/8, x6, x1, x2)

inst_877:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x005 and fs2 == 1 and fe2 == 0x05 and fm2 == 0x3f5 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7805; op2val:0x97f5;
   valaddr_reg:x4; val_offset:1704*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1704*FLEN/8, x6, x1, x2)

inst_878:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x005 and fs2 == 1 and fe2 == 0x05 and fm2 == 0x3f5 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7805; op2val:0x97f5;
   valaddr_reg:x4; val_offset:1706*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1706*FLEN/8, x6, x1, x2)

inst_879:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x005 and fs2 == 1 and fe2 == 0x05 and fm2 == 0x3f5 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7805; op2val:0x97f5;
   valaddr_reg:x4; val_offset:1708*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1708*FLEN/8, x6, x1, x2)

inst_880:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x11b and fs2 == 1 and fe2 == 0x08 and fm2 == 0x244 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6d1b; op2val:0xa244;
   valaddr_reg:x4; val_offset:1710*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1710*FLEN/8, x6, x1, x2)

inst_881:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x11b and fs2 == 1 and fe2 == 0x08 and fm2 == 0x244 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6d1b; op2val:0xa244;
   valaddr_reg:x4; val_offset:1712*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1712*FLEN/8, x6, x1, x2)

inst_882:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x11b and fs2 == 1 and fe2 == 0x08 and fm2 == 0x244 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6d1b; op2val:0xa244;
   valaddr_reg:x4; val_offset:1714*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1714*FLEN/8, x6, x1, x2)

inst_883:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x11b and fs2 == 1 and fe2 == 0x08 and fm2 == 0x244 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6d1b; op2val:0xa244;
   valaddr_reg:x4; val_offset:1716*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1716*FLEN/8, x6, x1, x2)

inst_884:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x11b and fs2 == 1 and fe2 == 0x08 and fm2 == 0x244 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6d1b; op2val:0xa244;
   valaddr_reg:x4; val_offset:1718*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1718*FLEN/8, x6, x1, x2)

inst_885:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x18e and fs2 == 1 and fe2 == 0x07 and fm2 == 0x1c2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x718e; op2val:0x9dc2;
   valaddr_reg:x4; val_offset:1720*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1720*FLEN/8, x6, x1, x2)

inst_886:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x18e and fs2 == 1 and fe2 == 0x07 and fm2 == 0x1c2 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x718e; op2val:0x9dc2;
   valaddr_reg:x4; val_offset:1722*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1722*FLEN/8, x6, x1, x2)

inst_887:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x18e and fs2 == 1 and fe2 == 0x07 and fm2 == 0x1c2 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x718e; op2val:0x9dc2;
   valaddr_reg:x4; val_offset:1724*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1724*FLEN/8, x6, x1, x2)

inst_888:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x18e and fs2 == 1 and fe2 == 0x07 and fm2 == 0x1c2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x718e; op2val:0x9dc2;
   valaddr_reg:x4; val_offset:1726*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1726*FLEN/8, x6, x1, x2)

inst_889:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x18e and fs2 == 1 and fe2 == 0x07 and fm2 == 0x1c2 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x718e; op2val:0x9dc2;
   valaddr_reg:x4; val_offset:1728*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1728*FLEN/8, x6, x1, x2)

inst_890:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x245 and fs2 == 1 and fe2 == 0x05 and fm2 == 0x11a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a45; op2val:0x951a;
   valaddr_reg:x4; val_offset:1730*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1730*FLEN/8, x6, x1, x2)

inst_891:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x245 and fs2 == 1 and fe2 == 0x05 and fm2 == 0x11a and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a45; op2val:0x951a;
   valaddr_reg:x4; val_offset:1732*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1732*FLEN/8, x6, x1, x2)

inst_892:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x245 and fs2 == 1 and fe2 == 0x05 and fm2 == 0x11a and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a45; op2val:0x951a;
   valaddr_reg:x4; val_offset:1734*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1734*FLEN/8, x6, x1, x2)

inst_893:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x245 and fs2 == 1 and fe2 == 0x05 and fm2 == 0x11a and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a45; op2val:0x951a;
   valaddr_reg:x4; val_offset:1736*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1736*FLEN/8, x6, x1, x2)

inst_894:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x245 and fs2 == 1 and fe2 == 0x05 and fm2 == 0x11a and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a45; op2val:0x951a;
   valaddr_reg:x4; val_offset:1738*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1738*FLEN/8, x6, x1, x2)

inst_895:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x165 and fs2 == 1 and fe2 == 0x05 and fm2 == 0x1ed and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7965; op2val:0x95ed;
   valaddr_reg:x4; val_offset:1740*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1740*FLEN/8, x6, x1, x2)

inst_896:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x165 and fs2 == 1 and fe2 == 0x05 and fm2 == 0x1ed and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7965; op2val:0x95ed;
   valaddr_reg:x4; val_offset:1742*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1742*FLEN/8, x6, x1, x2)

inst_897:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x165 and fs2 == 1 and fe2 == 0x05 and fm2 == 0x1ed and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7965; op2val:0x95ed;
   valaddr_reg:x4; val_offset:1744*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1744*FLEN/8, x6, x1, x2)

inst_898:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x165 and fs2 == 1 and fe2 == 0x05 and fm2 == 0x1ed and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7965; op2val:0x95ed;
   valaddr_reg:x4; val_offset:1746*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1746*FLEN/8, x6, x1, x2)

inst_899:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x165 and fs2 == 1 and fe2 == 0x05 and fm2 == 0x1ed and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7965; op2val:0x95ed;
   valaddr_reg:x4; val_offset:1748*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1748*FLEN/8, x6, x1, x2)

inst_900:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2e8 and fs2 == 1 and fe2 == 0x05 and fm2 == 0x0a1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ae8; op2val:0x94a1;
   valaddr_reg:x4; val_offset:1750*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1750*FLEN/8, x6, x1, x2)

inst_901:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2e8 and fs2 == 1 and fe2 == 0x05 and fm2 == 0x0a1 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ae8; op2val:0x94a1;
   valaddr_reg:x4; val_offset:1752*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1752*FLEN/8, x6, x1, x2)

inst_902:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2e8 and fs2 == 1 and fe2 == 0x05 and fm2 == 0x0a1 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ae8; op2val:0x94a1;
   valaddr_reg:x4; val_offset:1754*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1754*FLEN/8, x6, x1, x2)

inst_903:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2e8 and fs2 == 1 and fe2 == 0x05 and fm2 == 0x0a1 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ae8; op2val:0x94a1;
   valaddr_reg:x4; val_offset:1756*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1756*FLEN/8, x6, x1, x2)

inst_904:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2e8 and fs2 == 1 and fe2 == 0x05 and fm2 == 0x0a1 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ae8; op2val:0x94a1;
   valaddr_reg:x4; val_offset:1758*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1758*FLEN/8, x6, x1, x2)

inst_905:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x133 and fs2 == 1 and fe2 == 0x07 and fm2 == 0x227 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7133; op2val:0x9e27;
   valaddr_reg:x4; val_offset:1760*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1760*FLEN/8, x6, x1, x2)

inst_906:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x133 and fs2 == 1 and fe2 == 0x07 and fm2 == 0x227 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7133; op2val:0x9e27;
   valaddr_reg:x4; val_offset:1762*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1762*FLEN/8, x6, x1, x2)

inst_907:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x133 and fs2 == 1 and fe2 == 0x07 and fm2 == 0x227 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7133; op2val:0x9e27;
   valaddr_reg:x4; val_offset:1764*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1764*FLEN/8, x6, x1, x2)

inst_908:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x133 and fs2 == 1 and fe2 == 0x07 and fm2 == 0x227 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7133; op2val:0x9e27;
   valaddr_reg:x4; val_offset:1766*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1766*FLEN/8, x6, x1, x2)

inst_909:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x133 and fs2 == 1 and fe2 == 0x07 and fm2 == 0x227 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7133; op2val:0x9e27;
   valaddr_reg:x4; val_offset:1768*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1768*FLEN/8, x6, x1, x2)

inst_910:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x36e and fs2 == 1 and fe2 == 0x06 and fm2 == 0x04e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x776e; op2val:0x984e;
   valaddr_reg:x4; val_offset:1770*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1770*FLEN/8, x6, x1, x2)

inst_911:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x36e and fs2 == 1 and fe2 == 0x06 and fm2 == 0x04e and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x776e; op2val:0x984e;
   valaddr_reg:x4; val_offset:1772*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1772*FLEN/8, x6, x1, x2)

inst_912:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x36e and fs2 == 1 and fe2 == 0x06 and fm2 == 0x04e and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x776e; op2val:0x984e;
   valaddr_reg:x4; val_offset:1774*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1774*FLEN/8, x6, x1, x2)

inst_913:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x36e and fs2 == 1 and fe2 == 0x06 and fm2 == 0x04e and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x776e; op2val:0x984e;
   valaddr_reg:x4; val_offset:1776*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1776*FLEN/8, x6, x1, x2)

inst_914:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x36e and fs2 == 1 and fe2 == 0x06 and fm2 == 0x04e and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x776e; op2val:0x984e;
   valaddr_reg:x4; val_offset:1778*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1778*FLEN/8, x6, x1, x2)

inst_915:
// fs1 == 0 and fe1 == 0x18 and fm1 == 0x154 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x200 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6154; op2val:0xae00;
   valaddr_reg:x4; val_offset:1780*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1780*FLEN/8, x6, x1, x2)

inst_916:
// fs1 == 0 and fe1 == 0x18 and fm1 == 0x154 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x200 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6154; op2val:0xae00;
   valaddr_reg:x4; val_offset:1782*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1782*FLEN/8, x6, x1, x2)

inst_917:
// fs1 == 0 and fe1 == 0x18 and fm1 == 0x154 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x200 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6154; op2val:0xae00;
   valaddr_reg:x4; val_offset:1784*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1784*FLEN/8, x6, x1, x2)

inst_918:
// fs1 == 0 and fe1 == 0x18 and fm1 == 0x154 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x200 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6154; op2val:0xae00;
   valaddr_reg:x4; val_offset:1786*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1786*FLEN/8, x6, x1, x2)

inst_919:
// fs1 == 0 and fe1 == 0x18 and fm1 == 0x154 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x200 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6154; op2val:0xae00;
   valaddr_reg:x4; val_offset:1788*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1788*FLEN/8, x6, x1, x2)

inst_920:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3bb and fs2 == 1 and fe2 == 0x05 and fm2 == 0x023 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bbb; op2val:0x9423;
   valaddr_reg:x4; val_offset:1790*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1790*FLEN/8, x6, x1, x2)

inst_921:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3bb and fs2 == 1 and fe2 == 0x05 and fm2 == 0x023 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bbb; op2val:0x9423;
   valaddr_reg:x4; val_offset:1792*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1792*FLEN/8, x6, x1, x2)

inst_922:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3bb and fs2 == 1 and fe2 == 0x05 and fm2 == 0x023 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bbb; op2val:0x9423;
   valaddr_reg:x4; val_offset:1794*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1794*FLEN/8, x6, x1, x2)

inst_923:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3bb and fs2 == 1 and fe2 == 0x05 and fm2 == 0x023 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bbb; op2val:0x9423;
   valaddr_reg:x4; val_offset:1796*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1796*FLEN/8, x6, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_7)

inst_924:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3bb and fs2 == 1 and fe2 == 0x05 and fm2 == 0x023 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bbb; op2val:0x9423;
   valaddr_reg:x4; val_offset:1798*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1798*FLEN/8, x6, x1, x2)

inst_925:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x04d and fs2 == 1 and fe2 == 0x05 and fm2 == 0x370 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x784d; op2val:0x9770;
   valaddr_reg:x4; val_offset:1800*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1800*FLEN/8, x6, x1, x2)

inst_926:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x04d and fs2 == 1 and fe2 == 0x05 and fm2 == 0x370 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x784d; op2val:0x9770;
   valaddr_reg:x4; val_offset:1802*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1802*FLEN/8, x6, x1, x2)

inst_927:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x04d and fs2 == 1 and fe2 == 0x05 and fm2 == 0x370 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x784d; op2val:0x9770;
   valaddr_reg:x4; val_offset:1804*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1804*FLEN/8, x6, x1, x2)

inst_928:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x04d and fs2 == 1 and fe2 == 0x05 and fm2 == 0x370 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x784d; op2val:0x9770;
   valaddr_reg:x4; val_offset:1806*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1806*FLEN/8, x6, x1, x2)

inst_929:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x04d and fs2 == 1 and fe2 == 0x05 and fm2 == 0x370 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x784d; op2val:0x9770;
   valaddr_reg:x4; val_offset:1808*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1808*FLEN/8, x6, x1, x2)

inst_930:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x314 and fs2 == 1 and fe2 == 0x06 and fm2 == 0x084 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7714; op2val:0x9884;
   valaddr_reg:x4; val_offset:1810*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1810*FLEN/8, x6, x1, x2)

inst_931:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x314 and fs2 == 1 and fe2 == 0x06 and fm2 == 0x084 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7714; op2val:0x9884;
   valaddr_reg:x4; val_offset:1812*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1812*FLEN/8, x6, x1, x2)

inst_932:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x314 and fs2 == 1 and fe2 == 0x06 and fm2 == 0x084 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7714; op2val:0x9884;
   valaddr_reg:x4; val_offset:1814*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1814*FLEN/8, x6, x1, x2)

inst_933:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x314 and fs2 == 1 and fe2 == 0x06 and fm2 == 0x084 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7714; op2val:0x9884;
   valaddr_reg:x4; val_offset:1816*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1816*FLEN/8, x6, x1, x2)

inst_934:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x314 and fs2 == 1 and fe2 == 0x06 and fm2 == 0x084 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7714; op2val:0x9884;
   valaddr_reg:x4; val_offset:1818*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1818*FLEN/8, x6, x1, x2)

inst_935:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0ee and fs2 == 0 and fe2 == 0x06 and fm2 == 0x27c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74ee; op2val:0x1a7c;
   valaddr_reg:x4; val_offset:1820*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1820*FLEN/8, x6, x1, x2)

inst_936:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0ee and fs2 == 0 and fe2 == 0x06 and fm2 == 0x27c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74ee; op2val:0x1a7c;
   valaddr_reg:x4; val_offset:1822*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1822*FLEN/8, x6, x1, x2)

inst_937:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0ee and fs2 == 0 and fe2 == 0x06 and fm2 == 0x27c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74ee; op2val:0x1a7c;
   valaddr_reg:x4; val_offset:1824*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1824*FLEN/8, x6, x1, x2)

inst_938:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0ee and fs2 == 0 and fe2 == 0x06 and fm2 == 0x27c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74ee; op2val:0x1a7c;
   valaddr_reg:x4; val_offset:1826*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1826*FLEN/8, x6, x1, x2)

inst_939:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0ee and fs2 == 0 and fe2 == 0x06 and fm2 == 0x27c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74ee; op2val:0x1a7c;
   valaddr_reg:x4; val_offset:1828*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1828*FLEN/8, x6, x1, x2)

inst_940:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3bc and fs2 == 0 and fe2 == 0x06 and fm2 == 0x022 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x77bc; op2val:0x1822;
   valaddr_reg:x4; val_offset:1830*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1830*FLEN/8, x6, x1, x2)

inst_941:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3bc and fs2 == 0 and fe2 == 0x06 and fm2 == 0x022 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x77bc; op2val:0x1822;
   valaddr_reg:x4; val_offset:1832*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1832*FLEN/8, x6, x1, x2)

inst_942:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3bc and fs2 == 0 and fe2 == 0x06 and fm2 == 0x022 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x77bc; op2val:0x1822;
   valaddr_reg:x4; val_offset:1834*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1834*FLEN/8, x6, x1, x2)

inst_943:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3bc and fs2 == 0 and fe2 == 0x06 and fm2 == 0x022 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x77bc; op2val:0x1822;
   valaddr_reg:x4; val_offset:1836*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1836*FLEN/8, x6, x1, x2)

inst_944:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3bc and fs2 == 0 and fe2 == 0x06 and fm2 == 0x022 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x77bc; op2val:0x1822;
   valaddr_reg:x4; val_offset:1838*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1838*FLEN/8, x6, x1, x2)

inst_945:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x350 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x060 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b50; op2val:0x1460;
   valaddr_reg:x4; val_offset:1840*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1840*FLEN/8, x6, x1, x2)

inst_946:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x350 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x060 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b50; op2val:0x1460;
   valaddr_reg:x4; val_offset:1842*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1842*FLEN/8, x6, x1, x2)

inst_947:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x350 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x060 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b50; op2val:0x1460;
   valaddr_reg:x4; val_offset:1844*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1844*FLEN/8, x6, x1, x2)

inst_948:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x350 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x060 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b50; op2val:0x1460;
   valaddr_reg:x4; val_offset:1846*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1846*FLEN/8, x6, x1, x2)

inst_949:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x350 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x060 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b50; op2val:0x1460;
   valaddr_reg:x4; val_offset:1848*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1848*FLEN/8, x6, x1, x2)

inst_950:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x297 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x0da and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a97; op2val:0x14da;
   valaddr_reg:x4; val_offset:1850*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1850*FLEN/8, x6, x1, x2)

inst_951:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x297 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x0da and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a97; op2val:0x14da;
   valaddr_reg:x4; val_offset:1852*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1852*FLEN/8, x6, x1, x2)

inst_952:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x297 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x0da and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a97; op2val:0x14da;
   valaddr_reg:x4; val_offset:1854*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1854*FLEN/8, x6, x1, x2)

inst_953:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x297 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x0da and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a97; op2val:0x14da;
   valaddr_reg:x4; val_offset:1856*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1856*FLEN/8, x6, x1, x2)

inst_954:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x297 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x0da and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a97; op2val:0x14da;
   valaddr_reg:x4; val_offset:1858*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1858*FLEN/8, x6, x1, x2)

inst_955:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x12b and fs2 == 0 and fe2 == 0x05 and fm2 == 0x231 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x792b; op2val:0x1631;
   valaddr_reg:x4; val_offset:1860*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1860*FLEN/8, x6, x1, x2)

inst_956:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x12b and fs2 == 0 and fe2 == 0x05 and fm2 == 0x231 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x792b; op2val:0x1631;
   valaddr_reg:x4; val_offset:1862*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1862*FLEN/8, x6, x1, x2)

inst_957:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x12b and fs2 == 0 and fe2 == 0x05 and fm2 == 0x231 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x792b; op2val:0x1631;
   valaddr_reg:x4; val_offset:1864*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1864*FLEN/8, x6, x1, x2)

inst_958:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x12b and fs2 == 0 and fe2 == 0x05 and fm2 == 0x231 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x792b; op2val:0x1631;
   valaddr_reg:x4; val_offset:1866*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1866*FLEN/8, x6, x1, x2)

inst_959:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x12b and fs2 == 0 and fe2 == 0x05 and fm2 == 0x231 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x792b; op2val:0x1631;
   valaddr_reg:x4; val_offset:1868*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1868*FLEN/8, x6, x1, x2)

inst_960:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x139 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x21f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7939; op2val:0x161f;
   valaddr_reg:x4; val_offset:1870*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1870*FLEN/8, x6, x1, x2)

inst_961:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x139 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x21f and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7939; op2val:0x161f;
   valaddr_reg:x4; val_offset:1872*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1872*FLEN/8, x6, x1, x2)

inst_962:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x139 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x21f and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7939; op2val:0x161f;
   valaddr_reg:x4; val_offset:1874*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1874*FLEN/8, x6, x1, x2)

inst_963:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x139 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x21f and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7939; op2val:0x161f;
   valaddr_reg:x4; val_offset:1876*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1876*FLEN/8, x6, x1, x2)

inst_964:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x139 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x21f and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7939; op2val:0x161f;
   valaddr_reg:x4; val_offset:1878*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1878*FLEN/8, x6, x1, x2)

inst_965:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2b8 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x0c2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ab8; op2val:0x14c2;
   valaddr_reg:x4; val_offset:1880*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1880*FLEN/8, x6, x1, x2)

inst_966:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2b8 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x0c2 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ab8; op2val:0x14c2;
   valaddr_reg:x4; val_offset:1882*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1882*FLEN/8, x6, x1, x2)

inst_967:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2b8 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x0c2 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ab8; op2val:0x14c2;
   valaddr_reg:x4; val_offset:1884*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1884*FLEN/8, x6, x1, x2)

inst_968:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2b8 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x0c2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ab8; op2val:0x14c2;
   valaddr_reg:x4; val_offset:1886*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1886*FLEN/8, x6, x1, x2)

inst_969:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2b8 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x0c2 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ab8; op2val:0x14c2;
   valaddr_reg:x4; val_offset:1888*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1888*FLEN/8, x6, x1, x2)

inst_970:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x110 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7910; op2val:0xc;
   valaddr_reg:x4; val_offset:1890*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1890*FLEN/8, x6, x1, x2)

inst_971:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x110 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7910; op2val:0xc;
   valaddr_reg:x4; val_offset:1892*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1892*FLEN/8, x6, x1, x2)

inst_972:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x110 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7910; op2val:0xc;
   valaddr_reg:x4; val_offset:1894*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1894*FLEN/8, x6, x1, x2)

inst_973:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x110 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7910; op2val:0xc;
   valaddr_reg:x4; val_offset:1896*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1896*FLEN/8, x6, x1, x2)

inst_974:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x110 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7910; op2val:0xc;
   valaddr_reg:x4; val_offset:1898*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1898*FLEN/8, x6, x1, x2)

inst_975:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x03d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x783d; op2val:0xf;
   valaddr_reg:x4; val_offset:1900*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1900*FLEN/8, x6, x1, x2)

inst_976:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x03d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00f and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x783d; op2val:0xf;
   valaddr_reg:x4; val_offset:1902*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1902*FLEN/8, x6, x1, x2)

inst_977:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x03d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00f and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x783d; op2val:0xf;
   valaddr_reg:x4; val_offset:1904*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1904*FLEN/8, x6, x1, x2)

inst_978:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x03d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00f and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x783d; op2val:0xf;
   valaddr_reg:x4; val_offset:1906*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1906*FLEN/8, x6, x1, x2)

inst_979:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x03d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00f and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x783d; op2val:0xf;
   valaddr_reg:x4; val_offset:1908*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1908*FLEN/8, x6, x1, x2)

inst_980:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x261 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a61; op2val:0xa;
   valaddr_reg:x4; val_offset:1910*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1910*FLEN/8, x6, x1, x2)

inst_981:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x261 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00a and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a61; op2val:0xa;
   valaddr_reg:x4; val_offset:1912*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1912*FLEN/8, x6, x1, x2)

inst_982:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x261 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00a and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a61; op2val:0xa;
   valaddr_reg:x4; val_offset:1914*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1914*FLEN/8, x6, x1, x2)

inst_983:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x261 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00a and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a61; op2val:0xa;
   valaddr_reg:x4; val_offset:1916*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1916*FLEN/8, x6, x1, x2)

inst_984:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x261 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00a and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a61; op2val:0xa;
   valaddr_reg:x4; val_offset:1918*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1918*FLEN/8, x6, x1, x2)

inst_985:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0ed and fs2 == 0 and fe2 == 0x00 and fm2 == 0x019 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74ed; op2val:0x19;
   valaddr_reg:x4; val_offset:1920*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1920*FLEN/8, x6, x1, x2)

inst_986:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0ed and fs2 == 0 and fe2 == 0x00 and fm2 == 0x019 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74ed; op2val:0x19;
   valaddr_reg:x4; val_offset:1922*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1922*FLEN/8, x6, x1, x2)

inst_987:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0ed and fs2 == 0 and fe2 == 0x00 and fm2 == 0x019 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74ed; op2val:0x19;
   valaddr_reg:x4; val_offset:1924*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1924*FLEN/8, x6, x1, x2)

inst_988:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0ed and fs2 == 0 and fe2 == 0x00 and fm2 == 0x019 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74ed; op2val:0x19;
   valaddr_reg:x4; val_offset:1926*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1926*FLEN/8, x6, x1, x2)

inst_989:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0ed and fs2 == 0 and fe2 == 0x00 and fm2 == 0x019 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74ed; op2val:0x19;
   valaddr_reg:x4; val_offset:1928*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1928*FLEN/8, x6, x1, x2)

inst_990:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x351 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x011 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7751; op2val:0x11;
   valaddr_reg:x4; val_offset:1930*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1930*FLEN/8, x6, x1, x2)

inst_991:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x351 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x011 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7751; op2val:0x11;
   valaddr_reg:x4; val_offset:1932*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1932*FLEN/8, x6, x1, x2)

inst_992:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x351 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x011 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7751; op2val:0x11;
   valaddr_reg:x4; val_offset:1934*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1934*FLEN/8, x6, x1, x2)

inst_993:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x351 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x011 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7751; op2val:0x11;
   valaddr_reg:x4; val_offset:1936*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1936*FLEN/8, x6, x1, x2)

inst_994:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x351 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x011 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7751; op2val:0x11;
   valaddr_reg:x4; val_offset:1938*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1938*FLEN/8, x6, x1, x2)

inst_995:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x01c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7470; op2val:0x1c;
   valaddr_reg:x4; val_offset:1940*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1940*FLEN/8, x6, x1, x2)

inst_996:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x01c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7470; op2val:0x1c;
   valaddr_reg:x4; val_offset:1942*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1942*FLEN/8, x6, x1, x2)

inst_997:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x01c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7470; op2val:0x1c;
   valaddr_reg:x4; val_offset:1944*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1944*FLEN/8, x6, x1, x2)

inst_998:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x01c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7470; op2val:0x1c;
   valaddr_reg:x4; val_offset:1946*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1946*FLEN/8, x6, x1, x2)

inst_999:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x01c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7470; op2val:0x1c;
   valaddr_reg:x4; val_offset:1948*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1948*FLEN/8, x6, x1, x2)

inst_1000:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x329 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x047 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6f29; op2val:0x47;
   valaddr_reg:x4; val_offset:1950*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1950*FLEN/8, x6, x1, x2)

inst_1001:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x329 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x047 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6f29; op2val:0x47;
   valaddr_reg:x4; val_offset:1952*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1952*FLEN/8, x6, x1, x2)

inst_1002:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x329 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x047 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6f29; op2val:0x47;
   valaddr_reg:x4; val_offset:1954*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1954*FLEN/8, x6, x1, x2)

inst_1003:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x329 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x047 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6f29; op2val:0x47;
   valaddr_reg:x4; val_offset:1956*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1956*FLEN/8, x6, x1, x2)

inst_1004:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x329 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x047 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6f29; op2val:0x47;
   valaddr_reg:x4; val_offset:1958*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1958*FLEN/8, x6, x1, x2)

inst_1005:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x210 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x015 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7610; op2val:0x8015;
   valaddr_reg:x4; val_offset:1960*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1960*FLEN/8, x6, x1, x2)

inst_1006:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x210 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x015 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7610; op2val:0x8015;
   valaddr_reg:x4; val_offset:1962*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1962*FLEN/8, x6, x1, x2)

inst_1007:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x210 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x015 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7610; op2val:0x8015;
   valaddr_reg:x4; val_offset:1964*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1964*FLEN/8, x6, x1, x2)

inst_1008:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x210 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x015 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7610; op2val:0x8015;
   valaddr_reg:x4; val_offset:1966*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1966*FLEN/8, x6, x1, x2)

inst_1009:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x210 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x015 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7610; op2val:0x8015;
   valaddr_reg:x4; val_offset:1968*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1968*FLEN/8, x6, x1, x2)

inst_1010:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x117 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x019 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7517; op2val:0x8019;
   valaddr_reg:x4; val_offset:1970*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1970*FLEN/8, x6, x1, x2)

inst_1011:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x117 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x019 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7517; op2val:0x8019;
   valaddr_reg:x4; val_offset:1972*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1972*FLEN/8, x6, x1, x2)

inst_1012:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x117 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x019 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7517; op2val:0x8019;
   valaddr_reg:x4; val_offset:1974*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1974*FLEN/8, x6, x1, x2)

inst_1013:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x117 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x019 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7517; op2val:0x8019;
   valaddr_reg:x4; val_offset:1976*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1976*FLEN/8, x6, x1, x2)

inst_1014:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x117 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x019 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7517; op2val:0x8019;
   valaddr_reg:x4; val_offset:1978*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1978*FLEN/8, x6, x1, x2)

inst_1015:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x350 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x011 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7750; op2val:0x8011;
   valaddr_reg:x4; val_offset:1980*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1980*FLEN/8, x6, x1, x2)

inst_1016:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x350 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x011 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7750; op2val:0x8011;
   valaddr_reg:x4; val_offset:1982*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1982*FLEN/8, x6, x1, x2)

inst_1017:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x350 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x011 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7750; op2val:0x8011;
   valaddr_reg:x4; val_offset:1984*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1984*FLEN/8, x6, x1, x2)

inst_1018:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x350 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x011 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7750; op2val:0x8011;
   valaddr_reg:x4; val_offset:1986*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1986*FLEN/8, x6, x1, x2)

inst_1019:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x350 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x011 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7750; op2val:0x8011;
   valaddr_reg:x4; val_offset:1988*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1988*FLEN/8, x6, x1, x2)

inst_1020:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x311 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x012 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7711; op2val:0x8012;
   valaddr_reg:x4; val_offset:1990*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 1990*FLEN/8, x6, x1, x2)

inst_1021:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x311 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x012 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7711; op2val:0x8012;
   valaddr_reg:x4; val_offset:1992*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 1992*FLEN/8, x6, x1, x2)

inst_1022:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x311 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x012 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7711; op2val:0x8012;
   valaddr_reg:x4; val_offset:1994*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 1994*FLEN/8, x6, x1, x2)

inst_1023:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x311 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x012 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7711; op2val:0x8012;
   valaddr_reg:x4; val_offset:1996*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 1996*FLEN/8, x6, x1, x2)

inst_1024:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x311 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x012 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7711; op2val:0x8012;
   valaddr_reg:x4; val_offset:1998*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 1998*FLEN/8, x6, x1, x2)

inst_1025:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x008 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b27; op2val:0x8008;
   valaddr_reg:x4; val_offset:2000*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 2000*FLEN/8, x6, x1, x2)

inst_1026:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x008 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b27; op2val:0x8008;
   valaddr_reg:x4; val_offset:2002*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 2002*FLEN/8, x6, x1, x2)

inst_1027:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x008 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b27; op2val:0x8008;
   valaddr_reg:x4; val_offset:2004*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 2004*FLEN/8, x6, x1, x2)

inst_1028:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x008 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b27; op2val:0x8008;
   valaddr_reg:x4; val_offset:2006*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 2006*FLEN/8, x6, x1, x2)

inst_1029:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x008 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b27; op2val:0x8008;
   valaddr_reg:x4; val_offset:2008*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 2008*FLEN/8, x6, x1, x2)

inst_1030:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x36e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x008 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b6e; op2val:0x8008;
   valaddr_reg:x4; val_offset:2010*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 2010*FLEN/8, x6, x1, x2)

inst_1031:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x36e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x008 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b6e; op2val:0x8008;
   valaddr_reg:x4; val_offset:2012*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 2012*FLEN/8, x6, x1, x2)

inst_1032:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x36e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x008 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b6e; op2val:0x8008;
   valaddr_reg:x4; val_offset:2014*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 2014*FLEN/8, x6, x1, x2)

inst_1033:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x36e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x008 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b6e; op2val:0x8008;
   valaddr_reg:x4; val_offset:2016*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 2016*FLEN/8, x6, x1, x2)

inst_1034:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x36e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x008 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b6e; op2val:0x8008;
   valaddr_reg:x4; val_offset:2018*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 2018*FLEN/8, x6, x1, x2)

inst_1035:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x25e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x050 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e5e; op2val:0x8050;
   valaddr_reg:x4; val_offset:2020*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 2020*FLEN/8, x6, x1, x2)

inst_1036:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x25e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x050 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e5e; op2val:0x8050;
   valaddr_reg:x4; val_offset:2022*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 2022*FLEN/8, x6, x1, x2)

inst_1037:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x25e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x050 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e5e; op2val:0x8050;
   valaddr_reg:x4; val_offset:2024*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 2024*FLEN/8, x6, x1, x2)

inst_1038:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x25e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x050 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e5e; op2val:0x8050;
   valaddr_reg:x4; val_offset:2026*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 2026*FLEN/8, x6, x1, x2)

inst_1039:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x25e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x050 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e5e; op2val:0x8050;
   valaddr_reg:x4; val_offset:2028*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 2028*FLEN/8, x6, x1, x2)

inst_1040:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x210 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x02a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7210; op2val:0x802a;
   valaddr_reg:x4; val_offset:2030*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 2030*FLEN/8, x6, x1, x2)

inst_1041:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x210 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x02a and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7210; op2val:0x802a;
   valaddr_reg:x4; val_offset:2032*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 2032*FLEN/8, x6, x1, x2)

inst_1042:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x210 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x02a and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7210; op2val:0x802a;
   valaddr_reg:x4; val_offset:2034*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 2034*FLEN/8, x6, x1, x2)

inst_1043:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x210 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x02a and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7210; op2val:0x802a;
   valaddr_reg:x4; val_offset:2036*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 2036*FLEN/8, x6, x1, x2)

inst_1044:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x210 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x02a and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7210; op2val:0x802a;
   valaddr_reg:x4; val_offset:2038*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 2038*FLEN/8, x6, x1, x2)

inst_1045:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1fa and fs2 == 1 and fe2 == 0x00 and fm2 == 0x015 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x75fa; op2val:0x8015;
   valaddr_reg:x4; val_offset:2040*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 2040*FLEN/8, x6, x1, x2)

inst_1046:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1fa and fs2 == 1 and fe2 == 0x00 and fm2 == 0x015 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x75fa; op2val:0x8015;
   valaddr_reg:x4; val_offset:2042*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 2042*FLEN/8, x6, x1, x2)

inst_1047:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1fa and fs2 == 1 and fe2 == 0x00 and fm2 == 0x015 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x75fa; op2val:0x8015;
   valaddr_reg:x4; val_offset:2044*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 2044*FLEN/8, x6, x1, x2)

inst_1048:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1fa and fs2 == 1 and fe2 == 0x00 and fm2 == 0x015 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x75fa; op2val:0x8015;
   valaddr_reg:x4; val_offset:2046*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 2046*FLEN/8, x6, x1, x2)

inst_1049:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1fa and fs2 == 1 and fe2 == 0x00 and fm2 == 0x015 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x75fa; op2val:0x8015;
   valaddr_reg:x4; val_offset:2048*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 2048*FLEN/8, x6, x1, x2)

inst_1050:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x25b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x00a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a5b; op2val:0x800a;
   valaddr_reg:x4; val_offset:2050*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 2050*FLEN/8, x6, x1, x2)

inst_1051:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x25b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x00a and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a5b; op2val:0x800a;
   valaddr_reg:x4; val_offset:2052*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 2052*FLEN/8, x6, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_8)

inst_1052:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x25b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x00a and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a5b; op2val:0x800a;
   valaddr_reg:x4; val_offset:2054*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 2054*FLEN/8, x6, x1, x2)

inst_1053:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x25b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x00a and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a5b; op2val:0x800a;
   valaddr_reg:x4; val_offset:2056*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 2056*FLEN/8, x6, x1, x2)

inst_1054:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x25b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x00a and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a5b; op2val:0x800a;
   valaddr_reg:x4; val_offset:2058*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 2058*FLEN/8, x6, x1, x2)

inst_1055:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x277 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x009 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a77; op2val:0x8009;
   valaddr_reg:x4; val_offset:2060*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 2060*FLEN/8, x6, x1, x2)

inst_1056:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x277 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x009 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a77; op2val:0x8009;
   valaddr_reg:x4; val_offset:2062*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 2062*FLEN/8, x6, x1, x2)

inst_1057:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x277 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x009 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a77; op2val:0x8009;
   valaddr_reg:x4; val_offset:2064*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 2064*FLEN/8, x6, x1, x2)

inst_1058:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x277 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x009 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a77; op2val:0x8009;
   valaddr_reg:x4; val_offset:2066*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 2066*FLEN/8, x6, x1, x2)

inst_1059:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x277 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x009 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a77; op2val:0x8009;
   valaddr_reg:x4; val_offset:2068*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 2068*FLEN/8, x6, x1, x2)

inst_1060:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x266 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x013 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7666; op2val:0x8013;
   valaddr_reg:x4; val_offset:2070*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 2070*FLEN/8, x6, x1, x2)

inst_1061:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x266 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x013 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7666; op2val:0x8013;
   valaddr_reg:x4; val_offset:2072*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 2072*FLEN/8, x6, x1, x2)

inst_1062:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x266 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x013 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7666; op2val:0x8013;
   valaddr_reg:x4; val_offset:2074*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 2074*FLEN/8, x6, x1, x2)

inst_1063:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x266 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x013 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7666; op2val:0x8013;
   valaddr_reg:x4; val_offset:2076*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 2076*FLEN/8, x6, x1, x2)

inst_1064:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x266 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x013 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7666; op2val:0x8013;
   valaddr_reg:x4; val_offset:2078*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 2078*FLEN/8, x6, x1, x2)

inst_1065:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x179 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x017 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7579; op2val:0x8017;
   valaddr_reg:x4; val_offset:2080*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 2080*FLEN/8, x6, x1, x2)

inst_1066:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x179 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x017 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7579; op2val:0x8017;
   valaddr_reg:x4; val_offset:2082*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 2082*FLEN/8, x6, x1, x2)

inst_1067:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x179 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x017 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7579; op2val:0x8017;
   valaddr_reg:x4; val_offset:2084*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 2084*FLEN/8, x6, x1, x2)

inst_1068:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x179 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x017 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7579; op2val:0x8017;
   valaddr_reg:x4; val_offset:2086*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 2086*FLEN/8, x6, x1, x2)

inst_1069:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x179 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x017 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7579; op2val:0x8017;
   valaddr_reg:x4; val_offset:2088*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 2088*FLEN/8, x6, x1, x2)

inst_1070:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x367 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x008 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b67; op2val:0x8;
   valaddr_reg:x4; val_offset:2090*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 2090*FLEN/8, x6, x1, x2)

inst_1071:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x367 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x008 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b67; op2val:0x8;
   valaddr_reg:x4; val_offset:2092*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 2092*FLEN/8, x6, x1, x2)

inst_1072:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x367 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x008 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b67; op2val:0x8;
   valaddr_reg:x4; val_offset:2094*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 2094*FLEN/8, x6, x1, x2)

inst_1073:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x367 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x008 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b67; op2val:0x8;
   valaddr_reg:x4; val_offset:2096*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 2096*FLEN/8, x6, x1, x2)

inst_1074:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x367 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x008 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b67; op2val:0x8;
   valaddr_reg:x4; val_offset:2098*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 2098*FLEN/8, x6, x1, x2)

inst_1075:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x184 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7984; op2val:0xb;
   valaddr_reg:x4; val_offset:2100*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 2100*FLEN/8, x6, x1, x2)

inst_1076:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x184 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7984; op2val:0xb;
   valaddr_reg:x4; val_offset:2102*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 2102*FLEN/8, x6, x1, x2)

inst_1077:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x184 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7984; op2val:0xb;
   valaddr_reg:x4; val_offset:2104*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 2104*FLEN/8, x6, x1, x2)

inst_1078:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x184 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7984; op2val:0xb;
   valaddr_reg:x4; val_offset:2106*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 2106*FLEN/8, x6, x1, x2)

inst_1079:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x184 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7984; op2val:0xb;
   valaddr_reg:x4; val_offset:2108*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 2108*FLEN/8, x6, x1, x2)

inst_1080:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79f0; op2val:0xa;
   valaddr_reg:x4; val_offset:2110*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 2110*FLEN/8, x6, x1, x2)

inst_1081:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00a and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79f0; op2val:0xa;
   valaddr_reg:x4; val_offset:2112*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 2112*FLEN/8, x6, x1, x2)

inst_1082:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00a and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79f0; op2val:0xa;
   valaddr_reg:x4; val_offset:2114*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 2114*FLEN/8, x6, x1, x2)

inst_1083:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00a and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79f0; op2val:0xa;
   valaddr_reg:x4; val_offset:2116*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 2116*FLEN/8, x6, x1, x2)

inst_1084:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00a and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x79f0; op2val:0xa;
   valaddr_reg:x4; val_offset:2118*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 2118*FLEN/8, x6, x1, x2)

inst_1085:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2f3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x009 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7af3; op2val:0x9;
   valaddr_reg:x4; val_offset:2120*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 2120*FLEN/8, x6, x1, x2)

inst_1086:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2f3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x009 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7af3; op2val:0x9;
   valaddr_reg:x4; val_offset:2122*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 2122*FLEN/8, x6, x1, x2)

inst_1087:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2f3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x009 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7af3; op2val:0x9;
   valaddr_reg:x4; val_offset:2124*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 2124*FLEN/8, x6, x1, x2)

inst_1088:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2f3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x009 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7af3; op2val:0x9;
   valaddr_reg:x4; val_offset:2126*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 2126*FLEN/8, x6, x1, x2)

inst_1089:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2f3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x009 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7af3; op2val:0x9;
   valaddr_reg:x4; val_offset:2128*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 2128*FLEN/8, x6, x1, x2)

inst_1090:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x206 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a06; op2val:0xa;
   valaddr_reg:x4; val_offset:2130*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 2130*FLEN/8, x6, x1, x2)

inst_1091:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x206 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00a and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a06; op2val:0xa;
   valaddr_reg:x4; val_offset:2132*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 2132*FLEN/8, x6, x1, x2)

inst_1092:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x206 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00a and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a06; op2val:0xa;
   valaddr_reg:x4; val_offset:2134*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 2134*FLEN/8, x6, x1, x2)

inst_1093:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x206 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00a and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a06; op2val:0xa;
   valaddr_reg:x4; val_offset:2136*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 2136*FLEN/8, x6, x1, x2)

inst_1094:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x206 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00a and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a06; op2val:0xa;
   valaddr_reg:x4; val_offset:2138*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 2138*FLEN/8, x6, x1, x2)

inst_1095:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x01b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74a9; op2val:0x1b;
   valaddr_reg:x4; val_offset:2140*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 2140*FLEN/8, x6, x1, x2)

inst_1096:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x01b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74a9; op2val:0x1b;
   valaddr_reg:x4; val_offset:2142*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 2142*FLEN/8, x6, x1, x2)

inst_1097:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x01b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74a9; op2val:0x1b;
   valaddr_reg:x4; val_offset:2144*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 2144*FLEN/8, x6, x1, x2)

inst_1098:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x01b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74a9; op2val:0x1b;
   valaddr_reg:x4; val_offset:2146*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 2146*FLEN/8, x6, x1, x2)

inst_1099:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x01b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x74a9; op2val:0x1b;
   valaddr_reg:x4; val_offset:2148*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 2148*FLEN/8, x6, x1, x2)

inst_1100:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x15c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x795c; op2val:0xb;
   valaddr_reg:x4; val_offset:2150*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 0, 0, x4, 2150*FLEN/8, x6, x1, x2)

inst_1101:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x15c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x795c; op2val:0xb;
   valaddr_reg:x4; val_offset:2152*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 2152*FLEN/8, x6, x1, x2)

inst_1102:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x15c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x795c; op2val:0xb;
   valaddr_reg:x4; val_offset:2154*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 2154*FLEN/8, x6, x1, x2)

inst_1103:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x15c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x795c; op2val:0xb;
   valaddr_reg:x4; val_offset:2156*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 2156*FLEN/8, x6, x1, x2)

inst_1104:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x15c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x795c; op2val:0xb;
   valaddr_reg:x4; val_offset:2158*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 128, 0, x4, 2158*FLEN/8, x6, x1, x2)

inst_1105:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3a5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ba5; op2val:0x0;
   valaddr_reg:x4; val_offset:2160*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 2160*FLEN/8, x6, x1, x2)

inst_1106:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3a5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ba5; op2val:0x0;
   valaddr_reg:x4; val_offset:2162*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 2162*FLEN/8, x6, x1, x2)

inst_1107:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2ae and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x7aae; op2val:0x0;
   valaddr_reg:x4; val_offset:2164*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 64, 0, x4, 2164*FLEN/8, x6, x1, x2)

inst_1108:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x15a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x795a; op2val:0x0;
   valaddr_reg:x4; val_offset:2166*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 96, 0, x4, 2166*FLEN/8, x6, x1, x2)

inst_1109:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2e3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fmul.h ; op1:x30; op2:x29; dest:x31; op1val:0x76e3; op2val:0x0;
   valaddr_reg:x4; val_offset:2168*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, x31, x30, x29, dyn, 32, 0, x4, 2168*FLEN/8, x6, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(31653,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(31653,32,FLEN)
NAN_BOXED(31653,32,FLEN)
NAN_BOXED(31653,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(31653,32,FLEN)
NAN_BOXED(31653,32,FLEN)
NAN_BOXED(31653,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(27452,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(27452,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(27452,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(27452,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(27452,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(31406,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(31406,32,FLEN)
NAN_BOXED(0,32,FLEN)
test_dataset_1:
NAN_BOXED(0,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(31406,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(31406,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(31066,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(31066,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(31066,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(31066,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(31066,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(30936,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(30936,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(30936,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(30936,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(30936,32,FLEN)
NAN_BOXED(0,32,FLEN)
test_dataset_2:
NAN_BOXED(30885,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30885,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30885,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30885,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30885,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30435,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30435,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30435,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30435,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30435,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31176,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31176,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31176,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31176,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31176,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31639,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31639,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31639,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31639,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31639,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30493,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30493,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30493,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30493,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30493,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(26777,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(26777,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(26777,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(26777,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(26777,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30575,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30575,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30575,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30575,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30575,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30227,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30227,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30227,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30227,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30227,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30772,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30772,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30772,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30772,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30772,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29581,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29581,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29581,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29581,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29581,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30003,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30003,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30003,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30003,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30003,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30740,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30740,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30740,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30740,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30740,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31076,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31076,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31076,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31076,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31076,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31525,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31525,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31525,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31525,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31525,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31199,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31199,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31199,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31199,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31199,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31257,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31257,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31257,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31257,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31257,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30120,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30120,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30120,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30120,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30120,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31665,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31665,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31665,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31665,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31665,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31239,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31239,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31239,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31239,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31239,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30561,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30561,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30561,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30561,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30561,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30678,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30678,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30678,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30678,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30678,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30721,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30721,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30721,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30721,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30721,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30121,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30121,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30121,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30121,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30121,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31537,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31537,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31537,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31537,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31537,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30858,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30858,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30858,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30858,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30858,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31177,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31177,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31177,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31177,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31177,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29464,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29464,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29464,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29464,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29464,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31128,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31128,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31128,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31128,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31128,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31554,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31554,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31554,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31554,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31554,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31561,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31561,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31561,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31561,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31561,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31655,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31655,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31655,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31655,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31655,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30728,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30728,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30728,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30728,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30728,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31029,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31029,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31029,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31029,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31029,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29948,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29948,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29948,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29948,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29948,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30743,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30743,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30743,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30743,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30743,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30971,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30971,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30971,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30971,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30971,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31375,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31375,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31375,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31375,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31375,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31553,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31553,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31553,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31553,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31553,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31220,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31220,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31220,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31220,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31220,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31032,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31032,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31032,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31032,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31032,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29503,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29503,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29503,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29503,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29503,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(28364,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(28364,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(28364,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(28364,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(28364,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31444,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31444,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31444,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31444,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31444,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29371,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29371,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29371,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29371,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29371,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30403,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30403,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30403,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30403,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30403,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(26644,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(26644,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(26644,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(26644,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(26644,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29055,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29055,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29055,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29055,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29055,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(27981,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(27981,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(27981,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(27981,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(27981,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(26237,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(26237,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(26237,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(26237,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(26237,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(25962,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(25962,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(25962,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(25962,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(25962,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31360,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31360,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31360,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31360,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31360,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29152,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29152,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29152,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29152,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29152,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30250,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30250,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30250,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30250,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30250,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31722,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31722,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31722,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31722,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31722,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(26788,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(26788,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(26788,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(26788,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(26788,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30955,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30955,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30955,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30955,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30955,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28476,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28476,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28476,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28476,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28476,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(26595,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(26595,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(26595,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(26595,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(26595,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31263,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31263,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31263,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31263,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31263,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31542,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31542,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31542,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31542,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31542,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31461,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31461,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31461,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31461,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31461,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30607,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30607,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30607,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30607,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30607,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31048,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31048,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31048,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31048,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31048,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(28295,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(28295,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(28295,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(28295,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(28295,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31486,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31486,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31486,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31486,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31486,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30893,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30893,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30893,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30893,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30893,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30749,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30749,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30749,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30749,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30749,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31660,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31660,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31660,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31660,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31660,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30936,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30936,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30936,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30936,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30936,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(25758,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(25758,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(25758,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(25758,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(25758,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(28799,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(28799,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(28799,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(28799,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(28799,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(26699,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(26699,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(26699,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(26699,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(26699,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(28194,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28194,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28194,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28194,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28194,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30736,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30736,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30736,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30736,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30736,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31608,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31608,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31608,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31608,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31608,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29551,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29551,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29551,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29551,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29551,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29698,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29698,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29698,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29698,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29698,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30973,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30973,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30973,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30973,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30973,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31148,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31148,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31148,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31148,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31148,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(23796,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(23796,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(23796,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(23796,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(23796,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(30345,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30345,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30345,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30345,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30345,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28258,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28258,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28258,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28258,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28258,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29543,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29543,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29543,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29543,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29543,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30761,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30761,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30761,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30761,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30761,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29940,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29940,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29940,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29940,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29940,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29387,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29387,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29387,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29387,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29387,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31667,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31667,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31667,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31667,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31667,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30447,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30447,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30447,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30447,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30447,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30885,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30885,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30885,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30885,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30885,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30383,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30383,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30383,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30383,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30383,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29131,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29131,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29131,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29131,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29131,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31339,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31339,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31339,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31339,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31339,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30758,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30758,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30758,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30758,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30758,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30945,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30945,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30945,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30945,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30945,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31709,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31709,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31709,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31709,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31709,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(25825,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(25825,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(25825,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(25825,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(25825,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(28280,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(28280,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(28280,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(28280,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(28280,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31416,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31416,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31416,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31416,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31416,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(25606,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(25606,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(25606,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(25606,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(25606,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30353,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30353,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30353,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30353,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30353,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29353,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29353,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29353,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29353,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29353,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(27832,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(27832,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(27832,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(27832,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(27832,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30198,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30198,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30198,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30198,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30198,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(27877,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(27877,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(27877,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(27877,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(27877,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29223,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29223,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29223,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29223,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29223,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30275,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30275,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30275,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30275,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30275,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31238,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31238,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31238,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31238,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31238,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28617,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28617,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28617,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28617,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28617,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(27942,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(27942,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(27942,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(27942,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(27942,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31008,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31008,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31008,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31008,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31008,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31113,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31113,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31113,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31113,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31113,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31045,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31045,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31045,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31045,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31045,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31177,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31177,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31177,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31177,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31177,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30135,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30135,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30135,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30135,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30135,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31330,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31330,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31330,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31330,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31330,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30773,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30773,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30773,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30773,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30773,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31650,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31650,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31650,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31650,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31650,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31603,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31603,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31603,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31603,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31603,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29886,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29886,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29886,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29886,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29886,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30673,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30673,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30673,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30673,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30673,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30422,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30422,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30422,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30422,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30422,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31576,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31576,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31576,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31576,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31576,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31370,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31370,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31370,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31370,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31370,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30129,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30129,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30129,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30129,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30129,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(28847,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(28847,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(28847,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(28847,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(28847,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(27718,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(27718,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(27718,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(27718,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(27718,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31529,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31529,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31529,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31529,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31529,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31022,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31022,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31022,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31022,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31022,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29885,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29885,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29885,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29885,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29885,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31068,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31068,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31068,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31068,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31068,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30468,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30468,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30468,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30468,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30468,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28459,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28459,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28459,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28459,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28459,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31640,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31640,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31640,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31640,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31640,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28198,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28198,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28198,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28198,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28198,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31160,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31160,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31160,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31160,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31160,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31527,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31527,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31527,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31527,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31527,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31135,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31135,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31135,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31135,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31135,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31733,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31733,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31733,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31733,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31733,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30869,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30869,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30869,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30869,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30869,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30478,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30478,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30478,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30478,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30478,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30914,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30914,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30914,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30914,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30914,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29125,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29125,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29125,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29125,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29125,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30647,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30647,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30647,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30647,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30647,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31150,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31150,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31150,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31150,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31150,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31139,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31139,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31139,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31139,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31139,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31665,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31665,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31665,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31665,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31665,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31222,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31222,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31222,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31222,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31222,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31255,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31255,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31255,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31255,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31255,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29490,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29490,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29490,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29490,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(29490,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30320,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30320,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30320,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30320,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(30320,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31696,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31696,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31696,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31696,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31696,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(25074,16,FLEN)
NAN_BOXED(32769,16,FLEN)
NAN_BOXED(25074,16,FLEN)
NAN_BOXED(32769,16,FLEN)
NAN_BOXED(25074,16,FLEN)
NAN_BOXED(32769,16,FLEN)
NAN_BOXED(25074,16,FLEN)
NAN_BOXED(32769,16,FLEN)
NAN_BOXED(25074,16,FLEN)
NAN_BOXED(32769,16,FLEN)
NAN_BOXED(31152,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31152,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31152,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31152,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31152,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31026,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31026,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31026,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31026,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(31026,16,FLEN)
NAN_BOXED(32768,16,FLEN)
NAN_BOXED(25699,16,FLEN)
NAN_BOXED(1,16,FLEN)
NAN_BOXED(25699,16,FLEN)
NAN_BOXED(1,16,FLEN)
NAN_BOXED(25699,16,FLEN)
NAN_BOXED(1,16,FLEN)
NAN_BOXED(25699,16,FLEN)
NAN_BOXED(1,16,FLEN)
NAN_BOXED(25699,16,FLEN)
NAN_BOXED(1,16,FLEN)
NAN_BOXED(31189,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31189,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31189,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31189,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31189,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31549,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31549,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31549,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31549,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31549,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28269,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28269,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28269,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28269,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28269,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31266,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31266,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31266,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31266,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31266,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31219,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31219,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31219,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31219,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31219,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29216,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29216,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29216,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29216,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29216,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(28777,16,FLEN)
NAN_BOXED(8001,16,FLEN)
NAN_BOXED(28777,16,FLEN)
NAN_BOXED(8001,16,FLEN)
NAN_BOXED(28777,16,FLEN)
NAN_BOXED(8001,16,FLEN)
NAN_BOXED(28777,16,FLEN)
NAN_BOXED(8001,16,FLEN)
NAN_BOXED(28777,16,FLEN)
NAN_BOXED(8001,16,FLEN)
NAN_BOXED(30450,16,FLEN)
NAN_BOXED(6299,16,FLEN)
NAN_BOXED(30450,16,FLEN)
NAN_BOXED(6299,16,FLEN)
NAN_BOXED(30450,16,FLEN)
NAN_BOXED(6299,16,FLEN)
NAN_BOXED(30450,16,FLEN)
NAN_BOXED(6299,16,FLEN)
NAN_BOXED(30450,16,FLEN)
NAN_BOXED(6299,16,FLEN)
NAN_BOXED(30854,16,FLEN)
NAN_BOXED(5905,16,FLEN)
NAN_BOXED(30854,16,FLEN)
NAN_BOXED(5905,16,FLEN)
NAN_BOXED(30854,16,FLEN)
NAN_BOXED(5905,16,FLEN)
NAN_BOXED(30854,16,FLEN)
NAN_BOXED(5905,16,FLEN)
NAN_BOXED(30854,16,FLEN)
NAN_BOXED(5905,16,FLEN)
NAN_BOXED(29326,16,FLEN)
NAN_BOXED(7393,16,FLEN)
NAN_BOXED(29326,16,FLEN)
NAN_BOXED(7393,16,FLEN)
NAN_BOXED(29326,16,FLEN)
NAN_BOXED(7393,16,FLEN)
NAN_BOXED(29326,16,FLEN)
NAN_BOXED(7393,16,FLEN)
NAN_BOXED(29326,16,FLEN)
NAN_BOXED(7393,16,FLEN)
NAN_BOXED(27816,16,FLEN)
NAN_BOXED(8926,16,FLEN)
NAN_BOXED(27816,16,FLEN)
NAN_BOXED(8926,16,FLEN)
NAN_BOXED(27816,16,FLEN)
NAN_BOXED(8926,16,FLEN)
NAN_BOXED(27816,16,FLEN)
NAN_BOXED(8926,16,FLEN)
NAN_BOXED(27816,16,FLEN)
NAN_BOXED(8926,16,FLEN)
NAN_BOXED(30659,16,FLEN)
NAN_BOXED(6175,16,FLEN)
NAN_BOXED(30659,16,FLEN)
NAN_BOXED(6175,16,FLEN)
NAN_BOXED(30659,16,FLEN)
NAN_BOXED(6175,16,FLEN)
NAN_BOXED(30659,16,FLEN)
NAN_BOXED(6175,16,FLEN)
NAN_BOXED(30659,16,FLEN)
NAN_BOXED(6175,16,FLEN)
NAN_BOXED(31043,16,FLEN)
NAN_BOXED(5652,16,FLEN)
NAN_BOXED(31043,16,FLEN)
NAN_BOXED(5652,16,FLEN)
NAN_BOXED(31043,16,FLEN)
NAN_BOXED(5652,16,FLEN)
NAN_BOXED(31043,16,FLEN)
NAN_BOXED(5652,16,FLEN)
NAN_BOXED(31043,16,FLEN)
NAN_BOXED(5652,16,FLEN)
NAN_BOXED(30657,16,FLEN)
NAN_BOXED(38944,16,FLEN)
NAN_BOXED(30657,16,FLEN)
NAN_BOXED(38944,16,FLEN)
NAN_BOXED(30657,16,FLEN)
NAN_BOXED(38944,16,FLEN)
NAN_BOXED(30657,16,FLEN)
NAN_BOXED(38944,16,FLEN)
NAN_BOXED(30657,16,FLEN)
NAN_BOXED(38944,16,FLEN)
NAN_BOXED(30043,16,FLEN)
NAN_BOXED(39417,16,FLEN)
NAN_BOXED(30043,16,FLEN)
NAN_BOXED(39417,16,FLEN)
NAN_BOXED(30043,16,FLEN)
NAN_BOXED(39417,16,FLEN)
NAN_BOXED(30043,16,FLEN)
NAN_BOXED(39417,16,FLEN)
NAN_BOXED(30043,16,FLEN)
NAN_BOXED(39417,16,FLEN)
NAN_BOXED(30725,16,FLEN)
NAN_BOXED(38901,16,FLEN)
NAN_BOXED(30725,16,FLEN)
NAN_BOXED(38901,16,FLEN)
NAN_BOXED(30725,16,FLEN)
NAN_BOXED(38901,16,FLEN)
NAN_BOXED(30725,16,FLEN)
NAN_BOXED(38901,16,FLEN)
NAN_BOXED(30725,16,FLEN)
NAN_BOXED(38901,16,FLEN)
NAN_BOXED(27931,16,FLEN)
NAN_BOXED(41540,16,FLEN)
NAN_BOXED(27931,16,FLEN)
NAN_BOXED(41540,16,FLEN)
NAN_BOXED(27931,16,FLEN)
NAN_BOXED(41540,16,FLEN)
NAN_BOXED(27931,16,FLEN)
NAN_BOXED(41540,16,FLEN)
NAN_BOXED(27931,16,FLEN)
NAN_BOXED(41540,16,FLEN)
NAN_BOXED(29070,16,FLEN)
NAN_BOXED(40386,16,FLEN)
NAN_BOXED(29070,16,FLEN)
NAN_BOXED(40386,16,FLEN)
NAN_BOXED(29070,16,FLEN)
NAN_BOXED(40386,16,FLEN)
NAN_BOXED(29070,16,FLEN)
NAN_BOXED(40386,16,FLEN)
NAN_BOXED(29070,16,FLEN)
NAN_BOXED(40386,16,FLEN)
NAN_BOXED(31301,16,FLEN)
NAN_BOXED(38170,16,FLEN)
NAN_BOXED(31301,16,FLEN)
NAN_BOXED(38170,16,FLEN)
NAN_BOXED(31301,16,FLEN)
NAN_BOXED(38170,16,FLEN)
NAN_BOXED(31301,16,FLEN)
NAN_BOXED(38170,16,FLEN)
NAN_BOXED(31301,16,FLEN)
NAN_BOXED(38170,16,FLEN)
NAN_BOXED(31077,16,FLEN)
NAN_BOXED(38381,16,FLEN)
NAN_BOXED(31077,16,FLEN)
NAN_BOXED(38381,16,FLEN)
NAN_BOXED(31077,16,FLEN)
NAN_BOXED(38381,16,FLEN)
NAN_BOXED(31077,16,FLEN)
NAN_BOXED(38381,16,FLEN)
NAN_BOXED(31077,16,FLEN)
NAN_BOXED(38381,16,FLEN)
NAN_BOXED(31464,16,FLEN)
NAN_BOXED(38049,16,FLEN)
NAN_BOXED(31464,16,FLEN)
NAN_BOXED(38049,16,FLEN)
NAN_BOXED(31464,16,FLEN)
NAN_BOXED(38049,16,FLEN)
NAN_BOXED(31464,16,FLEN)
NAN_BOXED(38049,16,FLEN)
NAN_BOXED(31464,16,FLEN)
NAN_BOXED(38049,16,FLEN)
NAN_BOXED(28979,16,FLEN)
NAN_BOXED(40487,16,FLEN)
NAN_BOXED(28979,16,FLEN)
NAN_BOXED(40487,16,FLEN)
NAN_BOXED(28979,16,FLEN)
NAN_BOXED(40487,16,FLEN)
NAN_BOXED(28979,16,FLEN)
NAN_BOXED(40487,16,FLEN)
NAN_BOXED(28979,16,FLEN)
NAN_BOXED(40487,16,FLEN)
NAN_BOXED(30574,16,FLEN)
NAN_BOXED(38990,16,FLEN)
NAN_BOXED(30574,16,FLEN)
NAN_BOXED(38990,16,FLEN)
NAN_BOXED(30574,16,FLEN)
NAN_BOXED(38990,16,FLEN)
NAN_BOXED(30574,16,FLEN)
NAN_BOXED(38990,16,FLEN)
NAN_BOXED(30574,16,FLEN)
NAN_BOXED(38990,16,FLEN)
NAN_BOXED(24916,16,FLEN)
NAN_BOXED(44544,16,FLEN)
NAN_BOXED(24916,16,FLEN)
NAN_BOXED(44544,16,FLEN)
NAN_BOXED(24916,16,FLEN)
NAN_BOXED(44544,16,FLEN)
NAN_BOXED(24916,16,FLEN)
NAN_BOXED(44544,16,FLEN)
NAN_BOXED(24916,16,FLEN)
NAN_BOXED(44544,16,FLEN)
NAN_BOXED(31675,16,FLEN)
NAN_BOXED(37923,16,FLEN)
NAN_BOXED(31675,16,FLEN)
NAN_BOXED(37923,16,FLEN)
NAN_BOXED(31675,16,FLEN)
NAN_BOXED(37923,16,FLEN)
NAN_BOXED(31675,16,FLEN)
NAN_BOXED(37923,16,FLEN)
NAN_BOXED(31675,16,FLEN)
NAN_BOXED(37923,16,FLEN)
NAN_BOXED(30797,16,FLEN)
NAN_BOXED(38768,16,FLEN)
NAN_BOXED(30797,16,FLEN)
NAN_BOXED(38768,16,FLEN)
NAN_BOXED(30797,16,FLEN)
NAN_BOXED(38768,16,FLEN)
NAN_BOXED(30797,16,FLEN)
NAN_BOXED(38768,16,FLEN)
NAN_BOXED(30797,16,FLEN)
NAN_BOXED(38768,16,FLEN)
NAN_BOXED(30484,16,FLEN)
NAN_BOXED(39044,16,FLEN)
NAN_BOXED(30484,16,FLEN)
NAN_BOXED(39044,16,FLEN)
NAN_BOXED(30484,16,FLEN)
NAN_BOXED(39044,16,FLEN)
NAN_BOXED(30484,16,FLEN)
NAN_BOXED(39044,16,FLEN)
NAN_BOXED(30484,16,FLEN)
NAN_BOXED(39044,16,FLEN)
NAN_BOXED(29934,16,FLEN)
NAN_BOXED(6780,16,FLEN)
NAN_BOXED(29934,16,FLEN)
NAN_BOXED(6780,16,FLEN)
NAN_BOXED(29934,16,FLEN)
NAN_BOXED(6780,16,FLEN)
NAN_BOXED(29934,16,FLEN)
NAN_BOXED(6780,16,FLEN)
NAN_BOXED(29934,16,FLEN)
NAN_BOXED(6780,16,FLEN)
NAN_BOXED(30652,16,FLEN)
NAN_BOXED(6178,16,FLEN)
NAN_BOXED(30652,16,FLEN)
NAN_BOXED(6178,16,FLEN)
NAN_BOXED(30652,16,FLEN)
NAN_BOXED(6178,16,FLEN)
NAN_BOXED(30652,16,FLEN)
NAN_BOXED(6178,16,FLEN)
NAN_BOXED(30652,16,FLEN)
NAN_BOXED(6178,16,FLEN)
NAN_BOXED(31568,16,FLEN)
NAN_BOXED(5216,16,FLEN)
NAN_BOXED(31568,16,FLEN)
NAN_BOXED(5216,16,FLEN)
NAN_BOXED(31568,16,FLEN)
NAN_BOXED(5216,16,FLEN)
NAN_BOXED(31568,16,FLEN)
NAN_BOXED(5216,16,FLEN)
NAN_BOXED(31568,16,FLEN)
NAN_BOXED(5216,16,FLEN)
NAN_BOXED(31383,16,FLEN)
NAN_BOXED(5338,16,FLEN)
NAN_BOXED(31383,16,FLEN)
NAN_BOXED(5338,16,FLEN)
NAN_BOXED(31383,16,FLEN)
NAN_BOXED(5338,16,FLEN)
NAN_BOXED(31383,16,FLEN)
NAN_BOXED(5338,16,FLEN)
NAN_BOXED(31383,16,FLEN)
NAN_BOXED(5338,16,FLEN)
NAN_BOXED(31019,16,FLEN)
NAN_BOXED(5681,16,FLEN)
NAN_BOXED(31019,16,FLEN)
NAN_BOXED(5681,16,FLEN)
NAN_BOXED(31019,16,FLEN)
NAN_BOXED(5681,16,FLEN)
NAN_BOXED(31019,16,FLEN)
NAN_BOXED(5681,16,FLEN)
NAN_BOXED(31019,16,FLEN)
NAN_BOXED(5681,16,FLEN)
NAN_BOXED(31033,16,FLEN)
NAN_BOXED(5663,16,FLEN)
NAN_BOXED(31033,16,FLEN)
NAN_BOXED(5663,16,FLEN)
NAN_BOXED(31033,16,FLEN)
NAN_BOXED(5663,16,FLEN)
NAN_BOXED(31033,16,FLEN)
NAN_BOXED(5663,16,FLEN)
NAN_BOXED(31033,16,FLEN)
NAN_BOXED(5663,16,FLEN)
NAN_BOXED(31416,16,FLEN)
NAN_BOXED(5314,16,FLEN)
NAN_BOXED(31416,16,FLEN)
NAN_BOXED(5314,16,FLEN)
NAN_BOXED(31416,16,FLEN)
NAN_BOXED(5314,16,FLEN)
NAN_BOXED(31416,16,FLEN)
NAN_BOXED(5314,16,FLEN)
NAN_BOXED(31416,16,FLEN)
NAN_BOXED(5314,16,FLEN)
NAN_BOXED(30992,16,FLEN)
NAN_BOXED(12,16,FLEN)
NAN_BOXED(30992,16,FLEN)
NAN_BOXED(12,16,FLEN)
NAN_BOXED(30992,16,FLEN)
NAN_BOXED(12,16,FLEN)
NAN_BOXED(30992,16,FLEN)
NAN_BOXED(12,16,FLEN)
NAN_BOXED(30992,16,FLEN)
NAN_BOXED(12,16,FLEN)
NAN_BOXED(30781,16,FLEN)
NAN_BOXED(15,16,FLEN)
NAN_BOXED(30781,16,FLEN)
NAN_BOXED(15,16,FLEN)
NAN_BOXED(30781,16,FLEN)
NAN_BOXED(15,16,FLEN)
NAN_BOXED(30781,16,FLEN)
NAN_BOXED(15,16,FLEN)
NAN_BOXED(30781,16,FLEN)
NAN_BOXED(15,16,FLEN)
NAN_BOXED(31329,16,FLEN)
NAN_BOXED(10,16,FLEN)
NAN_BOXED(31329,16,FLEN)
NAN_BOXED(10,16,FLEN)
NAN_BOXED(31329,16,FLEN)
NAN_BOXED(10,16,FLEN)
NAN_BOXED(31329,16,FLEN)
NAN_BOXED(10,16,FLEN)
NAN_BOXED(31329,16,FLEN)
NAN_BOXED(10,16,FLEN)
NAN_BOXED(29933,16,FLEN)
NAN_BOXED(25,16,FLEN)
NAN_BOXED(29933,16,FLEN)
NAN_BOXED(25,16,FLEN)
NAN_BOXED(29933,16,FLEN)
NAN_BOXED(25,16,FLEN)
NAN_BOXED(29933,16,FLEN)
NAN_BOXED(25,16,FLEN)
NAN_BOXED(29933,16,FLEN)
NAN_BOXED(25,16,FLEN)
NAN_BOXED(30545,16,FLEN)
NAN_BOXED(17,16,FLEN)
NAN_BOXED(30545,16,FLEN)
NAN_BOXED(17,16,FLEN)
NAN_BOXED(30545,16,FLEN)
NAN_BOXED(17,16,FLEN)
NAN_BOXED(30545,16,FLEN)
NAN_BOXED(17,16,FLEN)
NAN_BOXED(30545,16,FLEN)
NAN_BOXED(17,16,FLEN)
NAN_BOXED(29808,16,FLEN)
NAN_BOXED(28,16,FLEN)
NAN_BOXED(29808,16,FLEN)
NAN_BOXED(28,16,FLEN)
NAN_BOXED(29808,16,FLEN)
NAN_BOXED(28,16,FLEN)
NAN_BOXED(29808,16,FLEN)
NAN_BOXED(28,16,FLEN)
NAN_BOXED(29808,16,FLEN)
NAN_BOXED(28,16,FLEN)
NAN_BOXED(28457,16,FLEN)
NAN_BOXED(71,16,FLEN)
NAN_BOXED(28457,16,FLEN)
NAN_BOXED(71,16,FLEN)
NAN_BOXED(28457,16,FLEN)
NAN_BOXED(71,16,FLEN)
NAN_BOXED(28457,16,FLEN)
NAN_BOXED(71,16,FLEN)
NAN_BOXED(28457,16,FLEN)
NAN_BOXED(71,16,FLEN)
NAN_BOXED(30224,16,FLEN)
NAN_BOXED(32789,16,FLEN)
NAN_BOXED(30224,16,FLEN)
NAN_BOXED(32789,16,FLEN)
NAN_BOXED(30224,16,FLEN)
NAN_BOXED(32789,16,FLEN)
NAN_BOXED(30224,16,FLEN)
NAN_BOXED(32789,16,FLEN)
NAN_BOXED(30224,16,FLEN)
NAN_BOXED(32789,16,FLEN)
NAN_BOXED(29975,16,FLEN)
NAN_BOXED(32793,16,FLEN)
NAN_BOXED(29975,16,FLEN)
NAN_BOXED(32793,16,FLEN)
NAN_BOXED(29975,16,FLEN)
NAN_BOXED(32793,16,FLEN)
NAN_BOXED(29975,16,FLEN)
NAN_BOXED(32793,16,FLEN)
NAN_BOXED(29975,16,FLEN)
NAN_BOXED(32793,16,FLEN)
NAN_BOXED(30544,16,FLEN)
NAN_BOXED(32785,16,FLEN)
NAN_BOXED(30544,16,FLEN)
NAN_BOXED(32785,16,FLEN)
NAN_BOXED(30544,16,FLEN)
NAN_BOXED(32785,16,FLEN)
NAN_BOXED(30544,16,FLEN)
NAN_BOXED(32785,16,FLEN)
NAN_BOXED(30544,16,FLEN)
NAN_BOXED(32785,16,FLEN)
NAN_BOXED(30481,16,FLEN)
NAN_BOXED(32786,16,FLEN)
NAN_BOXED(30481,16,FLEN)
NAN_BOXED(32786,16,FLEN)
NAN_BOXED(30481,16,FLEN)
NAN_BOXED(32786,16,FLEN)
NAN_BOXED(30481,16,FLEN)
NAN_BOXED(32786,16,FLEN)
NAN_BOXED(30481,16,FLEN)
NAN_BOXED(32786,16,FLEN)
NAN_BOXED(31527,16,FLEN)
NAN_BOXED(32776,16,FLEN)
NAN_BOXED(31527,16,FLEN)
NAN_BOXED(32776,16,FLEN)
NAN_BOXED(31527,16,FLEN)
NAN_BOXED(32776,16,FLEN)
NAN_BOXED(31527,16,FLEN)
NAN_BOXED(32776,16,FLEN)
NAN_BOXED(31527,16,FLEN)
NAN_BOXED(32776,16,FLEN)
NAN_BOXED(31598,16,FLEN)
NAN_BOXED(32776,16,FLEN)
NAN_BOXED(31598,16,FLEN)
NAN_BOXED(32776,16,FLEN)
NAN_BOXED(31598,16,FLEN)
NAN_BOXED(32776,16,FLEN)
NAN_BOXED(31598,16,FLEN)
NAN_BOXED(32776,16,FLEN)
NAN_BOXED(31598,16,FLEN)
NAN_BOXED(32776,16,FLEN)
NAN_BOXED(28254,16,FLEN)
NAN_BOXED(32848,16,FLEN)
NAN_BOXED(28254,16,FLEN)
NAN_BOXED(32848,16,FLEN)
NAN_BOXED(28254,16,FLEN)
NAN_BOXED(32848,16,FLEN)
NAN_BOXED(28254,16,FLEN)
NAN_BOXED(32848,16,FLEN)
NAN_BOXED(28254,16,FLEN)
NAN_BOXED(32848,16,FLEN)
NAN_BOXED(29200,16,FLEN)
NAN_BOXED(32810,16,FLEN)
NAN_BOXED(29200,16,FLEN)
NAN_BOXED(32810,16,FLEN)
NAN_BOXED(29200,16,FLEN)
NAN_BOXED(32810,16,FLEN)
NAN_BOXED(29200,16,FLEN)
NAN_BOXED(32810,16,FLEN)
NAN_BOXED(29200,16,FLEN)
NAN_BOXED(32810,16,FLEN)
NAN_BOXED(30202,16,FLEN)
NAN_BOXED(32789,16,FLEN)
NAN_BOXED(30202,16,FLEN)
NAN_BOXED(32789,16,FLEN)
NAN_BOXED(30202,16,FLEN)
NAN_BOXED(32789,16,FLEN)
NAN_BOXED(30202,16,FLEN)
NAN_BOXED(32789,16,FLEN)
NAN_BOXED(30202,16,FLEN)
NAN_BOXED(32789,16,FLEN)
NAN_BOXED(31323,16,FLEN)
NAN_BOXED(32778,16,FLEN)
NAN_BOXED(31323,16,FLEN)
NAN_BOXED(32778,16,FLEN)
NAN_BOXED(31323,16,FLEN)
NAN_BOXED(32778,16,FLEN)
NAN_BOXED(31323,16,FLEN)
NAN_BOXED(32778,16,FLEN)
NAN_BOXED(31323,16,FLEN)
NAN_BOXED(32778,16,FLEN)
NAN_BOXED(31351,16,FLEN)
NAN_BOXED(32777,16,FLEN)
NAN_BOXED(31351,16,FLEN)
NAN_BOXED(32777,16,FLEN)
NAN_BOXED(31351,16,FLEN)
NAN_BOXED(32777,16,FLEN)
NAN_BOXED(31351,16,FLEN)
NAN_BOXED(32777,16,FLEN)
NAN_BOXED(31351,16,FLEN)
NAN_BOXED(32777,16,FLEN)
NAN_BOXED(30310,16,FLEN)
NAN_BOXED(32787,16,FLEN)
NAN_BOXED(30310,16,FLEN)
NAN_BOXED(32787,16,FLEN)
NAN_BOXED(30310,16,FLEN)
NAN_BOXED(32787,16,FLEN)
NAN_BOXED(30310,16,FLEN)
NAN_BOXED(32787,16,FLEN)
NAN_BOXED(30310,16,FLEN)
NAN_BOXED(32787,16,FLEN)
NAN_BOXED(30073,16,FLEN)
NAN_BOXED(32791,16,FLEN)
NAN_BOXED(30073,16,FLEN)
NAN_BOXED(32791,16,FLEN)
NAN_BOXED(30073,16,FLEN)
NAN_BOXED(32791,16,FLEN)
NAN_BOXED(30073,16,FLEN)
NAN_BOXED(32791,16,FLEN)
NAN_BOXED(30073,16,FLEN)
NAN_BOXED(32791,16,FLEN)
NAN_BOXED(31591,16,FLEN)
NAN_BOXED(8,16,FLEN)
NAN_BOXED(31591,16,FLEN)
NAN_BOXED(8,16,FLEN)
NAN_BOXED(31591,16,FLEN)
NAN_BOXED(8,16,FLEN)
NAN_BOXED(31591,16,FLEN)
NAN_BOXED(8,16,FLEN)
NAN_BOXED(31591,16,FLEN)
NAN_BOXED(8,16,FLEN)
NAN_BOXED(31108,16,FLEN)
NAN_BOXED(11,16,FLEN)
NAN_BOXED(31108,16,FLEN)
NAN_BOXED(11,16,FLEN)
NAN_BOXED(31108,16,FLEN)
NAN_BOXED(11,16,FLEN)
NAN_BOXED(31108,16,FLEN)
NAN_BOXED(11,16,FLEN)
NAN_BOXED(31108,16,FLEN)
NAN_BOXED(11,16,FLEN)
NAN_BOXED(31216,16,FLEN)
NAN_BOXED(10,16,FLEN)
NAN_BOXED(31216,16,FLEN)
NAN_BOXED(10,16,FLEN)
NAN_BOXED(31216,16,FLEN)
NAN_BOXED(10,16,FLEN)
NAN_BOXED(31216,16,FLEN)
NAN_BOXED(10,16,FLEN)
NAN_BOXED(31216,16,FLEN)
NAN_BOXED(10,16,FLEN)
NAN_BOXED(31475,16,FLEN)
NAN_BOXED(9,16,FLEN)
NAN_BOXED(31475,16,FLEN)
NAN_BOXED(9,16,FLEN)
NAN_BOXED(31475,16,FLEN)
NAN_BOXED(9,16,FLEN)
NAN_BOXED(31475,16,FLEN)
NAN_BOXED(9,16,FLEN)
NAN_BOXED(31475,16,FLEN)
NAN_BOXED(9,16,FLEN)
NAN_BOXED(31238,16,FLEN)
NAN_BOXED(10,16,FLEN)
NAN_BOXED(31238,16,FLEN)
NAN_BOXED(10,16,FLEN)
NAN_BOXED(31238,16,FLEN)
NAN_BOXED(10,16,FLEN)
NAN_BOXED(31238,16,FLEN)
NAN_BOXED(10,16,FLEN)
NAN_BOXED(31238,16,FLEN)
NAN_BOXED(10,16,FLEN)
NAN_BOXED(29865,16,FLEN)
NAN_BOXED(27,16,FLEN)
NAN_BOXED(29865,16,FLEN)
NAN_BOXED(27,16,FLEN)
NAN_BOXED(29865,16,FLEN)
NAN_BOXED(27,16,FLEN)
NAN_BOXED(29865,16,FLEN)
NAN_BOXED(27,16,FLEN)
NAN_BOXED(29865,16,FLEN)
NAN_BOXED(27,16,FLEN)
NAN_BOXED(31068,16,FLEN)
NAN_BOXED(11,16,FLEN)
NAN_BOXED(31068,16,FLEN)
NAN_BOXED(11,16,FLEN)
NAN_BOXED(31068,16,FLEN)
NAN_BOXED(11,16,FLEN)
NAN_BOXED(31068,16,FLEN)
NAN_BOXED(11,16,FLEN)
NAN_BOXED(31068,16,FLEN)
NAN_BOXED(11,16,FLEN)
NAN_BOXED(31653,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31653,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31406,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31066,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30435,16,FLEN)
NAN_BOXED(0,16,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x2_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x2_1:
    .fill 30*((SIGALIGN)/4),4,0xdeadbeef


signature_x14_0:
    .fill 26*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_0:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_7:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_8:
    .fill 116*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
