
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.12.2
// timestamp : Wed Sep 25 06:03:37 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/testing/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/testing/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV32Zhinx/rv32h_fnmadd.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.h instruction of the RISC-V RV32_Zfinx_Zhinx,RV64_Zfinx_Zhinx extension for the fnmadd_b16 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32I_Zfinx_Zhinx,RV64I_Zfinx_Zhinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*Zhinx.*);def TEST_CASE_1=True;",fnmadd_b16)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x2,test_dataset_0)
RVTEST_SIGBASE(x12,signature_x12_1)

inst_0:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==x25, rs2==x13, rs3==x25, rd==x31,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3a5 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x394 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x25; op2:x13; op3:x25; dest:x31; op1val:0x7ba5; op2val:0x7b94;
op3val:0x7ba5; valaddr_reg:x2; val_offset:0*FLEN/8; rmval:dyn;
testreg:x4; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x25, x13, x25, dyn, 0, 0, x2, 0*FLEN/8, x14, x12, x4)

inst_1:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==x8, rs2==x28, rs3==x28, rd==x11,fs1 == 0 and fe1 == 0x1b and fm1 == 0x16d and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2ae and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x8; op2:x28; op3:x28; dest:x11; op1val:0x6d6d; op2val:0x7aae;
op3val:0x7aae; valaddr_reg:x2; val_offset:3*FLEN/8; rmval:dyn;
testreg:x4; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x11, x8, x28, x28, dyn, 0, 0, x2, 3*FLEN/8, x14, x12, x4)

inst_2:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==x9, rs2==x23, rs3==x10, rd==x13,fs1 == 0 and fe1 == 0x1e and fm1 == 0x15a and fs2 == 0 and fe2 == 0x1d and fm2 == 0x0ed and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x9; op2:x23; op3:x10; dest:x13; op1val:0x795a; op2val:0x74ed;
op3val:0xfbff; valaddr_reg:x2; val_offset:6*FLEN/8; rmval:dyn;
testreg:x4; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x13, x9, x23, x10, dyn, 0, 0, x2, 6*FLEN/8, x14, x12, x4)

inst_3:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==x5, rs2==x27, rs3==x26, rd==x27,fs1 == 0 and fe1 == 0x1e and fm1 == 0x0da and fs2 == 0 and fe2 == 0x1e and fm2 == 0x0a5 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x5; op2:x27; op3:x26; dest:x27; op1val:0x78da; op2val:0x78a5;
op3val:0xfbff; valaddr_reg:x2; val_offset:9*FLEN/8; rmval:dyn;
testreg:x4; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x27, x5, x27, x26, dyn, 0, 0, x2, 9*FLEN/8, x14, x12, x4)

inst_4:
// rs1 == rd == rs3 != rs2, rs1==x24, rs2==x3, rs3==x24, rd==x24,fs1 == 0 and fe1 == 0x1d and fm1 == 0x2e3 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x24b and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x24; op2:x3; op3:x24; dest:x24; op1val:0x76e3; op2val:0x764b;
op3val:0x76e3; valaddr_reg:x2; val_offset:12*FLEN/8; rmval:dyn;
testreg:x4; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x24, x24, x3, x24, dyn, 0, 0, x2, 12*FLEN/8, x14, x12, x4)

inst_5:
// rs1 == rs2 == rs3 != rd, rs1==x30, rs2==x30, rs3==x30, rd==x10,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3f4 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x397 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x30; op3:x30; dest:x10; op1val:0x7bf4; op2val:0x7bf4;
op3val:0x7bf4; valaddr_reg:x2; val_offset:15*FLEN/8; rmval:dyn;
testreg:x4; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x10, x30, x30, x30, dyn, 0, 0, x2, 15*FLEN/8, x14, x12, x4)

inst_6:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==x15, rs2==x15, rs3==x22, rd==x1,fs1 == 0 and fe1 == 0x1d and fm1 == 0x31d and fs2 == 0 and fe2 == 0x1d and fm2 == 0x04a and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x15; op2:x15; op3:x22; dest:x1; op1val:0x771d; op2val:0x771d;
op3val:0xfbff; valaddr_reg:x2; val_offset:18*FLEN/8; rmval:dyn;
testreg:x4; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x1, x15, x15, x22, dyn, 0, 0, x2, 18*FLEN/8, x14, x12, x4)

inst_7:
// rd == rs2 == rs3 != rs1, rs1==x7, rs2==x18, rs3==x18, rd==x18,fs1 == 0 and fe1 == 0x19 and fm1 == 0x305 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x36f and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x7; op2:x18; op3:x18; dest:x18; op1val:0x6705; op2val:0x776f;
op3val:0x776f; valaddr_reg:x2; val_offset:21*FLEN/8; rmval:dyn;
testreg:x4; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x18, x7, x18, x18, dyn, 0, 0, x2, 21*FLEN/8, x14, x12, x4)

inst_8:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==x16, rs2==x6, rs3==x12, rd==x16,fs1 == 0 and fe1 == 0x1d and fm1 == 0x213 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x321 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x16; op2:x6; op3:x12; dest:x16; op1val:0x7613; op2val:0x7b21;
op3val:0xfbff; valaddr_reg:x2; val_offset:24*FLEN/8; rmval:dyn;
testreg:x4; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x16, x16, x6, x12, dyn, 0, 0, x2, 24*FLEN/8, x14, x12, x4)

inst_9:
// rs1 == rs2 == rs3 == rd, rs1==x19, rs2==x19, rs3==x19, rd==x19,fs1 == 0 and fe1 == 0x1e and fm1 == 0x07b and fs2 == 0 and fe2 == 0x1c and fm2 == 0x38d and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x19; op2:x19; op3:x19; dest:x19; op1val:0x787b; op2val:0x787b;
op3val:0x787b; valaddr_reg:x2; val_offset:27*FLEN/8; rmval:dyn;
testreg:x4; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x19, x19, x19, x19, dyn, 0, 0, x2, 27*FLEN/8, x14, x12, x4)

inst_10:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==x28, rs2==x11, rs3==x21, rd==x21,fs1 == 0 and fe1 == 0x1d and fm1 == 0x133 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x05f and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x28; op2:x11; op3:x21; dest:x21; op1val:0x7533; op2val:0x705f;
op3val:0xfbff; valaddr_reg:x2; val_offset:30*FLEN/8; rmval:dyn;
testreg:x4; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x21, x28, x11, x21, dyn, 0, 0, x2, 30*FLEN/8, x14, x12, x4)
RVTEST_VALBASEUPD(x1,test_dataset_1)

inst_11:
// rs1 == rs2 == rd != rs3, rs1==x17, rs2==x17, rs3==x5, rd==x17,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3fc and fs2 == 0 and fe2 == 0x1e and fm2 == 0x164 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x17; op2:x17; op3:x5; dest:x17; op1val:0x7bfc; op2val:0x7bfc;
op3val:0xfbff; valaddr_reg:x1; val_offset:0*FLEN/8; rmval:dyn;
testreg:x4; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x17, x17, x17, x5, dyn, 0, 0, x1, 0*FLEN/8, x3, x12, x4)

inst_12:
// rs1==x18, rs2==x16, rs3==x9, rd==x5,fs1 == 0 and fe1 == 0x1e and fm1 == 0x325 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x25e and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x18; op2:x16; op3:x9; dest:x5; op1val:0x7b25; op2val:0x7a5e;
op3val:0xfbff; valaddr_reg:x1; val_offset:3*FLEN/8; rmval:dyn;
testreg:x4; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x5, x18, x16, x9, dyn, 0, 0, x1, 3*FLEN/8, x3, x12, x4)

inst_13:
// rs1==x31, rs2==x10, rs3==x15, rd==x2,fs1 == 0 and fe1 == 0x1e and fm1 == 0x33f and fs2 == 0 and fe2 == 0x1e and fm2 == 0x219 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x31; op2:x10; op3:x15; dest:x2; op1val:0x7b3f; op2val:0x7a19;
op3val:0xfbff; valaddr_reg:x1; val_offset:6*FLEN/8; rmval:dyn;
testreg:x4; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x2, x31, x10, x15, dyn, 0, 0, x1, 6*FLEN/8, x3, x12, x4)

inst_14:
// rs1==x4, rs2==x2, rs3==x6, rd==x8,fs1 == 0 and fe1 == 0x1d and fm1 == 0x1a8 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3d8 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x4; op2:x2; op3:x6; dest:x8; op1val:0x75a8; op2val:0x7bd8;
op3val:0xfbff; valaddr_reg:x1; val_offset:9*FLEN/8; rmval:dyn;
testreg:x11; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x8, x4, x2, x6, dyn, 0, 0, x1, 9*FLEN/8, x3, x12, x11)
RVTEST_SIGBASE(x2,signature_x2_0)

inst_15:
// rs1==x22, rs2==x25, rs3==x1, rd==x14,fs1 == 0 and fe1 == 0x1c and fm1 == 0x127 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x207 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x22; op2:x25; op3:x1; dest:x14; op1val:0x7127; op2val:0x7a07;
op3val:0xfbff; valaddr_reg:x1; val_offset:12*FLEN/8; rmval:dyn;
testreg:x11; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x14, x22, x25, x1, dyn, 0, 0, x1, 12*FLEN/8, x3, x2, x11)

inst_16:
// rs1==x29, rs2==x24, rs3==x11, rd==x15,fs1 == 0 and fe1 == 0x1d and fm1 == 0x360 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x03d and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x29; op2:x24; op3:x11; dest:x15; op1val:0x7760; op2val:0x783d;
op3val:0xfbff; valaddr_reg:x1; val_offset:15*FLEN/8; rmval:dyn;
testreg:x11; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x15, x29, x24, x11, dyn, 0, 0, x1, 15*FLEN/8, x3, x2, x11)

inst_17:
// rs1==x27, rs2==x0, rs3==x29, rd==x30,fs1 == 0 and fe1 == 0x1e and fm1 == 0x365 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x001 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x27; op2:x0; op3:x29; dest:x30; op1val:0x7b65; op2val:0x0;
op3val:0xfbff; valaddr_reg:x1; val_offset:18*FLEN/8; rmval:dyn;
testreg:x11; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x30, x27, x0, x29, dyn, 0, 0, x1, 18*FLEN/8, x3, x2, x11)

inst_18:
// rs1==x10, rs2==x26, rs3==x13, rd==x9,fs1 == 0 and fe1 == 0x1d and fm1 == 0x1a8 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x30f and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x10; op2:x26; op3:x13; dest:x9; op1val:0x75a8; op2val:0x7b0f;
op3val:0xfbff; valaddr_reg:x1; val_offset:21*FLEN/8; rmval:dyn;
testreg:x11; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x9, x10, x26, x13, dyn, 0, 0, x1, 21*FLEN/8, x3, x2, x11)

inst_19:
// rs1==x20, rs2==x31, rs3==x0, rd==x29,fs1 == 0 and fe1 == 0x1d and fm1 == 0x35f and fs2 == 0 and fe2 == 0x1e and fm2 == 0x08a and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x20; op2:x31; op3:x0; dest:x29; op1val:0x775f; op2val:0x788a;
op3val:0x0; valaddr_reg:x1; val_offset:24*FLEN/8; rmval:dyn;
testreg:x11; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x29, x20, x31, x0, dyn, 0, 0, x1, 24*FLEN/8, x3, x2, x11)

inst_20:
// rs1==x6, rs2==x8, rs3==x4, rd==x7,fs1 == 0 and fe1 == 0x1e and fm1 == 0x1c9 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x3c8 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x6; op2:x8; op3:x4; dest:x7; op1val:0x79c9; op2val:0x77c8;
op3val:0xfbff; valaddr_reg:x1; val_offset:27*FLEN/8; rmval:dyn;
testreg:x11; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x7, x6, x8, x4, dyn, 0, 0, x1, 27*FLEN/8, x3, x2, x11)
RVTEST_VALBASEUPD(x15,test_dataset_2)

inst_21:
// rs1==x13, rs2==x5, rs3==x23, rd==x3,fs1 == 0 and fe1 == 0x1d and fm1 == 0x131 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x198 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x13; op2:x5; op3:x23; dest:x3; op1val:0x7531; op2val:0x7998;
op3val:0xfbff; valaddr_reg:x15; val_offset:0*FLEN/8; rmval:dyn;
testreg:x11; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x3, x13, x5, x23, dyn, 0, 0, x15, 0*FLEN/8, x17, x2, x11)

inst_22:
// rs1==x21, rs2==x29, rs3==x17, rd==x28,fs1 == 0 and fe1 == 0x1e and fm1 == 0x342 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x049 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x21; op2:x29; op3:x17; dest:x28; op1val:0x7b42; op2val:0x7449;
op3val:0xfbff; valaddr_reg:x15; val_offset:3*FLEN/8; rmval:dyn;
testreg:x11; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x28, x21, x29, x17, dyn, 0, 0, x15, 3*FLEN/8, x17, x2, x11)

inst_23:
// rs1==x12, rs2==x7, rs3==x3, rd==x4,fs1 == 0 and fe1 == 0x1d and fm1 == 0x0f3 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3a7 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x12; op2:x7; op3:x3; dest:x4; op1val:0x74f3; op2val:0x7ba7;
op3val:0xfbff; valaddr_reg:x15; val_offset:6*FLEN/8; rmval:dyn;
testreg:x11; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x4, x12, x7, x3, dyn, 0, 0, x15, 6*FLEN/8, x17, x2, x11)

inst_24:
// rs1==x23, rs2==x1, rs3==x27, rd==x25,fs1 == 0 and fe1 == 0x1e and fm1 == 0x008 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x023 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x23; op2:x1; op3:x27; dest:x25; op1val:0x7808; op2val:0x7823;
op3val:0xfbff; valaddr_reg:x15; val_offset:9*FLEN/8; rmval:dyn;
testreg:x11; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x25, x23, x1, x27, dyn, 0, 0, x15, 9*FLEN/8, x17, x2, x11)
RVTEST_SIGBASE(x7,signature_x7_0)

inst_25:
// rs1==x3, rs2==x12, rs3==x2, rd==x6,fs1 == 0 and fe1 == 0x1e and fm1 == 0x0b3 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x0fc and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x3; op2:x12; op3:x2; dest:x6; op1val:0x78b3; op2val:0x74fc;
op3val:0xfbff; valaddr_reg:x15; val_offset:12*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x6, x3, x12, x2, dyn, 0, 0, x15, 12*FLEN/8, x17, x7, x10)

inst_26:
// rs1==x11, rs2==x21, rs3==x7, rd==x26,fs1 == 0 and fe1 == 0x1e and fm1 == 0x017 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x378 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x11; op2:x21; op3:x7; dest:x26; op1val:0x7817; op2val:0x7b78;
op3val:0xfbff; valaddr_reg:x15; val_offset:15*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x26, x11, x21, x7, dyn, 0, 0, x15, 15*FLEN/8, x17, x7, x10)

inst_27:
// rs1==x26, rs2==x20, rs3==x31, rd==x23,fs1 == 0 and fe1 == 0x1b and fm1 == 0x0d2 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x28f and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x26; op2:x20; op3:x31; dest:x23; op1val:0x6cd2; op2val:0x7a8f;
op3val:0xfbff; valaddr_reg:x15; val_offset:18*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x23, x26, x20, x31, dyn, 0, 0, x15, 18*FLEN/8, x17, x7, x10)

inst_28:
// rs1==x1, rs2==x4, rs3==x14, rd==x0,fs1 == 0 and fe1 == 0x1e and fm1 == 0x341 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x21f and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x1; op2:x4; op3:x14; dest:x0; op1val:0x7b41; op2val:0x721f;
op3val:0xfbff; valaddr_reg:x15; val_offset:21*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x0, x1, x4, x14, dyn, 0, 0, x15, 21*FLEN/8, x17, x7, x10)

inst_29:
// rs1==x2, rs2==x9, rs3==x20, rd==x22,fs1 == 0 and fe1 == 0x1a and fm1 == 0x384 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x138 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x2; op2:x9; op3:x20; dest:x22; op1val:0x6b84; op2val:0x7938;
op3val:0xfbff; valaddr_reg:x15; val_offset:24*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x22, x2, x9, x20, dyn, 0, 0, x15, 24*FLEN/8, x17, x7, x10)

inst_30:
// rs1==x0, rs2==x22, rs3==x16, rd==x20,fs1 == 0 and fe1 == 0x1c and fm1 == 0x33f and fs2 == 0 and fe2 == 0x1e and fm2 == 0x300 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x0; op2:x22; op3:x16; dest:x20; op1val:0x0; op2val:0x7b00;
op3val:0xfbff; valaddr_reg:x15; val_offset:27*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x20, x0, x22, x16, dyn, 0, 0, x15, 27*FLEN/8, x17, x7, x10)

inst_31:
// rs1==x14,fs1 == 0 and fe1 == 0x1e and fm1 == 0x02d and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2d4 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x14; op2:x18; op3:x16; dest:x0; op1val:0x782d; op2val:0x7ad4;
op3val:0xfbff; valaddr_reg:x15; val_offset:30*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x0, x14, x18, x16, dyn, 0, 0, x15, 30*FLEN/8, x17, x7, x10)

inst_32:
// rs2==x14,fs1 == 0 and fe1 == 0x1c and fm1 == 0x2bb and fs2 == 0 and fe2 == 0x1e and fm2 == 0x30a and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x16; op2:x14; op3:x1; dest:x5; op1val:0x72bb; op2val:0x7b0a;
op3val:0xfbff; valaddr_reg:x15; val_offset:33*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x5, x16, x14, x1, dyn, 0, 0, x15, 33*FLEN/8, x17, x7, x10)

inst_33:
// rs3==x8,fs1 == 0 and fe1 == 0x1e and fm1 == 0x1bb and fs2 == 0 and fe2 == 0x1a and fm2 == 0x013 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x5; op2:x26; op3:x8; dest:x0; op1val:0x79bb; op2val:0x6813;
op3val:0xfbff; valaddr_reg:x15; val_offset:36*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x0, x5, x26, x8, dyn, 0, 0, x15, 36*FLEN/8, x17, x7, x10)

inst_34:
// rd==x12,fs1 == 0 and fe1 == 0x1c and fm1 == 0x17f and fs2 == 0 and fe2 == 0x1e and fm2 == 0x161 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x14; op2:x8; op3:x19; dest:x12; op1val:0x717f; op2val:0x7961;
op3val:0xfbff; valaddr_reg:x15; val_offset:39*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x12, x14, x8, x19, dyn, 0, 0, x15, 39*FLEN/8, x17, x7, x10)
RVTEST_VALBASEUPD(x1,test_dataset_3)

inst_35:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3a1 and fs2 == 0 and fe2 == 0x19 and fm2 == 0x27c and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ba1; op2val:0x667c;
op3val:0xfbff; valaddr_reg:x1; val_offset:0*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 0*FLEN/8, x2, x7, x10)

inst_36:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x169 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x016 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6569; op2val:0x7416;
op3val:0xfbff; valaddr_reg:x1; val_offset:3*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 3*FLEN/8, x2, x7, x10)

inst_37:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x106 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x1e0 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7106; op2val:0x71e0;
op3val:0xfbff; valaddr_reg:x1; val_offset:6*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 6*FLEN/8, x2, x7, x10)

inst_38:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x22a and fs2 == 0 and fe2 == 0x1a and fm2 == 0x185 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x762a; op2val:0x6985;
op3val:0xfbff; valaddr_reg:x1; val_offset:9*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 9*FLEN/8, x2, x7, x10)

inst_39:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x0d7 and fs2 == 0 and fe2 == 0x1a and fm2 == 0x0a3 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x70d7; op2val:0x68a3;
op3val:0xfbff; valaddr_reg:x1; val_offset:12*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 12*FLEN/8, x2, x7, x10)

inst_40:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0eb and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1ef and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x78eb; op2val:0x79ef;
op3val:0xfbff; valaddr_reg:x1; val_offset:15*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 15*FLEN/8, x2, x7, x10)

inst_41:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x164 and fs2 == 0 and fe2 == 0x19 and fm2 == 0x3e2 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7564; op2val:0x67e2;
op3val:0xfbff; valaddr_reg:x1; val_offset:18*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 18*FLEN/8, x2, x7, x10)

inst_42:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x21f and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1ea and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a1f; op2val:0x79ea;
op3val:0xfbff; valaddr_reg:x1; val_offset:21*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 21*FLEN/8, x2, x7, x10)

inst_43:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x20a and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2e5 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a0a; op2val:0x7ae5;
op3val:0xfbff; valaddr_reg:x1; val_offset:24*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 24*FLEN/8, x2, x7, x10)

inst_44:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x38f and fs2 == 0 and fe2 == 0x1c and fm2 == 0x336 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x778f; op2val:0x7336;
op3val:0xfbff; valaddr_reg:x1; val_offset:27*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 27*FLEN/8, x2, x7, x10)

inst_45:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x10e and fs2 == 0 and fe2 == 0x1b and fm2 == 0x287 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x750e; op2val:0x6e87;
op3val:0xfbff; valaddr_reg:x1; val_offset:30*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 30*FLEN/8, x2, x7, x10)

inst_46:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2fe and fs2 == 0 and fe2 == 0x1c and fm2 == 0x014 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7afe; op2val:0x7014;
op3val:0xfbff; valaddr_reg:x1; val_offset:33*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 33*FLEN/8, x2, x7, x10)

inst_47:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x248 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x01d and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7648; op2val:0x781d;
op3val:0xfbff; valaddr_reg:x1; val_offset:36*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 36*FLEN/8, x2, x7, x10)

inst_48:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ac and fs2 == 0 and fe2 == 0x1d and fm2 == 0x024 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7bac; op2val:0x7424;
op3val:0xfbff; valaddr_reg:x1; val_offset:39*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 39*FLEN/8, x2, x7, x10)

inst_49:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2b6 and fs2 == 0 and fe2 == 0x19 and fm2 == 0x09d and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x76b6; op2val:0x649d;
op3val:0xfbff; valaddr_reg:x1; val_offset:42*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 42*FLEN/8, x2, x7, x10)

inst_50:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x07e and fs2 == 0 and fe2 == 0x1a and fm2 == 0x343 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x707e; op2val:0x6b43;
op3val:0xfbff; valaddr_reg:x1; val_offset:45*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 45*FLEN/8, x2, x7, x10)

inst_51:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x127 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x221 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7127; op2val:0x6e21;
op3val:0xfbff; valaddr_reg:x1; val_offset:48*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 48*FLEN/8, x2, x7, x10)

inst_52:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x010 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3dd and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7810; op2val:0x7bdd;
op3val:0xfbff; valaddr_reg:x1; val_offset:51*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 51*FLEN/8, x2, x7, x10)

inst_53:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3f3 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x36f and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7bf3; op2val:0x736f;
op3val:0xfbff; valaddr_reg:x1; val_offset:54*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 54*FLEN/8, x2, x7, x10)

inst_54:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x002 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x0ba and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7402; op2val:0x78ba;
op3val:0xfbff; valaddr_reg:x1; val_offset:57*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 57*FLEN/8, x2, x7, x10)

inst_55:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x266 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1ac and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a66; op2val:0x79ac;
op3val:0xfbff; valaddr_reg:x1; val_offset:60*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 60*FLEN/8, x2, x7, x10)

inst_56:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2c3 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x035 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x76c3; op2val:0x7835;
op3val:0xfbff; valaddr_reg:x1; val_offset:63*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 63*FLEN/8, x2, x7, x10)

inst_57:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x08a and fs2 == 0 and fe2 == 0x1d and fm2 == 0x289 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x688a; op2val:0x7689;
op3val:0xfbff; valaddr_reg:x1; val_offset:66*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 66*FLEN/8, x2, x7, x10)

inst_58:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1c9 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x3b4 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x79c9; op2val:0x73b4;
op3val:0xfbff; valaddr_reg:x1; val_offset:69*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 69*FLEN/8, x2, x7, x10)

inst_59:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x1d0 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x367 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x71d0; op2val:0x7367;
op3val:0xfbff; valaddr_reg:x1; val_offset:72*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 72*FLEN/8, x2, x7, x10)

inst_60:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x029 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x36d and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7829; op2val:0x776d;
op3val:0xfbff; valaddr_reg:x1; val_offset:75*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 75*FLEN/8, x2, x7, x10)

inst_61:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x121 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x2cb and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7921; op2val:0x72cb;
op3val:0xfbff; valaddr_reg:x1; val_offset:78*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 78*FLEN/8, x2, x7, x10)

inst_62:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3b3 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1d4 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7bb3; op2val:0x79d4;
op3val:0xfbff; valaddr_reg:x1; val_offset:81*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 81*FLEN/8, x2, x7, x10)

inst_63:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x017 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x0a5 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7817; op2val:0x78a5;
op3val:0xfbff; valaddr_reg:x1; val_offset:84*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 84*FLEN/8, x2, x7, x10)

inst_64:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2af and fs2 == 0 and fe2 == 0x1e and fm2 == 0x032 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x76af; op2val:0x7832;
op3val:0xfbff; valaddr_reg:x1; val_offset:87*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 87*FLEN/8, x2, x7, x10)

inst_65:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x1ff and fs2 == 0 and fe2 == 0x1e and fm2 == 0x26b and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6dff; op2val:0x7a6b;
op3val:0xfbff; valaddr_reg:x1; val_offset:90*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 90*FLEN/8, x2, x7, x10)

inst_66:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x026 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x35e and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7826; op2val:0x7b5e;
op3val:0xfbff; valaddr_reg:x1; val_offset:93*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 93*FLEN/8, x2, x7, x10)

inst_67:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0a1 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3dd and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x74a1; op2val:0x7bdd;
op3val:0xfbff; valaddr_reg:x1; val_offset:96*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 96*FLEN/8, x2, x7, x10)

inst_68:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x0e0 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x17a and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x64e0; op2val:0x797a;
op3val:0xfbff; valaddr_reg:x1; val_offset:99*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 99*FLEN/8, x2, x7, x10)

inst_69:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0e4 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2b8 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x74e4; op2val:0x7ab8;
op3val:0xfbff; valaddr_reg:x1; val_offset:102*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 102*FLEN/8, x2, x7, x10)

inst_70:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x005 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x338 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6405; op2val:0x7738;
op3val:0xfbff; valaddr_reg:x1; val_offset:105*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 105*FLEN/8, x2, x7, x10)

inst_71:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3c5 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x2a9 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x77c5; op2val:0x72a9;
op3val:0xfbff; valaddr_reg:x1; val_offset:108*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 108*FLEN/8, x2, x7, x10)

inst_72:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x0b8 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x08c and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6cb8; op2val:0x748c;
op3val:0xfbff; valaddr_reg:x1; val_offset:111*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 111*FLEN/8, x2, x7, x10)

inst_73:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x37a and fs2 == 0 and fe2 == 0x1b and fm2 == 0x0e5 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b7a; op2val:0x6ce5;
op3val:0xfbff; valaddr_reg:x1; val_offset:114*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 114*FLEN/8, x2, x7, x10)

inst_74:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x227 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x091 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7227; op2val:0x7891;
op3val:0xfbff; valaddr_reg:x1; val_offset:117*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 117*FLEN/8, x2, x7, x10)

inst_75:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x368 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x206 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7768; op2val:0x7a06;
op3val:0xfbff; valaddr_reg:x1; val_offset:120*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 120*FLEN/8, x2, x7, x10)

inst_76:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x3c9 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x3ca and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6fc9; op2val:0x6fca;
op3val:0xfbff; valaddr_reg:x1; val_offset:123*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 123*FLEN/8, x2, x7, x10)

inst_77:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2cc and fs2 == 0 and fe2 == 0x1e and fm2 == 0x120 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7acc; op2val:0x7920;
op3val:0xfbff; valaddr_reg:x1; val_offset:126*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 126*FLEN/8, x2, x7, x10)

inst_78:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x189 and fs2 == 0 and fe2 == 0x19 and fm2 == 0x24f and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7989; op2val:0x664f;
op3val:0xfbff; valaddr_reg:x1; val_offset:129*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 129*FLEN/8, x2, x7, x10)

inst_79:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x236 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1c9 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a36; op2val:0x79c9;
op3val:0xfbff; valaddr_reg:x1; val_offset:132*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 132*FLEN/8, x2, x7, x10)

inst_80:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1b7 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x34f and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x75b7; op2val:0x774f;
op3val:0xfbff; valaddr_reg:x1; val_offset:135*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 135*FLEN/8, x2, x7, x10)

inst_81:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x04d and fs2 == 0 and fe2 == 0x1e and fm2 == 0x035 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x744d; op2val:0x7835;
op3val:0xfbff; valaddr_reg:x1; val_offset:138*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 138*FLEN/8, x2, x7, x10)

inst_82:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3a2 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x26e and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ba2; op2val:0x7a6e;
op3val:0xfbff; valaddr_reg:x1; val_offset:141*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 141*FLEN/8, x2, x7, x10)

inst_83:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2af and fs2 == 0 and fe2 == 0x1d and fm2 == 0x0be and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7aaf; op2val:0x74be;
op3val:0xfbff; valaddr_reg:x1; val_offset:144*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 144*FLEN/8, x2, x7, x10)

inst_84:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3d1 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x026 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x77d1; op2val:0x7426;
op3val:0xfbff; valaddr_reg:x1; val_offset:147*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 147*FLEN/8, x2, x7, x10)

inst_85:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x16e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x358 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x796e; op2val:0x7b58;
op3val:0xfbff; valaddr_reg:x1; val_offset:150*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 150*FLEN/8, x2, x7, x10)

inst_86:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x28a and fs2 == 0 and fe2 == 0x1b and fm2 == 0x223 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a8a; op2val:0x6e23;
op3val:0xfbff; valaddr_reg:x1; val_offset:153*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 153*FLEN/8, x2, x7, x10)

inst_87:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3fa and fs2 == 0 and fe2 == 0x1c and fm2 == 0x0af and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7bfa; op2val:0x70af;
op3val:0xfbff; valaddr_reg:x1; val_offset:156*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 156*FLEN/8, x2, x7, x10)

inst_88:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x046 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x182 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6c46; op2val:0x6d82;
op3val:0xfbff; valaddr_reg:x1; val_offset:159*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 159*FLEN/8, x2, x7, x10)

inst_89:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3e7 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x12e and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7be7; op2val:0x792e;
op3val:0xfbff; valaddr_reg:x1; val_offset:162*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 162*FLEN/8, x2, x7, x10)

inst_90:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0bd and fs2 == 0 and fe2 == 0x1c and fm2 == 0x369 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x74bd; op2val:0x7369;
op3val:0xfbff; valaddr_reg:x1; val_offset:165*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 165*FLEN/8, x2, x7, x10)

inst_91:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x172 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x304 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7972; op2val:0x7704;
op3val:0xfbff; valaddr_reg:x1; val_offset:168*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 168*FLEN/8, x2, x7, x10)

inst_92:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x32b and fs2 == 0 and fe2 == 0x1e and fm2 == 0x053 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6f2b; op2val:0x7853;
op3val:0xfbff; valaddr_reg:x1; val_offset:171*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 171*FLEN/8, x2, x7, x10)

inst_93:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x20b and fs2 == 0 and fe2 == 0x1b and fm2 == 0x226 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a0b; op2val:0x6e26;
op3val:0xfbff; valaddr_reg:x1; val_offset:174*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 174*FLEN/8, x2, x7, x10)

inst_94:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1b8 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x01d and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x79b8; op2val:0x741d;
op3val:0xfbff; valaddr_reg:x1; val_offset:177*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 177*FLEN/8, x2, x7, x10)

inst_95:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x35f and fs2 == 0 and fe2 == 0x1e and fm2 == 0x19f and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x775f; op2val:0x799f;
op3val:0xfbff; valaddr_reg:x1; val_offset:180*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 180*FLEN/8, x2, x7, x10)

inst_96:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3f5 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x242 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7bf5; op2val:0x7a42;
op3val:0xfbff; valaddr_reg:x1; val_offset:183*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 183*FLEN/8, x2, x7, x10)

inst_97:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x0a1 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x30e and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x70a1; op2val:0x770e;
op3val:0xfbff; valaddr_reg:x1; val_offset:186*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 186*FLEN/8, x2, x7, x10)

inst_98:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0c2 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x30d and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x78c2; op2val:0x7b0d;
op3val:0xfbff; valaddr_reg:x1; val_offset:189*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 189*FLEN/8, x2, x7, x10)

inst_99:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x014 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x3b7 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7814; op2val:0x77b7;
op3val:0xfbff; valaddr_reg:x1; val_offset:192*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 192*FLEN/8, x2, x7, x10)

inst_100:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1ae and fs2 == 0 and fe2 == 0x1e and fm2 == 0x37d and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x79ae; op2val:0x7b7d;
op3val:0xfbff; valaddr_reg:x1; val_offset:195*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 195*FLEN/8, x2, x7, x10)

inst_101:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x38e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3b1 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x778e; op2val:0x7bb1;
op3val:0xfbff; valaddr_reg:x1; val_offset:198*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 198*FLEN/8, x2, x7, x10)

inst_102:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1f6 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x143 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x79f6; op2val:0x7943;
op3val:0xfbff; valaddr_reg:x1; val_offset:201*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 201*FLEN/8, x2, x7, x10)

inst_103:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2d0 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x332 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ad0; op2val:0x7332;
op3val:0xfbff; valaddr_reg:x1; val_offset:204*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 204*FLEN/8, x2, x7, x10)

inst_104:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x270 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x155 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7670; op2val:0x7955;
op3val:0xfbff; valaddr_reg:x1; val_offset:207*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 207*FLEN/8, x2, x7, x10)

inst_105:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x113 and fs2 == 0 and fe2 == 0x18 and fm2 == 0x1f0 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7913; op2val:0x61f0;
op3val:0xfbff; valaddr_reg:x1; val_offset:210*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 210*FLEN/8, x2, x7, x10)

inst_106:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1b0 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x30f and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x79b0; op2val:0x7b0f;
op3val:0xfbff; valaddr_reg:x1; val_offset:213*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 213*FLEN/8, x2, x7, x10)

inst_107:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x286 and fs2 == 0 and fe2 == 0x19 and fm2 == 0x062 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a86; op2val:0x6462;
op3val:0xfbff; valaddr_reg:x1; val_offset:216*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 216*FLEN/8, x2, x7, x10)

inst_108:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1d5 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x0d9 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x79d5; op2val:0x78d9;
op3val:0xfbff; valaddr_reg:x1; val_offset:219*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 219*FLEN/8, x2, x7, x10)

inst_109:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x312 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x26d and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b12; op2val:0x6e6d;
op3val:0xfbff; valaddr_reg:x1; val_offset:222*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 222*FLEN/8, x2, x7, x10)

inst_110:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x222 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x261 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a22; op2val:0x7261;
op3val:0xfbff; valaddr_reg:x1; val_offset:225*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 225*FLEN/8, x2, x7, x10)

inst_111:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0b0 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x21f and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x78b0; op2val:0x721f;
op3val:0xfbff; valaddr_reg:x1; val_offset:228*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 228*FLEN/8, x2, x7, x10)

inst_112:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x068 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x0e5 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7068; op2val:0x78e5;
op3val:0xfbff; valaddr_reg:x1; val_offset:231*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 231*FLEN/8, x2, x7, x10)

inst_113:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x00e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x086 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x740e; op2val:0x7886;
op3val:0xfbff; valaddr_reg:x1; val_offset:234*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 234*FLEN/8, x2, x7, x10)

inst_114:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x28e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3bb and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x728e; op2val:0x7bbb;
op3val:0xfbff; valaddr_reg:x1; val_offset:237*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 237*FLEN/8, x2, x7, x10)

inst_115:
// fs1 == 0 and fe1 == 0x16 and fm1 == 0x237 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x3c3 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5a37; op2val:0x77c3;
op3val:0xfbff; valaddr_reg:x1; val_offset:240*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 240*FLEN/8, x2, x7, x10)

inst_116:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x143 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x208 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7943; op2val:0x7a08;
op3val:0xfbff; valaddr_reg:x1; val_offset:243*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 243*FLEN/8, x2, x7, x10)

inst_117:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x165 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x15b and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7965; op2val:0x755b;
op3val:0xfbff; valaddr_reg:x1; val_offset:246*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 246*FLEN/8, x2, x7, x10)

inst_118:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x005 and fs2 == 0 and fe2 == 0x19 and fm2 == 0x30b and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7805; op2val:0x670b;
op3val:0xfbff; valaddr_reg:x1; val_offset:249*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 249*FLEN/8, x2, x7, x10)

inst_119:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x207 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x18e and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a07; op2val:0x718e;
op3val:0xfbff; valaddr_reg:x1; val_offset:252*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 252*FLEN/8, x2, x7, x10)

inst_120:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x245 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x277 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a45; op2val:0x7677;
op3val:0xfbff; valaddr_reg:x1; val_offset:255*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 255*FLEN/8, x2, x7, x10)

inst_121:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x24b and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2e8 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a4b; op2val:0x7ae8;
op3val:0xfbff; valaddr_reg:x1; val_offset:258*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 258*FLEN/8, x2, x7, x10)

inst_122:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x133 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x21a and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7133; op2val:0x761a;
op3val:0xfbff; valaddr_reg:x1; val_offset:261*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 261*FLEN/8, x2, x7, x10)

inst_123:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0b6 and fs2 == 0 and fe2 == 0x18 and fm2 == 0x152 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x74b6; op2val:0x6152;
op3val:0xfbff; valaddr_reg:x1; val_offset:264*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 264*FLEN/8, x2, x7, x10)

inst_124:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3bb and fs2 == 0 and fe2 == 0x1d and fm2 == 0x1dc and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7bbb; op2val:0x75dc;
op3val:0xfbff; valaddr_reg:x1; val_offset:267*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 267*FLEN/8, x2, x7, x10)

inst_125:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x21d and fs2 == 0 and fe2 == 0x1d and fm2 == 0x314 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x761d; op2val:0x7714;
op3val:0xfbff; valaddr_reg:x1; val_offset:270*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 270*FLEN/8, x2, x7, x10)

inst_126:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0ee and fs2 == 0 and fe2 == 0x1e and fm2 == 0x130 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x74ee; op2val:0x7930;
op3val:0xfbff; valaddr_reg:x1; val_offset:273*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 273*FLEN/8, x2, x7, x10)

inst_127:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x04e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x350 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x784e; op2val:0x7b50;
op3val:0xfbff; valaddr_reg:x1; val_offset:276*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 276*FLEN/8, x2, x7, x10)

inst_128:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x297 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x0dd and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a97; op2val:0x74dd;
op3val:0xfbff; valaddr_reg:x1; val_offset:279*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 279*FLEN/8, x2, x7, x10)

inst_129:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x25d and fs2 == 0 and fe2 == 0x1e and fm2 == 0x139 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a5d; op2val:0x7939;
op3val:0xfbff; valaddr_reg:x1; val_offset:282*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 282*FLEN/8, x2, x7, x10)

inst_130:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2b8 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x1f2 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab8; op2val:0x6df2;
op3val:0xfbff; valaddr_reg:x1; val_offset:285*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 285*FLEN/8, x2, x7, x10)

inst_131:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x241 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x03d and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7641; op2val:0x783d;
op3val:0xfbff; valaddr_reg:x1; val_offset:288*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 288*FLEN/8, x2, x7, x10)

inst_132:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x261 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x107 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a61; op2val:0x7907;
op3val:0xfbff; valaddr_reg:x1; val_offset:291*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 291*FLEN/8, x2, x7, x10)

inst_133:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x373 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x351 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7373; op2val:0x7751;
op3val:0xfbff; valaddr_reg:x1; val_offset:294*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 294*FLEN/8, x2, x7, x10)

inst_134:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x070 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3a8 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7470; op2val:0x7ba8;
op3val:0xfbff; valaddr_reg:x1; val_offset:297*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 297*FLEN/8, x2, x7, x10)

inst_135:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x28b and fs2 == 0 and fe2 == 0x1d and fm2 == 0x210 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a8b; op2val:0x7610;
op3val:0xfbff; valaddr_reg:x1; val_offset:300*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 300*FLEN/8, x2, x7, x10)

inst_136:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x117 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x0f3 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7517; op2val:0x6cf3;
op3val:0xfbff; valaddr_reg:x1; val_offset:303*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 303*FLEN/8, x2, x7, x10)

inst_137:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x153 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x311 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7153; op2val:0x7711;
op3val:0xfbff; valaddr_reg:x1; val_offset:306*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 306*FLEN/8, x2, x7, x10)

inst_138:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x327 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x35e and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b27; op2val:0x7b5e;
op3val:0xfbff; valaddr_reg:x1; val_offset:309*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 309*FLEN/8, x2, x7, x10)

inst_139:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x11d and fs2 == 0 and fe2 == 0x1e and fm2 == 0x36e and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x791d; op2val:0x7b6e;
op3val:0xfbff; valaddr_reg:x1; val_offset:312*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 312*FLEN/8, x2, x7, x10)

inst_140:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x25e and fs2 == 0 and fe2 == 0x1c and fm2 == 0x39b and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6e5e; op2val:0x739b;
op3val:0xfbff; valaddr_reg:x1; val_offset:315*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 315*FLEN/8, x2, x7, x10)

inst_141:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x16c and fs2 == 0 and fe2 == 0x1d and fm2 == 0x1fa and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x796c; op2val:0x75fa;
op3val:0xfbff; valaddr_reg:x1; val_offset:318*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 318*FLEN/8, x2, x7, x10)

inst_142:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x25b and fs2 == 0 and fe2 == 0x1c and fm2 == 0x375 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a5b; op2val:0x7375;
op3val:0xfbff; valaddr_reg:x1; val_offset:321*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 321*FLEN/8, x2, x7, x10)

inst_143:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x10f and fs2 == 0 and fe2 == 0x1d and fm2 == 0x266 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x790f; op2val:0x7666;
op3val:0xfbff; valaddr_reg:x1; val_offset:324*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 324*FLEN/8, x2, x7, x10)

inst_144:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x179 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x306 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7579; op2val:0x7b06;
op3val:0xfbff; valaddr_reg:x1; val_offset:327*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 327*FLEN/8, x2, x7, x10)

inst_145:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x004 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x184 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7804; op2val:0x7984;
op3val:0xfbff; valaddr_reg:x1; val_offset:330*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 330*FLEN/8, x2, x7, x10)

inst_146:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1f0 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x201 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x79f0; op2val:0x7a01;
op3val:0xfbff; valaddr_reg:x1; val_offset:333*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 333*FLEN/8, x2, x7, x10)

inst_147:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x37b and fs2 == 0 and fe2 == 0x1e and fm2 == 0x206 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b7b; op2val:0x7a06;
op3val:0xfbff; valaddr_reg:x1; val_offset:336*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 336*FLEN/8, x2, x7, x10)

inst_148:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0a9 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x0fa and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x74a9; op2val:0x78fa;
op3val:0xfbff; valaddr_reg:x1; val_offset:339*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 339*FLEN/8, x2, x7, x10)

inst_149:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1e0 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x251 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x75e0; op2val:0x7651;
op3val:0xfbff; valaddr_reg:x1; val_offset:342*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 342*FLEN/8, x2, x7, x10)

inst_150:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3a8 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x1a9 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ba8; op2val:0x75a9;
op3val:0xfbff; valaddr_reg:x1; val_offset:345*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 345*FLEN/8, x2, x7, x10)

inst_151:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x325 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x1f6 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b25; op2val:0x71f6;
op3val:0xfbff; valaddr_reg:x1; val_offset:348*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 348*FLEN/8, x2, x7, x10)

inst_152:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x010 and fs2 == 0 and fe2 == 0x19 and fm2 == 0x32c and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7010; op2val:0x672c;
op3val:0xfbff; valaddr_reg:x1; val_offset:351*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 351*FLEN/8, x2, x7, x10)
RVTEST_SIGBASE(x7,signature_x7_1)

inst_153:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1be and fs2 == 0 and fe2 == 0x1e and fm2 == 0x356 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x75be; op2val:0x7b56;
op3val:0xfbff; valaddr_reg:x1; val_offset:354*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 354*FLEN/8, x2, x7, x10)

inst_154:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x216 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x2fa and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a16; op2val:0x76fa;
op3val:0xfbff; valaddr_reg:x1; val_offset:357*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 357*FLEN/8, x2, x7, x10)

inst_155:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x392 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2aa and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7392; op2val:0x7aaa;
op3val:0xfbff; valaddr_reg:x1; val_offset:360*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 360*FLEN/8, x2, x7, x10)

inst_156:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x08d and fs2 == 0 and fe2 == 0x1e and fm2 == 0x119 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x748d; op2val:0x7919;
op3val:0xfbff; valaddr_reg:x1; val_offset:363*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 363*FLEN/8, x2, x7, x10)

inst_157:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x10f and fs2 == 0 and fe2 == 0x1e and fm2 == 0x367 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x750f; op2val:0x7b67;
op3val:0xfbff; valaddr_reg:x1; val_offset:366*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 366*FLEN/8, x2, x7, x10)

inst_158:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x08c and fs2 == 0 and fe2 == 0x1c and fm2 == 0x289 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x708c; op2val:0x7289;
op3val:0xfbff; valaddr_reg:x1; val_offset:369*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 369*FLEN/8, x2, x7, x10)

inst_159:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2b9 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x76b9; op2val:0x7400;
op3val:0xfbff; valaddr_reg:x1; val_offset:372*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 372*FLEN/8, x2, x7, x10)

inst_160:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x3e2 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x3ad and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x73e2; op2val:0x73ad;
op3val:0xfbff; valaddr_reg:x1; val_offset:375*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 375*FLEN/8, x2, x7, x10)

inst_161:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x161 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x1f6 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7561; op2val:0x75f6;
op3val:0xfbff; valaddr_reg:x1; val_offset:378*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 378*FLEN/8, x2, x7, x10)

inst_162:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x3e4 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x09b and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6be4; op2val:0x709b;
op3val:0xfbff; valaddr_reg:x1; val_offset:381*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 381*FLEN/8, x2, x7, x10)

inst_163:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2df and fs2 == 0 and fe2 == 0x1e and fm2 == 0x23a and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x76df; op2val:0x7a3a;
op3val:0xfbff; valaddr_reg:x1; val_offset:384*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 384*FLEN/8, x2, x7, x10)

inst_164:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x02e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2c2 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x782e; op2val:0x7ac2;
op3val:0xfbff; valaddr_reg:x1; val_offset:387*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 387*FLEN/8, x2, x7, x10)

inst_165:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x224 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x0e1 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a24; op2val:0x78e1;
op3val:0xfbff; valaddr_reg:x1; val_offset:390*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 390*FLEN/8, x2, x7, x10)

inst_166:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3f9 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x246 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7bf9; op2val:0x7646;
op3val:0xfbff; valaddr_reg:x1; val_offset:393*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 393*FLEN/8, x2, x7, x10)

inst_167:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0f4 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x111 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x78f4; op2val:0x7511;
op3val:0xfbff; valaddr_reg:x1; val_offset:396*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 396*FLEN/8, x2, x7, x10)

inst_168:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0c7 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x0b3 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x78c7; op2val:0x78b3;
op3val:0xfbff; valaddr_reg:x1; val_offset:399*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 399*FLEN/8, x2, x7, x10)

inst_169:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3e0 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3e8 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7be0; op2val:0x7be8;
op3val:0xfbff; valaddr_reg:x1; val_offset:402*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 402*FLEN/8, x2, x7, x10)

inst_170:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x345 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x295 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7745; op2val:0x7695;
op3val:0xfbff; valaddr_reg:x1; val_offset:405*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 405*FLEN/8, x2, x7, x10)

inst_171:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x1e7 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x2ec and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x69e7; op2val:0x6eec;
op3val:0xfbff; valaddr_reg:x1; val_offset:408*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 408*FLEN/8, x2, x7, x10)

inst_172:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x019 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x37e and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7019; op2val:0x7b7e;
op3val:0xfbff; valaddr_reg:x1; val_offset:411*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 411*FLEN/8, x2, x7, x10)

inst_173:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x351 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x0f2 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b51; op2val:0x6cf2;
op3val:0xfbff; valaddr_reg:x1; val_offset:414*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 414*FLEN/8, x2, x7, x10)

inst_174:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x261 and fs2 == 0 and fe2 == 0x18 and fm2 == 0x086 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a61; op2val:0x6086;
op3val:0xfbff; valaddr_reg:x1; val_offset:417*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 417*FLEN/8, x2, x7, x10)

inst_175:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x19b and fs2 == 0 and fe2 == 0x1c and fm2 == 0x189 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x759b; op2val:0x7189;
op3val:0xfbff; valaddr_reg:x1; val_offset:420*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 420*FLEN/8, x2, x7, x10)

inst_176:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x15b and fs2 == 0 and fe2 == 0x1b and fm2 == 0x1e1 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x795b; op2val:0x6de1;
op3val:0xfbff; valaddr_reg:x1; val_offset:423*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 423*FLEN/8, x2, x7, x10)

inst_177:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x131 and fs2 == 0 and fe2 == 0x1a and fm2 == 0x25d and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7931; op2val:0x6a5d;
op3val:0xfbff; valaddr_reg:x1; val_offset:426*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 426*FLEN/8, x2, x7, x10)

inst_178:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x3b9 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x3b3 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x73b9; op2val:0x77b3;
op3val:0xfbff; valaddr_reg:x1; val_offset:429*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 429*FLEN/8, x2, x7, x10)

inst_179:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x06f and fs2 == 0 and fe2 == 0x1e and fm2 == 0x003 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x706f; op2val:0x7803;
op3val:0xfbff; valaddr_reg:x1; val_offset:432*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 432*FLEN/8, x2, x7, x10)

inst_180:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x262 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x358 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7262; op2val:0x7b58;
op3val:0xfbff; valaddr_reg:x1; val_offset:435*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 435*FLEN/8, x2, x7, x10)

inst_181:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x02e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x173 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x782e; op2val:0x7973;
op3val:0xfbff; valaddr_reg:x1; val_offset:438*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 438*FLEN/8, x2, x7, x10)

inst_182:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x07a and fs2 == 0 and fe2 == 0x1d and fm2 == 0x3de and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x707a; op2val:0x77de;
op3val:0xfbff; valaddr_reg:x1; val_offset:441*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 441*FLEN/8, x2, x7, x10)

inst_183:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x374 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x2ec and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6f74; op2val:0x6eec;
op3val:0xfbff; valaddr_reg:x1; val_offset:444*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 444*FLEN/8, x2, x7, x10)

inst_184:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x2cc and fs2 == 0 and fe2 == 0x1c and fm2 == 0x2e2 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6acc; op2val:0x72e2;
op3val:0xfbff; valaddr_reg:x1; val_offset:447*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 447*FLEN/8, x2, x7, x10)

inst_185:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0fa and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2dd and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x78fa; op2val:0x7add;
op3val:0xfbff; valaddr_reg:x1; val_offset:450*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 450*FLEN/8, x2, x7, x10)

inst_186:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1bc and fs2 == 0 and fe2 == 0x1e and fm2 == 0x00e and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x79bc; op2val:0x780e;
op3val:0xfbff; valaddr_reg:x1; val_offset:453*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 453*FLEN/8, x2, x7, x10)

inst_187:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x136 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x2be and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7136; op2val:0x6ebe;
op3val:0xfbff; valaddr_reg:x1; val_offset:456*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 456*FLEN/8, x2, x7, x10)

inst_188:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x103 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x2ba and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7903; op2val:0x72ba;
op3val:0xfbff; valaddr_reg:x1; val_offset:459*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 459*FLEN/8, x2, x7, x10)

inst_189:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0c1 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x2e3 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x74c1; op2val:0x76e3;
op3val:0xfbff; valaddr_reg:x1; val_offset:462*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 462*FLEN/8, x2, x7, x10)

inst_190:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x25e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x260 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x765e; op2val:0x7a60;
op3val:0xfbff; valaddr_reg:x1; val_offset:465*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 465*FLEN/8, x2, x7, x10)

inst_191:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x07f and fs2 == 0 and fe2 == 0x1d and fm2 == 0x38f and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x787f; op2val:0x778f;
op3val:0xfbff; valaddr_reg:x1; val_offset:468*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 468*FLEN/8, x2, x7, x10)

inst_192:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x21e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3e4 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a1e; op2val:0x7be4;
op3val:0xfbff; valaddr_reg:x1; val_offset:471*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 471*FLEN/8, x2, x7, x10)

inst_193:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x19f and fs2 == 0 and fe2 == 0x1e and fm2 == 0x196 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x799f; op2val:0x7996;
op3val:0xfbff; valaddr_reg:x1; val_offset:474*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 474*FLEN/8, x2, x7, x10)

inst_194:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x3d5 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x069 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x67d5; op2val:0x7869;
op3val:0xfbff; valaddr_reg:x1; val_offset:477*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 477*FLEN/8, x2, x7, x10)

inst_195:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x237 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x0a2 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7237; op2val:0x78a2;
op3val:0xfbff; valaddr_reg:x1; val_offset:480*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 480*FLEN/8, x2, x7, x10)

inst_196:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x100 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1ef and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7900; op2val:0x79ef;
op3val:0xfbff; valaddr_reg:x1; val_offset:483*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 483*FLEN/8, x2, x7, x10)

inst_197:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x399 and fs2 == 0 and fe2 == 0x1a and fm2 == 0x21d and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7799; op2val:0x6a1d;
op3val:0xfbff; valaddr_reg:x1; val_offset:486*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 486*FLEN/8, x2, x7, x10)

inst_198:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x294 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2ae and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a94; op2val:0x7aae;
op3val:0xfbff; valaddr_reg:x1; val_offset:489*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 489*FLEN/8, x2, x7, x10)

inst_199:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x0e2 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x243 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x68e2; op2val:0x7243;
op3val:0xfbff; valaddr_reg:x1; val_offset:492*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 492*FLEN/8, x2, x7, x10)

inst_200:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3a5 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x394 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ba5; op2val:0x7b94;
op3val:0xfbff; valaddr_reg:x1; val_offset:495*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 495*FLEN/8, x2, x7, x10)

inst_201:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x16d and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2ae and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6d6d; op2val:0x7aae;
op3val:0xfbff; valaddr_reg:x1; val_offset:498*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 498*FLEN/8, x2, x7, x10)

inst_202:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2e3 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x24b and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x76e3; op2val:0x764b;
op3val:0xfbff; valaddr_reg:x1; val_offset:501*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 501*FLEN/8, x2, x7, x10)

inst_203:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3f4 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x397 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7bf4; op2val:0x7b97;
op3val:0xfbff; valaddr_reg:x1; val_offset:504*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 504*FLEN/8, x2, x7, x10)

inst_204:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x31d and fs2 == 0 and fe2 == 0x1d and fm2 == 0x04a and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x771d; op2val:0x744a;
op3val:0xfbff; valaddr_reg:x1; val_offset:507*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 507*FLEN/8, x2, x7, x10)

inst_205:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x305 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x36f and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6705; op2val:0x776f;
op3val:0xfbff; valaddr_reg:x1; val_offset:510*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 510*FLEN/8, x2, x7, x10)

inst_206:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x07b and fs2 == 0 and fe2 == 0x1c and fm2 == 0x38d and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x787b; op2val:0x738d;
op3val:0xfbff; valaddr_reg:x1; val_offset:513*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 513*FLEN/8, x2, x7, x10)

inst_207:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3fc and fs2 == 0 and fe2 == 0x1e and fm2 == 0x164 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7bfc; op2val:0x7964;
op3val:0xfbff; valaddr_reg:x1; val_offset:516*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 516*FLEN/8, x2, x7, x10)

inst_208:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x365 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x001 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b65; op2val:0x7801;
op3val:0xfbff; valaddr_reg:x1; val_offset:519*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 519*FLEN/8, x2, x7, x10)

inst_209:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x35f and fs2 == 0 and fe2 == 0x1e and fm2 == 0x08a and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x775f; op2val:0x788a;
op3val:0xfbff; valaddr_reg:x1; val_offset:522*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 522*FLEN/8, x2, x7, x10)

inst_210:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x341 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x21f and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b41; op2val:0x721f;
op3val:0xfbff; valaddr_reg:x1; val_offset:525*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 525*FLEN/8, x2, x7, x10)

inst_211:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x33f and fs2 == 0 and fe2 == 0x1e and fm2 == 0x300 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x733f; op2val:0x7b00;
op3val:0xfbff; valaddr_reg:x1; val_offset:528*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 528*FLEN/8, x2, x7, x10)

inst_212:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x02d and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2d4 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x782d; op2val:0x7ad4;
op3val:0xfbff; valaddr_reg:x1; val_offset:531*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 531*FLEN/8, x2, x7, x10)

inst_213:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1bb and fs2 == 0 and fe2 == 0x1a and fm2 == 0x013 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0xffff  
/* opcode: fnmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x79bb; op2val:0x6813;
op3val:0xfbff; valaddr_reg:x1; val_offset:534*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.h, x31, x30, x29, x28, dyn, 0, 0, x1, 534*FLEN/8, x2, x7, x10)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(31653,32,FLEN)
NAN_BOXED(31636,32,FLEN)
NAN_BOXED(31653,16,FLEN)
NAN_BOXED(28013,32,FLEN)
NAN_BOXED(31406,32,FLEN)
NAN_BOXED(31406,16,FLEN)
NAN_BOXED(31066,32,FLEN)
NAN_BOXED(29933,32,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30938,32,FLEN)
NAN_BOXED(30885,32,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30435,32,FLEN)
NAN_BOXED(30283,32,FLEN)
NAN_BOXED(30435,16,FLEN)
NAN_BOXED(31732,32,FLEN)
NAN_BOXED(31732,32,FLEN)
NAN_BOXED(31732,16,FLEN)
NAN_BOXED(30493,32,FLEN)
NAN_BOXED(30493,32,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(26373,32,FLEN)
NAN_BOXED(30575,32,FLEN)
NAN_BOXED(30575,16,FLEN)
NAN_BOXED(30227,32,FLEN)
NAN_BOXED(31521,32,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30843,32,FLEN)
NAN_BOXED(30843,32,FLEN)
NAN_BOXED(30843,16,FLEN)
NAN_BOXED(30003,32,FLEN)
NAN_BOXED(28767,32,FLEN)
NAN_BOXED(64511,16,FLEN)
test_dataset_1:
NAN_BOXED(31740,32,FLEN)
NAN_BOXED(31740,32,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31525,32,FLEN)
NAN_BOXED(31326,32,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31551,32,FLEN)
NAN_BOXED(31257,32,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30120,32,FLEN)
NAN_BOXED(31704,32,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(28967,32,FLEN)
NAN_BOXED(31239,32,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30560,32,FLEN)
NAN_BOXED(30781,32,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31589,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30120,32,FLEN)
NAN_BOXED(31503,32,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30559,32,FLEN)
NAN_BOXED(30858,32,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31177,32,FLEN)
NAN_BOXED(30664,32,FLEN)
NAN_BOXED(64511,16,FLEN)
test_dataset_2:
NAN_BOXED(30001,32,FLEN)
NAN_BOXED(31128,32,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31554,32,FLEN)
NAN_BOXED(29769,32,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29939,32,FLEN)
NAN_BOXED(31655,32,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30728,32,FLEN)
NAN_BOXED(30755,32,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30899,32,FLEN)
NAN_BOXED(29948,32,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30743,32,FLEN)
NAN_BOXED(31608,32,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(27858,32,FLEN)
NAN_BOXED(31375,32,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31553,32,FLEN)
NAN_BOXED(29215,32,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(27524,32,FLEN)
NAN_BOXED(31032,32,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(31488,32,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30765,32,FLEN)
NAN_BOXED(31444,32,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29371,32,FLEN)
NAN_BOXED(31498,32,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31163,32,FLEN)
NAN_BOXED(26643,32,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29055,32,FLEN)
NAN_BOXED(31073,32,FLEN)
NAN_BOXED(64511,16,FLEN)
test_dataset_3:
NAN_BOXED(31649,16,FLEN)
NAN_BOXED(26236,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(25961,16,FLEN)
NAN_BOXED(29718,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(28934,16,FLEN)
NAN_BOXED(29152,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30250,16,FLEN)
NAN_BOXED(27013,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(28887,16,FLEN)
NAN_BOXED(26787,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30955,16,FLEN)
NAN_BOXED(31215,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30052,16,FLEN)
NAN_BOXED(26594,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31263,16,FLEN)
NAN_BOXED(31210,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31242,16,FLEN)
NAN_BOXED(31461,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30607,16,FLEN)
NAN_BOXED(29494,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29966,16,FLEN)
NAN_BOXED(28295,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31486,16,FLEN)
NAN_BOXED(28692,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30280,16,FLEN)
NAN_BOXED(30749,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31660,16,FLEN)
NAN_BOXED(29732,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30390,16,FLEN)
NAN_BOXED(25757,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(28798,16,FLEN)
NAN_BOXED(27459,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(28967,16,FLEN)
NAN_BOXED(28193,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30736,16,FLEN)
NAN_BOXED(31709,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31731,16,FLEN)
NAN_BOXED(29551,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29698,16,FLEN)
NAN_BOXED(30906,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31334,16,FLEN)
NAN_BOXED(31148,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30403,16,FLEN)
NAN_BOXED(30773,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(26762,16,FLEN)
NAN_BOXED(30345,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31177,16,FLEN)
NAN_BOXED(29620,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29136,16,FLEN)
NAN_BOXED(29543,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30761,16,FLEN)
NAN_BOXED(30573,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31009,16,FLEN)
NAN_BOXED(29387,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31667,16,FLEN)
NAN_BOXED(31188,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30743,16,FLEN)
NAN_BOXED(30885,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30383,16,FLEN)
NAN_BOXED(30770,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(28159,16,FLEN)
NAN_BOXED(31339,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30758,16,FLEN)
NAN_BOXED(31582,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29857,16,FLEN)
NAN_BOXED(31709,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(25824,16,FLEN)
NAN_BOXED(31098,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29924,16,FLEN)
NAN_BOXED(31416,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(25605,16,FLEN)
NAN_BOXED(30520,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30661,16,FLEN)
NAN_BOXED(29353,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(27832,16,FLEN)
NAN_BOXED(29836,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31610,16,FLEN)
NAN_BOXED(27877,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29223,16,FLEN)
NAN_BOXED(30865,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30568,16,FLEN)
NAN_BOXED(31238,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(28617,16,FLEN)
NAN_BOXED(28618,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31436,16,FLEN)
NAN_BOXED(31008,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31113,16,FLEN)
NAN_BOXED(26191,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31286,16,FLEN)
NAN_BOXED(31177,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30135,16,FLEN)
NAN_BOXED(30543,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29773,16,FLEN)
NAN_BOXED(30773,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31650,16,FLEN)
NAN_BOXED(31342,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31407,16,FLEN)
NAN_BOXED(29886,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30673,16,FLEN)
NAN_BOXED(29734,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31086,16,FLEN)
NAN_BOXED(31576,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31370,16,FLEN)
NAN_BOXED(28195,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31738,16,FLEN)
NAN_BOXED(28847,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(27718,16,FLEN)
NAN_BOXED(28034,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31719,16,FLEN)
NAN_BOXED(31022,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29885,16,FLEN)
NAN_BOXED(29545,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31090,16,FLEN)
NAN_BOXED(30468,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(28459,16,FLEN)
NAN_BOXED(30803,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31243,16,FLEN)
NAN_BOXED(28198,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31160,16,FLEN)
NAN_BOXED(29725,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30559,16,FLEN)
NAN_BOXED(31135,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31733,16,FLEN)
NAN_BOXED(31298,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(28833,16,FLEN)
NAN_BOXED(30478,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30914,16,FLEN)
NAN_BOXED(31501,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30740,16,FLEN)
NAN_BOXED(30647,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31150,16,FLEN)
NAN_BOXED(31613,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30606,16,FLEN)
NAN_BOXED(31665,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31222,16,FLEN)
NAN_BOXED(31043,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31440,16,FLEN)
NAN_BOXED(29490,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30320,16,FLEN)
NAN_BOXED(31061,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30995,16,FLEN)
NAN_BOXED(25072,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31152,16,FLEN)
NAN_BOXED(31503,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31366,16,FLEN)
NAN_BOXED(25698,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31189,16,FLEN)
NAN_BOXED(30937,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31506,16,FLEN)
NAN_BOXED(28269,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31266,16,FLEN)
NAN_BOXED(29281,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30896,16,FLEN)
NAN_BOXED(29215,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(28776,16,FLEN)
NAN_BOXED(30949,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29710,16,FLEN)
NAN_BOXED(30854,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29326,16,FLEN)
NAN_BOXED(31675,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(23095,16,FLEN)
NAN_BOXED(30659,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31043,16,FLEN)
NAN_BOXED(31240,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31077,16,FLEN)
NAN_BOXED(30043,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30725,16,FLEN)
NAN_BOXED(26379,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31239,16,FLEN)
NAN_BOXED(29070,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31301,16,FLEN)
NAN_BOXED(30327,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31307,16,FLEN)
NAN_BOXED(31464,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(28979,16,FLEN)
NAN_BOXED(30234,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29878,16,FLEN)
NAN_BOXED(24914,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31675,16,FLEN)
NAN_BOXED(30172,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30237,16,FLEN)
NAN_BOXED(30484,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29934,16,FLEN)
NAN_BOXED(31024,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30798,16,FLEN)
NAN_BOXED(31568,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31383,16,FLEN)
NAN_BOXED(29917,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31325,16,FLEN)
NAN_BOXED(31033,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31416,16,FLEN)
NAN_BOXED(28146,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30273,16,FLEN)
NAN_BOXED(30781,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31329,16,FLEN)
NAN_BOXED(30983,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29555,16,FLEN)
NAN_BOXED(30545,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29808,16,FLEN)
NAN_BOXED(31656,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31371,16,FLEN)
NAN_BOXED(30224,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29975,16,FLEN)
NAN_BOXED(27891,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29011,16,FLEN)
NAN_BOXED(30481,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31527,16,FLEN)
NAN_BOXED(31582,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31005,16,FLEN)
NAN_BOXED(31598,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(28254,16,FLEN)
NAN_BOXED(29595,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31084,16,FLEN)
NAN_BOXED(30202,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31323,16,FLEN)
NAN_BOXED(29557,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30991,16,FLEN)
NAN_BOXED(30310,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30073,16,FLEN)
NAN_BOXED(31494,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30724,16,FLEN)
NAN_BOXED(31108,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31216,16,FLEN)
NAN_BOXED(31233,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31611,16,FLEN)
NAN_BOXED(31238,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29865,16,FLEN)
NAN_BOXED(30970,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30176,16,FLEN)
NAN_BOXED(30289,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31656,16,FLEN)
NAN_BOXED(30121,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31525,16,FLEN)
NAN_BOXED(29174,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(28688,16,FLEN)
NAN_BOXED(26412,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30142,16,FLEN)
NAN_BOXED(31574,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31254,16,FLEN)
NAN_BOXED(30458,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29586,16,FLEN)
NAN_BOXED(31402,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29837,16,FLEN)
NAN_BOXED(31001,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29967,16,FLEN)
NAN_BOXED(31591,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(28812,16,FLEN)
NAN_BOXED(29321,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30393,16,FLEN)
NAN_BOXED(29696,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29666,16,FLEN)
NAN_BOXED(29613,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30049,16,FLEN)
NAN_BOXED(30198,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(27620,16,FLEN)
NAN_BOXED(28827,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30431,16,FLEN)
NAN_BOXED(31290,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30766,16,FLEN)
NAN_BOXED(31426,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31268,16,FLEN)
NAN_BOXED(30945,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31737,16,FLEN)
NAN_BOXED(30278,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30964,16,FLEN)
NAN_BOXED(29969,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30919,16,FLEN)
NAN_BOXED(30899,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31712,16,FLEN)
NAN_BOXED(31720,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30533,16,FLEN)
NAN_BOXED(30357,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(27111,16,FLEN)
NAN_BOXED(28396,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(28697,16,FLEN)
NAN_BOXED(31614,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31569,16,FLEN)
NAN_BOXED(27890,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31329,16,FLEN)
NAN_BOXED(24710,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30107,16,FLEN)
NAN_BOXED(29065,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31067,16,FLEN)
NAN_BOXED(28129,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31025,16,FLEN)
NAN_BOXED(27229,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29625,16,FLEN)
NAN_BOXED(30643,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(28783,16,FLEN)
NAN_BOXED(30723,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29282,16,FLEN)
NAN_BOXED(31576,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30766,16,FLEN)
NAN_BOXED(31091,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(28794,16,FLEN)
NAN_BOXED(30686,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(28532,16,FLEN)
NAN_BOXED(28396,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(27340,16,FLEN)
NAN_BOXED(29410,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30970,16,FLEN)
NAN_BOXED(31453,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31164,16,FLEN)
NAN_BOXED(30734,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(28982,16,FLEN)
NAN_BOXED(28350,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30979,16,FLEN)
NAN_BOXED(29370,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29889,16,FLEN)
NAN_BOXED(30435,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30302,16,FLEN)
NAN_BOXED(31328,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30847,16,FLEN)
NAN_BOXED(30607,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31262,16,FLEN)
NAN_BOXED(31716,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31135,16,FLEN)
NAN_BOXED(31126,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(26581,16,FLEN)
NAN_BOXED(30825,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29239,16,FLEN)
NAN_BOXED(30882,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30976,16,FLEN)
NAN_BOXED(31215,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30617,16,FLEN)
NAN_BOXED(27165,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31380,16,FLEN)
NAN_BOXED(31406,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(26850,16,FLEN)
NAN_BOXED(29251,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31653,16,FLEN)
NAN_BOXED(31636,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(28013,16,FLEN)
NAN_BOXED(31406,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30435,16,FLEN)
NAN_BOXED(30283,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31732,16,FLEN)
NAN_BOXED(31639,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30493,16,FLEN)
NAN_BOXED(29770,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(26373,16,FLEN)
NAN_BOXED(30575,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30843,16,FLEN)
NAN_BOXED(29581,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31740,16,FLEN)
NAN_BOXED(31076,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31589,16,FLEN)
NAN_BOXED(30721,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30559,16,FLEN)
NAN_BOXED(30858,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31553,16,FLEN)
NAN_BOXED(29215,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29503,16,FLEN)
NAN_BOXED(31488,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30765,16,FLEN)
NAN_BOXED(31444,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31163,16,FLEN)
NAN_BOXED(26643,16,FLEN)
NAN_BOXED(64511,16,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x12_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x12_1:
    .fill 30*((SIGALIGN)/4),4,0xdeadbeef


signature_x2_0:
    .fill 20*((SIGALIGN)/4),4,0xdeadbeef


signature_x7_0:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x7_1:
    .fill 122*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
