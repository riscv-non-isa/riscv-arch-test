
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.12.2
// timestamp : Wed Sep 25 06:07:02 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/testing/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/testing/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV32Zhinx/rv32h_fnmsub.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.h instruction of the RISC-V RV32_Zfinx_Zhinx,RV64_Zfinx_Zhinx extension for the fnmsub_b16 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32I_Zfinx_Zhinx,RV64I_Zfinx_Zhinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*Zhinx.*);def TEST_CASE_1=True;",fnmsub_b16)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x9,signature_x9_1)

inst_0:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==x23, rs2==x23, rs3==x3, rd==x16,fs1 == 0 and fe1 == 0x1c and fm1 == 0x39c and fs2 == 0 and fe2 == 0x1e and fm2 == 0x05a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x23; op2:x23; op3:x3; dest:x16; op1val:0x739c; op2val:0x739c;
op3val:0x7bff; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x17; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x16, x23, x23, x3, dyn, 0, 0, x3, 0*FLEN/8, x18, x9, x17)

inst_1:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==x6, rs2==x2, rs3==x28, rd==x6,fs1 == 0 and fe1 == 0x1e and fm1 == 0x0d4 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x100 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x6; op2:x2; op3:x28; dest:x6; op1val:0x78d4; op2val:0x7900;
op3val:0x7bff; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x17; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x6, x6, x2, x28, dyn, 0, 0, x3, 3*FLEN/8, x18, x9, x17)

inst_2:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==x16, rs2==x5, rs3==x30, rd==x8,fs1 == 0 and fe1 == 0x18 and fm1 == 0x2bd and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2b2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x16; op2:x5; op3:x30; dest:x8; op1val:0x62bd; op2val:0x7ab2;
op3val:0x7bff; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x17; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x8, x16, x5, x30, dyn, 0, 0, x3, 6*FLEN/8, x18, x9, x17)

inst_3:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==x19, rs2==x21, rs3==x19, rd==x29,fs1 == 0 and fe1 == 0x1c and fm1 == 0x37e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3f6 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x19; op2:x21; op3:x19; dest:x29; op1val:0x737e; op2val:0x7bf6;
op3val:0x737e; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x17; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x29, x19, x21, x19, dyn, 0, 0, x3, 9*FLEN/8, x18, x9, x17)

inst_4:
// rs1 == rs2 == rs3 != rd, rs1==x4, rs2==x4, rs3==x4, rd==x15,fs1 == 0 and fe1 == 0x1e and fm1 == 0x2b0 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x39e and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x4; op2:x4; op3:x4; dest:x15; op1val:0x7ab0; op2val:0x7ab0;
op3val:0x7ab0; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x17; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x15, x4, x4, x4, dyn, 0, 0, x3, 12*FLEN/8, x18, x9, x17)

inst_5:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==x1, rs2==x11, rs3==x12, rd==x12,fs1 == 0 and fe1 == 0x1c and fm1 == 0x0d1 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x113 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x1; op2:x11; op3:x12; dest:x12; op1val:0x70d1; op2val:0x7913;
op3val:0x7bff; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x17; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x12, x1, x11, x12, dyn, 0, 0, x3, 15*FLEN/8, x18, x9, x17)

inst_6:
// rd == rs2 == rs3 != rs1, rs1==x25, rs2==x20, rs3==x20, rd==x20,fs1 == 0 and fe1 == 0x1e and fm1 == 0x02e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1ed and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x25; op2:x20; op3:x20; dest:x20; op1val:0x782e; op2val:0x79ed;
op3val:0x79ed; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x17; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x20, x25, x20, x20, dyn, 0, 0, x3, 18*FLEN/8, x18, x9, x17)

inst_7:
// rs1 == rd == rs3 != rs2, rs1==x14, rs2==x15, rs3==x14, rd==x14,fs1 == 0 and fe1 == 0x1b and fm1 == 0x018 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x210 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x14; op2:x15; op3:x14; dest:x14; op1val:0x6c18; op2val:0x7a10;
op3val:0x6c18; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x17; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x14, x14, x15, x14, dyn, 0, 0, x3, 21*FLEN/8, x18, x9, x17)

inst_8:
// rs1 == rs2 == rs3 == rd, rs1==x13, rs2==x13, rs3==x13, rd==x13,fs1 == 0 and fe1 == 0x1d and fm1 == 0x0d1 and fs2 == 0 and fe2 == 0x19 and fm2 == 0x3ef and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x13; op2:x13; op3:x13; dest:x13; op1val:0x74d1; op2val:0x74d1;
op3val:0x74d1; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x17; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x13, x13, x13, x13, dyn, 0, 0, x3, 24*FLEN/8, x18, x9, x17)

inst_9:
// rs1 == rs2 == rd != rs3, rs1==x24, rs2==x24, rs3==x5, rd==x24,fs1 == 0 and fe1 == 0x1d and fm1 == 0x38f and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1bf and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x24; op2:x24; op3:x5; dest:x24; op1val:0x778f; op2val:0x778f;
op3val:0x7bff; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x17; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x24, x24, x24, x5, dyn, 0, 0, x3, 27*FLEN/8, x18, x9, x17)

inst_10:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==x2, rs2==x19, rs3==x9, rd==x19,fs1 == 0 and fe1 == 0x1e and fm1 == 0x1b5 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x35d and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x2; op2:x19; op3:x9; dest:x19; op1val:0x79b5; op2val:0x7b5d;
op3val:0x7bff; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x17; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x19, x2, x19, x9, dyn, 0, 0, x3, 30*FLEN/8, x18, x9, x17)

inst_11:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==x10, rs2==x26, rs3==x26, rd==x7,fs1 == 0 and fe1 == 0x1e and fm1 == 0x267 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x31c and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x10; op2:x26; op3:x26; dest:x7; op1val:0x7a67; op2val:0x771c;
op3val:0x771c; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x17; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x7, x10, x26, x26, dyn, 0, 0, x3, 33*FLEN/8, x18, x9, x17)
RVTEST_VALBASEUPD(x10,test_dataset_1)

inst_12:
// rs1==x18, rs2==x3, rs3==x1, rd==x31,fs1 == 0 and fe1 == 0x1e and fm1 == 0x307 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x23b and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x18; op2:x3; op3:x1; dest:x31; op1val:0x7b07; op2val:0x6e3b;
op3val:0x7bff; valaddr_reg:x10; val_offset:0*FLEN/8; rmval:dyn;
testreg:x17; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x18, x3, x1, dyn, 0, 0, x10, 0*FLEN/8, x16, x9, x17)
RVTEST_SIGBASE(x2,signature_x2_0)

inst_13:
// rs1==x12, rs2==x14, rs3==x29, rd==x3,fs1 == 0 and fe1 == 0x1c and fm1 == 0x2f0 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3b8 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x12; op2:x14; op3:x29; dest:x3; op1val:0x72f0; op2val:0x7bb8;
op3val:0x7bff; valaddr_reg:x10; val_offset:3*FLEN/8; rmval:dyn;
testreg:x13; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x3, x12, x14, x29, dyn, 0, 0, x10, 3*FLEN/8, x16, x2, x13)

inst_14:
// rs1==x15, rs2==x6, rs3==x7, rd==x4,fs1 == 0 and fe1 == 0x1e and fm1 == 0x102 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x0d0 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x15; op2:x6; op3:x7; dest:x4; op1val:0x7902; op2val:0x74d0;
op3val:0x7bff; valaddr_reg:x10; val_offset:6*FLEN/8; rmval:dyn;
testreg:x13; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x4, x15, x6, x7, dyn, 0, 0, x10, 6*FLEN/8, x16, x2, x13)

inst_15:
// rs1==x5, rs2==x31, rs3==x15, rd==x17,fs1 == 0 and fe1 == 0x1d and fm1 == 0x22b and fs2 == 0 and fe2 == 0x1d and fm2 == 0x19c and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x5; op2:x31; op3:x15; dest:x17; op1val:0x762b; op2val:0x759c;
op3val:0x7bff; valaddr_reg:x10; val_offset:9*FLEN/8; rmval:dyn;
testreg:x13; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x17, x5, x31, x15, dyn, 0, 0, x10, 9*FLEN/8, x16, x2, x13)

inst_16:
// rs1==x29, rs2==x12, rs3==x23, rd==x27,fs1 == 0 and fe1 == 0x1e and fm1 == 0x0ab and fs2 == 0 and fe2 == 0x1e and fm2 == 0x33a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x29; op2:x12; op3:x23; dest:x27; op1val:0x78ab; op2val:0x7b3a;
op3val:0x7bff; valaddr_reg:x10; val_offset:12*FLEN/8; rmval:dyn;
testreg:x13; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x27, x29, x12, x23, dyn, 0, 0, x10, 12*FLEN/8, x16, x2, x13)

inst_17:
// rs1==x20, rs2==x25, rs3==x0, rd==x22,fs1 == 0 and fe1 == 0x1e and fm1 == 0x36d and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2d9 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x20; op2:x25; op3:x0; dest:x22; op1val:0x7b6d; op2val:0x7ad9;
op3val:0x0; valaddr_reg:x10; val_offset:15*FLEN/8; rmval:dyn;
testreg:x13; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x22, x20, x25, x0, dyn, 0, 0, x10, 15*FLEN/8, x16, x2, x13)

inst_18:
// rs1==x17, rs2==x8, rs3==x22, rd==x0,fs1 == 0 and fe1 == 0x1e and fm1 == 0x15e and fs2 == 0 and fe2 == 0x1c and fm2 == 0x137 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x17; op2:x8; op3:x22; dest:x0; op1val:0x795e; op2val:0x7137;
op3val:0x7bff; valaddr_reg:x10; val_offset:18*FLEN/8; rmval:dyn;
testreg:x13; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x0, x17, x8, x22, dyn, 0, 0, x10, 18*FLEN/8, x16, x2, x13)

inst_19:
// rs1==x26, rs2==x1, rs3==x16, rd==x28,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3b6 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x33b and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x26; op2:x1; op3:x16; dest:x28; op1val:0x7bb6; op2val:0x7b3b;
op3val:0x7bff; valaddr_reg:x10; val_offset:21*FLEN/8; rmval:dyn;
testreg:x13; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x28, x26, x1, x16, dyn, 0, 0, x10, 21*FLEN/8, x16, x2, x13)

inst_20:
// rs1==x7, rs2==x0, rs3==x21, rd==x5,fs1 == 0 and fe1 == 0x1e and fm1 == 0x1b5 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x2c0 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x7; op2:x0; op3:x21; dest:x5; op1val:0x79b5; op2val:0x0;
op3val:0x7bff; valaddr_reg:x10; val_offset:24*FLEN/8; rmval:dyn;
testreg:x13; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x5, x7, x0, x21, dyn, 0, 0, x10, 24*FLEN/8, x16, x2, x13)

inst_21:
// rs1==x27, rs2==x9, rs3==x31, rd==x11,fs1 == 0 and fe1 == 0x1e and fm1 == 0x096 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x08e and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x27; op2:x9; op3:x31; dest:x11; op1val:0x7896; op2val:0x748e;
op3val:0x7bff; valaddr_reg:x10; val_offset:27*FLEN/8; rmval:dyn;
testreg:x13; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x11, x27, x9, x31, dyn, 0, 0, x10, 27*FLEN/8, x16, x2, x13)
RVTEST_VALBASEUPD(x6,test_dataset_2)

inst_22:
// rs1==x11, rs2==x29, rs3==x17, rd==x26,fs1 == 0 and fe1 == 0x1e and fm1 == 0x2d4 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ea and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x11; op2:x29; op3:x17; dest:x26; op1val:0x7ad4; op2val:0x7bea;
op3val:0x7bff; valaddr_reg:x6; val_offset:0*FLEN/8; rmval:dyn;
testreg:x13; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x26, x11, x29, x17, dyn, 0, 0, x6, 0*FLEN/8, x12, x2, x13)

inst_23:
// rs1==x9, rs2==x27, rs3==x24, rd==x25,fs1 == 0 and fe1 == 0x1e and fm1 == 0x266 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x290 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x9; op2:x27; op3:x24; dest:x25; op1val:0x7a66; op2val:0x7690;
op3val:0x7bff; valaddr_reg:x6; val_offset:3*FLEN/8; rmval:dyn;
testreg:x13; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x25, x9, x27, x24, dyn, 0, 0, x6, 3*FLEN/8, x12, x2, x13)

inst_24:
// rs1==x8, rs2==x10, rs3==x27, rd==x23,fs1 == 0 and fe1 == 0x1d and fm1 == 0x0b3 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x225 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x8; op2:x10; op3:x27; dest:x23; op1val:0x74b3; op2val:0x7a25;
op3val:0x7bff; valaddr_reg:x6; val_offset:6*FLEN/8; rmval:dyn;
testreg:x13; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x23, x8, x10, x27, dyn, 0, 0, x6, 6*FLEN/8, x12, x2, x13)

inst_25:
// rs1==x21, rs2==x30, rs3==x25, rd==x18,fs1 == 0 and fe1 == 0x1a and fm1 == 0x1a7 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x0e9 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x21; op2:x30; op3:x25; dest:x18; op1val:0x69a7; op2val:0x78e9;
op3val:0x7bff; valaddr_reg:x6; val_offset:9*FLEN/8; rmval:dyn;
testreg:x13; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x18, x21, x30, x25, dyn, 0, 0, x6, 9*FLEN/8, x12, x2, x13)
RVTEST_SIGBASE(x4,signature_x4_0)

inst_26:
// rs1==x28, rs2==x18, rs3==x6, rd==x9,fs1 == 0 and fe1 == 0x1e and fm1 == 0x1be and fs2 == 0 and fe2 == 0x1d and fm2 == 0x14a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x28; op2:x18; op3:x6; dest:x9; op1val:0x79be; op2val:0x754a;
op3val:0x7bff; valaddr_reg:x6; val_offset:12*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x9, x28, x18, x6, dyn, 0, 0, x6, 12*FLEN/8, x12, x4, x5)

inst_27:
// rs1==x3, rs2==x22, rs3==x2, rd==x1,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3d7 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x00a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x3; op2:x22; op3:x2; dest:x1; op1val:0x7bd7; op2val:0x780a;
op3val:0x7bff; valaddr_reg:x6; val_offset:15*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x1, x3, x22, x2, dyn, 0, 0, x6, 15*FLEN/8, x12, x4, x5)

inst_28:
// rs1==x22, rs2==x7, rs3==x8, rd==x10,fs1 == 0 and fe1 == 0x1d and fm1 == 0x0f3 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x0ec and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x22; op2:x7; op3:x8; dest:x10; op1val:0x74f3; op2val:0x6cec;
op3val:0x7bff; valaddr_reg:x6; val_offset:18*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x10, x22, x7, x8, dyn, 0, 0, x6, 18*FLEN/8, x12, x4, x5)

inst_29:
// rs1==x0, rs2==x28, rs3==x10, rd==x30,fs1 == 0 and fe1 == 0x1a and fm1 == 0x003 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x250 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x0; op2:x28; op3:x10; dest:x30; op1val:0x0; op2val:0x7250;
op3val:0x7bff; valaddr_reg:x6; val_offset:21*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x30, x0, x28, x10, dyn, 0, 0, x6, 21*FLEN/8, x12, x4, x5)

inst_30:
// rs1==x30, rs2==x17, rs3==x11, rd==x2,fs1 == 0 and fe1 == 0x1e and fm1 == 0x0e1 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x0fe and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x17; op3:x11; dest:x2; op1val:0x78e1; op2val:0x70fe;
op3val:0x7bff; valaddr_reg:x6; val_offset:24*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x2, x30, x17, x11, dyn, 0, 0, x6, 24*FLEN/8, x12, x4, x5)

inst_31:
// rs1==x31, rs2==x16, rs3==x18, rd==x21,fs1 == 0 and fe1 == 0x1e and fm1 == 0x2f0 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x104 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x31; op2:x16; op3:x18; dest:x21; op1val:0x7af0; op2val:0x7504;
op3val:0x7bff; valaddr_reg:x6; val_offset:27*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x21, x31, x16, x18, dyn, 0, 0, x6, 27*FLEN/8, x12, x4, x5)
RVTEST_VALBASEUPD(x1,test_dataset_3)

inst_32:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x32b and fs2 == 0 and fe2 == 0x1d and fm2 == 0x20a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b2b; op2val:0x760a;
op3val:0x7bff; valaddr_reg:x1; val_offset:0*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 0*FLEN/8, x2, x4, x5)

inst_33:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x028 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x126 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7828; op2val:0x7926;
op3val:0x7bff; valaddr_reg:x1; val_offset:3*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 3*FLEN/8, x2, x4, x5)

inst_34:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x078 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x0f5 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7878; op2val:0x78f5;
op3val:0x7bff; valaddr_reg:x1; val_offset:6*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 6*FLEN/8, x2, x4, x5)

inst_35:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x00d and fs2 == 0 and fe2 == 0x1d and fm2 == 0x2e5 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x780d; op2val:0x76e5;
op3val:0x7bff; valaddr_reg:x1; val_offset:9*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 9*FLEN/8, x2, x4, x5)

inst_36:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x399 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x0d0 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7399; op2val:0x74d0;
op3val:0x7bff; valaddr_reg:x1; val_offset:12*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 12*FLEN/8, x2, x4, x5)

inst_37:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x02a and fs2 == 0 and fe2 == 0x1e and fm2 == 0x062 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x782a; op2val:0x7862;
op3val:0x7bff; valaddr_reg:x1; val_offset:15*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 15*FLEN/8, x2, x4, x5)

inst_38:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2a3 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x0a3 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x76a3; op2val:0x78a3;
op3val:0x7bff; valaddr_reg:x1; val_offset:18*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 18*FLEN/8, x2, x4, x5)

inst_39:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0ec and fs2 == 0 and fe2 == 0x1e and fm2 == 0x10e and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x78ec; op2val:0x790e;
op3val:0x7bff; valaddr_reg:x1; val_offset:21*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 21*FLEN/8, x2, x4, x5)

inst_40:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x104 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x374 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7904; op2val:0x7774;
op3val:0x7bff; valaddr_reg:x1; val_offset:24*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 24*FLEN/8, x2, x4, x5)

inst_41:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1a3 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1a7 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x75a3; op2val:0x79a7;
op3val:0x7bff; valaddr_reg:x1; val_offset:27*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 27*FLEN/8, x2, x4, x5)

inst_42:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x1ad and fs2 == 0 and fe2 == 0x1a and fm2 == 0x3c0 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x65ad; op2val:0x6bc0;
op3val:0x7bff; valaddr_reg:x1; val_offset:30*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 30*FLEN/8, x2, x4, x5)

inst_43:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3b3 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x004 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7bb3; op2val:0x7404;
op3val:0x7bff; valaddr_reg:x1; val_offset:33*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 33*FLEN/8, x2, x4, x5)

inst_44:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0bd and fs2 == 0 and fe2 == 0x1d and fm2 == 0x11e and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x78bd; op2val:0x751e;
op3val:0x7bff; valaddr_reg:x1; val_offset:36*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 36*FLEN/8, x2, x4, x5)

inst_45:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x100 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x1e7 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7500; op2val:0x75e7;
op3val:0x7bff; valaddr_reg:x1; val_offset:39*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 39*FLEN/8, x2, x4, x5)

inst_46:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0cd and fs2 == 0 and fe2 == 0x1d and fm2 == 0x208 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x74cd; op2val:0x7608;
op3val:0x7bff; valaddr_reg:x1; val_offset:42*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 42*FLEN/8, x2, x4, x5)

inst_47:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x2e3 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x08d and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x66e3; op2val:0x788d;
op3val:0x7bff; valaddr_reg:x1; val_offset:45*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 45*FLEN/8, x2, x4, x5)

inst_48:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0f5 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x31e and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x74f5; op2val:0x731e;
op3val:0x7bff; valaddr_reg:x1; val_offset:48*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 48*FLEN/8, x2, x4, x5)

inst_49:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x3a2 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x1fe and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x73a2; op2val:0x71fe;
op3val:0x7bff; valaddr_reg:x1; val_offset:51*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 51*FLEN/8, x2, x4, x5)

inst_50:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x194 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x283 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7994; op2val:0x6e83;
op3val:0x7bff; valaddr_reg:x1; val_offset:54*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 54*FLEN/8, x2, x4, x5)

inst_51:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x156 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2aa and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7556; op2val:0x7aaa;
op3val:0x7bff; valaddr_reg:x1; val_offset:57*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 57*FLEN/8, x2, x4, x5)

inst_52:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2d7 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x16a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ad7; op2val:0x716a;
op3val:0x7bff; valaddr_reg:x1; val_offset:60*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 60*FLEN/8, x2, x4, x5)

inst_53:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x133 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x313 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7933; op2val:0x7b13;
op3val:0x7bff; valaddr_reg:x1; val_offset:63*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 63*FLEN/8, x2, x4, x5)

inst_54:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x332 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x3bc and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7332; op2val:0x6fbc;
op3val:0x7bff; valaddr_reg:x1; val_offset:66*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 66*FLEN/8, x2, x4, x5)

inst_55:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x21a and fs2 == 0 and fe2 == 0x1e and fm2 == 0x273 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x721a; op2val:0x7a73;
op3val:0x7bff; valaddr_reg:x1; val_offset:69*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 69*FLEN/8, x2, x4, x5)

inst_56:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x1df and fs2 == 0 and fe2 == 0x1d and fm2 == 0x074 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x71df; op2val:0x7474;
op3val:0x7bff; valaddr_reg:x1; val_offset:72*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 72*FLEN/8, x2, x4, x5)

inst_57:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x122 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x272 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7922; op2val:0x7a72;
op3val:0x7bff; valaddr_reg:x1; val_offset:75*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 75*FLEN/8, x2, x4, x5)

inst_58:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x025 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x0ab and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7025; op2val:0x74ab;
op3val:0x7bff; valaddr_reg:x1; val_offset:78*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 78*FLEN/8, x2, x4, x5)

inst_59:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x056 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x189 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7456; op2val:0x7589;
op3val:0x7bff; valaddr_reg:x1; val_offset:81*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 81*FLEN/8, x2, x4, x5)

inst_60:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2b6 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x28c and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x76b6; op2val:0x768c;
op3val:0x7bff; valaddr_reg:x1; val_offset:84*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 84*FLEN/8, x2, x4, x5)

inst_61:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x0fd and fs2 == 0 and fe2 == 0x17 and fm2 == 0x0c5 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x70fd; op2val:0x5cc5;
op3val:0x7bff; valaddr_reg:x1; val_offset:87*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 87*FLEN/8, x2, x4, x5)

inst_62:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x309 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3e4 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b09; op2val:0x7be4;
op3val:0x7bff; valaddr_reg:x1; val_offset:90*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 90*FLEN/8, x2, x4, x5)

inst_63:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x398 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x36a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b98; op2val:0x7b6a;
op3val:0x7bff; valaddr_reg:x1; val_offset:93*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 93*FLEN/8, x2, x4, x5)

inst_64:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1f6 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2b0 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x79f6; op2val:0x7ab0;
op3val:0x7bff; valaddr_reg:x1; val_offset:96*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 96*FLEN/8, x2, x4, x5)

inst_65:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x026 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x09f and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7826; op2val:0x749f;
op3val:0x7bff; valaddr_reg:x1; val_offset:99*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 99*FLEN/8, x2, x4, x5)

inst_66:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x346 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x05a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7346; op2val:0x6c5a;
op3val:0x7bff; valaddr_reg:x1; val_offset:102*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 102*FLEN/8, x2, x4, x5)

inst_67:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x097 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x27a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7497; op2val:0x7a7a;
op3val:0x7bff; valaddr_reg:x1; val_offset:105*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 105*FLEN/8, x2, x4, x5)

inst_68:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x339 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x18c and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b39; op2val:0x798c;
op3val:0x7bff; valaddr_reg:x1; val_offset:108*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 108*FLEN/8, x2, x4, x5)

inst_69:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x32b and fs2 == 0 and fe2 == 0x1e and fm2 == 0x331 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b2b; op2val:0x7b31;
op3val:0x7bff; valaddr_reg:x1; val_offset:111*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 111*FLEN/8, x2, x4, x5)

inst_70:
// fs1 == 0 and fe1 == 0x18 and fm1 == 0x2ba and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1f5 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x62ba; op2val:0x79f5;
op3val:0x7bff; valaddr_reg:x1; val_offset:114*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 114*FLEN/8, x2, x4, x5)

inst_71:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0cb and fs2 == 0 and fe2 == 0x1e and fm2 == 0x14c and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x74cb; op2val:0x794c;
op3val:0x7bff; valaddr_reg:x1; val_offset:117*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 117*FLEN/8, x2, x4, x5)

inst_72:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x29d and fs2 == 0 and fe2 == 0x1e and fm2 == 0x382 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x769d; op2val:0x7b82;
op3val:0x7bff; valaddr_reg:x1; val_offset:120*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 120*FLEN/8, x2, x4, x5)

inst_73:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x175 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x009 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7575; op2val:0x7409;
op3val:0x7bff; valaddr_reg:x1; val_offset:123*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 123*FLEN/8, x2, x4, x5)

inst_74:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3a1 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x241 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x77a1; op2val:0x7a41;
op3val:0x7bff; valaddr_reg:x1; val_offset:126*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 126*FLEN/8, x2, x4, x5)

inst_75:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x24f and fs2 == 0 and fe2 == 0x1e and fm2 == 0x046 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x724f; op2val:0x7846;
op3val:0x7bff; valaddr_reg:x1; val_offset:129*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 129*FLEN/8, x2, x4, x5)

inst_76:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x17a and fs2 == 0 and fe2 == 0x1e and fm2 == 0x254 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x717a; op2val:0x7a54;
op3val:0x7bff; valaddr_reg:x1; val_offset:132*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 132*FLEN/8, x2, x4, x5)

inst_77:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x271 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x295 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a71; op2val:0x7a95;
op3val:0x7bff; valaddr_reg:x1; val_offset:135*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 135*FLEN/8, x2, x4, x5)

inst_78:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x106 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2e5 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7906; op2val:0x7ae5;
op3val:0x7bff; valaddr_reg:x1; val_offset:138*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 138*FLEN/8, x2, x4, x5)

inst_79:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x057 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x04b and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7457; op2val:0x744b;
op3val:0x7bff; valaddr_reg:x1; val_offset:141*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 141*FLEN/8, x2, x4, x5)

inst_80:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2c3 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x390 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x76c3; op2val:0x7790;
op3val:0x7bff; valaddr_reg:x1; val_offset:144*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 144*FLEN/8, x2, x4, x5)

inst_81:
// fs1 == 0 and fe1 == 0x15 and fm1 == 0x367 and fs2 == 0 and fe2 == 0x1a and fm2 == 0x303 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5767; op2val:0x6b03;
op3val:0x7bff; valaddr_reg:x1; val_offset:147*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 147*FLEN/8, x2, x4, x5)

inst_82:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x3f8 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x060 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6ff8; op2val:0x6c60;
op3val:0x7bff; valaddr_reg:x1; val_offset:150*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 150*FLEN/8, x2, x4, x5)

inst_83:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2d5 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x182 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ad5; op2val:0x6d82;
op3val:0x7bff; valaddr_reg:x1; val_offset:153*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 153*FLEN/8, x2, x4, x5)

inst_84:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x10d and fs2 == 0 and fe2 == 0x1d and fm2 == 0x107 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x750d; op2val:0x7507;
op3val:0x7bff; valaddr_reg:x1; val_offset:156*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 156*FLEN/8, x2, x4, x5)

inst_85:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x12c and fs2 == 0 and fe2 == 0x1e and fm2 == 0x0b0 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x792c; op2val:0x78b0;
op3val:0x7bff; valaddr_reg:x1; val_offset:159*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 159*FLEN/8, x2, x4, x5)

inst_86:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x21c and fs2 == 0 and fe2 == 0x1d and fm2 == 0x142 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x721c; op2val:0x7542;
op3val:0x7bff; valaddr_reg:x1; val_offset:162*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 162*FLEN/8, x2, x4, x5)

inst_87:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x071 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1b9 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7871; op2val:0x79b9;
op3val:0x7bff; valaddr_reg:x1; val_offset:165*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 165*FLEN/8, x2, x4, x5)

inst_88:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x11c and fs2 == 0 and fe2 == 0x1c and fm2 == 0x1b6 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6d1c; op2val:0x71b6;
op3val:0x7bff; valaddr_reg:x1; val_offset:168*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 168*FLEN/8, x2, x4, x5)

inst_89:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0d5 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x242 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x78d5; op2val:0x7a42;
op3val:0x7bff; valaddr_reg:x1; val_offset:171*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 171*FLEN/8, x2, x4, x5)

inst_90:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x267 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x0fb and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a67; op2val:0x78fb;
op3val:0x7bff; valaddr_reg:x1; val_offset:174*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 174*FLEN/8, x2, x4, x5)

inst_91:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1f4 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x3ef and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x75f4; op2val:0x77ef;
op3val:0x7bff; valaddr_reg:x1; val_offset:177*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 177*FLEN/8, x2, x4, x5)

inst_92:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2b9 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x18c and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x76b9; op2val:0x798c;
op3val:0x7bff; valaddr_reg:x1; val_offset:180*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 180*FLEN/8, x2, x4, x5)

inst_93:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x3d6 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x048 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x73d6; op2val:0x7848;
op3val:0x7bff; valaddr_reg:x1; val_offset:183*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 183*FLEN/8, x2, x4, x5)

inst_94:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x094 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x2cb and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6c94; op2val:0x76cb;
op3val:0x7bff; valaddr_reg:x1; val_offset:186*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 186*FLEN/8, x2, x4, x5)

inst_95:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x308 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x37c and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b08; op2val:0x7b7c;
op3val:0x7bff; valaddr_reg:x1; val_offset:189*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 189*FLEN/8, x2, x4, x5)

inst_96:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x32d and fs2 == 0 and fe2 == 0x1e and fm2 == 0x253 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b2d; op2val:0x7a53;
op3val:0x7bff; valaddr_reg:x1; val_offset:192*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 192*FLEN/8, x2, x4, x5)

inst_97:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x36c and fs2 == 0 and fe2 == 0x1b and fm2 == 0x3e0 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x776c; op2val:0x6fe0;
op3val:0x7bff; valaddr_reg:x1; val_offset:195*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 195*FLEN/8, x2, x4, x5)

inst_98:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x14b and fs2 == 0 and fe2 == 0x1e and fm2 == 0x318 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x794b; op2val:0x7b18;
op3val:0x7bff; valaddr_reg:x1; val_offset:198*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 198*FLEN/8, x2, x4, x5)

inst_99:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x156 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1dd and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7956; op2val:0x79dd;
op3val:0x7bff; valaddr_reg:x1; val_offset:201*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 201*FLEN/8, x2, x4, x5)

inst_100:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x298 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x0b3 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6e98; op2val:0x78b3;
op3val:0x7bff; valaddr_reg:x1; val_offset:204*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 204*FLEN/8, x2, x4, x5)

inst_101:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x097 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x231 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7097; op2val:0x7a31;
op3val:0x7bff; valaddr_reg:x1; val_offset:207*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 207*FLEN/8, x2, x4, x5)

inst_102:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x1df and fs2 == 0 and fe2 == 0x1b and fm2 == 0x25a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6ddf; op2val:0x6e5a;
op3val:0x7bff; valaddr_reg:x1; val_offset:210*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 210*FLEN/8, x2, x4, x5)

inst_103:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x1ba and fs2 == 0 and fe2 == 0x19 and fm2 == 0x202 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x71ba; op2val:0x6602;
op3val:0x7bff; valaddr_reg:x1; val_offset:213*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 213*FLEN/8, x2, x4, x5)

inst_104:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x3c2 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2bf and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6fc2; op2val:0x7abf;
op3val:0x7bff; valaddr_reg:x1; val_offset:216*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 216*FLEN/8, x2, x4, x5)

inst_105:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2af and fs2 == 0 and fe2 == 0x1e and fm2 == 0x39d and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7aaf; op2val:0x7b9d;
op3val:0x7bff; valaddr_reg:x1; val_offset:219*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 219*FLEN/8, x2, x4, x5)

inst_106:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x263 and fs2 == 0 and fe2 == 0x1a and fm2 == 0x0a3 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a63; op2val:0x68a3;
op3val:0x7bff; valaddr_reg:x1; val_offset:222*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 222*FLEN/8, x2, x4, x5)

inst_107:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x016 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1b7 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7816; op2val:0x79b7;
op3val:0x7bff; valaddr_reg:x1; val_offset:225*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 225*FLEN/8, x2, x4, x5)

inst_108:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1fd and fs2 == 0 and fe2 == 0x1e and fm2 == 0x379 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x79fd; op2val:0x7b79;
op3val:0x7bff; valaddr_reg:x1; val_offset:228*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 228*FLEN/8, x2, x4, x5)

inst_109:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x12f and fs2 == 0 and fe2 == 0x1e and fm2 == 0x082 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x752f; op2val:0x7882;
op3val:0x7bff; valaddr_reg:x1; val_offset:231*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 231*FLEN/8, x2, x4, x5)

inst_110:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x3be and fs2 == 0 and fe2 == 0x1c and fm2 == 0x1bf and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x73be; op2val:0x71bf;
op3val:0x7bff; valaddr_reg:x1; val_offset:234*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 234*FLEN/8, x2, x4, x5)

inst_111:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0ec and fs2 == 0 and fe2 == 0x1e and fm2 == 0x206 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x78ec; op2val:0x7a06;
op3val:0x7bff; valaddr_reg:x1; val_offset:237*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 237*FLEN/8, x2, x4, x5)

inst_112:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1e0 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x257 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x75e0; op2val:0x7657;
op3val:0x7bff; valaddr_reg:x1; val_offset:240*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 240*FLEN/8, x2, x4, x5)

inst_113:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2b0 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x153 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x76b0; op2val:0x6d53;
op3val:0x7bff; valaddr_reg:x1; val_offset:243*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 243*FLEN/8, x2, x4, x5)

inst_114:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3c7 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x29a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7bc7; op2val:0x769a;
op3val:0x7bff; valaddr_reg:x1; val_offset:246*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 246*FLEN/8, x2, x4, x5)

inst_115:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x123 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x186 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7123; op2val:0x7986;
op3val:0x7bff; valaddr_reg:x1; val_offset:249*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 249*FLEN/8, x2, x4, x5)

inst_116:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x163 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x022 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7963; op2val:0x7822;
op3val:0x7bff; valaddr_reg:x1; val_offset:252*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 252*FLEN/8, x2, x4, x5)

inst_117:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x124 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x32c and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7924; op2val:0x7b2c;
op3val:0x7bff; valaddr_reg:x1; val_offset:255*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 255*FLEN/8, x2, x4, x5)

inst_118:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x221 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1fb and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6e21; op2val:0x79fb;
op3val:0x7bff; valaddr_reg:x1; val_offset:258*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 258*FLEN/8, x2, x4, x5)

inst_119:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x022 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x315 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7822; op2val:0x7715;
op3val:0x7bff; valaddr_reg:x1; val_offset:261*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 261*FLEN/8, x2, x4, x5)

inst_120:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x1f3 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x046 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x71f3; op2val:0x7446;
op3val:0x7bff; valaddr_reg:x1; val_offset:264*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 264*FLEN/8, x2, x4, x5)

inst_121:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0ae and fs2 == 0 and fe2 == 0x1d and fm2 == 0x108 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x78ae; op2val:0x7508;
op3val:0x7bff; valaddr_reg:x1; val_offset:267*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 267*FLEN/8, x2, x4, x5)

inst_122:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x186 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x39f and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7986; op2val:0x7b9f;
op3val:0x7bff; valaddr_reg:x1; val_offset:270*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 270*FLEN/8, x2, x4, x5)

inst_123:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1a3 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x29b and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x79a3; op2val:0x769b;
op3val:0x7bff; valaddr_reg:x1; val_offset:273*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 273*FLEN/8, x2, x4, x5)

inst_124:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0ac and fs2 == 0 and fe2 == 0x1d and fm2 == 0x045 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x78ac; op2val:0x7445;
op3val:0x7bff; valaddr_reg:x1; val_offset:276*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 276*FLEN/8, x2, x4, x5)

inst_125:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x1ea and fs2 == 0 and fe2 == 0x1d and fm2 == 0x3ab and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x65ea; op2val:0x77ab;
op3val:0x7bff; valaddr_reg:x1; val_offset:279*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 279*FLEN/8, x2, x4, x5)

inst_126:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x182 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x1c3 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7182; op2val:0x75c3;
op3val:0x7bff; valaddr_reg:x1; val_offset:282*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 282*FLEN/8, x2, x4, x5)

inst_127:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x230 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x097 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a30; op2val:0x7097;
op3val:0x7bff; valaddr_reg:x1; val_offset:285*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 285*FLEN/8, x2, x4, x5)

inst_128:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3ab and fs2 == 0 and fe2 == 0x1e and fm2 == 0x0ca and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x77ab; op2val:0x78ca;
op3val:0x7bff; valaddr_reg:x1; val_offset:288*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 288*FLEN/8, x2, x4, x5)

inst_129:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2ac and fs2 == 0 and fe2 == 0x1e and fm2 == 0x291 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7aac; op2val:0x7a91;
op3val:0x7bff; valaddr_reg:x1; val_offset:291*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 291*FLEN/8, x2, x4, x5)

inst_130:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3b2 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1c3 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x77b2; op2val:0x79c3;
op3val:0x7bff; valaddr_reg:x1; val_offset:294*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 294*FLEN/8, x2, x4, x5)

inst_131:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x266 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1dd and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7666; op2val:0x79dd;
op3val:0x7bff; valaddr_reg:x1; val_offset:297*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 297*FLEN/8, x2, x4, x5)

inst_132:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x379 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x357 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7779; op2val:0x7357;
op3val:0x7bff; valaddr_reg:x1; val_offset:300*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 300*FLEN/8, x2, x4, x5)

inst_133:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1bd and fs2 == 0 and fe2 == 0x1e and fm2 == 0x166 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x79bd; op2val:0x7966;
op3val:0x7bff; valaddr_reg:x1; val_offset:303*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 303*FLEN/8, x2, x4, x5)

inst_134:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2d3 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x3be and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ad3; op2val:0x73be;
op3val:0x7bff; valaddr_reg:x1; val_offset:306*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 306*FLEN/8, x2, x4, x5)

inst_135:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x022 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x1fc and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7422; op2val:0x71fc;
op3val:0x7bff; valaddr_reg:x1; val_offset:309*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 309*FLEN/8, x2, x4, x5)

inst_136:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2dd and fs2 == 0 and fe2 == 0x1e and fm2 == 0x331 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7add; op2val:0x7b31;
op3val:0x7bff; valaddr_reg:x1; val_offset:312*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 312*FLEN/8, x2, x4, x5)

inst_137:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2ea and fs2 == 0 and fe2 == 0x1d and fm2 == 0x103 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7aea; op2val:0x7503;
op3val:0x7bff; valaddr_reg:x1; val_offset:315*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 315*FLEN/8, x2, x4, x5)

inst_138:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1d4 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x17f and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x79d4; op2val:0x6d7f;
op3val:0x7bff; valaddr_reg:x1; val_offset:318*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 318*FLEN/8, x2, x4, x5)

inst_139:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2ab and fs2 == 0 and fe2 == 0x1d and fm2 == 0x0aa and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7aab; op2val:0x74aa;
op3val:0x7bff; valaddr_reg:x1; val_offset:321*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 321*FLEN/8, x2, x4, x5)

inst_140:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0a3 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x166 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x78a3; op2val:0x7966;
op3val:0x7bff; valaddr_reg:x1; val_offset:324*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 324*FLEN/8, x2, x4, x5)

inst_141:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x15a and fs2 == 0 and fe2 == 0x1d and fm2 == 0x2f9 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x755a; op2val:0x76f9;
op3val:0x7bff; valaddr_reg:x1; val_offset:327*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 327*FLEN/8, x2, x4, x5)

inst_142:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x2b8 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x0ad and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x72b8; op2val:0x78ad;
op3val:0x7bff; valaddr_reg:x1; val_offset:330*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 330*FLEN/8, x2, x4, x5)

inst_143:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x240 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x05a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7640; op2val:0x785a;
op3val:0x7bff; valaddr_reg:x1; val_offset:333*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 333*FLEN/8, x2, x4, x5)

inst_144:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x064 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x152 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7464; op2val:0x7952;
op3val:0x7bff; valaddr_reg:x1; val_offset:336*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 336*FLEN/8, x2, x4, x5)

inst_145:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x318 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x344 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b18; op2val:0x7b44;
op3val:0x7bff; valaddr_reg:x1; val_offset:339*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 339*FLEN/8, x2, x4, x5)

inst_146:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x386 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x1fc and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b86; op2val:0x75fc;
op3val:0x7bff; valaddr_reg:x1; val_offset:342*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 342*FLEN/8, x2, x4, x5)

inst_147:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x20e and fs2 == 0 and fe2 == 0x1d and fm2 == 0x0b9 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a0e; op2val:0x74b9;
op3val:0x7bff; valaddr_reg:x1; val_offset:345*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 345*FLEN/8, x2, x4, x5)

inst_148:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x13a and fs2 == 0 and fe2 == 0x1e and fm2 == 0x271 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x793a; op2val:0x7a71;
op3val:0x7bff; valaddr_reg:x1; val_offset:348*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 348*FLEN/8, x2, x4, x5)

inst_149:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x207 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3af and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a07; op2val:0x7baf;
op3val:0x7bff; valaddr_reg:x1; val_offset:351*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 351*FLEN/8, x2, x4, x5)

inst_150:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x049 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x33f and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7849; op2val:0x6f3f;
op3val:0x7bff; valaddr_reg:x1; val_offset:354*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 354*FLEN/8, x2, x4, x5)

inst_151:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1a1 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1bd and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x75a1; op2val:0x79bd;
op3val:0x7bff; valaddr_reg:x1; val_offset:357*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 357*FLEN/8, x2, x4, x5)

inst_152:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x087 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x1d2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7887; op2val:0x71d2;
op3val:0x7bff; valaddr_reg:x1; val_offset:360*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 360*FLEN/8, x2, x4, x5)

inst_153:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x10b and fs2 == 0 and fe2 == 0x1c and fm2 == 0x1ba and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x790b; op2val:0x71ba;
op3val:0x7bff; valaddr_reg:x1; val_offset:363*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 363*FLEN/8, x2, x4, x5)
RVTEST_SIGBASE(x4,signature_x4_1)

inst_154:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x13d and fs2 == 0 and fe2 == 0x1b and fm2 == 0x3e0 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x793d; op2val:0x6fe0;
op3val:0x7bff; valaddr_reg:x1; val_offset:366*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 366*FLEN/8, x2, x4, x5)

inst_155:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x085 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x14d and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7085; op2val:0x754d;
op3val:0x7bff; valaddr_reg:x1; val_offset:369*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 369*FLEN/8, x2, x4, x5)

inst_156:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0c6 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x06f and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x78c6; op2val:0x786f;
op3val:0x7bff; valaddr_reg:x1; val_offset:372*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 372*FLEN/8, x2, x4, x5)

inst_157:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x351 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x0ff and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7751; op2val:0x74ff;
op3val:0x7bff; valaddr_reg:x1; val_offset:375*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 375*FLEN/8, x2, x4, x5)

inst_158:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x063 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1b9 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6c63; op2val:0x79b9;
op3val:0x7bff; valaddr_reg:x1; val_offset:378*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 378*FLEN/8, x2, x4, x5)

inst_159:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x057 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1ea and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7857; op2val:0x79ea;
op3val:0x7bff; valaddr_reg:x1; val_offset:381*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 381*FLEN/8, x2, x4, x5)

inst_160:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x040 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x221 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7440; op2val:0x7621;
op3val:0x7bff; valaddr_reg:x1; val_offset:384*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 384*FLEN/8, x2, x4, x5)

inst_161:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x163 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x009 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6963; op2val:0x7809;
op3val:0x7bff; valaddr_reg:x1; val_offset:387*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 387*FLEN/8, x2, x4, x5)

inst_162:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x225 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x1a9 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a25; op2val:0x75a9;
op3val:0x7bff; valaddr_reg:x1; val_offset:390*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 390*FLEN/8, x2, x4, x5)

inst_163:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x273 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x054 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7673; op2val:0x7854;
op3val:0x7bff; valaddr_reg:x1; val_offset:393*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 393*FLEN/8, x2, x4, x5)

inst_164:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1a4 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2c5 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x75a4; op2val:0x7ac5;
op3val:0x7bff; valaddr_reg:x1; val_offset:396*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 396*FLEN/8, x2, x4, x5)

inst_165:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x053 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x25f and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7453; op2val:0x6e5f;
op3val:0x7bff; valaddr_reg:x1; val_offset:399*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 399*FLEN/8, x2, x4, x5)

inst_166:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x23a and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1d0 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a3a; op2val:0x79d0;
op3val:0x7bff; valaddr_reg:x1; val_offset:402*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 402*FLEN/8, x2, x4, x5)

inst_167:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x20c and fs2 == 0 and fe2 == 0x1d and fm2 == 0x2a9 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x720c; op2val:0x76a9;
op3val:0x7bff; valaddr_reg:x1; val_offset:405*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 405*FLEN/8, x2, x4, x5)

inst_168:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x285 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1fc and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a85; op2val:0x79fc;
op3val:0x7bff; valaddr_reg:x1; val_offset:408*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 408*FLEN/8, x2, x4, x5)

inst_169:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x0af and fs2 == 0 and fe2 == 0x1d and fm2 == 0x25f and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x70af; op2val:0x765f;
op3val:0x7bff; valaddr_reg:x1; val_offset:411*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 411*FLEN/8, x2, x4, x5)

inst_170:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x037 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x08b and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7837; op2val:0x788b;
op3val:0x7bff; valaddr_reg:x1; val_offset:414*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 414*FLEN/8, x2, x4, x5)

inst_171:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x240 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7400; op2val:0x7a40;
op3val:0x7bff; valaddr_reg:x1; val_offset:417*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 417*FLEN/8, x2, x4, x5)

inst_172:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x26c and fs2 == 0 and fe2 == 0x1e and fm2 == 0x320 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a6c; op2val:0x7b20;
op3val:0x7bff; valaddr_reg:x1; val_offset:420*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 420*FLEN/8, x2, x4, x5)

inst_173:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x220 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x06b and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7620; op2val:0x786b;
op3val:0x7bff; valaddr_reg:x1; val_offset:423*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 423*FLEN/8, x2, x4, x5)

inst_174:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x111 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3cf and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7911; op2val:0x7bcf;
op3val:0x7bff; valaddr_reg:x1; val_offset:426*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 426*FLEN/8, x2, x4, x5)

inst_175:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0c9 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2e0 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x74c9; op2val:0x7ae0;
op3val:0x7bff; valaddr_reg:x1; val_offset:429*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 429*FLEN/8, x2, x4, x5)

inst_176:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0ce and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1cf and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x78ce; op2val:0x79cf;
op3val:0x7bff; valaddr_reg:x1; val_offset:432*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 432*FLEN/8, x2, x4, x5)

inst_177:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x229 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x14a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a29; op2val:0x794a;
op3val:0x7bff; valaddr_reg:x1; val_offset:435*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 435*FLEN/8, x2, x4, x5)

inst_178:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x02f and fs2 == 0 and fe2 == 0x1d and fm2 == 0x35d and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x782f; op2val:0x775d;
op3val:0x7bff; valaddr_reg:x1; val_offset:438*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 438*FLEN/8, x2, x4, x5)

inst_179:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x03b and fs2 == 0 and fe2 == 0x1a and fm2 == 0x0bd and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x783b; op2val:0x68bd;
op3val:0x7bff; valaddr_reg:x1; val_offset:441*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 441*FLEN/8, x2, x4, x5)

inst_180:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x12a and fs2 == 0 and fe2 == 0x1d and fm2 == 0x31a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x792a; op2val:0x771a;
op3val:0x7bff; valaddr_reg:x1; val_offset:444*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 444*FLEN/8, x2, x4, x5)

inst_181:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ab and fs2 == 0 and fe2 == 0x1e and fm2 == 0x322 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7bab; op2val:0x7b22;
op3val:0x7bff; valaddr_reg:x1; val_offset:447*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 447*FLEN/8, x2, x4, x5)

inst_182:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x255 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x0fb and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a55; op2val:0x78fb;
op3val:0x7bff; valaddr_reg:x1; val_offset:450*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 450*FLEN/8, x2, x4, x5)

inst_183:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1c1 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x377 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x75c1; op2val:0x7377;
op3val:0x7bff; valaddr_reg:x1; val_offset:453*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 453*FLEN/8, x2, x4, x5)

inst_184:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x04f and fs2 == 0 and fe2 == 0x1e and fm2 == 0x36f and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x784f; op2val:0x7b6f;
op3val:0x7bff; valaddr_reg:x1; val_offset:456*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 456*FLEN/8, x2, x4, x5)

inst_185:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2f5 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x18d and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7af5; op2val:0x798d;
op3val:0x7bff; valaddr_reg:x1; val_offset:459*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 459*FLEN/8, x2, x4, x5)

inst_186:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2dc and fs2 == 0 and fe2 == 0x1e and fm2 == 0x0ce and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7adc; op2val:0x78ce;
op3val:0x7bff; valaddr_reg:x1; val_offset:462*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 462*FLEN/8, x2, x4, x5)

inst_187:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1b9 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1ea and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x79b9; op2val:0x79ea;
op3val:0x7bff; valaddr_reg:x1; val_offset:465*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 465*FLEN/8, x2, x4, x5)

inst_188:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x273 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x373 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a73; op2val:0x7b73;
op3val:0x7bff; valaddr_reg:x1; val_offset:468*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 468*FLEN/8, x2, x4, x5)

inst_189:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2fd and fs2 == 0 and fe2 == 0x1e and fm2 == 0x20d and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x76fd; op2val:0x7a0d;
op3val:0x7bff; valaddr_reg:x1; val_offset:471*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 471*FLEN/8, x2, x4, x5)

inst_190:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x2fa and fs2 == 0 and fe2 == 0x1a and fm2 == 0x176 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6efa; op2val:0x6976;
op3val:0x7bff; valaddr_reg:x1; val_offset:474*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 474*FLEN/8, x2, x4, x5)

inst_191:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x268 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x124 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7268; op2val:0x7124;
op3val:0x7bff; valaddr_reg:x1; val_offset:477*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 477*FLEN/8, x2, x4, x5)

inst_192:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x197 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x04c and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7997; op2val:0x784c;
op3val:0x7bff; valaddr_reg:x1; val_offset:480*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 480*FLEN/8, x2, x4, x5)

inst_193:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x130 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x0df and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7930; op2val:0x74df;
op3val:0x7bff; valaddr_reg:x1; val_offset:483*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 483*FLEN/8, x2, x4, x5)

inst_194:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x20d and fs2 == 0 and fe2 == 0x1d and fm2 == 0x26b and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a0d; op2val:0x766b;
op3val:0x7bff; valaddr_reg:x1; val_offset:486*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 486*FLEN/8, x2, x4, x5)

inst_195:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x331 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1c1 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b31; op2val:0x79c1;
op3val:0x7bff; valaddr_reg:x1; val_offset:489*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 489*FLEN/8, x2, x4, x5)

inst_196:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1ee and fs2 == 0 and fe2 == 0x1e and fm2 == 0x03b and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x75ee; op2val:0x783b;
op3val:0x7bff; valaddr_reg:x1; val_offset:492*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 492*FLEN/8, x2, x4, x5)

inst_197:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x328 and fs2 == 0 and fe2 == 0x16 and fm2 == 0x187 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7328; op2val:0x5987;
op3val:0x7bff; valaddr_reg:x1; val_offset:495*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 495*FLEN/8, x2, x4, x5)

inst_198:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x243 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x096 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a43; op2val:0x7096;
op3val:0x7bff; valaddr_reg:x1; val_offset:498*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 498*FLEN/8, x2, x4, x5)

inst_199:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x23f and fs2 == 0 and fe2 == 0x1c and fm2 == 0x2b1 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x723f; op2val:0x72b1;
op3val:0x7bff; valaddr_reg:x1; val_offset:501*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 501*FLEN/8, x2, x4, x5)

inst_200:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x39c and fs2 == 0 and fe2 == 0x1e and fm2 == 0x05a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x739c; op2val:0x785a;
op3val:0x7bff; valaddr_reg:x1; val_offset:504*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 504*FLEN/8, x2, x4, x5)

inst_201:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x37e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3f6 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x737e; op2val:0x7bf6;
op3val:0x7bff; valaddr_reg:x1; val_offset:507*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 507*FLEN/8, x2, x4, x5)

inst_202:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2b0 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x39e and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab0; op2val:0x779e;
op3val:0x7bff; valaddr_reg:x1; val_offset:510*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 510*FLEN/8, x2, x4, x5)

inst_203:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x02e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1ed and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x782e; op2val:0x79ed;
op3val:0x7bff; valaddr_reg:x1; val_offset:513*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 513*FLEN/8, x2, x4, x5)

inst_204:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x018 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x210 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6c18; op2val:0x7a10;
op3val:0x7bff; valaddr_reg:x1; val_offset:516*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 516*FLEN/8, x2, x4, x5)

inst_205:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0d1 and fs2 == 0 and fe2 == 0x19 and fm2 == 0x3ef and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x74d1; op2val:0x67ef;
op3val:0x7bff; valaddr_reg:x1; val_offset:519*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 519*FLEN/8, x2, x4, x5)

inst_206:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x38f and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1bf and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x778f; op2val:0x79bf;
op3val:0x7bff; valaddr_reg:x1; val_offset:522*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 522*FLEN/8, x2, x4, x5)

inst_207:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x267 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x31c and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a67; op2val:0x771c;
op3val:0x7bff; valaddr_reg:x1; val_offset:525*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 525*FLEN/8, x2, x4, x5)

inst_208:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x36d and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2d9 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b6d; op2val:0x7ad9;
op3val:0x7bff; valaddr_reg:x1; val_offset:528*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 528*FLEN/8, x2, x4, x5)

inst_209:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x15e and fs2 == 0 and fe2 == 0x1c and fm2 == 0x137 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x795e; op2val:0x7137;
op3val:0x7bff; valaddr_reg:x1; val_offset:531*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 531*FLEN/8, x2, x4, x5)

inst_210:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1b5 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x2c0 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x79b5; op2val:0x72c0;
op3val:0x7bff; valaddr_reg:x1; val_offset:534*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 534*FLEN/8, x2, x4, x5)

inst_211:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x003 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x250 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6803; op2val:0x7250;
op3val:0x7bff; valaddr_reg:x1; val_offset:537*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x1, 537*FLEN/8, x2, x4, x5)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(29596,32,FLEN)
NAN_BOXED(29596,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(30932,32,FLEN)
NAN_BOXED(30976,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(25277,32,FLEN)
NAN_BOXED(31410,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(29566,32,FLEN)
NAN_BOXED(31734,32,FLEN)
NAN_BOXED(29566,32,FLEN)
NAN_BOXED(31408,32,FLEN)
NAN_BOXED(31408,32,FLEN)
NAN_BOXED(31408,32,FLEN)
NAN_BOXED(28881,32,FLEN)
NAN_BOXED(30995,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(30766,32,FLEN)
NAN_BOXED(31213,32,FLEN)
NAN_BOXED(31213,32,FLEN)
NAN_BOXED(27672,32,FLEN)
NAN_BOXED(31248,32,FLEN)
NAN_BOXED(27672,32,FLEN)
NAN_BOXED(29905,32,FLEN)
NAN_BOXED(29905,32,FLEN)
NAN_BOXED(29905,32,FLEN)
NAN_BOXED(30607,32,FLEN)
NAN_BOXED(30607,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(31157,32,FLEN)
NAN_BOXED(31581,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(31335,32,FLEN)
NAN_BOXED(30492,32,FLEN)
NAN_BOXED(30492,32,FLEN)
test_dataset_1:
NAN_BOXED(31495,32,FLEN)
NAN_BOXED(28219,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(29424,32,FLEN)
NAN_BOXED(31672,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(30978,32,FLEN)
NAN_BOXED(29904,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(30251,32,FLEN)
NAN_BOXED(30108,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(30891,32,FLEN)
NAN_BOXED(31546,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(31597,32,FLEN)
NAN_BOXED(31449,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(31070,32,FLEN)
NAN_BOXED(28983,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(31670,32,FLEN)
NAN_BOXED(31547,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(31157,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(30870,32,FLEN)
NAN_BOXED(29838,32,FLEN)
NAN_BOXED(31743,32,FLEN)
test_dataset_2:
NAN_BOXED(31444,32,FLEN)
NAN_BOXED(31722,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(31334,32,FLEN)
NAN_BOXED(30352,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(29875,32,FLEN)
NAN_BOXED(31269,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(27047,32,FLEN)
NAN_BOXED(30953,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(31166,32,FLEN)
NAN_BOXED(30026,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(31703,32,FLEN)
NAN_BOXED(30730,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(29939,32,FLEN)
NAN_BOXED(27884,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(29264,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(30945,32,FLEN)
NAN_BOXED(28926,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(31472,32,FLEN)
NAN_BOXED(29956,32,FLEN)
NAN_BOXED(31743,32,FLEN)
test_dataset_3:
NAN_BOXED(31531,16,FLEN)
NAN_BOXED(30218,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30760,16,FLEN)
NAN_BOXED(31014,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30840,16,FLEN)
NAN_BOXED(30965,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30733,16,FLEN)
NAN_BOXED(30437,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29593,16,FLEN)
NAN_BOXED(29904,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30762,16,FLEN)
NAN_BOXED(30818,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30371,16,FLEN)
NAN_BOXED(30883,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30956,16,FLEN)
NAN_BOXED(30990,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30980,16,FLEN)
NAN_BOXED(30580,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30115,16,FLEN)
NAN_BOXED(31143,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(26029,16,FLEN)
NAN_BOXED(27584,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31667,16,FLEN)
NAN_BOXED(29700,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30909,16,FLEN)
NAN_BOXED(29982,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29952,16,FLEN)
NAN_BOXED(30183,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29901,16,FLEN)
NAN_BOXED(30216,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(26339,16,FLEN)
NAN_BOXED(30861,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29941,16,FLEN)
NAN_BOXED(29470,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29602,16,FLEN)
NAN_BOXED(29182,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31124,16,FLEN)
NAN_BOXED(28291,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30038,16,FLEN)
NAN_BOXED(31402,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31447,16,FLEN)
NAN_BOXED(29034,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31027,16,FLEN)
NAN_BOXED(31507,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29490,16,FLEN)
NAN_BOXED(28604,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29210,16,FLEN)
NAN_BOXED(31347,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29151,16,FLEN)
NAN_BOXED(29812,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31010,16,FLEN)
NAN_BOXED(31346,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(28709,16,FLEN)
NAN_BOXED(29867,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29782,16,FLEN)
NAN_BOXED(30089,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30390,16,FLEN)
NAN_BOXED(30348,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(28925,16,FLEN)
NAN_BOXED(23749,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31497,16,FLEN)
NAN_BOXED(31716,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31640,16,FLEN)
NAN_BOXED(31594,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31222,16,FLEN)
NAN_BOXED(31408,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30758,16,FLEN)
NAN_BOXED(29855,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29510,16,FLEN)
NAN_BOXED(27738,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29847,16,FLEN)
NAN_BOXED(31354,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31545,16,FLEN)
NAN_BOXED(31116,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31531,16,FLEN)
NAN_BOXED(31537,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(25274,16,FLEN)
NAN_BOXED(31221,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29899,16,FLEN)
NAN_BOXED(31052,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30365,16,FLEN)
NAN_BOXED(31618,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30069,16,FLEN)
NAN_BOXED(29705,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30625,16,FLEN)
NAN_BOXED(31297,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29263,16,FLEN)
NAN_BOXED(30790,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29050,16,FLEN)
NAN_BOXED(31316,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31345,16,FLEN)
NAN_BOXED(31381,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30982,16,FLEN)
NAN_BOXED(31461,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29783,16,FLEN)
NAN_BOXED(29771,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30403,16,FLEN)
NAN_BOXED(30608,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(22375,16,FLEN)
NAN_BOXED(27395,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(28664,16,FLEN)
NAN_BOXED(27744,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31445,16,FLEN)
NAN_BOXED(28034,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29965,16,FLEN)
NAN_BOXED(29959,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31020,16,FLEN)
NAN_BOXED(30896,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29212,16,FLEN)
NAN_BOXED(30018,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30833,16,FLEN)
NAN_BOXED(31161,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(27932,16,FLEN)
NAN_BOXED(29110,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30933,16,FLEN)
NAN_BOXED(31298,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31335,16,FLEN)
NAN_BOXED(30971,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30196,16,FLEN)
NAN_BOXED(30703,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30393,16,FLEN)
NAN_BOXED(31116,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29654,16,FLEN)
NAN_BOXED(30792,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(27796,16,FLEN)
NAN_BOXED(30411,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31496,16,FLEN)
NAN_BOXED(31612,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31533,16,FLEN)
NAN_BOXED(31315,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30572,16,FLEN)
NAN_BOXED(28640,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31051,16,FLEN)
NAN_BOXED(31512,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31062,16,FLEN)
NAN_BOXED(31197,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(28312,16,FLEN)
NAN_BOXED(30899,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(28823,16,FLEN)
NAN_BOXED(31281,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(28127,16,FLEN)
NAN_BOXED(28250,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29114,16,FLEN)
NAN_BOXED(26114,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(28610,16,FLEN)
NAN_BOXED(31423,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31407,16,FLEN)
NAN_BOXED(31645,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31331,16,FLEN)
NAN_BOXED(26787,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30742,16,FLEN)
NAN_BOXED(31159,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31229,16,FLEN)
NAN_BOXED(31609,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29999,16,FLEN)
NAN_BOXED(30850,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29630,16,FLEN)
NAN_BOXED(29119,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30956,16,FLEN)
NAN_BOXED(31238,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30176,16,FLEN)
NAN_BOXED(30295,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30384,16,FLEN)
NAN_BOXED(27987,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31687,16,FLEN)
NAN_BOXED(30362,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(28963,16,FLEN)
NAN_BOXED(31110,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31075,16,FLEN)
NAN_BOXED(30754,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31012,16,FLEN)
NAN_BOXED(31532,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(28193,16,FLEN)
NAN_BOXED(31227,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30754,16,FLEN)
NAN_BOXED(30485,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29171,16,FLEN)
NAN_BOXED(29766,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30894,16,FLEN)
NAN_BOXED(29960,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31110,16,FLEN)
NAN_BOXED(31647,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31139,16,FLEN)
NAN_BOXED(30363,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30892,16,FLEN)
NAN_BOXED(29765,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(26090,16,FLEN)
NAN_BOXED(30635,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29058,16,FLEN)
NAN_BOXED(30147,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31280,16,FLEN)
NAN_BOXED(28823,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30635,16,FLEN)
NAN_BOXED(30922,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31404,16,FLEN)
NAN_BOXED(31377,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30642,16,FLEN)
NAN_BOXED(31171,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30310,16,FLEN)
NAN_BOXED(31197,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30585,16,FLEN)
NAN_BOXED(29527,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31165,16,FLEN)
NAN_BOXED(31078,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31443,16,FLEN)
NAN_BOXED(29630,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29730,16,FLEN)
NAN_BOXED(29180,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31453,16,FLEN)
NAN_BOXED(31537,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31466,16,FLEN)
NAN_BOXED(29955,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31188,16,FLEN)
NAN_BOXED(28031,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31403,16,FLEN)
NAN_BOXED(29866,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30883,16,FLEN)
NAN_BOXED(31078,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30042,16,FLEN)
NAN_BOXED(30457,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29368,16,FLEN)
NAN_BOXED(30893,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30272,16,FLEN)
NAN_BOXED(30810,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29796,16,FLEN)
NAN_BOXED(31058,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31512,16,FLEN)
NAN_BOXED(31556,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31622,16,FLEN)
NAN_BOXED(30204,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31246,16,FLEN)
NAN_BOXED(29881,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31034,16,FLEN)
NAN_BOXED(31345,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31239,16,FLEN)
NAN_BOXED(31663,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30793,16,FLEN)
NAN_BOXED(28479,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30113,16,FLEN)
NAN_BOXED(31165,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30855,16,FLEN)
NAN_BOXED(29138,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30987,16,FLEN)
NAN_BOXED(29114,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31037,16,FLEN)
NAN_BOXED(28640,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(28805,16,FLEN)
NAN_BOXED(30029,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30918,16,FLEN)
NAN_BOXED(30831,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30545,16,FLEN)
NAN_BOXED(29951,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(27747,16,FLEN)
NAN_BOXED(31161,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30807,16,FLEN)
NAN_BOXED(31210,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29760,16,FLEN)
NAN_BOXED(30241,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(26979,16,FLEN)
NAN_BOXED(30729,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31269,16,FLEN)
NAN_BOXED(30121,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30323,16,FLEN)
NAN_BOXED(30804,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30116,16,FLEN)
NAN_BOXED(31429,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29779,16,FLEN)
NAN_BOXED(28255,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31290,16,FLEN)
NAN_BOXED(31184,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29196,16,FLEN)
NAN_BOXED(30377,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31365,16,FLEN)
NAN_BOXED(31228,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(28847,16,FLEN)
NAN_BOXED(30303,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30775,16,FLEN)
NAN_BOXED(30859,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29696,16,FLEN)
NAN_BOXED(31296,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31340,16,FLEN)
NAN_BOXED(31520,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30240,16,FLEN)
NAN_BOXED(30827,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30993,16,FLEN)
NAN_BOXED(31695,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29897,16,FLEN)
NAN_BOXED(31456,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30926,16,FLEN)
NAN_BOXED(31183,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31273,16,FLEN)
NAN_BOXED(31050,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30767,16,FLEN)
NAN_BOXED(30557,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30779,16,FLEN)
NAN_BOXED(26813,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31018,16,FLEN)
NAN_BOXED(30490,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31659,16,FLEN)
NAN_BOXED(31522,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31317,16,FLEN)
NAN_BOXED(30971,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30145,16,FLEN)
NAN_BOXED(29559,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30799,16,FLEN)
NAN_BOXED(31599,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31477,16,FLEN)
NAN_BOXED(31117,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31452,16,FLEN)
NAN_BOXED(30926,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31161,16,FLEN)
NAN_BOXED(31210,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31347,16,FLEN)
NAN_BOXED(31603,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30461,16,FLEN)
NAN_BOXED(31245,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(28410,16,FLEN)
NAN_BOXED(26998,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29288,16,FLEN)
NAN_BOXED(28964,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31127,16,FLEN)
NAN_BOXED(30796,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31024,16,FLEN)
NAN_BOXED(29919,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31245,16,FLEN)
NAN_BOXED(30315,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31537,16,FLEN)
NAN_BOXED(31169,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30190,16,FLEN)
NAN_BOXED(30779,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29480,16,FLEN)
NAN_BOXED(22919,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31299,16,FLEN)
NAN_BOXED(28822,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29247,16,FLEN)
NAN_BOXED(29361,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29596,16,FLEN)
NAN_BOXED(30810,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29566,16,FLEN)
NAN_BOXED(31734,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31408,16,FLEN)
NAN_BOXED(30622,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30766,16,FLEN)
NAN_BOXED(31213,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(27672,16,FLEN)
NAN_BOXED(31248,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29905,16,FLEN)
NAN_BOXED(26607,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30607,16,FLEN)
NAN_BOXED(31167,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31335,16,FLEN)
NAN_BOXED(30492,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31597,16,FLEN)
NAN_BOXED(31449,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31070,16,FLEN)
NAN_BOXED(28983,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31157,16,FLEN)
NAN_BOXED(29376,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(26627,16,FLEN)
NAN_BOXED(29264,16,FLEN)
NAN_BOXED(31743,16,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x9_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_1:
    .fill 26*((SIGALIGN)/4),4,0xdeadbeef


signature_x2_0:
    .fill 26*((SIGALIGN)/4),4,0xdeadbeef


signature_x4_0:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x4_1:
    .fill 116*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
