
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.12.2
// timestamp : Wed Sep 25 06:07:02 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/testing/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/testing/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV32Zhinx/rv32h_fnmsub.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.h instruction of the RISC-V RV32_Zfinx_Zhinx,RV64_Zfinx_Zhinx extension for the fnmsub_b4 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32I_Zfinx_Zhinx,RV64I_Zfinx_Zhinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*Zhinx.*);def TEST_CASE_1=True;",fnmsub_b4)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x4,test_dataset_0)
RVTEST_SIGBASE(x19,signature_x19_1)

inst_0:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==x25, rs2==x25, rs3==x14, rd==x17,fs1 == 0 and fe1 == 0x1c and fm1 == 0x340 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x053 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3b1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x25; op2:x25; op3:x14; dest:x17; op1val:0x7340; op2val:0x7340;
op3val:0x7bb1; valaddr_reg:x4; val_offset:0*FLEN/8; rmval:dyn;
testreg:x21; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x17, x25, x25, x14, dyn, 0, 0, x4, 0*FLEN/8, x7, x19, x21)

inst_1:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==x0, rs2==x20, rs3==x18, rd==x0,fs1 == 0 and fe1 == 0x1c and fm1 == 0x340 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x053 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3b1 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x0; op2:x20; op3:x18; dest:x0; op1val:0x0; op2val:0xc853;
op3val:0x7bb1; valaddr_reg:x4; val_offset:3*FLEN/8; rmval:dyn;
testreg:x21; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x0, x0, x20, x18, dyn, 32, 0, x4, 3*FLEN/8, x7, x19, x21)

inst_2:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==x27, rs2==x30, rs3==x5, rd==x2,fs1 == 0 and fe1 == 0x1c and fm1 == 0x340 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x053 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3b1 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x27; op2:x30; op3:x5; dest:x2; op1val:0x7340; op2val:0xc853;
op3val:0x7bb1; valaddr_reg:x4; val_offset:6*FLEN/8; rmval:dyn;
testreg:x21; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x2, x27, x30, x5, dyn, 64, 0, x4, 6*FLEN/8, x7, x19, x21)

inst_3:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==x1, rs2==x5, rs3==x1, rd==x22,fs1 == 0 and fe1 == 0x1c and fm1 == 0x340 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x053 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3b1 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x1; op2:x5; op3:x1; dest:x22; op1val:0x7340; op2val:0xc853;
op3val:0x7340; valaddr_reg:x4; val_offset:9*FLEN/8; rmval:dyn;
testreg:x21; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x22, x1, x5, x1, dyn, 96, 0, x4, 9*FLEN/8, x7, x19, x21)

inst_4:
// rs1 == rs2 == rs3 != rd, rs1==x9, rs2==x9, rs3==x9, rd==x26,fs1 == 0 and fe1 == 0x1c and fm1 == 0x340 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x053 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3b1 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x9; op2:x9; op3:x9; dest:x26; op1val:0x7340; op2val:0x7340;
op3val:0x7340; valaddr_reg:x4; val_offset:12*FLEN/8; rmval:dyn;
testreg:x21; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x26, x9, x9, x9, dyn, 128, 0, x4, 12*FLEN/8, x7, x19, x21)

inst_5:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==x11, rs2==x15, rs3==x25, rd==x25,fs1 == 0 and fe1 == 0x1c and fm1 == 0x00a and fs2 == 0 and fe2 == 0x10 and fm2 == 0x0ac and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1a2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x11; op2:x15; op3:x25; dest:x25; op1val:0x700a; op2val:0x40ac;
op3val:0x79a2; valaddr_reg:x4; val_offset:15*FLEN/8; rmval:dyn;
testreg:x21; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x25, x11, x15, x25, dyn, 0, 0, x4, 15*FLEN/8, x7, x19, x21)

inst_6:
// rd == rs2 == rs3 != rs1, rs1==x6, rs2==x10, rs3==x10, rd==x10,fs1 == 0 and fe1 == 0x1c and fm1 == 0x00a and fs2 == 0 and fe2 == 0x10 and fm2 == 0x0ac and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1a2 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x6; op2:x10; op3:x10; dest:x10; op1val:0x700a; op2val:0x40ac;
op3val:0x40ac; valaddr_reg:x4; val_offset:18*FLEN/8; rmval:dyn;
testreg:x21; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x10, x6, x10, x10, dyn, 32, 0, x4, 18*FLEN/8, x7, x19, x21)

inst_7:
// rs1 == rd == rs3 != rs2, rs1==x15, rs2==x29, rs3==x15, rd==x15,fs1 == 0 and fe1 == 0x1c and fm1 == 0x00a and fs2 == 0 and fe2 == 0x10 and fm2 == 0x0ac and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1a2 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x15; op2:x29; op3:x15; dest:x15; op1val:0x700a; op2val:0x40ac;
op3val:0x700a; valaddr_reg:x4; val_offset:21*FLEN/8; rmval:dyn;
testreg:x21; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x15, x15, x29, x15, dyn, 64, 0, x4, 21*FLEN/8, x7, x19, x21)

inst_8:
// rs1 == rs2 == rs3 == rd, rs1==x8, rs2==x8, rs3==x8, rd==x8,fs1 == 0 and fe1 == 0x1c and fm1 == 0x00a and fs2 == 0 and fe2 == 0x10 and fm2 == 0x0ac and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1a2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x8; op2:x8; op3:x8; dest:x8; op1val:0x700a; op2val:0x700a;
op3val:0x700a; valaddr_reg:x4; val_offset:24*FLEN/8; rmval:dyn;
testreg:x21; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x8, x8, x8, x8, dyn, 96, 0, x4, 24*FLEN/8, x7, x19, x21)

inst_9:
// rs1 == rs2 == rd != rs3, rs1==x16, rs2==x16, rs3==x26, rd==x16,fs1 == 0 and fe1 == 0x1c and fm1 == 0x00a and fs2 == 0 and fe2 == 0x10 and fm2 == 0x0ac and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1a2 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x16; op2:x16; op3:x26; dest:x16; op1val:0x700a; op2val:0x700a;
op3val:0x79a2; valaddr_reg:x4; val_offset:27*FLEN/8; rmval:dyn;
testreg:x21; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x16, x16, x16, x26, dyn, 128, 0, x4, 27*FLEN/8, x7, x19, x21)

inst_10:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==x14, rs2==x18, rs3==x6, rd==x18,fs1 == 0 and fe1 == 0x1b and fm1 == 0x173 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x352 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x3ea and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x14; op2:x18; op3:x6; dest:x18; op1val:0x6d73; op2val:0xcb52;
op3val:0x73ea; valaddr_reg:x4; val_offset:30*FLEN/8; rmval:dyn;
testreg:x21; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x18, x14, x18, x6, dyn, 0, 0, x4, 30*FLEN/8, x7, x19, x21)

inst_11:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==x3, rs2==x17, rs3==x17, rd==x30,fs1 == 0 and fe1 == 0x1b and fm1 == 0x173 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x352 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x3ea and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x3; op2:x17; op3:x17; dest:x30; op1val:0x6d73; op2val:0xcb52;
op3val:0xcb52; valaddr_reg:x4; val_offset:33*FLEN/8; rmval:dyn;
testreg:x21; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x30, x3, x17, x17, dyn, 32, 0, x4, 33*FLEN/8, x7, x19, x21)

inst_12:
// rs1==x13, rs2==x12, rs3==x23, rd==x3,fs1 == 0 and fe1 == 0x1b and fm1 == 0x173 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x352 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x3ea and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x13; op2:x12; op3:x23; dest:x3; op1val:0x6d73; op2val:0xcb52;
op3val:0x73ea; valaddr_reg:x4; val_offset:36*FLEN/8; rmval:dyn;
testreg:x21; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x3, x13, x12, x23, dyn, 64, 0, x4, 36*FLEN/8, x7, x19, x21)
RVTEST_VALBASEUPD(x13,test_dataset_1)

inst_13:
// rs1==x7, rs2==x0, rs3==x11, rd==x4,fs1 == 0 and fe1 == 0x1b and fm1 == 0x173 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x352 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x3ea and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x7; op2:x0; op3:x11; dest:x4; op1val:0x6d73; op2val:0x0;
op3val:0x73ea; valaddr_reg:x13; val_offset:0*FLEN/8; rmval:dyn;
testreg:x21; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x4, x7, x0, x11, dyn, 96, 0, x13, 0*FLEN/8, x15, x19, x21)
RVTEST_SIGBASE(x8,signature_x8_0)

inst_14:
// rs1==x30, rs2==x24, rs3==x21, rd==x7,fs1 == 0 and fe1 == 0x1b and fm1 == 0x173 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x352 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x3ea and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x24; op3:x21; dest:x7; op1val:0x6d73; op2val:0xcb52;
op3val:0x73ea; valaddr_reg:x13; val_offset:3*FLEN/8; rmval:dyn;
testreg:x9; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x7, x30, x24, x21, dyn, 128, 0, x13, 3*FLEN/8, x15, x8, x9)

inst_15:
// rs1==x31, rs2==x26, rs3==x13, rd==x19,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3fd and fs2 == 0 and fe2 == 0x0e and fm2 == 0x254 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x2b2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x31; op2:x26; op3:x13; dest:x19; op1val:0x7bfd; op2val:0x3a54;
op3val:0x72b2; valaddr_reg:x13; val_offset:6*FLEN/8; rmval:dyn;
testreg:x9; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x19, x31, x26, x13, dyn, 0, 0, x13, 6*FLEN/8, x15, x8, x9)

inst_16:
// rs1==x19, rs2==x11, rs3==x3, rd==x21,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3fd and fs2 == 0 and fe2 == 0x0e and fm2 == 0x254 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x2b2 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x19; op2:x11; op3:x3; dest:x21; op1val:0x7bfd; op2val:0x3a54;
op3val:0x72b2; valaddr_reg:x13; val_offset:9*FLEN/8; rmval:dyn;
testreg:x9; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x21, x19, x11, x3, dyn, 32, 0, x13, 9*FLEN/8, x15, x8, x9)

inst_17:
// rs1==x10, rs2==x2, rs3==x27, rd==x6,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3fd and fs2 == 0 and fe2 == 0x0e and fm2 == 0x254 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x2b2 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x10; op2:x2; op3:x27; dest:x6; op1val:0x7bfd; op2val:0x3a54;
op3val:0x72b2; valaddr_reg:x13; val_offset:12*FLEN/8; rmval:dyn;
testreg:x9; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x6, x10, x2, x27, dyn, 64, 0, x13, 12*FLEN/8, x15, x8, x9)

inst_18:
// rs1==x22, rs2==x31, rs3==x16, rd==x29,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3fd and fs2 == 0 and fe2 == 0x0e and fm2 == 0x254 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x2b2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x22; op2:x31; op3:x16; dest:x29; op1val:0x7bfd; op2val:0x3a54;
op3val:0x72b2; valaddr_reg:x13; val_offset:15*FLEN/8; rmval:dyn;
testreg:x9; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x29, x22, x31, x16, dyn, 96, 0, x13, 15*FLEN/8, x15, x8, x9)

inst_19:
// rs1==x23, rs2==x1, rs3==x2, rd==x27,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3fd and fs2 == 0 and fe2 == 0x0e and fm2 == 0x254 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x2b2 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x23; op2:x1; op3:x2; dest:x27; op1val:0x7bfd; op2val:0x3a54;
op3val:0x72b2; valaddr_reg:x13; val_offset:18*FLEN/8; rmval:dyn;
testreg:x9; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x27, x23, x1, x2, dyn, 128, 0, x13, 18*FLEN/8, x15, x8, x9)

inst_20:
// rs1==x5, rs2==x14, rs3==x22, rd==x24,fs1 == 0 and fe1 == 0x1e and fm1 == 0x121 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x08b and fs3 == 0 and fe3 == 0x1d and fm3 == 0x357 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x5; op2:x14; op3:x22; dest:x24; op1val:0x7921; op2val:0xc08b;
op3val:0x7757; valaddr_reg:x13; val_offset:21*FLEN/8; rmval:dyn;
testreg:x9; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x24, x5, x14, x22, dyn, 0, 0, x13, 21*FLEN/8, x15, x8, x9)

inst_21:
// rs1==x18, rs2==x27, rs3==x24, rd==x5,fs1 == 0 and fe1 == 0x1e and fm1 == 0x121 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x08b and fs3 == 0 and fe3 == 0x1d and fm3 == 0x357 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x18; op2:x27; op3:x24; dest:x5; op1val:0x7921; op2val:0xc08b;
op3val:0x7757; valaddr_reg:x13; val_offset:24*FLEN/8; rmval:dyn;
testreg:x9; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x5, x18, x27, x24, dyn, 32, 0, x13, 24*FLEN/8, x15, x8, x9)

inst_22:
// rs1==x12, rs2==x3, rs3==x28, rd==x14,fs1 == 0 and fe1 == 0x1e and fm1 == 0x121 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x08b and fs3 == 0 and fe3 == 0x1d and fm3 == 0x357 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x12; op2:x3; op3:x28; dest:x14; op1val:0x7921; op2val:0xc08b;
op3val:0x7757; valaddr_reg:x13; val_offset:27*FLEN/8; rmval:dyn;
testreg:x9; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x14, x12, x3, x28, dyn, 64, 0, x13, 27*FLEN/8, x15, x8, x9)
RVTEST_VALBASEUPD(x3,test_dataset_2)

inst_23:
// rs1==x29, rs2==x7, rs3==x31, rd==x20,fs1 == 0 and fe1 == 0x1e and fm1 == 0x121 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x08b and fs3 == 0 and fe3 == 0x1d and fm3 == 0x357 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x29; op2:x7; op3:x31; dest:x20; op1val:0x7921; op2val:0xc08b;
op3val:0x7757; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x9; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x20, x29, x7, x31, dyn, 96, 0, x3, 0*FLEN/8, x5, x8, x9)

inst_24:
// rs1==x2, rs2==x6, rs3==x30, rd==x1,fs1 == 0 and fe1 == 0x1e and fm1 == 0x121 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x08b and fs3 == 0 and fe3 == 0x1d and fm3 == 0x357 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x2; op2:x6; op3:x30; dest:x1; op1val:0x7921; op2val:0xc08b;
op3val:0x7757; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x9; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x1, x2, x6, x30, dyn, 128, 0, x3, 3*FLEN/8, x5, x8, x9)

inst_25:
// rs1==x26, rs2==x23, rs3==x29, rd==x28,fs1 == 0 and fe1 == 0x1d and fm1 == 0x33f and fs2 == 0 and fe2 == 0x0f and fm2 == 0x075 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3ea and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x26; op2:x23; op3:x29; dest:x28; op1val:0x773f; op2val:0x3c75;
op3val:0x77ea; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x9; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x28, x26, x23, x29, dyn, 0, 0, x3, 6*FLEN/8, x5, x8, x9)

inst_26:
// rs1==x4, rs2==x28, rs3==x20, rd==x11,fs1 == 0 and fe1 == 0x1d and fm1 == 0x33f and fs2 == 0 and fe2 == 0x0f and fm2 == 0x075 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3ea and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x4; op2:x28; op3:x20; dest:x11; op1val:0x773f; op2val:0x3c75;
op3val:0x77ea; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x9; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x11, x4, x28, x20, dyn, 32, 0, x3, 9*FLEN/8, x5, x8, x9)

inst_27:
// rs1==x28, rs2==x22, rs3==x7, rd==x23,fs1 == 0 and fe1 == 0x1d and fm1 == 0x33f and fs2 == 0 and fe2 == 0x0f and fm2 == 0x075 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3ea and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x28; op2:x22; op3:x7; dest:x23; op1val:0x773f; op2val:0x3c75;
op3val:0x77ea; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x23, x28, x22, x7, dyn, 64, 0, x3, 12*FLEN/8, x5, x8, x2)

inst_28:
// rs1==x24, rs2==x21, rs3==x4, rd==x12,fs1 == 0 and fe1 == 0x1d and fm1 == 0x33f and fs2 == 0 and fe2 == 0x0f and fm2 == 0x075 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3ea and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x24; op2:x21; op3:x4; dest:x12; op1val:0x773f; op2val:0x3c75;
op3val:0x77ea; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x12, x24, x21, x4, dyn, 96, 0, x3, 15*FLEN/8, x5, x8, x2)

inst_29:
// rs1==x17, rs2==x4, rs3==x0, rd==x13,fs1 == 0 and fe1 == 0x1d and fm1 == 0x33f and fs2 == 0 and fe2 == 0x0f and fm2 == 0x075 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3ea and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x17; op2:x4; op3:x0; dest:x13; op1val:0x773f; op2val:0x3c75;
op3val:0x0; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x13, x17, x4, x0, dyn, 128, 0, x3, 18*FLEN/8, x5, x8, x2)
RVTEST_SIGBASE(x1,signature_x1_0)

inst_30:
// rs1==x21, rs2==x13, rs3==x12, rd==x31,fs1 == 0 and fe1 == 0x1c and fm1 == 0x226 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x0c2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2a4 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x21; op2:x13; op3:x12; dest:x31; op1val:0x7226; op2val:0xc8c2;
op3val:0x7aa4; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x21, x13, x12, dyn, 0, 0, x3, 21*FLEN/8, x5, x1, x2)

inst_31:
// rs1==x20,fs1 == 0 and fe1 == 0x1c and fm1 == 0x226 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x0c2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2a4 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x20; op2:x0; op3:x7; dest:x19; op1val:0x7226; op2val:0x0;
op3val:0x7aa4; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x19, x20, x0, x7, dyn, 32, 0, x3, 24*FLEN/8, x5, x1, x2)

inst_32:
// rs2==x19,fs1 == 0 and fe1 == 0x1c and fm1 == 0x226 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x0c2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2a4 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x29; op2:x19; op3:x28; dest:x11; op1val:0x7226; op2val:0xc8c2;
op3val:0x7aa4; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x11, x29, x19, x28, dyn, 64, 0, x3, 27*FLEN/8, x5, x1, x2)

inst_33:
// rs3==x19,fs1 == 0 and fe1 == 0x1c and fm1 == 0x226 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x0c2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2a4 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x27; op2:x20; op3:x19; dest:x14; op1val:0x7226; op2val:0xc8c2;
op3val:0x7aa4; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x14, x27, x20, x19, dyn, 96, 0, x3, 30*FLEN/8, x5, x1, x2)

inst_34:
// rd==x9,fs1 == 0 and fe1 == 0x1c and fm1 == 0x226 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x0c2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2a4 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x19; op2:x7; op3:x5; dest:x9; op1val:0x7226; op2val:0xc8c2;
op3val:0x7aa4; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x9, x19, x7, x5, dyn, 128, 0, x3, 33*FLEN/8, x5, x1, x2)

inst_35:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x1ba and fs2 == 0 and fe2 == 0x12 and fm2 == 0x046 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x37d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6dba; op2val:0x4846;
op3val:0x737d; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x3, 36*FLEN/8, x5, x1, x2)
RVTEST_VALBASEUPD(x3,test_dataset_3)

inst_36:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x1ba and fs2 == 0 and fe2 == 0x12 and fm2 == 0x046 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x37d and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6dba; op2val:0x4846;
op3val:0x737d; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_37:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x1ba and fs2 == 0 and fe2 == 0x12 and fm2 == 0x046 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x37d and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6dba; op2val:0x4846;
op3val:0x737d; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_38:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x1ba and fs2 == 0 and fe2 == 0x12 and fm2 == 0x046 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x37d and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6dba; op2val:0x4846;
op3val:0x737d; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_39:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x1ba and fs2 == 0 and fe2 == 0x12 and fm2 == 0x046 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x37d and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6dba; op2val:0x4846;
op3val:0x737d; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_40:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x11e and fs2 == 1 and fe2 == 0x14 and fm2 == 0x3ea and fs3 == 0 and fe3 == 0x1d and fm3 == 0x044 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x651e; op2val:0xd3ea;
op3val:0x7444; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_41:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x11e and fs2 == 1 and fe2 == 0x14 and fm2 == 0x3ea and fs3 == 0 and fe3 == 0x1d and fm3 == 0x044 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x651e; op2val:0xd3ea;
op3val:0x7444; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_42:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x11e and fs2 == 1 and fe2 == 0x14 and fm2 == 0x3ea and fs3 == 0 and fe3 == 0x1d and fm3 == 0x044 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x651e; op2val:0xd3ea;
op3val:0x7444; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_43:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x11e and fs2 == 1 and fe2 == 0x14 and fm2 == 0x3ea and fs3 == 0 and fe3 == 0x1d and fm3 == 0x044 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x651e; op2val:0xd3ea;
op3val:0x7444; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_44:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x11e and fs2 == 1 and fe2 == 0x14 and fm2 == 0x3ea and fs3 == 0 and fe3 == 0x1d and fm3 == 0x044 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x651e; op2val:0xd3ea;
op3val:0x7444; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_45:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x285 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x3af and fs3 == 0 and fe3 == 0x1e and fm3 == 0x336 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7685; op2val:0x33af;
op3val:0x7b36; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_46:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x285 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x3af and fs3 == 0 and fe3 == 0x1e and fm3 == 0x336 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7685; op2val:0x33af;
op3val:0x7b36; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_47:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x285 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x3af and fs3 == 0 and fe3 == 0x1e and fm3 == 0x336 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7685; op2val:0x33af;
op3val:0x7b36; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_48:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x285 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x3af and fs3 == 0 and fe3 == 0x1e and fm3 == 0x336 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7685; op2val:0x33af;
op3val:0x7b36; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_49:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x285 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x3af and fs3 == 0 and fe3 == 0x1e and fm3 == 0x336 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7685; op2val:0x33af;
op3val:0x7b36; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_50:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x20f and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1e0 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x346 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x760f; op2val:0xc1e0;
op3val:0x6f46; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_51:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x20f and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1e0 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x346 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x760f; op2val:0xc1e0;
op3val:0x6f46; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_52:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x20f and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1e0 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x346 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x760f; op2val:0xc1e0;
op3val:0x6f46; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_53:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x20f and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1e0 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x346 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x760f; op2val:0xc1e0;
op3val:0x6f46; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_54:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x20f and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1e0 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x346 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x760f; op2val:0xc1e0;
op3val:0x6f46; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_55:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x021 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x029 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ed and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7421; op2val:0x2829;
op3val:0x7bed; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_56:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x021 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x029 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ed and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7421; op2val:0x2829;
op3val:0x7bed; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x3, 60*FLEN/8, x4, x1, x2)

inst_57:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x021 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x029 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ed and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7421; op2val:0x2829;
op3val:0x7bed; valaddr_reg:x3; val_offset:63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x3, 63*FLEN/8, x4, x1, x2)

inst_58:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x021 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x029 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ed and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7421; op2val:0x2829;
op3val:0x7bed; valaddr_reg:x3; val_offset:66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x3, 66*FLEN/8, x4, x1, x2)

inst_59:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x021 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x029 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ed and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7421; op2val:0x2829;
op3val:0x7bed; valaddr_reg:x3; val_offset:69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x3, 69*FLEN/8, x4, x1, x2)

inst_60:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x009 and fs2 == 1 and fe2 == 0x13 and fm2 == 0x26b and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0f5 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6c09; op2val:0xce6b;
op3val:0x78f5; valaddr_reg:x3; val_offset:72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x3, 72*FLEN/8, x4, x1, x2)

inst_61:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x009 and fs2 == 1 and fe2 == 0x13 and fm2 == 0x26b and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0f5 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6c09; op2val:0xce6b;
op3val:0x78f5; valaddr_reg:x3; val_offset:75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x3, 75*FLEN/8, x4, x1, x2)

inst_62:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x009 and fs2 == 1 and fe2 == 0x13 and fm2 == 0x26b and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0f5 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6c09; op2val:0xce6b;
op3val:0x78f5; valaddr_reg:x3; val_offset:78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x3, 78*FLEN/8, x4, x1, x2)

inst_63:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x009 and fs2 == 1 and fe2 == 0x13 and fm2 == 0x26b and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0f5 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6c09; op2val:0xce6b;
op3val:0x78f5; valaddr_reg:x3; val_offset:81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x3, 81*FLEN/8, x4, x1, x2)

inst_64:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x009 and fs2 == 1 and fe2 == 0x13 and fm2 == 0x26b and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0f5 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6c09; op2val:0xce6b;
op3val:0x78f5; valaddr_reg:x3; val_offset:84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x3, 84*FLEN/8, x4, x1, x2)

inst_65:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x208 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x331 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x148 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7608; op2val:0x3b31;
op3val:0x7948; valaddr_reg:x3; val_offset:87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x3, 87*FLEN/8, x4, x1, x2)

inst_66:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x208 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x331 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x148 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7608; op2val:0x3b31;
op3val:0x7948; valaddr_reg:x3; val_offset:90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x3, 90*FLEN/8, x4, x1, x2)

inst_67:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x208 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x331 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x148 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7608; op2val:0x3b31;
op3val:0x7948; valaddr_reg:x3; val_offset:93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x3, 93*FLEN/8, x4, x1, x2)

inst_68:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x208 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x331 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x148 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7608; op2val:0x3b31;
op3val:0x7948; valaddr_reg:x3; val_offset:96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x3, 96*FLEN/8, x4, x1, x2)

inst_69:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x208 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x331 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x148 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7608; op2val:0x3b31;
op3val:0x7948; valaddr_reg:x3; val_offset:99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x3, 99*FLEN/8, x4, x1, x2)

inst_70:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x169 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0d2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x187 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7569; op2val:0xc0d2;
op3val:0x7987; valaddr_reg:x3; val_offset:102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x3, 102*FLEN/8, x4, x1, x2)

inst_71:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x169 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0d2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x187 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7569; op2val:0xc0d2;
op3val:0x7987; valaddr_reg:x3; val_offset:105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x3, 105*FLEN/8, x4, x1, x2)

inst_72:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x169 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0d2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x187 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7569; op2val:0xc0d2;
op3val:0x7987; valaddr_reg:x3; val_offset:108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x3, 108*FLEN/8, x4, x1, x2)

inst_73:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x169 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0d2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x187 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7569; op2val:0xc0d2;
op3val:0x7987; valaddr_reg:x3; val_offset:111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x3, 111*FLEN/8, x4, x1, x2)

inst_74:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x169 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0d2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x187 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7569; op2val:0xc0d2;
op3val:0x7987; valaddr_reg:x3; val_offset:114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x3, 114*FLEN/8, x4, x1, x2)

inst_75:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3f5 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x037 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x131 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x77f5; op2val:0xbc37;
op3val:0x7931; valaddr_reg:x3; val_offset:117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x3, 117*FLEN/8, x4, x1, x2)

inst_76:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3f5 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x037 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x131 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x77f5; op2val:0xbc37;
op3val:0x7931; valaddr_reg:x3; val_offset:120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x3, 120*FLEN/8, x4, x1, x2)

inst_77:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3f5 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x037 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x131 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x77f5; op2val:0xbc37;
op3val:0x7931; valaddr_reg:x3; val_offset:123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x3, 123*FLEN/8, x4, x1, x2)

inst_78:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3f5 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x037 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x131 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x77f5; op2val:0xbc37;
op3val:0x7931; valaddr_reg:x3; val_offset:126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x3, 126*FLEN/8, x4, x1, x2)

inst_79:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3f5 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x037 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x131 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x77f5; op2val:0xbc37;
op3val:0x7931; valaddr_reg:x3; val_offset:129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x3, 129*FLEN/8, x4, x1, x2)

inst_80:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x335 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x361 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0a6 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b35; op2val:0xbb61;
op3val:0x78a6; valaddr_reg:x3; val_offset:132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x3, 132*FLEN/8, x4, x1, x2)

inst_81:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x335 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x361 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0a6 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b35; op2val:0xbb61;
op3val:0x78a6; valaddr_reg:x3; val_offset:135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x3, 135*FLEN/8, x4, x1, x2)

inst_82:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x335 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x361 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0a6 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b35; op2val:0xbb61;
op3val:0x78a6; valaddr_reg:x3; val_offset:138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x3, 138*FLEN/8, x4, x1, x2)

inst_83:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x335 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x361 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0a6 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b35; op2val:0xbb61;
op3val:0x78a6; valaddr_reg:x3; val_offset:141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x3, 141*FLEN/8, x4, x1, x2)

inst_84:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x335 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x361 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0a6 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b35; op2val:0xbb61;
op3val:0x78a6; valaddr_reg:x3; val_offset:144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x3, 144*FLEN/8, x4, x1, x2)

inst_85:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x08b and fs2 == 0 and fe2 == 0x0f and fm2 == 0x139 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x01e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x708b; op2val:0x3d39;
op3val:0x6c1e; valaddr_reg:x3; val_offset:147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x3, 147*FLEN/8, x4, x1, x2)

inst_86:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x08b and fs2 == 0 and fe2 == 0x0f and fm2 == 0x139 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x01e and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x708b; op2val:0x3d39;
op3val:0x6c1e; valaddr_reg:x3; val_offset:150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x3, 150*FLEN/8, x4, x1, x2)

inst_87:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x08b and fs2 == 0 and fe2 == 0x0f and fm2 == 0x139 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x01e and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x708b; op2val:0x3d39;
op3val:0x6c1e; valaddr_reg:x3; val_offset:153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x3, 153*FLEN/8, x4, x1, x2)

inst_88:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x08b and fs2 == 0 and fe2 == 0x0f and fm2 == 0x139 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x01e and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x708b; op2val:0x3d39;
op3val:0x6c1e; valaddr_reg:x3; val_offset:156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x3, 156*FLEN/8, x4, x1, x2)

inst_89:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x08b and fs2 == 0 and fe2 == 0x0f and fm2 == 0x139 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x01e and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x708b; op2val:0x3d39;
op3val:0x6c1e; valaddr_reg:x3; val_offset:159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x3, 159*FLEN/8, x4, x1, x2)

inst_90:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x390 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x02e and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3d0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b90; op2val:0xbc2e;
op3val:0x77d0; valaddr_reg:x3; val_offset:162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x3, 162*FLEN/8, x4, x1, x2)

inst_91:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x390 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x02e and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3d0 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b90; op2val:0xbc2e;
op3val:0x77d0; valaddr_reg:x3; val_offset:165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x3, 165*FLEN/8, x4, x1, x2)

inst_92:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x390 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x02e and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3d0 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b90; op2val:0xbc2e;
op3val:0x77d0; valaddr_reg:x3; val_offset:168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x3, 168*FLEN/8, x4, x1, x2)

inst_93:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x390 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x02e and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3d0 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b90; op2val:0xbc2e;
op3val:0x77d0; valaddr_reg:x3; val_offset:171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x3, 171*FLEN/8, x4, x1, x2)

inst_94:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x390 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x02e and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3d0 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b90; op2val:0xbc2e;
op3val:0x77d0; valaddr_reg:x3; val_offset:174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x3, 174*FLEN/8, x4, x1, x2)

inst_95:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x233 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x09a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x390 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7233; op2val:0xc09a;
op3val:0x7b90; valaddr_reg:x3; val_offset:177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x3, 177*FLEN/8, x4, x1, x2)

inst_96:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x233 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x09a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x390 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7233; op2val:0xc09a;
op3val:0x7b90; valaddr_reg:x3; val_offset:180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x3, 180*FLEN/8, x4, x1, x2)

inst_97:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x233 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x09a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x390 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7233; op2val:0xc09a;
op3val:0x7b90; valaddr_reg:x3; val_offset:183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x3, 183*FLEN/8, x4, x1, x2)

inst_98:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x233 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x09a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x390 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7233; op2val:0xc09a;
op3val:0x7b90; valaddr_reg:x3; val_offset:186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x3, 186*FLEN/8, x4, x1, x2)

inst_99:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x233 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x09a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x390 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7233; op2val:0xc09a;
op3val:0x7b90; valaddr_reg:x3; val_offset:189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x3, 189*FLEN/8, x4, x1, x2)

inst_100:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0a1 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1f8 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1d4 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x78a1; op2val:0xc1f8;
op3val:0x79d4; valaddr_reg:x3; val_offset:192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x3, 192*FLEN/8, x4, x1, x2)

inst_101:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0a1 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1f8 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1d4 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x78a1; op2val:0xc1f8;
op3val:0x79d4; valaddr_reg:x3; val_offset:195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x3, 195*FLEN/8, x4, x1, x2)

inst_102:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0a1 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1f8 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1d4 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x78a1; op2val:0xc1f8;
op3val:0x79d4; valaddr_reg:x3; val_offset:198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x3, 198*FLEN/8, x4, x1, x2)

inst_103:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0a1 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1f8 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1d4 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x78a1; op2val:0xc1f8;
op3val:0x79d4; valaddr_reg:x3; val_offset:201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x3, 201*FLEN/8, x4, x1, x2)

inst_104:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0a1 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1f8 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1d4 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x78a1; op2val:0xc1f8;
op3val:0x79d4; valaddr_reg:x3; val_offset:204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x3, 204*FLEN/8, x4, x1, x2)

inst_105:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x30b and fs2 == 0 and fe2 == 0x0e and fm2 == 0x27c and fs3 == 0 and fe3 == 0x1d and fm3 == 0x091 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b0b; op2val:0x3a7c;
op3val:0x7491; valaddr_reg:x3; val_offset:207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x3, 207*FLEN/8, x4, x1, x2)

inst_106:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x30b and fs2 == 0 and fe2 == 0x0e and fm2 == 0x27c and fs3 == 0 and fe3 == 0x1d and fm3 == 0x091 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b0b; op2val:0x3a7c;
op3val:0x7491; valaddr_reg:x3; val_offset:210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x3, 210*FLEN/8, x4, x1, x2)

inst_107:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x30b and fs2 == 0 and fe2 == 0x0e and fm2 == 0x27c and fs3 == 0 and fe3 == 0x1d and fm3 == 0x091 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b0b; op2val:0x3a7c;
op3val:0x7491; valaddr_reg:x3; val_offset:213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x3, 213*FLEN/8, x4, x1, x2)

inst_108:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x30b and fs2 == 0 and fe2 == 0x0e and fm2 == 0x27c and fs3 == 0 and fe3 == 0x1d and fm3 == 0x091 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b0b; op2val:0x3a7c;
op3val:0x7491; valaddr_reg:x3; val_offset:216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x3, 216*FLEN/8, x4, x1, x2)

inst_109:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x30b and fs2 == 0 and fe2 == 0x0e and fm2 == 0x27c and fs3 == 0 and fe3 == 0x1d and fm3 == 0x091 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b0b; op2val:0x3a7c;
op3val:0x7491; valaddr_reg:x3; val_offset:219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x3, 219*FLEN/8, x4, x1, x2)

inst_110:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1b4 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x008 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x305 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x75b4; op2val:0xc808;
op3val:0x7b05; valaddr_reg:x3; val_offset:222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x3, 222*FLEN/8, x4, x1, x2)

inst_111:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1b4 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x008 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x305 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x75b4; op2val:0xc808;
op3val:0x7b05; valaddr_reg:x3; val_offset:225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x3, 225*FLEN/8, x4, x1, x2)

inst_112:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1b4 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x008 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x305 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x75b4; op2val:0xc808;
op3val:0x7b05; valaddr_reg:x3; val_offset:228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x3, 228*FLEN/8, x4, x1, x2)

inst_113:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1b4 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x008 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x305 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x75b4; op2val:0xc808;
op3val:0x7b05; valaddr_reg:x3; val_offset:231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x3, 231*FLEN/8, x4, x1, x2)

inst_114:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1b4 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x008 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x305 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x75b4; op2val:0xc808;
op3val:0x7b05; valaddr_reg:x3; val_offset:234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x3, 234*FLEN/8, x4, x1, x2)

inst_115:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x051 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x093 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x21c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7051; op2val:0x4893;
op3val:0x7a1c; valaddr_reg:x3; val_offset:237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x3, 237*FLEN/8, x4, x1, x2)

inst_116:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x051 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x093 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x21c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7051; op2val:0x4893;
op3val:0x7a1c; valaddr_reg:x3; val_offset:240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x3, 240*FLEN/8, x4, x1, x2)

inst_117:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x051 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x093 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x21c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7051; op2val:0x4893;
op3val:0x7a1c; valaddr_reg:x3; val_offset:243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x3, 243*FLEN/8, x4, x1, x2)

inst_118:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x051 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x093 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x21c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7051; op2val:0x4893;
op3val:0x7a1c; valaddr_reg:x3; val_offset:246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x3, 246*FLEN/8, x4, x1, x2)

inst_119:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x051 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x093 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x21c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7051; op2val:0x4893;
op3val:0x7a1c; valaddr_reg:x3; val_offset:249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x3, 249*FLEN/8, x4, x1, x2)

inst_120:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x23e and fs2 == 1 and fe2 == 0x14 and fm2 == 0x201 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x184 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6e3e; op2val:0xd201;
op3val:0x7984; valaddr_reg:x3; val_offset:252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x3, 252*FLEN/8, x4, x1, x2)

inst_121:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x23e and fs2 == 1 and fe2 == 0x14 and fm2 == 0x201 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x184 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6e3e; op2val:0xd201;
op3val:0x7984; valaddr_reg:x3; val_offset:255*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x3, 255*FLEN/8, x4, x1, x2)

inst_122:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x23e and fs2 == 1 and fe2 == 0x14 and fm2 == 0x201 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x184 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6e3e; op2val:0xd201;
op3val:0x7984; valaddr_reg:x3; val_offset:258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x3, 258*FLEN/8, x4, x1, x2)

inst_123:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x23e and fs2 == 1 and fe2 == 0x14 and fm2 == 0x201 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x184 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6e3e; op2val:0xd201;
op3val:0x7984; valaddr_reg:x3; val_offset:261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x3, 261*FLEN/8, x4, x1, x2)

inst_124:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x23e and fs2 == 1 and fe2 == 0x14 and fm2 == 0x201 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x184 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6e3e; op2val:0xd201;
op3val:0x7984; valaddr_reg:x3; val_offset:264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x3, 264*FLEN/8, x4, x1, x2)

inst_125:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x19d and fs2 == 0 and fe2 == 0x11 and fm2 == 0x058 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x398 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x799d; op2val:0x4458;
op3val:0x7b98; valaddr_reg:x3; val_offset:267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x3, 267*FLEN/8, x4, x1, x2)

inst_126:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x19d and fs2 == 0 and fe2 == 0x11 and fm2 == 0x058 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x398 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x799d; op2val:0x4458;
op3val:0x7b98; valaddr_reg:x3; val_offset:270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x3, 270*FLEN/8, x4, x1, x2)

inst_127:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x19d and fs2 == 0 and fe2 == 0x11 and fm2 == 0x058 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x398 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x799d; op2val:0x4458;
op3val:0x7b98; valaddr_reg:x3; val_offset:273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x3, 273*FLEN/8, x4, x1, x2)

inst_128:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x19d and fs2 == 0 and fe2 == 0x11 and fm2 == 0x058 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x398 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x799d; op2val:0x4458;
op3val:0x7b98; valaddr_reg:x3; val_offset:276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x3, 276*FLEN/8, x4, x1, x2)

inst_129:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x19d and fs2 == 0 and fe2 == 0x11 and fm2 == 0x058 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x398 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x799d; op2val:0x4458;
op3val:0x7b98; valaddr_reg:x3; val_offset:279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x3, 279*FLEN/8, x4, x1, x2)

inst_130:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2be and fs2 == 1 and fe2 == 0x12 and fm2 == 0x10a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x006 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7abe; op2val:0xc90a;
op3val:0x7806; valaddr_reg:x3; val_offset:282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x3, 282*FLEN/8, x4, x1, x2)

inst_131:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2be and fs2 == 1 and fe2 == 0x12 and fm2 == 0x10a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x006 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7abe; op2val:0xc90a;
op3val:0x7806; valaddr_reg:x3; val_offset:285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x3, 285*FLEN/8, x4, x1, x2)

inst_132:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2be and fs2 == 1 and fe2 == 0x12 and fm2 == 0x10a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x006 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7abe; op2val:0xc90a;
op3val:0x7806; valaddr_reg:x3; val_offset:288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x3, 288*FLEN/8, x4, x1, x2)

inst_133:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2be and fs2 == 1 and fe2 == 0x12 and fm2 == 0x10a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x006 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7abe; op2val:0xc90a;
op3val:0x7806; valaddr_reg:x3; val_offset:291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x3, 291*FLEN/8, x4, x1, x2)

inst_134:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2be and fs2 == 1 and fe2 == 0x12 and fm2 == 0x10a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x006 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7abe; op2val:0xc90a;
op3val:0x7806; valaddr_reg:x3; val_offset:294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x3, 294*FLEN/8, x4, x1, x2)

inst_135:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x252 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x0f6 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x0cd and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7252; op2val:0x50f6;
op3val:0x70cd; valaddr_reg:x3; val_offset:297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x3, 297*FLEN/8, x4, x1, x2)

inst_136:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x252 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x0f6 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x0cd and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7252; op2val:0x50f6;
op3val:0x70cd; valaddr_reg:x3; val_offset:300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x3, 300*FLEN/8, x4, x1, x2)

inst_137:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x252 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x0f6 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x0cd and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7252; op2val:0x50f6;
op3val:0x70cd; valaddr_reg:x3; val_offset:303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x3, 303*FLEN/8, x4, x1, x2)

inst_138:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x252 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x0f6 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x0cd and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7252; op2val:0x50f6;
op3val:0x70cd; valaddr_reg:x3; val_offset:306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x3, 306*FLEN/8, x4, x1, x2)

inst_139:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x252 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x0f6 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x0cd and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7252; op2val:0x50f6;
op3val:0x70cd; valaddr_reg:x3; val_offset:309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x3, 309*FLEN/8, x4, x1, x2)

inst_140:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x340 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x053 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3b1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7340; op2val:0xc853;
op3val:0x7bb1; valaddr_reg:x3; val_offset:312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x3, 312*FLEN/8, x4, x1, x2)

inst_141:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x340 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x053 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3b1 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7340; op2val:0xc853;
op3val:0x7bb1; valaddr_reg:x3; val_offset:315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x3, 315*FLEN/8, x4, x1, x2)

inst_142:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x340 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x053 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3b1 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7340; op2val:0xc853;
op3val:0x7bb1; valaddr_reg:x3; val_offset:318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x3, 318*FLEN/8, x4, x1, x2)

inst_143:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x340 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x053 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3b1 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7340; op2val:0xc853;
op3val:0x7bb1; valaddr_reg:x3; val_offset:321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x3, 321*FLEN/8, x4, x1, x2)

inst_144:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x00a and fs2 == 0 and fe2 == 0x10 and fm2 == 0x0ac and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1a2 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x700a; op2val:0x40ac;
op3val:0x79a2; valaddr_reg:x3; val_offset:324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x3, 324*FLEN/8, x4, x1, x2)

inst_145:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x00a and fs2 == 0 and fe2 == 0x10 and fm2 == 0x0ac and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1a2 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x700a; op2val:0x40ac;
op3val:0x79a2; valaddr_reg:x3; val_offset:327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x3, 327*FLEN/8, x4, x1, x2)

inst_146:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x00a and fs2 == 0 and fe2 == 0x10 and fm2 == 0x0ac and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1a2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x700a; op2val:0x40ac;
op3val:0x79a2; valaddr_reg:x3; val_offset:330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x3, 330*FLEN/8, x4, x1, x2)

inst_147:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x00a and fs2 == 0 and fe2 == 0x10 and fm2 == 0x0ac and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1a2 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x700a; op2val:0x40ac;
op3val:0x79a2; valaddr_reg:x3; val_offset:333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x3, 333*FLEN/8, x4, x1, x2)

inst_148:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x173 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x352 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x3ea and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6d73; op2val:0xcb52;
op3val:0x73ea; valaddr_reg:x3; val_offset:336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x3, 336*FLEN/8, x4, x1, x2)

inst_149:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x173 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x352 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x3ea and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6d73; op2val:0xcb52;
op3val:0x73ea; valaddr_reg:x3; val_offset:339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x3, 339*FLEN/8, x4, x1, x2)

inst_150:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x33f and fs2 == 0 and fe2 == 0x0f and fm2 == 0x075 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3ea and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x773f; op2val:0x3c75;
op3val:0x77ea; valaddr_reg:x3; val_offset:342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x3, 342*FLEN/8, x4, x1, x2)

inst_151:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x226 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x0c2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2a4 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7226; op2val:0xc8c2;
op3val:0x7aa4; valaddr_reg:x3; val_offset:345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x3, 345*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(29504,32,FLEN)
NAN_BOXED(29504,16,FLEN)
NAN_BOXED(31665,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(51283,16,FLEN)
NAN_BOXED(31665,32,FLEN)
NAN_BOXED(29504,32,FLEN)
NAN_BOXED(51283,16,FLEN)
NAN_BOXED(31665,32,FLEN)
NAN_BOXED(29504,32,FLEN)
NAN_BOXED(51283,16,FLEN)
NAN_BOXED(29504,32,FLEN)
NAN_BOXED(29504,32,FLEN)
NAN_BOXED(29504,16,FLEN)
NAN_BOXED(29504,32,FLEN)
NAN_BOXED(28682,32,FLEN)
NAN_BOXED(16556,32,FLEN)
NAN_BOXED(31138,32,FLEN)
NAN_BOXED(28682,32,FLEN)
NAN_BOXED(16556,32,FLEN)
NAN_BOXED(16556,32,FLEN)
NAN_BOXED(28682,32,FLEN)
NAN_BOXED(16556,32,FLEN)
NAN_BOXED(28682,32,FLEN)
NAN_BOXED(28682,32,FLEN)
NAN_BOXED(28682,32,FLEN)
NAN_BOXED(28682,32,FLEN)
NAN_BOXED(28682,32,FLEN)
NAN_BOXED(28682,32,FLEN)
NAN_BOXED(31138,32,FLEN)
NAN_BOXED(28019,32,FLEN)
NAN_BOXED(52050,16,FLEN)
NAN_BOXED(29674,32,FLEN)
NAN_BOXED(28019,32,FLEN)
NAN_BOXED(52050,16,FLEN)
NAN_BOXED(52050,32,FLEN)
NAN_BOXED(28019,32,FLEN)
NAN_BOXED(52050,16,FLEN)
NAN_BOXED(29674,32,FLEN)
test_dataset_1:
NAN_BOXED(28019,32,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(29674,32,FLEN)
NAN_BOXED(28019,32,FLEN)
NAN_BOXED(52050,16,FLEN)
NAN_BOXED(29674,32,FLEN)
NAN_BOXED(31741,32,FLEN)
NAN_BOXED(14932,32,FLEN)
NAN_BOXED(29362,32,FLEN)
NAN_BOXED(31741,32,FLEN)
NAN_BOXED(14932,32,FLEN)
NAN_BOXED(29362,32,FLEN)
NAN_BOXED(31741,32,FLEN)
NAN_BOXED(14932,32,FLEN)
NAN_BOXED(29362,32,FLEN)
NAN_BOXED(31741,32,FLEN)
NAN_BOXED(14932,32,FLEN)
NAN_BOXED(29362,32,FLEN)
NAN_BOXED(31741,32,FLEN)
NAN_BOXED(14932,32,FLEN)
NAN_BOXED(29362,32,FLEN)
NAN_BOXED(31009,32,FLEN)
NAN_BOXED(49291,16,FLEN)
NAN_BOXED(30551,32,FLEN)
NAN_BOXED(31009,32,FLEN)
NAN_BOXED(49291,16,FLEN)
NAN_BOXED(30551,32,FLEN)
NAN_BOXED(31009,32,FLEN)
NAN_BOXED(49291,16,FLEN)
NAN_BOXED(30551,32,FLEN)
test_dataset_2:
NAN_BOXED(31009,32,FLEN)
NAN_BOXED(49291,16,FLEN)
NAN_BOXED(30551,32,FLEN)
NAN_BOXED(31009,32,FLEN)
NAN_BOXED(49291,16,FLEN)
NAN_BOXED(30551,32,FLEN)
NAN_BOXED(30527,32,FLEN)
NAN_BOXED(15477,32,FLEN)
NAN_BOXED(30698,32,FLEN)
NAN_BOXED(30527,32,FLEN)
NAN_BOXED(15477,32,FLEN)
NAN_BOXED(30698,32,FLEN)
NAN_BOXED(30527,32,FLEN)
NAN_BOXED(15477,32,FLEN)
NAN_BOXED(30698,32,FLEN)
NAN_BOXED(30527,32,FLEN)
NAN_BOXED(15477,32,FLEN)
NAN_BOXED(30698,32,FLEN)
NAN_BOXED(30527,32,FLEN)
NAN_BOXED(15477,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(29222,32,FLEN)
NAN_BOXED(51394,16,FLEN)
NAN_BOXED(31396,32,FLEN)
NAN_BOXED(29222,32,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31396,32,FLEN)
NAN_BOXED(29222,32,FLEN)
NAN_BOXED(51394,16,FLEN)
NAN_BOXED(31396,32,FLEN)
NAN_BOXED(29222,32,FLEN)
NAN_BOXED(51394,16,FLEN)
NAN_BOXED(31396,32,FLEN)
NAN_BOXED(29222,32,FLEN)
NAN_BOXED(51394,16,FLEN)
NAN_BOXED(31396,32,FLEN)
NAN_BOXED(28090,32,FLEN)
NAN_BOXED(18502,32,FLEN)
NAN_BOXED(29565,32,FLEN)
test_dataset_3:
NAN_BOXED(28090,16,FLEN)
NAN_BOXED(18502,16,FLEN)
NAN_BOXED(29565,16,FLEN)
NAN_BOXED(28090,16,FLEN)
NAN_BOXED(18502,16,FLEN)
NAN_BOXED(29565,16,FLEN)
NAN_BOXED(28090,16,FLEN)
NAN_BOXED(18502,16,FLEN)
NAN_BOXED(29565,16,FLEN)
NAN_BOXED(28090,16,FLEN)
NAN_BOXED(18502,16,FLEN)
NAN_BOXED(29565,16,FLEN)
NAN_BOXED(25886,16,FLEN)
NAN_BOXED(54250,16,FLEN)
NAN_BOXED(29764,16,FLEN)
NAN_BOXED(25886,16,FLEN)
NAN_BOXED(54250,16,FLEN)
NAN_BOXED(29764,16,FLEN)
NAN_BOXED(25886,16,FLEN)
NAN_BOXED(54250,16,FLEN)
NAN_BOXED(29764,16,FLEN)
NAN_BOXED(25886,16,FLEN)
NAN_BOXED(54250,16,FLEN)
NAN_BOXED(29764,16,FLEN)
NAN_BOXED(25886,16,FLEN)
NAN_BOXED(54250,16,FLEN)
NAN_BOXED(29764,16,FLEN)
NAN_BOXED(30341,16,FLEN)
NAN_BOXED(13231,16,FLEN)
NAN_BOXED(31542,16,FLEN)
NAN_BOXED(30341,16,FLEN)
NAN_BOXED(13231,16,FLEN)
NAN_BOXED(31542,16,FLEN)
NAN_BOXED(30341,16,FLEN)
NAN_BOXED(13231,16,FLEN)
NAN_BOXED(31542,16,FLEN)
NAN_BOXED(30341,16,FLEN)
NAN_BOXED(13231,16,FLEN)
NAN_BOXED(31542,16,FLEN)
NAN_BOXED(30341,16,FLEN)
NAN_BOXED(13231,16,FLEN)
NAN_BOXED(31542,16,FLEN)
NAN_BOXED(30223,16,FLEN)
NAN_BOXED(49632,16,FLEN)
NAN_BOXED(28486,16,FLEN)
NAN_BOXED(30223,16,FLEN)
NAN_BOXED(49632,16,FLEN)
NAN_BOXED(28486,16,FLEN)
NAN_BOXED(30223,16,FLEN)
NAN_BOXED(49632,16,FLEN)
NAN_BOXED(28486,16,FLEN)
NAN_BOXED(30223,16,FLEN)
NAN_BOXED(49632,16,FLEN)
NAN_BOXED(28486,16,FLEN)
NAN_BOXED(30223,16,FLEN)
NAN_BOXED(49632,16,FLEN)
NAN_BOXED(28486,16,FLEN)
NAN_BOXED(29729,16,FLEN)
NAN_BOXED(10281,16,FLEN)
NAN_BOXED(31725,16,FLEN)
NAN_BOXED(29729,16,FLEN)
NAN_BOXED(10281,16,FLEN)
NAN_BOXED(31725,16,FLEN)
NAN_BOXED(29729,16,FLEN)
NAN_BOXED(10281,16,FLEN)
NAN_BOXED(31725,16,FLEN)
NAN_BOXED(29729,16,FLEN)
NAN_BOXED(10281,16,FLEN)
NAN_BOXED(31725,16,FLEN)
NAN_BOXED(29729,16,FLEN)
NAN_BOXED(10281,16,FLEN)
NAN_BOXED(31725,16,FLEN)
NAN_BOXED(27657,16,FLEN)
NAN_BOXED(52843,16,FLEN)
NAN_BOXED(30965,16,FLEN)
NAN_BOXED(27657,16,FLEN)
NAN_BOXED(52843,16,FLEN)
NAN_BOXED(30965,16,FLEN)
NAN_BOXED(27657,16,FLEN)
NAN_BOXED(52843,16,FLEN)
NAN_BOXED(30965,16,FLEN)
NAN_BOXED(27657,16,FLEN)
NAN_BOXED(52843,16,FLEN)
NAN_BOXED(30965,16,FLEN)
NAN_BOXED(27657,16,FLEN)
NAN_BOXED(52843,16,FLEN)
NAN_BOXED(30965,16,FLEN)
NAN_BOXED(30216,16,FLEN)
NAN_BOXED(15153,16,FLEN)
NAN_BOXED(31048,16,FLEN)
NAN_BOXED(30216,16,FLEN)
NAN_BOXED(15153,16,FLEN)
NAN_BOXED(31048,16,FLEN)
NAN_BOXED(30216,16,FLEN)
NAN_BOXED(15153,16,FLEN)
NAN_BOXED(31048,16,FLEN)
NAN_BOXED(30216,16,FLEN)
NAN_BOXED(15153,16,FLEN)
NAN_BOXED(31048,16,FLEN)
NAN_BOXED(30216,16,FLEN)
NAN_BOXED(15153,16,FLEN)
NAN_BOXED(31048,16,FLEN)
NAN_BOXED(30057,16,FLEN)
NAN_BOXED(49362,16,FLEN)
NAN_BOXED(31111,16,FLEN)
NAN_BOXED(30057,16,FLEN)
NAN_BOXED(49362,16,FLEN)
NAN_BOXED(31111,16,FLEN)
NAN_BOXED(30057,16,FLEN)
NAN_BOXED(49362,16,FLEN)
NAN_BOXED(31111,16,FLEN)
NAN_BOXED(30057,16,FLEN)
NAN_BOXED(49362,16,FLEN)
NAN_BOXED(31111,16,FLEN)
NAN_BOXED(30057,16,FLEN)
NAN_BOXED(49362,16,FLEN)
NAN_BOXED(31111,16,FLEN)
NAN_BOXED(30709,16,FLEN)
NAN_BOXED(48183,16,FLEN)
NAN_BOXED(31025,16,FLEN)
NAN_BOXED(30709,16,FLEN)
NAN_BOXED(48183,16,FLEN)
NAN_BOXED(31025,16,FLEN)
NAN_BOXED(30709,16,FLEN)
NAN_BOXED(48183,16,FLEN)
NAN_BOXED(31025,16,FLEN)
NAN_BOXED(30709,16,FLEN)
NAN_BOXED(48183,16,FLEN)
NAN_BOXED(31025,16,FLEN)
NAN_BOXED(30709,16,FLEN)
NAN_BOXED(48183,16,FLEN)
NAN_BOXED(31025,16,FLEN)
NAN_BOXED(31541,16,FLEN)
NAN_BOXED(47969,16,FLEN)
NAN_BOXED(30886,16,FLEN)
NAN_BOXED(31541,16,FLEN)
NAN_BOXED(47969,16,FLEN)
NAN_BOXED(30886,16,FLEN)
NAN_BOXED(31541,16,FLEN)
NAN_BOXED(47969,16,FLEN)
NAN_BOXED(30886,16,FLEN)
NAN_BOXED(31541,16,FLEN)
NAN_BOXED(47969,16,FLEN)
NAN_BOXED(30886,16,FLEN)
NAN_BOXED(31541,16,FLEN)
NAN_BOXED(47969,16,FLEN)
NAN_BOXED(30886,16,FLEN)
NAN_BOXED(28811,16,FLEN)
NAN_BOXED(15673,16,FLEN)
NAN_BOXED(27678,16,FLEN)
NAN_BOXED(28811,16,FLEN)
NAN_BOXED(15673,16,FLEN)
NAN_BOXED(27678,16,FLEN)
NAN_BOXED(28811,16,FLEN)
NAN_BOXED(15673,16,FLEN)
NAN_BOXED(27678,16,FLEN)
NAN_BOXED(28811,16,FLEN)
NAN_BOXED(15673,16,FLEN)
NAN_BOXED(27678,16,FLEN)
NAN_BOXED(28811,16,FLEN)
NAN_BOXED(15673,16,FLEN)
NAN_BOXED(27678,16,FLEN)
NAN_BOXED(31632,16,FLEN)
NAN_BOXED(48174,16,FLEN)
NAN_BOXED(30672,16,FLEN)
NAN_BOXED(31632,16,FLEN)
NAN_BOXED(48174,16,FLEN)
NAN_BOXED(30672,16,FLEN)
NAN_BOXED(31632,16,FLEN)
NAN_BOXED(48174,16,FLEN)
NAN_BOXED(30672,16,FLEN)
NAN_BOXED(31632,16,FLEN)
NAN_BOXED(48174,16,FLEN)
NAN_BOXED(30672,16,FLEN)
NAN_BOXED(31632,16,FLEN)
NAN_BOXED(48174,16,FLEN)
NAN_BOXED(30672,16,FLEN)
NAN_BOXED(29235,16,FLEN)
NAN_BOXED(49306,16,FLEN)
NAN_BOXED(31632,16,FLEN)
NAN_BOXED(29235,16,FLEN)
NAN_BOXED(49306,16,FLEN)
NAN_BOXED(31632,16,FLEN)
NAN_BOXED(29235,16,FLEN)
NAN_BOXED(49306,16,FLEN)
NAN_BOXED(31632,16,FLEN)
NAN_BOXED(29235,16,FLEN)
NAN_BOXED(49306,16,FLEN)
NAN_BOXED(31632,16,FLEN)
NAN_BOXED(29235,16,FLEN)
NAN_BOXED(49306,16,FLEN)
NAN_BOXED(31632,16,FLEN)
NAN_BOXED(30881,16,FLEN)
NAN_BOXED(49656,16,FLEN)
NAN_BOXED(31188,16,FLEN)
NAN_BOXED(30881,16,FLEN)
NAN_BOXED(49656,16,FLEN)
NAN_BOXED(31188,16,FLEN)
NAN_BOXED(30881,16,FLEN)
NAN_BOXED(49656,16,FLEN)
NAN_BOXED(31188,16,FLEN)
NAN_BOXED(30881,16,FLEN)
NAN_BOXED(49656,16,FLEN)
NAN_BOXED(31188,16,FLEN)
NAN_BOXED(30881,16,FLEN)
NAN_BOXED(49656,16,FLEN)
NAN_BOXED(31188,16,FLEN)
NAN_BOXED(31499,16,FLEN)
NAN_BOXED(14972,16,FLEN)
NAN_BOXED(29841,16,FLEN)
NAN_BOXED(31499,16,FLEN)
NAN_BOXED(14972,16,FLEN)
NAN_BOXED(29841,16,FLEN)
NAN_BOXED(31499,16,FLEN)
NAN_BOXED(14972,16,FLEN)
NAN_BOXED(29841,16,FLEN)
NAN_BOXED(31499,16,FLEN)
NAN_BOXED(14972,16,FLEN)
NAN_BOXED(29841,16,FLEN)
NAN_BOXED(31499,16,FLEN)
NAN_BOXED(14972,16,FLEN)
NAN_BOXED(29841,16,FLEN)
NAN_BOXED(30132,16,FLEN)
NAN_BOXED(51208,16,FLEN)
NAN_BOXED(31493,16,FLEN)
NAN_BOXED(30132,16,FLEN)
NAN_BOXED(51208,16,FLEN)
NAN_BOXED(31493,16,FLEN)
NAN_BOXED(30132,16,FLEN)
NAN_BOXED(51208,16,FLEN)
NAN_BOXED(31493,16,FLEN)
NAN_BOXED(30132,16,FLEN)
NAN_BOXED(51208,16,FLEN)
NAN_BOXED(31493,16,FLEN)
NAN_BOXED(30132,16,FLEN)
NAN_BOXED(51208,16,FLEN)
NAN_BOXED(31493,16,FLEN)
NAN_BOXED(28753,16,FLEN)
NAN_BOXED(18579,16,FLEN)
NAN_BOXED(31260,16,FLEN)
NAN_BOXED(28753,16,FLEN)
NAN_BOXED(18579,16,FLEN)
NAN_BOXED(31260,16,FLEN)
NAN_BOXED(28753,16,FLEN)
NAN_BOXED(18579,16,FLEN)
NAN_BOXED(31260,16,FLEN)
NAN_BOXED(28753,16,FLEN)
NAN_BOXED(18579,16,FLEN)
NAN_BOXED(31260,16,FLEN)
NAN_BOXED(28753,16,FLEN)
NAN_BOXED(18579,16,FLEN)
NAN_BOXED(31260,16,FLEN)
NAN_BOXED(28222,16,FLEN)
NAN_BOXED(53761,16,FLEN)
NAN_BOXED(31108,16,FLEN)
NAN_BOXED(28222,16,FLEN)
NAN_BOXED(53761,16,FLEN)
NAN_BOXED(31108,16,FLEN)
NAN_BOXED(28222,16,FLEN)
NAN_BOXED(53761,16,FLEN)
NAN_BOXED(31108,16,FLEN)
NAN_BOXED(28222,16,FLEN)
NAN_BOXED(53761,16,FLEN)
NAN_BOXED(31108,16,FLEN)
NAN_BOXED(28222,16,FLEN)
NAN_BOXED(53761,16,FLEN)
NAN_BOXED(31108,16,FLEN)
NAN_BOXED(31133,16,FLEN)
NAN_BOXED(17496,16,FLEN)
NAN_BOXED(31640,16,FLEN)
NAN_BOXED(31133,16,FLEN)
NAN_BOXED(17496,16,FLEN)
NAN_BOXED(31640,16,FLEN)
NAN_BOXED(31133,16,FLEN)
NAN_BOXED(17496,16,FLEN)
NAN_BOXED(31640,16,FLEN)
NAN_BOXED(31133,16,FLEN)
NAN_BOXED(17496,16,FLEN)
NAN_BOXED(31640,16,FLEN)
NAN_BOXED(31133,16,FLEN)
NAN_BOXED(17496,16,FLEN)
NAN_BOXED(31640,16,FLEN)
NAN_BOXED(31422,16,FLEN)
NAN_BOXED(51466,16,FLEN)
NAN_BOXED(30726,16,FLEN)
NAN_BOXED(31422,16,FLEN)
NAN_BOXED(51466,16,FLEN)
NAN_BOXED(30726,16,FLEN)
NAN_BOXED(31422,16,FLEN)
NAN_BOXED(51466,16,FLEN)
NAN_BOXED(30726,16,FLEN)
NAN_BOXED(31422,16,FLEN)
NAN_BOXED(51466,16,FLEN)
NAN_BOXED(30726,16,FLEN)
NAN_BOXED(31422,16,FLEN)
NAN_BOXED(51466,16,FLEN)
NAN_BOXED(30726,16,FLEN)
NAN_BOXED(29266,16,FLEN)
NAN_BOXED(20726,16,FLEN)
NAN_BOXED(28877,16,FLEN)
NAN_BOXED(29266,16,FLEN)
NAN_BOXED(20726,16,FLEN)
NAN_BOXED(28877,16,FLEN)
NAN_BOXED(29266,16,FLEN)
NAN_BOXED(20726,16,FLEN)
NAN_BOXED(28877,16,FLEN)
NAN_BOXED(29266,16,FLEN)
NAN_BOXED(20726,16,FLEN)
NAN_BOXED(28877,16,FLEN)
NAN_BOXED(29266,16,FLEN)
NAN_BOXED(20726,16,FLEN)
NAN_BOXED(28877,16,FLEN)
NAN_BOXED(29504,16,FLEN)
NAN_BOXED(51283,16,FLEN)
NAN_BOXED(31665,16,FLEN)
NAN_BOXED(29504,16,FLEN)
NAN_BOXED(51283,16,FLEN)
NAN_BOXED(31665,16,FLEN)
NAN_BOXED(29504,16,FLEN)
NAN_BOXED(51283,16,FLEN)
NAN_BOXED(31665,16,FLEN)
NAN_BOXED(29504,16,FLEN)
NAN_BOXED(51283,16,FLEN)
NAN_BOXED(31665,16,FLEN)
NAN_BOXED(28682,16,FLEN)
NAN_BOXED(16556,16,FLEN)
NAN_BOXED(31138,16,FLEN)
NAN_BOXED(28682,16,FLEN)
NAN_BOXED(16556,16,FLEN)
NAN_BOXED(31138,16,FLEN)
NAN_BOXED(28682,16,FLEN)
NAN_BOXED(16556,16,FLEN)
NAN_BOXED(31138,16,FLEN)
NAN_BOXED(28682,16,FLEN)
NAN_BOXED(16556,16,FLEN)
NAN_BOXED(31138,16,FLEN)
NAN_BOXED(28019,16,FLEN)
NAN_BOXED(52050,16,FLEN)
NAN_BOXED(29674,16,FLEN)
NAN_BOXED(28019,16,FLEN)
NAN_BOXED(52050,16,FLEN)
NAN_BOXED(29674,16,FLEN)
NAN_BOXED(30527,16,FLEN)
NAN_BOXED(15477,16,FLEN)
NAN_BOXED(30698,16,FLEN)
NAN_BOXED(29222,16,FLEN)
NAN_BOXED(51394,16,FLEN)
NAN_BOXED(31396,16,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x19_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x19_1:
    .fill 28*((SIGALIGN)/4),4,0xdeadbeef


signature_x8_0:
    .fill 32*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_0:
    .fill 244*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
