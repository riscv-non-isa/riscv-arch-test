
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.12.2
// timestamp : Wed Sep 25 06:07:02 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/testing/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/testing/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV32Zhinx/rv32h_fnmsub.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.h instruction of the RISC-V RV32_Zfinx_Zhinx,RV64_Zfinx_Zhinx extension for the fnmsub_b5 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32I_Zfinx_Zhinx,RV64I_Zfinx_Zhinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*Zhinx.*);def TEST_CASE_1=True;",fnmsub_b5)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x4,test_dataset_0)
RVTEST_SIGBASE(x9,signature_x9_1)

inst_0:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==x5, rs2==x5, rs3==x14, rd==x2,fs1 == 0 and fe1 == 0x1c and fm1 == 0x340 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x03e and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3b1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x5; op2:x5; op3:x14; dest:x2; op1val:0x7340; op2val:0x7340;
op3val:0x7bb1; valaddr_reg:x4; val_offset:0*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x2, x5, x5, x14, dyn, 0, 0, x4, 0*FLEN/8, x7, x9, x12)

inst_1:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==x17, rs2==x25, rs3==x28, rd==x17,fs1 == 0 and fe1 == 0x1c and fm1 == 0x340 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x03e and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3b1 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x17; op2:x25; op3:x28; dest:x17; op1val:0x7340; op2val:0xc43e;
op3val:0x7bb1; valaddr_reg:x4; val_offset:3*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x17, x17, x25, x28, dyn, 32, 0, x4, 3*FLEN/8, x7, x9, x12)

inst_2:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==x2, rs2==x26, rs3==x9, rd==x1,fs1 == 0 and fe1 == 0x1c and fm1 == 0x340 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x03e and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3b1 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x2; op2:x26; op3:x9; dest:x1; op1val:0x7340; op2val:0xc43e;
op3val:0x7bb1; valaddr_reg:x4; val_offset:6*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x1, x2, x26, x9, dyn, 64, 0, x4, 6*FLEN/8, x7, x9, x12)

inst_3:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==x0, rs2==x19, rs3==x0, rd==x8,fs1 == 0 and fe1 == 0x1c and fm1 == 0x340 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x03e and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3b1 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x0; op2:x19; op3:x0; dest:x8; op1val:0x0; op2val:0xc43e;
op3val:0x0; valaddr_reg:x4; val_offset:9*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x8, x0, x19, x0, dyn, 96, 0, x4, 9*FLEN/8, x7, x9, x12)

inst_4:
// rs1 == rs2 == rs3 != rd, rs1==x30, rs2==x30, rs3==x30, rd==x31,fs1 == 0 and fe1 == 0x1c and fm1 == 0x340 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x03e and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3b1 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x30; op3:x30; dest:x31; op1val:0x7340; op2val:0x7340;
op3val:0x7340; valaddr_reg:x4; val_offset:12*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x30, x30, dyn, 128, 0, x4, 12*FLEN/8, x7, x9, x12)

inst_5:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==x15, rs2==x14, rs3==x11, rd==x11,fs1 == 0 and fe1 == 0x1c and fm1 == 0x00a and fs2 == 1 and fe2 == 0x11 and fm2 == 0x194 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1a2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x15; op2:x14; op3:x11; dest:x11; op1val:0x700a; op2val:0xc594;
op3val:0x79a2; valaddr_reg:x4; val_offset:15*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x11, x15, x14, x11, dyn, 0, 0, x4, 15*FLEN/8, x7, x9, x12)

inst_6:
// rd == rs2 == rs3 != rs1, rs1==x6, rs2==x3, rs3==x3, rd==x3,fs1 == 0 and fe1 == 0x1c and fm1 == 0x00a and fs2 == 1 and fe2 == 0x11 and fm2 == 0x194 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1a2 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x6; op2:x3; op3:x3; dest:x3; op1val:0x700a; op2val:0xc594;
op3val:0xc594; valaddr_reg:x4; val_offset:18*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x3, x6, x3, x3, dyn, 32, 0, x4, 18*FLEN/8, x7, x9, x12)

inst_7:
// rs1 == rd == rs3 != rs2, rs1==x19, rs2==x23, rs3==x19, rd==x19,fs1 == 0 and fe1 == 0x1c and fm1 == 0x00a and fs2 == 1 and fe2 == 0x11 and fm2 == 0x194 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1a2 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x19; op2:x23; op3:x19; dest:x19; op1val:0x700a; op2val:0xc594;
op3val:0x700a; valaddr_reg:x4; val_offset:21*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x19, x19, x23, x19, dyn, 64, 0, x4, 21*FLEN/8, x7, x9, x12)

inst_8:
// rs1 == rs2 == rs3 == rd, rs1==x24, rs2==x24, rs3==x24, rd==x24,fs1 == 0 and fe1 == 0x1c and fm1 == 0x00a and fs2 == 1 and fe2 == 0x11 and fm2 == 0x194 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1a2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x24; op2:x24; op3:x24; dest:x24; op1val:0x700a; op2val:0x700a;
op3val:0x700a; valaddr_reg:x4; val_offset:24*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x24, x24, x24, x24, dyn, 96, 0, x4, 24*FLEN/8, x7, x9, x12)

inst_9:
// rs1 == rs2 == rd != rs3, rs1==x21, rs2==x21, rs3==x2, rd==x21,fs1 == 0 and fe1 == 0x1c and fm1 == 0x00a and fs2 == 1 and fe2 == 0x11 and fm2 == 0x194 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1a2 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x21; op2:x21; op3:x2; dest:x21; op1val:0x700a; op2val:0x700a;
op3val:0x79a2; valaddr_reg:x4; val_offset:27*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x21, x21, x21, x2, dyn, 128, 0, x4, 27*FLEN/8, x7, x9, x12)

inst_10:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==x3, rs2==x16, rs3==x4, rd==x16,fs1 == 0 and fe1 == 0x1b and fm1 == 0x173 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1cf and fs3 == 0 and fe3 == 0x1c and fm3 == 0x3ea and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x3; op2:x16; op3:x4; dest:x16; op1val:0x6d73; op2val:0xc1cf;
op3val:0x73ea; valaddr_reg:x4; val_offset:30*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x16, x3, x16, x4, dyn, 0, 0, x4, 30*FLEN/8, x7, x9, x12)

inst_11:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==x31, rs2==x10, rs3==x10, rd==x29,fs1 == 0 and fe1 == 0x1b and fm1 == 0x173 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1cf and fs3 == 0 and fe3 == 0x1c and fm3 == 0x3ea and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x31; op2:x10; op3:x10; dest:x29; op1val:0x6d73; op2val:0xc1cf;
op3val:0xc1cf; valaddr_reg:x4; val_offset:33*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x29, x31, x10, x10, dyn, 32, 0, x4, 33*FLEN/8, x7, x9, x12)

inst_12:
// rs1==x8, rs2==x6, rs3==x27, rd==x18,fs1 == 0 and fe1 == 0x1b and fm1 == 0x173 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1cf and fs3 == 0 and fe3 == 0x1c and fm3 == 0x3ea and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x8; op2:x6; op3:x27; dest:x18; op1val:0x6d73; op2val:0xc1cf;
op3val:0x73ea; valaddr_reg:x4; val_offset:36*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x18, x8, x6, x27, dyn, 64, 0, x4, 36*FLEN/8, x7, x9, x12)
RVTEST_VALBASEUPD(x8,test_dataset_1)

inst_13:
// rs1==x20, rs2==x7, rs3==x17, rd==x4,fs1 == 0 and fe1 == 0x1b and fm1 == 0x173 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1cf and fs3 == 0 and fe3 == 0x1c and fm3 == 0x3ea and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x20; op2:x7; op3:x17; dest:x4; op1val:0x6d73; op2val:0xc1cf;
op3val:0x73ea; valaddr_reg:x8; val_offset:0*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x4, x20, x7, x17, dyn, 96, 0, x8, 0*FLEN/8, x19, x9, x12)
RVTEST_SIGBASE(x3,signature_x3_0)

inst_14:
// rs1==x1, rs2==x15, rs3==x20, rd==x25,fs1 == 0 and fe1 == 0x1b and fm1 == 0x173 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1cf and fs3 == 0 and fe3 == 0x1c and fm3 == 0x3ea and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x1; op2:x15; op3:x20; dest:x25; op1val:0x6d73; op2val:0xc1cf;
op3val:0x73ea; valaddr_reg:x8; val_offset:3*FLEN/8; rmval:dyn;
testreg:x6; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x25, x1, x15, x20, dyn, 128, 0, x8, 3*FLEN/8, x19, x3, x6)

inst_15:
// rs1==x9, rs2==x22, rs3==x7, rd==x5,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3fd and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2b4 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x2b2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x9; op2:x22; op3:x7; dest:x5; op1val:0x7bfd; op2val:0xb2b4;
op3val:0x72b2; valaddr_reg:x8; val_offset:6*FLEN/8; rmval:dyn;
testreg:x6; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x5, x9, x22, x7, dyn, 0, 0, x8, 6*FLEN/8, x19, x3, x6)

inst_16:
// rs1==x14, rs2==x13, rs3==x29, rd==x23,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3fd and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2b4 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x2b2 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x14; op2:x13; op3:x29; dest:x23; op1val:0x7bfd; op2val:0xb2b4;
op3val:0x72b2; valaddr_reg:x8; val_offset:9*FLEN/8; rmval:dyn;
testreg:x6; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x23, x14, x13, x29, dyn, 32, 0, x8, 9*FLEN/8, x19, x3, x6)

inst_17:
// rs1==x10, rs2==x31, rs3==x5, rd==x13,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3fd and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2b4 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x2b2 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x10; op2:x31; op3:x5; dest:x13; op1val:0x7bfd; op2val:0xb2b4;
op3val:0x72b2; valaddr_reg:x8; val_offset:12*FLEN/8; rmval:dyn;
testreg:x6; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x13, x10, x31, x5, dyn, 64, 0, x8, 12*FLEN/8, x19, x3, x6)

inst_18:
// rs1==x18, rs2==x11, rs3==x23, rd==x9,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3fd and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2b4 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x2b2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x18; op2:x11; op3:x23; dest:x9; op1val:0x7bfd; op2val:0xb2b4;
op3val:0x72b2; valaddr_reg:x8; val_offset:15*FLEN/8; rmval:dyn;
testreg:x6; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x9, x18, x11, x23, dyn, 96, 0, x8, 15*FLEN/8, x19, x3, x6)

inst_19:
// rs1==x12, rs2==x17, rs3==x15, rd==x14,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3fd and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2b4 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x2b2 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x12; op2:x17; op3:x15; dest:x14; op1val:0x7bfd; op2val:0xb2b4;
op3val:0x72b2; valaddr_reg:x8; val_offset:18*FLEN/8; rmval:dyn;
testreg:x6; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x14, x12, x17, x15, dyn, 128, 0, x8, 18*FLEN/8, x19, x3, x6)

inst_20:
// rs1==x22, rs2==x9, rs3==x18, rd==x12,fs1 == 0 and fe1 == 0x1e and fm1 == 0x121 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1b8 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x357 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x22; op2:x9; op3:x18; dest:x12; op1val:0x7921; op2val:0xb9b8;
op3val:0x7757; valaddr_reg:x8; val_offset:21*FLEN/8; rmval:dyn;
testreg:x6; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x12, x22, x9, x18, dyn, 0, 0, x8, 21*FLEN/8, x19, x3, x6)

inst_21:
// rs1==x27, rs2==x2, rs3==x16, rd==x30,fs1 == 0 and fe1 == 0x1e and fm1 == 0x121 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1b8 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x357 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x27; op2:x2; op3:x16; dest:x30; op1val:0x7921; op2val:0xb9b8;
op3val:0x7757; valaddr_reg:x8; val_offset:24*FLEN/8; rmval:dyn;
testreg:x6; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x30, x27, x2, x16, dyn, 32, 0, x8, 24*FLEN/8, x19, x3, x6)

inst_22:
// rs1==x16, rs2==x29, rs3==x6, rd==x10,fs1 == 0 and fe1 == 0x1e and fm1 == 0x121 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1b8 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x357 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x16; op2:x29; op3:x6; dest:x10; op1val:0x7921; op2val:0xb9b8;
op3val:0x7757; valaddr_reg:x8; val_offset:27*FLEN/8; rmval:dyn;
testreg:x6; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x10, x16, x29, x6, dyn, 64, 0, x8, 27*FLEN/8, x19, x3, x6)
RVTEST_VALBASEUPD(x5,test_dataset_2)

inst_23:
// rs1==x26, rs2==x0, rs3==x8, rd==x27,fs1 == 0 and fe1 == 0x1e and fm1 == 0x121 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1b8 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x357 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x26; op2:x0; op3:x8; dest:x27; op1val:0x7921; op2val:0x0;
op3val:0x7757; valaddr_reg:x5; val_offset:0*FLEN/8; rmval:dyn;
testreg:x6; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x27, x26, x0, x8, dyn, 96, 0, x5, 0*FLEN/8, x9, x3, x6)

inst_24:
// rs1==x29, rs2==x1, rs3==x22, rd==x26,fs1 == 0 and fe1 == 0x1e and fm1 == 0x121 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1b8 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x357 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x29; op2:x1; op3:x22; dest:x26; op1val:0x7921; op2val:0xb9b8;
op3val:0x7757; valaddr_reg:x5; val_offset:3*FLEN/8; rmval:dyn;
testreg:x6; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x26, x29, x1, x22, dyn, 128, 0, x5, 3*FLEN/8, x9, x3, x6)

inst_25:
// rs1==x11, rs2==x4, rs3==x21, rd==x15,fs1 == 0 and fe1 == 0x1d and fm1 == 0x33f and fs2 == 1 and fe2 == 0x0f and fm2 == 0x05e and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3ea and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x11; op2:x4; op3:x21; dest:x15; op1val:0x773f; op2val:0xbc5e;
op3val:0x77ea; valaddr_reg:x5; val_offset:6*FLEN/8; rmval:dyn;
testreg:x6; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x15, x11, x4, x21, dyn, 0, 0, x5, 6*FLEN/8, x9, x3, x6)

inst_26:
// rs1==x13, rs2==x27, rs3==x31, rd==x20,fs1 == 0 and fe1 == 0x1d and fm1 == 0x33f and fs2 == 1 and fe2 == 0x0f and fm2 == 0x05e and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3ea and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x13; op2:x27; op3:x31; dest:x20; op1val:0x773f; op2val:0xbc5e;
op3val:0x77ea; valaddr_reg:x5; val_offset:9*FLEN/8; rmval:dyn;
testreg:x6; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x20, x13, x27, x31, dyn, 32, 0, x5, 9*FLEN/8, x9, x3, x6)

inst_27:
// rs1==x25, rs2==x12, rs3==x26, rd==x28,fs1 == 0 and fe1 == 0x1d and fm1 == 0x33f and fs2 == 1 and fe2 == 0x0f and fm2 == 0x05e and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3ea and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x25; op2:x12; op3:x26; dest:x28; op1val:0x773f; op2val:0xbc5e;
op3val:0x77ea; valaddr_reg:x5; val_offset:12*FLEN/8; rmval:dyn;
testreg:x6; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x28, x25, x12, x26, dyn, 64, 0, x5, 12*FLEN/8, x9, x3, x6)

inst_28:
// rs1==x4, rs2==x18, rs3==x25, rd==x22,fs1 == 0 and fe1 == 0x1d and fm1 == 0x33f and fs2 == 1 and fe2 == 0x0f and fm2 == 0x05e and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3ea and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x4; op2:x18; op3:x25; dest:x22; op1val:0x773f; op2val:0xbc5e;
op3val:0x77ea; valaddr_reg:x5; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x22, x4, x18, x25, dyn, 96, 0, x5, 15*FLEN/8, x9, x3, x2)

inst_29:
// rs1==x7, rs2==x8, rs3==x1, rd==x0,fs1 == 0 and fe1 == 0x1d and fm1 == 0x33f and fs2 == 1 and fe2 == 0x0f and fm2 == 0x05e and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3ea and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x7; op2:x8; op3:x1; dest:x0; op1val:0x773f; op2val:0xbc5e;
op3val:0x77ea; valaddr_reg:x5; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x0, x7, x8, x1, dyn, 128, 0, x5, 18*FLEN/8, x9, x3, x2)
RVTEST_SIGBASE(x1,signature_x1_0)

inst_30:
// rs1==x28, rs2==x20, rs3==x13, rd==x6,fs1 == 0 and fe1 == 0x1c and fm1 == 0x226 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x051 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2a4 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x28; op2:x20; op3:x13; dest:x6; op1val:0x7226; op2val:0xc451;
op3val:0x7aa4; valaddr_reg:x5; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x6, x28, x20, x13, dyn, 0, 0, x5, 21*FLEN/8, x9, x1, x2)

inst_31:
// rs1==x23, rs2==x28, rs3==x12, rd==x7,fs1 == 0 and fe1 == 0x1c and fm1 == 0x226 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x051 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2a4 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x23; op2:x28; op3:x12; dest:x7; op1val:0x7226; op2val:0xc451;
op3val:0x7aa4; valaddr_reg:x5; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x7, x23, x28, x12, dyn, 32, 0, x5, 24*FLEN/8, x9, x1, x2)

inst_32:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x226 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x051 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2a4 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7226; op2val:0xc451;
op3val:0x7aa4; valaddr_reg:x5; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 27*FLEN/8, x9, x1, x2)

inst_33:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x226 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x051 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2a4 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7226; op2val:0xc451;
op3val:0x7aa4; valaddr_reg:x5; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 30*FLEN/8, x9, x1, x2)

inst_34:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x226 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x051 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2a4 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7226; op2val:0xc451;
op3val:0x7aa4; valaddr_reg:x5; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 33*FLEN/8, x9, x1, x2)

inst_35:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x1ba and fs2 == 1 and fe2 == 0x10 and fm2 == 0x13a and fs3 == 0 and fe3 == 0x1c and fm3 == 0x37d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6dba; op2val:0xc13a;
op3val:0x737d; valaddr_reg:x5; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 36*FLEN/8, x9, x1, x2)

inst_36:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x1ba and fs2 == 1 and fe2 == 0x10 and fm2 == 0x13a and fs3 == 0 and fe3 == 0x1c and fm3 == 0x37d and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6dba; op2val:0xc13a;
op3val:0x737d; valaddr_reg:x5; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 39*FLEN/8, x9, x1, x2)

inst_37:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x1ba and fs2 == 1 and fe2 == 0x10 and fm2 == 0x13a and fs3 == 0 and fe3 == 0x1c and fm3 == 0x37d and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6dba; op2val:0xc13a;
op3val:0x737d; valaddr_reg:x5; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 42*FLEN/8, x9, x1, x2)

inst_38:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x1ba and fs2 == 1 and fe2 == 0x10 and fm2 == 0x13a and fs3 == 0 and fe3 == 0x1c and fm3 == 0x37d and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6dba; op2val:0xc13a;
op3val:0x737d; valaddr_reg:x5; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 45*FLEN/8, x9, x1, x2)

inst_39:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x1ba and fs2 == 1 and fe2 == 0x10 and fm2 == 0x13a and fs3 == 0 and fe3 == 0x1c and fm3 == 0x37d and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6dba; op2val:0xc13a;
op3val:0x737d; valaddr_reg:x5; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 48*FLEN/8, x9, x1, x2)

inst_40:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x11e and fs2 == 1 and fe2 == 0x12 and fm2 == 0x2aa and fs3 == 0 and fe3 == 0x1d and fm3 == 0x044 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x651e; op2val:0xcaaa;
op3val:0x7444; valaddr_reg:x5; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 51*FLEN/8, x9, x1, x2)

inst_41:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x11e and fs2 == 1 and fe2 == 0x12 and fm2 == 0x2aa and fs3 == 0 and fe3 == 0x1d and fm3 == 0x044 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x651e; op2val:0xcaaa;
op3val:0x7444; valaddr_reg:x5; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 54*FLEN/8, x9, x1, x2)

inst_42:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x11e and fs2 == 1 and fe2 == 0x12 and fm2 == 0x2aa and fs3 == 0 and fe3 == 0x1d and fm3 == 0x044 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x651e; op2val:0xcaaa;
op3val:0x7444; valaddr_reg:x5; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 57*FLEN/8, x9, x1, x2)

inst_43:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x11e and fs2 == 1 and fe2 == 0x12 and fm2 == 0x2aa and fs3 == 0 and fe3 == 0x1d and fm3 == 0x044 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x651e; op2val:0xcaaa;
op3val:0x7444; valaddr_reg:x5; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 60*FLEN/8, x9, x1, x2)

inst_44:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x11e and fs2 == 1 and fe2 == 0x12 and fm2 == 0x2aa and fs3 == 0 and fe3 == 0x1d and fm3 == 0x044 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x651e; op2val:0xcaaa;
op3val:0x7444; valaddr_reg:x5; val_offset:63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 63*FLEN/8, x9, x1, x2)

inst_45:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x285 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x06c and fs3 == 0 and fe3 == 0x1e and fm3 == 0x336 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7685; op2val:0xc06c;
op3val:0x7b36; valaddr_reg:x5; val_offset:66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 66*FLEN/8, x9, x1, x2)

inst_46:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x285 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x06c and fs3 == 0 and fe3 == 0x1e and fm3 == 0x336 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7685; op2val:0xc06c;
op3val:0x7b36; valaddr_reg:x5; val_offset:69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 69*FLEN/8, x9, x1, x2)

inst_47:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x285 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x06c and fs3 == 0 and fe3 == 0x1e and fm3 == 0x336 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7685; op2val:0xc06c;
op3val:0x7b36; valaddr_reg:x5; val_offset:72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 72*FLEN/8, x9, x1, x2)

inst_48:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x285 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x06c and fs3 == 0 and fe3 == 0x1e and fm3 == 0x336 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7685; op2val:0xc06c;
op3val:0x7b36; valaddr_reg:x5; val_offset:75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 75*FLEN/8, x9, x1, x2)

inst_49:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x285 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x06c and fs3 == 0 and fe3 == 0x1e and fm3 == 0x336 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7685; op2val:0xc06c;
op3val:0x7b36; valaddr_reg:x5; val_offset:78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 78*FLEN/8, x9, x1, x2)

inst_50:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x20f and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0cd and fs3 == 0 and fe3 == 0x1b and fm3 == 0x346 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x760f; op2val:0xb4cd;
op3val:0x6f46; valaddr_reg:x5; val_offset:81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 81*FLEN/8, x9, x1, x2)

inst_51:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x20f and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0cd and fs3 == 0 and fe3 == 0x1b and fm3 == 0x346 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x760f; op2val:0xb4cd;
op3val:0x6f46; valaddr_reg:x5; val_offset:84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 84*FLEN/8, x9, x1, x2)

inst_52:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x20f and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0cd and fs3 == 0 and fe3 == 0x1b and fm3 == 0x346 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x760f; op2val:0xb4cd;
op3val:0x6f46; valaddr_reg:x5; val_offset:87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 87*FLEN/8, x9, x1, x2)

inst_53:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x20f and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0cd and fs3 == 0 and fe3 == 0x1b and fm3 == 0x346 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x760f; op2val:0xb4cd;
op3val:0x6f46; valaddr_reg:x5; val_offset:90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 90*FLEN/8, x9, x1, x2)

inst_54:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x20f and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0cd and fs3 == 0 and fe3 == 0x1b and fm3 == 0x346 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x760f; op2val:0xb4cd;
op3val:0x6f46; valaddr_reg:x5; val_offset:93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 93*FLEN/8, x9, x1, x2)

inst_55:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x021 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x3ad and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ed and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7421; op2val:0xc3ad;
op3val:0x7bed; valaddr_reg:x5; val_offset:96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 96*FLEN/8, x9, x1, x2)

inst_56:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x021 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x3ad and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ed and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7421; op2val:0xc3ad;
op3val:0x7bed; valaddr_reg:x5; val_offset:99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 99*FLEN/8, x9, x1, x2)

inst_57:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x021 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x3ad and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ed and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7421; op2val:0xc3ad;
op3val:0x7bed; valaddr_reg:x5; val_offset:102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 102*FLEN/8, x9, x1, x2)

inst_58:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x021 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x3ad and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ed and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7421; op2val:0xc3ad;
op3val:0x7bed; valaddr_reg:x5; val_offset:105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 105*FLEN/8, x9, x1, x2)

inst_59:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x021 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x3ad and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ed and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7421; op2val:0xc3ad;
op3val:0x7bed; valaddr_reg:x5; val_offset:108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 108*FLEN/8, x9, x1, x2)

inst_60:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x009 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x0e9 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0f5 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6c09; op2val:0xc8e9;
op3val:0x78f5; valaddr_reg:x5; val_offset:111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 111*FLEN/8, x9, x1, x2)

inst_61:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x009 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x0e9 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0f5 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6c09; op2val:0xc8e9;
op3val:0x78f5; valaddr_reg:x5; val_offset:114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 114*FLEN/8, x9, x1, x2)

inst_62:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x009 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x0e9 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0f5 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6c09; op2val:0xc8e9;
op3val:0x78f5; valaddr_reg:x5; val_offset:117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 117*FLEN/8, x9, x1, x2)

inst_63:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x009 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x0e9 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0f5 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6c09; op2val:0xc8e9;
op3val:0x78f5; valaddr_reg:x5; val_offset:120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 120*FLEN/8, x9, x1, x2)

inst_64:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x009 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x0e9 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0f5 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6c09; op2val:0xc8e9;
op3val:0x78f5; valaddr_reg:x5; val_offset:123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 123*FLEN/8, x9, x1, x2)

inst_65:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x208 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x301 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x148 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7608; op2val:0xbf01;
op3val:0x7948; valaddr_reg:x5; val_offset:126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 126*FLEN/8, x9, x1, x2)

inst_66:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x208 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x301 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x148 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7608; op2val:0xbf01;
op3val:0x7948; valaddr_reg:x5; val_offset:129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 129*FLEN/8, x9, x1, x2)

inst_67:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x208 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x301 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x148 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7608; op2val:0xbf01;
op3val:0x7948; valaddr_reg:x5; val_offset:132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 132*FLEN/8, x9, x1, x2)

inst_68:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x208 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x301 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x148 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7608; op2val:0xbf01;
op3val:0x7948; valaddr_reg:x5; val_offset:135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 135*FLEN/8, x9, x1, x2)

inst_69:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x208 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x301 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x148 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7608; op2val:0xbf01;
op3val:0x7948; valaddr_reg:x5; val_offset:138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 138*FLEN/8, x9, x1, x2)

inst_70:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x169 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x015 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x187 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7569; op2val:0xc015;
op3val:0x7987; valaddr_reg:x5; val_offset:141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 141*FLEN/8, x9, x1, x2)

inst_71:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x169 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x015 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x187 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7569; op2val:0xc015;
op3val:0x7987; valaddr_reg:x5; val_offset:144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 144*FLEN/8, x9, x1, x2)

inst_72:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x169 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x015 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x187 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7569; op2val:0xc015;
op3val:0x7987; valaddr_reg:x5; val_offset:147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 147*FLEN/8, x9, x1, x2)

inst_73:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x169 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x015 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x187 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7569; op2val:0xc015;
op3val:0x7987; valaddr_reg:x5; val_offset:150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 150*FLEN/8, x9, x1, x2)

inst_74:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x169 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x015 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x187 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7569; op2val:0xc015;
op3val:0x7987; valaddr_reg:x5; val_offset:153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 153*FLEN/8, x9, x1, x2)

inst_75:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3f5 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x139 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x131 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x77f5; op2val:0xbd39;
op3val:0x7931; valaddr_reg:x5; val_offset:156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 156*FLEN/8, x9, x1, x2)

inst_76:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3f5 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x139 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x131 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x77f5; op2val:0xbd39;
op3val:0x7931; valaddr_reg:x5; val_offset:159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 159*FLEN/8, x9, x1, x2)

inst_77:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3f5 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x139 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x131 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x77f5; op2val:0xbd39;
op3val:0x7931; valaddr_reg:x5; val_offset:162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 162*FLEN/8, x9, x1, x2)

inst_78:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3f5 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x139 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x131 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x77f5; op2val:0xbd39;
op3val:0x7931; valaddr_reg:x5; val_offset:165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 165*FLEN/8, x9, x1, x2)

inst_79:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3f5 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x139 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x131 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x77f5; op2val:0xbd39;
op3val:0x7931; valaddr_reg:x5; val_offset:168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 168*FLEN/8, x9, x1, x2)

inst_80:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x335 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x129 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0a6 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b35; op2val:0xb929;
op3val:0x78a6; valaddr_reg:x5; val_offset:171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 171*FLEN/8, x9, x1, x2)

inst_81:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x335 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x129 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0a6 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b35; op2val:0xb929;
op3val:0x78a6; valaddr_reg:x5; val_offset:174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 174*FLEN/8, x9, x1, x2)

inst_82:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x335 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x129 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0a6 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b35; op2val:0xb929;
op3val:0x78a6; valaddr_reg:x5; val_offset:177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 177*FLEN/8, x9, x1, x2)

inst_83:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x335 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x129 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0a6 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b35; op2val:0xb929;
op3val:0x78a6; valaddr_reg:x5; val_offset:180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 180*FLEN/8, x9, x1, x2)

inst_84:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x335 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x129 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0a6 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b35; op2val:0xb929;
op3val:0x78a6; valaddr_reg:x5; val_offset:183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 183*FLEN/8, x9, x1, x2)

inst_85:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x08b and fs2 == 1 and fe2 == 0x0d and fm2 == 0x33f and fs3 == 0 and fe3 == 0x1b and fm3 == 0x01e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x708b; op2val:0xb73f;
op3val:0x6c1e; valaddr_reg:x5; val_offset:186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 186*FLEN/8, x9, x1, x2)

inst_86:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x08b and fs2 == 1 and fe2 == 0x0d and fm2 == 0x33f and fs3 == 0 and fe3 == 0x1b and fm3 == 0x01e and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x708b; op2val:0xb73f;
op3val:0x6c1e; valaddr_reg:x5; val_offset:189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 189*FLEN/8, x9, x1, x2)

inst_87:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x08b and fs2 == 1 and fe2 == 0x0d and fm2 == 0x33f and fs3 == 0 and fe3 == 0x1b and fm3 == 0x01e and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x708b; op2val:0xb73f;
op3val:0x6c1e; valaddr_reg:x5; val_offset:192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 192*FLEN/8, x9, x1, x2)

inst_88:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x08b and fs2 == 1 and fe2 == 0x0d and fm2 == 0x33f and fs3 == 0 and fe3 == 0x1b and fm3 == 0x01e and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x708b; op2val:0xb73f;
op3val:0x6c1e; valaddr_reg:x5; val_offset:195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 195*FLEN/8, x9, x1, x2)

inst_89:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x08b and fs2 == 1 and fe2 == 0x0d and fm2 == 0x33f and fs3 == 0 and fe3 == 0x1b and fm3 == 0x01e and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x708b; op2val:0xb73f;
op3val:0x6c1e; valaddr_reg:x5; val_offset:198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 198*FLEN/8, x9, x1, x2)

inst_90:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x390 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x021 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3d0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b90; op2val:0xb821;
op3val:0x77d0; valaddr_reg:x5; val_offset:201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 201*FLEN/8, x9, x1, x2)

inst_91:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x390 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x021 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3d0 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b90; op2val:0xb821;
op3val:0x77d0; valaddr_reg:x5; val_offset:204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 204*FLEN/8, x9, x1, x2)

inst_92:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x390 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x021 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3d0 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b90; op2val:0xb821;
op3val:0x77d0; valaddr_reg:x5; val_offset:207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 207*FLEN/8, x9, x1, x2)

inst_93:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x390 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x021 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3d0 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b90; op2val:0xb821;
op3val:0x77d0; valaddr_reg:x5; val_offset:210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 210*FLEN/8, x9, x1, x2)

inst_94:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x390 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x021 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3d0 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b90; op2val:0xb821;
op3val:0x77d0; valaddr_reg:x5; val_offset:213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 213*FLEN/8, x9, x1, x2)

inst_95:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x233 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x0e1 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x390 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7233; op2val:0xc4e1;
op3val:0x7b90; valaddr_reg:x5; val_offset:216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 216*FLEN/8, x9, x1, x2)

inst_96:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x233 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x0e1 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x390 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7233; op2val:0xc4e1;
op3val:0x7b90; valaddr_reg:x5; val_offset:219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 219*FLEN/8, x9, x1, x2)

inst_97:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x233 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x0e1 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x390 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7233; op2val:0xc4e1;
op3val:0x7b90; valaddr_reg:x5; val_offset:222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 222*FLEN/8, x9, x1, x2)

inst_98:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x233 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x0e1 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x390 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7233; op2val:0xc4e1;
op3val:0x7b90; valaddr_reg:x5; val_offset:225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 225*FLEN/8, x9, x1, x2)

inst_99:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x233 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x0e1 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x390 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7233; op2val:0xc4e1;
op3val:0x7b90; valaddr_reg:x5; val_offset:228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 228*FLEN/8, x9, x1, x2)

inst_100:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0a1 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x109 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1d4 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x78a1; op2val:0xbd09;
op3val:0x79d4; valaddr_reg:x5; val_offset:231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 231*FLEN/8, x9, x1, x2)

inst_101:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0a1 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x109 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1d4 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x78a1; op2val:0xbd09;
op3val:0x79d4; valaddr_reg:x5; val_offset:234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 234*FLEN/8, x9, x1, x2)

inst_102:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0a1 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x109 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1d4 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x78a1; op2val:0xbd09;
op3val:0x79d4; valaddr_reg:x5; val_offset:237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 237*FLEN/8, x9, x1, x2)

inst_103:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0a1 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x109 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1d4 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x78a1; op2val:0xbd09;
op3val:0x79d4; valaddr_reg:x5; val_offset:240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 240*FLEN/8, x9, x1, x2)

inst_104:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0a1 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x109 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1d4 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x78a1; op2val:0xbd09;
op3val:0x79d4; valaddr_reg:x5; val_offset:243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 243*FLEN/8, x9, x1, x2)

inst_105:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x30b and fs2 == 1 and fe2 == 0x0d and fm2 == 0x130 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x091 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b0b; op2val:0xb530;
op3val:0x7491; valaddr_reg:x5; val_offset:246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 246*FLEN/8, x9, x1, x2)

inst_106:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x30b and fs2 == 1 and fe2 == 0x0d and fm2 == 0x130 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x091 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b0b; op2val:0xb530;
op3val:0x7491; valaddr_reg:x5; val_offset:249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 249*FLEN/8, x9, x1, x2)

inst_107:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x30b and fs2 == 1 and fe2 == 0x0d and fm2 == 0x130 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x091 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b0b; op2val:0xb530;
op3val:0x7491; valaddr_reg:x5; val_offset:252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 252*FLEN/8, x9, x1, x2)

inst_108:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x30b and fs2 == 1 and fe2 == 0x0d and fm2 == 0x130 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x091 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b0b; op2val:0xb530;
op3val:0x7491; valaddr_reg:x5; val_offset:255*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 255*FLEN/8, x9, x1, x2)

inst_109:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x30b and fs2 == 1 and fe2 == 0x0d and fm2 == 0x130 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x091 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b0b; op2val:0xb530;
op3val:0x7491; valaddr_reg:x5; val_offset:258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 258*FLEN/8, x9, x1, x2)

inst_110:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1b4 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0ec and fs3 == 0 and fe3 == 0x1e and fm3 == 0x305 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x75b4; op2val:0xc0ec;
op3val:0x7b05; valaddr_reg:x5; val_offset:261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 261*FLEN/8, x9, x1, x2)

inst_111:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1b4 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0ec and fs3 == 0 and fe3 == 0x1e and fm3 == 0x305 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x75b4; op2val:0xc0ec;
op3val:0x7b05; valaddr_reg:x5; val_offset:264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 264*FLEN/8, x9, x1, x2)

inst_112:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1b4 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0ec and fs3 == 0 and fe3 == 0x1e and fm3 == 0x305 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x75b4; op2val:0xc0ec;
op3val:0x7b05; valaddr_reg:x5; val_offset:267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 267*FLEN/8, x9, x1, x2)

inst_113:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1b4 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0ec and fs3 == 0 and fe3 == 0x1e and fm3 == 0x305 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x75b4; op2val:0xc0ec;
op3val:0x7b05; valaddr_reg:x5; val_offset:270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 270*FLEN/8, x9, x1, x2)

inst_114:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1b4 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0ec and fs3 == 0 and fe3 == 0x1e and fm3 == 0x305 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x75b4; op2val:0xc0ec;
op3val:0x7b05; valaddr_reg:x5; val_offset:273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 273*FLEN/8, x9, x1, x2)

inst_115:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x051 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x1a9 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x21c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7051; op2val:0xc5a9;
op3val:0x7a1c; valaddr_reg:x5; val_offset:276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 276*FLEN/8, x9, x1, x2)

inst_116:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x051 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x1a9 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x21c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7051; op2val:0xc5a9;
op3val:0x7a1c; valaddr_reg:x5; val_offset:279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 279*FLEN/8, x9, x1, x2)

inst_117:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x051 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x1a9 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x21c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7051; op2val:0xc5a9;
op3val:0x7a1c; valaddr_reg:x5; val_offset:282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 282*FLEN/8, x9, x1, x2)

inst_118:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x051 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x1a9 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x21c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7051; op2val:0xc5a9;
op3val:0x7a1c; valaddr_reg:x5; val_offset:285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 285*FLEN/8, x9, x1, x2)

inst_119:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x051 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x1a9 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x21c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7051; op2val:0xc5a9;
op3val:0x7a1c; valaddr_reg:x5; val_offset:288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 288*FLEN/8, x9, x1, x2)

inst_120:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x23e and fs2 == 1 and fe2 == 0x11 and fm2 == 0x311 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x184 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6e3e; op2val:0xc711;
op3val:0x7984; valaddr_reg:x5; val_offset:291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 291*FLEN/8, x9, x1, x2)

inst_121:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x23e and fs2 == 1 and fe2 == 0x11 and fm2 == 0x311 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x184 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6e3e; op2val:0xc711;
op3val:0x7984; valaddr_reg:x5; val_offset:294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 294*FLEN/8, x9, x1, x2)

inst_122:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x23e and fs2 == 1 and fe2 == 0x11 and fm2 == 0x311 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x184 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6e3e; op2val:0xc711;
op3val:0x7984; valaddr_reg:x5; val_offset:297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 297*FLEN/8, x9, x1, x2)

inst_123:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x23e and fs2 == 1 and fe2 == 0x11 and fm2 == 0x311 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x184 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6e3e; op2val:0xc711;
op3val:0x7984; valaddr_reg:x5; val_offset:300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 300*FLEN/8, x9, x1, x2)

inst_124:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x23e and fs2 == 1 and fe2 == 0x11 and fm2 == 0x311 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x184 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6e3e; op2val:0xc711;
op3val:0x7984; valaddr_reg:x5; val_offset:303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 303*FLEN/8, x9, x1, x2)

inst_125:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x19d and fs2 == 1 and fe2 == 0x0f and fm2 == 0x169 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x398 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x799d; op2val:0xbd69;
op3val:0x7b98; valaddr_reg:x5; val_offset:306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 306*FLEN/8, x9, x1, x2)

inst_126:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x19d and fs2 == 1 and fe2 == 0x0f and fm2 == 0x169 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x398 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x799d; op2val:0xbd69;
op3val:0x7b98; valaddr_reg:x5; val_offset:309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 309*FLEN/8, x9, x1, x2)

inst_127:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x19d and fs2 == 1 and fe2 == 0x0f and fm2 == 0x169 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x398 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x799d; op2val:0xbd69;
op3val:0x7b98; valaddr_reg:x5; val_offset:312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 312*FLEN/8, x9, x1, x2)

inst_128:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x19d and fs2 == 1 and fe2 == 0x0f and fm2 == 0x169 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x398 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x799d; op2val:0xbd69;
op3val:0x7b98; valaddr_reg:x5; val_offset:315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 315*FLEN/8, x9, x1, x2)

inst_129:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x19d and fs2 == 1 and fe2 == 0x0f and fm2 == 0x169 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x398 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x799d; op2val:0xbd69;
op3val:0x7b98; valaddr_reg:x5; val_offset:318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 318*FLEN/8, x9, x1, x2)

inst_130:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2be and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0c6 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x006 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7abe; op2val:0xb8c6;
op3val:0x7806; valaddr_reg:x5; val_offset:321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 321*FLEN/8, x9, x1, x2)

inst_131:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2be and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0c6 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x006 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7abe; op2val:0xb8c6;
op3val:0x7806; valaddr_reg:x5; val_offset:324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 324*FLEN/8, x9, x1, x2)

inst_132:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2be and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0c6 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x006 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7abe; op2val:0xb8c6;
op3val:0x7806; valaddr_reg:x5; val_offset:327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 327*FLEN/8, x9, x1, x2)

inst_133:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2be and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0c6 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x006 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7abe; op2val:0xb8c6;
op3val:0x7806; valaddr_reg:x5; val_offset:330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 330*FLEN/8, x9, x1, x2)

inst_134:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2be and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0c6 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x006 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7abe; op2val:0xb8c6;
op3val:0x7806; valaddr_reg:x5; val_offset:333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 333*FLEN/8, x9, x1, x2)

inst_135:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x252 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x213 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x0cd and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7252; op2val:0xba13;
op3val:0x70cd; valaddr_reg:x5; val_offset:336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 336*FLEN/8, x9, x1, x2)

inst_136:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x252 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x213 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x0cd and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7252; op2val:0xba13;
op3val:0x70cd; valaddr_reg:x5; val_offset:339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 339*FLEN/8, x9, x1, x2)

inst_137:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x252 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x213 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x0cd and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7252; op2val:0xba13;
op3val:0x70cd; valaddr_reg:x5; val_offset:342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 342*FLEN/8, x9, x1, x2)

inst_138:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x252 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x213 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x0cd and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7252; op2val:0xba13;
op3val:0x70cd; valaddr_reg:x5; val_offset:345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 345*FLEN/8, x9, x1, x2)

inst_139:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x252 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x213 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x0cd and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7252; op2val:0xba13;
op3val:0x70cd; valaddr_reg:x5; val_offset:348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 348*FLEN/8, x9, x1, x2)

inst_140:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x03a and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3b6 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x013 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x783a; op2val:0xbbb6;
op3val:0x7813; valaddr_reg:x5; val_offset:351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 351*FLEN/8, x9, x1, x2)

inst_141:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x03a and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3b6 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x013 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x783a; op2val:0xbbb6;
op3val:0x7813; valaddr_reg:x5; val_offset:354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 354*FLEN/8, x9, x1, x2)

inst_142:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x03a and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3b6 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x013 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x783a; op2val:0xbbb6;
op3val:0x7813; valaddr_reg:x5; val_offset:357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 357*FLEN/8, x9, x1, x2)

inst_143:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x03a and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3b6 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x013 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x783a; op2val:0xbbb6;
op3val:0x7813; valaddr_reg:x5; val_offset:360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 360*FLEN/8, x9, x1, x2)

inst_144:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x03a and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3b6 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x013 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x783a; op2val:0xbbb6;
op3val:0x7813; valaddr_reg:x5; val_offset:363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 363*FLEN/8, x9, x1, x2)

inst_145:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x091 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x252 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x338 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6c91; op2val:0xca52;
op3val:0x7b38; valaddr_reg:x5; val_offset:366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 366*FLEN/8, x9, x1, x2)

inst_146:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x091 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x252 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x338 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6c91; op2val:0xca52;
op3val:0x7b38; valaddr_reg:x5; val_offset:369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 369*FLEN/8, x9, x1, x2)

inst_147:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x091 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x252 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x338 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6c91; op2val:0xca52;
op3val:0x7b38; valaddr_reg:x5; val_offset:372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 372*FLEN/8, x9, x1, x2)

inst_148:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x091 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x252 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x338 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6c91; op2val:0xca52;
op3val:0x7b38; valaddr_reg:x5; val_offset:375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 375*FLEN/8, x9, x1, x2)

inst_149:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x091 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x252 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x338 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6c91; op2val:0xca52;
op3val:0x7b38; valaddr_reg:x5; val_offset:378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 378*FLEN/8, x9, x1, x2)

inst_150:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x00e and fs2 == 1 and fe2 == 0x0f and fm2 == 0x187 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x19b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x780e; op2val:0xbd87;
op3val:0x799b; valaddr_reg:x5; val_offset:381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 381*FLEN/8, x9, x1, x2)

inst_151:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x00e and fs2 == 1 and fe2 == 0x0f and fm2 == 0x187 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x19b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x780e; op2val:0xbd87;
op3val:0x799b; valaddr_reg:x5; val_offset:384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 384*FLEN/8, x9, x1, x2)

inst_152:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x00e and fs2 == 1 and fe2 == 0x0f and fm2 == 0x187 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x19b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x780e; op2val:0xbd87;
op3val:0x799b; valaddr_reg:x5; val_offset:387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 387*FLEN/8, x9, x1, x2)

inst_153:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x00e and fs2 == 1 and fe2 == 0x0f and fm2 == 0x187 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x19b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x780e; op2val:0xbd87;
op3val:0x799b; valaddr_reg:x5; val_offset:390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 390*FLEN/8, x9, x1, x2)

inst_154:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x00e and fs2 == 1 and fe2 == 0x0f and fm2 == 0x187 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x19b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x780e; op2val:0xbd87;
op3val:0x799b; valaddr_reg:x5; val_offset:393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 393*FLEN/8, x9, x1, x2)

inst_155:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x309 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x06f and fs3 == 0 and fe3 == 0x1c and fm3 == 0x3cd and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7309; op2val:0xbc6f;
op3val:0x73cd; valaddr_reg:x5; val_offset:396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 396*FLEN/8, x9, x1, x2)

inst_156:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x309 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x06f and fs3 == 0 and fe3 == 0x1c and fm3 == 0x3cd and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7309; op2val:0xbc6f;
op3val:0x73cd; valaddr_reg:x5; val_offset:399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 399*FLEN/8, x9, x1, x2)

inst_157:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x309 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x06f and fs3 == 0 and fe3 == 0x1c and fm3 == 0x3cd and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7309; op2val:0xbc6f;
op3val:0x73cd; valaddr_reg:x5; val_offset:402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 402*FLEN/8, x9, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_158:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x309 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x06f and fs3 == 0 and fe3 == 0x1c and fm3 == 0x3cd and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7309; op2val:0xbc6f;
op3val:0x73cd; valaddr_reg:x5; val_offset:405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 405*FLEN/8, x9, x1, x2)

inst_159:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x309 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x06f and fs3 == 0 and fe3 == 0x1c and fm3 == 0x3cd and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7309; op2val:0xbc6f;
op3val:0x73cd; valaddr_reg:x5; val_offset:408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 408*FLEN/8, x9, x1, x2)

inst_160:
// fs1 == 0 and fe1 == 0x18 and fm1 == 0x21b and fs2 == 1 and fe2 == 0x13 and fm2 == 0x331 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x17d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x621b; op2val:0xcf31;
op3val:0x757d; valaddr_reg:x5; val_offset:411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 411*FLEN/8, x9, x1, x2)

inst_161:
// fs1 == 0 and fe1 == 0x18 and fm1 == 0x21b and fs2 == 1 and fe2 == 0x13 and fm2 == 0x331 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x17d and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x621b; op2val:0xcf31;
op3val:0x757d; valaddr_reg:x5; val_offset:414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 414*FLEN/8, x9, x1, x2)

inst_162:
// fs1 == 0 and fe1 == 0x18 and fm1 == 0x21b and fs2 == 1 and fe2 == 0x13 and fm2 == 0x331 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x17d and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x621b; op2val:0xcf31;
op3val:0x757d; valaddr_reg:x5; val_offset:417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 417*FLEN/8, x9, x1, x2)

inst_163:
// fs1 == 0 and fe1 == 0x18 and fm1 == 0x21b and fs2 == 1 and fe2 == 0x13 and fm2 == 0x331 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x17d and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x621b; op2val:0xcf31;
op3val:0x757d; valaddr_reg:x5; val_offset:420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 420*FLEN/8, x9, x1, x2)

inst_164:
// fs1 == 0 and fe1 == 0x18 and fm1 == 0x21b and fs2 == 1 and fe2 == 0x13 and fm2 == 0x331 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x17d and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x621b; op2val:0xcf31;
op3val:0x757d; valaddr_reg:x5; val_offset:423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 423*FLEN/8, x9, x1, x2)

inst_165:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x044 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x258 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x2c5 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7444; op2val:0xbe58;
op3val:0x76c5; valaddr_reg:x5; val_offset:426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 426*FLEN/8, x9, x1, x2)

inst_166:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x044 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x258 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x2c5 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7444; op2val:0xbe58;
op3val:0x76c5; valaddr_reg:x5; val_offset:429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 429*FLEN/8, x9, x1, x2)

inst_167:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x044 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x258 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x2c5 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7444; op2val:0xbe58;
op3val:0x76c5; valaddr_reg:x5; val_offset:432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 432*FLEN/8, x9, x1, x2)

inst_168:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x044 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x258 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x2c5 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7444; op2val:0xbe58;
op3val:0x76c5; valaddr_reg:x5; val_offset:435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 435*FLEN/8, x9, x1, x2)

inst_169:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x044 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x258 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x2c5 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7444; op2val:0xbe58;
op3val:0x76c5; valaddr_reg:x5; val_offset:438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 438*FLEN/8, x9, x1, x2)

inst_170:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x207 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x06d and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2ab and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7607; op2val:0xc06d;
op3val:0x7aab; valaddr_reg:x5; val_offset:441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 441*FLEN/8, x9, x1, x2)

inst_171:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x207 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x06d and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2ab and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7607; op2val:0xc06d;
op3val:0x7aab; valaddr_reg:x5; val_offset:444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 444*FLEN/8, x9, x1, x2)

inst_172:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x207 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x06d and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2ab and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7607; op2val:0xc06d;
op3val:0x7aab; valaddr_reg:x5; val_offset:447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 447*FLEN/8, x9, x1, x2)

inst_173:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x207 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x06d and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2ab and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7607; op2val:0xc06d;
op3val:0x7aab; valaddr_reg:x5; val_offset:450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 450*FLEN/8, x9, x1, x2)

inst_174:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x207 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x06d and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2ab and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7607; op2val:0xc06d;
op3val:0x7aab; valaddr_reg:x5; val_offset:453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 453*FLEN/8, x9, x1, x2)

inst_175:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x320 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x24a and fs3 == 0 and fe3 == 0x1c and fm3 == 0x19b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b20; op2val:0xb24a;
op3val:0x719b; valaddr_reg:x5; val_offset:456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 456*FLEN/8, x9, x1, x2)

inst_176:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x320 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x24a and fs3 == 0 and fe3 == 0x1c and fm3 == 0x19b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b20; op2val:0xb24a;
op3val:0x719b; valaddr_reg:x5; val_offset:459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 459*FLEN/8, x9, x1, x2)

inst_177:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x320 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x24a and fs3 == 0 and fe3 == 0x1c and fm3 == 0x19b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b20; op2val:0xb24a;
op3val:0x719b; valaddr_reg:x5; val_offset:462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 462*FLEN/8, x9, x1, x2)

inst_178:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x320 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x24a and fs3 == 0 and fe3 == 0x1c and fm3 == 0x19b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b20; op2val:0xb24a;
op3val:0x719b; valaddr_reg:x5; val_offset:465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 465*FLEN/8, x9, x1, x2)

inst_179:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x320 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x24a and fs3 == 0 and fe3 == 0x1c and fm3 == 0x19b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b20; op2val:0xb24a;
op3val:0x719b; valaddr_reg:x5; val_offset:468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 468*FLEN/8, x9, x1, x2)

inst_180:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x256 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2b5 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x150 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7656; op2val:0xb6b5;
op3val:0x7150; valaddr_reg:x5; val_offset:471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 471*FLEN/8, x9, x1, x2)

inst_181:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x256 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2b5 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x150 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7656; op2val:0xb6b5;
op3val:0x7150; valaddr_reg:x5; val_offset:474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 474*FLEN/8, x9, x1, x2)

inst_182:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x256 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2b5 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x150 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7656; op2val:0xb6b5;
op3val:0x7150; valaddr_reg:x5; val_offset:477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 477*FLEN/8, x9, x1, x2)

inst_183:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x256 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2b5 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x150 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7656; op2val:0xb6b5;
op3val:0x7150; valaddr_reg:x5; val_offset:480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 480*FLEN/8, x9, x1, x2)

inst_184:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x256 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2b5 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x150 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7656; op2val:0xb6b5;
op3val:0x7150; valaddr_reg:x5; val_offset:483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 483*FLEN/8, x9, x1, x2)

inst_185:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x14d and fs2 == 1 and fe2 == 0x0f and fm2 == 0x1e1 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3cb and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x794d; op2val:0xbde1;
op3val:0x7bcb; valaddr_reg:x5; val_offset:486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 486*FLEN/8, x9, x1, x2)

inst_186:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x14d and fs2 == 1 and fe2 == 0x0f and fm2 == 0x1e1 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3cb and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x794d; op2val:0xbde1;
op3val:0x7bcb; valaddr_reg:x5; val_offset:489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 489*FLEN/8, x9, x1, x2)

inst_187:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x14d and fs2 == 1 and fe2 == 0x0f and fm2 == 0x1e1 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3cb and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x794d; op2val:0xbde1;
op3val:0x7bcb; valaddr_reg:x5; val_offset:492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 492*FLEN/8, x9, x1, x2)

inst_188:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x14d and fs2 == 1 and fe2 == 0x0f and fm2 == 0x1e1 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3cb and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x794d; op2val:0xbde1;
op3val:0x7bcb; valaddr_reg:x5; val_offset:495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 495*FLEN/8, x9, x1, x2)

inst_189:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x14d and fs2 == 1 and fe2 == 0x0f and fm2 == 0x1e1 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3cb and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x794d; op2val:0xbde1;
op3val:0x7bcb; valaddr_reg:x5; val_offset:498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 498*FLEN/8, x9, x1, x2)

inst_190:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x274 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x398 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x220 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7274; op2val:0xc398;
op3val:0x7a20; valaddr_reg:x5; val_offset:501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 501*FLEN/8, x9, x1, x2)

inst_191:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x274 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x398 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x220 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7274; op2val:0xc398;
op3val:0x7a20; valaddr_reg:x5; val_offset:504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 504*FLEN/8, x9, x1, x2)

inst_192:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x274 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x398 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x220 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7274; op2val:0xc398;
op3val:0x7a20; valaddr_reg:x5; val_offset:507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 507*FLEN/8, x9, x1, x2)

inst_193:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x274 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x398 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x220 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7274; op2val:0xc398;
op3val:0x7a20; valaddr_reg:x5; val_offset:510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 510*FLEN/8, x9, x1, x2)

inst_194:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x274 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x398 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x220 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7274; op2val:0xc398;
op3val:0x7a20; valaddr_reg:x5; val_offset:513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 513*FLEN/8, x9, x1, x2)

inst_195:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0cc and fs2 == 1 and fe2 == 0x0a and fm2 == 0x1a5 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x2c5 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x74cc; op2val:0xa9a5;
op3val:0x62c5; valaddr_reg:x5; val_offset:516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 516*FLEN/8, x9, x1, x2)

inst_196:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0cc and fs2 == 1 and fe2 == 0x0a and fm2 == 0x1a5 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x2c5 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x74cc; op2val:0xa9a5;
op3val:0x62c5; valaddr_reg:x5; val_offset:519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 519*FLEN/8, x9, x1, x2)

inst_197:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0cc and fs2 == 1 and fe2 == 0x0a and fm2 == 0x1a5 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x2c5 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x74cc; op2val:0xa9a5;
op3val:0x62c5; valaddr_reg:x5; val_offset:522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 522*FLEN/8, x9, x1, x2)

inst_198:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0cc and fs2 == 1 and fe2 == 0x0a and fm2 == 0x1a5 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x2c5 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x74cc; op2val:0xa9a5;
op3val:0x62c5; valaddr_reg:x5; val_offset:525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 525*FLEN/8, x9, x1, x2)

inst_199:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0cc and fs2 == 1 and fe2 == 0x0a and fm2 == 0x1a5 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x2c5 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x74cc; op2val:0xa9a5;
op3val:0x62c5; valaddr_reg:x5; val_offset:528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 528*FLEN/8, x9, x1, x2)

inst_200:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x21c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x327 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x177 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a1c; op2val:0xb727;
op3val:0x7577; valaddr_reg:x5; val_offset:531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 531*FLEN/8, x9, x1, x2)

inst_201:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x21c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x327 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x177 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a1c; op2val:0xb727;
op3val:0x7577; valaddr_reg:x5; val_offset:534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 534*FLEN/8, x9, x1, x2)

inst_202:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x21c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x327 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x177 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a1c; op2val:0xb727;
op3val:0x7577; valaddr_reg:x5; val_offset:537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 537*FLEN/8, x9, x1, x2)

inst_203:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x21c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x327 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x177 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a1c; op2val:0xb727;
op3val:0x7577; valaddr_reg:x5; val_offset:540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 540*FLEN/8, x9, x1, x2)

inst_204:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x21c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x327 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x177 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a1c; op2val:0xb727;
op3val:0x7577; valaddr_reg:x5; val_offset:543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 543*FLEN/8, x9, x1, x2)

inst_205:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x171 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x11e and fs3 == 0 and fe3 == 0x1d and fm3 == 0x2f7 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7171; op2val:0xc11e;
op3val:0x76f7; valaddr_reg:x5; val_offset:546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 546*FLEN/8, x9, x1, x2)

inst_206:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x171 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x11e and fs3 == 0 and fe3 == 0x1d and fm3 == 0x2f7 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7171; op2val:0xc11e;
op3val:0x76f7; valaddr_reg:x5; val_offset:549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 549*FLEN/8, x9, x1, x2)

inst_207:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x171 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x11e and fs3 == 0 and fe3 == 0x1d and fm3 == 0x2f7 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7171; op2val:0xc11e;
op3val:0x76f7; valaddr_reg:x5; val_offset:552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 552*FLEN/8, x9, x1, x2)

inst_208:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x171 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x11e and fs3 == 0 and fe3 == 0x1d and fm3 == 0x2f7 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7171; op2val:0xc11e;
op3val:0x76f7; valaddr_reg:x5; val_offset:555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 555*FLEN/8, x9, x1, x2)

inst_209:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x171 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x11e and fs3 == 0 and fe3 == 0x1d and fm3 == 0x2f7 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7171; op2val:0xc11e;
op3val:0x76f7; valaddr_reg:x5; val_offset:558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 558*FLEN/8, x9, x1, x2)

inst_210:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x369 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x314 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x28e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7369; op2val:0xbf14;
op3val:0x768e; valaddr_reg:x5; val_offset:561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 561*FLEN/8, x9, x1, x2)

inst_211:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x369 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x314 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x28e and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7369; op2val:0xbf14;
op3val:0x768e; valaddr_reg:x5; val_offset:564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 564*FLEN/8, x9, x1, x2)

inst_212:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x369 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x314 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x28e and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7369; op2val:0xbf14;
op3val:0x768e; valaddr_reg:x5; val_offset:567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 567*FLEN/8, x9, x1, x2)

inst_213:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x369 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x314 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x28e and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7369; op2val:0xbf14;
op3val:0x768e; valaddr_reg:x5; val_offset:570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 570*FLEN/8, x9, x1, x2)

inst_214:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x369 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x314 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x28e and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7369; op2val:0xbf14;
op3val:0x768e; valaddr_reg:x5; val_offset:573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 573*FLEN/8, x9, x1, x2)

inst_215:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x322 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x37f and fs3 == 0 and fe3 == 0x1d and fm3 == 0x2af and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7722; op2val:0xbb7f;
op3val:0x76af; valaddr_reg:x5; val_offset:576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 576*FLEN/8, x9, x1, x2)

inst_216:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x322 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x37f and fs3 == 0 and fe3 == 0x1d and fm3 == 0x2af and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7722; op2val:0xbb7f;
op3val:0x76af; valaddr_reg:x5; val_offset:579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 579*FLEN/8, x9, x1, x2)

inst_217:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x322 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x37f and fs3 == 0 and fe3 == 0x1d and fm3 == 0x2af and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7722; op2val:0xbb7f;
op3val:0x76af; valaddr_reg:x5; val_offset:582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 582*FLEN/8, x9, x1, x2)

inst_218:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x322 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x37f and fs3 == 0 and fe3 == 0x1d and fm3 == 0x2af and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7722; op2val:0xbb7f;
op3val:0x76af; valaddr_reg:x5; val_offset:585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 585*FLEN/8, x9, x1, x2)

inst_219:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x322 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x37f and fs3 == 0 and fe3 == 0x1d and fm3 == 0x2af and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7722; op2val:0xbb7f;
op3val:0x76af; valaddr_reg:x5; val_offset:588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 588*FLEN/8, x9, x1, x2)

inst_220:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x340 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x03e and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3b1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7340; op2val:0xc43e;
op3val:0x7bb1; valaddr_reg:x5; val_offset:591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x5, 591*FLEN/8, x9, x1, x2)

inst_221:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x340 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x03e and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3b1 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7340; op2val:0xc43e;
op3val:0x7bb1; valaddr_reg:x5; val_offset:594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 594*FLEN/8, x9, x1, x2)

inst_222:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x340 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x03e and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3b1 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7340; op2val:0xc43e;
op3val:0x7bb1; valaddr_reg:x5; val_offset:597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 597*FLEN/8, x9, x1, x2)

inst_223:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x00a and fs2 == 1 and fe2 == 0x11 and fm2 == 0x194 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1a2 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x700a; op2val:0xc594;
op3val:0x79a2; valaddr_reg:x5; val_offset:600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 600*FLEN/8, x9, x1, x2)

inst_224:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x00a and fs2 == 1 and fe2 == 0x11 and fm2 == 0x194 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1a2 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x700a; op2val:0xc594;
op3val:0x79a2; valaddr_reg:x5; val_offset:603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 64, 0, x5, 603*FLEN/8, x9, x1, x2)

inst_225:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x00a and fs2 == 1 and fe2 == 0x11 and fm2 == 0x194 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1a2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x700a; op2val:0xc594;
op3val:0x79a2; valaddr_reg:x5; val_offset:606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 606*FLEN/8, x9, x1, x2)

inst_226:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x00a and fs2 == 1 and fe2 == 0x11 and fm2 == 0x194 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1a2 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x700a; op2val:0xc594;
op3val:0x79a2; valaddr_reg:x5; val_offset:609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 609*FLEN/8, x9, x1, x2)

inst_227:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x173 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1cf and fs3 == 0 and fe3 == 0x1c and fm3 == 0x3ea and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6d73; op2val:0xc1cf;
op3val:0x73ea; valaddr_reg:x5; val_offset:612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 32, 0, x5, 612*FLEN/8, x9, x1, x2)

inst_228:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x121 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1b8 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x357 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7921; op2val:0xb9b8;
op3val:0x7757; valaddr_reg:x5; val_offset:615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 96, 0, x5, 615*FLEN/8, x9, x1, x2)

inst_229:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x33f and fs2 == 1 and fe2 == 0x0f and fm2 == 0x05e and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3ea and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x773f; op2val:0xbc5e;
op3val:0x77ea; valaddr_reg:x5; val_offset:618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 128, 0, x5, 618*FLEN/8, x9, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(29504,32,FLEN)
NAN_BOXED(29504,16,FLEN)
NAN_BOXED(31665,32,FLEN)
NAN_BOXED(29504,32,FLEN)
NAN_BOXED(50238,16,FLEN)
NAN_BOXED(31665,32,FLEN)
NAN_BOXED(29504,32,FLEN)
NAN_BOXED(50238,16,FLEN)
NAN_BOXED(31665,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50238,16,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(29504,32,FLEN)
NAN_BOXED(29504,16,FLEN)
NAN_BOXED(29504,32,FLEN)
NAN_BOXED(28682,32,FLEN)
NAN_BOXED(50580,16,FLEN)
NAN_BOXED(31138,32,FLEN)
NAN_BOXED(28682,32,FLEN)
NAN_BOXED(50580,16,FLEN)
NAN_BOXED(50580,32,FLEN)
NAN_BOXED(28682,32,FLEN)
NAN_BOXED(50580,16,FLEN)
NAN_BOXED(28682,32,FLEN)
NAN_BOXED(28682,32,FLEN)
NAN_BOXED(28682,16,FLEN)
NAN_BOXED(28682,32,FLEN)
NAN_BOXED(28682,32,FLEN)
NAN_BOXED(28682,16,FLEN)
NAN_BOXED(31138,32,FLEN)
NAN_BOXED(28019,32,FLEN)
NAN_BOXED(49615,16,FLEN)
NAN_BOXED(29674,32,FLEN)
NAN_BOXED(28019,32,FLEN)
NAN_BOXED(49615,16,FLEN)
NAN_BOXED(49615,32,FLEN)
NAN_BOXED(28019,32,FLEN)
NAN_BOXED(49615,16,FLEN)
NAN_BOXED(29674,32,FLEN)
test_dataset_1:
NAN_BOXED(28019,32,FLEN)
NAN_BOXED(49615,16,FLEN)
NAN_BOXED(29674,32,FLEN)
NAN_BOXED(28019,32,FLEN)
NAN_BOXED(49615,16,FLEN)
NAN_BOXED(29674,32,FLEN)
NAN_BOXED(31741,32,FLEN)
NAN_BOXED(45748,16,FLEN)
NAN_BOXED(29362,32,FLEN)
NAN_BOXED(31741,32,FLEN)
NAN_BOXED(45748,16,FLEN)
NAN_BOXED(29362,32,FLEN)
NAN_BOXED(31741,32,FLEN)
NAN_BOXED(45748,16,FLEN)
NAN_BOXED(29362,32,FLEN)
NAN_BOXED(31741,32,FLEN)
NAN_BOXED(45748,16,FLEN)
NAN_BOXED(29362,32,FLEN)
NAN_BOXED(31741,32,FLEN)
NAN_BOXED(45748,16,FLEN)
NAN_BOXED(29362,32,FLEN)
NAN_BOXED(31009,32,FLEN)
NAN_BOXED(47544,16,FLEN)
NAN_BOXED(30551,32,FLEN)
NAN_BOXED(31009,32,FLEN)
NAN_BOXED(47544,16,FLEN)
NAN_BOXED(30551,32,FLEN)
NAN_BOXED(31009,32,FLEN)
NAN_BOXED(47544,16,FLEN)
NAN_BOXED(30551,32,FLEN)
test_dataset_2:
NAN_BOXED(31009,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30551,16,FLEN)
NAN_BOXED(31009,16,FLEN)
NAN_BOXED(47544,16,FLEN)
NAN_BOXED(30551,16,FLEN)
NAN_BOXED(30527,16,FLEN)
NAN_BOXED(48222,16,FLEN)
NAN_BOXED(30698,16,FLEN)
NAN_BOXED(30527,16,FLEN)
NAN_BOXED(48222,16,FLEN)
NAN_BOXED(30698,16,FLEN)
NAN_BOXED(30527,16,FLEN)
NAN_BOXED(48222,16,FLEN)
NAN_BOXED(30698,16,FLEN)
NAN_BOXED(30527,16,FLEN)
NAN_BOXED(48222,16,FLEN)
NAN_BOXED(30698,16,FLEN)
NAN_BOXED(30527,16,FLEN)
NAN_BOXED(48222,16,FLEN)
NAN_BOXED(30698,16,FLEN)
NAN_BOXED(29222,16,FLEN)
NAN_BOXED(50257,16,FLEN)
NAN_BOXED(31396,16,FLEN)
NAN_BOXED(29222,16,FLEN)
NAN_BOXED(50257,16,FLEN)
NAN_BOXED(31396,16,FLEN)
NAN_BOXED(29222,16,FLEN)
NAN_BOXED(50257,16,FLEN)
NAN_BOXED(31396,16,FLEN)
NAN_BOXED(29222,16,FLEN)
NAN_BOXED(50257,16,FLEN)
NAN_BOXED(31396,16,FLEN)
NAN_BOXED(29222,16,FLEN)
NAN_BOXED(50257,16,FLEN)
NAN_BOXED(31396,16,FLEN)
NAN_BOXED(28090,16,FLEN)
NAN_BOXED(49466,16,FLEN)
NAN_BOXED(29565,16,FLEN)
NAN_BOXED(28090,16,FLEN)
NAN_BOXED(49466,16,FLEN)
NAN_BOXED(29565,16,FLEN)
NAN_BOXED(28090,16,FLEN)
NAN_BOXED(49466,16,FLEN)
NAN_BOXED(29565,16,FLEN)
NAN_BOXED(28090,16,FLEN)
NAN_BOXED(49466,16,FLEN)
NAN_BOXED(29565,16,FLEN)
NAN_BOXED(28090,16,FLEN)
NAN_BOXED(49466,16,FLEN)
NAN_BOXED(29565,16,FLEN)
NAN_BOXED(25886,16,FLEN)
NAN_BOXED(51882,16,FLEN)
NAN_BOXED(29764,16,FLEN)
NAN_BOXED(25886,16,FLEN)
NAN_BOXED(51882,16,FLEN)
NAN_BOXED(29764,16,FLEN)
NAN_BOXED(25886,16,FLEN)
NAN_BOXED(51882,16,FLEN)
NAN_BOXED(29764,16,FLEN)
NAN_BOXED(25886,16,FLEN)
NAN_BOXED(51882,16,FLEN)
NAN_BOXED(29764,16,FLEN)
NAN_BOXED(25886,16,FLEN)
NAN_BOXED(51882,16,FLEN)
NAN_BOXED(29764,16,FLEN)
NAN_BOXED(30341,16,FLEN)
NAN_BOXED(49260,16,FLEN)
NAN_BOXED(31542,16,FLEN)
NAN_BOXED(30341,16,FLEN)
NAN_BOXED(49260,16,FLEN)
NAN_BOXED(31542,16,FLEN)
NAN_BOXED(30341,16,FLEN)
NAN_BOXED(49260,16,FLEN)
NAN_BOXED(31542,16,FLEN)
NAN_BOXED(30341,16,FLEN)
NAN_BOXED(49260,16,FLEN)
NAN_BOXED(31542,16,FLEN)
NAN_BOXED(30341,16,FLEN)
NAN_BOXED(49260,16,FLEN)
NAN_BOXED(31542,16,FLEN)
NAN_BOXED(30223,16,FLEN)
NAN_BOXED(46285,16,FLEN)
NAN_BOXED(28486,16,FLEN)
NAN_BOXED(30223,16,FLEN)
NAN_BOXED(46285,16,FLEN)
NAN_BOXED(28486,16,FLEN)
NAN_BOXED(30223,16,FLEN)
NAN_BOXED(46285,16,FLEN)
NAN_BOXED(28486,16,FLEN)
NAN_BOXED(30223,16,FLEN)
NAN_BOXED(46285,16,FLEN)
NAN_BOXED(28486,16,FLEN)
NAN_BOXED(30223,16,FLEN)
NAN_BOXED(46285,16,FLEN)
NAN_BOXED(28486,16,FLEN)
NAN_BOXED(29729,16,FLEN)
NAN_BOXED(50093,16,FLEN)
NAN_BOXED(31725,16,FLEN)
NAN_BOXED(29729,16,FLEN)
NAN_BOXED(50093,16,FLEN)
NAN_BOXED(31725,16,FLEN)
NAN_BOXED(29729,16,FLEN)
NAN_BOXED(50093,16,FLEN)
NAN_BOXED(31725,16,FLEN)
NAN_BOXED(29729,16,FLEN)
NAN_BOXED(50093,16,FLEN)
NAN_BOXED(31725,16,FLEN)
NAN_BOXED(29729,16,FLEN)
NAN_BOXED(50093,16,FLEN)
NAN_BOXED(31725,16,FLEN)
NAN_BOXED(27657,16,FLEN)
NAN_BOXED(51433,16,FLEN)
NAN_BOXED(30965,16,FLEN)
NAN_BOXED(27657,16,FLEN)
NAN_BOXED(51433,16,FLEN)
NAN_BOXED(30965,16,FLEN)
NAN_BOXED(27657,16,FLEN)
NAN_BOXED(51433,16,FLEN)
NAN_BOXED(30965,16,FLEN)
NAN_BOXED(27657,16,FLEN)
NAN_BOXED(51433,16,FLEN)
NAN_BOXED(30965,16,FLEN)
NAN_BOXED(27657,16,FLEN)
NAN_BOXED(51433,16,FLEN)
NAN_BOXED(30965,16,FLEN)
NAN_BOXED(30216,16,FLEN)
NAN_BOXED(48897,16,FLEN)
NAN_BOXED(31048,16,FLEN)
NAN_BOXED(30216,16,FLEN)
NAN_BOXED(48897,16,FLEN)
NAN_BOXED(31048,16,FLEN)
NAN_BOXED(30216,16,FLEN)
NAN_BOXED(48897,16,FLEN)
NAN_BOXED(31048,16,FLEN)
NAN_BOXED(30216,16,FLEN)
NAN_BOXED(48897,16,FLEN)
NAN_BOXED(31048,16,FLEN)
NAN_BOXED(30216,16,FLEN)
NAN_BOXED(48897,16,FLEN)
NAN_BOXED(31048,16,FLEN)
NAN_BOXED(30057,16,FLEN)
NAN_BOXED(49173,16,FLEN)
NAN_BOXED(31111,16,FLEN)
NAN_BOXED(30057,16,FLEN)
NAN_BOXED(49173,16,FLEN)
NAN_BOXED(31111,16,FLEN)
NAN_BOXED(30057,16,FLEN)
NAN_BOXED(49173,16,FLEN)
NAN_BOXED(31111,16,FLEN)
NAN_BOXED(30057,16,FLEN)
NAN_BOXED(49173,16,FLEN)
NAN_BOXED(31111,16,FLEN)
NAN_BOXED(30057,16,FLEN)
NAN_BOXED(49173,16,FLEN)
NAN_BOXED(31111,16,FLEN)
NAN_BOXED(30709,16,FLEN)
NAN_BOXED(48441,16,FLEN)
NAN_BOXED(31025,16,FLEN)
NAN_BOXED(30709,16,FLEN)
NAN_BOXED(48441,16,FLEN)
NAN_BOXED(31025,16,FLEN)
NAN_BOXED(30709,16,FLEN)
NAN_BOXED(48441,16,FLEN)
NAN_BOXED(31025,16,FLEN)
NAN_BOXED(30709,16,FLEN)
NAN_BOXED(48441,16,FLEN)
NAN_BOXED(31025,16,FLEN)
NAN_BOXED(30709,16,FLEN)
NAN_BOXED(48441,16,FLEN)
NAN_BOXED(31025,16,FLEN)
NAN_BOXED(31541,16,FLEN)
NAN_BOXED(47401,16,FLEN)
NAN_BOXED(30886,16,FLEN)
NAN_BOXED(31541,16,FLEN)
NAN_BOXED(47401,16,FLEN)
NAN_BOXED(30886,16,FLEN)
NAN_BOXED(31541,16,FLEN)
NAN_BOXED(47401,16,FLEN)
NAN_BOXED(30886,16,FLEN)
NAN_BOXED(31541,16,FLEN)
NAN_BOXED(47401,16,FLEN)
NAN_BOXED(30886,16,FLEN)
NAN_BOXED(31541,16,FLEN)
NAN_BOXED(47401,16,FLEN)
NAN_BOXED(30886,16,FLEN)
NAN_BOXED(28811,16,FLEN)
NAN_BOXED(46911,16,FLEN)
NAN_BOXED(27678,16,FLEN)
NAN_BOXED(28811,16,FLEN)
NAN_BOXED(46911,16,FLEN)
NAN_BOXED(27678,16,FLEN)
NAN_BOXED(28811,16,FLEN)
NAN_BOXED(46911,16,FLEN)
NAN_BOXED(27678,16,FLEN)
NAN_BOXED(28811,16,FLEN)
NAN_BOXED(46911,16,FLEN)
NAN_BOXED(27678,16,FLEN)
NAN_BOXED(28811,16,FLEN)
NAN_BOXED(46911,16,FLEN)
NAN_BOXED(27678,16,FLEN)
NAN_BOXED(31632,16,FLEN)
NAN_BOXED(47137,16,FLEN)
NAN_BOXED(30672,16,FLEN)
NAN_BOXED(31632,16,FLEN)
NAN_BOXED(47137,16,FLEN)
NAN_BOXED(30672,16,FLEN)
NAN_BOXED(31632,16,FLEN)
NAN_BOXED(47137,16,FLEN)
NAN_BOXED(30672,16,FLEN)
NAN_BOXED(31632,16,FLEN)
NAN_BOXED(47137,16,FLEN)
NAN_BOXED(30672,16,FLEN)
NAN_BOXED(31632,16,FLEN)
NAN_BOXED(47137,16,FLEN)
NAN_BOXED(30672,16,FLEN)
NAN_BOXED(29235,16,FLEN)
NAN_BOXED(50401,16,FLEN)
NAN_BOXED(31632,16,FLEN)
NAN_BOXED(29235,16,FLEN)
NAN_BOXED(50401,16,FLEN)
NAN_BOXED(31632,16,FLEN)
NAN_BOXED(29235,16,FLEN)
NAN_BOXED(50401,16,FLEN)
NAN_BOXED(31632,16,FLEN)
NAN_BOXED(29235,16,FLEN)
NAN_BOXED(50401,16,FLEN)
NAN_BOXED(31632,16,FLEN)
NAN_BOXED(29235,16,FLEN)
NAN_BOXED(50401,16,FLEN)
NAN_BOXED(31632,16,FLEN)
NAN_BOXED(30881,16,FLEN)
NAN_BOXED(48393,16,FLEN)
NAN_BOXED(31188,16,FLEN)
NAN_BOXED(30881,16,FLEN)
NAN_BOXED(48393,16,FLEN)
NAN_BOXED(31188,16,FLEN)
NAN_BOXED(30881,16,FLEN)
NAN_BOXED(48393,16,FLEN)
NAN_BOXED(31188,16,FLEN)
NAN_BOXED(30881,16,FLEN)
NAN_BOXED(48393,16,FLEN)
NAN_BOXED(31188,16,FLEN)
NAN_BOXED(30881,16,FLEN)
NAN_BOXED(48393,16,FLEN)
NAN_BOXED(31188,16,FLEN)
NAN_BOXED(31499,16,FLEN)
NAN_BOXED(46384,16,FLEN)
NAN_BOXED(29841,16,FLEN)
NAN_BOXED(31499,16,FLEN)
NAN_BOXED(46384,16,FLEN)
NAN_BOXED(29841,16,FLEN)
NAN_BOXED(31499,16,FLEN)
NAN_BOXED(46384,16,FLEN)
NAN_BOXED(29841,16,FLEN)
NAN_BOXED(31499,16,FLEN)
NAN_BOXED(46384,16,FLEN)
NAN_BOXED(29841,16,FLEN)
NAN_BOXED(31499,16,FLEN)
NAN_BOXED(46384,16,FLEN)
NAN_BOXED(29841,16,FLEN)
NAN_BOXED(30132,16,FLEN)
NAN_BOXED(49388,16,FLEN)
NAN_BOXED(31493,16,FLEN)
NAN_BOXED(30132,16,FLEN)
NAN_BOXED(49388,16,FLEN)
NAN_BOXED(31493,16,FLEN)
NAN_BOXED(30132,16,FLEN)
NAN_BOXED(49388,16,FLEN)
NAN_BOXED(31493,16,FLEN)
NAN_BOXED(30132,16,FLEN)
NAN_BOXED(49388,16,FLEN)
NAN_BOXED(31493,16,FLEN)
NAN_BOXED(30132,16,FLEN)
NAN_BOXED(49388,16,FLEN)
NAN_BOXED(31493,16,FLEN)
NAN_BOXED(28753,16,FLEN)
NAN_BOXED(50601,16,FLEN)
NAN_BOXED(31260,16,FLEN)
NAN_BOXED(28753,16,FLEN)
NAN_BOXED(50601,16,FLEN)
NAN_BOXED(31260,16,FLEN)
NAN_BOXED(28753,16,FLEN)
NAN_BOXED(50601,16,FLEN)
NAN_BOXED(31260,16,FLEN)
NAN_BOXED(28753,16,FLEN)
NAN_BOXED(50601,16,FLEN)
NAN_BOXED(31260,16,FLEN)
NAN_BOXED(28753,16,FLEN)
NAN_BOXED(50601,16,FLEN)
NAN_BOXED(31260,16,FLEN)
NAN_BOXED(28222,16,FLEN)
NAN_BOXED(50961,16,FLEN)
NAN_BOXED(31108,16,FLEN)
NAN_BOXED(28222,16,FLEN)
NAN_BOXED(50961,16,FLEN)
NAN_BOXED(31108,16,FLEN)
NAN_BOXED(28222,16,FLEN)
NAN_BOXED(50961,16,FLEN)
NAN_BOXED(31108,16,FLEN)
NAN_BOXED(28222,16,FLEN)
NAN_BOXED(50961,16,FLEN)
NAN_BOXED(31108,16,FLEN)
NAN_BOXED(28222,16,FLEN)
NAN_BOXED(50961,16,FLEN)
NAN_BOXED(31108,16,FLEN)
NAN_BOXED(31133,16,FLEN)
NAN_BOXED(48489,16,FLEN)
NAN_BOXED(31640,16,FLEN)
NAN_BOXED(31133,16,FLEN)
NAN_BOXED(48489,16,FLEN)
NAN_BOXED(31640,16,FLEN)
NAN_BOXED(31133,16,FLEN)
NAN_BOXED(48489,16,FLEN)
NAN_BOXED(31640,16,FLEN)
NAN_BOXED(31133,16,FLEN)
NAN_BOXED(48489,16,FLEN)
NAN_BOXED(31640,16,FLEN)
NAN_BOXED(31133,16,FLEN)
NAN_BOXED(48489,16,FLEN)
NAN_BOXED(31640,16,FLEN)
NAN_BOXED(31422,16,FLEN)
NAN_BOXED(47302,16,FLEN)
NAN_BOXED(30726,16,FLEN)
NAN_BOXED(31422,16,FLEN)
NAN_BOXED(47302,16,FLEN)
NAN_BOXED(30726,16,FLEN)
NAN_BOXED(31422,16,FLEN)
NAN_BOXED(47302,16,FLEN)
NAN_BOXED(30726,16,FLEN)
NAN_BOXED(31422,16,FLEN)
NAN_BOXED(47302,16,FLEN)
NAN_BOXED(30726,16,FLEN)
NAN_BOXED(31422,16,FLEN)
NAN_BOXED(47302,16,FLEN)
NAN_BOXED(30726,16,FLEN)
NAN_BOXED(29266,16,FLEN)
NAN_BOXED(47635,16,FLEN)
NAN_BOXED(28877,16,FLEN)
NAN_BOXED(29266,16,FLEN)
NAN_BOXED(47635,16,FLEN)
NAN_BOXED(28877,16,FLEN)
NAN_BOXED(29266,16,FLEN)
NAN_BOXED(47635,16,FLEN)
NAN_BOXED(28877,16,FLEN)
NAN_BOXED(29266,16,FLEN)
NAN_BOXED(47635,16,FLEN)
NAN_BOXED(28877,16,FLEN)
NAN_BOXED(29266,16,FLEN)
NAN_BOXED(47635,16,FLEN)
NAN_BOXED(28877,16,FLEN)
NAN_BOXED(30778,16,FLEN)
NAN_BOXED(48054,16,FLEN)
NAN_BOXED(30739,16,FLEN)
NAN_BOXED(30778,16,FLEN)
NAN_BOXED(48054,16,FLEN)
NAN_BOXED(30739,16,FLEN)
NAN_BOXED(30778,16,FLEN)
NAN_BOXED(48054,16,FLEN)
NAN_BOXED(30739,16,FLEN)
NAN_BOXED(30778,16,FLEN)
NAN_BOXED(48054,16,FLEN)
NAN_BOXED(30739,16,FLEN)
NAN_BOXED(30778,16,FLEN)
NAN_BOXED(48054,16,FLEN)
NAN_BOXED(30739,16,FLEN)
NAN_BOXED(27793,16,FLEN)
NAN_BOXED(51794,16,FLEN)
NAN_BOXED(31544,16,FLEN)
NAN_BOXED(27793,16,FLEN)
NAN_BOXED(51794,16,FLEN)
NAN_BOXED(31544,16,FLEN)
NAN_BOXED(27793,16,FLEN)
NAN_BOXED(51794,16,FLEN)
NAN_BOXED(31544,16,FLEN)
NAN_BOXED(27793,16,FLEN)
NAN_BOXED(51794,16,FLEN)
NAN_BOXED(31544,16,FLEN)
NAN_BOXED(27793,16,FLEN)
NAN_BOXED(51794,16,FLEN)
NAN_BOXED(31544,16,FLEN)
NAN_BOXED(30734,16,FLEN)
NAN_BOXED(48519,16,FLEN)
NAN_BOXED(31131,16,FLEN)
NAN_BOXED(30734,16,FLEN)
NAN_BOXED(48519,16,FLEN)
NAN_BOXED(31131,16,FLEN)
NAN_BOXED(30734,16,FLEN)
NAN_BOXED(48519,16,FLEN)
NAN_BOXED(31131,16,FLEN)
NAN_BOXED(30734,16,FLEN)
NAN_BOXED(48519,16,FLEN)
NAN_BOXED(31131,16,FLEN)
NAN_BOXED(30734,16,FLEN)
NAN_BOXED(48519,16,FLEN)
NAN_BOXED(31131,16,FLEN)
NAN_BOXED(29449,16,FLEN)
NAN_BOXED(48239,16,FLEN)
NAN_BOXED(29645,16,FLEN)
NAN_BOXED(29449,16,FLEN)
NAN_BOXED(48239,16,FLEN)
NAN_BOXED(29645,16,FLEN)
NAN_BOXED(29449,16,FLEN)
NAN_BOXED(48239,16,FLEN)
NAN_BOXED(29645,16,FLEN)
NAN_BOXED(29449,16,FLEN)
NAN_BOXED(48239,16,FLEN)
NAN_BOXED(29645,16,FLEN)
NAN_BOXED(29449,16,FLEN)
NAN_BOXED(48239,16,FLEN)
NAN_BOXED(29645,16,FLEN)
NAN_BOXED(25115,16,FLEN)
NAN_BOXED(53041,16,FLEN)
NAN_BOXED(30077,16,FLEN)
NAN_BOXED(25115,16,FLEN)
NAN_BOXED(53041,16,FLEN)
NAN_BOXED(30077,16,FLEN)
NAN_BOXED(25115,16,FLEN)
NAN_BOXED(53041,16,FLEN)
NAN_BOXED(30077,16,FLEN)
NAN_BOXED(25115,16,FLEN)
NAN_BOXED(53041,16,FLEN)
NAN_BOXED(30077,16,FLEN)
NAN_BOXED(25115,16,FLEN)
NAN_BOXED(53041,16,FLEN)
NAN_BOXED(30077,16,FLEN)
NAN_BOXED(29764,16,FLEN)
NAN_BOXED(48728,16,FLEN)
NAN_BOXED(30405,16,FLEN)
NAN_BOXED(29764,16,FLEN)
NAN_BOXED(48728,16,FLEN)
NAN_BOXED(30405,16,FLEN)
NAN_BOXED(29764,16,FLEN)
NAN_BOXED(48728,16,FLEN)
NAN_BOXED(30405,16,FLEN)
NAN_BOXED(29764,16,FLEN)
NAN_BOXED(48728,16,FLEN)
NAN_BOXED(30405,16,FLEN)
NAN_BOXED(29764,16,FLEN)
NAN_BOXED(48728,16,FLEN)
NAN_BOXED(30405,16,FLEN)
NAN_BOXED(30215,16,FLEN)
NAN_BOXED(49261,16,FLEN)
NAN_BOXED(31403,16,FLEN)
NAN_BOXED(30215,16,FLEN)
NAN_BOXED(49261,16,FLEN)
NAN_BOXED(31403,16,FLEN)
NAN_BOXED(30215,16,FLEN)
NAN_BOXED(49261,16,FLEN)
NAN_BOXED(31403,16,FLEN)
NAN_BOXED(30215,16,FLEN)
NAN_BOXED(49261,16,FLEN)
NAN_BOXED(31403,16,FLEN)
NAN_BOXED(30215,16,FLEN)
NAN_BOXED(49261,16,FLEN)
NAN_BOXED(31403,16,FLEN)
NAN_BOXED(31520,16,FLEN)
NAN_BOXED(45642,16,FLEN)
NAN_BOXED(29083,16,FLEN)
NAN_BOXED(31520,16,FLEN)
NAN_BOXED(45642,16,FLEN)
NAN_BOXED(29083,16,FLEN)
NAN_BOXED(31520,16,FLEN)
NAN_BOXED(45642,16,FLEN)
NAN_BOXED(29083,16,FLEN)
NAN_BOXED(31520,16,FLEN)
NAN_BOXED(45642,16,FLEN)
NAN_BOXED(29083,16,FLEN)
NAN_BOXED(31520,16,FLEN)
NAN_BOXED(45642,16,FLEN)
NAN_BOXED(29083,16,FLEN)
NAN_BOXED(30294,16,FLEN)
NAN_BOXED(46773,16,FLEN)
NAN_BOXED(29008,16,FLEN)
NAN_BOXED(30294,16,FLEN)
NAN_BOXED(46773,16,FLEN)
NAN_BOXED(29008,16,FLEN)
NAN_BOXED(30294,16,FLEN)
NAN_BOXED(46773,16,FLEN)
NAN_BOXED(29008,16,FLEN)
NAN_BOXED(30294,16,FLEN)
NAN_BOXED(46773,16,FLEN)
NAN_BOXED(29008,16,FLEN)
NAN_BOXED(30294,16,FLEN)
NAN_BOXED(46773,16,FLEN)
NAN_BOXED(29008,16,FLEN)
NAN_BOXED(31053,16,FLEN)
NAN_BOXED(48609,16,FLEN)
NAN_BOXED(31691,16,FLEN)
NAN_BOXED(31053,16,FLEN)
NAN_BOXED(48609,16,FLEN)
NAN_BOXED(31691,16,FLEN)
NAN_BOXED(31053,16,FLEN)
NAN_BOXED(48609,16,FLEN)
NAN_BOXED(31691,16,FLEN)
NAN_BOXED(31053,16,FLEN)
NAN_BOXED(48609,16,FLEN)
NAN_BOXED(31691,16,FLEN)
NAN_BOXED(31053,16,FLEN)
NAN_BOXED(48609,16,FLEN)
NAN_BOXED(31691,16,FLEN)
NAN_BOXED(29300,16,FLEN)
NAN_BOXED(50072,16,FLEN)
NAN_BOXED(31264,16,FLEN)
NAN_BOXED(29300,16,FLEN)
NAN_BOXED(50072,16,FLEN)
NAN_BOXED(31264,16,FLEN)
NAN_BOXED(29300,16,FLEN)
NAN_BOXED(50072,16,FLEN)
NAN_BOXED(31264,16,FLEN)
NAN_BOXED(29300,16,FLEN)
NAN_BOXED(50072,16,FLEN)
NAN_BOXED(31264,16,FLEN)
NAN_BOXED(29300,16,FLEN)
NAN_BOXED(50072,16,FLEN)
NAN_BOXED(31264,16,FLEN)
NAN_BOXED(29900,16,FLEN)
NAN_BOXED(43429,16,FLEN)
NAN_BOXED(25285,16,FLEN)
NAN_BOXED(29900,16,FLEN)
NAN_BOXED(43429,16,FLEN)
NAN_BOXED(25285,16,FLEN)
NAN_BOXED(29900,16,FLEN)
NAN_BOXED(43429,16,FLEN)
NAN_BOXED(25285,16,FLEN)
NAN_BOXED(29900,16,FLEN)
NAN_BOXED(43429,16,FLEN)
NAN_BOXED(25285,16,FLEN)
NAN_BOXED(29900,16,FLEN)
NAN_BOXED(43429,16,FLEN)
NAN_BOXED(25285,16,FLEN)
NAN_BOXED(31260,16,FLEN)
NAN_BOXED(46887,16,FLEN)
NAN_BOXED(30071,16,FLEN)
NAN_BOXED(31260,16,FLEN)
NAN_BOXED(46887,16,FLEN)
NAN_BOXED(30071,16,FLEN)
NAN_BOXED(31260,16,FLEN)
NAN_BOXED(46887,16,FLEN)
NAN_BOXED(30071,16,FLEN)
NAN_BOXED(31260,16,FLEN)
NAN_BOXED(46887,16,FLEN)
NAN_BOXED(30071,16,FLEN)
NAN_BOXED(31260,16,FLEN)
NAN_BOXED(46887,16,FLEN)
NAN_BOXED(30071,16,FLEN)
NAN_BOXED(29041,16,FLEN)
NAN_BOXED(49438,16,FLEN)
NAN_BOXED(30455,16,FLEN)
NAN_BOXED(29041,16,FLEN)
NAN_BOXED(49438,16,FLEN)
NAN_BOXED(30455,16,FLEN)
NAN_BOXED(29041,16,FLEN)
NAN_BOXED(49438,16,FLEN)
NAN_BOXED(30455,16,FLEN)
NAN_BOXED(29041,16,FLEN)
NAN_BOXED(49438,16,FLEN)
NAN_BOXED(30455,16,FLEN)
NAN_BOXED(29041,16,FLEN)
NAN_BOXED(49438,16,FLEN)
NAN_BOXED(30455,16,FLEN)
NAN_BOXED(29545,16,FLEN)
NAN_BOXED(48916,16,FLEN)
NAN_BOXED(30350,16,FLEN)
NAN_BOXED(29545,16,FLEN)
NAN_BOXED(48916,16,FLEN)
NAN_BOXED(30350,16,FLEN)
NAN_BOXED(29545,16,FLEN)
NAN_BOXED(48916,16,FLEN)
NAN_BOXED(30350,16,FLEN)
NAN_BOXED(29545,16,FLEN)
NAN_BOXED(48916,16,FLEN)
NAN_BOXED(30350,16,FLEN)
NAN_BOXED(29545,16,FLEN)
NAN_BOXED(48916,16,FLEN)
NAN_BOXED(30350,16,FLEN)
NAN_BOXED(30498,16,FLEN)
NAN_BOXED(47999,16,FLEN)
NAN_BOXED(30383,16,FLEN)
NAN_BOXED(30498,16,FLEN)
NAN_BOXED(47999,16,FLEN)
NAN_BOXED(30383,16,FLEN)
NAN_BOXED(30498,16,FLEN)
NAN_BOXED(47999,16,FLEN)
NAN_BOXED(30383,16,FLEN)
NAN_BOXED(30498,16,FLEN)
NAN_BOXED(47999,16,FLEN)
NAN_BOXED(30383,16,FLEN)
NAN_BOXED(30498,16,FLEN)
NAN_BOXED(47999,16,FLEN)
NAN_BOXED(30383,16,FLEN)
NAN_BOXED(29504,16,FLEN)
NAN_BOXED(50238,16,FLEN)
NAN_BOXED(31665,16,FLEN)
NAN_BOXED(29504,16,FLEN)
NAN_BOXED(50238,16,FLEN)
NAN_BOXED(31665,16,FLEN)
NAN_BOXED(29504,16,FLEN)
NAN_BOXED(50238,16,FLEN)
NAN_BOXED(31665,16,FLEN)
NAN_BOXED(28682,16,FLEN)
NAN_BOXED(50580,16,FLEN)
NAN_BOXED(31138,16,FLEN)
NAN_BOXED(28682,16,FLEN)
NAN_BOXED(50580,16,FLEN)
NAN_BOXED(31138,16,FLEN)
NAN_BOXED(28682,16,FLEN)
NAN_BOXED(50580,16,FLEN)
NAN_BOXED(31138,16,FLEN)
NAN_BOXED(28682,16,FLEN)
NAN_BOXED(50580,16,FLEN)
NAN_BOXED(31138,16,FLEN)
NAN_BOXED(28019,16,FLEN)
NAN_BOXED(49615,16,FLEN)
NAN_BOXED(29674,16,FLEN)
NAN_BOXED(31009,16,FLEN)
NAN_BOXED(47544,16,FLEN)
NAN_BOXED(30551,16,FLEN)
NAN_BOXED(30527,16,FLEN)
NAN_BOXED(48222,16,FLEN)
NAN_BOXED(30698,16,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x9_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_1:
    .fill 28*((SIGALIGN)/4),4,0xdeadbeef


signature_x3_0:
    .fill 32*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_0:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 144*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
