
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.12.2
// timestamp : Wed Sep 25 06:02:02 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/testing/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/testing/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV32Zhinx/rv32h_fsub.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fsub.h instruction of the RISC-V RV32_Zfinx_Zhinx,RV64_Zfinx_Zhinx extension for the fsub_b13 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32I_Zfinx_Zhinx,RV64I_Zfinx_Zhinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*Zhinx.*);def TEST_CASE_1=True;",fsub_b13)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x9,test_dataset_0)
RVTEST_SIGBASE(x10,signature_x10_1)

inst_0:
// rs1 == rs2 == rd, rs1==x7, rs2==x7, rd==x7,fs1 == 0 and fe1 == 0x1c and fm1 == 0x04c and fs2 == 0 and fe2 == 0x1c and fm2 == 0x04c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x7; op2:x7; dest:x7; op1val:0x704c; op2val:0x704c;
   valaddr_reg:x9; val_offset:0*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x14*/
TEST_FPRR_OP(fsub.h, x7, x7, x7, dyn, 0, 0, x9, 0*FLEN/8, x15, x10, x14)

inst_1:
// rs2 == rd != rs1, rs1==x16, rs2==x31, rd==x31,fs1 == 0 and fe1 == 0x1e and fm1 == 0x21b and fs2 == 0 and fe2 == 0x1e and fm2 == 0x21b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x16; op2:x31; dest:x31; op1val:0x7a1b; op2val:0x7a1b;
   valaddr_reg:x9; val_offset:2*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x14*/
TEST_FPRR_OP(fsub.h, x31, x16, x31, dyn, 0, 0, x9, 2*FLEN/8, x15, x10, x14)

inst_2:
// rs1 == rd != rs2, rs1==x28, rs2==x11, rd==x28,fs1 == 0 and fe1 == 0x1d and fm1 == 0x3ec and fs2 == 0 and fe2 == 0x1d and fm2 == 0x3ec and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x28; op2:x11; dest:x28; op1val:0x77ec; op2val:0x77ec;
   valaddr_reg:x9; val_offset:4*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x14*/
TEST_FPRR_OP(fsub.h, x28, x28, x11, dyn, 0, 0, x9, 4*FLEN/8, x15, x10, x14)

inst_3:
// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x25, rs2==x16, rd==x19,fs1 == 0 and fe1 == 0x1e and fm1 == 0x135 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x135 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x25; op2:x16; dest:x19; op1val:0x7935; op2val:0x7935;
   valaddr_reg:x9; val_offset:6*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x14*/
TEST_FPRR_OP(fsub.h, x19, x25, x16, dyn, 0, 0, x9, 6*FLEN/8, x15, x10, x14)

inst_4:
// rs1 == rs2 != rd, rs1==x8, rs2==x8, rd==x27,fs1 == 0 and fe1 == 0x1b and fm1 == 0x201 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x201 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x8; op2:x8; dest:x27; op1val:0x6e01; op2val:0x6e01;
   valaddr_reg:x9; val_offset:8*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x14*/
TEST_FPRR_OP(fsub.h, x27, x8, x8, dyn, 0, 0, x9, 8*FLEN/8, x15, x10, x14)

inst_5:
// rs1==x5, rs2==x24, rd==x22,fs1 == 0 and fe1 == 0x1e and fm1 == 0x2ae and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2ae and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x5; op2:x24; dest:x22; op1val:0x7aae; op2val:0x7aae;
   valaddr_reg:x9; val_offset:10*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x14*/
TEST_FPRR_OP(fsub.h, x22, x5, x24, dyn, 0, 0, x9, 10*FLEN/8, x15, x10, x14)

inst_6:
// rs1==x21, rs2==x25, rd==x29,fs1 == 0 and fe1 == 0x1e and fm1 == 0x218 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x218 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x21; op2:x25; dest:x29; op1val:0x7a18; op2val:0x7a18;
   valaddr_reg:x9; val_offset:12*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x14*/
TEST_FPRR_OP(fsub.h, x29, x21, x25, dyn, 0, 0, x9, 12*FLEN/8, x15, x10, x14)

inst_7:
// rs1==x3, rs2==x19, rd==x12,fs1 == 0 and fe1 == 0x1d and fm1 == 0x31f and fs2 == 0 and fe2 == 0x1d and fm2 == 0x31f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x3; op2:x19; dest:x12; op1val:0x771f; op2val:0x771f;
   valaddr_reg:x9; val_offset:14*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x14*/
TEST_FPRR_OP(fsub.h, x12, x3, x19, dyn, 0, 0, x9, 14*FLEN/8, x15, x10, x14)

inst_8:
// rs1==x0, rs2==x28, rd==x25,fs1 == 0 and fe1 == 0x1c and fm1 == 0x351 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x351 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x0; op2:x28; dest:x25; op1val:0x0; op2val:0x7351;
   valaddr_reg:x9; val_offset:16*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x14*/
TEST_FPRR_OP(fsub.h, x25, x0, x28, dyn, 0, 0, x9, 16*FLEN/8, x15, x10, x14)

inst_9:
// rs1==x12, rs2==x2, rd==x6,fs1 == 0 and fe1 == 0x1e and fm1 == 0x335 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x335 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x12; op2:x2; dest:x6; op1val:0x7b35; op2val:0x7b35;
   valaddr_reg:x9; val_offset:18*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x14*/
TEST_FPRR_OP(fsub.h, x6, x12, x2, dyn, 0, 0, x9, 18*FLEN/8, x15, x10, x14)

inst_10:
// rs1==x17, rs2==x29, rd==x13,fs1 == 0 and fe1 == 0x19 and fm1 == 0x282 and fs2 == 0 and fe2 == 0x19 and fm2 == 0x282 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x17; op2:x29; dest:x13; op1val:0x6682; op2val:0x6682;
   valaddr_reg:x9; val_offset:20*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x14*/
TEST_FPRR_OP(fsub.h, x13, x17, x29, dyn, 0, 0, x9, 20*FLEN/8, x15, x10, x14)

inst_11:
// rs1==x31, rs2==x22, rd==x1,fs1 == 0 and fe1 == 0x1e and fm1 == 0x382 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x382 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x31; op2:x22; dest:x1; op1val:0x7b82; op2val:0x7b82;
   valaddr_reg:x9; val_offset:22*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x14*/
TEST_FPRR_OP(fsub.h, x1, x31, x22, dyn, 0, 0, x9, 22*FLEN/8, x15, x10, x14)

inst_12:
// rs1==x4, rs2==x21, rd==x17,fs1 == 0 and fe1 == 0x1c and fm1 == 0x2ed and fs2 == 0 and fe2 == 0x1c and fm2 == 0x2ed and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x4; op2:x21; dest:x17; op1val:0x72ed; op2val:0x72ed;
   valaddr_reg:x9; val_offset:24*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x14*/
TEST_FPRR_OP(fsub.h, x17, x4, x21, dyn, 0, 0, x9, 24*FLEN/8, x15, x10, x14)

inst_13:
// rs1==x26, rs2==x5, rd==x4,fs1 == 0 and fe1 == 0x19 and fm1 == 0x36e and fs2 == 0 and fe2 == 0x19 and fm2 == 0x36e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x26; op2:x5; dest:x4; op1val:0x676e; op2val:0x676e;
   valaddr_reg:x9; val_offset:26*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x14*/
TEST_FPRR_OP(fsub.h, x4, x26, x5, dyn, 0, 0, x9, 26*FLEN/8, x15, x10, x14)
RVTEST_VALBASEUPD(x18,test_dataset_1)

inst_14:
// rs1==x24, rs2==x23, rd==x8,fs1 == 0 and fe1 == 0x1d and fm1 == 0x300 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x300 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x24; op2:x23; dest:x8; op1val:0x7700; op2val:0x7700;
   valaddr_reg:x18; val_offset:0*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x14*/
TEST_FPRR_OP(fsub.h, x8, x24, x23, dyn, 0, 0, x18, 0*FLEN/8, x19, x10, x14)

inst_15:
// rs1==x9, rs2==x4, rd==x11,fs1 == 0 and fe1 == 0x1c and fm1 == 0x374 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x374 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x9; op2:x4; dest:x11; op1val:0x7374; op2val:0x7374;
   valaddr_reg:x18; val_offset:2*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x14*/
TEST_FPRR_OP(fsub.h, x11, x9, x4, dyn, 0, 0, x18, 2*FLEN/8, x19, x10, x14)

inst_16:
// rs1==x23, rs2==x17, rd==x24,fs1 == 0 and fe1 == 0x1c and fm1 == 0x2ff and fs2 == 0 and fe2 == 0x1c and fm2 == 0x2ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x23; op2:x17; dest:x24; op1val:0x72ff; op2val:0x72ff;
   valaddr_reg:x18; val_offset:4*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x7*/
TEST_FPRR_OP(fsub.h, x24, x23, x17, dyn, 0, 0, x18, 4*FLEN/8, x19, x10, x7)

inst_17:
// rs1==x22, rs2==x20, rd==x14,fs1 == 0 and fe1 == 0x1d and fm1 == 0x0a2 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x0a2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x22; op2:x20; dest:x14; op1val:0x74a2; op2val:0x74a2;
   valaddr_reg:x18; val_offset:6*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x7*/
TEST_FPRR_OP(fsub.h, x14, x22, x20, dyn, 0, 0, x18, 6*FLEN/8, x19, x10, x7)
RVTEST_SIGBASE(x4,signature_x4_0)

inst_18:
// rs1==x10, rs2==x27, rd==x15,fs1 == 0 and fe1 == 0x1e and fm1 == 0x2b2 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2b2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x10; op2:x27; dest:x15; op1val:0x7ab2; op2val:0x7ab2;
   valaddr_reg:x18; val_offset:8*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x7*/
TEST_FPRR_OP(fsub.h, x15, x10, x27, dyn, 0, 0, x18, 8*FLEN/8, x19, x4, x7)

inst_19:
// rs1==x30, rs2==x12, rd==x26,fs1 == 0 and fe1 == 0x1e and fm1 == 0x122 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x122 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x12; dest:x26; op1val:0x7922; op2val:0x7922;
   valaddr_reg:x18; val_offset:10*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x7*/
TEST_FPRR_OP(fsub.h, x26, x30, x12, dyn, 0, 0, x18, 10*FLEN/8, x19, x4, x7)

inst_20:
// rs1==x14, rs2==x9, rd==x16,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ef and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ef and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x14; op2:x9; dest:x16; op1val:0x7bef; op2val:0x7bef;
   valaddr_reg:x18; val_offset:12*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x7*/
TEST_FPRR_OP(fsub.h, x16, x14, x9, dyn, 0, 0, x18, 12*FLEN/8, x19, x4, x7)

inst_21:
// rs1==x6, rs2==x15, rd==x21,fs1 == 0 and fe1 == 0x1b and fm1 == 0x3bb and fs2 == 0 and fe2 == 0x1b and fm2 == 0x3bb and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x6; op2:x15; dest:x21; op1val:0x6fbb; op2val:0x6fbb;
   valaddr_reg:x18; val_offset:14*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x7*/
TEST_FPRR_OP(fsub.h, x21, x6, x15, dyn, 0, 0, x18, 14*FLEN/8, x19, x4, x7)

inst_22:
// rs1==x2, rs2==x26, rd==x10,fs1 == 0 and fe1 == 0x1e and fm1 == 0x1c4 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1c4 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x2; op2:x26; dest:x10; op1val:0x79c4; op2val:0x79c4;
   valaddr_reg:x18; val_offset:16*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x7*/
TEST_FPRR_OP(fsub.h, x10, x2, x26, dyn, 0, 0, x18, 16*FLEN/8, x19, x4, x7)

inst_23:
// rs1==x11, rs2==x1, rd==x5,fs1 == 0 and fe1 == 0x1e and fm1 == 0x37c and fs2 == 0 and fe2 == 0x1e and fm2 == 0x37c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x11; op2:x1; dest:x5; op1val:0x7b7c; op2val:0x7b7c;
   valaddr_reg:x18; val_offset:18*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x7*/
TEST_FPRR_OP(fsub.h, x5, x11, x1, dyn, 0, 0, x18, 18*FLEN/8, x19, x4, x7)

inst_24:
// rs1==x1, rs2==x13, rd==x9,fs1 == 0 and fe1 == 0x1e and fm1 == 0x2a3 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2a3 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x1; op2:x13; dest:x9; op1val:0x7aa3; op2val:0x7aa3;
   valaddr_reg:x18; val_offset:20*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x7*/
TEST_FPRR_OP(fsub.h, x9, x1, x13, dyn, 0, 0, x18, 20*FLEN/8, x19, x4, x7)

inst_25:
// rs1==x27, rs2==x30, rd==x3,fs1 == 0 and fe1 == 0x1d and fm1 == 0x0d9 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x0d9 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x27; op2:x30; dest:x3; op1val:0x74d9; op2val:0x74d9;
   valaddr_reg:x18; val_offset:22*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x7*/
TEST_FPRR_OP(fsub.h, x3, x27, x30, dyn, 0, 0, x18, 22*FLEN/8, x19, x4, x7)
RVTEST_VALBASEUPD(x5,test_dataset_2)

inst_26:
// rs1==x29, rs2==x3, rd==x20,fs1 == 0 and fe1 == 0x1e and fm1 == 0x30e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x30e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x29; op2:x3; dest:x20; op1val:0x7b0e; op2val:0x7b0e;
   valaddr_reg:x5; val_offset:0*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x7*/
TEST_FPRR_OP(fsub.h, x20, x29, x3, dyn, 0, 0, x5, 0*FLEN/8, x8, x4, x7)

inst_27:
// rs1==x19, rs2==x0, rd==x2,fs1 == 0 and fe1 == 0x1e and fm1 == 0x00a and fs2 == 0 and fe2 == 0x1e and fm2 == 0x00a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x19; op2:x0; dest:x2; op1val:0x780a; op2val:0x0;
   valaddr_reg:x5; val_offset:2*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x7*/
TEST_FPRR_OP(fsub.h, x2, x19, x0, dyn, 0, 0, x5, 2*FLEN/8, x8, x4, x7)

inst_28:
// rs1==x20, rs2==x14, rd==x18,fs1 == 0 and fe1 == 0x1a and fm1 == 0x06a and fs2 == 0 and fe2 == 0x1a and fm2 == 0x06a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x20; op2:x14; dest:x18; op1val:0x686a; op2val:0x686a;
   valaddr_reg:x5; val_offset:4*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x7*/
TEST_FPRR_OP(fsub.h, x18, x20, x14, dyn, 0, 0, x5, 4*FLEN/8, x8, x4, x7)

inst_29:
// rs1==x15, rs2==x18, rd==x0,fs1 == 0 and fe1 == 0x1e and fm1 == 0x260 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x260 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x15; op2:x18; dest:x0; op1val:0x7a60; op2val:0x7a60;
   valaddr_reg:x5; val_offset:6*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x0, x15, x18, dyn, 0, 0, x5, 6*FLEN/8, x8, x4, x1)

inst_30:
// rs1==x13, rs2==x10, rd==x23,fs1 == 0 and fe1 == 0x1c and fm1 == 0x188 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x188 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x13; op2:x10; dest:x23; op1val:0x7188; op2val:0x7188;
   valaddr_reg:x5; val_offset:8*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x23, x13, x10, dyn, 0, 0, x5, 8*FLEN/8, x8, x4, x1)

inst_31:
// rs1==x18, rs2==x6, rd==x30,fs1 == 0 and fe1 == 0x1e and fm1 == 0x19f and fs2 == 0 and fe2 == 0x1e and fm2 == 0x19f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x18; op2:x6; dest:x30; op1val:0x799f; op2val:0x799f;
   valaddr_reg:x5; val_offset:10*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x30, x18, x6, dyn, 0, 0, x5, 10*FLEN/8, x8, x4, x1)

inst_32:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1fe and fs2 == 0 and fe2 == 0x1d and fm2 == 0x1fe and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x75fe; op2val:0x75fe;
   valaddr_reg:x5; val_offset:12*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 12*FLEN/8, x8, x4, x1)

inst_33:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x010 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x010 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7810; op2val:0x7810;
   valaddr_reg:x5; val_offset:14*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 14*FLEN/8, x8, x4, x1)

inst_34:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x02a and fs2 == 0 and fe2 == 0x1e and fm2 == 0x02a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x782a; op2val:0x782a;
   valaddr_reg:x5; val_offset:16*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 16*FLEN/8, x8, x4, x1)

inst_35:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3d4 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x3d4 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x77d4; op2val:0x77d4;
   valaddr_reg:x5; val_offset:18*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 18*FLEN/8, x8, x4, x1)

inst_36:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x190 and fs2 == 0 and fe2 == 0x1a and fm2 == 0x190 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6990; op2val:0x6990;
   valaddr_reg:x5; val_offset:20*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 20*FLEN/8, x8, x4, x1)

inst_37:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3dc and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3dc and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bdc; op2val:0x7bdc;
   valaddr_reg:x5; val_offset:22*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 22*FLEN/8, x8, x4, x1)

inst_38:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x24b and fs2 == 0 and fe2 == 0x1d and fm2 == 0x24b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x764b; op2val:0x764b;
   valaddr_reg:x5; val_offset:24*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 24*FLEN/8, x8, x4, x1)

inst_39:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x004 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x004 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7804; op2val:0x7804;
   valaddr_reg:x5; val_offset:26*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 26*FLEN/8, x8, x4, x1)

inst_40:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x229 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x229 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a29; op2val:0x7a29;
   valaddr_reg:x5; val_offset:28*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 28*FLEN/8, x8, x4, x1)

inst_41:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2e1 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2e1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ae1; op2val:0x7ae1;
   valaddr_reg:x5; val_offset:30*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 30*FLEN/8, x8, x4, x1)

inst_42:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x01b and fs2 == 0 and fe2 == 0x1e and fm2 == 0x01b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x781b; op2val:0x781b;
   valaddr_reg:x5; val_offset:32*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 32*FLEN/8, x8, x4, x1)

inst_43:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x09e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x09e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x789e; op2val:0x789e;
   valaddr_reg:x5; val_offset:34*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 34*FLEN/8, x8, x4, x1)

inst_44:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x04e and fs2 == 0 and fe2 == 0x1d and fm2 == 0x04e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x744e; op2val:0x744e;
   valaddr_reg:x5; val_offset:36*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 36*FLEN/8, x8, x4, x1)

inst_45:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3a7 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3a7 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ba7; op2val:0x7ba7;
   valaddr_reg:x5; val_offset:38*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 38*FLEN/8, x8, x4, x1)

inst_46:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x244 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x244 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a44; op2val:0x7a44;
   valaddr_reg:x5; val_offset:40*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 40*FLEN/8, x8, x4, x1)

inst_47:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x316 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x316 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b16; op2val:0x7b16;
   valaddr_reg:x5; val_offset:42*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 42*FLEN/8, x8, x4, x1)

inst_48:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x278 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x278 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a78; op2val:0x7a78;
   valaddr_reg:x5; val_offset:44*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 44*FLEN/8, x8, x4, x1)

inst_49:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x07d and fs2 == 0 and fe2 == 0x1e and fm2 == 0x07d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x787d; op2val:0x787d;
   valaddr_reg:x5; val_offset:46*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 46*FLEN/8, x8, x4, x1)

inst_50:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x32e and fs2 == 0 and fe2 == 0x1a and fm2 == 0x32e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6b2e; op2val:0x6b2e;
   valaddr_reg:x5; val_offset:48*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 48*FLEN/8, x8, x4, x1)

inst_51:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x08e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x08e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x788e; op2val:0x788e;
   valaddr_reg:x5; val_offset:50*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 50*FLEN/8, x8, x4, x1)

inst_52:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x009 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x009 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7809; op2val:0x7809;
   valaddr_reg:x5; val_offset:52*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 52*FLEN/8, x8, x4, x1)

inst_53:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1b4 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x1b4 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x75b4; op2val:0x75b4;
   valaddr_reg:x5; val_offset:54*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 54*FLEN/8, x8, x4, x1)

inst_54:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x04e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x04e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x784e; op2val:0x784e;
   valaddr_reg:x5; val_offset:56*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 56*FLEN/8, x8, x4, x1)

inst_55:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0e5 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x0e5 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x78e5; op2val:0x78e5;
   valaddr_reg:x5; val_offset:58*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 58*FLEN/8, x8, x4, x1)

inst_56:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x328 and fs2 == 0 and fe2 == 0x19 and fm2 == 0x328 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6728; op2val:0x6728;
   valaddr_reg:x5; val_offset:60*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 60*FLEN/8, x8, x4, x1)

inst_57:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x1ab and fs2 == 0 and fe2 == 0x1c and fm2 == 0x1ab and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x71ab; op2val:0x71ab;
   valaddr_reg:x5; val_offset:62*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 62*FLEN/8, x8, x4, x1)

inst_58:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2e2 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2e2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ae2; op2val:0x7ae2;
   valaddr_reg:x5; val_offset:64*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 64*FLEN/8, x8, x4, x1)

inst_59:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x25f and fs2 == 0 and fe2 == 0x1e and fm2 == 0x25f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a5f; op2val:0x7a5f;
   valaddr_reg:x5; val_offset:66*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 66*FLEN/8, x8, x4, x1)

inst_60:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x015 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x015 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7415; op2val:0x7415;
   valaddr_reg:x5; val_offset:68*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 68*FLEN/8, x8, x4, x1)

inst_61:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x161 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x161 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7961; op2val:0x7961;
   valaddr_reg:x5; val_offset:70*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 70*FLEN/8, x8, x4, x1)

inst_62:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x045 and fs2 == 0 and fe2 == 0x19 and fm2 == 0x045 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6445; op2val:0x6445;
   valaddr_reg:x5; val_offset:72*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 72*FLEN/8, x8, x4, x1)

inst_63:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x20a and fs2 == 0 and fe2 == 0x1e and fm2 == 0x20a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a0a; op2val:0x7a0a;
   valaddr_reg:x5; val_offset:74*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 74*FLEN/8, x8, x4, x1)

inst_64:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x300 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x300 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6f00; op2val:0x6f00;
   valaddr_reg:x5; val_offset:76*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 76*FLEN/8, x8, x4, x1)

inst_65:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x182 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x182 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7582; op2val:0x7582;
   valaddr_reg:x5; val_offset:78*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 78*FLEN/8, x8, x4, x1)

inst_66:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x11b and fs2 == 0 and fe2 == 0x1c and fm2 == 0x11b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x711b; op2val:0x711b;
   valaddr_reg:x5; val_offset:80*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 80*FLEN/8, x8, x4, x1)

inst_67:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x160 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x160 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7160; op2val:0x7160;
   valaddr_reg:x5; val_offset:82*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 82*FLEN/8, x8, x4, x1)

inst_68:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1b0 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1b0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x79b0; op2val:0x79b0;
   valaddr_reg:x5; val_offset:84*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 84*FLEN/8, x8, x4, x1)

inst_69:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x126 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x126 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7526; op2val:0x7526;
   valaddr_reg:x5; val_offset:86*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 86*FLEN/8, x8, x4, x1)

inst_70:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x20c and fs2 == 0 and fe2 == 0x19 and fm2 == 0x20c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x660c; op2val:0x660c;
   valaddr_reg:x5; val_offset:88*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 88*FLEN/8, x8, x4, x1)

inst_71:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2bb and fs2 == 0 and fe2 == 0x1d and fm2 == 0x2bb and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x76bb; op2val:0x76bb;
   valaddr_reg:x5; val_offset:90*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 90*FLEN/8, x8, x4, x1)

inst_72:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x2f5 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x2f5 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6ef5; op2val:0x6ef5;
   valaddr_reg:x5; val_offset:92*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 92*FLEN/8, x8, x4, x1)

inst_73:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x014 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x014 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7814; op2val:0x7814;
   valaddr_reg:x5; val_offset:94*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 94*FLEN/8, x8, x4, x1)

inst_74:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0d7 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x0d7 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x78d7; op2val:0x78d7;
   valaddr_reg:x5; val_offset:96*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 96*FLEN/8, x8, x4, x1)

inst_75:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x153 and fs2 == 0 and fe2 == 0x19 and fm2 == 0x153 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6553; op2val:0x6553;
   valaddr_reg:x5; val_offset:98*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 98*FLEN/8, x8, x4, x1)

inst_76:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x0af and fs2 == 0 and fe2 == 0x1c and fm2 == 0x0af and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x70af; op2val:0x70af;
   valaddr_reg:x5; val_offset:100*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 100*FLEN/8, x8, x4, x1)

inst_77:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x11f and fs2 == 0 and fe2 == 0x1c and fm2 == 0x11f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x711f; op2val:0x711f;
   valaddr_reg:x5; val_offset:102*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 102*FLEN/8, x8, x4, x1)

inst_78:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x16c and fs2 == 0 and fe2 == 0x1e and fm2 == 0x16c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x796c; op2val:0x796c;
   valaddr_reg:x5; val_offset:104*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 104*FLEN/8, x8, x4, x1)

inst_79:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x30e and fs2 == 0 and fe2 == 0x1c and fm2 == 0x30e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x730e; op2val:0x730e;
   valaddr_reg:x5; val_offset:106*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 106*FLEN/8, x8, x4, x1)

inst_80:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x261 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x261 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a61; op2val:0x7a61;
   valaddr_reg:x5; val_offset:108*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 108*FLEN/8, x8, x4, x1)

inst_81:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x323 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x323 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7323; op2val:0x7323;
   valaddr_reg:x5; val_offset:110*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 110*FLEN/8, x8, x4, x1)

inst_82:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x250 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x250 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7650; op2val:0x7650;
   valaddr_reg:x5; val_offset:112*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 112*FLEN/8, x8, x4, x1)

inst_83:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x123 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x123 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7523; op2val:0x7523;
   valaddr_reg:x5; val_offset:114*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 114*FLEN/8, x8, x4, x1)

inst_84:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x385 and fs2 == 0 and fe2 == 0x1a and fm2 == 0x385 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6b85; op2val:0x6b85;
   valaddr_reg:x5; val_offset:116*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 116*FLEN/8, x8, x4, x1)

inst_85:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3bd and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3bd and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bbd; op2val:0x7bbd;
   valaddr_reg:x5; val_offset:118*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 118*FLEN/8, x8, x4, x1)

inst_86:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0e6 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x0e6 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x74e6; op2val:0x74e6;
   valaddr_reg:x5; val_offset:120*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 120*FLEN/8, x8, x4, x1)

inst_87:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0f6 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x0f6 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x74f6; op2val:0x74f6;
   valaddr_reg:x5; val_offset:122*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 122*FLEN/8, x8, x4, x1)

inst_88:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1f2 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1f2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x79f2; op2val:0x79f2;
   valaddr_reg:x5; val_offset:124*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 124*FLEN/8, x8, x4, x1)

inst_89:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x009 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x009 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7409; op2val:0x7409;
   valaddr_reg:x5; val_offset:126*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 126*FLEN/8, x8, x4, x1)

inst_90:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x306 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x306 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b06; op2val:0x7b06;
   valaddr_reg:x5; val_offset:128*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 128*FLEN/8, x8, x4, x1)

inst_91:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x28d and fs2 == 0 and fe2 == 0x1e and fm2 == 0x28d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a8d; op2val:0x7a8d;
   valaddr_reg:x5; val_offset:130*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 130*FLEN/8, x8, x4, x1)

inst_92:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x08f and fs2 == 0 and fe2 == 0x1e and fm2 == 0x08f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x788f; op2val:0x788f;
   valaddr_reg:x5; val_offset:132*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 132*FLEN/8, x8, x4, x1)

inst_93:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2f0 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2f0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7af0; op2val:0x7af0;
   valaddr_reg:x5; val_offset:134*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 134*FLEN/8, x8, x4, x1)

inst_94:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1a1 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1a1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x79a1; op2val:0x79a1;
   valaddr_reg:x5; val_offset:136*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 136*FLEN/8, x8, x4, x1)

inst_95:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x20b and fs2 == 0 and fe2 == 0x1d and fm2 == 0x20b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x760b; op2val:0x760b;
   valaddr_reg:x5; val_offset:138*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 138*FLEN/8, x8, x4, x1)

inst_96:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x294 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x294 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7294; op2val:0x7294;
   valaddr_reg:x5; val_offset:140*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 140*FLEN/8, x8, x4, x1)

inst_97:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2ec and fs2 == 0 and fe2 == 0x1d and fm2 == 0x2ec and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x76ec; op2val:0x76ec;
   valaddr_reg:x5; val_offset:142*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 142*FLEN/8, x8, x4, x1)

inst_98:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x2ae and fs2 == 0 and fe2 == 0x1b and fm2 == 0x2ae and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6eae; op2val:0x6eae;
   valaddr_reg:x5; val_offset:144*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 144*FLEN/8, x8, x4, x1)

inst_99:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0bc and fs2 == 0 and fe2 == 0x1d and fm2 == 0x0bc and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x74bc; op2val:0x74bc;
   valaddr_reg:x5; val_offset:146*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 146*FLEN/8, x8, x4, x1)

inst_100:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x133 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x133 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7533; op2val:0x7533;
   valaddr_reg:x5; val_offset:148*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 148*FLEN/8, x8, x4, x1)

inst_101:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x331 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x331 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b31; op2val:0x7b31;
   valaddr_reg:x5; val_offset:150*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 150*FLEN/8, x8, x4, x1)

inst_102:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x26c and fs2 == 0 and fe2 == 0x1c and fm2 == 0x26c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x726c; op2val:0x726c;
   valaddr_reg:x5; val_offset:152*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 152*FLEN/8, x8, x4, x1)

inst_103:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3e4 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3e4 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7be4; op2val:0x7be4;
   valaddr_reg:x5; val_offset:154*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 154*FLEN/8, x8, x4, x1)

inst_104:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x16c and fs2 == 0 and fe2 == 0x1d and fm2 == 0x16c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x756c; op2val:0x756c;
   valaddr_reg:x5; val_offset:156*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 156*FLEN/8, x8, x4, x1)

inst_105:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x164 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x164 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7964; op2val:0x7964;
   valaddr_reg:x5; val_offset:158*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 158*FLEN/8, x8, x4, x1)

inst_106:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x374 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x374 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b74; op2val:0x7b74;
   valaddr_reg:x5; val_offset:160*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 160*FLEN/8, x8, x4, x1)

inst_107:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3bf and fs2 == 0 and fe2 == 0x1d and fm2 == 0x3bf and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x77bf; op2val:0x77bf;
   valaddr_reg:x5; val_offset:162*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 162*FLEN/8, x8, x4, x1)

inst_108:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x381 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x381 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7381; op2val:0x7381;
   valaddr_reg:x5; val_offset:164*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 164*FLEN/8, x8, x4, x1)

inst_109:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x16a and fs2 == 0 and fe2 == 0x1b and fm2 == 0x16a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6d6a; op2val:0x6d6a;
   valaddr_reg:x5; val_offset:166*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 166*FLEN/8, x8, x4, x1)

inst_110:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x348 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x348 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b48; op2val:0x7b48;
   valaddr_reg:x5; val_offset:168*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 168*FLEN/8, x8, x4, x1)

inst_111:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x211 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x211 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a11; op2val:0x7a11;
   valaddr_reg:x5; val_offset:170*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 170*FLEN/8, x8, x4, x1)

inst_112:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2b9 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2b9 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ab9; op2val:0x7ab9;
   valaddr_reg:x5; val_offset:172*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 172*FLEN/8, x8, x4, x1)

inst_113:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x171 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x171 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7571; op2val:0x7571;
   valaddr_reg:x5; val_offset:174*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 174*FLEN/8, x8, x4, x1)

inst_114:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2ef and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2ef and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7aef; op2val:0x7aef;
   valaddr_reg:x5; val_offset:176*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 176*FLEN/8, x8, x4, x1)

inst_115:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3a1 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3a1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ba1; op2val:0x7ba1;
   valaddr_reg:x5; val_offset:178*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 178*FLEN/8, x8, x4, x1)

inst_116:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x054 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x054 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7054; op2val:0x7054;
   valaddr_reg:x5; val_offset:180*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 180*FLEN/8, x8, x4, x1)

inst_117:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x2ab and fs2 == 0 and fe2 == 0x1b and fm2 == 0x2ab and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6eab; op2val:0x6eab;
   valaddr_reg:x5; val_offset:182*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 182*FLEN/8, x8, x4, x1)

inst_118:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x0ae and fs2 == 0 and fe2 == 0x1b and fm2 == 0x0ae and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6cae; op2val:0x6cae;
   valaddr_reg:x5; val_offset:184*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 184*FLEN/8, x8, x4, x1)

inst_119:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x24d and fs2 == 0 and fe2 == 0x1e and fm2 == 0x24d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a4d; op2val:0x7a4d;
   valaddr_reg:x5; val_offset:186*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 186*FLEN/8, x8, x4, x1)

inst_120:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x173 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x173 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7573; op2val:0x7573;
   valaddr_reg:x5; val_offset:188*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 188*FLEN/8, x8, x4, x1)

inst_121:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x240 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x240 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a40; op2val:0x7a40;
   valaddr_reg:x5; val_offset:190*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 190*FLEN/8, x8, x4, x1)

inst_122:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x090 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x090 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7890; op2val:0x7890;
   valaddr_reg:x5; val_offset:192*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 192*FLEN/8, x8, x4, x1)

inst_123:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x13a and fs2 == 0 and fe2 == 0x1b and fm2 == 0x13a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6d3a; op2val:0x6d3a;
   valaddr_reg:x5; val_offset:194*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 194*FLEN/8, x8, x4, x1)

inst_124:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x31f and fs2 == 0 and fe2 == 0x1e and fm2 == 0x31f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b1f; op2val:0x7b1f;
   valaddr_reg:x5; val_offset:196*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 196*FLEN/8, x8, x4, x1)

inst_125:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x365 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x365 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b65; op2val:0x7b65;
   valaddr_reg:x5; val_offset:198*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 198*FLEN/8, x8, x4, x1)

inst_126:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x06e and fs2 == 0 and fe2 == 0x1d and fm2 == 0x06e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x746e; op2val:0x746e;
   valaddr_reg:x5; val_offset:200*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 200*FLEN/8, x8, x4, x1)

inst_127:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x29e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x29e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a9e; op2val:0x7a9e;
   valaddr_reg:x5; val_offset:202*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 202*FLEN/8, x8, x4, x1)

inst_128:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x15c and fs2 == 0 and fe2 == 0x1e and fm2 == 0x15c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x795c; op2val:0x795c;
   valaddr_reg:x5; val_offset:204*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 204*FLEN/8, x8, x4, x1)

inst_129:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x35c and fs2 == 0 and fe2 == 0x1b and fm2 == 0x35c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6f5c; op2val:0x6f5c;
   valaddr_reg:x5; val_offset:206*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 206*FLEN/8, x8, x4, x1)

inst_130:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x11e and fs2 == 0 and fe2 == 0x1a and fm2 == 0x11e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x691e; op2val:0x691e;
   valaddr_reg:x5; val_offset:208*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 208*FLEN/8, x8, x4, x1)

inst_131:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3e6 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3e6 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7be6; op2val:0x7be6;
   valaddr_reg:x5; val_offset:210*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 210*FLEN/8, x8, x4, x1)

inst_132:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x364 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x364 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6f64; op2val:0x6f64;
   valaddr_reg:x5; val_offset:212*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 212*FLEN/8, x8, x4, x1)

inst_133:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x3b8 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x3b8 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x73b8; op2val:0x73b8;
   valaddr_reg:x5; val_offset:214*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 214*FLEN/8, x8, x4, x1)

inst_134:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x294 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x294 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e94; op2val:0x6e94;
   valaddr_reg:x5; val_offset:216*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 216*FLEN/8, x8, x4, x1)

inst_135:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x20c and fs2 == 0 and fe2 == 0x1d and fm2 == 0x20c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x760c; op2val:0x760c;
   valaddr_reg:x5; val_offset:218*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 218*FLEN/8, x8, x4, x1)

inst_136:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x345 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x345 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b45; op2val:0x7b45;
   valaddr_reg:x5; val_offset:220*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 220*FLEN/8, x8, x4, x1)

inst_137:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x00d and fs2 == 0 and fe2 == 0x1d and fm2 == 0x00d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x740d; op2val:0x740d;
   valaddr_reg:x5; val_offset:222*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 222*FLEN/8, x8, x4, x1)

inst_138:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x267 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x267 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e67; op2val:0x6e67;
   valaddr_reg:x5; val_offset:224*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 224*FLEN/8, x8, x4, x1)

inst_139:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x111 and fs2 == 0 and fe2 == 0x1a and fm2 == 0x111 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6911; op2val:0x6911;
   valaddr_reg:x5; val_offset:226*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 226*FLEN/8, x8, x4, x1)

inst_140:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3db and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3db and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bdb; op2val:0x7bdb;
   valaddr_reg:x5; val_offset:228*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 228*FLEN/8, x8, x4, x1)

inst_141:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0c5 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x0c5 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x78c5; op2val:0x78c5;
   valaddr_reg:x5; val_offset:230*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 230*FLEN/8, x8, x4, x1)

inst_142:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x102 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x102 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7502; op2val:0x7502;
   valaddr_reg:x5; val_offset:232*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 232*FLEN/8, x8, x4, x1)

inst_143:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x34d and fs2 == 0 and fe2 == 0x1e and fm2 == 0x34d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b4d; op2val:0x7b4d;
   valaddr_reg:x5; val_offset:234*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 234*FLEN/8, x8, x4, x1)

inst_144:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3c1 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3c1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bc1; op2val:0x7bc1;
   valaddr_reg:x5; val_offset:236*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 236*FLEN/8, x8, x4, x1)

inst_145:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x2e2 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x2e2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x72e2; op2val:0x72e2;
   valaddr_reg:x5; val_offset:238*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 238*FLEN/8, x8, x4, x1)
RVTEST_SIGBASE(x4,signature_x4_1)

inst_146:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3d5 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3d5 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bd5; op2val:0x7bd5;
   valaddr_reg:x5; val_offset:240*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 240*FLEN/8, x8, x4, x1)

inst_147:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x180 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x180 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7980; op2val:0x7980;
   valaddr_reg:x5; val_offset:242*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 242*FLEN/8, x8, x4, x1)

inst_148:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x024 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x024 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7424; op2val:0x7424;
   valaddr_reg:x5; val_offset:244*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 244*FLEN/8, x8, x4, x1)

inst_149:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0ea and fs2 == 0 and fe2 == 0x1d and fm2 == 0x0ea and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x74ea; op2val:0x74ea;
   valaddr_reg:x5; val_offset:246*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 246*FLEN/8, x8, x4, x1)

inst_150:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x134 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x134 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6d34; op2val:0x6d34;
   valaddr_reg:x5; val_offset:248*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 248*FLEN/8, x8, x4, x1)

inst_151:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x136 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x136 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7936; op2val:0x7936;
   valaddr_reg:x5; val_offset:250*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 250*FLEN/8, x8, x4, x1)

inst_152:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x385 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x385 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b85; op2val:0x7b85;
   valaddr_reg:x5; val_offset:252*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 252*FLEN/8, x8, x4, x1)

inst_153:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0e7 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x0e7 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x74e7; op2val:0x74e7;
   valaddr_reg:x5; val_offset:254*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 254*FLEN/8, x8, x4, x1)

inst_154:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x110 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x110 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7510; op2val:0x7510;
   valaddr_reg:x5; val_offset:256*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 256*FLEN/8, x8, x4, x1)

inst_155:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x324 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x324 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b24; op2val:0x7b24;
   valaddr_reg:x5; val_offset:258*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 258*FLEN/8, x8, x4, x1)

inst_156:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x158 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x158 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7558; op2val:0x7558;
   valaddr_reg:x5; val_offset:260*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 260*FLEN/8, x8, x4, x1)

inst_157:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0a1 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x0a1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x78a1; op2val:0x78a1;
   valaddr_reg:x5; val_offset:262*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 262*FLEN/8, x8, x4, x1)

inst_158:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x3d6 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x3d6 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x73d6; op2val:0x73d6;
   valaddr_reg:x5; val_offset:264*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 264*FLEN/8, x8, x4, x1)

inst_159:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x3cb and fs2 == 0 and fe2 == 0x1c and fm2 == 0x3cb and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x73cb; op2val:0x73cb;
   valaddr_reg:x5; val_offset:266*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 266*FLEN/8, x8, x4, x1)

inst_160:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x068 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x068 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7868; op2val:0x7868;
   valaddr_reg:x5; val_offset:268*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 268*FLEN/8, x8, x4, x1)

inst_161:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x0ce and fs2 == 0 and fe2 == 0x1b and fm2 == 0x0ce and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6cce; op2val:0x6cce;
   valaddr_reg:x5; val_offset:270*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 270*FLEN/8, x8, x4, x1)

inst_162:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0a6 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x0a6 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x74a6; op2val:0x74a6;
   valaddr_reg:x5; val_offset:272*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 272*FLEN/8, x8, x4, x1)

inst_163:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3e3 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x3e3 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x77e3; op2val:0x77e3;
   valaddr_reg:x5; val_offset:274*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 274*FLEN/8, x8, x4, x1)

inst_164:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x0ee and fs2 == 0 and fe2 == 0x1c and fm2 == 0x0ee and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x70ee; op2val:0x70ee;
   valaddr_reg:x5; val_offset:276*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 276*FLEN/8, x8, x4, x1)

inst_165:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x25b and fs2 == 0 and fe2 == 0x1e and fm2 == 0x25b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a5b; op2val:0x7a5b;
   valaddr_reg:x5; val_offset:278*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 278*FLEN/8, x8, x4, x1)

inst_166:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x397 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x397 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b97; op2val:0x7b97;
   valaddr_reg:x5; val_offset:280*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 280*FLEN/8, x8, x4, x1)

inst_167:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x234 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x234 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a34; op2val:0x7a34;
   valaddr_reg:x5; val_offset:282*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 282*FLEN/8, x8, x4, x1)

inst_168:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x291 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x291 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a91; op2val:0x7a91;
   valaddr_reg:x5; val_offset:284*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 284*FLEN/8, x8, x4, x1)

inst_169:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x2d6 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x2d6 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6ed6; op2val:0x6ed6;
   valaddr_reg:x5; val_offset:286*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 286*FLEN/8, x8, x4, x1)

inst_170:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x359 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x359 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b59; op2val:0x7b59;
   valaddr_reg:x5; val_offset:288*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 288*FLEN/8, x8, x4, x1)

inst_171:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x325 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x325 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b25; op2val:0x7b25;
   valaddr_reg:x5; val_offset:290*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 290*FLEN/8, x8, x4, x1)

inst_172:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x347 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x347 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b47; op2val:0x7b47;
   valaddr_reg:x5; val_offset:292*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 292*FLEN/8, x8, x4, x1)

inst_173:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x10d and fs2 == 0 and fe2 == 0x1d and fm2 == 0x10d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x750d; op2val:0x750d;
   valaddr_reg:x5; val_offset:294*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 294*FLEN/8, x8, x4, x1)

inst_174:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x26d and fs2 == 0 and fe2 == 0x1e and fm2 == 0x26d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a6d; op2val:0x7a6d;
   valaddr_reg:x5; val_offset:296*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 296*FLEN/8, x8, x4, x1)

inst_175:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2b8 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2b8 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ab8; op2val:0x7ab8;
   valaddr_reg:x5; val_offset:298*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 298*FLEN/8, x8, x4, x1)

inst_176:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x183 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x183 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7983; op2val:0x7983;
   valaddr_reg:x5; val_offset:300*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 300*FLEN/8, x8, x4, x1)

inst_177:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2eb and fs2 == 0 and fe2 == 0x1d and fm2 == 0x2eb and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x76eb; op2val:0x76eb;
   valaddr_reg:x5; val_offset:302*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 302*FLEN/8, x8, x4, x1)

inst_178:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1b7 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1b7 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x79b7; op2val:0x79b7;
   valaddr_reg:x5; val_offset:304*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 304*FLEN/8, x8, x4, x1)

inst_179:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x00a and fs2 == 0 and fe2 == 0x1d and fm2 == 0x00a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x740a; op2val:0x740a;
   valaddr_reg:x5; val_offset:306*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 306*FLEN/8, x8, x4, x1)

inst_180:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3b4 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3b4 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bb4; op2val:0x7bb4;
   valaddr_reg:x5; val_offset:308*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 308*FLEN/8, x8, x4, x1)

inst_181:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x064 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x064 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7864; op2val:0x7864;
   valaddr_reg:x5; val_offset:310*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 310*FLEN/8, x8, x4, x1)

inst_182:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2ce and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2ce and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ace; op2val:0x7ace;
   valaddr_reg:x5; val_offset:312*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 312*FLEN/8, x8, x4, x1)

inst_183:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x254 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x254 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7654; op2val:0x7654;
   valaddr_reg:x5; val_offset:314*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 314*FLEN/8, x8, x4, x1)

inst_184:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x020 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x020 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7420; op2val:0x7420;
   valaddr_reg:x5; val_offset:316*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 316*FLEN/8, x8, x4, x1)

inst_185:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x12b and fs2 == 0 and fe2 == 0x1e and fm2 == 0x12b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x792b; op2val:0x792b;
   valaddr_reg:x5; val_offset:318*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 318*FLEN/8, x8, x4, x1)

inst_186:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1ad and fs2 == 0 and fe2 == 0x1d and fm2 == 0x1ad and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x75ad; op2val:0x75ad;
   valaddr_reg:x5; val_offset:320*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 320*FLEN/8, x8, x4, x1)

inst_187:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7000; op2val:0x7000;
   valaddr_reg:x5; val_offset:322*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 322*FLEN/8, x8, x4, x1)

inst_188:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2a0 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2a0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7aa0; op2val:0x7aa0;
   valaddr_reg:x5; val_offset:324*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 324*FLEN/8, x8, x4, x1)

inst_189:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x26a and fs2 == 0 and fe2 == 0x1d and fm2 == 0x26a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x766a; op2val:0x766a;
   valaddr_reg:x5; val_offset:326*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 326*FLEN/8, x8, x4, x1)

inst_190:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x378 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x378 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7378; op2val:0x7378;
   valaddr_reg:x5; val_offset:328*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 328*FLEN/8, x8, x4, x1)

inst_191:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x03a and fs2 == 0 and fe2 == 0x1e and fm2 == 0x03a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x783a; op2val:0x783a;
   valaddr_reg:x5; val_offset:330*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 330*FLEN/8, x8, x4, x1)

inst_192:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x130 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x130 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7930; op2val:0x7930;
   valaddr_reg:x5; val_offset:332*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 332*FLEN/8, x8, x4, x1)

inst_193:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x17d and fs2 == 0 and fe2 == 0x1e and fm2 == 0x17d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x797d; op2val:0x797d;
   valaddr_reg:x5; val_offset:334*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 334*FLEN/8, x8, x4, x1)

inst_194:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x39f and fs2 == 0 and fe2 == 0x1c and fm2 == 0x39f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x739f; op2val:0x739f;
   valaddr_reg:x5; val_offset:336*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 336*FLEN/8, x8, x4, x1)

inst_195:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3a8 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x3a8 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x77a8; op2val:0x77a8;
   valaddr_reg:x5; val_offset:338*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 338*FLEN/8, x8, x4, x1)

inst_196:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x297 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x297 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7697; op2val:0x7697;
   valaddr_reg:x5; val_offset:340*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 340*FLEN/8, x8, x4, x1)

inst_197:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x04c and fs2 == 0 and fe2 == 0x1c and fm2 == 0x04c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x704c; op2val:0x704c;
   valaddr_reg:x5; val_offset:342*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 342*FLEN/8, x8, x4, x1)

inst_198:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x201 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x201 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e01; op2val:0x6e01;
   valaddr_reg:x5; val_offset:344*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 344*FLEN/8, x8, x4, x1)

inst_199:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x351 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x351 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7351; op2val:0x7351;
   valaddr_reg:x5; val_offset:346*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 346*FLEN/8, x8, x4, x1)

inst_200:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x00a and fs2 == 0 and fe2 == 0x1e and fm2 == 0x00a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x780a; op2val:0x780a;
   valaddr_reg:x5; val_offset:348*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 348*FLEN/8, x8, x4, x1)

inst_201:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x260 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x260 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a60; op2val:0x7a60;
   valaddr_reg:x5; val_offset:350*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x5, 350*FLEN/8, x8, x4, x1)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(28748,32,FLEN)
NAN_BOXED(28748,32,FLEN)
NAN_BOXED(31259,32,FLEN)
NAN_BOXED(31259,32,FLEN)
NAN_BOXED(30700,32,FLEN)
NAN_BOXED(30700,32,FLEN)
NAN_BOXED(31029,32,FLEN)
NAN_BOXED(31029,32,FLEN)
NAN_BOXED(28161,32,FLEN)
NAN_BOXED(28161,32,FLEN)
NAN_BOXED(31406,32,FLEN)
NAN_BOXED(31406,32,FLEN)
NAN_BOXED(31256,32,FLEN)
NAN_BOXED(31256,32,FLEN)
NAN_BOXED(30495,32,FLEN)
NAN_BOXED(30495,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(29521,32,FLEN)
NAN_BOXED(31541,32,FLEN)
NAN_BOXED(31541,32,FLEN)
NAN_BOXED(26242,32,FLEN)
NAN_BOXED(26242,32,FLEN)
NAN_BOXED(31618,32,FLEN)
NAN_BOXED(31618,32,FLEN)
NAN_BOXED(29421,32,FLEN)
NAN_BOXED(29421,32,FLEN)
NAN_BOXED(26478,32,FLEN)
NAN_BOXED(26478,32,FLEN)
test_dataset_1:
NAN_BOXED(30464,32,FLEN)
NAN_BOXED(30464,32,FLEN)
NAN_BOXED(29556,32,FLEN)
NAN_BOXED(29556,32,FLEN)
NAN_BOXED(29439,32,FLEN)
NAN_BOXED(29439,32,FLEN)
NAN_BOXED(29858,32,FLEN)
NAN_BOXED(29858,32,FLEN)
NAN_BOXED(31410,32,FLEN)
NAN_BOXED(31410,32,FLEN)
NAN_BOXED(31010,32,FLEN)
NAN_BOXED(31010,32,FLEN)
NAN_BOXED(31727,32,FLEN)
NAN_BOXED(31727,32,FLEN)
NAN_BOXED(28603,32,FLEN)
NAN_BOXED(28603,32,FLEN)
NAN_BOXED(31172,32,FLEN)
NAN_BOXED(31172,32,FLEN)
NAN_BOXED(31612,32,FLEN)
NAN_BOXED(31612,32,FLEN)
NAN_BOXED(31395,32,FLEN)
NAN_BOXED(31395,32,FLEN)
NAN_BOXED(29913,32,FLEN)
NAN_BOXED(29913,32,FLEN)
test_dataset_2:
NAN_BOXED(31502,16,FLEN)
NAN_BOXED(31502,16,FLEN)
NAN_BOXED(30730,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(26730,16,FLEN)
NAN_BOXED(26730,16,FLEN)
NAN_BOXED(31328,16,FLEN)
NAN_BOXED(31328,16,FLEN)
NAN_BOXED(29064,16,FLEN)
NAN_BOXED(29064,16,FLEN)
NAN_BOXED(31135,16,FLEN)
NAN_BOXED(31135,16,FLEN)
NAN_BOXED(30206,16,FLEN)
NAN_BOXED(30206,16,FLEN)
NAN_BOXED(30736,16,FLEN)
NAN_BOXED(30736,16,FLEN)
NAN_BOXED(30762,16,FLEN)
NAN_BOXED(30762,16,FLEN)
NAN_BOXED(30676,16,FLEN)
NAN_BOXED(30676,16,FLEN)
NAN_BOXED(27024,16,FLEN)
NAN_BOXED(27024,16,FLEN)
NAN_BOXED(31708,16,FLEN)
NAN_BOXED(31708,16,FLEN)
NAN_BOXED(30283,16,FLEN)
NAN_BOXED(30283,16,FLEN)
NAN_BOXED(30724,16,FLEN)
NAN_BOXED(30724,16,FLEN)
NAN_BOXED(31273,16,FLEN)
NAN_BOXED(31273,16,FLEN)
NAN_BOXED(31457,16,FLEN)
NAN_BOXED(31457,16,FLEN)
NAN_BOXED(30747,16,FLEN)
NAN_BOXED(30747,16,FLEN)
NAN_BOXED(30878,16,FLEN)
NAN_BOXED(30878,16,FLEN)
NAN_BOXED(29774,16,FLEN)
NAN_BOXED(29774,16,FLEN)
NAN_BOXED(31655,16,FLEN)
NAN_BOXED(31655,16,FLEN)
NAN_BOXED(31300,16,FLEN)
NAN_BOXED(31300,16,FLEN)
NAN_BOXED(31510,16,FLEN)
NAN_BOXED(31510,16,FLEN)
NAN_BOXED(31352,16,FLEN)
NAN_BOXED(31352,16,FLEN)
NAN_BOXED(30845,16,FLEN)
NAN_BOXED(30845,16,FLEN)
NAN_BOXED(27438,16,FLEN)
NAN_BOXED(27438,16,FLEN)
NAN_BOXED(30862,16,FLEN)
NAN_BOXED(30862,16,FLEN)
NAN_BOXED(30729,16,FLEN)
NAN_BOXED(30729,16,FLEN)
NAN_BOXED(30132,16,FLEN)
NAN_BOXED(30132,16,FLEN)
NAN_BOXED(30798,16,FLEN)
NAN_BOXED(30798,16,FLEN)
NAN_BOXED(30949,16,FLEN)
NAN_BOXED(30949,16,FLEN)
NAN_BOXED(26408,16,FLEN)
NAN_BOXED(26408,16,FLEN)
NAN_BOXED(29099,16,FLEN)
NAN_BOXED(29099,16,FLEN)
NAN_BOXED(31458,16,FLEN)
NAN_BOXED(31458,16,FLEN)
NAN_BOXED(31327,16,FLEN)
NAN_BOXED(31327,16,FLEN)
NAN_BOXED(29717,16,FLEN)
NAN_BOXED(29717,16,FLEN)
NAN_BOXED(31073,16,FLEN)
NAN_BOXED(31073,16,FLEN)
NAN_BOXED(25669,16,FLEN)
NAN_BOXED(25669,16,FLEN)
NAN_BOXED(31242,16,FLEN)
NAN_BOXED(31242,16,FLEN)
NAN_BOXED(28416,16,FLEN)
NAN_BOXED(28416,16,FLEN)
NAN_BOXED(30082,16,FLEN)
NAN_BOXED(30082,16,FLEN)
NAN_BOXED(28955,16,FLEN)
NAN_BOXED(28955,16,FLEN)
NAN_BOXED(29024,16,FLEN)
NAN_BOXED(29024,16,FLEN)
NAN_BOXED(31152,16,FLEN)
NAN_BOXED(31152,16,FLEN)
NAN_BOXED(29990,16,FLEN)
NAN_BOXED(29990,16,FLEN)
NAN_BOXED(26124,16,FLEN)
NAN_BOXED(26124,16,FLEN)
NAN_BOXED(30395,16,FLEN)
NAN_BOXED(30395,16,FLEN)
NAN_BOXED(28405,16,FLEN)
NAN_BOXED(28405,16,FLEN)
NAN_BOXED(30740,16,FLEN)
NAN_BOXED(30740,16,FLEN)
NAN_BOXED(30935,16,FLEN)
NAN_BOXED(30935,16,FLEN)
NAN_BOXED(25939,16,FLEN)
NAN_BOXED(25939,16,FLEN)
NAN_BOXED(28847,16,FLEN)
NAN_BOXED(28847,16,FLEN)
NAN_BOXED(28959,16,FLEN)
NAN_BOXED(28959,16,FLEN)
NAN_BOXED(31084,16,FLEN)
NAN_BOXED(31084,16,FLEN)
NAN_BOXED(29454,16,FLEN)
NAN_BOXED(29454,16,FLEN)
NAN_BOXED(31329,16,FLEN)
NAN_BOXED(31329,16,FLEN)
NAN_BOXED(29475,16,FLEN)
NAN_BOXED(29475,16,FLEN)
NAN_BOXED(30288,16,FLEN)
NAN_BOXED(30288,16,FLEN)
NAN_BOXED(29987,16,FLEN)
NAN_BOXED(29987,16,FLEN)
NAN_BOXED(27525,16,FLEN)
NAN_BOXED(27525,16,FLEN)
NAN_BOXED(31677,16,FLEN)
NAN_BOXED(31677,16,FLEN)
NAN_BOXED(29926,16,FLEN)
NAN_BOXED(29926,16,FLEN)
NAN_BOXED(29942,16,FLEN)
NAN_BOXED(29942,16,FLEN)
NAN_BOXED(31218,16,FLEN)
NAN_BOXED(31218,16,FLEN)
NAN_BOXED(29705,16,FLEN)
NAN_BOXED(29705,16,FLEN)
NAN_BOXED(31494,16,FLEN)
NAN_BOXED(31494,16,FLEN)
NAN_BOXED(31373,16,FLEN)
NAN_BOXED(31373,16,FLEN)
NAN_BOXED(30863,16,FLEN)
NAN_BOXED(30863,16,FLEN)
NAN_BOXED(31472,16,FLEN)
NAN_BOXED(31472,16,FLEN)
NAN_BOXED(31137,16,FLEN)
NAN_BOXED(31137,16,FLEN)
NAN_BOXED(30219,16,FLEN)
NAN_BOXED(30219,16,FLEN)
NAN_BOXED(29332,16,FLEN)
NAN_BOXED(29332,16,FLEN)
NAN_BOXED(30444,16,FLEN)
NAN_BOXED(30444,16,FLEN)
NAN_BOXED(28334,16,FLEN)
NAN_BOXED(28334,16,FLEN)
NAN_BOXED(29884,16,FLEN)
NAN_BOXED(29884,16,FLEN)
NAN_BOXED(30003,16,FLEN)
NAN_BOXED(30003,16,FLEN)
NAN_BOXED(31537,16,FLEN)
NAN_BOXED(31537,16,FLEN)
NAN_BOXED(29292,16,FLEN)
NAN_BOXED(29292,16,FLEN)
NAN_BOXED(31716,16,FLEN)
NAN_BOXED(31716,16,FLEN)
NAN_BOXED(30060,16,FLEN)
NAN_BOXED(30060,16,FLEN)
NAN_BOXED(31076,16,FLEN)
NAN_BOXED(31076,16,FLEN)
NAN_BOXED(31604,16,FLEN)
NAN_BOXED(31604,16,FLEN)
NAN_BOXED(30655,16,FLEN)
NAN_BOXED(30655,16,FLEN)
NAN_BOXED(29569,16,FLEN)
NAN_BOXED(29569,16,FLEN)
NAN_BOXED(28010,16,FLEN)
NAN_BOXED(28010,16,FLEN)
NAN_BOXED(31560,16,FLEN)
NAN_BOXED(31560,16,FLEN)
NAN_BOXED(31249,16,FLEN)
NAN_BOXED(31249,16,FLEN)
NAN_BOXED(31417,16,FLEN)
NAN_BOXED(31417,16,FLEN)
NAN_BOXED(30065,16,FLEN)
NAN_BOXED(30065,16,FLEN)
NAN_BOXED(31471,16,FLEN)
NAN_BOXED(31471,16,FLEN)
NAN_BOXED(31649,16,FLEN)
NAN_BOXED(31649,16,FLEN)
NAN_BOXED(28756,16,FLEN)
NAN_BOXED(28756,16,FLEN)
NAN_BOXED(28331,16,FLEN)
NAN_BOXED(28331,16,FLEN)
NAN_BOXED(27822,16,FLEN)
NAN_BOXED(27822,16,FLEN)
NAN_BOXED(31309,16,FLEN)
NAN_BOXED(31309,16,FLEN)
NAN_BOXED(30067,16,FLEN)
NAN_BOXED(30067,16,FLEN)
NAN_BOXED(31296,16,FLEN)
NAN_BOXED(31296,16,FLEN)
NAN_BOXED(30864,16,FLEN)
NAN_BOXED(30864,16,FLEN)
NAN_BOXED(27962,16,FLEN)
NAN_BOXED(27962,16,FLEN)
NAN_BOXED(31519,16,FLEN)
NAN_BOXED(31519,16,FLEN)
NAN_BOXED(31589,16,FLEN)
NAN_BOXED(31589,16,FLEN)
NAN_BOXED(29806,16,FLEN)
NAN_BOXED(29806,16,FLEN)
NAN_BOXED(31390,16,FLEN)
NAN_BOXED(31390,16,FLEN)
NAN_BOXED(31068,16,FLEN)
NAN_BOXED(31068,16,FLEN)
NAN_BOXED(28508,16,FLEN)
NAN_BOXED(28508,16,FLEN)
NAN_BOXED(26910,16,FLEN)
NAN_BOXED(26910,16,FLEN)
NAN_BOXED(31718,16,FLEN)
NAN_BOXED(31718,16,FLEN)
NAN_BOXED(28516,16,FLEN)
NAN_BOXED(28516,16,FLEN)
NAN_BOXED(29624,16,FLEN)
NAN_BOXED(29624,16,FLEN)
NAN_BOXED(28308,16,FLEN)
NAN_BOXED(28308,16,FLEN)
NAN_BOXED(30220,16,FLEN)
NAN_BOXED(30220,16,FLEN)
NAN_BOXED(31557,16,FLEN)
NAN_BOXED(31557,16,FLEN)
NAN_BOXED(29709,16,FLEN)
NAN_BOXED(29709,16,FLEN)
NAN_BOXED(28263,16,FLEN)
NAN_BOXED(28263,16,FLEN)
NAN_BOXED(26897,16,FLEN)
NAN_BOXED(26897,16,FLEN)
NAN_BOXED(31707,16,FLEN)
NAN_BOXED(31707,16,FLEN)
NAN_BOXED(30917,16,FLEN)
NAN_BOXED(30917,16,FLEN)
NAN_BOXED(29954,16,FLEN)
NAN_BOXED(29954,16,FLEN)
NAN_BOXED(31565,16,FLEN)
NAN_BOXED(31565,16,FLEN)
NAN_BOXED(31681,16,FLEN)
NAN_BOXED(31681,16,FLEN)
NAN_BOXED(29410,16,FLEN)
NAN_BOXED(29410,16,FLEN)
NAN_BOXED(31701,16,FLEN)
NAN_BOXED(31701,16,FLEN)
NAN_BOXED(31104,16,FLEN)
NAN_BOXED(31104,16,FLEN)
NAN_BOXED(29732,16,FLEN)
NAN_BOXED(29732,16,FLEN)
NAN_BOXED(29930,16,FLEN)
NAN_BOXED(29930,16,FLEN)
NAN_BOXED(27956,16,FLEN)
NAN_BOXED(27956,16,FLEN)
NAN_BOXED(31030,16,FLEN)
NAN_BOXED(31030,16,FLEN)
NAN_BOXED(31621,16,FLEN)
NAN_BOXED(31621,16,FLEN)
NAN_BOXED(29927,16,FLEN)
NAN_BOXED(29927,16,FLEN)
NAN_BOXED(29968,16,FLEN)
NAN_BOXED(29968,16,FLEN)
NAN_BOXED(31524,16,FLEN)
NAN_BOXED(31524,16,FLEN)
NAN_BOXED(30040,16,FLEN)
NAN_BOXED(30040,16,FLEN)
NAN_BOXED(30881,16,FLEN)
NAN_BOXED(30881,16,FLEN)
NAN_BOXED(29654,16,FLEN)
NAN_BOXED(29654,16,FLEN)
NAN_BOXED(29643,16,FLEN)
NAN_BOXED(29643,16,FLEN)
NAN_BOXED(30824,16,FLEN)
NAN_BOXED(30824,16,FLEN)
NAN_BOXED(27854,16,FLEN)
NAN_BOXED(27854,16,FLEN)
NAN_BOXED(29862,16,FLEN)
NAN_BOXED(29862,16,FLEN)
NAN_BOXED(30691,16,FLEN)
NAN_BOXED(30691,16,FLEN)
NAN_BOXED(28910,16,FLEN)
NAN_BOXED(28910,16,FLEN)
NAN_BOXED(31323,16,FLEN)
NAN_BOXED(31323,16,FLEN)
NAN_BOXED(31639,16,FLEN)
NAN_BOXED(31639,16,FLEN)
NAN_BOXED(31284,16,FLEN)
NAN_BOXED(31284,16,FLEN)
NAN_BOXED(31377,16,FLEN)
NAN_BOXED(31377,16,FLEN)
NAN_BOXED(28374,16,FLEN)
NAN_BOXED(28374,16,FLEN)
NAN_BOXED(31577,16,FLEN)
NAN_BOXED(31577,16,FLEN)
NAN_BOXED(31525,16,FLEN)
NAN_BOXED(31525,16,FLEN)
NAN_BOXED(31559,16,FLEN)
NAN_BOXED(31559,16,FLEN)
NAN_BOXED(29965,16,FLEN)
NAN_BOXED(29965,16,FLEN)
NAN_BOXED(31341,16,FLEN)
NAN_BOXED(31341,16,FLEN)
NAN_BOXED(31416,16,FLEN)
NAN_BOXED(31416,16,FLEN)
NAN_BOXED(31107,16,FLEN)
NAN_BOXED(31107,16,FLEN)
NAN_BOXED(30443,16,FLEN)
NAN_BOXED(30443,16,FLEN)
NAN_BOXED(31159,16,FLEN)
NAN_BOXED(31159,16,FLEN)
NAN_BOXED(29706,16,FLEN)
NAN_BOXED(29706,16,FLEN)
NAN_BOXED(31668,16,FLEN)
NAN_BOXED(31668,16,FLEN)
NAN_BOXED(30820,16,FLEN)
NAN_BOXED(30820,16,FLEN)
NAN_BOXED(31438,16,FLEN)
NAN_BOXED(31438,16,FLEN)
NAN_BOXED(30292,16,FLEN)
NAN_BOXED(30292,16,FLEN)
NAN_BOXED(29728,16,FLEN)
NAN_BOXED(29728,16,FLEN)
NAN_BOXED(31019,16,FLEN)
NAN_BOXED(31019,16,FLEN)
NAN_BOXED(30125,16,FLEN)
NAN_BOXED(30125,16,FLEN)
NAN_BOXED(28672,16,FLEN)
NAN_BOXED(28672,16,FLEN)
NAN_BOXED(31392,16,FLEN)
NAN_BOXED(31392,16,FLEN)
NAN_BOXED(30314,16,FLEN)
NAN_BOXED(30314,16,FLEN)
NAN_BOXED(29560,16,FLEN)
NAN_BOXED(29560,16,FLEN)
NAN_BOXED(30778,16,FLEN)
NAN_BOXED(30778,16,FLEN)
NAN_BOXED(31024,16,FLEN)
NAN_BOXED(31024,16,FLEN)
NAN_BOXED(31101,16,FLEN)
NAN_BOXED(31101,16,FLEN)
NAN_BOXED(29599,16,FLEN)
NAN_BOXED(29599,16,FLEN)
NAN_BOXED(30632,16,FLEN)
NAN_BOXED(30632,16,FLEN)
NAN_BOXED(30359,16,FLEN)
NAN_BOXED(30359,16,FLEN)
NAN_BOXED(28748,16,FLEN)
NAN_BOXED(28748,16,FLEN)
NAN_BOXED(28161,16,FLEN)
NAN_BOXED(28161,16,FLEN)
NAN_BOXED(29521,16,FLEN)
NAN_BOXED(29521,16,FLEN)
NAN_BOXED(30730,16,FLEN)
NAN_BOXED(30730,16,FLEN)
NAN_BOXED(31328,16,FLEN)
NAN_BOXED(31328,16,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x10_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x10_1:
    .fill 36*((SIGALIGN)/4),4,0xdeadbeef


signature_x4_0:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x4_1:
    .fill 112*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
