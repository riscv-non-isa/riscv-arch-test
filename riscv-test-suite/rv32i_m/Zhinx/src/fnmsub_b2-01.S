
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.12.2
// timestamp : Wed Sep 25 06:07:02 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/testing/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/testing/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV32Zhinx/rv32h_fnmsub.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.h instruction of the RISC-V RV32_Zfinx_Zhinx,RV64_Zfinx_Zhinx extension for the fnmsub_b2 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32I_Zfinx_Zhinx,RV64I_Zfinx_Zhinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*Zhinx.*);def TEST_CASE_1=True;",fnmsub_b2)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x7,test_dataset_0)
RVTEST_SIGBASE(x3,signature_x3_1)

inst_0:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==x26, rs2==x26, rs3==x7, rd==x18,fs1 == 0 and fe1 == 0x00 and fm1 == 0x01e and fs2 == 1 and fe2 == 0x0f and fm2 == 0x288 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x030 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x26; op2:x26; op3:x7; dest:x18; op1val:0x1e; op2val:0x1e;
op3val:0x30; valaddr_reg:x7; val_offset:0*FLEN/8; rmval:dyn;
testreg:x6; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x18, x26, x26, x7, dyn, 0, 0, x7, 0*FLEN/8, x9, x3, x6)

inst_1:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==x25, rs2==x14, rs3==x13, rd==x25,fs1 == 0 and fe1 == 0x00 and fm1 == 0x031 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x234 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x011 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x25; op2:x14; op3:x13; dest:x25; op1val:0x31; op2val:0xb634;
op3val:0x11; valaddr_reg:x7; val_offset:3*FLEN/8; rmval:dyn;
testreg:x6; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x25, x25, x14, x13, dyn, 0, 0, x7, 3*FLEN/8, x9, x3, x6)

inst_2:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==x31, rs2==x4, rs3==x22, rd==x30,fs1 == 0 and fe1 == 0x00 and fm1 == 0x019 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x399 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x05b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x31; op2:x4; op3:x22; dest:x30; op1val:0x19; op2val:0xc399;
op3val:0x5b; valaddr_reg:x7; val_offset:6*FLEN/8; rmval:dyn;
testreg:x6; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x30, x31, x4, x22, dyn, 0, 0, x7, 6*FLEN/8, x9, x3, x6)

inst_3:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==x14, rs2==x31, rs3==x14, rd==x19,fs1 == 0 and fe1 == 0x00 and fm1 == 0x006 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x255 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x14; op2:x31; op3:x14; dest:x19; op1val:0x6; op2val:0xc255;
op3val:0x6; valaddr_reg:x7; val_offset:9*FLEN/8; rmval:dyn;
testreg:x6; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x19, x14, x31, x14, dyn, 0, 0, x7, 9*FLEN/8, x9, x3, x6)

inst_4:
// rs1 == rs2 == rs3 != rd, rs1==x27, rs2==x27, rs3==x27, rd==x2,fs1 == 0 and fe1 == 0x00 and fm1 == 0x012 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x155 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x020 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x27; op2:x27; op3:x27; dest:x2; op1val:0x12; op2val:0x12;
op3val:0x12; valaddr_reg:x7; val_offset:12*FLEN/8; rmval:dyn;
testreg:x6; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x2, x27, x27, x27, dyn, 0, 0, x7, 12*FLEN/8, x9, x3, x6)

inst_5:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==x11, rs2==x25, rs3==x8, rd==x8,fs1 == 0 and fe1 == 0x00 and fm1 == 0x041 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x342 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x01b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x11; op2:x25; op3:x8; dest:x8; op1val:0x41; op2val:0xbb42;
op3val:0x1b; valaddr_reg:x7; val_offset:15*FLEN/8; rmval:dyn;
testreg:x6; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x8, x11, x25, x8, dyn, 0, 0, x7, 15*FLEN/8, x9, x3, x6)

inst_6:
// rd == rs2 == rs3 != rs1, rs1==x4, rs2==x21, rs3==x21, rd==x21,fs1 == 0 and fe1 == 0x00 and fm1 == 0x034 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1a7 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x053 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x4; op2:x21; op3:x21; dest:x21; op1val:0x34; op2val:0xc1a7;
op3val:0xc1a7; valaddr_reg:x7; val_offset:18*FLEN/8; rmval:dyn;
testreg:x6; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x21, x4, x21, x21, dyn, 0, 0, x7, 18*FLEN/8, x9, x3, x6)

inst_7:
// rs1 == rd == rs3 != rs2, rs1==x28, rs2==x12, rs3==x28, rd==x28,fs1 == 0 and fe1 == 0x00 and fm1 == 0x004 and fs2 == 1 and fe2 == 0x14 and fm2 == 0x1d8 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x03b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x28; op2:x12; op3:x28; dest:x28; op1val:0x4; op2val:0xd1d8;
op3val:0x4; valaddr_reg:x7; val_offset:21*FLEN/8; rmval:dyn;
testreg:x6; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x28, x28, x12, x28, dyn, 0, 0, x7, 21*FLEN/8, x9, x3, x6)

inst_8:
// rs1 == rs2 == rs3 == rd, rs1==x24, rs2==x24, rs3==x24, rd==x24,fs1 == 0 and fe1 == 0x00 and fm1 == 0x03f and fs2 == 1 and fe2 == 0x11 and fm2 == 0x100 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x03b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x24; op2:x24; op3:x24; dest:x24; op1val:0x3f; op2val:0x3f;
op3val:0x3f; valaddr_reg:x7; val_offset:24*FLEN/8; rmval:dyn;
testreg:x6; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x24, x24, x24, x24, dyn, 0, 0, x7, 24*FLEN/8, x9, x3, x6)

inst_9:
// rs1 == rs2 == rd != rs3, rs1==x0, rs2==x0, rs3==x12, rd==x0,fs1 == 0 and fe1 == 0x00 and fm1 == 0x032 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x1c2 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x040 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x0; op2:x0; op3:x12; dest:x0; op1val:0x0; op2val:0x0;
op3val:0x40; valaddr_reg:x7; val_offset:27*FLEN/8; rmval:dyn;
testreg:x6; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x0, x0, x0, x12, dyn, 0, 0, x7, 27*FLEN/8, x9, x3, x6)

inst_10:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==x18, rs2==x11, rs3==x30, rd==x11,fs1 == 0 and fe1 == 0x00 and fm1 == 0x04a and fs2 == 1 and fe2 == 0x0d and fm2 == 0x130 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x019 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x18; op2:x11; op3:x30; dest:x11; op1val:0x4a; op2val:0xb530;
op3val:0x19; valaddr_reg:x7; val_offset:30*FLEN/8; rmval:dyn;
testreg:x6; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x11, x18, x11, x30, dyn, 0, 0, x7, 30*FLEN/8, x9, x3, x6)

inst_11:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==x16, rs2==x29, rs3==x29, rd==x14,fs1 == 0 and fe1 == 0x00 and fm1 == 0x034 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x227 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x16; op2:x29; op3:x29; dest:x14; op1val:0x34; op2val:0xb227;
op3val:0xb227; valaddr_reg:x7; val_offset:33*FLEN/8; rmval:dyn;
testreg:x6; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x14, x16, x29, x29, dyn, 0, 0, x7, 33*FLEN/8, x9, x3, x6)

inst_12:
// rs1==x22, rs2==x10, rs3==x9, rd==x4,fs1 == 0 and fe1 == 0x00 and fm1 == 0x03f and fs2 == 1 and fe2 == 0x0d and fm2 == 0x29a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x01e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x22; op2:x10; op3:x9; dest:x4; op1val:0x3f; op2val:0xb69a;
op3val:0x1e; valaddr_reg:x7; val_offset:36*FLEN/8; rmval:dyn;
testreg:x6; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x4, x22, x10, x9, dyn, 0, 0, x7, 36*FLEN/8, x9, x3, x6)

inst_13:
// rs1==x1, rs2==x5, rs3==x3, rd==x16,fs1 == 0 and fe1 == 0x00 and fm1 == 0x062 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x287 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x003 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x1; op2:x5; op3:x3; dest:x16; op1val:0x62; op2val:0x2a87;
op3val:0x3; valaddr_reg:x7; val_offset:39*FLEN/8; rmval:dyn;
testreg:x6; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x16, x1, x5, x3, dyn, 0, 0, x7, 39*FLEN/8, x9, x3, x6)
RVTEST_VALBASEUPD(x1,test_dataset_1)

inst_14:
// rs1==x29, rs2==x22, rs3==x1, rd==x27,fs1 == 0 and fe1 == 0x00 and fm1 == 0x05a and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2c1 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x023 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x29; op2:x22; op3:x1; dest:x27; op1val:0x5a; op2val:0xb2c1;
op3val:0x23; valaddr_reg:x1; val_offset:0*FLEN/8; rmval:dyn;
testreg:x6; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x27, x29, x22, x1, dyn, 0, 0, x1, 0*FLEN/8, x2, x3, x6)

inst_15:
// rs1==x7, rs2==x8, rs3==x6, rd==x9,fs1 == 0 and fe1 == 0x00 and fm1 == 0x043 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x103 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x035 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x7; op2:x8; op3:x6; dest:x9; op1val:0x43; op2val:0xb503;
op3val:0x35; valaddr_reg:x1; val_offset:3*FLEN/8; rmval:dyn;
testreg:x6; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x9, x7, x8, x6, dyn, 0, 0, x1, 3*FLEN/8, x2, x3, x6)

inst_16:
// rs1==x23, rs2==x15, rs3==x5, rd==x17,fs1 == 0 and fe1 == 0x00 and fm1 == 0x03d and fs2 == 0 and fe2 == 0x0c and fm2 == 0x3de and fs3 == 0 and fe3 == 0x00 and fm3 == 0x031 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x23; op2:x15; op3:x5; dest:x17; op1val:0x3d; op2val:0x33de;
op3val:0x31; valaddr_reg:x1; val_offset:6*FLEN/8; rmval:dyn;
testreg:x11; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x17, x23, x15, x5, dyn, 0, 0, x1, 6*FLEN/8, x2, x3, x11)
RVTEST_SIGBASE(x4,signature_x4_0)

inst_17:
// rs1==x21, rs2==x30, rs3==x0, rd==x10,fs1 == 0 and fe1 == 0x00 and fm1 == 0x05d and fs2 == 0 and fe2 == 0x0f and fm2 == 0x0dc and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x21; op2:x30; op3:x0; dest:x10; op1val:0x5d; op2val:0x3cdc;
op3val:0x0; valaddr_reg:x1; val_offset:9*FLEN/8; rmval:dyn;
testreg:x11; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x10, x21, x30, x0, dyn, 0, 0, x1, 9*FLEN/8, x2, x4, x11)

inst_18:
// rs1==x8, rs2==x16, rs3==x31, rd==x29,fs1 == 0 and fe1 == 0x00 and fm1 == 0x055 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x139 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x022 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x8; op2:x16; op3:x31; dest:x29; op1val:0x55; op2val:0x4139;
op3val:0x22; valaddr_reg:x1; val_offset:12*FLEN/8; rmval:dyn;
testreg:x11; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x29, x8, x16, x31, dyn, 0, 0, x1, 12*FLEN/8, x2, x4, x11)

inst_19:
// rs1==x12, rs2==x9, rs3==x18, rd==x7,fs1 == 0 and fe1 == 0x00 and fm1 == 0x00d and fs2 == 0 and fe2 == 0x14 and fm2 == 0x0d6 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x009 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x12; op2:x9; op3:x18; dest:x7; op1val:0xd; op2val:0x50d6;
op3val:0x9; valaddr_reg:x1; val_offset:15*FLEN/8; rmval:dyn;
testreg:x11; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x7, x12, x9, x18, dyn, 0, 0, x1, 15*FLEN/8, x2, x4, x11)

inst_20:
// rs1==x30, rs2==x19, rs3==x17, rd==x5,fs1 == 0 and fe1 == 0x0f and fm1 == 0x032 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3ed and fs3 == 0 and fe3 == 0x0f and fm3 == 0x050 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x19; op3:x17; dest:x5; op1val:0x3c32; op2val:0xbfed;
op3val:0x3c50; valaddr_reg:x1; val_offset:18*FLEN/8; rmval:dyn;
testreg:x11; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x5, x30, x19, x17, dyn, 0, 0, x1, 18*FLEN/8, x2, x4, x11)

inst_21:
// rs1==x20, rs2==x28, rs3==x11, rd==x26,fs1 == 0 and fe1 == 0x0f and fm1 == 0x031 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3b1 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x20; op2:x28; op3:x11; dest:x26; op1val:0x3c31; op2val:0xbfb1;
op3val:0x3c0e; valaddr_reg:x1; val_offset:21*FLEN/8; rmval:dyn;
testreg:x11; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x26, x20, x28, x11, dyn, 0, 0, x1, 21*FLEN/8, x2, x4, x11)

inst_22:
// rs1==x3, rs2==x20, rs3==x25, rd==x6,fs1 == 0 and fe1 == 0x0f and fm1 == 0x055 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x36e and fs3 == 0 and fe3 == 0x0f and fm3 == 0x008 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x3; op2:x20; op3:x25; dest:x6; op1val:0x3c55; op2val:0xbf6e;
op3val:0x3c08; valaddr_reg:x1; val_offset:24*FLEN/8; rmval:dyn;
testreg:x11; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x6, x3, x20, x25, dyn, 0, 0, x1, 24*FLEN/8, x2, x4, x11)

inst_23:
// rs1==x13, rs2==x7, rs3==x10, rd==x20,fs1 == 0 and fe1 == 0x0f and fm1 == 0x02c and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3d1 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x01f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x13; op2:x7; op3:x10; dest:x20; op1val:0x3c2c; op2val:0xbfd1;
op3val:0x3c1f; valaddr_reg:x1; val_offset:27*FLEN/8; rmval:dyn;
testreg:x11; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x20, x13, x7, x10, dyn, 0, 0, x1, 27*FLEN/8, x2, x4, x11)
RVTEST_VALBASEUPD(x8,test_dataset_2)

inst_24:
// rs1==x9, rs2==x1, rs3==x4, rd==x31,fs1 == 0 and fe1 == 0x0f and fm1 == 0x059 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x375 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x9; op2:x1; op3:x4; dest:x31; op1val:0x3c59; op2val:0xbf75;
op3val:0x3c0c; valaddr_reg:x8; val_offset:0*FLEN/8; rmval:dyn;
testreg:x11; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x9, x1, x4, dyn, 0, 0, x8, 0*FLEN/8, x14, x4, x11)

inst_25:
// rs1==x2, rs2==x6, rs3==x26, rd==x13,fs1 == 0 and fe1 == 0x0f and fm1 == 0x040 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3f4 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x054 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x2; op2:x6; op3:x26; dest:x13; op1val:0x3c40; op2val:0xbff4;
op3val:0x3c54; valaddr_reg:x8; val_offset:3*FLEN/8; rmval:dyn;
testreg:x11; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x13, x2, x6, x26, dyn, 0, 0, x8, 3*FLEN/8, x14, x4, x11)

inst_26:
// rs1==x10, rs2==x18, rs3==x20, rd==x15,fs1 == 0 and fe1 == 0x0f and fm1 == 0x043 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3d7 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x01b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x10; op2:x18; op3:x20; dest:x15; op1val:0x3c43; op2val:0xbfd7;
op3val:0x3c1b; valaddr_reg:x8; val_offset:6*FLEN/8; rmval:dyn;
testreg:x11; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x15, x10, x18, x20, dyn, 0, 0, x8, 6*FLEN/8, x14, x4, x11)

inst_27:
// rs1==x19, rs2==x23, rs3==x15, rd==x12,fs1 == 0 and fe1 == 0x0f and fm1 == 0x04b and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3fd and fs3 == 0 and fe3 == 0x0f and fm3 == 0x013 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x19; op2:x23; op3:x15; dest:x12; op1val:0x3c4b; op2val:0xbffd;
op3val:0x3c13; valaddr_reg:x8; val_offset:9*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x12, x19, x23, x15, dyn, 0, 0, x8, 9*FLEN/8, x14, x4, x7)

inst_28:
// rs1==x17, rs2==x13, rs3==x2, rd==x23,fs1 == 0 and fe1 == 0x0f and fm1 == 0x04e and fs2 == 1 and fe2 == 0x10 and fm2 == 0x032 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x009 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x17; op2:x13; op3:x2; dest:x23; op1val:0x3c4e; op2val:0xc032;
op3val:0x3c09; valaddr_reg:x8; val_offset:12*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x23, x17, x13, x2, dyn, 0, 0, x8, 12*FLEN/8, x14, x4, x7)

inst_29:
// rs1==x15, rs2==x17, rs3==x19, rd==x22,fs1 == 0 and fe1 == 0x0f and fm1 == 0x046 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0b0 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x005 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x15; op2:x17; op3:x19; dest:x22; op1val:0x3c46; op2val:0xc0b0;
op3val:0x3c05; valaddr_reg:x8; val_offset:15*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x22, x15, x17, x19, dyn, 0, 0, x8, 15*FLEN/8, x14, x4, x7)
RVTEST_SIGBASE(x4,signature_x4_1)

inst_30:
// rs1==x5, rs2==x2, rs3==x16, rd==x3,fs1 == 0 and fe1 == 0x0f and fm1 == 0x03f and fs2 == 1 and fe2 == 0x0b and fm2 == 0x13d and fs3 == 0 and fe3 == 0x0f and fm3 == 0x05a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x5; op2:x2; op3:x16; dest:x3; op1val:0x3c3f; op2val:0xad3d;
op3val:0x3c5a; valaddr_reg:x8; val_offset:18*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x3, x5, x2, x16, dyn, 0, 0, x8, 18*FLEN/8, x14, x4, x7)

inst_31:
// rs1==x6, rs2==x3, rs3==x23, rd==x1,fs1 == 0 and fe1 == 0x0f and fm1 == 0x019 and fs2 == 1 and fe2 == 0x09 and fm2 == 0x026 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x013 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x6; op2:x3; op3:x23; dest:x1; op1val:0x3c19; op2val:0xa426;
op3val:0x3c13; valaddr_reg:x8; val_offset:21*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x1, x6, x3, x23, dyn, 0, 0, x8, 21*FLEN/8, x14, x4, x7)

inst_32:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x04b and fs2 == 1 and fe2 == 0x0a and fm2 == 0x267 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x03b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c4b; op2val:0xaa67;
op3val:0x3c3b; valaddr_reg:x8; val_offset:24*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 24*FLEN/8, x14, x4, x7)

inst_33:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x05e and fs2 == 1 and fe2 == 0x0a and fm2 == 0x3ab and fs3 == 0 and fe3 == 0x0f and fm3 == 0x04b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c5e; op2val:0xabab;
op3val:0x3c4b; valaddr_reg:x8; val_offset:27*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 27*FLEN/8, x14, x4, x7)

inst_34:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x039 and fs2 == 1 and fe2 == 0x09 and fm2 == 0x0f9 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x025 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c39; op2val:0xa4f9;
op3val:0x3c25; valaddr_reg:x8; val_offset:30*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 30*FLEN/8, x14, x4, x7)

inst_35:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x048 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x28a and fs3 == 0 and fe3 == 0x0f and fm3 == 0x02e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c48; op2val:0xa28a;
op3val:0x3c2e; valaddr_reg:x8; val_offset:33*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 33*FLEN/8, x14, x4, x7)

inst_36:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x037 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x174 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x012 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c37; op2val:0x2974;
op3val:0x3c12; valaddr_reg:x8; val_offset:36*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 36*FLEN/8, x14, x4, x7)

inst_37:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x015 and fs2 == 0 and fe2 == 0x09 and fm2 == 0x359 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x062 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c15; op2val:0x2759;
op3val:0x3c62; valaddr_reg:x8; val_offset:39*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 39*FLEN/8, x14, x4, x7)

inst_38:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x04d and fs2 == 0 and fe2 == 0x0c and fm2 == 0x310 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c4d; op2val:0x3310;
op3val:0x3c0d; valaddr_reg:x8; val_offset:42*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 42*FLEN/8, x14, x4, x7)

inst_39:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x045 and fs2 == 0 and fe2 == 0x0d and fm2 == 0x231 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x059 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3c45; op2val:0x3631;
op3val:0x3c59; valaddr_reg:x8; val_offset:45*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 45*FLEN/8, x14, x4, x7)

inst_40:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x029 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x070 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x05a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x29; op2val:0xc070;
op3val:0x5a; valaddr_reg:x8; val_offset:48*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 48*FLEN/8, x14, x4, x7)

inst_41:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x02e and fs2 == 1 and fe2 == 0x0f and fm2 == 0x37a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x053 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x2e; op2val:0xbf7a;
op3val:0x53; valaddr_reg:x8; val_offset:51*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 51*FLEN/8, x14, x4, x7)

inst_42:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x040 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x060 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x041 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x40; op2val:0xbc60;
op3val:0x41; valaddr_reg:x8; val_offset:54*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 54*FLEN/8, x14, x4, x7)

inst_43:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x050 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x300 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x01a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x50; op2val:0xb700;
op3val:0x1a; valaddr_reg:x8; val_offset:57*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 57*FLEN/8, x14, x4, x7)

inst_44:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x028 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x366 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x014 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x28; op2val:0xbb66;
op3val:0x14; valaddr_reg:x8; val_offset:60*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 60*FLEN/8, x14, x4, x7)

inst_45:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x02e and fs2 == 1 and fe2 == 0x10 and fm2 == 0x064 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x044 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x2e; op2val:0xc064;
op3val:0x44; valaddr_reg:x8; val_offset:63*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 63*FLEN/8, x14, x4, x7)

inst_46:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x025 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x314 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x042 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x25; op2val:0xc314;
op3val:0x42; valaddr_reg:x8; val_offset:66*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 66*FLEN/8, x14, x4, x7)

inst_47:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x055 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x28a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x55; op2val:0xbe8a;
op3val:0xa; valaddr_reg:x8; val_offset:69*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 69*FLEN/8, x14, x4, x7)

inst_48:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x041 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x156 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x05a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x41; op2val:0xc556;
op3val:0x5a; valaddr_reg:x8; val_offset:72*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 72*FLEN/8, x14, x4, x7)

inst_49:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x046 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x3be and fs3 == 0 and fe3 == 0x00 and fm3 == 0x01d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x46; op2val:0xc7be;
op3val:0x1d; valaddr_reg:x8; val_offset:75*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 75*FLEN/8, x14, x4, x7)

inst_50:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x02d and fs2 == 1 and fe2 == 0x0e and fm2 == 0x182 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x020 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x2d; op2val:0xb982;
op3val:0x20; valaddr_reg:x8; val_offset:78*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 78*FLEN/8, x14, x4, x7)

inst_51:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002 and fs2 == 1 and fe2 == 0x13 and fm2 == 0x060 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x026 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x2; op2val:0xcc60;
op3val:0x26; valaddr_reg:x8; val_offset:81*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 81*FLEN/8, x14, x4, x7)

inst_52:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x02c and fs2 == 1 and fe2 == 0x0e and fm2 == 0x05d and fs3 == 0 and fe3 == 0x00 and fm3 == 0x01d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x2c; op2val:0xb85d;
op3val:0x1d; valaddr_reg:x8; val_offset:84*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 84*FLEN/8, x14, x4, x7)

inst_53:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x023 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x350 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x005 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x23; op2val:0x2f50;
op3val:0x5; valaddr_reg:x8; val_offset:87*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 87*FLEN/8, x14, x4, x7)

inst_54:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x037 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0a7 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x021 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x37; op2val:0xb4a7;
op3val:0x21; valaddr_reg:x8; val_offset:90*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 90*FLEN/8, x14, x4, x7)

inst_55:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x031 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x3d6 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x027 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x31; op2val:0xafd6;
op3val:0x27; valaddr_reg:x8; val_offset:93*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 93*FLEN/8, x14, x4, x7)

inst_56:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x05b and fs2 == 0 and fe2 == 0x0b and fm2 == 0x3bc and fs3 == 0 and fe3 == 0x00 and fm3 == 0x036 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5b; op2val:0x2fbc;
op3val:0x36; valaddr_reg:x8; val_offset:96*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 96*FLEN/8, x14, x4, x7)

inst_57:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x017 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x3a6 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x055 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x17; op2val:0x3fa6;
op3val:0x55; valaddr_reg:x8; val_offset:99*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 99*FLEN/8, x14, x4, x7)

inst_58:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x033 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x0be and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x33; op2val:0x44be;
op3val:0xf; valaddr_reg:x8; val_offset:102*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 102*FLEN/8, x14, x4, x7)

inst_59:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x016 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x0dd and fs3 == 0 and fe3 == 0x00 and fm3 == 0x055 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x16; op2val:0x4cdd;
op3val:0x55; valaddr_reg:x8; val_offset:105*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 105*FLEN/8, x14, x4, x7)

inst_60:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x004 and fs2 == 1 and fe2 == 0x17 and fm2 == 0x018 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x01a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x4; op2val:0xdc18;
op3val:0x1a; valaddr_reg:x8; val_offset:108*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 108*FLEN/8, x14, x4, x7)

inst_61:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x063 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x143 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x015 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x63; op2val:0xc943;
op3val:0x15; valaddr_reg:x8; val_offset:111*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 111*FLEN/8, x14, x4, x7)

inst_62:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x027 and fs2 == 1 and fe2 == 0x13 and fm2 == 0x2a0 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x27; op2val:0xcea0;
op3val:0xf; valaddr_reg:x8; val_offset:114*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 114*FLEN/8, x14, x4, x7)

inst_63:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002 and fs2 == 1 and fe2 == 0x18 and fm2 == 0x059 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x062 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x2; op2val:0xe059;
op3val:0x62; valaddr_reg:x8; val_offset:117*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 117*FLEN/8, x14, x4, x7)

inst_64:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x031 and fs2 == 1 and fe2 == 0x13 and fm2 == 0x15c and fs3 == 0 and fe3 == 0x00 and fm3 == 0x02c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x31; op2val:0xcd5c;
op3val:0x2c; valaddr_reg:x8; val_offset:120*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 120*FLEN/8, x14, x4, x7)

inst_65:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x016 and fs2 == 1 and fe2 == 0x14 and fm2 == 0x20b and fs3 == 0 and fe3 == 0x00 and fm3 == 0x049 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x16; op2val:0xd20b;
op3val:0x49; valaddr_reg:x8; val_offset:123*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 123*FLEN/8, x14, x4, x7)

inst_66:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x038 and fs2 == 1 and fe2 == 0x13 and fm2 == 0x06a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x01e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x38; op2val:0xcc6a;
op3val:0x1e; valaddr_reg:x8; val_offset:126*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 126*FLEN/8, x14, x4, x7)

inst_67:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x012 and fs2 == 1 and fe2 == 0x14 and fm2 == 0x295 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x035 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x12; op2val:0xd295;
op3val:0x35; valaddr_reg:x8; val_offset:129*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 129*FLEN/8, x14, x4, x7)

inst_68:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x049 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x1a6 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x03a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x49; op2val:0xc9a6;
op3val:0x3a; valaddr_reg:x8; val_offset:132*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 132*FLEN/8, x14, x4, x7)

inst_69:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x035 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x154 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x036 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x35; op2val:0xc954;
op3val:0x36; valaddr_reg:x8; val_offset:135*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 135*FLEN/8, x14, x4, x7)

inst_70:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00b and fs2 == 0 and fe2 == 0x15 and fm2 == 0x160 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x04c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0xb; op2val:0x5560;
op3val:0x4c; valaddr_reg:x8; val_offset:138*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 138*FLEN/8, x14, x4, x7)

inst_71:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x009 and fs2 == 0 and fe2 == 0x15 and fm2 == 0x2d5 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x025 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x9; op2val:0x56d5;
op3val:0x25; valaddr_reg:x8; val_offset:141*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 141*FLEN/8, x14, x4, x7)

inst_72:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x05c and fs2 == 0 and fe2 == 0x12 and fm2 == 0x177 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5c; op2val:0x4977;
op3val:0xd; valaddr_reg:x8; val_offset:144*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 144*FLEN/8, x14, x4, x7)

inst_73:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x005 and fs2 == 0 and fe2 == 0x16 and fm2 == 0x246 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5; op2val:0x5a46;
op3val:0xb; valaddr_reg:x8; val_offset:147*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 147*FLEN/8, x14, x4, x7)

inst_74:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x055 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x1d7 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x55; op2val:0x49d7;
op3val:0xe; valaddr_reg:x8; val_offset:150*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 150*FLEN/8, x14, x4, x7)

inst_75:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x062 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x0b6 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x043 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x62; op2val:0x48b6;
op3val:0x43; valaddr_reg:x8; val_offset:153*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 153*FLEN/8, x14, x4, x7)

inst_76:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x044 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x2b4 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x02f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x44; op2val:0x4ab4;
op3val:0x2f; valaddr_reg:x8; val_offset:156*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 156*FLEN/8, x14, x4, x7)

inst_77:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x014 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x130 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x041 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x14; op2val:0x5130;
op3val:0x41; valaddr_reg:x8; val_offset:159*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 159*FLEN/8, x14, x4, x7)

inst_78:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x03f and fs2 == 0 and fe2 == 0x12 and fm2 == 0x15d and fs3 == 0 and fe3 == 0x00 and fm3 == 0x05b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f; op2val:0x495d;
op3val:0x5b; valaddr_reg:x8; val_offset:162*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 162*FLEN/8, x14, x4, x7)

inst_79:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x014 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x169 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x04e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x14; op2val:0x4d69;
op3val:0x4e; valaddr_reg:x8; val_offset:165*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 165*FLEN/8, x14, x4, x7)

inst_80:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x009 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x003 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x019 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x409; op2val:0xc003;
op3val:0x419; valaddr_reg:x8; val_offset:168*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 168*FLEN/8, x14, x4, x7)

inst_81:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x003 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x006 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x012 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x403; op2val:0xc006;
op3val:0x412; valaddr_reg:x8; val_offset:171*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 171*FLEN/8, x14, x4, x7)

inst_82:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x02c and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3df and fs3 == 0 and fe3 == 0x01 and fm3 == 0x032 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x42c; op2val:0xbfdf;
op3val:0x432; valaddr_reg:x8; val_offset:174*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 174*FLEN/8, x14, x4, x7)

inst_83:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x055 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3ae and fs3 == 0 and fe3 == 0x01 and fm3 == 0x04a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x455; op2val:0xbfae;
op3val:0x44a; valaddr_reg:x8; val_offset:177*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 177*FLEN/8, x14, x4, x7)

inst_84:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x010 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x027 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x060 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x410; op2val:0xc027;
op3val:0x460; valaddr_reg:x8; val_offset:180*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 180*FLEN/8, x14, x4, x7)

inst_85:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x027 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3ff and fs3 == 0 and fe3 == 0x01 and fm3 == 0x02d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x427; op2val:0xbfff;
op3val:0x42d; valaddr_reg:x8; val_offset:183*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 183*FLEN/8, x14, x4, x7)

inst_86:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x02a and fs2 == 1 and fe2 == 0x10 and fm2 == 0x00c and fs3 == 0 and fe3 == 0x01 and fm3 == 0x02f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x42a; op2val:0xc00c;
op3val:0x42f; valaddr_reg:x8; val_offset:186*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 186*FLEN/8, x14, x4, x7)

inst_87:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x068 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x053 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x401; op2val:0xc068;
op3val:0x453; valaddr_reg:x8; val_offset:189*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 189*FLEN/8, x14, x4, x7)

inst_88:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x040 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x048 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x01b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x440; op2val:0xc048;
op3val:0x41b; valaddr_reg:x8; val_offset:192*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 192*FLEN/8, x14, x4, x7)

inst_89:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x008 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x11d and fs3 == 0 and fe3 == 0x01 and fm3 == 0x050 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x408; op2val:0xc11d;
op3val:0x450; valaddr_reg:x8; val_offset:195*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 195*FLEN/8, x14, x4, x7)

inst_90:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x005 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x208 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x062 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x405; op2val:0xae08;
op3val:0x462; valaddr_reg:x8; val_offset:198*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 198*FLEN/8, x14, x4, x7)

inst_91:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x04b and fs2 == 1 and fe2 == 0x09 and fm2 == 0x0e4 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x017 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x44b; op2val:0xa4e4;
op3val:0x417; valaddr_reg:x8; val_offset:201*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 201*FLEN/8, x14, x4, x7)

inst_92:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x017 and fs2 == 1 and fe2 == 0x0a and fm2 == 0x0e3 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x02c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x417; op2val:0xa8e3;
op3val:0x42c; valaddr_reg:x8; val_offset:204*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 204*FLEN/8, x14, x4, x7)

inst_93:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x038 and fs2 == 1 and fe2 == 0x0a and fm2 == 0x1ce and fs3 == 0 and fe3 == 0x01 and fm3 == 0x039 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x438; op2val:0xa9ce;
op3val:0x439; valaddr_reg:x8; val_offset:207*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 207*FLEN/8, x14, x4, x7)

inst_94:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x010 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x0ec and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x410; op2val:0x1cec;
op3val:0x40b; valaddr_reg:x8; val_offset:210*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 210*FLEN/8, x14, x4, x7)

inst_95:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x01a and fs2 == 1 and fe2 == 0x0a and fm2 == 0x19b and fs3 == 0 and fe3 == 0x01 and fm3 == 0x04e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x41a; op2val:0xa99b;
op3val:0x44e; valaddr_reg:x8; val_offset:213*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 213*FLEN/8, x14, x4, x7)

inst_96:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x01d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f0 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x040 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x41d; op2val:0x2f0;
op3val:0x440; valaddr_reg:x8; val_offset:216*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 216*FLEN/8, x14, x4, x7)

inst_97:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x03d and fs2 == 0 and fe2 == 0x0b and fm2 == 0x25e and fs3 == 0 and fe3 == 0x01 and fm3 == 0x014 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x43d; op2val:0x2e5e;
op3val:0x414; valaddr_reg:x8; val_offset:219*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 219*FLEN/8, x14, x4, x7)

inst_98:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x031 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x328 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x010 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x431; op2val:0x3328;
op3val:0x410; valaddr_reg:x8; val_offset:222*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 222*FLEN/8, x14, x4, x7)

inst_99:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00e and fs2 == 0 and fe2 == 0x0d and fm2 == 0x2bc and fs3 == 0 and fe3 == 0x01 and fm3 == 0x04b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x40e; op2val:0x36bc;
op3val:0x44b; valaddr_reg:x8; val_offset:225*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 225*FLEN/8, x14, x4, x7)

inst_100:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x05d and fs2 == 1 and fe2 == 0x10 and fm2 == 0x199 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x03a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x785d; op2val:0xc199;
op3val:0x783a; valaddr_reg:x8; val_offset:228*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 228*FLEN/8, x14, x4, x7)

inst_101:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x053 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x193 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x011 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7853; op2val:0xc193;
op3val:0x7811; valaddr_reg:x8; val_offset:231*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 231*FLEN/8, x14, x4, x7)

inst_102:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x05d and fs2 == 1 and fe2 == 0x10 and fm2 == 0x197 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x039 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x785d; op2val:0xc197;
op3val:0x7839; valaddr_reg:x8; val_offset:234*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 234*FLEN/8, x14, x4, x7)

inst_103:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x042 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1ca and fs3 == 0 and fe3 == 0x1e and fm3 == 0x05d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7842; op2val:0xc1ca;
op3val:0x785d; valaddr_reg:x8; val_offset:237*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 237*FLEN/8, x14, x4, x7)

inst_104:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x00c and fs2 == 1 and fe2 == 0x10 and fm2 == 0x213 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x05c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x780c; op2val:0xc213;
op3val:0x785c; valaddr_reg:x8; val_offset:240*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 240*FLEN/8, x14, x4, x7)

inst_105:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x03d and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1bc and fs3 == 0 and fe3 == 0x1e and fm3 == 0x049 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x783d; op2val:0xc1bc;
op3val:0x7849; valaddr_reg:x8; val_offset:243*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 243*FLEN/8, x14, x4, x7)

inst_106:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x033 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1ae and fs3 == 0 and fe3 == 0x1e and fm3 == 0x02f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7833; op2val:0xc1ae;
op3val:0x782f; valaddr_reg:x8; val_offset:246*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 246*FLEN/8, x14, x4, x7)

inst_107:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x03b and fs2 == 1 and fe2 == 0x10 and fm2 == 0x17d and fs3 == 0 and fe3 == 0x1e and fm3 == 0x01d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x783b; op2val:0xc17d;
op3val:0x781d; valaddr_reg:x8; val_offset:249*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 249*FLEN/8, x14, x4, x7)

inst_108:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x007 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x182 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x01a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7807; op2val:0xc182;
op3val:0x781a; valaddr_reg:x8; val_offset:252*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 252*FLEN/8, x14, x4, x7)

inst_109:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x007 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x113 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x03a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7807; op2val:0xc113;
op3val:0x783a; valaddr_reg:x8; val_offset:255*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 255*FLEN/8, x14, x4, x7)

inst_110:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x00f and fs2 == 0 and fe2 == 0x0e and fm2 == 0x3c2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x00e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x780f; op2val:0x3bc2;
op3val:0x780e; valaddr_reg:x8; val_offset:258*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 258*FLEN/8, x14, x4, x7)

inst_111:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x01c and fs2 == 0 and fe2 == 0x0e and fm2 == 0x30e and fs3 == 0 and fe3 == 0x1e and fm3 == 0x05d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x781c; op2val:0x3b0e;
op3val:0x785d; valaddr_reg:x8; val_offset:261*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 261*FLEN/8, x14, x4, x7)

inst_112:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x001 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x33e and fs3 == 0 and fe3 == 0x1e and fm3 == 0x05b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7801; op2val:0x3b3e;
op3val:0x785b; valaddr_reg:x8; val_offset:264*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 264*FLEN/8, x14, x4, x7)

inst_113:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x04d and fs2 == 0 and fe2 == 0x0e and fm2 == 0x2cd and fs3 == 0 and fe3 == 0x1e and fm3 == 0x04f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x784d; op2val:0x3acd;
op3val:0x784f; valaddr_reg:x8; val_offset:267*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 267*FLEN/8, x14, x4, x7)

inst_114:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x003 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x330 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x054 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7803; op2val:0x3b30;
op3val:0x7854; valaddr_reg:x8; val_offset:270*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 270*FLEN/8, x14, x4, x7)

inst_115:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x02f and fs2 == 0 and fe2 == 0x0e and fm2 == 0x2fb and fs3 == 0 and fe3 == 0x1e and fm3 == 0x038 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x782f; op2val:0x3afb;
op3val:0x7838; valaddr_reg:x8; val_offset:273*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 273*FLEN/8, x14, x4, x7)

inst_116:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x044 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x2f0 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x00c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7844; op2val:0x3af0;
op3val:0x780c; valaddr_reg:x8; val_offset:276*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 276*FLEN/8, x14, x4, x7)

inst_117:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x060 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x1b3 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x061 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7860; op2val:0x39b3;
op3val:0x7861; valaddr_reg:x8; val_offset:279*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 279*FLEN/8, x14, x4, x7)

inst_118:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x04d and fs2 == 0 and fe2 == 0x0e and fm2 == 0x119 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x041 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x784d; op2val:0x3919;
op3val:0x7841; valaddr_reg:x8; val_offset:282*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 282*FLEN/8, x14, x4, x7)

inst_119:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x05b and fs2 == 0 and fe2 == 0x0d and fm2 == 0x249 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x049 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x785b; op2val:0x3649;
op3val:0x7849; valaddr_reg:x8; val_offset:285*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 285*FLEN/8, x14, x4, x7)

inst_120:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x01e and fs2 == 1 and fe2 == 0x0f and fm2 == 0x288 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x030 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x1e; op2val:0xbe88;
op3val:0x30; valaddr_reg:x8; val_offset:288*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 288*FLEN/8, x14, x4, x7)

inst_121:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x006 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x255 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6; op2val:0xc255;
op3val:0xb; valaddr_reg:x8; val_offset:291*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 291*FLEN/8, x14, x4, x7)

inst_122:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x012 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x155 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x020 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x12; op2val:0xc155;
op3val:0x20; valaddr_reg:x8; val_offset:294*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 294*FLEN/8, x14, x4, x7)

inst_123:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x034 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1a7 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x053 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x34; op2val:0xc1a7;
op3val:0x53; valaddr_reg:x8; val_offset:297*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 297*FLEN/8, x14, x4, x7)

inst_124:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x004 and fs2 == 1 and fe2 == 0x14 and fm2 == 0x1d8 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x03b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x4; op2val:0xd1d8;
op3val:0x3b; valaddr_reg:x8; val_offset:300*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 300*FLEN/8, x14, x4, x7)

inst_125:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x03f and fs2 == 1 and fe2 == 0x11 and fm2 == 0x100 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x03b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3f; op2val:0xc500;
op3val:0x3b; valaddr_reg:x8; val_offset:303*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 303*FLEN/8, x14, x4, x7)

inst_126:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x032 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x1c2 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x040 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x32; op2val:0xc9c2;
op3val:0x40; valaddr_reg:x8; val_offset:306*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 306*FLEN/8, x14, x4, x7)

inst_127:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x034 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x227 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x34; op2val:0xb227;
op3val:0xc; valaddr_reg:x8; val_offset:309*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 309*FLEN/8, x14, x4, x7)

inst_128:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x05d and fs2 == 0 and fe2 == 0x0f and fm2 == 0x0dc and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fnmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5d; op2val:0x3cdc;
op3val:0xf; valaddr_reg:x8; val_offset:312*FLEN/8; rmval:dyn;
testreg:x7; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, x31, x30, x29, x28, dyn, 0, 0, x8, 312*FLEN/8, x14, x4, x7)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(30,32,FLEN)
NAN_BOXED(30,16,FLEN)
NAN_BOXED(48,32,FLEN)
NAN_BOXED(49,32,FLEN)
NAN_BOXED(46644,16,FLEN)
NAN_BOXED(17,32,FLEN)
NAN_BOXED(25,32,FLEN)
NAN_BOXED(50073,16,FLEN)
NAN_BOXED(91,32,FLEN)
NAN_BOXED(6,32,FLEN)
NAN_BOXED(49749,16,FLEN)
NAN_BOXED(6,32,FLEN)
NAN_BOXED(18,32,FLEN)
NAN_BOXED(18,16,FLEN)
NAN_BOXED(18,32,FLEN)
NAN_BOXED(65,32,FLEN)
NAN_BOXED(47938,16,FLEN)
NAN_BOXED(27,32,FLEN)
NAN_BOXED(52,32,FLEN)
NAN_BOXED(49575,16,FLEN)
NAN_BOXED(49575,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(53720,16,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(63,32,FLEN)
NAN_BOXED(63,16,FLEN)
NAN_BOXED(63,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(64,32,FLEN)
NAN_BOXED(74,32,FLEN)
NAN_BOXED(46384,16,FLEN)
NAN_BOXED(25,32,FLEN)
NAN_BOXED(52,32,FLEN)
NAN_BOXED(45607,16,FLEN)
NAN_BOXED(45607,32,FLEN)
NAN_BOXED(63,32,FLEN)
NAN_BOXED(46746,16,FLEN)
NAN_BOXED(30,32,FLEN)
NAN_BOXED(98,32,FLEN)
NAN_BOXED(10887,32,FLEN)
NAN_BOXED(3,32,FLEN)
test_dataset_1:
NAN_BOXED(90,32,FLEN)
NAN_BOXED(45761,16,FLEN)
NAN_BOXED(35,32,FLEN)
NAN_BOXED(67,32,FLEN)
NAN_BOXED(46339,16,FLEN)
NAN_BOXED(53,32,FLEN)
NAN_BOXED(61,32,FLEN)
NAN_BOXED(13278,32,FLEN)
NAN_BOXED(49,32,FLEN)
NAN_BOXED(93,32,FLEN)
NAN_BOXED(15580,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(85,32,FLEN)
NAN_BOXED(16697,32,FLEN)
NAN_BOXED(34,32,FLEN)
NAN_BOXED(13,32,FLEN)
NAN_BOXED(20694,32,FLEN)
NAN_BOXED(9,32,FLEN)
NAN_BOXED(15410,32,FLEN)
NAN_BOXED(49133,16,FLEN)
NAN_BOXED(15440,32,FLEN)
NAN_BOXED(15409,32,FLEN)
NAN_BOXED(49073,16,FLEN)
NAN_BOXED(15374,32,FLEN)
NAN_BOXED(15445,32,FLEN)
NAN_BOXED(49006,16,FLEN)
NAN_BOXED(15368,32,FLEN)
NAN_BOXED(15404,32,FLEN)
NAN_BOXED(49105,16,FLEN)
NAN_BOXED(15391,32,FLEN)
test_dataset_2:
NAN_BOXED(15449,16,FLEN)
NAN_BOXED(49013,16,FLEN)
NAN_BOXED(15372,16,FLEN)
NAN_BOXED(15424,16,FLEN)
NAN_BOXED(49140,16,FLEN)
NAN_BOXED(15444,16,FLEN)
NAN_BOXED(15427,16,FLEN)
NAN_BOXED(49111,16,FLEN)
NAN_BOXED(15387,16,FLEN)
NAN_BOXED(15435,16,FLEN)
NAN_BOXED(49149,16,FLEN)
NAN_BOXED(15379,16,FLEN)
NAN_BOXED(15438,16,FLEN)
NAN_BOXED(49202,16,FLEN)
NAN_BOXED(15369,16,FLEN)
NAN_BOXED(15430,16,FLEN)
NAN_BOXED(49328,16,FLEN)
NAN_BOXED(15365,16,FLEN)
NAN_BOXED(15423,16,FLEN)
NAN_BOXED(44349,16,FLEN)
NAN_BOXED(15450,16,FLEN)
NAN_BOXED(15385,16,FLEN)
NAN_BOXED(42022,16,FLEN)
NAN_BOXED(15379,16,FLEN)
NAN_BOXED(15435,16,FLEN)
NAN_BOXED(43623,16,FLEN)
NAN_BOXED(15419,16,FLEN)
NAN_BOXED(15454,16,FLEN)
NAN_BOXED(43947,16,FLEN)
NAN_BOXED(15435,16,FLEN)
NAN_BOXED(15417,16,FLEN)
NAN_BOXED(42233,16,FLEN)
NAN_BOXED(15397,16,FLEN)
NAN_BOXED(15432,16,FLEN)
NAN_BOXED(41610,16,FLEN)
NAN_BOXED(15406,16,FLEN)
NAN_BOXED(15415,16,FLEN)
NAN_BOXED(10612,16,FLEN)
NAN_BOXED(15378,16,FLEN)
NAN_BOXED(15381,16,FLEN)
NAN_BOXED(10073,16,FLEN)
NAN_BOXED(15458,16,FLEN)
NAN_BOXED(15437,16,FLEN)
NAN_BOXED(13072,16,FLEN)
NAN_BOXED(15373,16,FLEN)
NAN_BOXED(15429,16,FLEN)
NAN_BOXED(13873,16,FLEN)
NAN_BOXED(15449,16,FLEN)
NAN_BOXED(41,16,FLEN)
NAN_BOXED(49264,16,FLEN)
NAN_BOXED(90,16,FLEN)
NAN_BOXED(46,16,FLEN)
NAN_BOXED(49018,16,FLEN)
NAN_BOXED(83,16,FLEN)
NAN_BOXED(64,16,FLEN)
NAN_BOXED(48224,16,FLEN)
NAN_BOXED(65,16,FLEN)
NAN_BOXED(80,16,FLEN)
NAN_BOXED(46848,16,FLEN)
NAN_BOXED(26,16,FLEN)
NAN_BOXED(40,16,FLEN)
NAN_BOXED(47974,16,FLEN)
NAN_BOXED(20,16,FLEN)
NAN_BOXED(46,16,FLEN)
NAN_BOXED(49252,16,FLEN)
NAN_BOXED(68,16,FLEN)
NAN_BOXED(37,16,FLEN)
NAN_BOXED(49940,16,FLEN)
NAN_BOXED(66,16,FLEN)
NAN_BOXED(85,16,FLEN)
NAN_BOXED(48778,16,FLEN)
NAN_BOXED(10,16,FLEN)
NAN_BOXED(65,16,FLEN)
NAN_BOXED(50518,16,FLEN)
NAN_BOXED(90,16,FLEN)
NAN_BOXED(70,16,FLEN)
NAN_BOXED(51134,16,FLEN)
NAN_BOXED(29,16,FLEN)
NAN_BOXED(45,16,FLEN)
NAN_BOXED(47490,16,FLEN)
NAN_BOXED(32,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(52320,16,FLEN)
NAN_BOXED(38,16,FLEN)
NAN_BOXED(44,16,FLEN)
NAN_BOXED(47197,16,FLEN)
NAN_BOXED(29,16,FLEN)
NAN_BOXED(35,16,FLEN)
NAN_BOXED(12112,16,FLEN)
NAN_BOXED(5,16,FLEN)
NAN_BOXED(55,16,FLEN)
NAN_BOXED(46247,16,FLEN)
NAN_BOXED(33,16,FLEN)
NAN_BOXED(49,16,FLEN)
NAN_BOXED(45014,16,FLEN)
NAN_BOXED(39,16,FLEN)
NAN_BOXED(91,16,FLEN)
NAN_BOXED(12220,16,FLEN)
NAN_BOXED(54,16,FLEN)
NAN_BOXED(23,16,FLEN)
NAN_BOXED(16294,16,FLEN)
NAN_BOXED(85,16,FLEN)
NAN_BOXED(51,16,FLEN)
NAN_BOXED(17598,16,FLEN)
NAN_BOXED(15,16,FLEN)
NAN_BOXED(22,16,FLEN)
NAN_BOXED(19677,16,FLEN)
NAN_BOXED(85,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(56344,16,FLEN)
NAN_BOXED(26,16,FLEN)
NAN_BOXED(99,16,FLEN)
NAN_BOXED(51523,16,FLEN)
NAN_BOXED(21,16,FLEN)
NAN_BOXED(39,16,FLEN)
NAN_BOXED(52896,16,FLEN)
NAN_BOXED(15,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(57433,16,FLEN)
NAN_BOXED(98,16,FLEN)
NAN_BOXED(49,16,FLEN)
NAN_BOXED(52572,16,FLEN)
NAN_BOXED(44,16,FLEN)
NAN_BOXED(22,16,FLEN)
NAN_BOXED(53771,16,FLEN)
NAN_BOXED(73,16,FLEN)
NAN_BOXED(56,16,FLEN)
NAN_BOXED(52330,16,FLEN)
NAN_BOXED(30,16,FLEN)
NAN_BOXED(18,16,FLEN)
NAN_BOXED(53909,16,FLEN)
NAN_BOXED(53,16,FLEN)
NAN_BOXED(73,16,FLEN)
NAN_BOXED(51622,16,FLEN)
NAN_BOXED(58,16,FLEN)
NAN_BOXED(53,16,FLEN)
NAN_BOXED(51540,16,FLEN)
NAN_BOXED(54,16,FLEN)
NAN_BOXED(11,16,FLEN)
NAN_BOXED(21856,16,FLEN)
NAN_BOXED(76,16,FLEN)
NAN_BOXED(9,16,FLEN)
NAN_BOXED(22229,16,FLEN)
NAN_BOXED(37,16,FLEN)
NAN_BOXED(92,16,FLEN)
NAN_BOXED(18807,16,FLEN)
NAN_BOXED(13,16,FLEN)
NAN_BOXED(5,16,FLEN)
NAN_BOXED(23110,16,FLEN)
NAN_BOXED(11,16,FLEN)
NAN_BOXED(85,16,FLEN)
NAN_BOXED(18903,16,FLEN)
NAN_BOXED(14,16,FLEN)
NAN_BOXED(98,16,FLEN)
NAN_BOXED(18614,16,FLEN)
NAN_BOXED(67,16,FLEN)
NAN_BOXED(68,16,FLEN)
NAN_BOXED(19124,16,FLEN)
NAN_BOXED(47,16,FLEN)
NAN_BOXED(20,16,FLEN)
NAN_BOXED(20784,16,FLEN)
NAN_BOXED(65,16,FLEN)
NAN_BOXED(63,16,FLEN)
NAN_BOXED(18781,16,FLEN)
NAN_BOXED(91,16,FLEN)
NAN_BOXED(20,16,FLEN)
NAN_BOXED(19817,16,FLEN)
NAN_BOXED(78,16,FLEN)
NAN_BOXED(1033,16,FLEN)
NAN_BOXED(49155,16,FLEN)
NAN_BOXED(1049,16,FLEN)
NAN_BOXED(1027,16,FLEN)
NAN_BOXED(49158,16,FLEN)
NAN_BOXED(1042,16,FLEN)
NAN_BOXED(1068,16,FLEN)
NAN_BOXED(49119,16,FLEN)
NAN_BOXED(1074,16,FLEN)
NAN_BOXED(1109,16,FLEN)
NAN_BOXED(49070,16,FLEN)
NAN_BOXED(1098,16,FLEN)
NAN_BOXED(1040,16,FLEN)
NAN_BOXED(49191,16,FLEN)
NAN_BOXED(1120,16,FLEN)
NAN_BOXED(1063,16,FLEN)
NAN_BOXED(49151,16,FLEN)
NAN_BOXED(1069,16,FLEN)
NAN_BOXED(1066,16,FLEN)
NAN_BOXED(49164,16,FLEN)
NAN_BOXED(1071,16,FLEN)
NAN_BOXED(1025,16,FLEN)
NAN_BOXED(49256,16,FLEN)
NAN_BOXED(1107,16,FLEN)
NAN_BOXED(1088,16,FLEN)
NAN_BOXED(49224,16,FLEN)
NAN_BOXED(1051,16,FLEN)
NAN_BOXED(1032,16,FLEN)
NAN_BOXED(49437,16,FLEN)
NAN_BOXED(1104,16,FLEN)
NAN_BOXED(1029,16,FLEN)
NAN_BOXED(44552,16,FLEN)
NAN_BOXED(1122,16,FLEN)
NAN_BOXED(1099,16,FLEN)
NAN_BOXED(42212,16,FLEN)
NAN_BOXED(1047,16,FLEN)
NAN_BOXED(1047,16,FLEN)
NAN_BOXED(43235,16,FLEN)
NAN_BOXED(1068,16,FLEN)
NAN_BOXED(1080,16,FLEN)
NAN_BOXED(43470,16,FLEN)
NAN_BOXED(1081,16,FLEN)
NAN_BOXED(1040,16,FLEN)
NAN_BOXED(7404,16,FLEN)
NAN_BOXED(1035,16,FLEN)
NAN_BOXED(1050,16,FLEN)
NAN_BOXED(43419,16,FLEN)
NAN_BOXED(1102,16,FLEN)
NAN_BOXED(1053,16,FLEN)
NAN_BOXED(752,16,FLEN)
NAN_BOXED(1088,16,FLEN)
NAN_BOXED(1085,16,FLEN)
NAN_BOXED(11870,16,FLEN)
NAN_BOXED(1044,16,FLEN)
NAN_BOXED(1073,16,FLEN)
NAN_BOXED(13096,16,FLEN)
NAN_BOXED(1040,16,FLEN)
NAN_BOXED(1038,16,FLEN)
NAN_BOXED(14012,16,FLEN)
NAN_BOXED(1099,16,FLEN)
NAN_BOXED(30813,16,FLEN)
NAN_BOXED(49561,16,FLEN)
NAN_BOXED(30778,16,FLEN)
NAN_BOXED(30803,16,FLEN)
NAN_BOXED(49555,16,FLEN)
NAN_BOXED(30737,16,FLEN)
NAN_BOXED(30813,16,FLEN)
NAN_BOXED(49559,16,FLEN)
NAN_BOXED(30777,16,FLEN)
NAN_BOXED(30786,16,FLEN)
NAN_BOXED(49610,16,FLEN)
NAN_BOXED(30813,16,FLEN)
NAN_BOXED(30732,16,FLEN)
NAN_BOXED(49683,16,FLEN)
NAN_BOXED(30812,16,FLEN)
NAN_BOXED(30781,16,FLEN)
NAN_BOXED(49596,16,FLEN)
NAN_BOXED(30793,16,FLEN)
NAN_BOXED(30771,16,FLEN)
NAN_BOXED(49582,16,FLEN)
NAN_BOXED(30767,16,FLEN)
NAN_BOXED(30779,16,FLEN)
NAN_BOXED(49533,16,FLEN)
NAN_BOXED(30749,16,FLEN)
NAN_BOXED(30727,16,FLEN)
NAN_BOXED(49538,16,FLEN)
NAN_BOXED(30746,16,FLEN)
NAN_BOXED(30727,16,FLEN)
NAN_BOXED(49427,16,FLEN)
NAN_BOXED(30778,16,FLEN)
NAN_BOXED(30735,16,FLEN)
NAN_BOXED(15298,16,FLEN)
NAN_BOXED(30734,16,FLEN)
NAN_BOXED(30748,16,FLEN)
NAN_BOXED(15118,16,FLEN)
NAN_BOXED(30813,16,FLEN)
NAN_BOXED(30721,16,FLEN)
NAN_BOXED(15166,16,FLEN)
NAN_BOXED(30811,16,FLEN)
NAN_BOXED(30797,16,FLEN)
NAN_BOXED(15053,16,FLEN)
NAN_BOXED(30799,16,FLEN)
NAN_BOXED(30723,16,FLEN)
NAN_BOXED(15152,16,FLEN)
NAN_BOXED(30804,16,FLEN)
NAN_BOXED(30767,16,FLEN)
NAN_BOXED(15099,16,FLEN)
NAN_BOXED(30776,16,FLEN)
NAN_BOXED(30788,16,FLEN)
NAN_BOXED(15088,16,FLEN)
NAN_BOXED(30732,16,FLEN)
NAN_BOXED(30816,16,FLEN)
NAN_BOXED(14771,16,FLEN)
NAN_BOXED(30817,16,FLEN)
NAN_BOXED(30797,16,FLEN)
NAN_BOXED(14617,16,FLEN)
NAN_BOXED(30785,16,FLEN)
NAN_BOXED(30811,16,FLEN)
NAN_BOXED(13897,16,FLEN)
NAN_BOXED(30793,16,FLEN)
NAN_BOXED(30,16,FLEN)
NAN_BOXED(48776,16,FLEN)
NAN_BOXED(48,16,FLEN)
NAN_BOXED(6,16,FLEN)
NAN_BOXED(49749,16,FLEN)
NAN_BOXED(11,16,FLEN)
NAN_BOXED(18,16,FLEN)
NAN_BOXED(49493,16,FLEN)
NAN_BOXED(32,16,FLEN)
NAN_BOXED(52,16,FLEN)
NAN_BOXED(49575,16,FLEN)
NAN_BOXED(83,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(53720,16,FLEN)
NAN_BOXED(59,16,FLEN)
NAN_BOXED(63,16,FLEN)
NAN_BOXED(50432,16,FLEN)
NAN_BOXED(59,16,FLEN)
NAN_BOXED(50,16,FLEN)
NAN_BOXED(51650,16,FLEN)
NAN_BOXED(64,16,FLEN)
NAN_BOXED(52,16,FLEN)
NAN_BOXED(45607,16,FLEN)
NAN_BOXED(12,16,FLEN)
NAN_BOXED(93,16,FLEN)
NAN_BOXED(15580,16,FLEN)
NAN_BOXED(15,16,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x3_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x3_1:
    .fill 34*((SIGALIGN)/4),4,0xdeadbeef


signature_x4_0:
    .fill 26*((SIGALIGN)/4),4,0xdeadbeef


signature_x4_1:
    .fill 198*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
