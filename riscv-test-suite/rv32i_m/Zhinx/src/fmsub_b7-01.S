
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.12.2
// timestamp : Wed Sep 25 05:33:17 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/testing/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/testing/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV32Zhinx/rv32h_fmsub.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.h instruction of the RISC-V RV32_Zfinx_Zhinx,RV64_Zfinx_Zhinx extension for the fmsub_b7 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32I_Zfinx_Zhinx,RV64I_Zfinx_Zhinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*Zhinx.*);def TEST_CASE_1=True;",fmsub_b7)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x6,test_dataset_0)
RVTEST_SIGBASE(x4,signature_x4_1)

inst_0:
// rs1 == rs2 == rs3 != rd, rs1==x18, rs2==x18, rs3==x18, rd==x23,fs1 == 0 and fe1 == 0x1d and fm1 == 0x12d and fs2 == 0 and fe2 == 0x0d and fm2 == 0x374 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x0d3 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x18; op2:x18; op3:x18; dest:x23; op1val:0x752d; op2val:0x752d;
op3val:0x752d; valaddr_reg:x6; val_offset:0*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x23, x18, x18, x18, dyn, 96, 0, x6, 0*FLEN/8, x9, x4, x5)

inst_1:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==x27, rs2==x29, rs3==x21, rd==x19,fs1 == 0 and fe1 == 0x1e and fm1 == 0x134 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x31f and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0a2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x27; op2:x29; op3:x21; dest:x19; op1val:0x7934; op2val:0x2f1f;
op3val:0x6ca2; valaddr_reg:x6; val_offset:3*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x19, x27, x29, x21, dyn, 96, 0, x6, 3*FLEN/8, x9, x4, x5)

inst_2:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==x2, rs2==x2, rs3==x14, rd==x27,fs1 == 0 and fe1 == 0x1e and fm1 == 0x048 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x175 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x1d9 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x2; op2:x2; op3:x14; dest:x27; op1val:0x7848; op2val:0x7848;
op3val:0x75d9; valaddr_reg:x6; val_offset:6*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x27, x2, x2, x14, dyn, 96, 0, x6, 6*FLEN/8, x9, x4, x5)

inst_3:
// rd == rs2 == rs3 != rs1, rs1==x31, rs2==x12, rs3==x12, rd==x12,fs1 == 0 and fe1 == 0x1a and fm1 == 0x36c and fs2 == 0 and fe2 == 0x12 and fm2 == 0x05f and fs3 == 0 and fe3 == 0x1e and fm3 == 0x00e and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x31; op2:x12; op3:x12; dest:x12; op1val:0x6b6c; op2val:0x485f;
op3val:0x485f; valaddr_reg:x6; val_offset:9*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x12, x31, x12, x12, dyn, 96, 0, x6, 9*FLEN/8, x9, x4, x5)

inst_4:
// rs1 == rs2 == rs3 == rd, rs1==x10, rs2==x10, rs3==x10, rd==x10,fs1 == 0 and fe1 == 0x1a and fm1 == 0x0cc and fs2 == 0 and fe2 == 0x12 and fm2 == 0x1c7 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x2ef and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x10; op2:x10; op3:x10; dest:x10; op1val:0x68cc; op2val:0x68cc;
op3val:0x68cc; valaddr_reg:x6; val_offset:12*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x10, x10, x10, x10, dyn, 96, 0, x6, 12*FLEN/8, x9, x4, x5)

inst_5:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==x1, rs2==x13, rs3==x26, rd==x13,fs1 == 0 and fe1 == 0x1b and fm1 == 0x078 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x131 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x1cd and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x1; op2:x13; op3:x26; dest:x13; op1val:0x6c78; op2val:0x3d31;
op3val:0x6dcd; valaddr_reg:x6; val_offset:15*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x13, x1, x13, x26, dyn, 96, 0, x6, 15*FLEN/8, x9, x4, x5)

inst_6:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==x19, rs2==x28, rs3==x25, rd==x25,fs1 == 0 and fe1 == 0x1d and fm1 == 0x2ca and fs2 == 0 and fe2 == 0x0f and fm2 == 0x3ca and fs3 == 0 and fe3 == 0x1e and fm3 == 0x29c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x19; op2:x28; op3:x25; dest:x25; op1val:0x76ca; op2val:0x3fca;
op3val:0x7a9c; valaddr_reg:x6; val_offset:18*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x25, x19, x28, x25, dyn, 96, 0, x6, 18*FLEN/8, x9, x4, x5)

inst_7:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==x14, rs2==x7, rs3==x17, rd==x14,fs1 == 0 and fe1 == 0x1b and fm1 == 0x3eb and fs2 == 0 and fe2 == 0x0f and fm2 == 0x336 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x323 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x14; op2:x7; op3:x17; dest:x14; op1val:0x6feb; op2val:0x3f36;
op3val:0x7323; valaddr_reg:x6; val_offset:21*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x14, x14, x7, x17, dyn, 96, 0, x6, 21*FLEN/8, x9, x4, x5)

inst_8:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==x23, rs2==x15, rs3==x15, rd==x18,fs1 == 0 and fe1 == 0x1e and fm1 == 0x104 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x20a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x393 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x23; op2:x15; op3:x15; dest:x18; op1val:0x7904; op2val:0x3e0a;
op3val:0x3e0a; valaddr_reg:x6; val_offset:24*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x18, x23, x15, x15, dyn, 96, 0, x6, 24*FLEN/8, x9, x4, x5)

inst_9:
// rs1 == rs2 == rd != rs3, rs1==x8, rs2==x8, rs3==x24, rd==x8,fs1 == 0 and fe1 == 0x1e and fm1 == 0x09d and fs2 == 0 and fe2 == 0x0e and fm2 == 0x17f and fs3 == 0 and fe3 == 0x1d and fm3 == 0x258 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x8; op2:x8; op3:x24; dest:x8; op1val:0x789d; op2val:0x789d;
op3val:0x7658; valaddr_reg:x6; val_offset:27*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x8, x8, x8, x24, dyn, 96, 0, x6, 27*FLEN/8, x9, x4, x5)

inst_10:
// rs1 == rd == rs3 != rs2, rs1==x29, rs2==x17, rs3==x29, rd==x29,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ce and fs2 == 0 and fe2 == 0x0a and fm2 == 0x21c and fs3 == 0 and fe3 == 0x1a and fm3 == 0x1f6 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x29; op2:x17; op3:x29; dest:x29; op1val:0x7bce; op2val:0x2a1c;
op3val:0x7bce; valaddr_reg:x6; val_offset:30*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x29, x29, x17, x29, dyn, 96, 0, x6, 30*FLEN/8, x9, x4, x5)

inst_11:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==x11, rs2==x1, rs3==x11, rd==x3,fs1 == 0 and fe1 == 0x1e and fm1 == 0x2dd and fs2 == 0 and fe2 == 0x0d and fm2 == 0x165 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x0a1 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x11; op2:x1; op3:x11; dest:x3; op1val:0x7add; op2val:0x3565;
op3val:0x7add; valaddr_reg:x6; val_offset:33*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x3, x11, x1, x11, dyn, 96, 0, x6, 33*FLEN/8, x9, x4, x5)

inst_12:
// rs1==x21, rs2==x24, rs3==x8, rd==x26,fs1 == 0 and fe1 == 0x1c and fm1 == 0x09d and fs2 == 0 and fe2 == 0x0e and fm2 == 0x288 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x389 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x21; op2:x24; op3:x8; dest:x26; op1val:0x709d; op2val:0x3a88;
op3val:0x6f89; valaddr_reg:x6; val_offset:36*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x26, x21, x24, x8, dyn, 96, 0, x6, 36*FLEN/8, x9, x4, x5)
RVTEST_VALBASEUPD(x10,test_dataset_1)

inst_13:
// rs1==x7, rs2==x9, rs3==x4, rd==x17,fs1 == 0 and fe1 == 0x1d and fm1 == 0x0ee and fs2 == 0 and fe2 == 0x10 and fm2 == 0x14a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x286 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x7; op2:x9; op3:x4; dest:x17; op1val:0x74ee; op2val:0x414a;
op3val:0x7a86; valaddr_reg:x10; val_offset:0*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x17, x7, x9, x4, dyn, 96, 0, x10, 0*FLEN/8, x12, x4, x5)

inst_14:
// rs1==x13, rs2==x22, rs3==x0, rd==x30,fs1 == 0 and fe1 == 0x1c and fm1 == 0x1c7 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x26f and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0a6 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x13; op2:x22; op3:x0; dest:x30; op1val:0x71c7; op2val:0x426f;
op3val:0x0; valaddr_reg:x10; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x30, x13, x22, x0, dyn, 96, 0, x10, 3*FLEN/8, x12, x4, x2)
RVTEST_SIGBASE(x8,signature_x8_0)

inst_15:
// rs1==x6, rs2==x26, rs3==x3, rd==x11,fs1 == 0 and fe1 == 0x1e and fm1 == 0x11b and fs2 == 0 and fe2 == 0x0e and fm2 == 0x0a9 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x1f4 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x6; op2:x26; op3:x3; dest:x11; op1val:0x791b; op2val:0x38a9;
op3val:0x75f4; valaddr_reg:x10; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x11, x6, x26, x3, dyn, 96, 0, x10, 6*FLEN/8, x12, x8, x2)

inst_16:
// rs1==x20, rs2==x31, rs3==x30, rd==x1,fs1 == 0 and fe1 == 0x1e and fm1 == 0x061 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x356 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x004 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x20; op2:x31; op3:x30; dest:x1; op1val:0x7861; op2val:0x2f56;
op3val:0x6c04; valaddr_reg:x10; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x1, x20, x31, x30, dyn, 96, 0, x10, 9*FLEN/8, x12, x8, x2)

inst_17:
// rs1==x24, rs2==x30, rs3==x7, rd==x28,fs1 == 0 and fe1 == 0x1a and fm1 == 0x3a0 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x2e8 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x296 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x24; op2:x30; op3:x7; dest:x28; op1val:0x6ba0; op2val:0x42e8;
op3val:0x7296; valaddr_reg:x10; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x28, x24, x30, x7, dyn, 96, 0, x10, 12*FLEN/8, x12, x8, x2)

inst_18:
// rs1==x5, rs2==x14, rs3==x23, rd==x20,fs1 == 0 and fe1 == 0x1e and fm1 == 0x170 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x107 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x2d6 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x5; op2:x14; op3:x23; dest:x20; op1val:0x7970; op2val:0x3907;
op3val:0x76d6; valaddr_reg:x10; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x20, x5, x14, x23, dyn, 96, 0, x10, 15*FLEN/8, x12, x8, x2)

inst_19:
// rs1==x28, rs2==x3, rs3==x5, rd==x22,fs1 == 0 and fe1 == 0x1d and fm1 == 0x106 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x374 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0ae and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x28; op2:x3; op3:x5; dest:x22; op1val:0x7506; op2val:0x3f74;
op3val:0x78ae; valaddr_reg:x10; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x22, x28, x3, x5, dyn, 96, 0, x10, 18*FLEN/8, x12, x8, x2)

inst_20:
// rs1==x30, rs2==x23, rs3==x19, rd==x24,fs1 == 0 and fe1 == 0x1d and fm1 == 0x33f and fs2 == 0 and fe2 == 0x0e and fm2 == 0x14a and fs3 == 0 and fe3 == 0x1d and fm3 == 0x0cb and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x30; op2:x23; op3:x19; dest:x24; op1val:0x773f; op2val:0x394a;
op3val:0x74cb; valaddr_reg:x10; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x24, x30, x23, x19, dyn, 96, 0, x10, 21*FLEN/8, x12, x8, x2)

inst_21:
// rs1==x3, rs2==x20, rs3==x1, rd==x31,fs1 == 0 and fe1 == 0x1e and fm1 == 0x25a and fs2 == 0 and fe2 == 0x0e and fm2 == 0x30a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x196 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x3; op2:x20; op3:x1; dest:x31; op1val:0x7a5a; op2val:0x3b0a;
op3val:0x7996; valaddr_reg:x10; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x31, x3, x20, x1, dyn, 96, 0, x10, 24*FLEN/8, x12, x8, x2)

inst_22:
// rs1==x26, rs2==x5, rs3==x2, rd==x7,fs1 == 0 and fe1 == 0x1c and fm1 == 0x3ce and fs2 == 0 and fe2 == 0x10 and fm2 == 0x0b4 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x097 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x26; op2:x5; op3:x2; dest:x7; op1val:0x73ce; op2val:0x40b4;
op3val:0x7897; valaddr_reg:x10; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x7, x26, x5, x2, dyn, 96, 0, x10, 27*FLEN/8, x12, x8, x2)

inst_23:
// rs1==x25, rs2==x6, rs3==x13, rd==x15,fs1 == 0 and fe1 == 0x1e and fm1 == 0x033 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x2aa and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x25; op2:x6; op3:x13; dest:x15; op1val:0x7833; op2val:0x3eaa;
op3val:0x7aff; valaddr_reg:x10; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x15, x25, x6, x13, dyn, 96, 0, x10, 30*FLEN/8, x12, x8, x2)

inst_24:
// rs1==x0, rs2==x27, rs3==x22, rd==x9,fs1 == 0 and fe1 == 0x1e and fm1 == 0x1d5 and fs2 == 0 and fe2 == 0x0d and fm2 == 0x250 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x09a and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x0; op2:x27; op3:x22; dest:x9; op1val:0x0; op2val:0x3650;
op3val:0x749a; valaddr_reg:x10; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x9, x0, x27, x22, dyn, 96, 0, x10, 33*FLEN/8, x12, x8, x2)
RVTEST_VALBASEUPD(x7,test_dataset_2)

inst_25:
// rs1==x12, rs2==x19, rs3==x16, rd==x4,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3d6 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x3b5 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x38d and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x12; op2:x19; op3:x16; dest:x4; op1val:0x7bd6; op2val:0x2fb5;
op3val:0x6f8d; valaddr_reg:x7; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x4, x12, x19, x16, dyn, 96, 0, x7, 0*FLEN/8, x10, x8, x2)

inst_26:
// rs1==x22, rs2==x0, rs3==x28, rd==x5,fs1 == 0 and fe1 == 0x1d and fm1 == 0x2af and fs2 == 0 and fe2 == 0x0f and fm2 == 0x33e and fs3 == 0 and fe3 == 0x1e and fm3 == 0x20d and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x22; op2:x0; op3:x28; dest:x5; op1val:0x76af; op2val:0x0;
op3val:0x7a0d; valaddr_reg:x7; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x5, x22, x0, x28, dyn, 96, 0, x7, 3*FLEN/8, x10, x8, x2)

inst_27:
// rs1==x15, rs2==x16, rs3==x27, rd==x0,fs1 == 0 and fe1 == 0x1c and fm1 == 0x0dc and fs2 == 0 and fe2 == 0x10 and fm2 == 0x26f and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3d1 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x15; op2:x16; op3:x27; dest:x0; op1val:0x70dc; op2val:0x426f;
op3val:0x77d1; valaddr_reg:x7; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x0, x15, x16, x27, dyn, 96, 0, x7, 6*FLEN/8, x10, x8, x2)

inst_28:
// rs1==x9, rs2==x11, rs3==x6, rd==x21,fs1 == 0 and fe1 == 0x1a and fm1 == 0x104 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x042 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x157 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x9; op2:x11; op3:x6; dest:x21; op1val:0x6904; op2val:0x4c42;
op3val:0x7957; valaddr_reg:x7; val_offset:9*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x21, x9, x11, x6, dyn, 96, 0, x7, 9*FLEN/8, x10, x8, x3)

inst_29:
// rs1==x17, rs2==x21, rs3==x9, rd==x2,fs1 == 0 and fe1 == 0x1e and fm1 == 0x21d and fs2 == 0 and fe2 == 0x0e and fm2 == 0x1fe and fs3 == 0 and fe3 == 0x1e and fm3 == 0x094 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x17; op2:x21; op3:x9; dest:x2; op1val:0x7a1d; op2val:0x39fe;
op3val:0x7894; valaddr_reg:x7; val_offset:12*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x2, x17, x21, x9, dyn, 96, 0, x7, 12*FLEN/8, x10, x8, x3)
RVTEST_SIGBASE(x1,signature_x1_0)

inst_30:
// rs1==x16, rs2==x25, rs3==x20, rd==x6,fs1 == 0 and fe1 == 0x1e and fm1 == 0x300 and fs2 == 0 and fe2 == 0x0d and fm2 == 0x1bb and fs3 == 0 and fe3 == 0x1d and fm3 == 0x104 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x16; op2:x25; op3:x20; dest:x6; op1val:0x7b00; op2val:0x35bb;
op3val:0x7504; valaddr_reg:x7; val_offset:15*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x6, x16, x25, x20, dyn, 96, 0, x7, 15*FLEN/8, x10, x1, x3)

inst_31:
// rs1==x4,fs1 == 0 and fe1 == 0x1e and fm1 == 0x18f and fs2 == 0 and fe2 == 0x0e and fm2 == 0x2d6 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0c0 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x4; op2:x29; op3:x18; dest:x13; op1val:0x798f; op2val:0x3ad6;
op3val:0x78c0; valaddr_reg:x7; val_offset:18*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x13, x4, x29, x18, dyn, 96, 0, x7, 18*FLEN/8, x10, x1, x3)

inst_32:
// rs2==x4,fs1 == 0 and fe1 == 0x1e and fm1 == 0x0a3 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x24b and fs3 == 0 and fe3 == 0x1d and fm3 == 0x34b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x25; op2:x4; op3:x26; dest:x6; op1val:0x78a3; op2val:0x3a4b;
op3val:0x774b; valaddr_reg:x7; val_offset:21*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x6, x25, x4, x26, dyn, 96, 0, x7, 21*FLEN/8, x10, x1, x3)

inst_33:
// rs3==x31,fs1 == 0 and fe1 == 0x1e and fm1 == 0x2b7 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x07f and fs3 == 0 and fe3 == 0x1e and fm3 == 0x38d and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x18; op2:x5; op3:x31; dest:x30; op1val:0x7ab7; op2val:0x3c7f;
op3val:0x7b8d; valaddr_reg:x7; val_offset:24*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x30, x18, x5, x31, dyn, 96, 0, x7, 24*FLEN/8, x10, x1, x3)

inst_34:
// rd==x16,fs1 == 0 and fe1 == 0x1d and fm1 == 0x394 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x19a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x14f and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x21; op2:x28; op3:x9; dest:x16; op1val:0x7794; op2val:0x3d9a;
op3val:0x794f; valaddr_reg:x7; val_offset:27*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x16, x21, x28, x9, dyn, 96, 0, x7, 27*FLEN/8, x10, x1, x3)

inst_35:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x3c3 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x1c7 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x19b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6bc3; op2val:0x49c7;
op3val:0x799b; valaddr_reg:x7; val_offset:30*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x31, x30, x29, x28, dyn, 96, 0, x7, 30*FLEN/8, x10, x1, x3)

inst_36:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x12c and fs2 == 0 and fe2 == 0x0f and fm2 == 0x223 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3f0 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x792c; op2val:0x3e23;
op3val:0x7bf0; valaddr_reg:x7; val_offset:33*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x31, x30, x29, x28, dyn, 96, 0, x7, 33*FLEN/8, x10, x1, x3)

inst_37:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x292 and fs2 == 0 and fe2 == 0x0d and fm2 == 0x18a and fs3 == 0 and fe3 == 0x1d and fm3 == 0x08d and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a92; op2val:0x358a;
op3val:0x748d; valaddr_reg:x7; val_offset:36*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x31, x30, x29, x28, dyn, 96, 0, x7, 36*FLEN/8, x10, x1, x3)

inst_38:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x22b and fs2 == 0 and fe2 == 0x0f and fm2 == 0x2ee and fs3 == 0 and fe3 == 0x1e and fm3 == 0x158 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x762b; op2val:0x3eee;
op3val:0x7958; valaddr_reg:x7; val_offset:39*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x31, x30, x29, x28, dyn, 96, 0, x7, 39*FLEN/8, x10, x1, x3)

inst_39:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x1c6 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x11c and fs3 == 0 and fe3 == 0x1d and fm3 == 0x362 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x65c6; op2val:0x4d1c;
op3val:0x7762; valaddr_reg:x7; val_offset:42*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x31, x30, x29, x28, dyn, 96, 0, x7, 42*FLEN/8, x10, x1, x3)

inst_40:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x160 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x193 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x37d and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7160; op2val:0x3993;
op3val:0x6f7d; valaddr_reg:x7; val_offset:45*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x31, x30, x29, x28, dyn, 96, 0, x7, 45*FLEN/8, x10, x1, x3)

inst_41:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x38b and fs2 == 0 and fe2 == 0x12 and fm2 == 0x283 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x224 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6b8b; op2val:0x4a83;
op3val:0x7a24; valaddr_reg:x7; val_offset:48*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x31, x30, x29, x28, dyn, 96, 0, x7, 48*FLEN/8, x10, x1, x3)

inst_42:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x023 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x3b0 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x3eb and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7023; op2val:0x3fb0;
op3val:0x73eb; valaddr_reg:x7; val_offset:51*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x31, x30, x29, x28, dyn, 96, 0, x7, 51*FLEN/8, x10, x1, x3)

inst_43:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x240 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x076 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2f7 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7640; op2val:0x4076;
op3val:0x7af7; valaddr_reg:x7; val_offset:54*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x31, x30, x29, x28, dyn, 96, 0, x7, 54*FLEN/8, x10, x1, x3)

inst_44:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x127 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x195 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x32f and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6d27; op2val:0x4595;
op3val:0x772f; valaddr_reg:x7; val_offset:57*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x31, x30, x29, x28, dyn, 96, 0, x7, 57*FLEN/8, x10, x1, x3)

inst_45:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x064 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x270 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x310 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7864; op2val:0x3e70;
op3val:0x7b10; valaddr_reg:x7; val_offset:60*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x31, x30, x29, x28, dyn, 96, 0, x7, 60*FLEN/8, x10, x1, x3)

inst_46:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x28d and fs2 == 0 and fe2 == 0x0f and fm2 == 0x039 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2e8 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a8d; op2val:0x3c39;
op3val:0x7ae8; valaddr_reg:x7; val_offset:63*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x31, x30, x29, x28, dyn, 96, 0, x7, 63*FLEN/8, x10, x1, x3)

inst_47:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x073 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x1fa and fs3 == 0 and fe3 == 0x1d and fm3 == 0x2a4 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7473; op2val:0x3dfa;
op3val:0x76a4; valaddr_reg:x7; val_offset:66*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x31, x30, x29, x28, dyn, 96, 0, x7, 66*FLEN/8, x10, x1, x3)

inst_48:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1bc and fs2 == 0 and fe2 == 0x10 and fm2 == 0x0ef and fs3 == 0 and fe3 == 0x1e and fm3 == 0x311 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x75bc; op2val:0x40ef;
op3val:0x7b11; valaddr_reg:x7; val_offset:69*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x31, x30, x29, x28, dyn, 96, 0, x7, 69*FLEN/8, x10, x1, x3)

inst_49:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3a8 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x10b and fs3 == 0 and fe3 == 0x1c and fm3 == 0x0d3 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ba8; op2val:0x310b;
op3val:0x70d3; valaddr_reg:x7; val_offset:72*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x31, x30, x29, x28, dyn, 96, 0, x7, 72*FLEN/8, x10, x1, x3)

inst_50:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x1a2 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x143 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x36b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x71a2; op2val:0x3d43;
op3val:0x736b; valaddr_reg:x7; val_offset:75*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x31, x30, x29, x28, dyn, 96, 0, x7, 75*FLEN/8, x10, x1, x3)

inst_51:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x376 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x028 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3c1 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7376; op2val:0x4028;
op3val:0x77c1; valaddr_reg:x7; val_offset:78*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x31, x30, x29, x28, dyn, 96, 0, x7, 78*FLEN/8, x10, x1, x3)

inst_52:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0b5 and fs2 == 0 and fe2 == 0x0d and fm2 == 0x322 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x033 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x78b5; op2val:0x3722;
op3val:0x7433; valaddr_reg:x7; val_offset:81*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x31, x30, x29, x28, dyn, 96, 0, x7, 81*FLEN/8, x10, x1, x3)

inst_53:
// fs1 == 0 and fe1 == 0x17 and fm1 == 0x034 and fs2 == 0 and fe2 == 0x15 and fm2 == 0x25f and fs3 == 0 and fe3 == 0x1d and fm3 == 0x2b3 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5c34; op2val:0x565f;
op3val:0x76b3; valaddr_reg:x7; val_offset:84*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x31, x30, x29, x28, dyn, 96, 0, x7, 84*FLEN/8, x10, x1, x3)

inst_54:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1e7 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x222 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x087 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x75e7; op2val:0x3e22;
op3val:0x7887; valaddr_reg:x7; val_offset:87*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x31, x30, x29, x28, dyn, 96, 0, x7, 87*FLEN/8, x10, x1, x3)

inst_55:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x39e and fs2 == 0 and fe2 == 0x0e and fm2 == 0x1cb and fs3 == 0 and fe3 == 0x1e and fm3 == 0x185 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b9e; op2val:0x39cb;
op3val:0x7985; valaddr_reg:x7; val_offset:90*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x31, x30, x29, x28, dyn, 96, 0, x7, 90*FLEN/8, x10, x1, x3)

inst_56:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x12d and fs2 == 0 and fe2 == 0x0d and fm2 == 0x374 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x0d3 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x752d; op2val:0x3774;
op3val:0x70d3; valaddr_reg:x7; val_offset:93*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x31, x30, x29, x28, dyn, 96, 0, x7, 93*FLEN/8, x10, x1, x3)

inst_57:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x048 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x175 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x1d9 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7848; op2val:0x3975;
op3val:0x75d9; valaddr_reg:x7; val_offset:96*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x31, x30, x29, x28, dyn, 96, 0, x7, 96*FLEN/8, x10, x1, x3)

inst_58:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x36c and fs2 == 0 and fe2 == 0x12 and fm2 == 0x05f and fs3 == 0 and fe3 == 0x1e and fm3 == 0x00e and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x6b6c; op2val:0x485f;
op3val:0x780e; valaddr_reg:x7; val_offset:99*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x31, x30, x29, x28, dyn, 96, 0, x7, 99*FLEN/8, x10, x1, x3)

inst_59:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x0cc and fs2 == 0 and fe2 == 0x12 and fm2 == 0x1c7 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x2ef and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x68cc; op2val:0x49c7;
op3val:0x76ef; valaddr_reg:x7; val_offset:102*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x31, x30, x29, x28, dyn, 96, 0, x7, 102*FLEN/8, x10, x1, x3)

inst_60:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x104 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x20a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x393 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7904; op2val:0x3e0a;
op3val:0x7b93; valaddr_reg:x7; val_offset:105*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x31, x30, x29, x28, dyn, 96, 0, x7, 105*FLEN/8, x10, x1, x3)

inst_61:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x09d and fs2 == 0 and fe2 == 0x0e and fm2 == 0x17f and fs3 == 0 and fe3 == 0x1d and fm3 == 0x258 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x789d; op2val:0x397f;
op3val:0x7658; valaddr_reg:x7; val_offset:108*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x31, x30, x29, x28, dyn, 96, 0, x7, 108*FLEN/8, x10, x1, x3)

inst_62:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ce and fs2 == 0 and fe2 == 0x0a and fm2 == 0x21c and fs3 == 0 and fe3 == 0x1a and fm3 == 0x1f6 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7bce; op2val:0x2a1c;
op3val:0x69f6; valaddr_reg:x7; val_offset:111*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x31, x30, x29, x28, dyn, 96, 0, x7, 111*FLEN/8, x10, x1, x3)

inst_63:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2dd and fs2 == 0 and fe2 == 0x0d and fm2 == 0x165 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x0a1 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7add; op2val:0x3565;
op3val:0x74a1; valaddr_reg:x7; val_offset:114*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x31, x30, x29, x28, dyn, 96, 0, x7, 114*FLEN/8, x10, x1, x3)

inst_64:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x1c7 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x26f and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0a6 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x71c7; op2val:0x426f;
op3val:0x78a6; valaddr_reg:x7; val_offset:117*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x31, x30, x29, x28, dyn, 96, 0, x7, 117*FLEN/8, x10, x1, x3)

inst_65:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1d5 and fs2 == 0 and fe2 == 0x0d and fm2 == 0x250 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x09a and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x79d5; op2val:0x3650;
op3val:0x749a; valaddr_reg:x7; val_offset:120*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x31, x30, x29, x28, dyn, 96, 0, x7, 120*FLEN/8, x10, x1, x3)

inst_66:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2af and fs2 == 0 and fe2 == 0x0f and fm2 == 0x33e and fs3 == 0 and fe3 == 0x1e and fm3 == 0x20d and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x76af; op2val:0x3f3e;
op3val:0x7a0d; valaddr_reg:x7; val_offset:123*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x31, x30, x29, x28, dyn, 96, 0, x7, 123*FLEN/8, x10, x1, x3)

inst_67:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x0dc and fs2 == 0 and fe2 == 0x10 and fm2 == 0x26f and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3d1 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmsub.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x70dc; op2val:0x426f;
op3val:0x77d1; valaddr_reg:x7; val_offset:126*FLEN/8; rmval:dyn;
testreg:x3; fcsr_val:96 */
TEST_FPR4_OP(fmsub.h, x31, x30, x29, x28, dyn, 96, 0, x7, 126*FLEN/8, x10, x1, x3)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(29997,32,FLEN)
NAN_BOXED(29997,32,FLEN)
NAN_BOXED(29997,32,FLEN)
NAN_BOXED(31028,32,FLEN)
NAN_BOXED(12063,32,FLEN)
NAN_BOXED(27810,32,FLEN)
NAN_BOXED(30792,32,FLEN)
NAN_BOXED(30792,32,FLEN)
NAN_BOXED(30169,32,FLEN)
NAN_BOXED(27500,32,FLEN)
NAN_BOXED(18527,32,FLEN)
NAN_BOXED(18527,32,FLEN)
NAN_BOXED(26828,32,FLEN)
NAN_BOXED(26828,32,FLEN)
NAN_BOXED(26828,32,FLEN)
NAN_BOXED(27768,32,FLEN)
NAN_BOXED(15665,32,FLEN)
NAN_BOXED(28109,32,FLEN)
NAN_BOXED(30410,32,FLEN)
NAN_BOXED(16330,32,FLEN)
NAN_BOXED(31388,32,FLEN)
NAN_BOXED(28651,32,FLEN)
NAN_BOXED(16182,32,FLEN)
NAN_BOXED(29475,32,FLEN)
NAN_BOXED(30980,32,FLEN)
NAN_BOXED(15882,32,FLEN)
NAN_BOXED(15882,32,FLEN)
NAN_BOXED(30877,32,FLEN)
NAN_BOXED(30877,32,FLEN)
NAN_BOXED(30296,32,FLEN)
NAN_BOXED(31694,32,FLEN)
NAN_BOXED(10780,32,FLEN)
NAN_BOXED(31694,32,FLEN)
NAN_BOXED(31453,32,FLEN)
NAN_BOXED(13669,32,FLEN)
NAN_BOXED(31453,32,FLEN)
NAN_BOXED(28829,32,FLEN)
NAN_BOXED(14984,32,FLEN)
NAN_BOXED(28553,32,FLEN)
test_dataset_1:
NAN_BOXED(29934,32,FLEN)
NAN_BOXED(16714,32,FLEN)
NAN_BOXED(31366,32,FLEN)
NAN_BOXED(29127,32,FLEN)
NAN_BOXED(17007,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(31003,32,FLEN)
NAN_BOXED(14505,32,FLEN)
NAN_BOXED(30196,32,FLEN)
NAN_BOXED(30817,32,FLEN)
NAN_BOXED(12118,32,FLEN)
NAN_BOXED(27652,32,FLEN)
NAN_BOXED(27552,32,FLEN)
NAN_BOXED(17128,32,FLEN)
NAN_BOXED(29334,32,FLEN)
NAN_BOXED(31088,32,FLEN)
NAN_BOXED(14599,32,FLEN)
NAN_BOXED(30422,32,FLEN)
NAN_BOXED(29958,32,FLEN)
NAN_BOXED(16244,32,FLEN)
NAN_BOXED(30894,32,FLEN)
NAN_BOXED(30527,32,FLEN)
NAN_BOXED(14666,32,FLEN)
NAN_BOXED(29899,32,FLEN)
NAN_BOXED(31322,32,FLEN)
NAN_BOXED(15114,32,FLEN)
NAN_BOXED(31126,32,FLEN)
NAN_BOXED(29646,32,FLEN)
NAN_BOXED(16564,32,FLEN)
NAN_BOXED(30871,32,FLEN)
NAN_BOXED(30771,32,FLEN)
NAN_BOXED(16042,32,FLEN)
NAN_BOXED(31487,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(13904,32,FLEN)
NAN_BOXED(29850,32,FLEN)
test_dataset_2:
NAN_BOXED(31702,16,FLEN)
NAN_BOXED(12213,16,FLEN)
NAN_BOXED(28557,16,FLEN)
NAN_BOXED(30383,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31245,16,FLEN)
NAN_BOXED(28892,16,FLEN)
NAN_BOXED(17007,16,FLEN)
NAN_BOXED(30673,16,FLEN)
NAN_BOXED(26884,16,FLEN)
NAN_BOXED(19522,16,FLEN)
NAN_BOXED(31063,16,FLEN)
NAN_BOXED(31261,16,FLEN)
NAN_BOXED(14846,16,FLEN)
NAN_BOXED(30868,16,FLEN)
NAN_BOXED(31488,16,FLEN)
NAN_BOXED(13755,16,FLEN)
NAN_BOXED(29956,16,FLEN)
NAN_BOXED(31119,16,FLEN)
NAN_BOXED(15062,16,FLEN)
NAN_BOXED(30912,16,FLEN)
NAN_BOXED(30883,16,FLEN)
NAN_BOXED(14923,16,FLEN)
NAN_BOXED(30539,16,FLEN)
NAN_BOXED(31415,16,FLEN)
NAN_BOXED(15487,16,FLEN)
NAN_BOXED(31629,16,FLEN)
NAN_BOXED(30612,16,FLEN)
NAN_BOXED(15770,16,FLEN)
NAN_BOXED(31055,16,FLEN)
NAN_BOXED(27587,16,FLEN)
NAN_BOXED(18887,16,FLEN)
NAN_BOXED(31131,16,FLEN)
NAN_BOXED(31020,16,FLEN)
NAN_BOXED(15907,16,FLEN)
NAN_BOXED(31728,16,FLEN)
NAN_BOXED(31378,16,FLEN)
NAN_BOXED(13706,16,FLEN)
NAN_BOXED(29837,16,FLEN)
NAN_BOXED(30251,16,FLEN)
NAN_BOXED(16110,16,FLEN)
NAN_BOXED(31064,16,FLEN)
NAN_BOXED(26054,16,FLEN)
NAN_BOXED(19740,16,FLEN)
NAN_BOXED(30562,16,FLEN)
NAN_BOXED(29024,16,FLEN)
NAN_BOXED(14739,16,FLEN)
NAN_BOXED(28541,16,FLEN)
NAN_BOXED(27531,16,FLEN)
NAN_BOXED(19075,16,FLEN)
NAN_BOXED(31268,16,FLEN)
NAN_BOXED(28707,16,FLEN)
NAN_BOXED(16304,16,FLEN)
NAN_BOXED(29675,16,FLEN)
NAN_BOXED(30272,16,FLEN)
NAN_BOXED(16502,16,FLEN)
NAN_BOXED(31479,16,FLEN)
NAN_BOXED(27943,16,FLEN)
NAN_BOXED(17813,16,FLEN)
NAN_BOXED(30511,16,FLEN)
NAN_BOXED(30820,16,FLEN)
NAN_BOXED(15984,16,FLEN)
NAN_BOXED(31504,16,FLEN)
NAN_BOXED(31373,16,FLEN)
NAN_BOXED(15417,16,FLEN)
NAN_BOXED(31464,16,FLEN)
NAN_BOXED(29811,16,FLEN)
NAN_BOXED(15866,16,FLEN)
NAN_BOXED(30372,16,FLEN)
NAN_BOXED(30140,16,FLEN)
NAN_BOXED(16623,16,FLEN)
NAN_BOXED(31505,16,FLEN)
NAN_BOXED(31656,16,FLEN)
NAN_BOXED(12555,16,FLEN)
NAN_BOXED(28883,16,FLEN)
NAN_BOXED(29090,16,FLEN)
NAN_BOXED(15683,16,FLEN)
NAN_BOXED(29547,16,FLEN)
NAN_BOXED(29558,16,FLEN)
NAN_BOXED(16424,16,FLEN)
NAN_BOXED(30657,16,FLEN)
NAN_BOXED(30901,16,FLEN)
NAN_BOXED(14114,16,FLEN)
NAN_BOXED(29747,16,FLEN)
NAN_BOXED(23604,16,FLEN)
NAN_BOXED(22111,16,FLEN)
NAN_BOXED(30387,16,FLEN)
NAN_BOXED(30183,16,FLEN)
NAN_BOXED(15906,16,FLEN)
NAN_BOXED(30855,16,FLEN)
NAN_BOXED(31646,16,FLEN)
NAN_BOXED(14795,16,FLEN)
NAN_BOXED(31109,16,FLEN)
NAN_BOXED(29997,16,FLEN)
NAN_BOXED(14196,16,FLEN)
NAN_BOXED(28883,16,FLEN)
NAN_BOXED(30792,16,FLEN)
NAN_BOXED(14709,16,FLEN)
NAN_BOXED(30169,16,FLEN)
NAN_BOXED(27500,16,FLEN)
NAN_BOXED(18527,16,FLEN)
NAN_BOXED(30734,16,FLEN)
NAN_BOXED(26828,16,FLEN)
NAN_BOXED(18887,16,FLEN)
NAN_BOXED(30447,16,FLEN)
NAN_BOXED(30980,16,FLEN)
NAN_BOXED(15882,16,FLEN)
NAN_BOXED(31635,16,FLEN)
NAN_BOXED(30877,16,FLEN)
NAN_BOXED(14719,16,FLEN)
NAN_BOXED(30296,16,FLEN)
NAN_BOXED(31694,16,FLEN)
NAN_BOXED(10780,16,FLEN)
NAN_BOXED(27126,16,FLEN)
NAN_BOXED(31453,16,FLEN)
NAN_BOXED(13669,16,FLEN)
NAN_BOXED(29857,16,FLEN)
NAN_BOXED(29127,16,FLEN)
NAN_BOXED(17007,16,FLEN)
NAN_BOXED(30886,16,FLEN)
NAN_BOXED(31189,16,FLEN)
NAN_BOXED(13904,16,FLEN)
NAN_BOXED(29850,16,FLEN)
NAN_BOXED(30383,16,FLEN)
NAN_BOXED(16190,16,FLEN)
NAN_BOXED(31245,16,FLEN)
NAN_BOXED(28892,16,FLEN)
NAN_BOXED(17007,16,FLEN)
NAN_BOXED(30673,16,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x4_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x4_1:
    .fill 30*((SIGALIGN)/4),4,0xdeadbeef


signature_x8_0:
    .fill 30*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_0:
    .fill 76*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
