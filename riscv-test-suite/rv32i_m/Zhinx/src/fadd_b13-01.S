
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.12.2
// timestamp : Wed Sep 25 05:45:15 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/testing/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/testing/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV32Zhinx/rv32h_fadd.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fadd.h instruction of the RISC-V RV32_Zfinx_Zhinx,RV64_Zfinx_Zhinx extension for the fadd_b13 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32I_Zfinx_Zhinx,RV64I_Zfinx_Zhinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*Zhinx.*);def TEST_CASE_1=True;",fadd_b13)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rs2 != rd, rs1==x18, rs2==x18, rd==x14,fs1 == 0 and fe1 == 0x1e and fm1 == 0x2c0 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x2c0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x18; op2:x18; dest:x14; op1val:0x7ac0; op2val:0x7ac0; 
   valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x17 
*/
TEST_FPRR_OP(fadd.h, x14, x18, x18, dyn, 0, 0, x3, 0*FLEN/8, x9, x15, x17)

inst_1:
// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x27, rs2==x14, rd==x16,fs1 == 0 and fe1 == 0x1d and fm1 == 0x2b9 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x2b9 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x27; op2:x14; dest:x16; op1val:0x76b9; op2val:0xf6b9; 
   valaddr_reg:x3; val_offset:2*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x17 
*/
TEST_FPRR_OP(fadd.h, x16, x27, x14, dyn, 0, 0, x3, 2*FLEN/8, x9, x15, x17)

inst_2:
// rs1 == rs2 == rd, rs1==x4, rs2==x4, rd==x4,fs1 == 0 and fe1 == 0x1e and fm1 == 0x016 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x016 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x4; op2:x4; dest:x4; op1val:0x7816; op2val:0x7816; 
   valaddr_reg:x3; val_offset:4*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x17 
*/
TEST_FPRR_OP(fadd.h, x4, x4, x4, dyn, 0, 0, x3, 4*FLEN/8, x9, x15, x17)

inst_3:
// rs2 == rd != rs1, rs1==x20, rs2==x22, rd==x22,fs1 == 0 and fe1 == 0x1e and fm1 == 0x244 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x244 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x20; op2:x22; dest:x22; op1val:0x7a44; op2val:0xfa44; 
   valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x17 
*/
TEST_FPRR_OP(fadd.h, x22, x20, x22, dyn, 0, 0, x3, 6*FLEN/8, x9, x15, x17)

inst_4:
// rs1 == rd != rs2, rs1==x19, rs2==x10, rd==x19,fs1 == 0 and fe1 == 0x1d and fm1 == 0x39f and fs2 == 1 and fe2 == 0x1d and fm2 == 0x39f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x19; op2:x10; dest:x19; op1val:0x779f; op2val:0xf79f; 
   valaddr_reg:x3; val_offset:8*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x17 
*/
TEST_FPRR_OP(fadd.h, x19, x19, x10, dyn, 0, 0, x3, 8*FLEN/8, x9, x15, x17)

inst_5:
// rs1==x29, rs2==x21, rd==x28,fs1 == 0 and fe1 == 0x1e and fm1 == 0x342 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x342 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x29; op2:x21; dest:x28; op1val:0x7b42; op2val:0xfb42; 
   valaddr_reg:x3; val_offset:10*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x17 
*/
TEST_FPRR_OP(fadd.h, x28, x29, x21, dyn, 0, 0, x3, 10*FLEN/8, x9, x15, x17)

inst_6:
// rs1==x6, rs2==x28, rd==x21,fs1 == 0 and fe1 == 0x1d and fm1 == 0x081 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x081 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x6; op2:x28; dest:x21; op1val:0x7481; op2val:0xf481; 
   valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x17 
*/
TEST_FPRR_OP(fadd.h, x21, x6, x28, dyn, 0, 0, x3, 12*FLEN/8, x9, x15, x17)

inst_7:
// rs1==x31, rs2==x6, rd==x7,fs1 == 0 and fe1 == 0x1e and fm1 == 0x0f1 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x0f1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x31; op2:x6; dest:x7; op1val:0x78f1; op2val:0xf8f1; 
   valaddr_reg:x3; val_offset:14*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x17 
*/
TEST_FPRR_OP(fadd.h, x7, x31, x6, dyn, 0, 0, x3, 14*FLEN/8, x9, x15, x17)

inst_8:
// rs1==x1, rs2==x13, rd==x8,fs1 == 0 and fe1 == 0x1e and fm1 == 0x346 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x346 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x1; op2:x13; dest:x8; op1val:0x7b46; op2val:0xfb46; 
   valaddr_reg:x3; val_offset:16*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x17 
*/
TEST_FPRR_OP(fadd.h, x8, x1, x13, dyn, 0, 0, x3, 16*FLEN/8, x9, x15, x17)

inst_9:
// rs1==x14, rs2==x25, rd==x12,fs1 == 0 and fe1 == 0x1e and fm1 == 0x27a and fs2 == 1 and fe2 == 0x1e and fm2 == 0x27a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x14; op2:x25; dest:x12; op1val:0x7a7a; op2val:0xfa7a; 
   valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x17 
*/
TEST_FPRR_OP(fadd.h, x12, x14, x25, dyn, 0, 0, x3, 18*FLEN/8, x9, x15, x17)

inst_10:
// rs1==x12, rs2==x2, rd==x11,fs1 == 0 and fe1 == 0x1d and fm1 == 0x0f5 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x0f5 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x12; op2:x2; dest:x11; op1val:0x74f5; op2val:0xf4f5; 
   valaddr_reg:x3; val_offset:20*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x17 
*/
TEST_FPRR_OP(fadd.h, x11, x12, x2, dyn, 0, 0, x3, 20*FLEN/8, x9, x15, x17)

inst_11:
// rs1==x21, rs2==x27, rd==x2,fs1 == 0 and fe1 == 0x1e and fm1 == 0x32f and fs2 == 1 and fe2 == 0x1e and fm2 == 0x32f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x21; op2:x27; dest:x2; op1val:0x7b2f; op2val:0xfb2f; 
   valaddr_reg:x3; val_offset:22*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x17 
*/
TEST_FPRR_OP(fadd.h, x2, x21, x27, dyn, 0, 0, x3, 22*FLEN/8, x9, x15, x17)

inst_12:
// rs1==x11, rs2==x5, rd==x24,fs1 == 0 and fe1 == 0x1d and fm1 == 0x38c and fs2 == 1 and fe2 == 0x1d and fm2 == 0x38c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x11; op2:x5; dest:x24; op1val:0x778c; op2val:0xf78c; 
   valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x17 
*/
TEST_FPRR_OP(fadd.h, x24, x11, x5, dyn, 0, 0, x3, 24*FLEN/8, x9, x15, x17)
RVTEST_VALBASEUPD(x14,test_dataset_1)

inst_13:
// rs1==x3, rs2==x9, rd==x23,fs1 == 0 and fe1 == 0x1d and fm1 == 0x2f1 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x2f1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x3; op2:x9; dest:x23; op1val:0x76f1; op2val:0xf6f1; 
   valaddr_reg:x14; val_offset:0*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x17 
*/
TEST_FPRR_OP(fadd.h, x23, x3, x9, dyn, 0, 0, x14, 0*FLEN/8, x16, x15, x17)
RVTEST_SIGBASE(x4,signature_x4_0)

inst_14:
// rs1==x22, rs2==x3, rd==x9,fs1 == 0 and fe1 == 0x1e and fm1 == 0x34c and fs2 == 1 and fe2 == 0x1e and fm2 == 0x34c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x22; op2:x3; dest:x9; op1val:0x7b4c; op2val:0xfb4c; 
   valaddr_reg:x14; val_offset:2*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x13 
*/
TEST_FPRR_OP(fadd.h, x9, x22, x3, dyn, 0, 0, x14, 2*FLEN/8, x16, x4, x13)

inst_15:
// rs1==x24, rs2==x12, rd==x27,fs1 == 0 and fe1 == 0x1d and fm1 == 0x3a0 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x3a0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x24; op2:x12; dest:x27; op1val:0x77a0; op2val:0xf7a0; 
   valaddr_reg:x14; val_offset:4*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x13 
*/
TEST_FPRR_OP(fadd.h, x27, x24, x12, dyn, 0, 0, x14, 4*FLEN/8, x16, x4, x13)

inst_16:
// rs1==x2, rs2==x11, rd==x15,fs1 == 0 and fe1 == 0x1d and fm1 == 0x02a and fs2 == 1 and fe2 == 0x1d and fm2 == 0x02a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x2; op2:x11; dest:x15; op1val:0x742a; op2val:0xf42a; 
   valaddr_reg:x14; val_offset:6*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x13 
*/
TEST_FPRR_OP(fadd.h, x15, x2, x11, dyn, 0, 0, x14, 6*FLEN/8, x16, x4, x13)

inst_17:
// rs1==x10, rs2==x24, rd==x17,fs1 == 0 and fe1 == 0x1e and fm1 == 0x063 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x063 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x10; op2:x24; dest:x17; op1val:0x7863; op2val:0xf863; 
   valaddr_reg:x14; val_offset:8*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x13 
*/
TEST_FPRR_OP(fadd.h, x17, x10, x24, dyn, 0, 0, x14, 8*FLEN/8, x16, x4, x13)

inst_18:
// rs1==x5, rs2==x8, rd==x31,fs1 == 0 and fe1 == 0x1e and fm1 == 0x1c1 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x1c1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x5; op2:x8; dest:x31; op1val:0x79c1; op2val:0xf9c1; 
   valaddr_reg:x14; val_offset:10*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x13 
*/
TEST_FPRR_OP(fadd.h, x31, x5, x8, dyn, 0, 0, x14, 10*FLEN/8, x16, x4, x13)

inst_19:
// rs1==x28, rs2==x31, rd==x18,fs1 == 0 and fe1 == 0x1e and fm1 == 0x298 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x298 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x28; op2:x31; dest:x18; op1val:0x7a98; op2val:0xfa98; 
   valaddr_reg:x14; val_offset:12*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x13 
*/
TEST_FPRR_OP(fadd.h, x18, x28, x31, dyn, 0, 0, x14, 12*FLEN/8, x16, x4, x13)

inst_20:
// rs1==x8, rs2==x17, rd==x30,fs1 == 0 and fe1 == 0x15 and fm1 == 0x0ad and fs2 == 1 and fe2 == 0x15 and fm2 == 0x0ad and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x8; op2:x17; dest:x30; op1val:0x54ad; op2val:0xd4ad; 
   valaddr_reg:x14; val_offset:14*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x13 
*/
TEST_FPRR_OP(fadd.h, x30, x8, x17, dyn, 0, 0, x14, 14*FLEN/8, x16, x4, x13)

inst_21:
// rs1==x9, rs2==x23, rd==x1,fs1 == 0 and fe1 == 0x1e and fm1 == 0x2ef and fs2 == 1 and fe2 == 0x1e and fm2 == 0x2ef and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x9; op2:x23; dest:x1; op1val:0x7aef; op2val:0xfaef; 
   valaddr_reg:x14; val_offset:16*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x13 
*/
TEST_FPRR_OP(fadd.h, x1, x9, x23, dyn, 0, 0, x14, 16*FLEN/8, x16, x4, x13)

inst_22:
// rs1==x23, rs2==x19, rd==x25,fs1 == 0 and fe1 == 0x1d and fm1 == 0x133 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x133 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x23; op2:x19; dest:x25; op1val:0x7533; op2val:0xf533; 
   valaddr_reg:x14; val_offset:18*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x13 
*/
TEST_FPRR_OP(fadd.h, x25, x23, x19, dyn, 0, 0, x14, 18*FLEN/8, x16, x4, x13)

inst_23:
// rs1==x30, rs2==x20, rd==x5,fs1 == 0 and fe1 == 0x1c and fm1 == 0x21c and fs2 == 1 and fe2 == 0x1c and fm2 == 0x21c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x20; dest:x5; op1val:0x721c; op2val:0xf21c; 
   valaddr_reg:x14; val_offset:20*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x13 
*/
TEST_FPRR_OP(fadd.h, x5, x30, x20, dyn, 0, 0, x14, 20*FLEN/8, x16, x4, x13)

inst_24:
// rs1==x25, rs2==x15, rd==x20,fs1 == 0 and fe1 == 0x1c and fm1 == 0x3a1 and fs2 == 1 and fe2 == 0x1c and fm2 == 0x3a1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x25; op2:x15; dest:x20; op1val:0x73a1; op2val:0xf3a1; 
   valaddr_reg:x14; val_offset:22*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x13 
*/
TEST_FPRR_OP(fadd.h, x20, x25, x15, dyn, 0, 0, x14, 22*FLEN/8, x16, x4, x13)

inst_25:
// rs1==x7, rs2==x29, rd==x6,fs1 == 0 and fe1 == 0x1e and fm1 == 0x26c and fs2 == 1 and fe2 == 0x1e and fm2 == 0x26c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x7; op2:x29; dest:x6; op1val:0x7a6c; op2val:0xfa6c; 
   valaddr_reg:x14; val_offset:24*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x13 
*/
TEST_FPRR_OP(fadd.h, x6, x7, x29, dyn, 0, 0, x14, 24*FLEN/8, x16, x4, x13)
RVTEST_VALBASEUPD(x6,test_dataset_2)

inst_26:
// rs1==x26, rs2==x0, rd==x13,fs1 == 0 and fe1 == 0x1b and fm1 == 0x125 and fs2 == 1 and fe2 == 0x1b and fm2 == 0x125 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x26; op2:x0; dest:x13; op1val:0x6d25; op2val:0x0; 
   valaddr_reg:x6; val_offset:0*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x13, x26, x0, dyn, 0, 0, x6, 0*FLEN/8, x8, x4, x5)
RVTEST_SIGBASE(x2,signature_x2_0)

inst_27:
// rs1==x15, rs2==x7, rd==x3,fs1 == 0 and fe1 == 0x1e and fm1 == 0x00f and fs2 == 1 and fe2 == 0x1e and fm2 == 0x00f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x15; op2:x7; dest:x3; op1val:0x780f; op2val:0xf80f; 
   valaddr_reg:x6; val_offset:2*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x3, x15, x7, dyn, 0, 0, x6, 2*FLEN/8, x8, x2, x5)

inst_28:
// rs1==x16, rs2==x26, rd==x0,fs1 == 0 and fe1 == 0x1b and fm1 == 0x2f9 and fs2 == 1 and fe2 == 0x1b and fm2 == 0x2f9 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x16; op2:x26; dest:x0; op1val:0x6ef9; op2val:0xeef9; 
   valaddr_reg:x6; val_offset:4*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x0, x16, x26, dyn, 0, 0, x6, 4*FLEN/8, x8, x2, x5)

inst_29:
// rs1==x0, rs2==x16, rd==x29,fs1 == 0 and fe1 == 0x1e and fm1 == 0x1a6 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x1a6 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x0; op2:x16; dest:x29; op1val:0x0; op2val:0xf9a6; 
   valaddr_reg:x6; val_offset:6*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x29, x0, x16, dyn, 0, 0, x6, 6*FLEN/8, x8, x2, x5)

inst_30:
// rs1==x13, rs2==x1, rd==x26,fs1 == 0 and fe1 == 0x1e and fm1 == 0x283 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x283 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x13; op2:x1; dest:x26; op1val:0x7a83; op2val:0xfa83; 
   valaddr_reg:x6; val_offset:8*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x26, x13, x1, dyn, 0, 0, x6, 8*FLEN/8, x8, x2, x5)

inst_31:
// rs1==x17, rs2==x30, rd==x10,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3b4 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3b4 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x17; op2:x30; dest:x10; op1val:0x7bb4; op2val:0xfbb4; 
   valaddr_reg:x6; val_offset:10*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x10, x17, x30, dyn, 0, 0, x6, 10*FLEN/8, x8, x2, x5)

inst_32:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0b2 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x0b2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x78b2; op2val:0xf8b2; 
   valaddr_reg:x6; val_offset:12*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 12*FLEN/8, x8, x2, x5)

inst_33:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0c4 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x0c4 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x78c4; op2val:0xf8c4; 
   valaddr_reg:x6; val_offset:14*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 14*FLEN/8, x8, x2, x5)

inst_34:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x09a and fs2 == 1 and fe2 == 0x1e and fm2 == 0x09a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x789a; op2val:0xf89a; 
   valaddr_reg:x6; val_offset:16*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 16*FLEN/8, x8, x2, x5)

inst_35:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x20e and fs2 == 1 and fe2 == 0x1c and fm2 == 0x20e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x720e; op2val:0xf20e; 
   valaddr_reg:x6; val_offset:18*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 18*FLEN/8, x8, x2, x5)

inst_36:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0e6 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x0e6 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x78e6; op2val:0xf8e6; 
   valaddr_reg:x6; val_offset:20*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 20*FLEN/8, x8, x2, x5)

inst_37:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x39e and fs2 == 1 and fe2 == 0x1d and fm2 == 0x39e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x779e; op2val:0xf79e; 
   valaddr_reg:x6; val_offset:22*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 22*FLEN/8, x8, x2, x5)

inst_38:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x20e and fs2 == 1 and fe2 == 0x1e and fm2 == 0x20e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a0e; op2val:0xfa0e; 
   valaddr_reg:x6; val_offset:24*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 24*FLEN/8, x8, x2, x5)

inst_39:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x362 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x362 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b62; op2val:0xfb62; 
   valaddr_reg:x6; val_offset:26*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 26*FLEN/8, x8, x2, x5)

inst_40:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x32e and fs2 == 1 and fe2 == 0x1e and fm2 == 0x32e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b2e; op2val:0xfb2e; 
   valaddr_reg:x6; val_offset:28*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 28*FLEN/8, x8, x2, x5)

inst_41:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x052 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x052 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7852; op2val:0xf852; 
   valaddr_reg:x6; val_offset:30*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 30*FLEN/8, x8, x2, x5)

inst_42:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1a3 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x1a3 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x79a3; op2val:0xf9a3; 
   valaddr_reg:x6; val_offset:32*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 32*FLEN/8, x8, x2, x5)

inst_43:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x27d and fs2 == 1 and fe2 == 0x1e and fm2 == 0x27d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a7d; op2val:0xfa7d; 
   valaddr_reg:x6; val_offset:34*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 34*FLEN/8, x8, x2, x5)

inst_44:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x328 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x328 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b28; op2val:0xfb28; 
   valaddr_reg:x6; val_offset:36*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 36*FLEN/8, x8, x2, x5)

inst_45:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x398 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x398 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b98; op2val:0xfb98; 
   valaddr_reg:x6; val_offset:38*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 38*FLEN/8, x8, x2, x5)

inst_46:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x334 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x334 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7734; op2val:0xf734; 
   valaddr_reg:x6; val_offset:40*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 40*FLEN/8, x8, x2, x5)

inst_47:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3f7 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3f7 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bf7; op2val:0xfbf7; 
   valaddr_reg:x6; val_offset:42*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 42*FLEN/8, x8, x2, x5)

inst_48:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x257 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x257 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a57; op2val:0xfa57; 
   valaddr_reg:x6; val_offset:44*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 44*FLEN/8, x8, x2, x5)

inst_49:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x109 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x109 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7909; op2val:0xf909; 
   valaddr_reg:x6; val_offset:46*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 46*FLEN/8, x8, x2, x5)

inst_50:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x3c5 and fs2 == 1 and fe2 == 0x1c and fm2 == 0x3c5 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x73c5; op2val:0xf3c5; 
   valaddr_reg:x6; val_offset:48*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 48*FLEN/8, x8, x2, x5)

inst_51:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x37e and fs2 == 1 and fe2 == 0x1b and fm2 == 0x37e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x6f7e; op2val:0xef7e; 
   valaddr_reg:x6; val_offset:50*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 50*FLEN/8, x8, x2, x5)

inst_52:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x25a and fs2 == 1 and fe2 == 0x1e and fm2 == 0x25a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a5a; op2val:0xfa5a; 
   valaddr_reg:x6; val_offset:52*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 52*FLEN/8, x8, x2, x5)

inst_53:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x286 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x286 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a86; op2val:0xfa86; 
   valaddr_reg:x6; val_offset:54*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 54*FLEN/8, x8, x2, x5)

inst_54:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x0ae and fs2 == 1 and fe2 == 0x1c and fm2 == 0x0ae and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x70ae; op2val:0xf0ae; 
   valaddr_reg:x6; val_offset:56*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 56*FLEN/8, x8, x2, x5)

inst_55:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x1c9 and fs2 == 1 and fe2 == 0x1a and fm2 == 0x1c9 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x69c9; op2val:0xe9c9; 
   valaddr_reg:x6; val_offset:58*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 58*FLEN/8, x8, x2, x5)

inst_56:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x171 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x171 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7971; op2val:0xf971; 
   valaddr_reg:x6; val_offset:60*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 60*FLEN/8, x8, x2, x5)

inst_57:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x113 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x113 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7913; op2val:0xf913; 
   valaddr_reg:x6; val_offset:62*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 62*FLEN/8, x8, x2, x5)

inst_58:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1eb and fs2 == 1 and fe2 == 0x1d and fm2 == 0x1eb and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x75eb; op2val:0xf5eb; 
   valaddr_reg:x6; val_offset:64*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 64*FLEN/8, x8, x2, x5)

inst_59:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x0a7 and fs2 == 1 and fe2 == 0x1a and fm2 == 0x0a7 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x68a7; op2val:0xe8a7; 
   valaddr_reg:x6; val_offset:66*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 66*FLEN/8, x8, x2, x5)

inst_60:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3af and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3af and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7baf; op2val:0xfbaf; 
   valaddr_reg:x6; val_offset:68*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 68*FLEN/8, x8, x2, x5)

inst_61:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x3ec and fs2 == 1 and fe2 == 0x1b and fm2 == 0x3ec and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x6fec; op2val:0xefec; 
   valaddr_reg:x6; val_offset:70*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 70*FLEN/8, x8, x2, x5)

inst_62:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x267 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x267 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a67; op2val:0xfa67; 
   valaddr_reg:x6; val_offset:72*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 72*FLEN/8, x8, x2, x5)

inst_63:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x1d4 and fs2 == 1 and fe2 == 0x19 and fm2 == 0x1d4 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x65d4; op2val:0xe5d4; 
   valaddr_reg:x6; val_offset:74*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 74*FLEN/8, x8, x2, x5)

inst_64:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x27e and fs2 == 1 and fe2 == 0x1b and fm2 == 0x27e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e7e; op2val:0xee7e; 
   valaddr_reg:x6; val_offset:76*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 76*FLEN/8, x8, x2, x5)

inst_65:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x310 and fs2 == 1 and fe2 == 0x1c and fm2 == 0x310 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7310; op2val:0xf310; 
   valaddr_reg:x6; val_offset:78*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 78*FLEN/8, x8, x2, x5)

inst_66:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x19a and fs2 == 1 and fe2 == 0x1d and fm2 == 0x19a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x759a; op2val:0xf59a; 
   valaddr_reg:x6; val_offset:80*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 80*FLEN/8, x8, x2, x5)

inst_67:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x006 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x006 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7806; op2val:0xf806; 
   valaddr_reg:x6; val_offset:82*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 82*FLEN/8, x8, x2, x5)

inst_68:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x274 and fs2 == 1 and fe2 == 0x1b and fm2 == 0x274 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e74; op2val:0xee74; 
   valaddr_reg:x6; val_offset:84*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 84*FLEN/8, x8, x2, x5)

inst_69:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x260 and fs2 == 1 and fe2 == 0x1c and fm2 == 0x260 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7260; op2val:0xf260; 
   valaddr_reg:x6; val_offset:86*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 86*FLEN/8, x8, x2, x5)

inst_70:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1d9 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x1d9 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x79d9; op2val:0xf9d9; 
   valaddr_reg:x6; val_offset:88*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 88*FLEN/8, x8, x2, x5)

inst_71:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x358 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x358 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b58; op2val:0xfb58; 
   valaddr_reg:x6; val_offset:90*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 90*FLEN/8, x8, x2, x5)

inst_72:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x160 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x160 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7960; op2val:0xf960; 
   valaddr_reg:x6; val_offset:92*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 92*FLEN/8, x8, x2, x5)

inst_73:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x36d and fs2 == 1 and fe2 == 0x1a and fm2 == 0x36d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x6b6d; op2val:0xeb6d; 
   valaddr_reg:x6; val_offset:94*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 94*FLEN/8, x8, x2, x5)

inst_74:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2c2 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x2c2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ac2; op2val:0xfac2; 
   valaddr_reg:x6; val_offset:96*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 96*FLEN/8, x8, x2, x5)

inst_75:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x002 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x002 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7402; op2val:0xf402; 
   valaddr_reg:x6; val_offset:98*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 98*FLEN/8, x8, x2, x5)

inst_76:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x312 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x312 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7712; op2val:0xf712; 
   valaddr_reg:x6; val_offset:100*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 100*FLEN/8, x8, x2, x5)

inst_77:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x38a and fs2 == 1 and fe2 == 0x1d and fm2 == 0x38a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x778a; op2val:0xf78a; 
   valaddr_reg:x6; val_offset:102*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 102*FLEN/8, x8, x2, x5)

inst_78:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x08c and fs2 == 1 and fe2 == 0x1e and fm2 == 0x08c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x788c; op2val:0xf88c; 
   valaddr_reg:x6; val_offset:104*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 104*FLEN/8, x8, x2, x5)

inst_79:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0fb and fs2 == 1 and fe2 == 0x1d and fm2 == 0x0fb and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x74fb; op2val:0xf4fb; 
   valaddr_reg:x6; val_offset:106*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 106*FLEN/8, x8, x2, x5)

inst_80:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2b2 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x2b2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ab2; op2val:0xfab2; 
   valaddr_reg:x6; val_offset:108*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 108*FLEN/8, x8, x2, x5)

inst_81:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x07b and fs2 == 1 and fe2 == 0x1e and fm2 == 0x07b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x787b; op2val:0xf87b; 
   valaddr_reg:x6; val_offset:110*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 110*FLEN/8, x8, x2, x5)

inst_82:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1ee and fs2 == 1 and fe2 == 0x1e and fm2 == 0x1ee and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x79ee; op2val:0xf9ee; 
   valaddr_reg:x6; val_offset:112*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 112*FLEN/8, x8, x2, x5)

inst_83:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x1d8 and fs2 == 1 and fe2 == 0x1a and fm2 == 0x1d8 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x69d8; op2val:0xe9d8; 
   valaddr_reg:x6; val_offset:114*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 114*FLEN/8, x8, x2, x5)

inst_84:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x3ae and fs2 == 1 and fe2 == 0x1c and fm2 == 0x3ae and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x73ae; op2val:0xf3ae; 
   valaddr_reg:x6; val_offset:116*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 116*FLEN/8, x8, x2, x5)

inst_85:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1a2 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x1a2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x75a2; op2val:0xf5a2; 
   valaddr_reg:x6; val_offset:118*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 118*FLEN/8, x8, x2, x5)

inst_86:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1be and fs2 == 1 and fe2 == 0x1d and fm2 == 0x1be and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x75be; op2val:0xf5be; 
   valaddr_reg:x6; val_offset:120*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 120*FLEN/8, x8, x2, x5)

inst_87:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x111 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x111 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7911; op2val:0xf911; 
   valaddr_reg:x6; val_offset:122*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 122*FLEN/8, x8, x2, x5)

inst_88:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1b8 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x1b8 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x79b8; op2val:0xf9b8; 
   valaddr_reg:x6; val_offset:124*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 124*FLEN/8, x8, x2, x5)

inst_89:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2a0 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x2a0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x76a0; op2val:0xf6a0; 
   valaddr_reg:x6; val_offset:126*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 126*FLEN/8, x8, x2, x5)

inst_90:
// fs1 == 0 and fe1 == 0x15 and fm1 == 0x23d and fs2 == 1 and fe2 == 0x15 and fm2 == 0x23d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x563d; op2val:0xd63d; 
   valaddr_reg:x6; val_offset:128*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 128*FLEN/8, x8, x2, x5)

inst_91:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x159 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x159 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7559; op2val:0xf559; 
   valaddr_reg:x6; val_offset:130*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 130*FLEN/8, x8, x2, x5)

inst_92:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x118 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x118 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7918; op2val:0xf918; 
   valaddr_reg:x6; val_offset:132*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 132*FLEN/8, x8, x2, x5)

inst_93:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2ff and fs2 == 1 and fe2 == 0x1e and fm2 == 0x2ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7aff; op2val:0xfaff; 
   valaddr_reg:x6; val_offset:134*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 134*FLEN/8, x8, x2, x5)

inst_94:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x19c and fs2 == 1 and fe2 == 0x1e and fm2 == 0x19c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x799c; op2val:0xf99c; 
   valaddr_reg:x6; val_offset:136*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 136*FLEN/8, x8, x2, x5)

inst_95:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x14b and fs2 == 1 and fe2 == 0x1e and fm2 == 0x14b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x794b; op2val:0xf94b; 
   valaddr_reg:x6; val_offset:138*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 138*FLEN/8, x8, x2, x5)

inst_96:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x31f and fs2 == 1 and fe2 == 0x1d and fm2 == 0x31f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x771f; op2val:0xf71f; 
   valaddr_reg:x6; val_offset:140*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 140*FLEN/8, x8, x2, x5)

inst_97:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x10b and fs2 == 1 and fe2 == 0x1c and fm2 == 0x10b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x710b; op2val:0xf10b; 
   valaddr_reg:x6; val_offset:142*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 142*FLEN/8, x8, x2, x5)

inst_98:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3ca and fs2 == 1 and fe2 == 0x1d and fm2 == 0x3ca and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x77ca; op2val:0xf7ca; 
   valaddr_reg:x6; val_offset:144*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 144*FLEN/8, x8, x2, x5)

inst_99:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x20a and fs2 == 1 and fe2 == 0x1e and fm2 == 0x20a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a0a; op2val:0xfa0a; 
   valaddr_reg:x6; val_offset:146*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 146*FLEN/8, x8, x2, x5)

inst_100:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3e8 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x3e8 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x77e8; op2val:0xf7e8; 
   valaddr_reg:x6; val_offset:148*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 148*FLEN/8, x8, x2, x5)

inst_101:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x377 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x377 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7777; op2val:0xf777; 
   valaddr_reg:x6; val_offset:150*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 150*FLEN/8, x8, x2, x5)

inst_102:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x203 and fs2 == 1 and fe2 == 0x1c and fm2 == 0x203 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7203; op2val:0xf203; 
   valaddr_reg:x6; val_offset:152*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 152*FLEN/8, x8, x2, x5)

inst_103:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x10f and fs2 == 1 and fe2 == 0x1e and fm2 == 0x10f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x790f; op2val:0xf90f; 
   valaddr_reg:x6; val_offset:154*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 154*FLEN/8, x8, x2, x5)

inst_104:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1cd and fs2 == 1 and fe2 == 0x1e and fm2 == 0x1cd and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x79cd; op2val:0xf9cd; 
   valaddr_reg:x6; val_offset:156*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 156*FLEN/8, x8, x2, x5)

inst_105:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x26d and fs2 == 1 and fe2 == 0x1d and fm2 == 0x26d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x766d; op2val:0xf66d; 
   valaddr_reg:x6; val_offset:158*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 158*FLEN/8, x8, x2, x5)

inst_106:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x10e and fs2 == 1 and fe2 == 0x1d and fm2 == 0x10e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x750e; op2val:0xf50e; 
   valaddr_reg:x6; val_offset:160*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 160*FLEN/8, x8, x2, x5)

inst_107:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1bc and fs2 == 1 and fe2 == 0x1e and fm2 == 0x1bc and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x79bc; op2val:0xf9bc; 
   valaddr_reg:x6; val_offset:162*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 162*FLEN/8, x8, x2, x5)

inst_108:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x294 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x294 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a94; op2val:0xfa94; 
   valaddr_reg:x6; val_offset:164*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 164*FLEN/8, x8, x2, x5)

inst_109:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x241 and fs2 == 1 and fe2 == 0x1b and fm2 == 0x241 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e41; op2val:0xee41; 
   valaddr_reg:x6; val_offset:166*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 166*FLEN/8, x8, x2, x5)

inst_110:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x131 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x131 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7931; op2val:0xf931; 
   valaddr_reg:x6; val_offset:168*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 168*FLEN/8, x8, x2, x5)

inst_111:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x07a and fs2 == 1 and fe2 == 0x1d and fm2 == 0x07a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x747a; op2val:0xf47a; 
   valaddr_reg:x6; val_offset:170*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 170*FLEN/8, x8, x2, x5)

inst_112:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x268 and fs2 == 1 and fe2 == 0x1b and fm2 == 0x268 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x6e68; op2val:0xee68; 
   valaddr_reg:x6; val_offset:172*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 172*FLEN/8, x8, x2, x5)

inst_113:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x258 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x258 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7658; op2val:0xf658; 
   valaddr_reg:x6; val_offset:174*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 174*FLEN/8, x8, x2, x5)

inst_114:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x064 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x064 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7464; op2val:0xf464; 
   valaddr_reg:x6; val_offset:176*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 176*FLEN/8, x8, x2, x5)

inst_115:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x255 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x255 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a55; op2val:0xfa55; 
   valaddr_reg:x6; val_offset:178*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 178*FLEN/8, x8, x2, x5)

inst_116:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x044 and fs2 == 1 and fe2 == 0x1c and fm2 == 0x044 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7044; op2val:0xf044; 
   valaddr_reg:x6; val_offset:180*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 180*FLEN/8, x8, x2, x5)

inst_117:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x134 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x134 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7934; op2val:0xf934; 
   valaddr_reg:x6; val_offset:182*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 182*FLEN/8, x8, x2, x5)

inst_118:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2f8 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x2f8 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7af8; op2val:0xfaf8; 
   valaddr_reg:x6; val_offset:184*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 184*FLEN/8, x8, x2, x5)

inst_119:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x0c0 and fs2 == 1 and fe2 == 0x19 and fm2 == 0x0c0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x64c0; op2val:0xe4c0; 
   valaddr_reg:x6; val_offset:186*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 186*FLEN/8, x8, x2, x5)

inst_120:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x172 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x172 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7972; op2val:0xf972; 
   valaddr_reg:x6; val_offset:188*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 188*FLEN/8, x8, x2, x5)

inst_121:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x391 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x391 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b91; op2val:0xfb91; 
   valaddr_reg:x6; val_offset:190*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 190*FLEN/8, x8, x2, x5)

inst_122:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1fd and fs2 == 1 and fe2 == 0x1e and fm2 == 0x1fd and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x79fd; op2val:0xf9fd; 
   valaddr_reg:x6; val_offset:192*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 192*FLEN/8, x8, x2, x5)

inst_123:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x13d and fs2 == 1 and fe2 == 0x1e and fm2 == 0x13d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x793d; op2val:0xf93d; 
   valaddr_reg:x6; val_offset:194*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 194*FLEN/8, x8, x2, x5)

inst_124:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x337 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x337 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b37; op2val:0xfb37; 
   valaddr_reg:x6; val_offset:196*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 196*FLEN/8, x8, x2, x5)

inst_125:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1f4 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x1f4 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x75f4; op2val:0xf5f4; 
   valaddr_reg:x6; val_offset:198*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 198*FLEN/8, x8, x2, x5)

inst_126:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x2a5 and fs2 == 1 and fe2 == 0x1c and fm2 == 0x2a5 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x72a5; op2val:0xf2a5; 
   valaddr_reg:x6; val_offset:200*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 200*FLEN/8, x8, x2, x5)

inst_127:
// fs1 == 0 and fe1 == 0x18 and fm1 == 0x08d and fs2 == 1 and fe2 == 0x18 and fm2 == 0x08d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x608d; op2val:0xe08d; 
   valaddr_reg:x6; val_offset:202*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 202*FLEN/8, x8, x2, x5)

inst_128:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x154 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x154 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7554; op2val:0xf554; 
   valaddr_reg:x6; val_offset:204*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 204*FLEN/8, x8, x2, x5)

inst_129:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1be and fs2 == 1 and fe2 == 0x1e and fm2 == 0x1be and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x79be; op2val:0xf9be; 
   valaddr_reg:x6; val_offset:206*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 206*FLEN/8, x8, x2, x5)

inst_130:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0f6 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x0f6 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x78f6; op2val:0xf8f6; 
   valaddr_reg:x6; val_offset:208*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 208*FLEN/8, x8, x2, x5)

inst_131:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x13d and fs2 == 1 and fe2 == 0x1c and fm2 == 0x13d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x713d; op2val:0xf13d; 
   valaddr_reg:x6; val_offset:210*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 210*FLEN/8, x8, x2, x5)

inst_132:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0a1 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x0a1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x74a1; op2val:0xf4a1; 
   valaddr_reg:x6; val_offset:212*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 212*FLEN/8, x8, x2, x5)

inst_133:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x062 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x062 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7862; op2val:0xf862; 
   valaddr_reg:x6; val_offset:214*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 214*FLEN/8, x8, x2, x5)

inst_134:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3a5 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x3a5 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x77a5; op2val:0xf7a5; 
   valaddr_reg:x6; val_offset:216*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 216*FLEN/8, x8, x2, x5)

inst_135:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x22c and fs2 == 1 and fe2 == 0x1a and fm2 == 0x22c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x6a2c; op2val:0xea2c; 
   valaddr_reg:x6; val_offset:218*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 218*FLEN/8, x8, x2, x5)

inst_136:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x02e and fs2 == 1 and fe2 == 0x1e and fm2 == 0x02e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x782e; op2val:0xf82e; 
   valaddr_reg:x6; val_offset:220*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 220*FLEN/8, x8, x2, x5)

inst_137:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x272 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x272 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7672; op2val:0xf672; 
   valaddr_reg:x6; val_offset:222*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 222*FLEN/8, x8, x2, x5)

inst_138:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2a1 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x2a1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x76a1; op2val:0xf6a1; 
   valaddr_reg:x6; val_offset:224*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 224*FLEN/8, x8, x2, x5)

inst_139:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x344 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x344 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b44; op2val:0xfb44; 
   valaddr_reg:x6; val_offset:226*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 226*FLEN/8, x8, x2, x5)

inst_140:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2b9 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x2b9 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ab9; op2val:0xfab9; 
   valaddr_reg:x6; val_offset:228*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 228*FLEN/8, x8, x2, x5)

inst_141:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x17e and fs2 == 1 and fe2 == 0x1d and fm2 == 0x17e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x757e; op2val:0xf57e; 
   valaddr_reg:x6; val_offset:230*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 230*FLEN/8, x8, x2, x5)

inst_142:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x198 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x198 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7998; op2val:0xf998; 
   valaddr_reg:x6; val_offset:232*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 232*FLEN/8, x8, x2, x5)

inst_143:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0d3 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x0d3 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x74d3; op2val:0xf4d3; 
   valaddr_reg:x6; val_offset:234*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 234*FLEN/8, x8, x2, x5)

inst_144:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x326 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x326 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b26; op2val:0xfb26; 
   valaddr_reg:x6; val_offset:236*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 236*FLEN/8, x8, x2, x5)

inst_145:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x102 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x102 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7902; op2val:0xf902; 
   valaddr_reg:x6; val_offset:238*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 238*FLEN/8, x8, x2, x5)

inst_146:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ca and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ca and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bca; op2val:0xfbca; 
   valaddr_reg:x6; val_offset:240*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 240*FLEN/8, x8, x2, x5)

inst_147:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x036 and fs2 == 1 and fe2 == 0x1b and fm2 == 0x036 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x6c36; op2val:0xec36; 
   valaddr_reg:x6; val_offset:242*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 242*FLEN/8, x8, x2, x5)

inst_148:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1fe and fs2 == 1 and fe2 == 0x1e and fm2 == 0x1fe and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x79fe; op2val:0xf9fe; 
   valaddr_reg:x6; val_offset:244*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 244*FLEN/8, x8, x2, x5)

inst_149:
// fs1 == 0 and fe1 == 0x18 and fm1 == 0x004 and fs2 == 1 and fe2 == 0x18 and fm2 == 0x004 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x6004; op2val:0xe004; 
   valaddr_reg:x6; val_offset:246*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 246*FLEN/8, x8, x2, x5)

inst_150:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x026 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x026 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7826; op2val:0xf826; 
   valaddr_reg:x6; val_offset:248*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 248*FLEN/8, x8, x2, x5)

inst_151:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3d0 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x3d0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x77d0; op2val:0xf7d0; 
   valaddr_reg:x6; val_offset:250*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 250*FLEN/8, x8, x2, x5)

inst_152:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x16e and fs2 == 1 and fe2 == 0x1e and fm2 == 0x16e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x796e; op2val:0xf96e; 
   valaddr_reg:x6; val_offset:252*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 252*FLEN/8, x8, x2, x5)

inst_153:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1e3 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x1e3 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x75e3; op2val:0xf5e3; 
   valaddr_reg:x6; val_offset:254*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 254*FLEN/8, x8, x2, x5)

inst_154:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x02c and fs2 == 1 and fe2 == 0x1d and fm2 == 0x02c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x742c; op2val:0xf42c; 
   valaddr_reg:x6; val_offset:256*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 256*FLEN/8, x8, x2, x5)
RVTEST_SIGBASE(x2,signature_x2_1)

inst_155:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x2e5 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x2e5 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x76e5; op2val:0xf6e5; 
   valaddr_reg:x6; val_offset:258*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 258*FLEN/8, x8, x2, x5)

inst_156:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x015 and fs2 == 1 and fe2 == 0x1b and fm2 == 0x015 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x6c15; op2val:0xec15; 
   valaddr_reg:x6; val_offset:260*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 260*FLEN/8, x8, x2, x5)

inst_157:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x19d and fs2 == 1 and fe2 == 0x1e and fm2 == 0x19d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x799d; op2val:0xf99d; 
   valaddr_reg:x6; val_offset:262*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 262*FLEN/8, x8, x2, x5)

inst_158:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x338 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x338 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7738; op2val:0xf738; 
   valaddr_reg:x6; val_offset:264*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 264*FLEN/8, x8, x2, x5)

inst_159:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x39b and fs2 == 1 and fe2 == 0x1b and fm2 == 0x39b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x6f9b; op2val:0xef9b; 
   valaddr_reg:x6; val_offset:266*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 266*FLEN/8, x8, x2, x5)

inst_160:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x2a0 and fs2 == 1 and fe2 == 0x1c and fm2 == 0x2a0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x72a0; op2val:0xf2a0; 
   valaddr_reg:x6; val_offset:268*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 268*FLEN/8, x8, x2, x5)

inst_161:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x394 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x394 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b94; op2val:0xfb94; 
   valaddr_reg:x6; val_offset:270*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 270*FLEN/8, x8, x2, x5)

inst_162:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x20b and fs2 == 1 and fe2 == 0x1d and fm2 == 0x20b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x760b; op2val:0xf60b; 
   valaddr_reg:x6; val_offset:272*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 272*FLEN/8, x8, x2, x5)

inst_163:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x0d7 and fs2 == 1 and fe2 == 0x1c and fm2 == 0x0d7 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x70d7; op2val:0xf0d7; 
   valaddr_reg:x6; val_offset:274*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 274*FLEN/8, x8, x2, x5)

inst_164:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3dc and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3dc and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bdc; op2val:0xfbdc; 
   valaddr_reg:x6; val_offset:276*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 276*FLEN/8, x8, x2, x5)

inst_165:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x27d and fs2 == 1 and fe2 == 0x1d and fm2 == 0x27d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x767d; op2val:0xf67d; 
   valaddr_reg:x6; val_offset:278*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 278*FLEN/8, x8, x2, x5)

inst_166:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x304 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x304 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b04; op2val:0xfb04; 
   valaddr_reg:x6; val_offset:280*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 280*FLEN/8, x8, x2, x5)

inst_167:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x355 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x355 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b55; op2val:0xfb55; 
   valaddr_reg:x6; val_offset:282*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 282*FLEN/8, x8, x2, x5)

inst_168:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3f8 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x3f8 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x77f8; op2val:0xf7f8; 
   valaddr_reg:x6; val_offset:284*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 284*FLEN/8, x8, x2, x5)

inst_169:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x15b and fs2 == 1 and fe2 == 0x1e and fm2 == 0x15b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x795b; op2val:0xf95b; 
   valaddr_reg:x6; val_offset:286*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 286*FLEN/8, x8, x2, x5)

inst_170:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0e0 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x0e0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x78e0; op2val:0xf8e0; 
   valaddr_reg:x6; val_offset:288*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 288*FLEN/8, x8, x2, x5)

inst_171:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x170 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x170 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7570; op2val:0xf570; 
   valaddr_reg:x6; val_offset:290*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 290*FLEN/8, x8, x2, x5)

inst_172:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x330 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x330 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b30; op2val:0xfb30; 
   valaddr_reg:x6; val_offset:292*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 292*FLEN/8, x8, x2, x5)

inst_173:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x089 and fs2 == 1 and fe2 == 0x1a and fm2 == 0x089 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x6889; op2val:0xe889; 
   valaddr_reg:x6; val_offset:294*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 294*FLEN/8, x8, x2, x5)

inst_174:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x01b and fs2 == 1 and fe2 == 0x1d and fm2 == 0x01b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x741b; op2val:0xf41b; 
   valaddr_reg:x6; val_offset:296*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 296*FLEN/8, x8, x2, x5)

inst_175:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2bc and fs2 == 1 and fe2 == 0x1e and fm2 == 0x2bc and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7abc; op2val:0xfabc; 
   valaddr_reg:x6; val_offset:298*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 298*FLEN/8, x8, x2, x5)

inst_176:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x03e and fs2 == 1 and fe2 == 0x1b and fm2 == 0x03e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x6c3e; op2val:0xec3e; 
   valaddr_reg:x6; val_offset:300*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 300*FLEN/8, x8, x2, x5)

inst_177:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2f2 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x2f2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7af2; op2val:0xfaf2; 
   valaddr_reg:x6; val_offset:302*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 302*FLEN/8, x8, x2, x5)

inst_178:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x333 and fs2 == 1 and fe2 == 0x1c and fm2 == 0x333 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7333; op2val:0xf333; 
   valaddr_reg:x6; val_offset:304*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 304*FLEN/8, x8, x2, x5)

inst_179:
// fs1 == 0 and fe1 == 0x18 and fm1 == 0x3d2 and fs2 == 1 and fe2 == 0x18 and fm2 == 0x3d2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x63d2; op2val:0xe3d2; 
   valaddr_reg:x6; val_offset:306*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 306*FLEN/8, x8, x2, x5)

inst_180:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x149 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x149 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7549; op2val:0xf549; 
   valaddr_reg:x6; val_offset:308*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 308*FLEN/8, x8, x2, x5)

inst_181:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x0c2 and fs2 == 1 and fe2 == 0x1c and fm2 == 0x0c2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x70c2; op2val:0xf0c2; 
   valaddr_reg:x6; val_offset:310*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 310*FLEN/8, x8, x2, x5)

inst_182:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3be and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3be and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bbe; op2val:0xfbbe; 
   valaddr_reg:x6; val_offset:312*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 312*FLEN/8, x8, x2, x5)

inst_183:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x334 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x334 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b34; op2val:0xfb34; 
   valaddr_reg:x6; val_offset:314*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 314*FLEN/8, x8, x2, x5)

inst_184:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x096 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x096 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7896; op2val:0xf896; 
   valaddr_reg:x6; val_offset:316*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 316*FLEN/8, x8, x2, x5)

inst_185:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x270 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x270 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a70; op2val:0xfa70; 
   valaddr_reg:x6; val_offset:318*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 318*FLEN/8, x8, x2, x5)

inst_186:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3eb and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3eb and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7beb; op2val:0xfbeb; 
   valaddr_reg:x6; val_offset:320*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 320*FLEN/8, x8, x2, x5)

inst_187:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x33e and fs2 == 1 and fe2 == 0x1e and fm2 == 0x33e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b3e; op2val:0xfb3e; 
   valaddr_reg:x6; val_offset:322*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 322*FLEN/8, x8, x2, x5)

inst_188:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x047 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x047 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7847; op2val:0xf847; 
   valaddr_reg:x6; val_offset:324*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 324*FLEN/8, x8, x2, x5)

inst_189:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x29a and fs2 == 1 and fe2 == 0x1e and fm2 == 0x29a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a9a; op2val:0xfa9a; 
   valaddr_reg:x6; val_offset:326*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 326*FLEN/8, x8, x2, x5)

inst_190:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x253 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x253 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a53; op2val:0xfa53; 
   valaddr_reg:x6; val_offset:328*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 328*FLEN/8, x8, x2, x5)

inst_191:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0b0 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x0b0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x78b0; op2val:0xf8b0; 
   valaddr_reg:x6; val_offset:330*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 330*FLEN/8, x8, x2, x5)

inst_192:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2c0 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x2c0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ac0; op2val:0xfac0; 
   valaddr_reg:x6; val_offset:332*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 332*FLEN/8, x8, x2, x5)

inst_193:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x016 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x016 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x7816; op2val:0xf816; 
   valaddr_reg:x6; val_offset:334*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 334*FLEN/8, x8, x2, x5)

inst_194:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x125 and fs2 == 1 and fe2 == 0x1b and fm2 == 0x125 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x6d25; op2val:0xed25; 
   valaddr_reg:x6; val_offset:336*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 336*FLEN/8, x8, x2, x5)

inst_195:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x2f9 and fs2 == 1 and fe2 == 0x1b and fm2 == 0x2f9 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x6ef9; op2val:0xeef9; 
   valaddr_reg:x6; val_offset:338*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 338*FLEN/8, x8, x2, x5)

inst_196:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1a6 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x1a6 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x79a6; op2val:0xf9a6; 
   valaddr_reg:x6; val_offset:340*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x6, 340*FLEN/8, x8, x2, x5)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(31424,32,FLEN)
NAN_BOXED(31424,16,FLEN)
NAN_BOXED(30393,32,FLEN)
NAN_BOXED(63161,16,FLEN)
NAN_BOXED(30742,32,FLEN)
NAN_BOXED(30742,16,FLEN)
NAN_BOXED(31300,32,FLEN)
NAN_BOXED(64068,16,FLEN)
NAN_BOXED(30623,32,FLEN)
NAN_BOXED(63391,16,FLEN)
NAN_BOXED(31554,32,FLEN)
NAN_BOXED(64322,16,FLEN)
NAN_BOXED(29825,32,FLEN)
NAN_BOXED(62593,16,FLEN)
NAN_BOXED(30961,32,FLEN)
NAN_BOXED(63729,16,FLEN)
NAN_BOXED(31558,32,FLEN)
NAN_BOXED(64326,16,FLEN)
NAN_BOXED(31354,32,FLEN)
NAN_BOXED(64122,16,FLEN)
NAN_BOXED(29941,32,FLEN)
NAN_BOXED(62709,16,FLEN)
NAN_BOXED(31535,32,FLEN)
NAN_BOXED(64303,16,FLEN)
NAN_BOXED(30604,32,FLEN)
NAN_BOXED(63372,16,FLEN)
test_dataset_1:
NAN_BOXED(30449,32,FLEN)
NAN_BOXED(63217,16,FLEN)
NAN_BOXED(31564,32,FLEN)
NAN_BOXED(64332,16,FLEN)
NAN_BOXED(30624,32,FLEN)
NAN_BOXED(63392,16,FLEN)
NAN_BOXED(29738,32,FLEN)
NAN_BOXED(62506,16,FLEN)
NAN_BOXED(30819,32,FLEN)
NAN_BOXED(63587,16,FLEN)
NAN_BOXED(31169,32,FLEN)
NAN_BOXED(63937,16,FLEN)
NAN_BOXED(31384,32,FLEN)
NAN_BOXED(64152,16,FLEN)
NAN_BOXED(21677,32,FLEN)
NAN_BOXED(54445,16,FLEN)
NAN_BOXED(31471,32,FLEN)
NAN_BOXED(64239,16,FLEN)
NAN_BOXED(30003,32,FLEN)
NAN_BOXED(62771,16,FLEN)
NAN_BOXED(29212,32,FLEN)
NAN_BOXED(61980,16,FLEN)
NAN_BOXED(29601,32,FLEN)
NAN_BOXED(62369,16,FLEN)
NAN_BOXED(31340,32,FLEN)
NAN_BOXED(64108,16,FLEN)
test_dataset_2:
NAN_BOXED(27941,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30735,16,FLEN)
NAN_BOXED(63503,16,FLEN)
NAN_BOXED(28409,16,FLEN)
NAN_BOXED(61177,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(63910,16,FLEN)
NAN_BOXED(31363,16,FLEN)
NAN_BOXED(64131,16,FLEN)
NAN_BOXED(31668,16,FLEN)
NAN_BOXED(64436,16,FLEN)
NAN_BOXED(30898,16,FLEN)
NAN_BOXED(63666,16,FLEN)
NAN_BOXED(30916,16,FLEN)
NAN_BOXED(63684,16,FLEN)
NAN_BOXED(30874,16,FLEN)
NAN_BOXED(63642,16,FLEN)
NAN_BOXED(29198,16,FLEN)
NAN_BOXED(61966,16,FLEN)
NAN_BOXED(30950,16,FLEN)
NAN_BOXED(63718,16,FLEN)
NAN_BOXED(30622,16,FLEN)
NAN_BOXED(63390,16,FLEN)
NAN_BOXED(31246,16,FLEN)
NAN_BOXED(64014,16,FLEN)
NAN_BOXED(31586,16,FLEN)
NAN_BOXED(64354,16,FLEN)
NAN_BOXED(31534,16,FLEN)
NAN_BOXED(64302,16,FLEN)
NAN_BOXED(30802,16,FLEN)
NAN_BOXED(63570,16,FLEN)
NAN_BOXED(31139,16,FLEN)
NAN_BOXED(63907,16,FLEN)
NAN_BOXED(31357,16,FLEN)
NAN_BOXED(64125,16,FLEN)
NAN_BOXED(31528,16,FLEN)
NAN_BOXED(64296,16,FLEN)
NAN_BOXED(31640,16,FLEN)
NAN_BOXED(64408,16,FLEN)
NAN_BOXED(30516,16,FLEN)
NAN_BOXED(63284,16,FLEN)
NAN_BOXED(31735,16,FLEN)
NAN_BOXED(64503,16,FLEN)
NAN_BOXED(31319,16,FLEN)
NAN_BOXED(64087,16,FLEN)
NAN_BOXED(30985,16,FLEN)
NAN_BOXED(63753,16,FLEN)
NAN_BOXED(29637,16,FLEN)
NAN_BOXED(62405,16,FLEN)
NAN_BOXED(28542,16,FLEN)
NAN_BOXED(61310,16,FLEN)
NAN_BOXED(31322,16,FLEN)
NAN_BOXED(64090,16,FLEN)
NAN_BOXED(31366,16,FLEN)
NAN_BOXED(64134,16,FLEN)
NAN_BOXED(28846,16,FLEN)
NAN_BOXED(61614,16,FLEN)
NAN_BOXED(27081,16,FLEN)
NAN_BOXED(59849,16,FLEN)
NAN_BOXED(31089,16,FLEN)
NAN_BOXED(63857,16,FLEN)
NAN_BOXED(30995,16,FLEN)
NAN_BOXED(63763,16,FLEN)
NAN_BOXED(30187,16,FLEN)
NAN_BOXED(62955,16,FLEN)
NAN_BOXED(26791,16,FLEN)
NAN_BOXED(59559,16,FLEN)
NAN_BOXED(31663,16,FLEN)
NAN_BOXED(64431,16,FLEN)
NAN_BOXED(28652,16,FLEN)
NAN_BOXED(61420,16,FLEN)
NAN_BOXED(31335,16,FLEN)
NAN_BOXED(64103,16,FLEN)
NAN_BOXED(26068,16,FLEN)
NAN_BOXED(58836,16,FLEN)
NAN_BOXED(28286,16,FLEN)
NAN_BOXED(61054,16,FLEN)
NAN_BOXED(29456,16,FLEN)
NAN_BOXED(62224,16,FLEN)
NAN_BOXED(30106,16,FLEN)
NAN_BOXED(62874,16,FLEN)
NAN_BOXED(30726,16,FLEN)
NAN_BOXED(63494,16,FLEN)
NAN_BOXED(28276,16,FLEN)
NAN_BOXED(61044,16,FLEN)
NAN_BOXED(29280,16,FLEN)
NAN_BOXED(62048,16,FLEN)
NAN_BOXED(31193,16,FLEN)
NAN_BOXED(63961,16,FLEN)
NAN_BOXED(31576,16,FLEN)
NAN_BOXED(64344,16,FLEN)
NAN_BOXED(31072,16,FLEN)
NAN_BOXED(63840,16,FLEN)
NAN_BOXED(27501,16,FLEN)
NAN_BOXED(60269,16,FLEN)
NAN_BOXED(31426,16,FLEN)
NAN_BOXED(64194,16,FLEN)
NAN_BOXED(29698,16,FLEN)
NAN_BOXED(62466,16,FLEN)
NAN_BOXED(30482,16,FLEN)
NAN_BOXED(63250,16,FLEN)
NAN_BOXED(30602,16,FLEN)
NAN_BOXED(63370,16,FLEN)
NAN_BOXED(30860,16,FLEN)
NAN_BOXED(63628,16,FLEN)
NAN_BOXED(29947,16,FLEN)
NAN_BOXED(62715,16,FLEN)
NAN_BOXED(31410,16,FLEN)
NAN_BOXED(64178,16,FLEN)
NAN_BOXED(30843,16,FLEN)
NAN_BOXED(63611,16,FLEN)
NAN_BOXED(31214,16,FLEN)
NAN_BOXED(63982,16,FLEN)
NAN_BOXED(27096,16,FLEN)
NAN_BOXED(59864,16,FLEN)
NAN_BOXED(29614,16,FLEN)
NAN_BOXED(62382,16,FLEN)
NAN_BOXED(30114,16,FLEN)
NAN_BOXED(62882,16,FLEN)
NAN_BOXED(30142,16,FLEN)
NAN_BOXED(62910,16,FLEN)
NAN_BOXED(30993,16,FLEN)
NAN_BOXED(63761,16,FLEN)
NAN_BOXED(31160,16,FLEN)
NAN_BOXED(63928,16,FLEN)
NAN_BOXED(30368,16,FLEN)
NAN_BOXED(63136,16,FLEN)
NAN_BOXED(22077,16,FLEN)
NAN_BOXED(54845,16,FLEN)
NAN_BOXED(30041,16,FLEN)
NAN_BOXED(62809,16,FLEN)
NAN_BOXED(31000,16,FLEN)
NAN_BOXED(63768,16,FLEN)
NAN_BOXED(31487,16,FLEN)
NAN_BOXED(64255,16,FLEN)
NAN_BOXED(31132,16,FLEN)
NAN_BOXED(63900,16,FLEN)
NAN_BOXED(31051,16,FLEN)
NAN_BOXED(63819,16,FLEN)
NAN_BOXED(30495,16,FLEN)
NAN_BOXED(63263,16,FLEN)
NAN_BOXED(28939,16,FLEN)
NAN_BOXED(61707,16,FLEN)
NAN_BOXED(30666,16,FLEN)
NAN_BOXED(63434,16,FLEN)
NAN_BOXED(31242,16,FLEN)
NAN_BOXED(64010,16,FLEN)
NAN_BOXED(30696,16,FLEN)
NAN_BOXED(63464,16,FLEN)
NAN_BOXED(30583,16,FLEN)
NAN_BOXED(63351,16,FLEN)
NAN_BOXED(29187,16,FLEN)
NAN_BOXED(61955,16,FLEN)
NAN_BOXED(30991,16,FLEN)
NAN_BOXED(63759,16,FLEN)
NAN_BOXED(31181,16,FLEN)
NAN_BOXED(63949,16,FLEN)
NAN_BOXED(30317,16,FLEN)
NAN_BOXED(63085,16,FLEN)
NAN_BOXED(29966,16,FLEN)
NAN_BOXED(62734,16,FLEN)
NAN_BOXED(31164,16,FLEN)
NAN_BOXED(63932,16,FLEN)
NAN_BOXED(31380,16,FLEN)
NAN_BOXED(64148,16,FLEN)
NAN_BOXED(28225,16,FLEN)
NAN_BOXED(60993,16,FLEN)
NAN_BOXED(31025,16,FLEN)
NAN_BOXED(63793,16,FLEN)
NAN_BOXED(29818,16,FLEN)
NAN_BOXED(62586,16,FLEN)
NAN_BOXED(28264,16,FLEN)
NAN_BOXED(61032,16,FLEN)
NAN_BOXED(30296,16,FLEN)
NAN_BOXED(63064,16,FLEN)
NAN_BOXED(29796,16,FLEN)
NAN_BOXED(62564,16,FLEN)
NAN_BOXED(31317,16,FLEN)
NAN_BOXED(64085,16,FLEN)
NAN_BOXED(28740,16,FLEN)
NAN_BOXED(61508,16,FLEN)
NAN_BOXED(31028,16,FLEN)
NAN_BOXED(63796,16,FLEN)
NAN_BOXED(31480,16,FLEN)
NAN_BOXED(64248,16,FLEN)
NAN_BOXED(25792,16,FLEN)
NAN_BOXED(58560,16,FLEN)
NAN_BOXED(31090,16,FLEN)
NAN_BOXED(63858,16,FLEN)
NAN_BOXED(31633,16,FLEN)
NAN_BOXED(64401,16,FLEN)
NAN_BOXED(31229,16,FLEN)
NAN_BOXED(63997,16,FLEN)
NAN_BOXED(31037,16,FLEN)
NAN_BOXED(63805,16,FLEN)
NAN_BOXED(31543,16,FLEN)
NAN_BOXED(64311,16,FLEN)
NAN_BOXED(30196,16,FLEN)
NAN_BOXED(62964,16,FLEN)
NAN_BOXED(29349,16,FLEN)
NAN_BOXED(62117,16,FLEN)
NAN_BOXED(24717,16,FLEN)
NAN_BOXED(57485,16,FLEN)
NAN_BOXED(30036,16,FLEN)
NAN_BOXED(62804,16,FLEN)
NAN_BOXED(31166,16,FLEN)
NAN_BOXED(63934,16,FLEN)
NAN_BOXED(30966,16,FLEN)
NAN_BOXED(63734,16,FLEN)
NAN_BOXED(28989,16,FLEN)
NAN_BOXED(61757,16,FLEN)
NAN_BOXED(29857,16,FLEN)
NAN_BOXED(62625,16,FLEN)
NAN_BOXED(30818,16,FLEN)
NAN_BOXED(63586,16,FLEN)
NAN_BOXED(30629,16,FLEN)
NAN_BOXED(63397,16,FLEN)
NAN_BOXED(27180,16,FLEN)
NAN_BOXED(59948,16,FLEN)
NAN_BOXED(30766,16,FLEN)
NAN_BOXED(63534,16,FLEN)
NAN_BOXED(30322,16,FLEN)
NAN_BOXED(63090,16,FLEN)
NAN_BOXED(30369,16,FLEN)
NAN_BOXED(63137,16,FLEN)
NAN_BOXED(31556,16,FLEN)
NAN_BOXED(64324,16,FLEN)
NAN_BOXED(31417,16,FLEN)
NAN_BOXED(64185,16,FLEN)
NAN_BOXED(30078,16,FLEN)
NAN_BOXED(62846,16,FLEN)
NAN_BOXED(31128,16,FLEN)
NAN_BOXED(63896,16,FLEN)
NAN_BOXED(29907,16,FLEN)
NAN_BOXED(62675,16,FLEN)
NAN_BOXED(31526,16,FLEN)
NAN_BOXED(64294,16,FLEN)
NAN_BOXED(30978,16,FLEN)
NAN_BOXED(63746,16,FLEN)
NAN_BOXED(31690,16,FLEN)
NAN_BOXED(64458,16,FLEN)
NAN_BOXED(27702,16,FLEN)
NAN_BOXED(60470,16,FLEN)
NAN_BOXED(31230,16,FLEN)
NAN_BOXED(63998,16,FLEN)
NAN_BOXED(24580,16,FLEN)
NAN_BOXED(57348,16,FLEN)
NAN_BOXED(30758,16,FLEN)
NAN_BOXED(63526,16,FLEN)
NAN_BOXED(30672,16,FLEN)
NAN_BOXED(63440,16,FLEN)
NAN_BOXED(31086,16,FLEN)
NAN_BOXED(63854,16,FLEN)
NAN_BOXED(30179,16,FLEN)
NAN_BOXED(62947,16,FLEN)
NAN_BOXED(29740,16,FLEN)
NAN_BOXED(62508,16,FLEN)
NAN_BOXED(30437,16,FLEN)
NAN_BOXED(63205,16,FLEN)
NAN_BOXED(27669,16,FLEN)
NAN_BOXED(60437,16,FLEN)
NAN_BOXED(31133,16,FLEN)
NAN_BOXED(63901,16,FLEN)
NAN_BOXED(30520,16,FLEN)
NAN_BOXED(63288,16,FLEN)
NAN_BOXED(28571,16,FLEN)
NAN_BOXED(61339,16,FLEN)
NAN_BOXED(29344,16,FLEN)
NAN_BOXED(62112,16,FLEN)
NAN_BOXED(31636,16,FLEN)
NAN_BOXED(64404,16,FLEN)
NAN_BOXED(30219,16,FLEN)
NAN_BOXED(62987,16,FLEN)
NAN_BOXED(28887,16,FLEN)
NAN_BOXED(61655,16,FLEN)
NAN_BOXED(31708,16,FLEN)
NAN_BOXED(64476,16,FLEN)
NAN_BOXED(30333,16,FLEN)
NAN_BOXED(63101,16,FLEN)
NAN_BOXED(31492,16,FLEN)
NAN_BOXED(64260,16,FLEN)
NAN_BOXED(31573,16,FLEN)
NAN_BOXED(64341,16,FLEN)
NAN_BOXED(30712,16,FLEN)
NAN_BOXED(63480,16,FLEN)
NAN_BOXED(31067,16,FLEN)
NAN_BOXED(63835,16,FLEN)
NAN_BOXED(30944,16,FLEN)
NAN_BOXED(63712,16,FLEN)
NAN_BOXED(30064,16,FLEN)
NAN_BOXED(62832,16,FLEN)
NAN_BOXED(31536,16,FLEN)
NAN_BOXED(64304,16,FLEN)
NAN_BOXED(26761,16,FLEN)
NAN_BOXED(59529,16,FLEN)
NAN_BOXED(29723,16,FLEN)
NAN_BOXED(62491,16,FLEN)
NAN_BOXED(31420,16,FLEN)
NAN_BOXED(64188,16,FLEN)
NAN_BOXED(27710,16,FLEN)
NAN_BOXED(60478,16,FLEN)
NAN_BOXED(31474,16,FLEN)
NAN_BOXED(64242,16,FLEN)
NAN_BOXED(29491,16,FLEN)
NAN_BOXED(62259,16,FLEN)
NAN_BOXED(25554,16,FLEN)
NAN_BOXED(58322,16,FLEN)
NAN_BOXED(30025,16,FLEN)
NAN_BOXED(62793,16,FLEN)
NAN_BOXED(28866,16,FLEN)
NAN_BOXED(61634,16,FLEN)
NAN_BOXED(31678,16,FLEN)
NAN_BOXED(64446,16,FLEN)
NAN_BOXED(31540,16,FLEN)
NAN_BOXED(64308,16,FLEN)
NAN_BOXED(30870,16,FLEN)
NAN_BOXED(63638,16,FLEN)
NAN_BOXED(31344,16,FLEN)
NAN_BOXED(64112,16,FLEN)
NAN_BOXED(31723,16,FLEN)
NAN_BOXED(64491,16,FLEN)
NAN_BOXED(31550,16,FLEN)
NAN_BOXED(64318,16,FLEN)
NAN_BOXED(30791,16,FLEN)
NAN_BOXED(63559,16,FLEN)
NAN_BOXED(31386,16,FLEN)
NAN_BOXED(64154,16,FLEN)
NAN_BOXED(31315,16,FLEN)
NAN_BOXED(64083,16,FLEN)
NAN_BOXED(30896,16,FLEN)
NAN_BOXED(63664,16,FLEN)
NAN_BOXED(31424,16,FLEN)
NAN_BOXED(64192,16,FLEN)
NAN_BOXED(30742,16,FLEN)
NAN_BOXED(63510,16,FLEN)
NAN_BOXED(27941,16,FLEN)
NAN_BOXED(60709,16,FLEN)
NAN_BOXED(28409,16,FLEN)
NAN_BOXED(61177,16,FLEN)
NAN_BOXED(31142,16,FLEN)
NAN_BOXED(63910,16,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x15_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x15_1:
    .fill 28*((SIGALIGN)/4),4,0xdeadbeef


signature_x4_0:
    .fill 26*((SIGALIGN)/4),4,0xdeadbeef


signature_x2_0:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x2_1:
    .fill 84*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
