
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.12.2
// timestamp : Wed Sep 25 05:22:24 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/testing/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/testing/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV32Zhinx/rv32h_fdiv.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fdiv.h instruction of the RISC-V RV32_Zfinx_Zhinx,RV64_Zfinx_Zhinx extension for the fdiv_b5 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32I_Zfinx_Zhinx,RV64I_Zfinx_Zhinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*Zhinx.*);def TEST_CASE_1=True;",fdiv_b5)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x15,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs1 == rd != rs2, rs1==x14, rs2==x29, rd==x14,fs1 == 0 and fe1 == 0x1c and fm1 == 0x39c and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x14; op2:x29; dest:x14; op1val:0x739c; op2val:0x7bff;
   valaddr_reg:x15; val_offset:0*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5
*/
TEST_FPRR_OP(fdiv.h, x14, x14, x29, dyn, 0, 0, x15, 0*FLEN/8, x18, x1, x5)

inst_1:
// rs1 == rs2 != rd, rs1==x10, rs2==x10, rd==x21,fs1 == 0 and fe1 == 0x1c and fm1 == 0x39c and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x10; op2:x10; dest:x21; op1val:0x739c; op2val:0x739c;
   valaddr_reg:x15; val_offset:2*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5
*/
TEST_FPRR_OP(fdiv.h, x21, x10, x10, dyn, 32, 0, x15, 2*FLEN/8, x18, x1, x5)

inst_2:
// rs1 == rs2 == rd, rs1==x4, rs2==x4, rd==x4,fs1 == 0 and fe1 == 0x1c and fm1 == 0x39c and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x4; op2:x4; dest:x4; op1val:0x739c; op2val:0x739c;
   valaddr_reg:x15; val_offset:4*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5
*/
TEST_FPRR_OP(fdiv.h, x4, x4, x4, dyn, 64, 0, x15, 4*FLEN/8, x18, x1, x5)

inst_3:
// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x29, rs2==x3, rd==x27,fs1 == 0 and fe1 == 0x1c and fm1 == 0x39c and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x29; op2:x3; dest:x27; op1val:0x739c; op2val:0x7bff;
   valaddr_reg:x15; val_offset:6*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5
*/
TEST_FPRR_OP(fdiv.h, x27, x29, x3, dyn, 96, 0, x15, 6*FLEN/8, x18, x1, x5)

inst_4:
// rs2 == rd != rs1, rs1==x3, rs2==x8, rd==x8,fs1 == 0 and fe1 == 0x1c and fm1 == 0x39c and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x3; op2:x8; dest:x8; op1val:0x739c; op2val:0x7bff;
   valaddr_reg:x15; val_offset:8*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5
*/
TEST_FPRR_OP(fdiv.h, x8, x3, x8, dyn, 128, 0, x15, 8*FLEN/8, x18, x1, x5)

inst_5:
// rs1==x20, rs2==x17, rd==x30,fs1 == 0 and fe1 == 0x1d and fm1 == 0x1ea and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x20; op2:x17; dest:x30; op1val:0x75ea; op2val:0x7bff;
   valaddr_reg:x15; val_offset:10*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5
*/
TEST_FPRR_OP(fdiv.h, x30, x20, x17, dyn, 0, 0, x15, 10*FLEN/8, x18, x1, x5)

inst_6:
// rs1==x11, rs2==x22, rd==x12,fs1 == 0 and fe1 == 0x1d and fm1 == 0x1ea and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x11; op2:x22; dest:x12; op1val:0x75ea; op2val:0x7bff;
   valaddr_reg:x15; val_offset:12*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5
*/
TEST_FPRR_OP(fdiv.h, x12, x11, x22, dyn, 32, 0, x15, 12*FLEN/8, x18, x1, x5)

inst_7:
// rs1==x2, rs2==x31, rd==x9,fs1 == 0 and fe1 == 0x1d and fm1 == 0x1ea and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x2; op2:x31; dest:x9; op1val:0x75ea; op2val:0x7bff;
   valaddr_reg:x15; val_offset:14*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5
*/
TEST_FPRR_OP(fdiv.h, x9, x2, x31, dyn, 64, 0, x15, 14*FLEN/8, x18, x1, x5)

inst_8:
// rs1==x12, rs2==x23, rd==x16,fs1 == 0 and fe1 == 0x1d and fm1 == 0x1ea and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x12; op2:x23; dest:x16; op1val:0x75ea; op2val:0x7bff;
   valaddr_reg:x15; val_offset:16*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5
*/
TEST_FPRR_OP(fdiv.h, x16, x12, x23, dyn, 96, 0, x15, 16*FLEN/8, x18, x1, x5)

inst_9:
// rs1==x26, rs2==x20, rd==x3,fs1 == 0 and fe1 == 0x1d and fm1 == 0x1ea and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x26; op2:x20; dest:x3; op1val:0x75ea; op2val:0x7bff;
   valaddr_reg:x15; val_offset:18*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5
*/
TEST_FPRR_OP(fdiv.h, x3, x26, x20, dyn, 128, 0, x15, 18*FLEN/8, x18, x1, x5)

inst_10:
// rs1==x7, rs2==x13, rd==x6,fs1 == 0 and fe1 == 0x1e and fm1 == 0x100 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x7; op2:x13; dest:x6; op1val:0x7900; op2val:0x7bff;
   valaddr_reg:x15; val_offset:20*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5
*/
TEST_FPRR_OP(fdiv.h, x6, x7, x13, dyn, 0, 0, x15, 20*FLEN/8, x18, x1, x5)
RVTEST_VALBASEUPD(x6,test_dataset_1)

inst_11:
// rs1==x13, rs2==x30, rd==x29,fs1 == 0 and fe1 == 0x1e and fm1 == 0x100 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x13; op2:x30; dest:x29; op1val:0x7900; op2val:0x7bff;
   valaddr_reg:x6; val_offset:0*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5
*/
TEST_FPRR_OP(fdiv.h, x29, x13, x30, dyn, 32, 0, x6, 0*FLEN/8, x8, x1, x5)

inst_12:
// rs1==x0, rs2==x19, rd==x7,fs1 == 0 and fe1 == 0x1e and fm1 == 0x100 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x0; op2:x19; dest:x7; op1val:0x0; op2val:0x7bff;
   valaddr_reg:x6; val_offset:2*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5
*/
TEST_FPRR_OP(fdiv.h, x7, x0, x19, dyn, 64, 0, x6, 2*FLEN/8, x8, x1, x5)

inst_13:
// rs1==x25, rs2==x28, rd==x17,fs1 == 0 and fe1 == 0x1e and fm1 == 0x100 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x25; op2:x28; dest:x17; op1val:0x7900; op2val:0x7bff;
   valaddr_reg:x6; val_offset:4*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5
*/
TEST_FPRR_OP(fdiv.h, x17, x25, x28, dyn, 96, 0, x6, 4*FLEN/8, x8, x1, x5)
RVTEST_SIGBASE(x3,signature_x3_0)

inst_14:
// rs1==x31, rs2==x11, rd==x26,fs1 == 0 and fe1 == 0x1e and fm1 == 0x100 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x31; op2:x11; dest:x26; op1val:0x7900; op2val:0x7bff;
   valaddr_reg:x6; val_offset:6*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x26, x31, x11, dyn, 128, 0, x6, 6*FLEN/8, x8, x3, x4)

inst_15:
// rs1==x27, rs2==x18, rd==x25,fs1 == 0 and fe1 == 0x18 and fm1 == 0x2bf and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x27; op2:x18; dest:x25; op1val:0x62bf; op2val:0x7bff;
   valaddr_reg:x6; val_offset:8*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x25, x27, x18, dyn, 0, 0, x6, 8*FLEN/8, x8, x3, x4)

inst_16:
// rs1==x9, rs2==x26, rd==x19,fs1 == 0 and fe1 == 0x18 and fm1 == 0x2bf and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x9; op2:x26; dest:x19; op1val:0x62bf; op2val:0x7bff;
   valaddr_reg:x6; val_offset:10*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x19, x9, x26, dyn, 32, 0, x6, 10*FLEN/8, x8, x3, x4)

inst_17:
// rs1==x21, rs2==x0, rd==x13,fs1 == 0 and fe1 == 0x18 and fm1 == 0x2bf and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x21; op2:x0; dest:x13; op1val:0x62bf; op2val:0x0;
   valaddr_reg:x6; val_offset:12*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x13, x21, x0, dyn, 64, 0, x6, 12*FLEN/8, x8, x3, x4)

inst_18:
// rs1==x19, rs2==x2, rd==x0,fs1 == 0 and fe1 == 0x18 and fm1 == 0x2bf and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x19; op2:x2; dest:x0; op1val:0x62bf; op2val:0x7bff;
   valaddr_reg:x6; val_offset:14*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x0, x19, x2, dyn, 96, 0, x6, 14*FLEN/8, x8, x3, x4)

inst_19:
// rs1==x23, rs2==x7, rd==x31,fs1 == 0 and fe1 == 0x18 and fm1 == 0x2bf and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x23; op2:x7; dest:x31; op1val:0x62bf; op2val:0x7bff;
   valaddr_reg:x6; val_offset:16*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x23, x7, dyn, 128, 0, x6, 16*FLEN/8, x8, x3, x4)

inst_20:
// rs1==x1, rs2==x21, rd==x5,fs1 == 0 and fe1 == 0x1d and fm1 == 0x025 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x1; op2:x21; dest:x5; op1val:0x7425; op2val:0x7bff;
   valaddr_reg:x6; val_offset:18*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x5, x1, x21, dyn, 0, 0, x6, 18*FLEN/8, x8, x3, x4)

inst_21:
// rs1==x22, rs2==x5, rd==x23,fs1 == 0 and fe1 == 0x1d and fm1 == 0x025 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x22; op2:x5; dest:x23; op1val:0x7425; op2val:0x7bff;
   valaddr_reg:x6; val_offset:20*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x23, x22, x5, dyn, 32, 0, x6, 20*FLEN/8, x8, x3, x4)

inst_22:
// rs1==x17, rs2==x15, rd==x18,fs1 == 0 and fe1 == 0x1d and fm1 == 0x025 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x17; op2:x15; dest:x18; op1val:0x7425; op2val:0x7bff;
   valaddr_reg:x6; val_offset:22*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x18, x17, x15, dyn, 64, 0, x6, 22*FLEN/8, x8, x3, x4)

inst_23:
// rs1==x24, rs2==x9, rd==x20,fs1 == 0 and fe1 == 0x1d and fm1 == 0x025 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x24; op2:x9; dest:x20; op1val:0x7425; op2val:0x7bff;
   valaddr_reg:x6; val_offset:24*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x20, x24, x9, dyn, 96, 0, x6, 24*FLEN/8, x8, x3, x4)
RVTEST_VALBASEUPD(x7,test_dataset_2)

inst_24:
// rs1==x18, rs2==x6, rd==x11,fs1 == 0 and fe1 == 0x1d and fm1 == 0x025 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x18; op2:x6; dest:x11; op1val:0x7425; op2val:0x7bff;
   valaddr_reg:x7; val_offset:0*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x11, x18, x6, dyn, 128, 0, x7, 0*FLEN/8, x9, x3, x4)

inst_25:
// rs1==x15, rs2==x24, rd==x1,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3f6 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x15; op2:x24; dest:x1; op1val:0x7bf6; op2val:0x7bff;
   valaddr_reg:x7; val_offset:2*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x1, x15, x24, dyn, 0, 0, x7, 2*FLEN/8, x9, x3, x4)

inst_26:
// rs1==x16, rs2==x1, rd==x24,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3f6 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x16; op2:x1; dest:x24; op1val:0x7bf6; op2val:0x7bff;
   valaddr_reg:x7; val_offset:4*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x24, x16, x1, dyn, 32, 0, x7, 4*FLEN/8, x9, x3, x4)

inst_27:
// rs1==x30, rs2==x27, rd==x28,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3f6 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x27; dest:x28; op1val:0x7bf6; op2val:0x7bff;
   valaddr_reg:x7; val_offset:6*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x28, x30, x27, dyn, 64, 0, x7, 6*FLEN/8, x9, x3, x4)

inst_28:
// rs1==x6, rs2==x14, rd==x22,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3f6 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x6; op2:x14; dest:x22; op1val:0x7bf6; op2val:0x7bff;
   valaddr_reg:x7; val_offset:8*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x22, x6, x14, dyn, 96, 0, x7, 8*FLEN/8, x9, x3, x4)

inst_29:
// rs1==x28, rs2==x12, rd==x15,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3f6 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x28; op2:x12; dest:x15; op1val:0x7bf6; op2val:0x7bff;
   valaddr_reg:x7; val_offset:10*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x15, x28, x12, dyn, 128, 0, x7, 10*FLEN/8, x9, x3, x4)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_30:
// rs1==x8, rs2==x25, rd==x10,fs1 == 0 and fe1 == 0x1e and fm1 == 0x2b0 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x8; op2:x25; dest:x10; op1val:0x7ab0; op2val:0x7bff;
   valaddr_reg:x7; val_offset:12*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x10, x8, x25, dyn, 0, 0, x7, 12*FLEN/8, x9, x1, x4)

inst_31:
// rs1==x5, rs2==x16, rd==x2,fs1 == 0 and fe1 == 0x1e and fm1 == 0x2b0 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x5; op2:x16; dest:x2; op1val:0x7ab0; op2val:0x7bff;
   valaddr_reg:x7; val_offset:14*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x2, x5, x16, dyn, 32, 0, x7, 14*FLEN/8, x9, x1, x4)

inst_32:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2b0 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ab0; op2val:0x7bff;
   valaddr_reg:x7; val_offset:16*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 16*FLEN/8, x9, x1, x4)

inst_33:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2b0 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ab0; op2val:0x7bff;
   valaddr_reg:x7; val_offset:18*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 18*FLEN/8, x9, x1, x4)

inst_34:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2b0 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ab0; op2val:0x7bff;
   valaddr_reg:x7; val_offset:20*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 20*FLEN/8, x9, x1, x4)

inst_35:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x11c and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x791c; op2val:0x7bff;
   valaddr_reg:x7; val_offset:22*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 22*FLEN/8, x9, x1, x4)

inst_36:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x11c and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x791c; op2val:0x7bff;
   valaddr_reg:x7; val_offset:24*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 24*FLEN/8, x9, x1, x4)

inst_37:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x11c and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x791c; op2val:0x7bff;
   valaddr_reg:x7; val_offset:26*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 26*FLEN/8, x9, x1, x4)

inst_38:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x11c and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x791c; op2val:0x7bff;
   valaddr_reg:x7; val_offset:28*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 28*FLEN/8, x9, x1, x4)

inst_39:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x11c and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x791c; op2val:0x7bff;
   valaddr_reg:x7; val_offset:30*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 30*FLEN/8, x9, x1, x4)

inst_40:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x113 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7913; op2val:0x7bff;
   valaddr_reg:x7; val_offset:32*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 32*FLEN/8, x9, x1, x4)

inst_41:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x113 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7913; op2val:0x7bff;
   valaddr_reg:x7; val_offset:34*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 34*FLEN/8, x9, x1, x4)

inst_42:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x113 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7913; op2val:0x7bff;
   valaddr_reg:x7; val_offset:36*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 36*FLEN/8, x9, x1, x4)

inst_43:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x113 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7913; op2val:0x7bff;
   valaddr_reg:x7; val_offset:38*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 38*FLEN/8, x9, x1, x4)

inst_44:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x113 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7913; op2val:0x7bff;
   valaddr_reg:x7; val_offset:40*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 40*FLEN/8, x9, x1, x4)

inst_45:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x02e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x782e; op2val:0x7bff;
   valaddr_reg:x7; val_offset:42*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 42*FLEN/8, x9, x1, x4)

inst_46:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x02e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x782e; op2val:0x7bff;
   valaddr_reg:x7; val_offset:44*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 44*FLEN/8, x9, x1, x4)

inst_47:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x02e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x782e; op2val:0x7bff;
   valaddr_reg:x7; val_offset:46*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 46*FLEN/8, x9, x1, x4)

inst_48:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x02e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x782e; op2val:0x7bff;
   valaddr_reg:x7; val_offset:48*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 48*FLEN/8, x9, x1, x4)

inst_49:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x02e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x782e; op2val:0x7bff;
   valaddr_reg:x7; val_offset:50*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 50*FLEN/8, x9, x1, x4)

inst_50:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x15e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x795e; op2val:0x7bff;
   valaddr_reg:x7; val_offset:52*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 52*FLEN/8, x9, x1, x4)

inst_51:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x15e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x795e; op2val:0x7bff;
   valaddr_reg:x7; val_offset:54*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 54*FLEN/8, x9, x1, x4)

inst_52:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x15e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x795e; op2val:0x7bff;
   valaddr_reg:x7; val_offset:56*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 56*FLEN/8, x9, x1, x4)

inst_53:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x15e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x795e; op2val:0x7bff;
   valaddr_reg:x7; val_offset:58*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 58*FLEN/8, x9, x1, x4)

inst_54:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x15e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x795e; op2val:0x7bff;
   valaddr_reg:x7; val_offset:60*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 60*FLEN/8, x9, x1, x4)

inst_55:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x210 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a10; op2val:0x7bff;
   valaddr_reg:x7; val_offset:62*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 62*FLEN/8, x9, x1, x4)

inst_56:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x210 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a10; op2val:0x7bff;
   valaddr_reg:x7; val_offset:64*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 64*FLEN/8, x9, x1, x4)

inst_57:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x210 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a10; op2val:0x7bff;
   valaddr_reg:x7; val_offset:66*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 66*FLEN/8, x9, x1, x4)

inst_58:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x210 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a10; op2val:0x7bff;
   valaddr_reg:x7; val_offset:68*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 68*FLEN/8, x9, x1, x4)

inst_59:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x210 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a10; op2val:0x7bff;
   valaddr_reg:x7; val_offset:70*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 70*FLEN/8, x9, x1, x4)

inst_60:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0d1 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x74d1; op2val:0x7bff;
   valaddr_reg:x7; val_offset:72*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 72*FLEN/8, x9, x1, x4)

inst_61:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0d1 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x74d1; op2val:0x7bff;
   valaddr_reg:x7; val_offset:74*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 74*FLEN/8, x9, x1, x4)

inst_62:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0d1 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x74d1; op2val:0x7bff;
   valaddr_reg:x7; val_offset:76*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 76*FLEN/8, x9, x1, x4)

inst_63:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0d1 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x74d1; op2val:0x7bff;
   valaddr_reg:x7; val_offset:78*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 78*FLEN/8, x9, x1, x4)

inst_64:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0d1 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x74d1; op2val:0x7bff;
   valaddr_reg:x7; val_offset:80*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 80*FLEN/8, x9, x1, x4)

inst_65:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2eb and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7aeb; op2val:0x7bff;
   valaddr_reg:x7; val_offset:82*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 82*FLEN/8, x9, x1, x4)

inst_66:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2eb and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7aeb; op2val:0x7bff;
   valaddr_reg:x7; val_offset:84*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 84*FLEN/8, x9, x1, x4)

inst_67:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2eb and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7aeb; op2val:0x7bff;
   valaddr_reg:x7; val_offset:86*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 86*FLEN/8, x9, x1, x4)

inst_68:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2eb and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7aeb; op2val:0x7bff;
   valaddr_reg:x7; val_offset:88*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 88*FLEN/8, x9, x1, x4)

inst_69:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2eb and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7aeb; op2val:0x7bff;
   valaddr_reg:x7; val_offset:90*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 90*FLEN/8, x9, x1, x4)

inst_70:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1bf and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x79bf; op2val:0x7bff;
   valaddr_reg:x7; val_offset:92*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 92*FLEN/8, x9, x1, x4)

inst_71:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1bf and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x79bf; op2val:0x7bff;
   valaddr_reg:x7; val_offset:94*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 94*FLEN/8, x9, x1, x4)

inst_72:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1bf and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x79bf; op2val:0x7bff;
   valaddr_reg:x7; val_offset:96*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 96*FLEN/8, x9, x1, x4)

inst_73:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1bf and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x79bf; op2val:0x7bff;
   valaddr_reg:x7; val_offset:98*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 98*FLEN/8, x9, x1, x4)

inst_74:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1bf and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x79bf; op2val:0x7bff;
   valaddr_reg:x7; val_offset:100*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 100*FLEN/8, x9, x1, x4)

inst_75:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1b5 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x79b5; op2val:0x7bff;
   valaddr_reg:x7; val_offset:102*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 102*FLEN/8, x9, x1, x4)

inst_76:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1b5 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x79b5; op2val:0x7bff;
   valaddr_reg:x7; val_offset:104*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 104*FLEN/8, x9, x1, x4)

inst_77:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1b5 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x79b5; op2val:0x7bff;
   valaddr_reg:x7; val_offset:106*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 106*FLEN/8, x9, x1, x4)

inst_78:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1b5 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x79b5; op2val:0x7bff;
   valaddr_reg:x7; val_offset:108*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 108*FLEN/8, x9, x1, x4)

inst_79:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1b5 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x79b5; op2val:0x7bff;
   valaddr_reg:x7; val_offset:110*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 110*FLEN/8, x9, x1, x4)

inst_80:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x251 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7651; op2val:0x7bff;
   valaddr_reg:x7; val_offset:112*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 112*FLEN/8, x9, x1, x4)

inst_81:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x251 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7651; op2val:0x7bff;
   valaddr_reg:x7; val_offset:114*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 114*FLEN/8, x9, x1, x4)

inst_82:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x251 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7651; op2val:0x7bff;
   valaddr_reg:x7; val_offset:116*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 116*FLEN/8, x9, x1, x4)

inst_83:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x251 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7651; op2val:0x7bff;
   valaddr_reg:x7; val_offset:118*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 118*FLEN/8, x9, x1, x4)

inst_84:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x251 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7651; op2val:0x7bff;
   valaddr_reg:x7; val_offset:120*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 120*FLEN/8, x9, x1, x4)

inst_85:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x31c and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x771c; op2val:0x7bff;
   valaddr_reg:x7; val_offset:122*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 122*FLEN/8, x9, x1, x4)

inst_86:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x31c and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x771c; op2val:0x7bff;
   valaddr_reg:x7; val_offset:124*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 124*FLEN/8, x9, x1, x4)

inst_87:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x31c and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x771c; op2val:0x7bff;
   valaddr_reg:x7; val_offset:126*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 126*FLEN/8, x9, x1, x4)

inst_88:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x31c and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x771c; op2val:0x7bff;
   valaddr_reg:x7; val_offset:128*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 128*FLEN/8, x9, x1, x4)

inst_89:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x31c and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x771c; op2val:0x7bff;
   valaddr_reg:x7; val_offset:130*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 130*FLEN/8, x9, x1, x4)

inst_90:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x307 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b07; op2val:0x7bff;
   valaddr_reg:x7; val_offset:132*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 132*FLEN/8, x9, x1, x4)

inst_91:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x307 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b07; op2val:0x7bff;
   valaddr_reg:x7; val_offset:134*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 134*FLEN/8, x9, x1, x4)

inst_92:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x307 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b07; op2val:0x7bff;
   valaddr_reg:x7; val_offset:136*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 136*FLEN/8, x9, x1, x4)

inst_93:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x307 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b07; op2val:0x7bff;
   valaddr_reg:x7; val_offset:138*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 138*FLEN/8, x9, x1, x4)

inst_94:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x307 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b07; op2val:0x7bff;
   valaddr_reg:x7; val_offset:140*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 140*FLEN/8, x9, x1, x4)

inst_95:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x059 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7059; op2val:0x7bff;
   valaddr_reg:x7; val_offset:142*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 142*FLEN/8, x9, x1, x4)

inst_96:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x059 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7059; op2val:0x7bff;
   valaddr_reg:x7; val_offset:144*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 144*FLEN/8, x9, x1, x4)

inst_97:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x059 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7059; op2val:0x7bff;
   valaddr_reg:x7; val_offset:146*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 146*FLEN/8, x9, x1, x4)

inst_98:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x059 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7059; op2val:0x7bff;
   valaddr_reg:x7; val_offset:148*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 148*FLEN/8, x9, x1, x4)

inst_99:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x059 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7059; op2val:0x7bff;
   valaddr_reg:x7; val_offset:150*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 150*FLEN/8, x9, x1, x4)

inst_100:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3b8 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bb8; op2val:0x7bff;
   valaddr_reg:x7; val_offset:152*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 152*FLEN/8, x9, x1, x4)

inst_101:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3b8 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bb8; op2val:0x7bff;
   valaddr_reg:x7; val_offset:154*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 154*FLEN/8, x9, x1, x4)

inst_102:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3b8 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bb8; op2val:0x7bff;
   valaddr_reg:x7; val_offset:156*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 156*FLEN/8, x9, x1, x4)

inst_103:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3b8 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bb8; op2val:0x7bff;
   valaddr_reg:x7; val_offset:158*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 158*FLEN/8, x9, x1, x4)

inst_104:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3b8 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bb8; op2val:0x7bff;
   valaddr_reg:x7; val_offset:160*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 160*FLEN/8, x9, x1, x4)

inst_105:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x102 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7902; op2val:0x7bff;
   valaddr_reg:x7; val_offset:162*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 162*FLEN/8, x9, x1, x4)

inst_106:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x102 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7902; op2val:0x7bff;
   valaddr_reg:x7; val_offset:164*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 164*FLEN/8, x9, x1, x4)

inst_107:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x102 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7902; op2val:0x7bff;
   valaddr_reg:x7; val_offset:166*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 166*FLEN/8, x9, x1, x4)

inst_108:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x102 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7902; op2val:0x7bff;
   valaddr_reg:x7; val_offset:168*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 168*FLEN/8, x9, x1, x4)

inst_109:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x102 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7902; op2val:0x7bff;
   valaddr_reg:x7; val_offset:170*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 170*FLEN/8, x9, x1, x4)

inst_110:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x00e and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x780e; op2val:0xfbff;
   valaddr_reg:x7; val_offset:172*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 172*FLEN/8, x9, x1, x4)

inst_111:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x00e and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x780e; op2val:0xfbff;
   valaddr_reg:x7; val_offset:174*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 174*FLEN/8, x9, x1, x4)

inst_112:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x00e and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x780e; op2val:0xfbff;
   valaddr_reg:x7; val_offset:176*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 176*FLEN/8, x9, x1, x4)

inst_113:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x00e and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x780e; op2val:0xfbff;
   valaddr_reg:x7; val_offset:178*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 178*FLEN/8, x9, x1, x4)

inst_114:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x00e and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x780e; op2val:0xfbff;
   valaddr_reg:x7; val_offset:180*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 180*FLEN/8, x9, x1, x4)

inst_115:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x19c and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x759c; op2val:0xfbff;
   valaddr_reg:x7; val_offset:182*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 182*FLEN/8, x9, x1, x4)

inst_116:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x19c and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x759c; op2val:0xfbff;
   valaddr_reg:x7; val_offset:184*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 184*FLEN/8, x9, x1, x4)

inst_117:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x19c and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x759c; op2val:0xfbff;
   valaddr_reg:x7; val_offset:186*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 186*FLEN/8, x9, x1, x4)

inst_118:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x19c and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x759c; op2val:0xfbff;
   valaddr_reg:x7; val_offset:188*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 188*FLEN/8, x9, x1, x4)

inst_119:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x19c and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x759c; op2val:0xfbff;
   valaddr_reg:x7; val_offset:190*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 190*FLEN/8, x9, x1, x4)

inst_120:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0ab and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x78ab; op2val:0xfbff;
   valaddr_reg:x7; val_offset:192*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 192*FLEN/8, x9, x1, x4)

inst_121:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0ab and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x78ab; op2val:0xfbff;
   valaddr_reg:x7; val_offset:194*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 194*FLEN/8, x9, x1, x4)

inst_122:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0ab and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x78ab; op2val:0xfbff;
   valaddr_reg:x7; val_offset:196*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 196*FLEN/8, x9, x1, x4)

inst_123:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0ab and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x78ab; op2val:0xfbff;
   valaddr_reg:x7; val_offset:198*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 198*FLEN/8, x9, x1, x4)

inst_124:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0ab and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x78ab; op2val:0xfbff;
   valaddr_reg:x7; val_offset:200*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 200*FLEN/8, x9, x1, x4)

inst_125:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x174 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7974; op2val:0xfbff;
   valaddr_reg:x7; val_offset:202*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 202*FLEN/8, x9, x1, x4)

inst_126:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x174 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7974; op2val:0xfbff;
   valaddr_reg:x7; val_offset:204*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 204*FLEN/8, x9, x1, x4)

inst_127:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x174 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7974; op2val:0xfbff;
   valaddr_reg:x7; val_offset:206*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 206*FLEN/8, x9, x1, x4)

inst_128:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x174 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7974; op2val:0xfbff;
   valaddr_reg:x7; val_offset:208*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 208*FLEN/8, x9, x1, x4)

inst_129:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x174 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7974; op2val:0xfbff;
   valaddr_reg:x7; val_offset:210*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 210*FLEN/8, x9, x1, x4)

inst_130:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2d9 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ad9; op2val:0xfbff;
   valaddr_reg:x7; val_offset:212*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 212*FLEN/8, x9, x1, x4)

inst_131:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2d9 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ad9; op2val:0xfbff;
   valaddr_reg:x7; val_offset:214*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 214*FLEN/8, x9, x1, x4)

inst_132:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2d9 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ad9; op2val:0xfbff;
   valaddr_reg:x7; val_offset:216*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 216*FLEN/8, x9, x1, x4)

inst_133:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2d9 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ad9; op2val:0xfbff;
   valaddr_reg:x7; val_offset:218*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 218*FLEN/8, x9, x1, x4)

inst_134:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2d9 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ad9; op2val:0xfbff;
   valaddr_reg:x7; val_offset:220*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 220*FLEN/8, x9, x1, x4)

inst_135:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x15e and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x795e; op2val:0xfbff;
   valaddr_reg:x7; val_offset:222*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 222*FLEN/8, x9, x1, x4)

inst_136:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x15e and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x795e; op2val:0xfbff;
   valaddr_reg:x7; val_offset:224*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 224*FLEN/8, x9, x1, x4)

inst_137:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x15e and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x795e; op2val:0xfbff;
   valaddr_reg:x7; val_offset:226*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 226*FLEN/8, x9, x1, x4)

inst_138:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x15e and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x795e; op2val:0xfbff;
   valaddr_reg:x7; val_offset:228*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 228*FLEN/8, x9, x1, x4)

inst_139:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x15e and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x795e; op2val:0xfbff;
   valaddr_reg:x7; val_offset:230*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 230*FLEN/8, x9, x1, x4)

inst_140:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2e1 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ae1; op2val:0xfbff;
   valaddr_reg:x7; val_offset:232*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 232*FLEN/8, x9, x1, x4)

inst_141:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2e1 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ae1; op2val:0xfbff;
   valaddr_reg:x7; val_offset:234*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 234*FLEN/8, x9, x1, x4)

inst_142:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2e1 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ae1; op2val:0xfbff;
   valaddr_reg:x7; val_offset:236*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 236*FLEN/8, x9, x1, x4)

inst_143:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2e1 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ae1; op2val:0xfbff;
   valaddr_reg:x7; val_offset:238*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 238*FLEN/8, x9, x1, x4)

inst_144:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2e1 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ae1; op2val:0xfbff;
   valaddr_reg:x7; val_offset:240*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 240*FLEN/8, x9, x1, x4)

inst_145:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x33b and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b3b; op2val:0xfbff;
   valaddr_reg:x7; val_offset:242*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 242*FLEN/8, x9, x1, x4)

inst_146:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x33b and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b3b; op2val:0xfbff;
   valaddr_reg:x7; val_offset:244*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 244*FLEN/8, x9, x1, x4)

inst_147:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x33b and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b3b; op2val:0xfbff;
   valaddr_reg:x7; val_offset:246*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 246*FLEN/8, x9, x1, x4)

inst_148:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x33b and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b3b; op2val:0xfbff;
   valaddr_reg:x7; val_offset:248*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 248*FLEN/8, x9, x1, x4)

inst_149:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x33b and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b3b; op2val:0xfbff;
   valaddr_reg:x7; val_offset:250*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 250*FLEN/8, x9, x1, x4)

inst_150:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1b5 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x79b5; op2val:0xfbff;
   valaddr_reg:x7; val_offset:252*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 252*FLEN/8, x9, x1, x4)

inst_151:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1b5 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x79b5; op2val:0xfbff;
   valaddr_reg:x7; val_offset:254*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 254*FLEN/8, x9, x1, x4)

inst_152:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1b5 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x79b5; op2val:0xfbff;
   valaddr_reg:x7; val_offset:256*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 256*FLEN/8, x9, x1, x4)

inst_153:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1b5 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x79b5; op2val:0xfbff;
   valaddr_reg:x7; val_offset:258*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 258*FLEN/8, x9, x1, x4)

inst_154:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1b5 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x79b5; op2val:0xfbff;
   valaddr_reg:x7; val_offset:260*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 260*FLEN/8, x9, x1, x4)

inst_155:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2a6 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7aa6; op2val:0xfbff;
   valaddr_reg:x7; val_offset:262*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 262*FLEN/8, x9, x1, x4)

inst_156:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2a6 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7aa6; op2val:0xfbff;
   valaddr_reg:x7; val_offset:264*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 264*FLEN/8, x9, x1, x4)

inst_157:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2a6 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7aa6; op2val:0xfbff;
   valaddr_reg:x7; val_offset:266*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 266*FLEN/8, x9, x1, x4)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_158:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2a6 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7aa6; op2val:0xfbff;
   valaddr_reg:x7; val_offset:268*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 268*FLEN/8, x9, x1, x4)

inst_159:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2a6 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7aa6; op2val:0xfbff;
   valaddr_reg:x7; val_offset:270*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 270*FLEN/8, x9, x1, x4)

inst_160:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x08e and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x748e; op2val:0xfbff;
   valaddr_reg:x7; val_offset:272*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 272*FLEN/8, x9, x1, x4)

inst_161:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x08e and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x748e; op2val:0xfbff;
   valaddr_reg:x7; val_offset:274*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 274*FLEN/8, x9, x1, x4)

inst_162:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x08e and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x748e; op2val:0xfbff;
   valaddr_reg:x7; val_offset:276*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 276*FLEN/8, x9, x1, x4)

inst_163:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x08e and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x748e; op2val:0xfbff;
   valaddr_reg:x7; val_offset:278*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 278*FLEN/8, x9, x1, x4)

inst_164:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x08e and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x748e; op2val:0xfbff;
   valaddr_reg:x7; val_offset:280*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 280*FLEN/8, x9, x1, x4)

inst_165:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2d4 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ad4; op2val:0xfbff;
   valaddr_reg:x7; val_offset:282*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 282*FLEN/8, x9, x1, x4)

inst_166:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2d4 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ad4; op2val:0xfbff;
   valaddr_reg:x7; val_offset:284*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 284*FLEN/8, x9, x1, x4)

inst_167:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2d4 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ad4; op2val:0xfbff;
   valaddr_reg:x7; val_offset:286*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 286*FLEN/8, x9, x1, x4)

inst_168:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2d4 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ad4; op2val:0xfbff;
   valaddr_reg:x7; val_offset:288*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 288*FLEN/8, x9, x1, x4)

inst_169:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2d4 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ad4; op2val:0xfbff;
   valaddr_reg:x7; val_offset:290*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 290*FLEN/8, x9, x1, x4)

inst_170:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x1a9 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x6da9; op2val:0xfbff;
   valaddr_reg:x7; val_offset:292*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 292*FLEN/8, x9, x1, x4)

inst_171:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x1a9 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x6da9; op2val:0xfbff;
   valaddr_reg:x7; val_offset:294*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 294*FLEN/8, x9, x1, x4)

inst_172:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x1a9 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x6da9; op2val:0xfbff;
   valaddr_reg:x7; val_offset:296*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 296*FLEN/8, x9, x1, x4)

inst_173:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x1a9 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x6da9; op2val:0xfbff;
   valaddr_reg:x7; val_offset:298*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 298*FLEN/8, x9, x1, x4)

inst_174:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x1a9 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x6da9; op2val:0xfbff;
   valaddr_reg:x7; val_offset:300*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 300*FLEN/8, x9, x1, x4)

inst_175:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x290 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7690; op2val:0xfbff;
   valaddr_reg:x7; val_offset:302*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 302*FLEN/8, x9, x1, x4)

inst_176:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x290 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7690; op2val:0xfbff;
   valaddr_reg:x7; val_offset:304*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 304*FLEN/8, x9, x1, x4)

inst_177:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x290 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7690; op2val:0xfbff;
   valaddr_reg:x7; val_offset:306*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 306*FLEN/8, x9, x1, x4)

inst_178:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x290 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7690; op2val:0xfbff;
   valaddr_reg:x7; val_offset:308*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 308*FLEN/8, x9, x1, x4)

inst_179:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x290 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7690; op2val:0xfbff;
   valaddr_reg:x7; val_offset:310*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 310*FLEN/8, x9, x1, x4)

inst_180:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0b3 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x74b3; op2val:0xfbff;
   valaddr_reg:x7; val_offset:312*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 312*FLEN/8, x9, x1, x4)

inst_181:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0b3 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x74b3; op2val:0xfbff;
   valaddr_reg:x7; val_offset:314*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 314*FLEN/8, x9, x1, x4)

inst_182:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0b3 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x74b3; op2val:0xfbff;
   valaddr_reg:x7; val_offset:316*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 316*FLEN/8, x9, x1, x4)

inst_183:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0b3 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x74b3; op2val:0xfbff;
   valaddr_reg:x7; val_offset:318*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 318*FLEN/8, x9, x1, x4)

inst_184:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0b3 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x74b3; op2val:0xfbff;
   valaddr_reg:x7; val_offset:320*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 320*FLEN/8, x9, x1, x4)

inst_185:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2fa and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7afa; op2val:0xfbff;
   valaddr_reg:x7; val_offset:322*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 322*FLEN/8, x9, x1, x4)

inst_186:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2fa and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7afa; op2val:0xfbff;
   valaddr_reg:x7; val_offset:324*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 324*FLEN/8, x9, x1, x4)

inst_187:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2fa and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7afa; op2val:0xfbff;
   valaddr_reg:x7; val_offset:326*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 326*FLEN/8, x9, x1, x4)

inst_188:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2fa and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7afa; op2val:0xfbff;
   valaddr_reg:x7; val_offset:328*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 328*FLEN/8, x9, x1, x4)

inst_189:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2fa and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7afa; op2val:0xfbff;
   valaddr_reg:x7; val_offset:330*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 330*FLEN/8, x9, x1, x4)

inst_190:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0e9 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x78e9; op2val:0xfbff;
   valaddr_reg:x7; val_offset:332*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 332*FLEN/8, x9, x1, x4)

inst_191:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0e9 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x78e9; op2val:0xfbff;
   valaddr_reg:x7; val_offset:334*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 334*FLEN/8, x9, x1, x4)

inst_192:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0e9 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x78e9; op2val:0xfbff;
   valaddr_reg:x7; val_offset:336*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 336*FLEN/8, x9, x1, x4)

inst_193:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0e9 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x78e9; op2val:0xfbff;
   valaddr_reg:x7; val_offset:338*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 338*FLEN/8, x9, x1, x4)

inst_194:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0e9 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x78e9; op2val:0xfbff;
   valaddr_reg:x7; val_offset:340*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 340*FLEN/8, x9, x1, x4)

inst_195:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1be and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x79be; op2val:0xfbff;
   valaddr_reg:x7; val_offset:342*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 342*FLEN/8, x9, x1, x4)

inst_196:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1be and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x79be; op2val:0xfbff;
   valaddr_reg:x7; val_offset:344*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 344*FLEN/8, x9, x1, x4)

inst_197:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1be and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x79be; op2val:0xfbff;
   valaddr_reg:x7; val_offset:346*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 346*FLEN/8, x9, x1, x4)

inst_198:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1be and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x79be; op2val:0xfbff;
   valaddr_reg:x7; val_offset:348*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 348*FLEN/8, x9, x1, x4)

inst_199:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1be and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x79be; op2val:0xfbff;
   valaddr_reg:x7; val_offset:350*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 350*FLEN/8, x9, x1, x4)

inst_200:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x30b and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b0b; op2val:0xfbff;
   valaddr_reg:x7; val_offset:352*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 352*FLEN/8, x9, x1, x4)

inst_201:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x30b and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b0b; op2val:0xfbff;
   valaddr_reg:x7; val_offset:354*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 354*FLEN/8, x9, x1, x4)

inst_202:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x30b and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b0b; op2val:0xfbff;
   valaddr_reg:x7; val_offset:356*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 356*FLEN/8, x9, x1, x4)

inst_203:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x30b and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b0b; op2val:0xfbff;
   valaddr_reg:x7; val_offset:358*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 358*FLEN/8, x9, x1, x4)

inst_204:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x30b and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b0b; op2val:0xfbff;
   valaddr_reg:x7; val_offset:360*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 360*FLEN/8, x9, x1, x4)

inst_205:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x00a and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x780a; op2val:0xfbff;
   valaddr_reg:x7; val_offset:362*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 362*FLEN/8, x9, x1, x4)

inst_206:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x00a and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x780a; op2val:0xfbff;
   valaddr_reg:x7; val_offset:364*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 364*FLEN/8, x9, x1, x4)

inst_207:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x00a and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x780a; op2val:0xfbff;
   valaddr_reg:x7; val_offset:366*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 366*FLEN/8, x9, x1, x4)

inst_208:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x00a and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x780a; op2val:0xfbff;
   valaddr_reg:x7; val_offset:368*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 368*FLEN/8, x9, x1, x4)

inst_209:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x00a and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x780a; op2val:0xfbff;
   valaddr_reg:x7; val_offset:370*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 370*FLEN/8, x9, x1, x4)

inst_210:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0f3 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x74f3; op2val:0xfbff;
   valaddr_reg:x7; val_offset:372*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 372*FLEN/8, x9, x1, x4)

inst_211:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0f3 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x74f3; op2val:0xfbff;
   valaddr_reg:x7; val_offset:374*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 374*FLEN/8, x9, x1, x4)

inst_212:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0f3 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x74f3; op2val:0xfbff;
   valaddr_reg:x7; val_offset:376*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 376*FLEN/8, x9, x1, x4)

inst_213:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0f3 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x74f3; op2val:0xfbff;
   valaddr_reg:x7; val_offset:378*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 378*FLEN/8, x9, x1, x4)

inst_214:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0f3 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x74f3; op2val:0xfbff;
   valaddr_reg:x7; val_offset:380*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 380*FLEN/8, x9, x1, x4)

inst_215:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0cb and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x78cb; op2val:0xfbff;
   valaddr_reg:x7; val_offset:382*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 0, 0, x7, 382*FLEN/8, x9, x1, x4)

inst_216:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0cb and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x78cb; op2val:0xfbff;
   valaddr_reg:x7; val_offset:384*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 384*FLEN/8, x9, x1, x4)

inst_217:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0cb and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x78cb; op2val:0xfbff;
   valaddr_reg:x7; val_offset:386*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 386*FLEN/8, x9, x1, x4)

inst_218:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0cb and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x78cb; op2val:0xfbff;
   valaddr_reg:x7; val_offset:388*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 388*FLEN/8, x9, x1, x4)

inst_219:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0cb and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x78cb; op2val:0xfbff;
   valaddr_reg:x7; val_offset:390*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 128, 0, x7, 390*FLEN/8, x9, x1, x4)

inst_220:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x39c and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x739c; op2val:0x7bff;
   valaddr_reg:x7; val_offset:392*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 32, 0, x7, 392*FLEN/8, x9, x1, x4)

inst_221:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x39c and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x739c; op2val:0x7bff;
   valaddr_reg:x7; val_offset:394*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 394*FLEN/8, x9, x1, x4)

inst_222:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x100 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x7900; op2val:0x7bff;
   valaddr_reg:x7; val_offset:396*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 396*FLEN/8, x9, x1, x4)

inst_223:
// fs1 == 0 and fe1 == 0x18 and fm1 == 0x2bf and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x62bf; op2val:0x7bff;
   valaddr_reg:x7; val_offset:398*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 64, 0, x7, 398*FLEN/8, x9, x1, x4)

inst_224:
// fs1 == 0 and fe1 == 0x18 and fm1 == 0x2bf and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fdiv.h ; op1:x30; op2:x29; dest:x31; op1val:0x62bf; op2val:0x7bff;
   valaddr_reg:x7; val_offset:400*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x4
*/
TEST_FPRR_OP(fdiv.h, x31, x30, x29, dyn, 96, 0, x7, 400*FLEN/8, x9, x1, x4)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(29596,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(29596,32,FLEN)
NAN_BOXED(29596,32,FLEN)
NAN_BOXED(29596,32,FLEN)
NAN_BOXED(29596,32,FLEN)
NAN_BOXED(29596,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(29596,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(30186,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(30186,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(30186,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(30186,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(30186,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(30976,32,FLEN)
NAN_BOXED(31743,32,FLEN)
test_dataset_1:
NAN_BOXED(30976,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(30976,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(30976,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(25279,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(25279,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(25279,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25279,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(25279,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(29733,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(29733,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(29733,32,FLEN)
NAN_BOXED(31743,32,FLEN)
NAN_BOXED(29733,32,FLEN)
NAN_BOXED(31743,32,FLEN)
test_dataset_2:
NAN_BOXED(29733,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31734,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31734,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31734,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31734,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31734,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31408,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31408,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31408,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31408,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31408,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31004,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31004,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31004,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31004,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31004,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30995,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30995,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30995,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30995,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30995,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30766,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30766,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30766,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30766,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30766,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31070,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31070,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31070,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31070,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31070,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31248,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31248,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31248,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31248,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31248,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29905,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29905,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29905,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29905,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29905,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31467,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31467,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31467,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31467,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31467,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31167,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31167,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31167,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31167,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31167,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31157,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31157,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31157,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31157,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31157,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30289,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30289,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30289,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30289,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30289,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30492,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30492,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30492,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30492,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30492,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31495,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31495,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31495,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31495,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31495,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(28761,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(28761,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(28761,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(28761,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(28761,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31672,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31672,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31672,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31672,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(31672,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30978,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30978,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30978,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30978,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30978,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30734,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30734,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30734,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30734,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30734,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30108,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30108,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30108,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30108,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30108,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30891,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30891,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30891,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30891,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30891,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31092,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31092,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31092,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31092,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31092,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31449,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31449,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31449,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31449,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31449,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31070,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31070,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31070,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31070,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31070,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31457,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31457,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31457,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31457,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31457,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31547,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31547,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31547,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31547,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31547,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31157,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31157,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31157,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31157,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31157,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31398,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31398,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31398,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31398,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31398,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29838,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29838,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29838,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29838,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29838,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31444,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31444,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31444,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31444,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31444,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(28073,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(28073,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(28073,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(28073,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(28073,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30352,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30352,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30352,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30352,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30352,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29875,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29875,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29875,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29875,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29875,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31482,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31482,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31482,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31482,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31482,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30953,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30953,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30953,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30953,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30953,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31166,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31166,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31166,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31166,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31166,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31499,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31499,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31499,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31499,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(31499,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30730,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30730,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30730,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30730,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30730,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29939,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29939,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29939,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29939,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29939,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30923,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30923,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30923,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30923,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(30923,16,FLEN)
NAN_BOXED(64511,16,FLEN)
NAN_BOXED(29596,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(29596,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(30976,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(25279,16,FLEN)
NAN_BOXED(31743,16,FLEN)
NAN_BOXED(25279,16,FLEN)
NAN_BOXED(31743,16,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 28*((SIGALIGN)/4),4,0xdeadbeef


signature_x3_0:
    .fill 32*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 134*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
