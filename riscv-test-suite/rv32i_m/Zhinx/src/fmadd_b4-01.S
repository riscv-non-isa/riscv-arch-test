
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.12.2
// timestamp : Wed Sep 25 04:10:09 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/testing/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/testing/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV32Zhinx/rv32h_fmadd.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.h instruction of the RISC-V RV32_Zfinx_Zhinx,RV64_Zfinx_Zhinx extension for the fmadd_b4 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32I_Zfinx_Zhinx,RV64I_Zfinx_Zhinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*Zhinx.*);def TEST_CASE_1=True;",fmadd_b4)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x4,signature_x4_1)

inst_0:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==x23, rs2==x23, rs3==x22, rd==x16,fs1 == 0 and fe1 == 0x1e and fm1 == 0x0fb and fs2 == 0 and fe2 == 0x0d and fm2 == 0x2a1 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1ee and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x23; op2:x23; op3:x22; dest:x16; op1val:0x78fb; op2val:0x78fb;
op3val:0x79ee; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x9; fcsr_val:0 */
TEST_FPR4_OP(fmadd.h, x16, x23, x23, x22, dyn, 0, 0, x3, 0*FLEN/8, x20, x4, x9)

inst_1:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==x31, rs2==x17, rs3==x31, rd==x7,fs1 == 0 and fe1 == 0x1e and fm1 == 0x0fb and fs2 == 0 and fe2 == 0x0d and fm2 == 0x2a1 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1ee and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x31; op2:x17; op3:x31; dest:x7; op1val:0x78fb; op2val:0x36a1;
op3val:0x78fb; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x9; fcsr_val:32 */
TEST_FPR4_OP(fmadd.h, x7, x31, x17, x31, dyn, 32, 0, x3, 3*FLEN/8, x20, x4, x9)

inst_2:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==x30, rs2==x7, rs3==x14, rd==x30,fs1 == 0 and fe1 == 0x1e and fm1 == 0x0fb and fs2 == 0 and fe2 == 0x0d and fm2 == 0x2a1 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1ee and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x7; op3:x14; dest:x30; op1val:0x78fb; op2val:0x36a1;
op3val:0x79ee; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x9; fcsr_val:64 */
TEST_FPR4_OP(fmadd.h, x30, x30, x7, x14, dyn, 64, 0, x3, 6*FLEN/8, x20, x4, x9)

inst_3:
// rs1 == rs2 == rs3 != rd, rs1==x27, rs2==x27, rs3==x27, rd==x2,fs1 == 0 and fe1 == 0x1e and fm1 == 0x0fb and fs2 == 0 and fe2 == 0x0d and fm2 == 0x2a1 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1ee and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x27; op2:x27; op3:x27; dest:x2; op1val:0x78fb; op2val:0x78fb;
op3val:0x78fb; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x9; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, x2, x27, x27, x27, dyn, 96, 0, x3, 9*FLEN/8, x20, x4, x9)

inst_4:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==x10, rs2==x24, rs3==x5, rd==x5,fs1 == 0 and fe1 == 0x1e and fm1 == 0x0fb and fs2 == 0 and fe2 == 0x0d and fm2 == 0x2a1 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1ee and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x10; op2:x24; op3:x5; dest:x5; op1val:0x78fb; op2val:0x36a1;
op3val:0x79ee; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x9; fcsr_val:128 */
TEST_FPR4_OP(fmadd.h, x5, x10, x24, x5, dyn, 128, 0, x3, 12*FLEN/8, x20, x4, x9)

inst_5:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==x13, rs2==x0, rs3==x10, rd==x0,fs1 == 0 and fe1 == 0x1e and fm1 == 0x25b and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0e2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x389 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x13; op2:x0; op3:x10; dest:x0; op1val:0x7a5b; op2val:0x0;
op3val:0x7b89; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x9; fcsr_val:0 */
TEST_FPR4_OP(fmadd.h, x0, x13, x0, x10, dyn, 0, 0, x3, 15*FLEN/8, x20, x4, x9)

inst_6:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==x0, rs2==x8, rs3==x13, rd==x23,fs1 == 0 and fe1 == 0x1e and fm1 == 0x25b and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0e2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x389 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x0; op2:x8; op3:x13; dest:x23; op1val:0x0; op2val:0xc0e2;
op3val:0x7b89; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x9; fcsr_val:32 */
TEST_FPR4_OP(fmadd.h, x23, x0, x8, x13, dyn, 32, 0, x3, 18*FLEN/8, x20, x4, x9)

inst_7:
// rd == rs2 == rs3 != rs1, rs1==x6, rs2==x1, rs3==x1, rd==x1,fs1 == 0 and fe1 == 0x1e and fm1 == 0x25b and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0e2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x389 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x6; op2:x1; op3:x1; dest:x1; op1val:0x7a5b; op2val:0xc0e2;
op3val:0xc0e2; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x9; fcsr_val:64 */
TEST_FPR4_OP(fmadd.h, x1, x6, x1, x1, dyn, 64, 0, x3, 21*FLEN/8, x20, x4, x9)

inst_8:
// rs1 == rd == rs3 != rs2, rs1==x12, rs2==x11, rs3==x12, rd==x12,fs1 == 0 and fe1 == 0x1e and fm1 == 0x25b and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0e2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x389 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x12; op2:x11; op3:x12; dest:x12; op1val:0x7a5b; op2val:0xc0e2;
op3val:0x7a5b; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x9; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, x12, x12, x11, x12, dyn, 96, 0, x3, 24*FLEN/8, x20, x4, x9)

inst_9:
// rs1 == rs2 == rs3 == rd, rs1==x18, rs2==x18, rs3==x18, rd==x18,fs1 == 0 and fe1 == 0x1e and fm1 == 0x25b and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0e2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x389 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x18; op2:x18; op3:x18; dest:x18; op1val:0x7a5b; op2val:0x7a5b;
op3val:0x7a5b; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x9; fcsr_val:128 */
TEST_FPR4_OP(fmadd.h, x18, x18, x18, x18, dyn, 128, 0, x3, 27*FLEN/8, x20, x4, x9)

inst_10:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==x25, rs2==x15, rs3==x15, rd==x19,fs1 == 0 and fe1 == 0x1e and fm1 == 0x1ea and fs2 == 0 and fe2 == 0x0b and fm2 == 0x2b7 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x360 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x25; op2:x15; op3:x15; dest:x19; op1val:0x79ea; op2val:0x2eb7;
op3val:0x2eb7; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x9; fcsr_val:0 */
TEST_FPR4_OP(fmadd.h, x19, x25, x15, x15, dyn, 0, 0, x3, 30*FLEN/8, x20, x4, x9)

inst_11:
// rs1 == rs2 == rd != rs3, rs1==x14, rs2==x14, rs3==x30, rd==x14,fs1 == 0 and fe1 == 0x1e and fm1 == 0x1ea and fs2 == 0 and fe2 == 0x0b and fm2 == 0x2b7 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x360 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x14; op2:x14; op3:x30; dest:x14; op1val:0x79ea; op2val:0x79ea;
op3val:0x7b60; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x9; fcsr_val:32 */
TEST_FPR4_OP(fmadd.h, x14, x14, x14, x30, dyn, 32, 0, x3, 33*FLEN/8, x20, x4, x9)
RVTEST_VALBASEUPD(x13,test_dataset_1)

inst_12:
// rs1==x21, rs2==x5, rs3==x16, rd==x3,fs1 == 0 and fe1 == 0x1e and fm1 == 0x1ea and fs2 == 0 and fe2 == 0x0b and fm2 == 0x2b7 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x360 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x21; op2:x5; op3:x16; dest:x3; op1val:0x79ea; op2val:0x2eb7;
op3val:0x7b60; valaddr_reg:x13; val_offset:0*FLEN/8; rmval:dyn;
testreg:x9; fcsr_val:64 */
TEST_FPR4_OP(fmadd.h, x3, x21, x5, x16, dyn, 64, 0, x13, 0*FLEN/8, x14, x4, x9)

inst_13:
// rs1==x11, rs2==x31, rs3==x21, rd==x6,fs1 == 0 and fe1 == 0x1e and fm1 == 0x1ea and fs2 == 0 and fe2 == 0x0b and fm2 == 0x2b7 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x360 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x11; op2:x31; op3:x21; dest:x6; op1val:0x79ea; op2val:0x2eb7;
op3val:0x7b60; valaddr_reg:x13; val_offset:3*FLEN/8; rmval:dyn;
testreg:x1; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, x6, x11, x31, x21, dyn, 96, 0, x13, 3*FLEN/8, x14, x4, x1)

inst_14:
// rs1==x19, rs2==x28, rs3==x4, rd==x11,fs1 == 0 and fe1 == 0x1e and fm1 == 0x1ea and fs2 == 0 and fe2 == 0x0b and fm2 == 0x2b7 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x360 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x19; op2:x28; op3:x4; dest:x11; op1val:0x79ea; op2val:0x2eb7;
op3val:0x7b60; valaddr_reg:x13; val_offset:6*FLEN/8; rmval:dyn;
testreg:x1; fcsr_val:128 */
TEST_FPR4_OP(fmadd.h, x11, x19, x28, x4, dyn, 128, 0, x13, 6*FLEN/8, x14, x4, x1)
RVTEST_SIGBASE(x2,signature_x2_0)

inst_15:
// rs1==x26, rs2==x25, rs3==x3, rd==x22,fs1 == 0 and fe1 == 0x19 and fm1 == 0x36c and fs2 == 1 and fe2 == 0x14 and fm2 == 0x250 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x372 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x26; op2:x25; op3:x3; dest:x22; op1val:0x676c; op2val:0xd250;
op3val:0x7772; valaddr_reg:x13; val_offset:9*FLEN/8; rmval:dyn;
testreg:x1; fcsr_val:0 */
TEST_FPR4_OP(fmadd.h, x22, x26, x25, x3, dyn, 0, 0, x13, 9*FLEN/8, x14, x2, x1)

inst_16:
// rs1==x5, rs2==x12, rs3==x8, rd==x9,fs1 == 0 and fe1 == 0x19 and fm1 == 0x36c and fs2 == 1 and fe2 == 0x14 and fm2 == 0x250 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x372 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x5; op2:x12; op3:x8; dest:x9; op1val:0x676c; op2val:0xd250;
op3val:0x7772; valaddr_reg:x13; val_offset:12*FLEN/8; rmval:dyn;
testreg:x1; fcsr_val:32 */
TEST_FPR4_OP(fmadd.h, x9, x5, x12, x8, dyn, 32, 0, x13, 12*FLEN/8, x14, x2, x1)

inst_17:
// rs1==x16, rs2==x20, rs3==x7, rd==x8,fs1 == 0 and fe1 == 0x19 and fm1 == 0x36c and fs2 == 1 and fe2 == 0x14 and fm2 == 0x250 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x372 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x16; op2:x20; op3:x7; dest:x8; op1val:0x676c; op2val:0xd250;
op3val:0x7772; valaddr_reg:x13; val_offset:15*FLEN/8; rmval:dyn;
testreg:x1; fcsr_val:64 */
TEST_FPR4_OP(fmadd.h, x8, x16, x20, x7, dyn, 64, 0, x13, 15*FLEN/8, x14, x2, x1)

inst_18:
// rs1==x20, rs2==x4, rs3==x26, rd==x25,fs1 == 0 and fe1 == 0x19 and fm1 == 0x36c and fs2 == 1 and fe2 == 0x14 and fm2 == 0x250 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x372 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x20; op2:x4; op3:x26; dest:x25; op1val:0x676c; op2val:0xd250;
op3val:0x7772; valaddr_reg:x13; val_offset:18*FLEN/8; rmval:dyn;
testreg:x1; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, x25, x20, x4, x26, dyn, 96, 0, x13, 18*FLEN/8, x14, x2, x1)

inst_19:
// rs1==x9, rs2==x16, rs3==x11, rd==x17,fs1 == 0 and fe1 == 0x19 and fm1 == 0x36c and fs2 == 1 and fe2 == 0x14 and fm2 == 0x250 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x372 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x9; op2:x16; op3:x11; dest:x17; op1val:0x676c; op2val:0xd250;
op3val:0x7772; valaddr_reg:x13; val_offset:21*FLEN/8; rmval:dyn;
testreg:x1; fcsr_val:128 */
TEST_FPR4_OP(fmadd.h, x17, x9, x16, x11, dyn, 128, 0, x13, 21*FLEN/8, x14, x2, x1)

inst_20:
// rs1==x7, rs2==x29, rs3==x2, rd==x27,fs1 == 0 and fe1 == 0x1e and fm1 == 0x38b and fs2 == 0 and fe2 == 0x0d and fm2 == 0x1f4 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x130 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x7; op2:x29; op3:x2; dest:x27; op1val:0x7b8b; op2val:0x35f4;
op3val:0x7930; valaddr_reg:x13; val_offset:24*FLEN/8; rmval:dyn;
testreg:x1; fcsr_val:0 */
TEST_FPR4_OP(fmadd.h, x27, x7, x29, x2, dyn, 0, 0, x13, 24*FLEN/8, x14, x2, x1)

inst_21:
// rs1==x15, rs2==x6, rs3==x28, rd==x10,fs1 == 0 and fe1 == 0x1e and fm1 == 0x38b and fs2 == 0 and fe2 == 0x0d and fm2 == 0x1f4 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x130 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x15; op2:x6; op3:x28; dest:x10; op1val:0x7b8b; op2val:0x35f4;
op3val:0x7930; valaddr_reg:x13; val_offset:27*FLEN/8; rmval:dyn;
testreg:x1; fcsr_val:32 */
TEST_FPR4_OP(fmadd.h, x10, x15, x6, x28, dyn, 32, 0, x13, 27*FLEN/8, x14, x2, x1)
RVTEST_VALBASEUPD(x6,test_dataset_2)

inst_22:
// rs1==x24, rs2==x26, rs3==x6, rd==x21,fs1 == 0 and fe1 == 0x1e and fm1 == 0x38b and fs2 == 0 and fe2 == 0x0d and fm2 == 0x1f4 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x130 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x24; op2:x26; op3:x6; dest:x21; op1val:0x7b8b; op2val:0x35f4;
op3val:0x7930; valaddr_reg:x6; val_offset:0*FLEN/8; rmval:dyn;
testreg:x1; fcsr_val:64 */
TEST_FPR4_OP(fmadd.h, x21, x24, x26, x6, dyn, 64, 0, x6, 0*FLEN/8, x7, x2, x1)

inst_23:
// rs1==x29, rs2==x10, rs3==x9, rd==x31,fs1 == 0 and fe1 == 0x1e and fm1 == 0x38b and fs2 == 0 and fe2 == 0x0d and fm2 == 0x1f4 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x130 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x29; op2:x10; op3:x9; dest:x31; op1val:0x7b8b; op2val:0x35f4;
op3val:0x7930; valaddr_reg:x6; val_offset:3*FLEN/8; rmval:dyn;
testreg:x1; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, x31, x29, x10, x9, dyn, 96, 0, x6, 3*FLEN/8, x7, x2, x1)

inst_24:
// rs1==x3, rs2==x19, rs3==x24, rd==x26,fs1 == 0 and fe1 == 0x1e and fm1 == 0x38b and fs2 == 0 and fe2 == 0x0d and fm2 == 0x1f4 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x130 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x3; op2:x19; op3:x24; dest:x26; op1val:0x7b8b; op2val:0x35f4;
op3val:0x7930; valaddr_reg:x6; val_offset:6*FLEN/8; rmval:dyn;
testreg:x1; fcsr_val:128 */
TEST_FPR4_OP(fmadd.h, x26, x3, x19, x24, dyn, 128, 0, x6, 6*FLEN/8, x7, x2, x1)

inst_25:
// rs1==x1, rs2==x3, rs3==x25, rd==x24,fs1 == 0 and fe1 == 0x1e and fm1 == 0x334 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x0f1 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x33e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x1; op2:x3; op3:x25; dest:x24; op1val:0x7b34; op2val:0xbcf1;
op3val:0x6f3e; valaddr_reg:x6; val_offset:9*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fmadd.h, x24, x1, x3, x25, dyn, 0, 0, x6, 9*FLEN/8, x7, x2, x5)

inst_26:
// rs1==x8, rs2==x30, rs3==x17, rd==x29,fs1 == 0 and fe1 == 0x1e and fm1 == 0x334 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x0f1 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x33e and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x8; op2:x30; op3:x17; dest:x29; op1val:0x7b34; op2val:0xbcf1;
op3val:0x6f3e; valaddr_reg:x6; val_offset:12*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:32 */
TEST_FPR4_OP(fmadd.h, x29, x8, x30, x17, dyn, 32, 0, x6, 12*FLEN/8, x7, x2, x5)

inst_27:
// rs1==x22, rs2==x13, rs3==x23, rd==x4,fs1 == 0 and fe1 == 0x1e and fm1 == 0x334 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x0f1 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x33e and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x22; op2:x13; op3:x23; dest:x4; op1val:0x7b34; op2val:0xbcf1;
op3val:0x6f3e; valaddr_reg:x6; val_offset:15*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:64 */
TEST_FPR4_OP(fmadd.h, x4, x22, x13, x23, dyn, 64, 0, x6, 15*FLEN/8, x7, x2, x5)
RVTEST_SIGBASE(x1,signature_x1_0)

inst_28:
// rs1==x17, rs2==x22, rs3==x20, rd==x15,fs1 == 0 and fe1 == 0x1e and fm1 == 0x334 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x0f1 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x33e and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x17; op2:x22; op3:x20; dest:x15; op1val:0x7b34; op2val:0xbcf1;
op3val:0x6f3e; valaddr_reg:x6; val_offset:18*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, x15, x17, x22, x20, dyn, 96, 0, x6, 18*FLEN/8, x7, x1, x5)

inst_29:
// rs1==x4, rs2==x2, rs3==x19, rd==x28,fs1 == 0 and fe1 == 0x1e and fm1 == 0x334 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x0f1 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x33e and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x4; op2:x2; op3:x19; dest:x28; op1val:0x7b34; op2val:0xbcf1;
op3val:0x6f3e; valaddr_reg:x6; val_offset:21*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:128 */
TEST_FPR4_OP(fmadd.h, x28, x4, x2, x19, dyn, 128, 0, x6, 21*FLEN/8, x7, x1, x5)

inst_30:
// rs1==x2, rs2==x9, rs3==x0, rd==x20,fs1 == 0 and fe1 == 0x1d and fm1 == 0x380 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x26c and fs3 == 0 and fe3 == 0x1c and fm3 == 0x3e3 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x2; op2:x9; op3:x0; dest:x20; op1val:0x7780; op2val:0x3e6c;
op3val:0x0; valaddr_reg:x6; val_offset:24*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fmadd.h, x20, x2, x9, x0, dyn, 0, 0, x6, 24*FLEN/8, x7, x1, x5)

inst_31:
// rs1==x28, rs2==x21, rs3==x29, rd==x13,fs1 == 0 and fe1 == 0x1d and fm1 == 0x380 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x26c and fs3 == 0 and fe3 == 0x1c and fm3 == 0x3e3 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x28; op2:x21; op3:x29; dest:x13; op1val:0x7780; op2val:0x3e6c;
op3val:0x73e3; valaddr_reg:x6; val_offset:27*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:32 */
TEST_FPR4_OP(fmadd.h, x13, x28, x21, x29, dyn, 32, 0, x6, 27*FLEN/8, x7, x1, x5)

inst_32:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x380 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x26c and fs3 == 0 and fe3 == 0x1c and fm3 == 0x3e3 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7780; op2val:0x3e6c;
op3val:0x73e3; valaddr_reg:x6; val_offset:30*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:64 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 64, 0, x6, 30*FLEN/8, x7, x1, x5)

inst_33:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x380 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x26c and fs3 == 0 and fe3 == 0x1c and fm3 == 0x3e3 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7780; op2val:0x3e6c;
op3val:0x73e3; valaddr_reg:x6; val_offset:33*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 96, 0, x6, 33*FLEN/8, x7, x1, x5)

inst_34:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x380 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x26c and fs3 == 0 and fe3 == 0x1c and fm3 == 0x3e3 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7780; op2val:0x3e6c;
op3val:0x73e3; valaddr_reg:x6; val_offset:36*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:128 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 128, 0, x6, 36*FLEN/8, x7, x1, x5)

inst_35:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x059 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1c9 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x096 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7859; op2val:0xc1c9;
op3val:0x7896; valaddr_reg:x6; val_offset:39*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 0, 0, x6, 39*FLEN/8, x7, x1, x5)

inst_36:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x059 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1c9 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x096 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7859; op2val:0xc1c9;
op3val:0x7896; valaddr_reg:x6; val_offset:42*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:32 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 32, 0, x6, 42*FLEN/8, x7, x1, x5)

inst_37:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x059 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1c9 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x096 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7859; op2val:0xc1c9;
op3val:0x7896; valaddr_reg:x6; val_offset:45*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:64 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 64, 0, x6, 45*FLEN/8, x7, x1, x5)

inst_38:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x059 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1c9 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x096 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7859; op2val:0xc1c9;
op3val:0x7896; valaddr_reg:x6; val_offset:48*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 96, 0, x6, 48*FLEN/8, x7, x1, x5)

inst_39:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x059 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1c9 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x096 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7859; op2val:0xc1c9;
op3val:0x7896; valaddr_reg:x6; val_offset:51*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:128 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 128, 0, x6, 51*FLEN/8, x7, x1, x5)

inst_40:
// fs1 == 0 and fe1 == 0x18 and fm1 == 0x2b8 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x375 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x2ee and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x62b8; op2val:0x5375;
op3val:0x72ee; valaddr_reg:x6; val_offset:54*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 0, 0, x6, 54*FLEN/8, x7, x1, x5)

inst_41:
// fs1 == 0 and fe1 == 0x18 and fm1 == 0x2b8 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x375 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x2ee and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x62b8; op2val:0x5375;
op3val:0x72ee; valaddr_reg:x6; val_offset:57*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:32 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 32, 0, x6, 57*FLEN/8, x7, x1, x5)

inst_42:
// fs1 == 0 and fe1 == 0x18 and fm1 == 0x2b8 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x375 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x2ee and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x62b8; op2val:0x5375;
op3val:0x72ee; valaddr_reg:x6; val_offset:60*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:64 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 64, 0, x6, 60*FLEN/8, x7, x1, x5)

inst_43:
// fs1 == 0 and fe1 == 0x18 and fm1 == 0x2b8 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x375 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x2ee and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x62b8; op2val:0x5375;
op3val:0x72ee; valaddr_reg:x6; val_offset:63*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 96, 0, x6, 63*FLEN/8, x7, x1, x5)

inst_44:
// fs1 == 0 and fe1 == 0x18 and fm1 == 0x2b8 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x375 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x2ee and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x62b8; op2val:0x5375;
op3val:0x72ee; valaddr_reg:x6; val_offset:66*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:128 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 128, 0, x6, 66*FLEN/8, x7, x1, x5)

inst_45:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x078 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x2db and fs3 == 0 and fe3 == 0x1e and fm3 == 0x353 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7478; op2val:0xc6db;
op3val:0x7b53; valaddr_reg:x6; val_offset:69*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 0, 0, x6, 69*FLEN/8, x7, x1, x5)

inst_46:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x078 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x2db and fs3 == 0 and fe3 == 0x1e and fm3 == 0x353 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7478; op2val:0xc6db;
op3val:0x7b53; valaddr_reg:x6; val_offset:72*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:32 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 32, 0, x6, 72*FLEN/8, x7, x1, x5)

inst_47:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x078 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x2db and fs3 == 0 and fe3 == 0x1e and fm3 == 0x353 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7478; op2val:0xc6db;
op3val:0x7b53; valaddr_reg:x6; val_offset:75*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:64 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 64, 0, x6, 75*FLEN/8, x7, x1, x5)

inst_48:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x078 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x2db and fs3 == 0 and fe3 == 0x1e and fm3 == 0x353 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7478; op2val:0xc6db;
op3val:0x7b53; valaddr_reg:x6; val_offset:78*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 96, 0, x6, 78*FLEN/8, x7, x1, x5)

inst_49:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x078 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x2db and fs3 == 0 and fe3 == 0x1e and fm3 == 0x353 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7478; op2val:0xc6db;
op3val:0x7b53; valaddr_reg:x6; val_offset:81*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:128 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 128, 0, x6, 81*FLEN/8, x7, x1, x5)

inst_50:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x21f and fs2 == 0 and fe2 == 0x0f and fm2 == 0x063 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x11a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a1f; op2val:0x3c63;
op3val:0x711a; valaddr_reg:x6; val_offset:84*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 0, 0, x6, 84*FLEN/8, x7, x1, x5)

inst_51:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x21f and fs2 == 0 and fe2 == 0x0f and fm2 == 0x063 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x11a and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a1f; op2val:0x3c63;
op3val:0x711a; valaddr_reg:x6; val_offset:87*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:32 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 32, 0, x6, 87*FLEN/8, x7, x1, x5)

inst_52:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x21f and fs2 == 0 and fe2 == 0x0f and fm2 == 0x063 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x11a and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a1f; op2val:0x3c63;
op3val:0x711a; valaddr_reg:x6; val_offset:90*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:64 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 64, 0, x6, 90*FLEN/8, x7, x1, x5)

inst_53:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x21f and fs2 == 0 and fe2 == 0x0f and fm2 == 0x063 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x11a and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a1f; op2val:0x3c63;
op3val:0x711a; valaddr_reg:x6; val_offset:93*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 96, 0, x6, 93*FLEN/8, x7, x1, x5)

inst_54:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x21f and fs2 == 0 and fe2 == 0x0f and fm2 == 0x063 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x11a and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a1f; op2val:0x3c63;
op3val:0x711a; valaddr_reg:x6; val_offset:96*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:128 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 128, 0, x6, 96*FLEN/8, x7, x1, x5)

inst_55:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x25f and fs2 == 1 and fe2 == 0x0f and fm2 == 0x1b6 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x070 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a5f; op2val:0xbdb6;
op3val:0x7070; valaddr_reg:x6; val_offset:99*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 0, 0, x6, 99*FLEN/8, x7, x1, x5)

inst_56:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x25f and fs2 == 1 and fe2 == 0x0f and fm2 == 0x1b6 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x070 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a5f; op2val:0xbdb6;
op3val:0x7070; valaddr_reg:x6; val_offset:102*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:32 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 32, 0, x6, 102*FLEN/8, x7, x1, x5)

inst_57:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x25f and fs2 == 1 and fe2 == 0x0f and fm2 == 0x1b6 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x070 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a5f; op2val:0xbdb6;
op3val:0x7070; valaddr_reg:x6; val_offset:105*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:64 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 64, 0, x6, 105*FLEN/8, x7, x1, x5)

inst_58:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x25f and fs2 == 1 and fe2 == 0x0f and fm2 == 0x1b6 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x070 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a5f; op2val:0xbdb6;
op3val:0x7070; valaddr_reg:x6; val_offset:108*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 96, 0, x6, 108*FLEN/8, x7, x1, x5)

inst_59:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x25f and fs2 == 1 and fe2 == 0x0f and fm2 == 0x1b6 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x070 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a5f; op2val:0xbdb6;
op3val:0x7070; valaddr_reg:x6; val_offset:111*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:128 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 128, 0, x6, 111*FLEN/8, x7, x1, x5)

inst_60:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0ef and fs2 == 0 and fe2 == 0x0f and fm2 == 0x1a8 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x00d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x78ef; op2val:0x3da8;
op3val:0x700d; valaddr_reg:x6; val_offset:114*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 0, 0, x6, 114*FLEN/8, x7, x1, x5)

inst_61:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0ef and fs2 == 0 and fe2 == 0x0f and fm2 == 0x1a8 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x00d and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x78ef; op2val:0x3da8;
op3val:0x700d; valaddr_reg:x6; val_offset:117*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:32 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 32, 0, x6, 117*FLEN/8, x7, x1, x5)

inst_62:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0ef and fs2 == 0 and fe2 == 0x0f and fm2 == 0x1a8 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x00d and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x78ef; op2val:0x3da8;
op3val:0x700d; valaddr_reg:x6; val_offset:120*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:64 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 64, 0, x6, 120*FLEN/8, x7, x1, x5)

inst_63:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0ef and fs2 == 0 and fe2 == 0x0f and fm2 == 0x1a8 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x00d and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x78ef; op2val:0x3da8;
op3val:0x700d; valaddr_reg:x6; val_offset:123*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 96, 0, x6, 123*FLEN/8, x7, x1, x5)

inst_64:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0ef and fs2 == 0 and fe2 == 0x0f and fm2 == 0x1a8 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x00d and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x78ef; op2val:0x3da8;
op3val:0x700d; valaddr_reg:x6; val_offset:126*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:128 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 128, 0, x6, 126*FLEN/8, x7, x1, x5)

inst_65:
// fs1 == 0 and fe1 == 0x15 and fm1 == 0x354 and fs2 == 1 and fe2 == 0x19 and fm2 == 0x015 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2f7 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5754; op2val:0xe415;
op3val:0x7af7; valaddr_reg:x6; val_offset:129*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 0, 0, x6, 129*FLEN/8, x7, x1, x5)

inst_66:
// fs1 == 0 and fe1 == 0x15 and fm1 == 0x354 and fs2 == 1 and fe2 == 0x19 and fm2 == 0x015 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2f7 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5754; op2val:0xe415;
op3val:0x7af7; valaddr_reg:x6; val_offset:132*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:32 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 32, 0, x6, 132*FLEN/8, x7, x1, x5)

inst_67:
// fs1 == 0 and fe1 == 0x15 and fm1 == 0x354 and fs2 == 1 and fe2 == 0x19 and fm2 == 0x015 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2f7 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5754; op2val:0xe415;
op3val:0x7af7; valaddr_reg:x6; val_offset:135*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:64 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 64, 0, x6, 135*FLEN/8, x7, x1, x5)

inst_68:
// fs1 == 0 and fe1 == 0x15 and fm1 == 0x354 and fs2 == 1 and fe2 == 0x19 and fm2 == 0x015 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2f7 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5754; op2val:0xe415;
op3val:0x7af7; valaddr_reg:x6; val_offset:138*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 96, 0, x6, 138*FLEN/8, x7, x1, x5)

inst_69:
// fs1 == 0 and fe1 == 0x15 and fm1 == 0x354 and fs2 == 1 and fe2 == 0x19 and fm2 == 0x015 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2f7 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5754; op2val:0xe415;
op3val:0x7af7; valaddr_reg:x6; val_offset:141*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:128 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 128, 0, x6, 141*FLEN/8, x7, x1, x5)

inst_70:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x2b3 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2e9 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x2e4 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x72b3; op2val:0xb6e9;
op3val:0x72e4; valaddr_reg:x6; val_offset:144*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 0, 0, x6, 144*FLEN/8, x7, x1, x5)

inst_71:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x2b3 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2e9 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x2e4 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x72b3; op2val:0xb6e9;
op3val:0x72e4; valaddr_reg:x6; val_offset:147*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:32 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 32, 0, x6, 147*FLEN/8, x7, x1, x5)

inst_72:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x2b3 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2e9 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x2e4 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x72b3; op2val:0xb6e9;
op3val:0x72e4; valaddr_reg:x6; val_offset:150*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:64 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 64, 0, x6, 150*FLEN/8, x7, x1, x5)

inst_73:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x2b3 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2e9 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x2e4 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x72b3; op2val:0xb6e9;
op3val:0x72e4; valaddr_reg:x6; val_offset:153*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 96, 0, x6, 153*FLEN/8, x7, x1, x5)

inst_74:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x2b3 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2e9 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x2e4 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x72b3; op2val:0xb6e9;
op3val:0x72e4; valaddr_reg:x6; val_offset:156*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:128 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 128, 0, x6, 156*FLEN/8, x7, x1, x5)

inst_75:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3db and fs2 == 1 and fe2 == 0x0f and fm2 == 0x00f and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2f9 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7bdb; op2val:0xbc0f;
op3val:0x7af9; valaddr_reg:x6; val_offset:159*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 0, 0, x6, 159*FLEN/8, x7, x1, x5)

inst_76:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3db and fs2 == 1 and fe2 == 0x0f and fm2 == 0x00f and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2f9 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7bdb; op2val:0xbc0f;
op3val:0x7af9; valaddr_reg:x6; val_offset:162*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:32 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 32, 0, x6, 162*FLEN/8, x7, x1, x5)

inst_77:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3db and fs2 == 1 and fe2 == 0x0f and fm2 == 0x00f and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2f9 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7bdb; op2val:0xbc0f;
op3val:0x7af9; valaddr_reg:x6; val_offset:165*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:64 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 64, 0, x6, 165*FLEN/8, x7, x1, x5)

inst_78:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3db and fs2 == 1 and fe2 == 0x0f and fm2 == 0x00f and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2f9 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7bdb; op2val:0xbc0f;
op3val:0x7af9; valaddr_reg:x6; val_offset:168*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 96, 0, x6, 168*FLEN/8, x7, x1, x5)

inst_79:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3db and fs2 == 1 and fe2 == 0x0f and fm2 == 0x00f and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2f9 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7bdb; op2val:0xbc0f;
op3val:0x7af9; valaddr_reg:x6; val_offset:171*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:128 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 128, 0, x6, 171*FLEN/8, x7, x1, x5)

inst_80:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0a0 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0eb and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3b0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x74a0; op2val:0xc0eb;
op3val:0x7bb0; valaddr_reg:x6; val_offset:174*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 0, 0, x6, 174*FLEN/8, x7, x1, x5)

inst_81:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0a0 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0eb and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3b0 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x74a0; op2val:0xc0eb;
op3val:0x7bb0; valaddr_reg:x6; val_offset:177*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:32 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 32, 0, x6, 177*FLEN/8, x7, x1, x5)

inst_82:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0a0 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0eb and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3b0 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x74a0; op2val:0xc0eb;
op3val:0x7bb0; valaddr_reg:x6; val_offset:180*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:64 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 64, 0, x6, 180*FLEN/8, x7, x1, x5)

inst_83:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0a0 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0eb and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3b0 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x74a0; op2val:0xc0eb;
op3val:0x7bb0; valaddr_reg:x6; val_offset:183*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 96, 0, x6, 183*FLEN/8, x7, x1, x5)

inst_84:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0a0 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0eb and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3b0 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x74a0; op2val:0xc0eb;
op3val:0x7bb0; valaddr_reg:x6; val_offset:186*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:128 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 128, 0, x6, 186*FLEN/8, x7, x1, x5)

inst_85:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x04f and fs2 == 1 and fe2 == 0x0f and fm2 == 0x2e1 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x16b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x784f; op2val:0xbee1;
op3val:0x796b; valaddr_reg:x6; val_offset:189*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 0, 0, x6, 189*FLEN/8, x7, x1, x5)

inst_86:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x04f and fs2 == 1 and fe2 == 0x0f and fm2 == 0x2e1 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x16b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x784f; op2val:0xbee1;
op3val:0x796b; valaddr_reg:x6; val_offset:192*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:32 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 32, 0, x6, 192*FLEN/8, x7, x1, x5)

inst_87:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x04f and fs2 == 1 and fe2 == 0x0f and fm2 == 0x2e1 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x16b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x784f; op2val:0xbee1;
op3val:0x796b; valaddr_reg:x6; val_offset:195*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:64 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 64, 0, x6, 195*FLEN/8, x7, x1, x5)

inst_88:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x04f and fs2 == 1 and fe2 == 0x0f and fm2 == 0x2e1 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x16b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x784f; op2val:0xbee1;
op3val:0x796b; valaddr_reg:x6; val_offset:198*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 96, 0, x6, 198*FLEN/8, x7, x1, x5)

inst_89:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x04f and fs2 == 1 and fe2 == 0x0f and fm2 == 0x2e1 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x16b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x784f; op2val:0xbee1;
op3val:0x796b; valaddr_reg:x6; val_offset:201*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:128 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 128, 0, x6, 201*FLEN/8, x7, x1, x5)

inst_90:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x28c and fs2 == 1 and fe2 == 0x10 and fm2 == 0x04e and fs3 == 0 and fe3 == 0x1e and fm3 == 0x386 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x728c; op2val:0xc04e;
op3val:0x7b86; valaddr_reg:x6; val_offset:204*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 0, 0, x6, 204*FLEN/8, x7, x1, x5)

inst_91:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x28c and fs2 == 1 and fe2 == 0x10 and fm2 == 0x04e and fs3 == 0 and fe3 == 0x1e and fm3 == 0x386 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x728c; op2val:0xc04e;
op3val:0x7b86; valaddr_reg:x6; val_offset:207*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:32 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 32, 0, x6, 207*FLEN/8, x7, x1, x5)

inst_92:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x28c and fs2 == 1 and fe2 == 0x10 and fm2 == 0x04e and fs3 == 0 and fe3 == 0x1e and fm3 == 0x386 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x728c; op2val:0xc04e;
op3val:0x7b86; valaddr_reg:x6; val_offset:210*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:64 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 64, 0, x6, 210*FLEN/8, x7, x1, x5)

inst_93:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x28c and fs2 == 1 and fe2 == 0x10 and fm2 == 0x04e and fs3 == 0 and fe3 == 0x1e and fm3 == 0x386 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x728c; op2val:0xc04e;
op3val:0x7b86; valaddr_reg:x6; val_offset:213*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 96, 0, x6, 213*FLEN/8, x7, x1, x5)

inst_94:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x28c and fs2 == 1 and fe2 == 0x10 and fm2 == 0x04e and fs3 == 0 and fe3 == 0x1e and fm3 == 0x386 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x728c; op2val:0xc04e;
op3val:0x7b86; valaddr_reg:x6; val_offset:216*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:128 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 128, 0, x6, 216*FLEN/8, x7, x1, x5)

inst_95:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x185 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x03f and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ba and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7985; op2val:0xc03f;
op3val:0x7bba; valaddr_reg:x6; val_offset:219*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 0, 0, x6, 219*FLEN/8, x7, x1, x5)

inst_96:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x185 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x03f and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ba and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7985; op2val:0xc03f;
op3val:0x7bba; valaddr_reg:x6; val_offset:222*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:32 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 32, 0, x6, 222*FLEN/8, x7, x1, x5)

inst_97:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x185 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x03f and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ba and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7985; op2val:0xc03f;
op3val:0x7bba; valaddr_reg:x6; val_offset:225*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:64 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 64, 0, x6, 225*FLEN/8, x7, x1, x5)

inst_98:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x185 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x03f and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ba and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7985; op2val:0xc03f;
op3val:0x7bba; valaddr_reg:x6; val_offset:228*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 96, 0, x6, 228*FLEN/8, x7, x1, x5)

inst_99:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x185 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x03f and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ba and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7985; op2val:0xc03f;
op3val:0x7bba; valaddr_reg:x6; val_offset:231*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:128 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 128, 0, x6, 231*FLEN/8, x7, x1, x5)

inst_100:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x325 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x246 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x0c7 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b25; op2val:0x3a46;
op3val:0x74c7; valaddr_reg:x6; val_offset:234*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 0, 0, x6, 234*FLEN/8, x7, x1, x5)

inst_101:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x325 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x246 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x0c7 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b25; op2val:0x3a46;
op3val:0x74c7; valaddr_reg:x6; val_offset:237*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:32 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 32, 0, x6, 237*FLEN/8, x7, x1, x5)

inst_102:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x325 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x246 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x0c7 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b25; op2val:0x3a46;
op3val:0x74c7; valaddr_reg:x6; val_offset:240*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:64 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 64, 0, x6, 240*FLEN/8, x7, x1, x5)

inst_103:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x325 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x246 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x0c7 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b25; op2val:0x3a46;
op3val:0x74c7; valaddr_reg:x6; val_offset:243*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 96, 0, x6, 243*FLEN/8, x7, x1, x5)

inst_104:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x325 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x246 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x0c7 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b25; op2val:0x3a46;
op3val:0x74c7; valaddr_reg:x6; val_offset:246*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:128 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 128, 0, x6, 246*FLEN/8, x7, x1, x5)

inst_105:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1c6 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x274 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x14e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x75c6; op2val:0xc274;
op3val:0x714e; valaddr_reg:x6; val_offset:249*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 0, 0, x6, 249*FLEN/8, x7, x1, x5)

inst_106:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1c6 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x274 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x14e and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x75c6; op2val:0xc274;
op3val:0x714e; valaddr_reg:x6; val_offset:252*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:32 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 32, 0, x6, 252*FLEN/8, x7, x1, x5)

inst_107:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1c6 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x274 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x14e and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x75c6; op2val:0xc274;
op3val:0x714e; valaddr_reg:x6; val_offset:255*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:64 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 64, 0, x6, 255*FLEN/8, x7, x1, x5)

inst_108:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1c6 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x274 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x14e and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x75c6; op2val:0xc274;
op3val:0x714e; valaddr_reg:x6; val_offset:258*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 96, 0, x6, 258*FLEN/8, x7, x1, x5)

inst_109:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1c6 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x274 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x14e and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x75c6; op2val:0xc274;
op3val:0x714e; valaddr_reg:x6; val_offset:261*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:128 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 128, 0, x6, 261*FLEN/8, x7, x1, x5)

inst_110:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x0a9 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x2a3 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x02a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x70a9; op2val:0x4aa3;
op3val:0x6c2a; valaddr_reg:x6; val_offset:264*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 0, 0, x6, 264*FLEN/8, x7, x1, x5)

inst_111:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x0a9 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x2a3 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x02a and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x70a9; op2val:0x4aa3;
op3val:0x6c2a; valaddr_reg:x6; val_offset:267*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:32 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 32, 0, x6, 267*FLEN/8, x7, x1, x5)

inst_112:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x0a9 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x2a3 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x02a and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x70a9; op2val:0x4aa3;
op3val:0x6c2a; valaddr_reg:x6; val_offset:270*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:64 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 64, 0, x6, 270*FLEN/8, x7, x1, x5)

inst_113:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x0a9 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x2a3 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x02a and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x70a9; op2val:0x4aa3;
op3val:0x6c2a; valaddr_reg:x6; val_offset:273*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 96, 0, x6, 273*FLEN/8, x7, x1, x5)

inst_114:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x0a9 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x2a3 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x02a and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x70a9; op2val:0x4aa3;
op3val:0x6c2a; valaddr_reg:x6; val_offset:276*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:128 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 128, 0, x6, 276*FLEN/8, x7, x1, x5)

inst_115:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0d1 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x051 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0d2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x74d1; op2val:0xc851;
op3val:0x78d2; valaddr_reg:x6; val_offset:279*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 0, 0, x6, 279*FLEN/8, x7, x1, x5)

inst_116:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0d1 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x051 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0d2 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x74d1; op2val:0xc851;
op3val:0x78d2; valaddr_reg:x6; val_offset:282*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:32 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 32, 0, x6, 282*FLEN/8, x7, x1, x5)

inst_117:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0d1 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x051 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0d2 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x74d1; op2val:0xc851;
op3val:0x78d2; valaddr_reg:x6; val_offset:285*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:64 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 64, 0, x6, 285*FLEN/8, x7, x1, x5)

inst_118:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0d1 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x051 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0d2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x74d1; op2val:0xc851;
op3val:0x78d2; valaddr_reg:x6; val_offset:288*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 96, 0, x6, 288*FLEN/8, x7, x1, x5)

inst_119:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0d1 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x051 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0d2 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x74d1; op2val:0xc851;
op3val:0x78d2; valaddr_reg:x6; val_offset:291*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:128 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 128, 0, x6, 291*FLEN/8, x7, x1, x5)

inst_120:
// fs1 == 0 and fe1 == 0x16 and fm1 == 0x2f4 and fs2 == 0 and fe2 == 0x18 and fm2 == 0x3a3 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x16b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5af4; op2val:0x63a3;
op3val:0x796b; valaddr_reg:x6; val_offset:294*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 0, 0, x6, 294*FLEN/8, x7, x1, x5)

inst_121:
// fs1 == 0 and fe1 == 0x16 and fm1 == 0x2f4 and fs2 == 0 and fe2 == 0x18 and fm2 == 0x3a3 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x16b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5af4; op2val:0x63a3;
op3val:0x796b; valaddr_reg:x6; val_offset:297*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:32 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 32, 0, x6, 297*FLEN/8, x7, x1, x5)

inst_122:
// fs1 == 0 and fe1 == 0x16 and fm1 == 0x2f4 and fs2 == 0 and fe2 == 0x18 and fm2 == 0x3a3 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x16b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5af4; op2val:0x63a3;
op3val:0x796b; valaddr_reg:x6; val_offset:300*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:64 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 64, 0, x6, 300*FLEN/8, x7, x1, x5)

inst_123:
// fs1 == 0 and fe1 == 0x16 and fm1 == 0x2f4 and fs2 == 0 and fe2 == 0x18 and fm2 == 0x3a3 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x16b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5af4; op2val:0x63a3;
op3val:0x796b; valaddr_reg:x6; val_offset:303*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 96, 0, x6, 303*FLEN/8, x7, x1, x5)

inst_124:
// fs1 == 0 and fe1 == 0x16 and fm1 == 0x2f4 and fs2 == 0 and fe2 == 0x18 and fm2 == 0x3a3 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x16b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5af4; op2val:0x63a3;
op3val:0x796b; valaddr_reg:x6; val_offset:306*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:128 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 128, 0, x6, 306*FLEN/8, x7, x1, x5)

inst_125:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x167 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x260 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x0f5 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7567; op2val:0xca60;
op3val:0x74f5; valaddr_reg:x6; val_offset:309*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 0, 0, x6, 309*FLEN/8, x7, x1, x5)

inst_126:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x167 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x260 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x0f5 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7567; op2val:0xca60;
op3val:0x74f5; valaddr_reg:x6; val_offset:312*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:32 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 32, 0, x6, 312*FLEN/8, x7, x1, x5)

inst_127:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x167 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x260 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x0f5 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7567; op2val:0xca60;
op3val:0x74f5; valaddr_reg:x6; val_offset:315*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:64 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 64, 0, x6, 315*FLEN/8, x7, x1, x5)

inst_128:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x167 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x260 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x0f5 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7567; op2val:0xca60;
op3val:0x74f5; valaddr_reg:x6; val_offset:318*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 96, 0, x6, 318*FLEN/8, x7, x1, x5)

inst_129:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x167 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x260 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x0f5 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7567; op2val:0xca60;
op3val:0x74f5; valaddr_reg:x6; val_offset:321*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:128 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 128, 0, x6, 321*FLEN/8, x7, x1, x5)

inst_130:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x28b and fs2 == 0 and fe2 == 0x12 and fm2 == 0x097 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3b0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a8b; op2val:0x4897;
op3val:0x77b0; valaddr_reg:x6; val_offset:324*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 0, 0, x6, 324*FLEN/8, x7, x1, x5)

inst_131:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x28b and fs2 == 0 and fe2 == 0x12 and fm2 == 0x097 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3b0 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a8b; op2val:0x4897;
op3val:0x77b0; valaddr_reg:x6; val_offset:327*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:32 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 32, 0, x6, 327*FLEN/8, x7, x1, x5)

inst_132:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x28b and fs2 == 0 and fe2 == 0x12 and fm2 == 0x097 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3b0 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a8b; op2val:0x4897;
op3val:0x77b0; valaddr_reg:x6; val_offset:330*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:64 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 64, 0, x6, 330*FLEN/8, x7, x1, x5)

inst_133:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x28b and fs2 == 0 and fe2 == 0x12 and fm2 == 0x097 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3b0 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a8b; op2val:0x4897;
op3val:0x77b0; valaddr_reg:x6; val_offset:333*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 96, 0, x6, 333*FLEN/8, x7, x1, x5)

inst_134:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x28b and fs2 == 0 and fe2 == 0x12 and fm2 == 0x097 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3b0 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a8b; op2val:0x4897;
op3val:0x77b0; valaddr_reg:x6; val_offset:336*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:128 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 128, 0, x6, 336*FLEN/8, x7, x1, x5)

inst_135:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x10c and fs2 == 1 and fe2 == 0x13 and fm2 == 0x2b6 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3b2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x750c; op2val:0xceb6;
op3val:0x77b2; valaddr_reg:x6; val_offset:339*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 0, 0, x6, 339*FLEN/8, x7, x1, x5)

inst_136:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x10c and fs2 == 1 and fe2 == 0x13 and fm2 == 0x2b6 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3b2 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x750c; op2val:0xceb6;
op3val:0x77b2; valaddr_reg:x6; val_offset:342*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:32 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 32, 0, x6, 342*FLEN/8, x7, x1, x5)

inst_137:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x10c and fs2 == 1 and fe2 == 0x13 and fm2 == 0x2b6 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3b2 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x750c; op2val:0xceb6;
op3val:0x77b2; valaddr_reg:x6; val_offset:345*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:64 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 64, 0, x6, 345*FLEN/8, x7, x1, x5)

inst_138:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x10c and fs2 == 1 and fe2 == 0x13 and fm2 == 0x2b6 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3b2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x750c; op2val:0xceb6;
op3val:0x77b2; valaddr_reg:x6; val_offset:348*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 96, 0, x6, 348*FLEN/8, x7, x1, x5)

inst_139:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x10c and fs2 == 1 and fe2 == 0x13 and fm2 == 0x2b6 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3b2 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x750c; op2val:0xceb6;
op3val:0x77b2; valaddr_reg:x6; val_offset:351*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:128 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 128, 0, x6, 351*FLEN/8, x7, x1, x5)

inst_140:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0fb and fs2 == 0 and fe2 == 0x0d and fm2 == 0x2a1 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1ee and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x78fb; op2val:0x36a1;
op3val:0x79ee; valaddr_reg:x6; val_offset:354*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 0, 0, x6, 354*FLEN/8, x7, x1, x5)

inst_141:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0fb and fs2 == 0 and fe2 == 0x0d and fm2 == 0x2a1 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1ee and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x78fb; op2val:0x36a1;
op3val:0x79ee; valaddr_reg:x6; val_offset:357*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:32 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 32, 0, x6, 357*FLEN/8, x7, x1, x5)

inst_142:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0fb and fs2 == 0 and fe2 == 0x0d and fm2 == 0x2a1 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1ee and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x78fb; op2val:0x36a1;
op3val:0x79ee; valaddr_reg:x6; val_offset:360*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 96, 0, x6, 360*FLEN/8, x7, x1, x5)

inst_143:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x25b and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0e2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x389 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a5b; op2val:0xc0e2;
op3val:0x7b89; valaddr_reg:x6; val_offset:363*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 0, 0, x6, 363*FLEN/8, x7, x1, x5)

inst_144:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x25b and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0e2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x389 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a5b; op2val:0xc0e2;
op3val:0x7b89; valaddr_reg:x6; val_offset:366*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:32 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 32, 0, x6, 366*FLEN/8, x7, x1, x5)

inst_145:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x25b and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0e2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x389 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a5b; op2val:0xc0e2;
op3val:0x7b89; valaddr_reg:x6; val_offset:369*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:64 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 64, 0, x6, 369*FLEN/8, x7, x1, x5)

inst_146:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x25b and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0e2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x389 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a5b; op2val:0xc0e2;
op3val:0x7b89; valaddr_reg:x6; val_offset:372*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 96, 0, x6, 372*FLEN/8, x7, x1, x5)

inst_147:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x25b and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0e2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x389 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a5b; op2val:0xc0e2;
op3val:0x7b89; valaddr_reg:x6; val_offset:375*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:128 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 128, 0, x6, 375*FLEN/8, x7, x1, x5)

inst_148:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1ea and fs2 == 0 and fe2 == 0x0b and fm2 == 0x2b7 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x360 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x79ea; op2val:0x2eb7;
op3val:0x7b60; valaddr_reg:x6; val_offset:378*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 0, 0, x6, 378*FLEN/8, x7, x1, x5)

inst_149:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1ea and fs2 == 0 and fe2 == 0x0b and fm2 == 0x2b7 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x360 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x79ea; op2val:0x2eb7;
op3val:0x7b60; valaddr_reg:x6; val_offset:381*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:32 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 32, 0, x6, 381*FLEN/8, x7, x1, x5)

inst_150:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x380 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x26c and fs3 == 0 and fe3 == 0x1c and fm3 == 0x3e3 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000 and rs3_sgn_prefix == 0x0000  
/* opcode: fmadd.h ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7780; op2val:0x3e6c;
op3val:0x73e3; valaddr_reg:x6; val_offset:384*FLEN/8; rmval:dyn;
testreg:x5; fcsr_val:0 */
TEST_FPR4_OP(fmadd.h, x31, x30, x29, x28, dyn, 0, 0, x6, 384*FLEN/8, x7, x1, x5)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(30971,32,FLEN)
NAN_BOXED(30971,32,FLEN)
NAN_BOXED(31214,32,FLEN)
NAN_BOXED(30971,32,FLEN)
NAN_BOXED(13985,32,FLEN)
NAN_BOXED(30971,32,FLEN)
NAN_BOXED(30971,32,FLEN)
NAN_BOXED(13985,32,FLEN)
NAN_BOXED(31214,32,FLEN)
NAN_BOXED(30971,32,FLEN)
NAN_BOXED(30971,32,FLEN)
NAN_BOXED(30971,32,FLEN)
NAN_BOXED(30971,32,FLEN)
NAN_BOXED(13985,32,FLEN)
NAN_BOXED(31214,32,FLEN)
NAN_BOXED(31323,32,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(31625,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(49378,16,FLEN)
NAN_BOXED(31625,32,FLEN)
NAN_BOXED(31323,32,FLEN)
NAN_BOXED(49378,16,FLEN)
NAN_BOXED(49378,32,FLEN)
NAN_BOXED(31323,32,FLEN)
NAN_BOXED(49378,16,FLEN)
NAN_BOXED(31323,32,FLEN)
NAN_BOXED(31323,32,FLEN)
NAN_BOXED(31323,16,FLEN)
NAN_BOXED(31323,32,FLEN)
NAN_BOXED(31210,32,FLEN)
NAN_BOXED(11959,32,FLEN)
NAN_BOXED(11959,32,FLEN)
NAN_BOXED(31210,32,FLEN)
NAN_BOXED(31210,32,FLEN)
NAN_BOXED(31584,32,FLEN)
test_dataset_1:
NAN_BOXED(31210,32,FLEN)
NAN_BOXED(11959,32,FLEN)
NAN_BOXED(31584,32,FLEN)
NAN_BOXED(31210,32,FLEN)
NAN_BOXED(11959,32,FLEN)
NAN_BOXED(31584,32,FLEN)
NAN_BOXED(31210,32,FLEN)
NAN_BOXED(11959,32,FLEN)
NAN_BOXED(31584,32,FLEN)
NAN_BOXED(26476,32,FLEN)
NAN_BOXED(53840,16,FLEN)
NAN_BOXED(30578,32,FLEN)
NAN_BOXED(26476,32,FLEN)
NAN_BOXED(53840,16,FLEN)
NAN_BOXED(30578,32,FLEN)
NAN_BOXED(26476,32,FLEN)
NAN_BOXED(53840,16,FLEN)
NAN_BOXED(30578,32,FLEN)
NAN_BOXED(26476,32,FLEN)
NAN_BOXED(53840,16,FLEN)
NAN_BOXED(30578,32,FLEN)
NAN_BOXED(26476,32,FLEN)
NAN_BOXED(53840,16,FLEN)
NAN_BOXED(30578,32,FLEN)
NAN_BOXED(31627,32,FLEN)
NAN_BOXED(13812,32,FLEN)
NAN_BOXED(31024,32,FLEN)
NAN_BOXED(31627,32,FLEN)
NAN_BOXED(13812,32,FLEN)
NAN_BOXED(31024,32,FLEN)
test_dataset_2:
NAN_BOXED(31627,16,FLEN)
NAN_BOXED(13812,16,FLEN)
NAN_BOXED(31024,16,FLEN)
NAN_BOXED(31627,16,FLEN)
NAN_BOXED(13812,16,FLEN)
NAN_BOXED(31024,16,FLEN)
NAN_BOXED(31627,16,FLEN)
NAN_BOXED(13812,16,FLEN)
NAN_BOXED(31024,16,FLEN)
NAN_BOXED(31540,16,FLEN)
NAN_BOXED(48369,16,FLEN)
NAN_BOXED(28478,16,FLEN)
NAN_BOXED(31540,16,FLEN)
NAN_BOXED(48369,16,FLEN)
NAN_BOXED(28478,16,FLEN)
NAN_BOXED(31540,16,FLEN)
NAN_BOXED(48369,16,FLEN)
NAN_BOXED(28478,16,FLEN)
NAN_BOXED(31540,16,FLEN)
NAN_BOXED(48369,16,FLEN)
NAN_BOXED(28478,16,FLEN)
NAN_BOXED(31540,16,FLEN)
NAN_BOXED(48369,16,FLEN)
NAN_BOXED(28478,16,FLEN)
NAN_BOXED(30592,16,FLEN)
NAN_BOXED(15980,16,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(30592,16,FLEN)
NAN_BOXED(15980,16,FLEN)
NAN_BOXED(29667,16,FLEN)
NAN_BOXED(30592,16,FLEN)
NAN_BOXED(15980,16,FLEN)
NAN_BOXED(29667,16,FLEN)
NAN_BOXED(30592,16,FLEN)
NAN_BOXED(15980,16,FLEN)
NAN_BOXED(29667,16,FLEN)
NAN_BOXED(30592,16,FLEN)
NAN_BOXED(15980,16,FLEN)
NAN_BOXED(29667,16,FLEN)
NAN_BOXED(30809,16,FLEN)
NAN_BOXED(49609,16,FLEN)
NAN_BOXED(30870,16,FLEN)
NAN_BOXED(30809,16,FLEN)
NAN_BOXED(49609,16,FLEN)
NAN_BOXED(30870,16,FLEN)
NAN_BOXED(30809,16,FLEN)
NAN_BOXED(49609,16,FLEN)
NAN_BOXED(30870,16,FLEN)
NAN_BOXED(30809,16,FLEN)
NAN_BOXED(49609,16,FLEN)
NAN_BOXED(30870,16,FLEN)
NAN_BOXED(30809,16,FLEN)
NAN_BOXED(49609,16,FLEN)
NAN_BOXED(30870,16,FLEN)
NAN_BOXED(25272,16,FLEN)
NAN_BOXED(21365,16,FLEN)
NAN_BOXED(29422,16,FLEN)
NAN_BOXED(25272,16,FLEN)
NAN_BOXED(21365,16,FLEN)
NAN_BOXED(29422,16,FLEN)
NAN_BOXED(25272,16,FLEN)
NAN_BOXED(21365,16,FLEN)
NAN_BOXED(29422,16,FLEN)
NAN_BOXED(25272,16,FLEN)
NAN_BOXED(21365,16,FLEN)
NAN_BOXED(29422,16,FLEN)
NAN_BOXED(25272,16,FLEN)
NAN_BOXED(21365,16,FLEN)
NAN_BOXED(29422,16,FLEN)
NAN_BOXED(29816,16,FLEN)
NAN_BOXED(50907,16,FLEN)
NAN_BOXED(31571,16,FLEN)
NAN_BOXED(29816,16,FLEN)
NAN_BOXED(50907,16,FLEN)
NAN_BOXED(31571,16,FLEN)
NAN_BOXED(29816,16,FLEN)
NAN_BOXED(50907,16,FLEN)
NAN_BOXED(31571,16,FLEN)
NAN_BOXED(29816,16,FLEN)
NAN_BOXED(50907,16,FLEN)
NAN_BOXED(31571,16,FLEN)
NAN_BOXED(29816,16,FLEN)
NAN_BOXED(50907,16,FLEN)
NAN_BOXED(31571,16,FLEN)
NAN_BOXED(31263,16,FLEN)
NAN_BOXED(15459,16,FLEN)
NAN_BOXED(28954,16,FLEN)
NAN_BOXED(31263,16,FLEN)
NAN_BOXED(15459,16,FLEN)
NAN_BOXED(28954,16,FLEN)
NAN_BOXED(31263,16,FLEN)
NAN_BOXED(15459,16,FLEN)
NAN_BOXED(28954,16,FLEN)
NAN_BOXED(31263,16,FLEN)
NAN_BOXED(15459,16,FLEN)
NAN_BOXED(28954,16,FLEN)
NAN_BOXED(31263,16,FLEN)
NAN_BOXED(15459,16,FLEN)
NAN_BOXED(28954,16,FLEN)
NAN_BOXED(31327,16,FLEN)
NAN_BOXED(48566,16,FLEN)
NAN_BOXED(28784,16,FLEN)
NAN_BOXED(31327,16,FLEN)
NAN_BOXED(48566,16,FLEN)
NAN_BOXED(28784,16,FLEN)
NAN_BOXED(31327,16,FLEN)
NAN_BOXED(48566,16,FLEN)
NAN_BOXED(28784,16,FLEN)
NAN_BOXED(31327,16,FLEN)
NAN_BOXED(48566,16,FLEN)
NAN_BOXED(28784,16,FLEN)
NAN_BOXED(31327,16,FLEN)
NAN_BOXED(48566,16,FLEN)
NAN_BOXED(28784,16,FLEN)
NAN_BOXED(30959,16,FLEN)
NAN_BOXED(15784,16,FLEN)
NAN_BOXED(28685,16,FLEN)
NAN_BOXED(30959,16,FLEN)
NAN_BOXED(15784,16,FLEN)
NAN_BOXED(28685,16,FLEN)
NAN_BOXED(30959,16,FLEN)
NAN_BOXED(15784,16,FLEN)
NAN_BOXED(28685,16,FLEN)
NAN_BOXED(30959,16,FLEN)
NAN_BOXED(15784,16,FLEN)
NAN_BOXED(28685,16,FLEN)
NAN_BOXED(30959,16,FLEN)
NAN_BOXED(15784,16,FLEN)
NAN_BOXED(28685,16,FLEN)
NAN_BOXED(22356,16,FLEN)
NAN_BOXED(58389,16,FLEN)
NAN_BOXED(31479,16,FLEN)
NAN_BOXED(22356,16,FLEN)
NAN_BOXED(58389,16,FLEN)
NAN_BOXED(31479,16,FLEN)
NAN_BOXED(22356,16,FLEN)
NAN_BOXED(58389,16,FLEN)
NAN_BOXED(31479,16,FLEN)
NAN_BOXED(22356,16,FLEN)
NAN_BOXED(58389,16,FLEN)
NAN_BOXED(31479,16,FLEN)
NAN_BOXED(22356,16,FLEN)
NAN_BOXED(58389,16,FLEN)
NAN_BOXED(31479,16,FLEN)
NAN_BOXED(29363,16,FLEN)
NAN_BOXED(46825,16,FLEN)
NAN_BOXED(29412,16,FLEN)
NAN_BOXED(29363,16,FLEN)
NAN_BOXED(46825,16,FLEN)
NAN_BOXED(29412,16,FLEN)
NAN_BOXED(29363,16,FLEN)
NAN_BOXED(46825,16,FLEN)
NAN_BOXED(29412,16,FLEN)
NAN_BOXED(29363,16,FLEN)
NAN_BOXED(46825,16,FLEN)
NAN_BOXED(29412,16,FLEN)
NAN_BOXED(29363,16,FLEN)
NAN_BOXED(46825,16,FLEN)
NAN_BOXED(29412,16,FLEN)
NAN_BOXED(31707,16,FLEN)
NAN_BOXED(48143,16,FLEN)
NAN_BOXED(31481,16,FLEN)
NAN_BOXED(31707,16,FLEN)
NAN_BOXED(48143,16,FLEN)
NAN_BOXED(31481,16,FLEN)
NAN_BOXED(31707,16,FLEN)
NAN_BOXED(48143,16,FLEN)
NAN_BOXED(31481,16,FLEN)
NAN_BOXED(31707,16,FLEN)
NAN_BOXED(48143,16,FLEN)
NAN_BOXED(31481,16,FLEN)
NAN_BOXED(31707,16,FLEN)
NAN_BOXED(48143,16,FLEN)
NAN_BOXED(31481,16,FLEN)
NAN_BOXED(29856,16,FLEN)
NAN_BOXED(49387,16,FLEN)
NAN_BOXED(31664,16,FLEN)
NAN_BOXED(29856,16,FLEN)
NAN_BOXED(49387,16,FLEN)
NAN_BOXED(31664,16,FLEN)
NAN_BOXED(29856,16,FLEN)
NAN_BOXED(49387,16,FLEN)
NAN_BOXED(31664,16,FLEN)
NAN_BOXED(29856,16,FLEN)
NAN_BOXED(49387,16,FLEN)
NAN_BOXED(31664,16,FLEN)
NAN_BOXED(29856,16,FLEN)
NAN_BOXED(49387,16,FLEN)
NAN_BOXED(31664,16,FLEN)
NAN_BOXED(30799,16,FLEN)
NAN_BOXED(48865,16,FLEN)
NAN_BOXED(31083,16,FLEN)
NAN_BOXED(30799,16,FLEN)
NAN_BOXED(48865,16,FLEN)
NAN_BOXED(31083,16,FLEN)
NAN_BOXED(30799,16,FLEN)
NAN_BOXED(48865,16,FLEN)
NAN_BOXED(31083,16,FLEN)
NAN_BOXED(30799,16,FLEN)
NAN_BOXED(48865,16,FLEN)
NAN_BOXED(31083,16,FLEN)
NAN_BOXED(30799,16,FLEN)
NAN_BOXED(48865,16,FLEN)
NAN_BOXED(31083,16,FLEN)
NAN_BOXED(29324,16,FLEN)
NAN_BOXED(49230,16,FLEN)
NAN_BOXED(31622,16,FLEN)
NAN_BOXED(29324,16,FLEN)
NAN_BOXED(49230,16,FLEN)
NAN_BOXED(31622,16,FLEN)
NAN_BOXED(29324,16,FLEN)
NAN_BOXED(49230,16,FLEN)
NAN_BOXED(31622,16,FLEN)
NAN_BOXED(29324,16,FLEN)
NAN_BOXED(49230,16,FLEN)
NAN_BOXED(31622,16,FLEN)
NAN_BOXED(29324,16,FLEN)
NAN_BOXED(49230,16,FLEN)
NAN_BOXED(31622,16,FLEN)
NAN_BOXED(31109,16,FLEN)
NAN_BOXED(49215,16,FLEN)
NAN_BOXED(31674,16,FLEN)
NAN_BOXED(31109,16,FLEN)
NAN_BOXED(49215,16,FLEN)
NAN_BOXED(31674,16,FLEN)
NAN_BOXED(31109,16,FLEN)
NAN_BOXED(49215,16,FLEN)
NAN_BOXED(31674,16,FLEN)
NAN_BOXED(31109,16,FLEN)
NAN_BOXED(49215,16,FLEN)
NAN_BOXED(31674,16,FLEN)
NAN_BOXED(31109,16,FLEN)
NAN_BOXED(49215,16,FLEN)
NAN_BOXED(31674,16,FLEN)
NAN_BOXED(31525,16,FLEN)
NAN_BOXED(14918,16,FLEN)
NAN_BOXED(29895,16,FLEN)
NAN_BOXED(31525,16,FLEN)
NAN_BOXED(14918,16,FLEN)
NAN_BOXED(29895,16,FLEN)
NAN_BOXED(31525,16,FLEN)
NAN_BOXED(14918,16,FLEN)
NAN_BOXED(29895,16,FLEN)
NAN_BOXED(31525,16,FLEN)
NAN_BOXED(14918,16,FLEN)
NAN_BOXED(29895,16,FLEN)
NAN_BOXED(31525,16,FLEN)
NAN_BOXED(14918,16,FLEN)
NAN_BOXED(29895,16,FLEN)
NAN_BOXED(30150,16,FLEN)
NAN_BOXED(49780,16,FLEN)
NAN_BOXED(29006,16,FLEN)
NAN_BOXED(30150,16,FLEN)
NAN_BOXED(49780,16,FLEN)
NAN_BOXED(29006,16,FLEN)
NAN_BOXED(30150,16,FLEN)
NAN_BOXED(49780,16,FLEN)
NAN_BOXED(29006,16,FLEN)
NAN_BOXED(30150,16,FLEN)
NAN_BOXED(49780,16,FLEN)
NAN_BOXED(29006,16,FLEN)
NAN_BOXED(30150,16,FLEN)
NAN_BOXED(49780,16,FLEN)
NAN_BOXED(29006,16,FLEN)
NAN_BOXED(28841,16,FLEN)
NAN_BOXED(19107,16,FLEN)
NAN_BOXED(27690,16,FLEN)
NAN_BOXED(28841,16,FLEN)
NAN_BOXED(19107,16,FLEN)
NAN_BOXED(27690,16,FLEN)
NAN_BOXED(28841,16,FLEN)
NAN_BOXED(19107,16,FLEN)
NAN_BOXED(27690,16,FLEN)
NAN_BOXED(28841,16,FLEN)
NAN_BOXED(19107,16,FLEN)
NAN_BOXED(27690,16,FLEN)
NAN_BOXED(28841,16,FLEN)
NAN_BOXED(19107,16,FLEN)
NAN_BOXED(27690,16,FLEN)
NAN_BOXED(29905,16,FLEN)
NAN_BOXED(51281,16,FLEN)
NAN_BOXED(30930,16,FLEN)
NAN_BOXED(29905,16,FLEN)
NAN_BOXED(51281,16,FLEN)
NAN_BOXED(30930,16,FLEN)
NAN_BOXED(29905,16,FLEN)
NAN_BOXED(51281,16,FLEN)
NAN_BOXED(30930,16,FLEN)
NAN_BOXED(29905,16,FLEN)
NAN_BOXED(51281,16,FLEN)
NAN_BOXED(30930,16,FLEN)
NAN_BOXED(29905,16,FLEN)
NAN_BOXED(51281,16,FLEN)
NAN_BOXED(30930,16,FLEN)
NAN_BOXED(23284,16,FLEN)
NAN_BOXED(25507,16,FLEN)
NAN_BOXED(31083,16,FLEN)
NAN_BOXED(23284,16,FLEN)
NAN_BOXED(25507,16,FLEN)
NAN_BOXED(31083,16,FLEN)
NAN_BOXED(23284,16,FLEN)
NAN_BOXED(25507,16,FLEN)
NAN_BOXED(31083,16,FLEN)
NAN_BOXED(23284,16,FLEN)
NAN_BOXED(25507,16,FLEN)
NAN_BOXED(31083,16,FLEN)
NAN_BOXED(23284,16,FLEN)
NAN_BOXED(25507,16,FLEN)
NAN_BOXED(31083,16,FLEN)
NAN_BOXED(30055,16,FLEN)
NAN_BOXED(51808,16,FLEN)
NAN_BOXED(29941,16,FLEN)
NAN_BOXED(30055,16,FLEN)
NAN_BOXED(51808,16,FLEN)
NAN_BOXED(29941,16,FLEN)
NAN_BOXED(30055,16,FLEN)
NAN_BOXED(51808,16,FLEN)
NAN_BOXED(29941,16,FLEN)
NAN_BOXED(30055,16,FLEN)
NAN_BOXED(51808,16,FLEN)
NAN_BOXED(29941,16,FLEN)
NAN_BOXED(30055,16,FLEN)
NAN_BOXED(51808,16,FLEN)
NAN_BOXED(29941,16,FLEN)
NAN_BOXED(31371,16,FLEN)
NAN_BOXED(18583,16,FLEN)
NAN_BOXED(30640,16,FLEN)
NAN_BOXED(31371,16,FLEN)
NAN_BOXED(18583,16,FLEN)
NAN_BOXED(30640,16,FLEN)
NAN_BOXED(31371,16,FLEN)
NAN_BOXED(18583,16,FLEN)
NAN_BOXED(30640,16,FLEN)
NAN_BOXED(31371,16,FLEN)
NAN_BOXED(18583,16,FLEN)
NAN_BOXED(30640,16,FLEN)
NAN_BOXED(31371,16,FLEN)
NAN_BOXED(18583,16,FLEN)
NAN_BOXED(30640,16,FLEN)
NAN_BOXED(29964,16,FLEN)
NAN_BOXED(52918,16,FLEN)
NAN_BOXED(30642,16,FLEN)
NAN_BOXED(29964,16,FLEN)
NAN_BOXED(52918,16,FLEN)
NAN_BOXED(30642,16,FLEN)
NAN_BOXED(29964,16,FLEN)
NAN_BOXED(52918,16,FLEN)
NAN_BOXED(30642,16,FLEN)
NAN_BOXED(29964,16,FLEN)
NAN_BOXED(52918,16,FLEN)
NAN_BOXED(30642,16,FLEN)
NAN_BOXED(29964,16,FLEN)
NAN_BOXED(52918,16,FLEN)
NAN_BOXED(30642,16,FLEN)
NAN_BOXED(30971,16,FLEN)
NAN_BOXED(13985,16,FLEN)
NAN_BOXED(31214,16,FLEN)
NAN_BOXED(30971,16,FLEN)
NAN_BOXED(13985,16,FLEN)
NAN_BOXED(31214,16,FLEN)
NAN_BOXED(30971,16,FLEN)
NAN_BOXED(13985,16,FLEN)
NAN_BOXED(31214,16,FLEN)
NAN_BOXED(31323,16,FLEN)
NAN_BOXED(49378,16,FLEN)
NAN_BOXED(31625,16,FLEN)
NAN_BOXED(31323,16,FLEN)
NAN_BOXED(49378,16,FLEN)
NAN_BOXED(31625,16,FLEN)
NAN_BOXED(31323,16,FLEN)
NAN_BOXED(49378,16,FLEN)
NAN_BOXED(31625,16,FLEN)
NAN_BOXED(31323,16,FLEN)
NAN_BOXED(49378,16,FLEN)
NAN_BOXED(31625,16,FLEN)
NAN_BOXED(31323,16,FLEN)
NAN_BOXED(49378,16,FLEN)
NAN_BOXED(31625,16,FLEN)
NAN_BOXED(31210,16,FLEN)
NAN_BOXED(11959,16,FLEN)
NAN_BOXED(31584,16,FLEN)
NAN_BOXED(31210,16,FLEN)
NAN_BOXED(11959,16,FLEN)
NAN_BOXED(31584,16,FLEN)
NAN_BOXED(30592,16,FLEN)
NAN_BOXED(15980,16,FLEN)
NAN_BOXED(29667,16,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x4_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x4_1:
    .fill 30*((SIGALIGN)/4),4,0xdeadbeef


signature_x2_0:
    .fill 26*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_0:
    .fill 246*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
