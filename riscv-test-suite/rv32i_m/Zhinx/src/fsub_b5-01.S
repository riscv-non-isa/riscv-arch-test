
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.12.2
// timestamp : Wed Sep 25 06:02:02 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/testing/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/testing/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV32Zhinx/rv32h_fsub.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fsub.h instruction of the RISC-V RV32_Zfinx_Zhinx,RV64_Zfinx_Zhinx extension for the fsub_b5 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32I_Zfinx_Zhinx,RV64I_Zfinx_Zhinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*Zhinx.*);def TEST_CASE_1=True;",fsub_b5)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x4,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs1 == rs2 == rd, rs1==x25, rs2==x25, rd==x25,fs1 == 0 and fe1 == 0x1c and fm1 == 0x04c and fs2 == 0 and fe2 == 0x1c and fm2 == 0x04c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x25; op2:x25; dest:x25; op1val:0x704c; op2val:0x704c;
   valaddr_reg:x4; val_offset:0*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2*/
TEST_FPRR_OP(fsub.h, x25, x25, x25, dyn, 0, 0, x4, 0*FLEN/8, x5, x1, x2)

inst_1:
// rs2 == rd != rs1, rs1==x11, rs2==x28, rd==x28,fs1 == 0 and fe1 == 0x1c and fm1 == 0x04c and fs2 == 0 and fe2 == 0x1c and fm2 == 0x04c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x11; op2:x28; dest:x28; op1val:0x704c; op2val:0x704c;
   valaddr_reg:x4; val_offset:2*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2*/
TEST_FPRR_OP(fsub.h, x28, x11, x28, dyn, 32, 0, x4, 2*FLEN/8, x5, x1, x2)

inst_2:
// rs1 == rd != rs2, rs1==x0, rs2==x21, rd==x0,fs1 == 0 and fe1 == 0x1c and fm1 == 0x04c and fs2 == 0 and fe2 == 0x1c and fm2 == 0x04c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x0; op2:x21; dest:x0; op1val:0x0; op2val:0x704c;
   valaddr_reg:x4; val_offset:4*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2*/
TEST_FPRR_OP(fsub.h, x0, x0, x21, dyn, 64, 0, x4, 4*FLEN/8, x5, x1, x2)

inst_3:
// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x13, rs2==x15, rd==x20,fs1 == 0 and fe1 == 0x1c and fm1 == 0x04c and fs2 == 0 and fe2 == 0x1c and fm2 == 0x04c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x13; op2:x15; dest:x20; op1val:0x704c; op2val:0x704c;
   valaddr_reg:x4; val_offset:6*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2*/
TEST_FPRR_OP(fsub.h, x20, x13, x15, dyn, 96, 0, x4, 6*FLEN/8, x5, x1, x2)

inst_4:
// rs1 == rs2 != rd, rs1==x3, rs2==x3, rd==x13,fs1 == 0 and fe1 == 0x1c and fm1 == 0x04c and fs2 == 0 and fe2 == 0x1c and fm2 == 0x04c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x3; op2:x3; dest:x13; op1val:0x704c; op2val:0x704c;
   valaddr_reg:x4; val_offset:8*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2*/
TEST_FPRR_OP(fsub.h, x13, x3, x3, dyn, 128, 0, x4, 8*FLEN/8, x5, x1, x2)

inst_5:
// rs1==x23, rs2==x10, rd==x19,fs1 == 0 and fe1 == 0x1e and fm1 == 0x21b and fs2 == 0 and fe2 == 0x1e and fm2 == 0x21b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x23; op2:x10; dest:x19; op1val:0x7a1b; op2val:0x7a1b;
   valaddr_reg:x4; val_offset:10*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2*/
TEST_FPRR_OP(fsub.h, x19, x23, x10, dyn, 0, 0, x4, 10*FLEN/8, x5, x1, x2)

inst_6:
// rs1==x19, rs2==x11, rd==x23,fs1 == 0 and fe1 == 0x1e and fm1 == 0x21b and fs2 == 0 and fe2 == 0x1e and fm2 == 0x21b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x19; op2:x11; dest:x23; op1val:0x7a1b; op2val:0x7a1b;
   valaddr_reg:x4; val_offset:12*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2*/
TEST_FPRR_OP(fsub.h, x23, x19, x11, dyn, 32, 0, x4, 12*FLEN/8, x5, x1, x2)

inst_7:
// rs1==x12, rs2==x14, rd==x15,fs1 == 0 and fe1 == 0x1e and fm1 == 0x21b and fs2 == 0 and fe2 == 0x1e and fm2 == 0x21b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x12; op2:x14; dest:x15; op1val:0x7a1b; op2val:0x7a1b;
   valaddr_reg:x4; val_offset:14*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2*/
TEST_FPRR_OP(fsub.h, x15, x12, x14, dyn, 64, 0, x4, 14*FLEN/8, x5, x1, x2)

inst_8:
// rs1==x10, rs2==x23, rd==x6,fs1 == 0 and fe1 == 0x1e and fm1 == 0x21b and fs2 == 0 and fe2 == 0x1e and fm2 == 0x21b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x10; op2:x23; dest:x6; op1val:0x7a1b; op2val:0x7a1b;
   valaddr_reg:x4; val_offset:16*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2*/
TEST_FPRR_OP(fsub.h, x6, x10, x23, dyn, 96, 0, x4, 16*FLEN/8, x5, x1, x2)

inst_9:
// rs1==x20, rs2==x13, rd==x27,fs1 == 0 and fe1 == 0x1e and fm1 == 0x21b and fs2 == 0 and fe2 == 0x1e and fm2 == 0x21b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x20; op2:x13; dest:x27; op1val:0x7a1b; op2val:0x7a1b;
   valaddr_reg:x4; val_offset:18*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2*/
TEST_FPRR_OP(fsub.h, x27, x20, x13, dyn, 128, 0, x4, 18*FLEN/8, x5, x1, x2)

inst_10:
// rs1==x14, rs2==x7, rd==x9,fs1 == 0 and fe1 == 0x1d and fm1 == 0x3ec and fs2 == 0 and fe2 == 0x1d and fm2 == 0x3ec and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x14; op2:x7; dest:x9; op1val:0x77ec; op2val:0x77ec;
   valaddr_reg:x4; val_offset:20*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2*/
TEST_FPRR_OP(fsub.h, x9, x14, x7, dyn, 0, 0, x4, 20*FLEN/8, x5, x1, x2)

inst_11:
// rs1==x17, rs2==x16, rd==x18,fs1 == 0 and fe1 == 0x1d and fm1 == 0x3ec and fs2 == 0 and fe2 == 0x1d and fm2 == 0x3ec and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x17; op2:x16; dest:x18; op1val:0x77ec; op2val:0x77ec;
   valaddr_reg:x4; val_offset:22*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2*/
TEST_FPRR_OP(fsub.h, x18, x17, x16, dyn, 32, 0, x4, 22*FLEN/8, x5, x1, x2)

inst_12:
// rs1==x29, rs2==x8, rd==x14,fs1 == 0 and fe1 == 0x1d and fm1 == 0x3ec and fs2 == 0 and fe2 == 0x1d and fm2 == 0x3ec and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x29; op2:x8; dest:x14; op1val:0x77ec; op2val:0x77ec;
   valaddr_reg:x4; val_offset:24*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2*/
TEST_FPRR_OP(fsub.h, x14, x29, x8, dyn, 64, 0, x4, 24*FLEN/8, x5, x1, x2)

inst_13:
// rs1==x24, rs2==x26, rd==x12,fs1 == 0 and fe1 == 0x1d and fm1 == 0x3ec and fs2 == 0 and fe2 == 0x1d and fm2 == 0x3ec and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x24; op2:x26; dest:x12; op1val:0x77ec; op2val:0x77ec;
   valaddr_reg:x4; val_offset:26*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2*/
TEST_FPRR_OP(fsub.h, x12, x24, x26, dyn, 96, 0, x4, 26*FLEN/8, x5, x1, x2)
RVTEST_VALBASEUPD(x11,test_dataset_1)

inst_14:
// rs1==x28, rs2==x20, rd==x7,fs1 == 0 and fe1 == 0x1d and fm1 == 0x3ec and fs2 == 0 and fe2 == 0x1d and fm2 == 0x3ec and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x28; op2:x20; dest:x7; op1val:0x77ec; op2val:0x77ec;
   valaddr_reg:x11; val_offset:0*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2*/
TEST_FPRR_OP(fsub.h, x7, x28, x20, dyn, 128, 0, x11, 0*FLEN/8, x12, x1, x2)

inst_15:
// rs1==x9, rs2==x29, rd==x4,fs1 == 0 and fe1 == 0x1e and fm1 == 0x135 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x135 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x9; op2:x29; dest:x4; op1val:0x7935; op2val:0x7935;
   valaddr_reg:x11; val_offset:2*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2*/
TEST_FPRR_OP(fsub.h, x4, x9, x29, dyn, 0, 0, x11, 2*FLEN/8, x12, x1, x2)

inst_16:
// rs1==x31, rs2==x0, rd==x5,fs1 == 0 and fe1 == 0x1e and fm1 == 0x135 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x135 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x31; op2:x0; dest:x5; op1val:0x7935; op2val:0x0;
   valaddr_reg:x11; val_offset:4*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x14*/
TEST_FPRR_OP(fsub.h, x5, x31, x0, dyn, 32, 0, x11, 4*FLEN/8, x12, x1, x14)
RVTEST_SIGBASE(x13,signature_x13_0)

inst_17:
// rs1==x26, rs2==x30, rd==x10,fs1 == 0 and fe1 == 0x1e and fm1 == 0x135 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x135 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x26; op2:x30; dest:x10; op1val:0x7935; op2val:0x7935;
   valaddr_reg:x11; val_offset:6*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x14*/
TEST_FPRR_OP(fsub.h, x10, x26, x30, dyn, 64, 0, x11, 6*FLEN/8, x12, x13, x14)

inst_18:
// rs1==x5, rs2==x9, rd==x30,fs1 == 0 and fe1 == 0x1e and fm1 == 0x135 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x135 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x5; op2:x9; dest:x30; op1val:0x7935; op2val:0x7935;
   valaddr_reg:x11; val_offset:8*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x14*/
TEST_FPRR_OP(fsub.h, x30, x5, x9, dyn, 96, 0, x11, 8*FLEN/8, x12, x13, x14)

inst_19:
// rs1==x4, rs2==x1, rd==x8,fs1 == 0 and fe1 == 0x1e and fm1 == 0x135 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x135 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x4; op2:x1; dest:x8; op1val:0x7935; op2val:0x7935;
   valaddr_reg:x11; val_offset:10*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x14*/
TEST_FPRR_OP(fsub.h, x8, x4, x1, dyn, 128, 0, x11, 10*FLEN/8, x12, x13, x14)

inst_20:
// rs1==x15, rs2==x24, rd==x3,fs1 == 0 and fe1 == 0x1b and fm1 == 0x201 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x201 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x15; op2:x24; dest:x3; op1val:0x6e01; op2val:0x6e01;
   valaddr_reg:x11; val_offset:12*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x14*/
TEST_FPRR_OP(fsub.h, x3, x15, x24, dyn, 0, 0, x11, 12*FLEN/8, x12, x13, x14)

inst_21:
// rs1==x8, rs2==x2, rd==x16,fs1 == 0 and fe1 == 0x1b and fm1 == 0x201 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x201 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x8; op2:x2; dest:x16; op1val:0x6e01; op2val:0x6e01;
   valaddr_reg:x11; val_offset:14*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x14*/
TEST_FPRR_OP(fsub.h, x16, x8, x2, dyn, 32, 0, x11, 14*FLEN/8, x12, x13, x14)

inst_22:
// rs1==x2, rs2==x6, rd==x21,fs1 == 0 and fe1 == 0x1b and fm1 == 0x201 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x201 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x2; op2:x6; dest:x21; op1val:0x6e01; op2val:0x6e01;
   valaddr_reg:x11; val_offset:16*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x14*/
TEST_FPRR_OP(fsub.h, x21, x2, x6, dyn, 64, 0, x11, 16*FLEN/8, x12, x13, x14)

inst_23:
// rs1==x6, rs2==x19, rd==x17,fs1 == 0 and fe1 == 0x1b and fm1 == 0x201 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x201 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x6; op2:x19; dest:x17; op1val:0x6e01; op2val:0x6e01;
   valaddr_reg:x11; val_offset:18*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x14*/
TEST_FPRR_OP(fsub.h, x17, x6, x19, dyn, 96, 0, x11, 18*FLEN/8, x12, x13, x14)

inst_24:
// rs1==x7, rs2==x27, rd==x22,fs1 == 0 and fe1 == 0x1b and fm1 == 0x201 and fs2 == 0 and fe2 == 0x1b and fm2 == 0x201 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x7; op2:x27; dest:x22; op1val:0x6e01; op2val:0x6e01;
   valaddr_reg:x11; val_offset:20*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x14*/
TEST_FPRR_OP(fsub.h, x22, x7, x27, dyn, 128, 0, x11, 20*FLEN/8, x12, x13, x14)
RVTEST_VALBASEUPD(x3,test_dataset_2)

inst_25:
// rs1==x1, rs2==x17, rd==x31,fs1 == 0 and fe1 == 0x1e and fm1 == 0x2ae and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2ae and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x1; op2:x17; dest:x31; op1val:0x7aae; op2val:0x7aae;
   valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x14*/
TEST_FPRR_OP(fsub.h, x31, x1, x17, dyn, 0, 0, x3, 0*FLEN/8, x6, x13, x14)

inst_26:
// rs1==x21, rs2==x4, rd==x26,fs1 == 0 and fe1 == 0x1e and fm1 == 0x2ae and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2ae and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x21; op2:x4; dest:x26; op1val:0x7aae; op2val:0x7aae;
   valaddr_reg:x3; val_offset:2*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x14*/
TEST_FPRR_OP(fsub.h, x26, x21, x4, dyn, 32, 0, x3, 2*FLEN/8, x6, x13, x14)

inst_27:
// rs1==x16, rs2==x22, rd==x29,fs1 == 0 and fe1 == 0x1e and fm1 == 0x2ae and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2ae and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x16; op2:x22; dest:x29; op1val:0x7aae; op2val:0x7aae;
   valaddr_reg:x3; val_offset:4*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x14*/
TEST_FPRR_OP(fsub.h, x29, x16, x22, dyn, 64, 0, x3, 4*FLEN/8, x6, x13, x14)

inst_28:
// rs1==x30, rs2==x18, rd==x2,fs1 == 0 and fe1 == 0x1e and fm1 == 0x2ae and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2ae and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x18; dest:x2; op1val:0x7aae; op2val:0x7aae;
   valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x14*/
TEST_FPRR_OP(fsub.h, x2, x30, x18, dyn, 96, 0, x3, 6*FLEN/8, x6, x13, x14)

inst_29:
// rs1==x22, rs2==x5, rd==x24,fs1 == 0 and fe1 == 0x1e and fm1 == 0x2ae and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2ae and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x22; op2:x5; dest:x24; op1val:0x7aae; op2val:0x7aae;
   valaddr_reg:x3; val_offset:8*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x14*/
TEST_FPRR_OP(fsub.h, x24, x22, x5, dyn, 128, 0, x3, 8*FLEN/8, x6, x13, x14)

inst_30:
// rs1==x27, rs2==x31, rd==x11,fs1 == 0 and fe1 == 0x1e and fm1 == 0x218 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x218 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x27; op2:x31; dest:x11; op1val:0x7a18; op2val:0x7a18;
   valaddr_reg:x3; val_offset:10*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x14*/
TEST_FPRR_OP(fsub.h, x11, x27, x31, dyn, 0, 0, x3, 10*FLEN/8, x6, x13, x14)

inst_31:
// rs1==x18, rs2==x12, rd==x1,fs1 == 0 and fe1 == 0x1e and fm1 == 0x218 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x218 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x18; op2:x12; dest:x1; op1val:0x7a18; op2val:0x7a18;
   valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x14*/
TEST_FPRR_OP(fsub.h, x1, x18, x12, dyn, 32, 0, x3, 12*FLEN/8, x6, x13, x14)

inst_32:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x218 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x218 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a18; op2val:0x7a18;
   valaddr_reg:x3; val_offset:14*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 14*FLEN/8, x6, x13, x1)

inst_33:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x218 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x218 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a18; op2val:0x7a18;
   valaddr_reg:x3; val_offset:16*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 16*FLEN/8, x6, x13, x1)

inst_34:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x218 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x218 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a18; op2val:0x7a18;
   valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 18*FLEN/8, x6, x13, x1)

inst_35:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x31f and fs2 == 0 and fe2 == 0x1d and fm2 == 0x31f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x771f; op2val:0x771f;
   valaddr_reg:x3; val_offset:20*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 20*FLEN/8, x6, x13, x1)

inst_36:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x31f and fs2 == 0 and fe2 == 0x1d and fm2 == 0x31f and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x771f; op2val:0x771f;
   valaddr_reg:x3; val_offset:22*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 22*FLEN/8, x6, x13, x1)

inst_37:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x31f and fs2 == 0 and fe2 == 0x1d and fm2 == 0x31f and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x771f; op2val:0x771f;
   valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 24*FLEN/8, x6, x13, x1)

inst_38:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x31f and fs2 == 0 and fe2 == 0x1d and fm2 == 0x31f and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x771f; op2val:0x771f;
   valaddr_reg:x3; val_offset:26*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 26*FLEN/8, x6, x13, x1)

inst_39:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x31f and fs2 == 0 and fe2 == 0x1d and fm2 == 0x31f and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x771f; op2val:0x771f;
   valaddr_reg:x3; val_offset:28*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 28*FLEN/8, x6, x13, x1)

inst_40:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x351 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x351 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7351; op2val:0x7351;
   valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 30*FLEN/8, x6, x13, x1)

inst_41:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x351 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x351 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7351; op2val:0x7351;
   valaddr_reg:x3; val_offset:32*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 32*FLEN/8, x6, x13, x1)

inst_42:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x351 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x351 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7351; op2val:0x7351;
   valaddr_reg:x3; val_offset:34*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 34*FLEN/8, x6, x13, x1)

inst_43:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x351 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x351 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7351; op2val:0x7351;
   valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 36*FLEN/8, x6, x13, x1)

inst_44:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x351 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x351 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7351; op2val:0x7351;
   valaddr_reg:x3; val_offset:38*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 38*FLEN/8, x6, x13, x1)

inst_45:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x335 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x335 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b35; op2val:0x7b35;
   valaddr_reg:x3; val_offset:40*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 40*FLEN/8, x6, x13, x1)

inst_46:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x335 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x335 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b35; op2val:0x7b35;
   valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 42*FLEN/8, x6, x13, x1)

inst_47:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x335 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x335 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b35; op2val:0x7b35;
   valaddr_reg:x3; val_offset:44*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 44*FLEN/8, x6, x13, x1)

inst_48:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x335 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x335 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b35; op2val:0x7b35;
   valaddr_reg:x3; val_offset:46*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 46*FLEN/8, x6, x13, x1)

inst_49:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x335 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x335 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b35; op2val:0x7b35;
   valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 48*FLEN/8, x6, x13, x1)

inst_50:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x283 and fs2 == 0 and fe2 == 0x19 and fm2 == 0x283 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6683; op2val:0x6683;
   valaddr_reg:x3; val_offset:50*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 50*FLEN/8, x6, x13, x1)

inst_51:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x283 and fs2 == 0 and fe2 == 0x19 and fm2 == 0x283 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6683; op2val:0x6683;
   valaddr_reg:x3; val_offset:52*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 52*FLEN/8, x6, x13, x1)

inst_52:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x283 and fs2 == 0 and fe2 == 0x19 and fm2 == 0x283 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6683; op2val:0x6683;
   valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 54*FLEN/8, x6, x13, x1)

inst_53:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x283 and fs2 == 0 and fe2 == 0x19 and fm2 == 0x283 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6683; op2val:0x6683;
   valaddr_reg:x3; val_offset:56*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 56*FLEN/8, x6, x13, x1)

inst_54:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x283 and fs2 == 0 and fe2 == 0x19 and fm2 == 0x283 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6683; op2val:0x6683;
   valaddr_reg:x3; val_offset:58*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 58*FLEN/8, x6, x13, x1)

inst_55:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x382 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x382 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b82; op2val:0x7b82;
   valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 60*FLEN/8, x6, x13, x1)

inst_56:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x382 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x382 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b82; op2val:0x7b82;
   valaddr_reg:x3; val_offset:62*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 62*FLEN/8, x6, x13, x1)

inst_57:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x382 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x382 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b82; op2val:0x7b82;
   valaddr_reg:x3; val_offset:64*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 64*FLEN/8, x6, x13, x1)

inst_58:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x382 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x382 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b82; op2val:0x7b82;
   valaddr_reg:x3; val_offset:66*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 66*FLEN/8, x6, x13, x1)

inst_59:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x382 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x382 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b82; op2val:0x7b82;
   valaddr_reg:x3; val_offset:68*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 68*FLEN/8, x6, x13, x1)

inst_60:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x2ed and fs2 == 0 and fe2 == 0x1c and fm2 == 0x2ed and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x72ed; op2val:0x72ed;
   valaddr_reg:x3; val_offset:70*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 70*FLEN/8, x6, x13, x1)

inst_61:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x2ed and fs2 == 0 and fe2 == 0x1c and fm2 == 0x2ed and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x72ed; op2val:0x72ed;
   valaddr_reg:x3; val_offset:72*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 72*FLEN/8, x6, x13, x1)

inst_62:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x2ed and fs2 == 0 and fe2 == 0x1c and fm2 == 0x2ed and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x72ed; op2val:0x72ed;
   valaddr_reg:x3; val_offset:74*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 74*FLEN/8, x6, x13, x1)

inst_63:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x2ed and fs2 == 0 and fe2 == 0x1c and fm2 == 0x2ed and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x72ed; op2val:0x72ed;
   valaddr_reg:x3; val_offset:76*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 76*FLEN/8, x6, x13, x1)

inst_64:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x2ed and fs2 == 0 and fe2 == 0x1c and fm2 == 0x2ed and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x72ed; op2val:0x72ed;
   valaddr_reg:x3; val_offset:78*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 78*FLEN/8, x6, x13, x1)

inst_65:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x36f and fs2 == 0 and fe2 == 0x19 and fm2 == 0x36f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x676f; op2val:0x676f;
   valaddr_reg:x3; val_offset:80*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 80*FLEN/8, x6, x13, x1)

inst_66:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x36f and fs2 == 0 and fe2 == 0x19 and fm2 == 0x36f and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x676f; op2val:0x676f;
   valaddr_reg:x3; val_offset:82*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 82*FLEN/8, x6, x13, x1)

inst_67:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x36f and fs2 == 0 and fe2 == 0x19 and fm2 == 0x36f and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x676f; op2val:0x676f;
   valaddr_reg:x3; val_offset:84*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 84*FLEN/8, x6, x13, x1)

inst_68:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x36f and fs2 == 0 and fe2 == 0x19 and fm2 == 0x36f and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x676f; op2val:0x676f;
   valaddr_reg:x3; val_offset:86*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 86*FLEN/8, x6, x13, x1)

inst_69:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x36f and fs2 == 0 and fe2 == 0x19 and fm2 == 0x36f and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x676f; op2val:0x676f;
   valaddr_reg:x3; val_offset:88*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 88*FLEN/8, x6, x13, x1)

inst_70:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x300 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x300 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7700; op2val:0x7700;
   valaddr_reg:x3; val_offset:90*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 90*FLEN/8, x6, x13, x1)

inst_71:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x300 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x300 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7700; op2val:0x7700;
   valaddr_reg:x3; val_offset:92*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 92*FLEN/8, x6, x13, x1)

inst_72:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x300 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x300 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7700; op2val:0x7700;
   valaddr_reg:x3; val_offset:94*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 94*FLEN/8, x6, x13, x1)

inst_73:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x300 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x300 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7700; op2val:0x7700;
   valaddr_reg:x3; val_offset:96*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 96*FLEN/8, x6, x13, x1)

inst_74:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x300 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x300 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7700; op2val:0x7700;
   valaddr_reg:x3; val_offset:98*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 98*FLEN/8, x6, x13, x1)

inst_75:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x374 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x374 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7374; op2val:0x7374;
   valaddr_reg:x3; val_offset:100*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 100*FLEN/8, x6, x13, x1)

inst_76:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x374 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x374 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7374; op2val:0x7374;
   valaddr_reg:x3; val_offset:102*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 102*FLEN/8, x6, x13, x1)

inst_77:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x374 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x374 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7374; op2val:0x7374;
   valaddr_reg:x3; val_offset:104*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 104*FLEN/8, x6, x13, x1)

inst_78:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x374 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x374 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7374; op2val:0x7374;
   valaddr_reg:x3; val_offset:106*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 106*FLEN/8, x6, x13, x1)

inst_79:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x374 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x374 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7374; op2val:0x7374;
   valaddr_reg:x3; val_offset:108*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 108*FLEN/8, x6, x13, x1)

inst_80:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x2ff and fs2 == 0 and fe2 == 0x1c and fm2 == 0x2ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x72ff; op2val:0x72ff;
   valaddr_reg:x3; val_offset:110*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 110*FLEN/8, x6, x13, x1)

inst_81:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x2ff and fs2 == 0 and fe2 == 0x1c and fm2 == 0x2ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x72ff; op2val:0x72ff;
   valaddr_reg:x3; val_offset:112*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 112*FLEN/8, x6, x13, x1)

inst_82:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x2ff and fs2 == 0 and fe2 == 0x1c and fm2 == 0x2ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x72ff; op2val:0x72ff;
   valaddr_reg:x3; val_offset:114*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 114*FLEN/8, x6, x13, x1)

inst_83:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x2ff and fs2 == 0 and fe2 == 0x1c and fm2 == 0x2ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x72ff; op2val:0x72ff;
   valaddr_reg:x3; val_offset:116*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 116*FLEN/8, x6, x13, x1)

inst_84:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x2ff and fs2 == 0 and fe2 == 0x1c and fm2 == 0x2ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x72ff; op2val:0x72ff;
   valaddr_reg:x3; val_offset:118*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 118*FLEN/8, x6, x13, x1)

inst_85:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0a2 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x0a2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x74a2; op2val:0x74a2;
   valaddr_reg:x3; val_offset:120*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 120*FLEN/8, x6, x13, x1)

inst_86:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0a2 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x0a2 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x74a2; op2val:0x74a2;
   valaddr_reg:x3; val_offset:122*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 122*FLEN/8, x6, x13, x1)

inst_87:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0a2 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x0a2 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x74a2; op2val:0x74a2;
   valaddr_reg:x3; val_offset:124*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 124*FLEN/8, x6, x13, x1)

inst_88:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0a2 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x0a2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x74a2; op2val:0x74a2;
   valaddr_reg:x3; val_offset:126*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 126*FLEN/8, x6, x13, x1)

inst_89:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0a2 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x0a2 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x74a2; op2val:0x74a2;
   valaddr_reg:x3; val_offset:128*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 128*FLEN/8, x6, x13, x1)

inst_90:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2b2 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2b2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ab2; op2val:0x7ab2;
   valaddr_reg:x3; val_offset:130*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 130*FLEN/8, x6, x13, x1)

inst_91:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2b2 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2b2 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ab2; op2val:0x7ab2;
   valaddr_reg:x3; val_offset:132*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 132*FLEN/8, x6, x13, x1)

inst_92:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2b2 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2b2 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ab2; op2val:0x7ab2;
   valaddr_reg:x3; val_offset:134*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 134*FLEN/8, x6, x13, x1)

inst_93:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2b2 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2b2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ab2; op2val:0x7ab2;
   valaddr_reg:x3; val_offset:136*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 136*FLEN/8, x6, x13, x1)

inst_94:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2b2 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2b2 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ab2; op2val:0x7ab2;
   valaddr_reg:x3; val_offset:138*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 138*FLEN/8, x6, x13, x1)

inst_95:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x122 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x122 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7922; op2val:0x7922;
   valaddr_reg:x3; val_offset:140*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 140*FLEN/8, x6, x13, x1)

inst_96:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x122 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x122 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7922; op2val:0x7922;
   valaddr_reg:x3; val_offset:142*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 142*FLEN/8, x6, x13, x1)

inst_97:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x122 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x122 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7922; op2val:0x7922;
   valaddr_reg:x3; val_offset:144*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 144*FLEN/8, x6, x13, x1)

inst_98:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x122 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x122 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7922; op2val:0x7922;
   valaddr_reg:x3; val_offset:146*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 146*FLEN/8, x6, x13, x1)

inst_99:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x122 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x122 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7922; op2val:0x7922;
   valaddr_reg:x3; val_offset:148*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 148*FLEN/8, x6, x13, x1)

inst_100:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ef and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ef and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bef; op2val:0x7bef;
   valaddr_reg:x3; val_offset:150*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 150*FLEN/8, x6, x13, x1)

inst_101:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ef and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ef and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bef; op2val:0x7bef;
   valaddr_reg:x3; val_offset:152*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 152*FLEN/8, x6, x13, x1)

inst_102:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ef and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ef and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bef; op2val:0x7bef;
   valaddr_reg:x3; val_offset:154*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 154*FLEN/8, x6, x13, x1)

inst_103:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ef and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ef and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bef; op2val:0x7bef;
   valaddr_reg:x3; val_offset:156*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 156*FLEN/8, x6, x13, x1)

inst_104:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ef and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ef and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bef; op2val:0x7bef;
   valaddr_reg:x3; val_offset:158*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 158*FLEN/8, x6, x13, x1)

inst_105:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x3bb and fs2 == 0 and fe2 == 0x1b and fm2 == 0x3bb and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6fbb; op2val:0x6fbb;
   valaddr_reg:x3; val_offset:160*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 160*FLEN/8, x6, x13, x1)

inst_106:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x3bb and fs2 == 0 and fe2 == 0x1b and fm2 == 0x3bb and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6fbb; op2val:0x6fbb;
   valaddr_reg:x3; val_offset:162*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 162*FLEN/8, x6, x13, x1)

inst_107:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x3bb and fs2 == 0 and fe2 == 0x1b and fm2 == 0x3bb and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6fbb; op2val:0x6fbb;
   valaddr_reg:x3; val_offset:164*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 164*FLEN/8, x6, x13, x1)

inst_108:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x3bb and fs2 == 0 and fe2 == 0x1b and fm2 == 0x3bb and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6fbb; op2val:0x6fbb;
   valaddr_reg:x3; val_offset:166*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 166*FLEN/8, x6, x13, x1)

inst_109:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x3bb and fs2 == 0 and fe2 == 0x1b and fm2 == 0x3bb and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6fbb; op2val:0x6fbb;
   valaddr_reg:x3; val_offset:168*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 168*FLEN/8, x6, x13, x1)

inst_110:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1c4 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1c4 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x79c4; op2val:0x79c4;
   valaddr_reg:x3; val_offset:170*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 170*FLEN/8, x6, x13, x1)

inst_111:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1c4 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1c4 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x79c4; op2val:0x79c4;
   valaddr_reg:x3; val_offset:172*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 172*FLEN/8, x6, x13, x1)

inst_112:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1c4 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1c4 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x79c4; op2val:0x79c4;
   valaddr_reg:x3; val_offset:174*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 174*FLEN/8, x6, x13, x1)

inst_113:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1c4 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1c4 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x79c4; op2val:0x79c4;
   valaddr_reg:x3; val_offset:176*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 176*FLEN/8, x6, x13, x1)

inst_114:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1c4 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x1c4 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x79c4; op2val:0x79c4;
   valaddr_reg:x3; val_offset:178*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 178*FLEN/8, x6, x13, x1)

inst_115:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x37c and fs2 == 0 and fe2 == 0x1e and fm2 == 0x37c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b7c; op2val:0x7b7c;
   valaddr_reg:x3; val_offset:180*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 180*FLEN/8, x6, x13, x1)

inst_116:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x37c and fs2 == 0 and fe2 == 0x1e and fm2 == 0x37c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b7c; op2val:0x7b7c;
   valaddr_reg:x3; val_offset:182*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 182*FLEN/8, x6, x13, x1)

inst_117:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x37c and fs2 == 0 and fe2 == 0x1e and fm2 == 0x37c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b7c; op2val:0x7b7c;
   valaddr_reg:x3; val_offset:184*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 184*FLEN/8, x6, x13, x1)

inst_118:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x37c and fs2 == 0 and fe2 == 0x1e and fm2 == 0x37c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b7c; op2val:0x7b7c;
   valaddr_reg:x3; val_offset:186*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 186*FLEN/8, x6, x13, x1)

inst_119:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x37c and fs2 == 0 and fe2 == 0x1e and fm2 == 0x37c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b7c; op2val:0x7b7c;
   valaddr_reg:x3; val_offset:188*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 188*FLEN/8, x6, x13, x1)

inst_120:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2a3 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2a3 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7aa3; op2val:0x7aa3;
   valaddr_reg:x3; val_offset:190*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 190*FLEN/8, x6, x13, x1)

inst_121:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2a3 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2a3 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7aa3; op2val:0x7aa3;
   valaddr_reg:x3; val_offset:192*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 192*FLEN/8, x6, x13, x1)

inst_122:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2a3 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2a3 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7aa3; op2val:0x7aa3;
   valaddr_reg:x3; val_offset:194*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 194*FLEN/8, x6, x13, x1)

inst_123:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2a3 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2a3 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7aa3; op2val:0x7aa3;
   valaddr_reg:x3; val_offset:196*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 196*FLEN/8, x6, x13, x1)

inst_124:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2a3 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2a3 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7aa3; op2val:0x7aa3;
   valaddr_reg:x3; val_offset:198*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 198*FLEN/8, x6, x13, x1)

inst_125:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0da and fs2 == 0 and fe2 == 0x1d and fm2 == 0x0da and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x74da; op2val:0x74da;
   valaddr_reg:x3; val_offset:200*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 200*FLEN/8, x6, x13, x1)

inst_126:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0da and fs2 == 0 and fe2 == 0x1d and fm2 == 0x0da and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x74da; op2val:0x74da;
   valaddr_reg:x3; val_offset:202*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 202*FLEN/8, x6, x13, x1)

inst_127:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0da and fs2 == 0 and fe2 == 0x1d and fm2 == 0x0da and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x74da; op2val:0x74da;
   valaddr_reg:x3; val_offset:204*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 204*FLEN/8, x6, x13, x1)

inst_128:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0da and fs2 == 0 and fe2 == 0x1d and fm2 == 0x0da and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x74da; op2val:0x74da;
   valaddr_reg:x3; val_offset:206*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 206*FLEN/8, x6, x13, x1)

inst_129:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x0da and fs2 == 0 and fe2 == 0x1d and fm2 == 0x0da and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x74da; op2val:0x74da;
   valaddr_reg:x3; val_offset:208*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 208*FLEN/8, x6, x13, x1)

inst_130:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x30e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x30e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b0e; op2val:0x7b0e;
   valaddr_reg:x3; val_offset:210*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 210*FLEN/8, x6, x13, x1)

inst_131:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x30e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x30e and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b0e; op2val:0x7b0e;
   valaddr_reg:x3; val_offset:212*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 212*FLEN/8, x6, x13, x1)

inst_132:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x30e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x30e and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b0e; op2val:0x7b0e;
   valaddr_reg:x3; val_offset:214*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 214*FLEN/8, x6, x13, x1)

inst_133:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x30e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x30e and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b0e; op2val:0x7b0e;
   valaddr_reg:x3; val_offset:216*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 216*FLEN/8, x6, x13, x1)

inst_134:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x30e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x30e and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7b0e; op2val:0x7b0e;
   valaddr_reg:x3; val_offset:218*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 218*FLEN/8, x6, x13, x1)

inst_135:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x00a and fs2 == 0 and fe2 == 0x1e and fm2 == 0x00a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x780a; op2val:0x780a;
   valaddr_reg:x3; val_offset:220*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 220*FLEN/8, x6, x13, x1)

inst_136:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x00a and fs2 == 0 and fe2 == 0x1e and fm2 == 0x00a and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x780a; op2val:0x780a;
   valaddr_reg:x3; val_offset:222*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 222*FLEN/8, x6, x13, x1)

inst_137:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x00a and fs2 == 0 and fe2 == 0x1e and fm2 == 0x00a and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x780a; op2val:0x780a;
   valaddr_reg:x3; val_offset:224*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 224*FLEN/8, x6, x13, x1)

inst_138:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x00a and fs2 == 0 and fe2 == 0x1e and fm2 == 0x00a and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x780a; op2val:0x780a;
   valaddr_reg:x3; val_offset:226*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 226*FLEN/8, x6, x13, x1)

inst_139:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x00a and fs2 == 0 and fe2 == 0x1e and fm2 == 0x00a and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x780a; op2val:0x780a;
   valaddr_reg:x3; val_offset:228*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 228*FLEN/8, x6, x13, x1)

inst_140:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x06b and fs2 == 0 and fe2 == 0x1a and fm2 == 0x06b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x686b; op2val:0x686b;
   valaddr_reg:x3; val_offset:230*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 230*FLEN/8, x6, x13, x1)

inst_141:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x06b and fs2 == 0 and fe2 == 0x1a and fm2 == 0x06b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x686b; op2val:0x686b;
   valaddr_reg:x3; val_offset:232*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 232*FLEN/8, x6, x13, x1)

inst_142:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x06b and fs2 == 0 and fe2 == 0x1a and fm2 == 0x06b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x686b; op2val:0x686b;
   valaddr_reg:x3; val_offset:234*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 234*FLEN/8, x6, x13, x1)

inst_143:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x06b and fs2 == 0 and fe2 == 0x1a and fm2 == 0x06b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x686b; op2val:0x686b;
   valaddr_reg:x3; val_offset:236*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 236*FLEN/8, x6, x13, x1)

inst_144:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x06b and fs2 == 0 and fe2 == 0x1a and fm2 == 0x06b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x686b; op2val:0x686b;
   valaddr_reg:x3; val_offset:238*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 238*FLEN/8, x6, x13, x1)
RVTEST_SIGBASE(x13,signature_x13_1)

inst_145:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x260 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x260 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a60; op2val:0x7a60;
   valaddr_reg:x3; val_offset:240*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 240*FLEN/8, x6, x13, x1)

inst_146:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x260 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x260 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a60; op2val:0x7a60;
   valaddr_reg:x3; val_offset:242*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 242*FLEN/8, x6, x13, x1)

inst_147:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x260 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x260 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a60; op2val:0x7a60;
   valaddr_reg:x3; val_offset:244*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 244*FLEN/8, x6, x13, x1)

inst_148:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x260 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x260 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a60; op2val:0x7a60;
   valaddr_reg:x3; val_offset:246*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 246*FLEN/8, x6, x13, x1)

inst_149:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x260 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x260 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a60; op2val:0x7a60;
   valaddr_reg:x3; val_offset:248*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 248*FLEN/8, x6, x13, x1)

inst_150:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x188 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x188 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7188; op2val:0x7188;
   valaddr_reg:x3; val_offset:250*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 250*FLEN/8, x6, x13, x1)

inst_151:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x188 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x188 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7188; op2val:0x7188;
   valaddr_reg:x3; val_offset:252*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 252*FLEN/8, x6, x13, x1)

inst_152:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x188 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x188 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7188; op2val:0x7188;
   valaddr_reg:x3; val_offset:254*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 254*FLEN/8, x6, x13, x1)

inst_153:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x188 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x188 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7188; op2val:0x7188;
   valaddr_reg:x3; val_offset:256*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 256*FLEN/8, x6, x13, x1)

inst_154:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x188 and fs2 == 0 and fe2 == 0x1c and fm2 == 0x188 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7188; op2val:0x7188;
   valaddr_reg:x3; val_offset:258*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 258*FLEN/8, x6, x13, x1)

inst_155:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x19f and fs2 == 0 and fe2 == 0x1e and fm2 == 0x19f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x799f; op2val:0x799f;
   valaddr_reg:x3; val_offset:260*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 260*FLEN/8, x6, x13, x1)

inst_156:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x19f and fs2 == 0 and fe2 == 0x1e and fm2 == 0x19f and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x799f; op2val:0x799f;
   valaddr_reg:x3; val_offset:262*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 262*FLEN/8, x6, x13, x1)

inst_157:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x19f and fs2 == 0 and fe2 == 0x1e and fm2 == 0x19f and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x799f; op2val:0x799f;
   valaddr_reg:x3; val_offset:264*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 264*FLEN/8, x6, x13, x1)

inst_158:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x19f and fs2 == 0 and fe2 == 0x1e and fm2 == 0x19f and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x799f; op2val:0x799f;
   valaddr_reg:x3; val_offset:266*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 266*FLEN/8, x6, x13, x1)

inst_159:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x19f and fs2 == 0 and fe2 == 0x1e and fm2 == 0x19f and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x799f; op2val:0x799f;
   valaddr_reg:x3; val_offset:268*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 268*FLEN/8, x6, x13, x1)

inst_160:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1fe and fs2 == 0 and fe2 == 0x1d and fm2 == 0x1fe and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x75fe; op2val:0x75fe;
   valaddr_reg:x3; val_offset:270*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 270*FLEN/8, x6, x13, x1)

inst_161:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1fe and fs2 == 0 and fe2 == 0x1d and fm2 == 0x1fe and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x75fe; op2val:0x75fe;
   valaddr_reg:x3; val_offset:272*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 272*FLEN/8, x6, x13, x1)

inst_162:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1fe and fs2 == 0 and fe2 == 0x1d and fm2 == 0x1fe and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x75fe; op2val:0x75fe;
   valaddr_reg:x3; val_offset:274*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 274*FLEN/8, x6, x13, x1)

inst_163:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1fe and fs2 == 0 and fe2 == 0x1d and fm2 == 0x1fe and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x75fe; op2val:0x75fe;
   valaddr_reg:x3; val_offset:276*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 276*FLEN/8, x6, x13, x1)

inst_164:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1fe and fs2 == 0 and fe2 == 0x1d and fm2 == 0x1fe and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x75fe; op2val:0x75fe;
   valaddr_reg:x3; val_offset:278*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 278*FLEN/8, x6, x13, x1)

inst_165:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x010 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x010 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7810; op2val:0x7810;
   valaddr_reg:x3; val_offset:280*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 280*FLEN/8, x6, x13, x1)

inst_166:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x010 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x010 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7810; op2val:0x7810;
   valaddr_reg:x3; val_offset:282*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 282*FLEN/8, x6, x13, x1)

inst_167:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x010 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x010 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7810; op2val:0x7810;
   valaddr_reg:x3; val_offset:284*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 284*FLEN/8, x6, x13, x1)

inst_168:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x010 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x010 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7810; op2val:0x7810;
   valaddr_reg:x3; val_offset:286*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 286*FLEN/8, x6, x13, x1)

inst_169:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x010 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x010 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7810; op2val:0x7810;
   valaddr_reg:x3; val_offset:288*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 288*FLEN/8, x6, x13, x1)

inst_170:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x02a and fs2 == 0 and fe2 == 0x1e and fm2 == 0x02a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x782a; op2val:0x782a;
   valaddr_reg:x3; val_offset:290*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 290*FLEN/8, x6, x13, x1)

inst_171:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x02a and fs2 == 0 and fe2 == 0x1e and fm2 == 0x02a and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x782a; op2val:0x782a;
   valaddr_reg:x3; val_offset:292*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 292*FLEN/8, x6, x13, x1)

inst_172:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x02a and fs2 == 0 and fe2 == 0x1e and fm2 == 0x02a and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x782a; op2val:0x782a;
   valaddr_reg:x3; val_offset:294*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 294*FLEN/8, x6, x13, x1)

inst_173:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x02a and fs2 == 0 and fe2 == 0x1e and fm2 == 0x02a and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x782a; op2val:0x782a;
   valaddr_reg:x3; val_offset:296*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 296*FLEN/8, x6, x13, x1)

inst_174:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x02a and fs2 == 0 and fe2 == 0x1e and fm2 == 0x02a and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x782a; op2val:0x782a;
   valaddr_reg:x3; val_offset:298*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 298*FLEN/8, x6, x13, x1)

inst_175:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3d4 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x3d4 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x77d4; op2val:0x77d4;
   valaddr_reg:x3; val_offset:300*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 300*FLEN/8, x6, x13, x1)

inst_176:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3d4 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x3d4 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x77d4; op2val:0x77d4;
   valaddr_reg:x3; val_offset:302*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 302*FLEN/8, x6, x13, x1)

inst_177:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3d4 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x3d4 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x77d4; op2val:0x77d4;
   valaddr_reg:x3; val_offset:304*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 304*FLEN/8, x6, x13, x1)

inst_178:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3d4 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x3d4 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x77d4; op2val:0x77d4;
   valaddr_reg:x3; val_offset:306*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 306*FLEN/8, x6, x13, x1)

inst_179:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3d4 and fs2 == 0 and fe2 == 0x1d and fm2 == 0x3d4 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x77d4; op2val:0x77d4;
   valaddr_reg:x3; val_offset:308*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 308*FLEN/8, x6, x13, x1)

inst_180:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x190 and fs2 == 0 and fe2 == 0x1a and fm2 == 0x190 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6990; op2val:0x6990;
   valaddr_reg:x3; val_offset:310*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 310*FLEN/8, x6, x13, x1)

inst_181:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x190 and fs2 == 0 and fe2 == 0x1a and fm2 == 0x190 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6990; op2val:0x6990;
   valaddr_reg:x3; val_offset:312*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 312*FLEN/8, x6, x13, x1)

inst_182:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x190 and fs2 == 0 and fe2 == 0x1a and fm2 == 0x190 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6990; op2val:0x6990;
   valaddr_reg:x3; val_offset:314*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 314*FLEN/8, x6, x13, x1)

inst_183:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x190 and fs2 == 0 and fe2 == 0x1a and fm2 == 0x190 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6990; op2val:0x6990;
   valaddr_reg:x3; val_offset:316*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 316*FLEN/8, x6, x13, x1)

inst_184:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x190 and fs2 == 0 and fe2 == 0x1a and fm2 == 0x190 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x6990; op2val:0x6990;
   valaddr_reg:x3; val_offset:318*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 318*FLEN/8, x6, x13, x1)

inst_185:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3dc and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3dc and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bdc; op2val:0x7bdc;
   valaddr_reg:x3; val_offset:320*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 320*FLEN/8, x6, x13, x1)

inst_186:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3dc and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3dc and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bdc; op2val:0x7bdc;
   valaddr_reg:x3; val_offset:322*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 322*FLEN/8, x6, x13, x1)

inst_187:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3dc and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3dc and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bdc; op2val:0x7bdc;
   valaddr_reg:x3; val_offset:324*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 324*FLEN/8, x6, x13, x1)

inst_188:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3dc and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3dc and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bdc; op2val:0x7bdc;
   valaddr_reg:x3; val_offset:326*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 326*FLEN/8, x6, x13, x1)

inst_189:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3dc and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3dc and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7bdc; op2val:0x7bdc;
   valaddr_reg:x3; val_offset:328*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 328*FLEN/8, x6, x13, x1)

inst_190:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x24b and fs2 == 0 and fe2 == 0x1d and fm2 == 0x24b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x764b; op2val:0x764b;
   valaddr_reg:x3; val_offset:330*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 330*FLEN/8, x6, x13, x1)

inst_191:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x24b and fs2 == 0 and fe2 == 0x1d and fm2 == 0x24b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x764b; op2val:0x764b;
   valaddr_reg:x3; val_offset:332*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 332*FLEN/8, x6, x13, x1)

inst_192:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x24b and fs2 == 0 and fe2 == 0x1d and fm2 == 0x24b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x764b; op2val:0x764b;
   valaddr_reg:x3; val_offset:334*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 334*FLEN/8, x6, x13, x1)

inst_193:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x24b and fs2 == 0 and fe2 == 0x1d and fm2 == 0x24b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x764b; op2val:0x764b;
   valaddr_reg:x3; val_offset:336*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 336*FLEN/8, x6, x13, x1)

inst_194:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x24b and fs2 == 0 and fe2 == 0x1d and fm2 == 0x24b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x764b; op2val:0x764b;
   valaddr_reg:x3; val_offset:338*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 338*FLEN/8, x6, x13, x1)

inst_195:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x004 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x004 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7804; op2val:0x7804;
   valaddr_reg:x3; val_offset:340*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 340*FLEN/8, x6, x13, x1)

inst_196:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x004 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x004 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7804; op2val:0x7804;
   valaddr_reg:x3; val_offset:342*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 342*FLEN/8, x6, x13, x1)

inst_197:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x004 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x004 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7804; op2val:0x7804;
   valaddr_reg:x3; val_offset:344*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 344*FLEN/8, x6, x13, x1)

inst_198:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x004 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x004 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7804; op2val:0x7804;
   valaddr_reg:x3; val_offset:346*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 346*FLEN/8, x6, x13, x1)

inst_199:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x004 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x004 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7804; op2val:0x7804;
   valaddr_reg:x3; val_offset:348*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 348*FLEN/8, x6, x13, x1)

inst_200:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x229 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x229 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a29; op2val:0x7a29;
   valaddr_reg:x3; val_offset:350*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 350*FLEN/8, x6, x13, x1)

inst_201:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x229 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x229 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a29; op2val:0x7a29;
   valaddr_reg:x3; val_offset:352*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 352*FLEN/8, x6, x13, x1)

inst_202:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x229 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x229 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a29; op2val:0x7a29;
   valaddr_reg:x3; val_offset:354*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 354*FLEN/8, x6, x13, x1)

inst_203:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x229 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x229 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a29; op2val:0x7a29;
   valaddr_reg:x3; val_offset:356*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 356*FLEN/8, x6, x13, x1)

inst_204:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x229 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x229 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7a29; op2val:0x7a29;
   valaddr_reg:x3; val_offset:358*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 358*FLEN/8, x6, x13, x1)

inst_205:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2e1 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2e1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ae1; op2val:0x7ae1;
   valaddr_reg:x3; val_offset:360*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 360*FLEN/8, x6, x13, x1)

inst_206:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2e1 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2e1 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ae1; op2val:0x7ae1;
   valaddr_reg:x3; val_offset:362*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 362*FLEN/8, x6, x13, x1)

inst_207:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2e1 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2e1 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ae1; op2val:0x7ae1;
   valaddr_reg:x3; val_offset:364*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 364*FLEN/8, x6, x13, x1)

inst_208:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2e1 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2e1 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ae1; op2val:0x7ae1;
   valaddr_reg:x3; val_offset:366*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 366*FLEN/8, x6, x13, x1)

inst_209:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2e1 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x2e1 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7ae1; op2val:0x7ae1;
   valaddr_reg:x3; val_offset:368*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 368*FLEN/8, x6, x13, x1)

inst_210:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x01b and fs2 == 0 and fe2 == 0x1e and fm2 == 0x01b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x781b; op2val:0x781b;
   valaddr_reg:x3; val_offset:370*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 370*FLEN/8, x6, x13, x1)

inst_211:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x01b and fs2 == 0 and fe2 == 0x1e and fm2 == 0x01b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x781b; op2val:0x781b;
   valaddr_reg:x3; val_offset:372*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 372*FLEN/8, x6, x13, x1)

inst_212:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x01b and fs2 == 0 and fe2 == 0x1e and fm2 == 0x01b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x781b; op2val:0x781b;
   valaddr_reg:x3; val_offset:374*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 374*FLEN/8, x6, x13, x1)

inst_213:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x01b and fs2 == 0 and fe2 == 0x1e and fm2 == 0x01b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x781b; op2val:0x781b;
   valaddr_reg:x3; val_offset:376*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 376*FLEN/8, x6, x13, x1)

inst_214:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x01b and fs2 == 0 and fe2 == 0x1e and fm2 == 0x01b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x781b; op2val:0x781b;
   valaddr_reg:x3; val_offset:378*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 378*FLEN/8, x6, x13, x1)

inst_215:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x09e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x09e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x789e; op2val:0x789e;
   valaddr_reg:x3; val_offset:380*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 380*FLEN/8, x6, x13, x1)

inst_216:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x09e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x09e and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x789e; op2val:0x789e;
   valaddr_reg:x3; val_offset:382*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 382*FLEN/8, x6, x13, x1)

inst_217:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x09e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x09e and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x789e; op2val:0x789e;
   valaddr_reg:x3; val_offset:384*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 384*FLEN/8, x6, x13, x1)

inst_218:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x09e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x09e and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x789e; op2val:0x789e;
   valaddr_reg:x3; val_offset:386*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 96, 0, x3, 386*FLEN/8, x6, x13, x1)

inst_219:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x09e and fs2 == 0 and fe2 == 0x1e and fm2 == 0x09e and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x789e; op2val:0x789e;
   valaddr_reg:x3; val_offset:388*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 388*FLEN/8, x6, x13, x1)

inst_220:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x04c and fs2 == 0 and fe2 == 0x1c and fm2 == 0x04c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x704c; op2val:0x704c;
   valaddr_reg:x3; val_offset:390*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x3, 390*FLEN/8, x6, x13, x1)

inst_221:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x04c and fs2 == 0 and fe2 == 0x1c and fm2 == 0x04c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x704c; op2val:0x704c;
   valaddr_reg:x3; val_offset:392*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 64, 0, x3, 392*FLEN/8, x6, x13, x1)

inst_222:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x04c and fs2 == 0 and fe2 == 0x1c and fm2 == 0x04c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x704c; op2val:0x704c;
   valaddr_reg:x3; val_offset:394*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 128, 0, x3, 394*FLEN/8, x6, x13, x1)

inst_223:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x135 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x135 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7935; op2val:0x7935;
   valaddr_reg:x3; val_offset:396*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x1*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 32, 0, x3, 396*FLEN/8, x6, x13, x1)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(28748,32,FLEN)
NAN_BOXED(28748,32,FLEN)
NAN_BOXED(28748,32,FLEN)
NAN_BOXED(28748,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(28748,32,FLEN)
NAN_BOXED(28748,32,FLEN)
NAN_BOXED(28748,32,FLEN)
NAN_BOXED(28748,32,FLEN)
NAN_BOXED(28748,32,FLEN)
NAN_BOXED(31259,32,FLEN)
NAN_BOXED(31259,32,FLEN)
NAN_BOXED(31259,32,FLEN)
NAN_BOXED(31259,32,FLEN)
NAN_BOXED(31259,32,FLEN)
NAN_BOXED(31259,32,FLEN)
NAN_BOXED(31259,32,FLEN)
NAN_BOXED(31259,32,FLEN)
NAN_BOXED(31259,32,FLEN)
NAN_BOXED(31259,32,FLEN)
NAN_BOXED(30700,32,FLEN)
NAN_BOXED(30700,32,FLEN)
NAN_BOXED(30700,32,FLEN)
NAN_BOXED(30700,32,FLEN)
NAN_BOXED(30700,32,FLEN)
NAN_BOXED(30700,32,FLEN)
NAN_BOXED(30700,32,FLEN)
NAN_BOXED(30700,32,FLEN)
test_dataset_1:
NAN_BOXED(30700,32,FLEN)
NAN_BOXED(30700,32,FLEN)
NAN_BOXED(31029,32,FLEN)
NAN_BOXED(31029,32,FLEN)
NAN_BOXED(31029,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(31029,32,FLEN)
NAN_BOXED(31029,32,FLEN)
NAN_BOXED(31029,32,FLEN)
NAN_BOXED(31029,32,FLEN)
NAN_BOXED(31029,32,FLEN)
NAN_BOXED(31029,32,FLEN)
NAN_BOXED(28161,32,FLEN)
NAN_BOXED(28161,32,FLEN)
NAN_BOXED(28161,32,FLEN)
NAN_BOXED(28161,32,FLEN)
NAN_BOXED(28161,32,FLEN)
NAN_BOXED(28161,32,FLEN)
NAN_BOXED(28161,32,FLEN)
NAN_BOXED(28161,32,FLEN)
NAN_BOXED(28161,32,FLEN)
NAN_BOXED(28161,32,FLEN)
test_dataset_2:
NAN_BOXED(31406,16,FLEN)
NAN_BOXED(31406,16,FLEN)
NAN_BOXED(31406,16,FLEN)
NAN_BOXED(31406,16,FLEN)
NAN_BOXED(31406,16,FLEN)
NAN_BOXED(31406,16,FLEN)
NAN_BOXED(31406,16,FLEN)
NAN_BOXED(31406,16,FLEN)
NAN_BOXED(31406,16,FLEN)
NAN_BOXED(31406,16,FLEN)
NAN_BOXED(31256,16,FLEN)
NAN_BOXED(31256,16,FLEN)
NAN_BOXED(31256,16,FLEN)
NAN_BOXED(31256,16,FLEN)
NAN_BOXED(31256,16,FLEN)
NAN_BOXED(31256,16,FLEN)
NAN_BOXED(31256,16,FLEN)
NAN_BOXED(31256,16,FLEN)
NAN_BOXED(31256,16,FLEN)
NAN_BOXED(31256,16,FLEN)
NAN_BOXED(30495,16,FLEN)
NAN_BOXED(30495,16,FLEN)
NAN_BOXED(30495,16,FLEN)
NAN_BOXED(30495,16,FLEN)
NAN_BOXED(30495,16,FLEN)
NAN_BOXED(30495,16,FLEN)
NAN_BOXED(30495,16,FLEN)
NAN_BOXED(30495,16,FLEN)
NAN_BOXED(30495,16,FLEN)
NAN_BOXED(30495,16,FLEN)
NAN_BOXED(29521,16,FLEN)
NAN_BOXED(29521,16,FLEN)
NAN_BOXED(29521,16,FLEN)
NAN_BOXED(29521,16,FLEN)
NAN_BOXED(29521,16,FLEN)
NAN_BOXED(29521,16,FLEN)
NAN_BOXED(29521,16,FLEN)
NAN_BOXED(29521,16,FLEN)
NAN_BOXED(29521,16,FLEN)
NAN_BOXED(29521,16,FLEN)
NAN_BOXED(31541,16,FLEN)
NAN_BOXED(31541,16,FLEN)
NAN_BOXED(31541,16,FLEN)
NAN_BOXED(31541,16,FLEN)
NAN_BOXED(31541,16,FLEN)
NAN_BOXED(31541,16,FLEN)
NAN_BOXED(31541,16,FLEN)
NAN_BOXED(31541,16,FLEN)
NAN_BOXED(31541,16,FLEN)
NAN_BOXED(31541,16,FLEN)
NAN_BOXED(26243,16,FLEN)
NAN_BOXED(26243,16,FLEN)
NAN_BOXED(26243,16,FLEN)
NAN_BOXED(26243,16,FLEN)
NAN_BOXED(26243,16,FLEN)
NAN_BOXED(26243,16,FLEN)
NAN_BOXED(26243,16,FLEN)
NAN_BOXED(26243,16,FLEN)
NAN_BOXED(26243,16,FLEN)
NAN_BOXED(26243,16,FLEN)
NAN_BOXED(31618,16,FLEN)
NAN_BOXED(31618,16,FLEN)
NAN_BOXED(31618,16,FLEN)
NAN_BOXED(31618,16,FLEN)
NAN_BOXED(31618,16,FLEN)
NAN_BOXED(31618,16,FLEN)
NAN_BOXED(31618,16,FLEN)
NAN_BOXED(31618,16,FLEN)
NAN_BOXED(31618,16,FLEN)
NAN_BOXED(31618,16,FLEN)
NAN_BOXED(29421,16,FLEN)
NAN_BOXED(29421,16,FLEN)
NAN_BOXED(29421,16,FLEN)
NAN_BOXED(29421,16,FLEN)
NAN_BOXED(29421,16,FLEN)
NAN_BOXED(29421,16,FLEN)
NAN_BOXED(29421,16,FLEN)
NAN_BOXED(29421,16,FLEN)
NAN_BOXED(29421,16,FLEN)
NAN_BOXED(29421,16,FLEN)
NAN_BOXED(26479,16,FLEN)
NAN_BOXED(26479,16,FLEN)
NAN_BOXED(26479,16,FLEN)
NAN_BOXED(26479,16,FLEN)
NAN_BOXED(26479,16,FLEN)
NAN_BOXED(26479,16,FLEN)
NAN_BOXED(26479,16,FLEN)
NAN_BOXED(26479,16,FLEN)
NAN_BOXED(26479,16,FLEN)
NAN_BOXED(26479,16,FLEN)
NAN_BOXED(30464,16,FLEN)
NAN_BOXED(30464,16,FLEN)
NAN_BOXED(30464,16,FLEN)
NAN_BOXED(30464,16,FLEN)
NAN_BOXED(30464,16,FLEN)
NAN_BOXED(30464,16,FLEN)
NAN_BOXED(30464,16,FLEN)
NAN_BOXED(30464,16,FLEN)
NAN_BOXED(30464,16,FLEN)
NAN_BOXED(30464,16,FLEN)
NAN_BOXED(29556,16,FLEN)
NAN_BOXED(29556,16,FLEN)
NAN_BOXED(29556,16,FLEN)
NAN_BOXED(29556,16,FLEN)
NAN_BOXED(29556,16,FLEN)
NAN_BOXED(29556,16,FLEN)
NAN_BOXED(29556,16,FLEN)
NAN_BOXED(29556,16,FLEN)
NAN_BOXED(29556,16,FLEN)
NAN_BOXED(29556,16,FLEN)
NAN_BOXED(29439,16,FLEN)
NAN_BOXED(29439,16,FLEN)
NAN_BOXED(29439,16,FLEN)
NAN_BOXED(29439,16,FLEN)
NAN_BOXED(29439,16,FLEN)
NAN_BOXED(29439,16,FLEN)
NAN_BOXED(29439,16,FLEN)
NAN_BOXED(29439,16,FLEN)
NAN_BOXED(29439,16,FLEN)
NAN_BOXED(29439,16,FLEN)
NAN_BOXED(29858,16,FLEN)
NAN_BOXED(29858,16,FLEN)
NAN_BOXED(29858,16,FLEN)
NAN_BOXED(29858,16,FLEN)
NAN_BOXED(29858,16,FLEN)
NAN_BOXED(29858,16,FLEN)
NAN_BOXED(29858,16,FLEN)
NAN_BOXED(29858,16,FLEN)
NAN_BOXED(29858,16,FLEN)
NAN_BOXED(29858,16,FLEN)
NAN_BOXED(31410,16,FLEN)
NAN_BOXED(31410,16,FLEN)
NAN_BOXED(31410,16,FLEN)
NAN_BOXED(31410,16,FLEN)
NAN_BOXED(31410,16,FLEN)
NAN_BOXED(31410,16,FLEN)
NAN_BOXED(31410,16,FLEN)
NAN_BOXED(31410,16,FLEN)
NAN_BOXED(31410,16,FLEN)
NAN_BOXED(31410,16,FLEN)
NAN_BOXED(31010,16,FLEN)
NAN_BOXED(31010,16,FLEN)
NAN_BOXED(31010,16,FLEN)
NAN_BOXED(31010,16,FLEN)
NAN_BOXED(31010,16,FLEN)
NAN_BOXED(31010,16,FLEN)
NAN_BOXED(31010,16,FLEN)
NAN_BOXED(31010,16,FLEN)
NAN_BOXED(31010,16,FLEN)
NAN_BOXED(31010,16,FLEN)
NAN_BOXED(31727,16,FLEN)
NAN_BOXED(31727,16,FLEN)
NAN_BOXED(31727,16,FLEN)
NAN_BOXED(31727,16,FLEN)
NAN_BOXED(31727,16,FLEN)
NAN_BOXED(31727,16,FLEN)
NAN_BOXED(31727,16,FLEN)
NAN_BOXED(31727,16,FLEN)
NAN_BOXED(31727,16,FLEN)
NAN_BOXED(31727,16,FLEN)
NAN_BOXED(28603,16,FLEN)
NAN_BOXED(28603,16,FLEN)
NAN_BOXED(28603,16,FLEN)
NAN_BOXED(28603,16,FLEN)
NAN_BOXED(28603,16,FLEN)
NAN_BOXED(28603,16,FLEN)
NAN_BOXED(28603,16,FLEN)
NAN_BOXED(28603,16,FLEN)
NAN_BOXED(28603,16,FLEN)
NAN_BOXED(28603,16,FLEN)
NAN_BOXED(31172,16,FLEN)
NAN_BOXED(31172,16,FLEN)
NAN_BOXED(31172,16,FLEN)
NAN_BOXED(31172,16,FLEN)
NAN_BOXED(31172,16,FLEN)
NAN_BOXED(31172,16,FLEN)
NAN_BOXED(31172,16,FLEN)
NAN_BOXED(31172,16,FLEN)
NAN_BOXED(31172,16,FLEN)
NAN_BOXED(31172,16,FLEN)
NAN_BOXED(31612,16,FLEN)
NAN_BOXED(31612,16,FLEN)
NAN_BOXED(31612,16,FLEN)
NAN_BOXED(31612,16,FLEN)
NAN_BOXED(31612,16,FLEN)
NAN_BOXED(31612,16,FLEN)
NAN_BOXED(31612,16,FLEN)
NAN_BOXED(31612,16,FLEN)
NAN_BOXED(31612,16,FLEN)
NAN_BOXED(31612,16,FLEN)
NAN_BOXED(31395,16,FLEN)
NAN_BOXED(31395,16,FLEN)
NAN_BOXED(31395,16,FLEN)
NAN_BOXED(31395,16,FLEN)
NAN_BOXED(31395,16,FLEN)
NAN_BOXED(31395,16,FLEN)
NAN_BOXED(31395,16,FLEN)
NAN_BOXED(31395,16,FLEN)
NAN_BOXED(31395,16,FLEN)
NAN_BOXED(31395,16,FLEN)
NAN_BOXED(29914,16,FLEN)
NAN_BOXED(29914,16,FLEN)
NAN_BOXED(29914,16,FLEN)
NAN_BOXED(29914,16,FLEN)
NAN_BOXED(29914,16,FLEN)
NAN_BOXED(29914,16,FLEN)
NAN_BOXED(29914,16,FLEN)
NAN_BOXED(29914,16,FLEN)
NAN_BOXED(29914,16,FLEN)
NAN_BOXED(29914,16,FLEN)
NAN_BOXED(31502,16,FLEN)
NAN_BOXED(31502,16,FLEN)
NAN_BOXED(31502,16,FLEN)
NAN_BOXED(31502,16,FLEN)
NAN_BOXED(31502,16,FLEN)
NAN_BOXED(31502,16,FLEN)
NAN_BOXED(31502,16,FLEN)
NAN_BOXED(31502,16,FLEN)
NAN_BOXED(31502,16,FLEN)
NAN_BOXED(31502,16,FLEN)
NAN_BOXED(30730,16,FLEN)
NAN_BOXED(30730,16,FLEN)
NAN_BOXED(30730,16,FLEN)
NAN_BOXED(30730,16,FLEN)
NAN_BOXED(30730,16,FLEN)
NAN_BOXED(30730,16,FLEN)
NAN_BOXED(30730,16,FLEN)
NAN_BOXED(30730,16,FLEN)
NAN_BOXED(30730,16,FLEN)
NAN_BOXED(30730,16,FLEN)
NAN_BOXED(26731,16,FLEN)
NAN_BOXED(26731,16,FLEN)
NAN_BOXED(26731,16,FLEN)
NAN_BOXED(26731,16,FLEN)
NAN_BOXED(26731,16,FLEN)
NAN_BOXED(26731,16,FLEN)
NAN_BOXED(26731,16,FLEN)
NAN_BOXED(26731,16,FLEN)
NAN_BOXED(26731,16,FLEN)
NAN_BOXED(26731,16,FLEN)
NAN_BOXED(31328,16,FLEN)
NAN_BOXED(31328,16,FLEN)
NAN_BOXED(31328,16,FLEN)
NAN_BOXED(31328,16,FLEN)
NAN_BOXED(31328,16,FLEN)
NAN_BOXED(31328,16,FLEN)
NAN_BOXED(31328,16,FLEN)
NAN_BOXED(31328,16,FLEN)
NAN_BOXED(31328,16,FLEN)
NAN_BOXED(31328,16,FLEN)
NAN_BOXED(29064,16,FLEN)
NAN_BOXED(29064,16,FLEN)
NAN_BOXED(29064,16,FLEN)
NAN_BOXED(29064,16,FLEN)
NAN_BOXED(29064,16,FLEN)
NAN_BOXED(29064,16,FLEN)
NAN_BOXED(29064,16,FLEN)
NAN_BOXED(29064,16,FLEN)
NAN_BOXED(29064,16,FLEN)
NAN_BOXED(29064,16,FLEN)
NAN_BOXED(31135,16,FLEN)
NAN_BOXED(31135,16,FLEN)
NAN_BOXED(31135,16,FLEN)
NAN_BOXED(31135,16,FLEN)
NAN_BOXED(31135,16,FLEN)
NAN_BOXED(31135,16,FLEN)
NAN_BOXED(31135,16,FLEN)
NAN_BOXED(31135,16,FLEN)
NAN_BOXED(31135,16,FLEN)
NAN_BOXED(31135,16,FLEN)
NAN_BOXED(30206,16,FLEN)
NAN_BOXED(30206,16,FLEN)
NAN_BOXED(30206,16,FLEN)
NAN_BOXED(30206,16,FLEN)
NAN_BOXED(30206,16,FLEN)
NAN_BOXED(30206,16,FLEN)
NAN_BOXED(30206,16,FLEN)
NAN_BOXED(30206,16,FLEN)
NAN_BOXED(30206,16,FLEN)
NAN_BOXED(30206,16,FLEN)
NAN_BOXED(30736,16,FLEN)
NAN_BOXED(30736,16,FLEN)
NAN_BOXED(30736,16,FLEN)
NAN_BOXED(30736,16,FLEN)
NAN_BOXED(30736,16,FLEN)
NAN_BOXED(30736,16,FLEN)
NAN_BOXED(30736,16,FLEN)
NAN_BOXED(30736,16,FLEN)
NAN_BOXED(30736,16,FLEN)
NAN_BOXED(30736,16,FLEN)
NAN_BOXED(30762,16,FLEN)
NAN_BOXED(30762,16,FLEN)
NAN_BOXED(30762,16,FLEN)
NAN_BOXED(30762,16,FLEN)
NAN_BOXED(30762,16,FLEN)
NAN_BOXED(30762,16,FLEN)
NAN_BOXED(30762,16,FLEN)
NAN_BOXED(30762,16,FLEN)
NAN_BOXED(30762,16,FLEN)
NAN_BOXED(30762,16,FLEN)
NAN_BOXED(30676,16,FLEN)
NAN_BOXED(30676,16,FLEN)
NAN_BOXED(30676,16,FLEN)
NAN_BOXED(30676,16,FLEN)
NAN_BOXED(30676,16,FLEN)
NAN_BOXED(30676,16,FLEN)
NAN_BOXED(30676,16,FLEN)
NAN_BOXED(30676,16,FLEN)
NAN_BOXED(30676,16,FLEN)
NAN_BOXED(30676,16,FLEN)
NAN_BOXED(27024,16,FLEN)
NAN_BOXED(27024,16,FLEN)
NAN_BOXED(27024,16,FLEN)
NAN_BOXED(27024,16,FLEN)
NAN_BOXED(27024,16,FLEN)
NAN_BOXED(27024,16,FLEN)
NAN_BOXED(27024,16,FLEN)
NAN_BOXED(27024,16,FLEN)
NAN_BOXED(27024,16,FLEN)
NAN_BOXED(27024,16,FLEN)
NAN_BOXED(31708,16,FLEN)
NAN_BOXED(31708,16,FLEN)
NAN_BOXED(31708,16,FLEN)
NAN_BOXED(31708,16,FLEN)
NAN_BOXED(31708,16,FLEN)
NAN_BOXED(31708,16,FLEN)
NAN_BOXED(31708,16,FLEN)
NAN_BOXED(31708,16,FLEN)
NAN_BOXED(31708,16,FLEN)
NAN_BOXED(31708,16,FLEN)
NAN_BOXED(30283,16,FLEN)
NAN_BOXED(30283,16,FLEN)
NAN_BOXED(30283,16,FLEN)
NAN_BOXED(30283,16,FLEN)
NAN_BOXED(30283,16,FLEN)
NAN_BOXED(30283,16,FLEN)
NAN_BOXED(30283,16,FLEN)
NAN_BOXED(30283,16,FLEN)
NAN_BOXED(30283,16,FLEN)
NAN_BOXED(30283,16,FLEN)
NAN_BOXED(30724,16,FLEN)
NAN_BOXED(30724,16,FLEN)
NAN_BOXED(30724,16,FLEN)
NAN_BOXED(30724,16,FLEN)
NAN_BOXED(30724,16,FLEN)
NAN_BOXED(30724,16,FLEN)
NAN_BOXED(30724,16,FLEN)
NAN_BOXED(30724,16,FLEN)
NAN_BOXED(30724,16,FLEN)
NAN_BOXED(30724,16,FLEN)
NAN_BOXED(31273,16,FLEN)
NAN_BOXED(31273,16,FLEN)
NAN_BOXED(31273,16,FLEN)
NAN_BOXED(31273,16,FLEN)
NAN_BOXED(31273,16,FLEN)
NAN_BOXED(31273,16,FLEN)
NAN_BOXED(31273,16,FLEN)
NAN_BOXED(31273,16,FLEN)
NAN_BOXED(31273,16,FLEN)
NAN_BOXED(31273,16,FLEN)
NAN_BOXED(31457,16,FLEN)
NAN_BOXED(31457,16,FLEN)
NAN_BOXED(31457,16,FLEN)
NAN_BOXED(31457,16,FLEN)
NAN_BOXED(31457,16,FLEN)
NAN_BOXED(31457,16,FLEN)
NAN_BOXED(31457,16,FLEN)
NAN_BOXED(31457,16,FLEN)
NAN_BOXED(31457,16,FLEN)
NAN_BOXED(31457,16,FLEN)
NAN_BOXED(30747,16,FLEN)
NAN_BOXED(30747,16,FLEN)
NAN_BOXED(30747,16,FLEN)
NAN_BOXED(30747,16,FLEN)
NAN_BOXED(30747,16,FLEN)
NAN_BOXED(30747,16,FLEN)
NAN_BOXED(30747,16,FLEN)
NAN_BOXED(30747,16,FLEN)
NAN_BOXED(30747,16,FLEN)
NAN_BOXED(30747,16,FLEN)
NAN_BOXED(30878,16,FLEN)
NAN_BOXED(30878,16,FLEN)
NAN_BOXED(30878,16,FLEN)
NAN_BOXED(30878,16,FLEN)
NAN_BOXED(30878,16,FLEN)
NAN_BOXED(30878,16,FLEN)
NAN_BOXED(30878,16,FLEN)
NAN_BOXED(30878,16,FLEN)
NAN_BOXED(30878,16,FLEN)
NAN_BOXED(30878,16,FLEN)
NAN_BOXED(28748,16,FLEN)
NAN_BOXED(28748,16,FLEN)
NAN_BOXED(28748,16,FLEN)
NAN_BOXED(28748,16,FLEN)
NAN_BOXED(28748,16,FLEN)
NAN_BOXED(28748,16,FLEN)
NAN_BOXED(31029,16,FLEN)
NAN_BOXED(31029,16,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 34*((SIGALIGN)/4),4,0xdeadbeef


signature_x13_0:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x13_1:
    .fill 158*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
