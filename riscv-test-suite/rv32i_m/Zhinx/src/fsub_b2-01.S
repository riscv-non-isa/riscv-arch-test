
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.12.2
// timestamp : Wed Sep 25 06:02:02 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/testing/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/testing/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV32Zhinx/rv32h_fsub.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fsub.h instruction of the RISC-V RV32_Zfinx_Zhinx,RV64_Zfinx_Zhinx extension for the fsub_b2 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32I_Zfinx_Zhinx,RV64I_Zfinx_Zhinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*Zhinx.*);def TEST_CASE_1=True;",fsub_b2)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x5,test_dataset_0)
RVTEST_SIGBASE(x12,signature_x12_1)

inst_0:
// rs1 == rs2 == rd, rs1==x17, rs2==x17, rd==x17,fs1 == 0 and fe1 == 0x00 and fm1 == 0x012 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x010 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x17; op2:x17; dest:x17; op1val:0x12; op2val:0x12;
   valaddr_reg:x5; val_offset:0*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x13*/
TEST_FPRR_OP(fsub.h, x17, x17, x17, dyn, 0, 0, x5, 0*FLEN/8, x21, x12, x13)

inst_1:
// rs2 == rd != rs1, rs1==x15, rs2==x29, rd==x29,fs1 == 0 and fe1 == 0x00 and fm1 == 0x062 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x060 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x15; op2:x29; dest:x29; op1val:0x62; op2val:0x60;
   valaddr_reg:x5; val_offset:2*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x13*/
TEST_FPRR_OP(fsub.h, x29, x15, x29, dyn, 0, 0, x5, 2*FLEN/8, x21, x12, x13)

inst_2:
// rs1 == rd != rs2, rs1==x25, rs2==x7, rd==x25,fs1 == 0 and fe1 == 0x00 and fm1 == 0x021 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x01d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x25; op2:x7; dest:x25; op1val:0x21; op2val:0x1d;
   valaddr_reg:x5; val_offset:4*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x13*/
TEST_FPRR_OP(fsub.h, x25, x25, x7, dyn, 0, 0, x5, 4*FLEN/8, x21, x12, x13)

inst_3:
// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x9, rs2==x27, rd==x6,fs1 == 0 and fe1 == 0x00 and fm1 == 0x040 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x038 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x9; op2:x27; dest:x6; op1val:0x40; op2val:0x38;
   valaddr_reg:x5; val_offset:6*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x13*/
TEST_FPRR_OP(fsub.h, x6, x9, x27, dyn, 0, 0, x5, 6*FLEN/8, x21, x12, x13)

inst_4:
// rs1 == rs2 != rd, rs1==x30, rs2==x30, rd==x20,fs1 == 0 and fe1 == 0x00 and fm1 == 0x03a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x02a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x30; dest:x20; op1val:0x3a; op2val:0x3a;
   valaddr_reg:x5; val_offset:8*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x13*/
TEST_FPRR_OP(fsub.h, x20, x30, x30, dyn, 0, 0, x5, 8*FLEN/8, x21, x12, x13)

inst_5:
// rs1==x14, rs2==x20, rd==x27,fs1 == 0 and fe1 == 0x00 and fm1 == 0x054 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x034 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x14; op2:x20; dest:x27; op1val:0x54; op2val:0x34;
   valaddr_reg:x5; val_offset:10*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x13*/
TEST_FPRR_OP(fsub.h, x27, x14, x20, dyn, 0, 0, x5, 10*FLEN/8, x21, x12, x13)

inst_6:
// rs1==x29, rs2==x1, rd==x2,fs1 == 0 and fe1 == 0x00 and fm1 == 0x01b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x025 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x29; op2:x1; dest:x2; op1val:0x1b; op2val:0x8025;
   valaddr_reg:x5; val_offset:12*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x13*/
TEST_FPRR_OP(fsub.h, x2, x29, x1, dyn, 0, 0, x5, 12*FLEN/8, x21, x12, x13)

inst_7:
// rs1==x0, rs2==x16, rd==x30,fs1 == 0 and fe1 == 0x00 and fm1 == 0x03f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x041 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x0; op2:x16; dest:x30; op1val:0x0; op2val:0x8041;
   valaddr_reg:x5; val_offset:14*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x13*/
TEST_FPRR_OP(fsub.h, x30, x0, x16, dyn, 0, 0, x5, 14*FLEN/8, x21, x12, x13)

inst_8:
// rs1==x2, rs2==x10, rd==x18,fs1 == 0 and fe1 == 0x00 and fm1 == 0x032 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0ce and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x2; op2:x10; dest:x18; op1val:0x32; op2val:0x80ce;
   valaddr_reg:x5; val_offset:16*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x13*/
TEST_FPRR_OP(fsub.h, x18, x2, x10, dyn, 0, 0, x5, 16*FLEN/8, x21, x12, x13)

inst_9:
// rs1==x8, rs2==x28, rd==x26,fs1 == 0 and fe1 == 0x00 and fm1 == 0x04e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x1b2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x8; op2:x28; dest:x26; op1val:0x4e; op2val:0x81b2;
   valaddr_reg:x5; val_offset:18*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x13*/
TEST_FPRR_OP(fsub.h, x26, x8, x28, dyn, 0, 0, x5, 18*FLEN/8, x21, x12, x13)

inst_10:
// rs1==x19, rs2==x23, rd==x4,fs1 == 0 and fe1 == 0x00 and fm1 == 0x063 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x064 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x19; op2:x23; dest:x4; op1val:0x63; op2val:0x64;
   valaddr_reg:x5; val_offset:20*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x13*/
TEST_FPRR_OP(fsub.h, x4, x19, x23, dyn, 0, 0, x5, 20*FLEN/8, x21, x12, x13)

inst_11:
// rs1==x10, rs2==x15, rd==x16,fs1 == 0 and fe1 == 0x00 and fm1 == 0x05a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x05c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x10; op2:x15; dest:x16; op1val:0x5a; op2val:0x5c;
   valaddr_reg:x5; val_offset:22*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x13*/
TEST_FPRR_OP(fsub.h, x16, x10, x15, dyn, 0, 0, x5, 22*FLEN/8, x21, x12, x13)

inst_12:
// rs1==x11, rs2==x3, rd==x9,fs1 == 0 and fe1 == 0x00 and fm1 == 0x023 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x027 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x11; op2:x3; dest:x9; op1val:0x23; op2val:0x27;
   valaddr_reg:x5; val_offset:24*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x13*/
TEST_FPRR_OP(fsub.h, x9, x11, x3, dyn, 0, 0, x5, 24*FLEN/8, x21, x12, x13)
RVTEST_VALBASEUPD(x2,test_dataset_1)

inst_13:
// rs1==x21, rs2==x4, rd==x5,fs1 == 0 and fe1 == 0x00 and fm1 == 0x01e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x026 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x21; op2:x4; dest:x5; op1val:0x1e; op2val:0x26;
   valaddr_reg:x2; val_offset:0*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x13*/
TEST_FPRR_OP(fsub.h, x5, x21, x4, dyn, 0, 0, x2, 0*FLEN/8, x7, x12, x13)
RVTEST_SIGBASE(x17,signature_x17_0)

inst_14:
// rs1==x22, rs2==x25, rd==x24,fs1 == 0 and fe1 == 0x00 and fm1 == 0x00e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x01e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x22; op2:x25; dest:x24; op1val:0xe; op2val:0x1e;
   valaddr_reg:x2; val_offset:2*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x20*/
TEST_FPRR_OP(fsub.h, x24, x22, x25, dyn, 0, 0, x2, 2*FLEN/8, x7, x17, x20)

inst_15:
// rs1==x3, rs2==x0, rd==x13,fs1 == 0 and fe1 == 0x00 and fm1 == 0x004 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x024 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x3; op2:x0; dest:x13; op1val:0x4; op2val:0x0;
   valaddr_reg:x2; val_offset:4*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x20*/
TEST_FPRR_OP(fsub.h, x13, x3, x0, dyn, 0, 0, x2, 4*FLEN/8, x7, x17, x20)

inst_16:
// rs1==x5, rs2==x21, rd==x0,fs1 == 0 and fe1 == 0x00 and fm1 == 0x004 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x044 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x5; op2:x21; dest:x0; op1val:0x4; op2val:0x44;
   valaddr_reg:x2; val_offset:6*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x20*/
TEST_FPRR_OP(fsub.h, x0, x5, x21, dyn, 0, 0, x2, 6*FLEN/8, x7, x17, x20)

inst_17:
// rs1==x4, rs2==x11, rd==x19,fs1 == 0 and fe1 == 0x00 and fm1 == 0x046 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0c6 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x4; op2:x11; dest:x19; op1val:0x46; op2val:0xc6;
   valaddr_reg:x2; val_offset:8*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x20*/
TEST_FPRR_OP(fsub.h, x19, x4, x11, dyn, 0, 0, x2, 8*FLEN/8, x7, x17, x20)

inst_18:
// rs1==x18, rs2==x19, rd==x21,fs1 == 0 and fe1 == 0x00 and fm1 == 0x031 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x131 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x18; op2:x19; dest:x21; op1val:0x31; op2val:0x131;
   valaddr_reg:x2; val_offset:10*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x20*/
TEST_FPRR_OP(fsub.h, x21, x18, x19, dyn, 0, 0, x2, 10*FLEN/8, x7, x17, x20)

inst_19:
// rs1==x12, rs2==x9, rd==x28,fs1 == 0 and fe1 == 0x00 and fm1 == 0x01c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x21c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x12; op2:x9; dest:x28; op1val:0x1c; op2val:0x21c;
   valaddr_reg:x2; val_offset:12*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x20*/
TEST_FPRR_OP(fsub.h, x28, x12, x9, dyn, 0, 0, x2, 12*FLEN/8, x7, x17, x20)

inst_20:
// rs1==x27, rs2==x24, rd==x11,fs1 == 0 and fe1 == 0x0f and fm1 == 0x05d and fs2 == 0 and fe2 == 0x0b and fm2 == 0x1c0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x27; op2:x24; dest:x11; op1val:0x3c5d; op2val:0x2dc0;
   valaddr_reg:x2; val_offset:14*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x20*/
TEST_FPRR_OP(fsub.h, x11, x27, x24, dyn, 0, 0, x2, 14*FLEN/8, x7, x17, x20)

inst_21:
// rs1==x13, rs2==x14, rd==x22,fs1 == 0 and fe1 == 0x0f and fm1 == 0x044 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x020 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x13; op2:x14; dest:x22; op1val:0x3c44; op2val:0x2c20;
   valaddr_reg:x2; val_offset:16*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x20*/
TEST_FPRR_OP(fsub.h, x22, x13, x14, dyn, 0, 0, x2, 16*FLEN/8, x7, x17, x20)

inst_22:
// rs1==x28, rs2==x18, rd==x3,fs1 == 0 and fe1 == 0x0f and fm1 == 0x062 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x1e0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x28; op2:x18; dest:x3; op1val:0x3c62; op2val:0x2de0;
   valaddr_reg:x2; val_offset:18*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x20*/
TEST_FPRR_OP(fsub.h, x3, x28, x18, dyn, 0, 0, x2, 18*FLEN/8, x7, x17, x20)

inst_23:
// rs1==x16, rs2==x5, rd==x10,fs1 == 0 and fe1 == 0x0f and fm1 == 0x040 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x300 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x16; op2:x5; dest:x10; op1val:0x3c40; op2val:0x2b00;
   valaddr_reg:x2; val_offset:20*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x20*/
TEST_FPRR_OP(fsub.h, x10, x16, x5, dyn, 0, 0, x2, 20*FLEN/8, x7, x17, x20)

inst_24:
// rs1==x6, rs2==x22, rd==x23,fs1 == 0 and fe1 == 0x0f and fm1 == 0x01e and fs2 == 0 and fe2 == 0x08 and fm2 == 0x300 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x6; op2:x22; dest:x23; op1val:0x3c1e; op2val:0x2300;
   valaddr_reg:x2; val_offset:22*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x20*/
TEST_FPRR_OP(fsub.h, x23, x6, x22, dyn, 0, 0, x2, 22*FLEN/8, x7, x17, x20)

inst_25:
// rs1==x1, rs2==x31, rd==x15,fs1 == 0 and fe1 == 0x0f and fm1 == 0x01e and fs2 == 1 and fe2 == 0x06 and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x1; op2:x31; dest:x15; op1val:0x3c1e; op2val:0x9800;
   valaddr_reg:x2; val_offset:24*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x20*/
TEST_FPRR_OP(fsub.h, x15, x1, x31, dyn, 0, 0, x2, 24*FLEN/8, x7, x17, x20)
RVTEST_VALBASEUPD(x4,test_dataset_2)

inst_26:
// rs1==x23, rs2==x6, rd==x7,fs1 == 0 and fe1 == 0x0f and fm1 == 0x01d and fs2 == 1 and fe2 == 0x0a and fm2 == 0x060 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x23; op2:x6; dest:x7; op1val:0x3c1d; op2val:0xa860;
   valaddr_reg:x4; val_offset:0*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x20*/
TEST_FPRR_OP(fsub.h, x7, x23, x6, dyn, 0, 0, x4, 0*FLEN/8, x5, x17, x20)

inst_27:
// rs1==x24, rs2==x12, rd==x31,fs1 == 0 and fe1 == 0x0f and fm1 == 0x03b and fs2 == 1 and fe2 == 0x0b and fm2 == 0x050 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x24; op2:x12; dest:x31; op1val:0x3c3b; op2val:0xac50;
   valaddr_reg:x4; val_offset:2*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x20*/
TEST_FPRR_OP(fsub.h, x31, x24, x12, dyn, 0, 0, x4, 2*FLEN/8, x5, x17, x20)

inst_28:
// rs1==x7, rs2==x2, rd==x8,fs1 == 0 and fe1 == 0x0f and fm1 == 0x003 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x3e8 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x7; op2:x2; dest:x8; op1val:0x3c03; op2val:0xb3e8;
   valaddr_reg:x4; val_offset:4*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x20*/
TEST_FPRR_OP(fsub.h, x8, x7, x2, dyn, 0, 0, x4, 4*FLEN/8, x5, x17, x20)
RVTEST_SIGBASE(x2,signature_x2_0)

inst_29:
// rs1==x20, rs2==x8, rd==x12,fs1 == 0 and fe1 == 0x0f and fm1 == 0x048 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2e0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x20; op2:x8; dest:x12; op1val:0x3c48; op2val:0xb6e0;
   valaddr_reg:x4; val_offset:6*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x12, x20, x8, dyn, 0, 0, x4, 6*FLEN/8, x5, x2, x3)

inst_30:
// rs1==x26, rs2==x13, rd==x14,fs1 == 0 and fe1 == 0x0f and fm1 == 0x00d and fs2 == 0 and fe2 == 0x10 and fm2 == 0x007 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x26; op2:x13; dest:x14; op1val:0x3c0d; op2val:0x4007;
   valaddr_reg:x4; val_offset:8*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x14, x26, x13, dyn, 0, 0, x4, 8*FLEN/8, x5, x2, x3)

inst_31:
// rs1==x31, rs2==x26, rd==x1,fs1 == 0 and fe1 == 0x0f and fm1 == 0x051 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x029 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x31; op2:x26; dest:x1; op1val:0x3c51; op2val:0x4029;
   valaddr_reg:x4; val_offset:10*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x1, x31, x26, dyn, 0, 0, x4, 10*FLEN/8, x5, x2, x3)

inst_32:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x026 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x015 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x3c26; op2val:0x4015;
   valaddr_reg:x4; val_offset:12*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 12*FLEN/8, x5, x2, x3)

inst_33:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x060 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x034 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x3c60; op2val:0x4034;
   valaddr_reg:x4; val_offset:14*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 14*FLEN/8, x5, x2, x3)

inst_34:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x05d and fs2 == 0 and fe2 == 0x10 and fm2 == 0x036 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x3c5d; op2val:0x4036;
   valaddr_reg:x4; val_offset:16*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 16*FLEN/8, x5, x2, x3)

inst_35:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x041 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x030 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x3c41; op2val:0x4030;
   valaddr_reg:x4; val_offset:18*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 18*FLEN/8, x5, x2, x3)

inst_36:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x041 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x040 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x3c41; op2val:0x4040;
   valaddr_reg:x4; val_offset:20*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 20*FLEN/8, x5, x2, x3)

inst_37:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x019 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x04c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x3c19; op2val:0x404c;
   valaddr_reg:x4; val_offset:22*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 22*FLEN/8, x5, x2, x3)

inst_38:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x025 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x092 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x3c25; op2val:0x4092;
   valaddr_reg:x4; val_offset:24*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 24*FLEN/8, x5, x2, x3)

inst_39:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x040 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x120 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x3c40; op2val:0x4120;
   valaddr_reg:x4; val_offset:26*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 26*FLEN/8, x5, x2, x3)

inst_40:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x033 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x031 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x33; op2val:0x31;
   valaddr_reg:x4; val_offset:28*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 28*FLEN/8, x5, x2, x3)

inst_41:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x005 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x5; op2val:0x2;
   valaddr_reg:x4; val_offset:30*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 30*FLEN/8, x5, x2, x3)

inst_42:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x01b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x20; op2val:0x1b;
   valaddr_reg:x4; val_offset:32*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 32*FLEN/8, x5, x2, x3)

inst_43:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x034 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x02b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x34; op2val:0x2b;
   valaddr_reg:x4; val_offset:34*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 34*FLEN/8, x5, x2, x3)

inst_44:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x056 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x045 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x56; op2val:0x45;
   valaddr_reg:x4; val_offset:36*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 36*FLEN/8, x5, x2, x3)

inst_45:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x02f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x2f; op2val:0xe;
   valaddr_reg:x4; val_offset:38*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 38*FLEN/8, x5, x2, x3)

inst_46:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x05a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x019 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x5a; op2val:0x19;
   valaddr_reg:x4; val_offset:40*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 40*FLEN/8, x5, x2, x3)

inst_47:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x05f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x022 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x5f; op2val:0x8022;
   valaddr_reg:x4; val_offset:42*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 42*FLEN/8, x5, x2, x3)

inst_48:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0f5 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0xc; op2val:0x80f5;
   valaddr_reg:x4; val_offset:44*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 44*FLEN/8, x5, x2, x3)

inst_49:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x055 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x1ac and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x55; op2val:0x81ac;
   valaddr_reg:x4; val_offset:46*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 46*FLEN/8, x5, x2, x3)

inst_50:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0xe; op2val:0xf;
   valaddr_reg:x4; val_offset:48*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 48*FLEN/8, x5, x2, x3)

inst_51:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x043 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x046 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x43; op2val:0x46;
   valaddr_reg:x4; val_offset:50*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 50*FLEN/8, x5, x2, x3)

inst_52:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x030 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x035 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x30; op2val:0x35;
   valaddr_reg:x4; val_offset:52*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 52*FLEN/8, x5, x2, x3)

inst_53:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x05e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x067 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x5e; op2val:0x67;
   valaddr_reg:x4; val_offset:54*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 54*FLEN/8, x5, x2, x3)

inst_54:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x03d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x04e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x3d; op2val:0x4e;
   valaddr_reg:x4; val_offset:56*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 56*FLEN/8, x5, x2, x3)

inst_55:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x028 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x049 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x28; op2val:0x49;
   valaddr_reg:x4; val_offset:58*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 58*FLEN/8, x5, x2, x3)

inst_56:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x04f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x090 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x4f; op2val:0x90;
   valaddr_reg:x4; val_offset:60*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 60*FLEN/8, x5, x2, x3)

inst_57:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x04b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0cc and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x4b; op2val:0xcc;
   valaddr_reg:x4; val_offset:62*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 62*FLEN/8, x5, x2, x3)

inst_58:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x053 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x154 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x53; op2val:0x154;
   valaddr_reg:x4; val_offset:64*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 64*FLEN/8, x5, x2, x3)

inst_59:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x016 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x217 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x16; op2val:0x217;
   valaddr_reg:x4; val_offset:66*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 66*FLEN/8, x5, x2, x3)

inst_60:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x01e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x1e; op2val:0x83e0;
   valaddr_reg:x4; val_offset:68*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 68*FLEN/8, x5, x2, x3)

inst_61:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x063 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x39a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x63; op2val:0x839a;
   valaddr_reg:x4; val_offset:70*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 70*FLEN/8, x5, x2, x3)

inst_62:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x046 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3b5 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x46; op2val:0x83b5;
   valaddr_reg:x4; val_offset:72*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 72*FLEN/8, x5, x2, x3)

inst_63:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x01e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3d9 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x1e; op2val:0x83d9;
   valaddr_reg:x4; val_offset:74*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 74*FLEN/8, x5, x2, x3)

inst_64:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x042 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3ad and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x42; op2val:0x83ad;
   valaddr_reg:x4; val_offset:76*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 76*FLEN/8, x5, x2, x3)

inst_65:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x04a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x395 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x4a; op2val:0x8395;
   valaddr_reg:x4; val_offset:78*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 78*FLEN/8, x5, x2, x3)

inst_66:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x03b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x384 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b; op2val:0x8384;
   valaddr_reg:x4; val_offset:80*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 80*FLEN/8, x5, x2, x3)

inst_67:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x055 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x55; op2val:0x832a;
   valaddr_reg:x4; val_offset:82*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 82*FLEN/8, x5, x2, x3)

inst_68:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x04e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2b1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x4e; op2val:0x82b1;
   valaddr_reg:x4; val_offset:84*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 84*FLEN/8, x5, x2, x3)

inst_69:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x1fd and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x1; op2val:0x81fd;
   valaddr_reg:x4; val_offset:86*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 86*FLEN/8, x5, x2, x3)

inst_70:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x05f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x05d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x5f; op2val:0x45d;
   valaddr_reg:x4; val_offset:88*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 88*FLEN/8, x5, x2, x3)

inst_71:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x011 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x00e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x11; op2val:0x40e;
   valaddr_reg:x4; val_offset:90*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 90*FLEN/8, x5, x2, x3)

inst_72:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x048 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x043 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x48; op2val:0x443;
   valaddr_reg:x4; val_offset:92*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 92*FLEN/8, x5, x2, x3)

inst_73:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x037 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x02e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x37; op2val:0x42e;
   valaddr_reg:x4; val_offset:94*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 94*FLEN/8, x5, x2, x3)

inst_74:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x03e and fs2 == 0 and fe2 == 0x01 and fm2 == 0x02d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x3e; op2val:0x42d;
   valaddr_reg:x4; val_offset:96*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 96*FLEN/8, x5, x2, x3)

inst_75:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x049 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x028 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x49; op2val:0x428;
   valaddr_reg:x4; val_offset:98*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 98*FLEN/8, x5, x2, x3)

inst_76:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x01a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d9 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x1a; op2val:0x3d9;
   valaddr_reg:x4; val_offset:100*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 100*FLEN/8, x5, x2, x3)

inst_77:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x035 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3b4 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x35; op2val:0x3b4;
   valaddr_reg:x4; val_offset:102*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 102*FLEN/8, x5, x2, x3)

inst_78:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x02e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x2e; op2val:0x32d;
   valaddr_reg:x4; val_offset:104*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 104*FLEN/8, x5, x2, x3)

inst_79:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x02d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x22c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x2d; op2val:0x22c;
   valaddr_reg:x4; val_offset:106*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 106*FLEN/8, x5, x2, x3)

inst_80:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x045 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x044 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x445; op2val:0x44;
   valaddr_reg:x4; val_offset:108*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 108*FLEN/8, x5, x2, x3)

inst_81:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x050 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x04e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x450; op2val:0x4e;
   valaddr_reg:x4; val_offset:110*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 110*FLEN/8, x5, x2, x3)

inst_82:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x02b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x027 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x42b; op2val:0x27;
   valaddr_reg:x4; val_offset:112*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 112*FLEN/8, x5, x2, x3)

inst_83:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x04d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x045 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x44d; op2val:0x45;
   valaddr_reg:x4; val_offset:114*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 114*FLEN/8, x5, x2, x3)

inst_84:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x01e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x41e; op2val:0xe;
   valaddr_reg:x4; val_offset:116*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 116*FLEN/8, x5, x2, x3)

inst_85:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x017 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x009 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x417; op2val:0x8009;
   valaddr_reg:x4; val_offset:118*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 118*FLEN/8, x5, x2, x3)

inst_86:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x04b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x44b; op2val:0xb;
   valaddr_reg:x4; val_offset:120*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 120*FLEN/8, x5, x2, x3)

inst_87:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x074 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x40c; op2val:0x8074;
   valaddr_reg:x4; val_offset:122*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 122*FLEN/8, x5, x2, x3)

inst_88:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x021 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0df and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x421; op2val:0x80df;
   valaddr_reg:x4; val_offset:124*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 124*FLEN/8, x5, x2, x3)

inst_89:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x057 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x1a9 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x457; op2val:0x81a9;
   valaddr_reg:x4; val_offset:126*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 126*FLEN/8, x5, x2, x3)

inst_90:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00b and fs2 == 0 and fe2 == 0x02 and fm2 == 0x006 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x40b; op2val:0x806;
   valaddr_reg:x4; val_offset:128*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 128*FLEN/8, x5, x2, x3)

inst_91:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x03a and fs2 == 0 and fe2 == 0x02 and fm2 == 0x01e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x43a; op2val:0x81e;
   valaddr_reg:x4; val_offset:130*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 130*FLEN/8, x5, x2, x3)

inst_92:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x061 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x032 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x461; op2val:0x832;
   valaddr_reg:x4; val_offset:132*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 132*FLEN/8, x5, x2, x3)

inst_93:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x024 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x016 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x424; op2val:0x816;
   valaddr_reg:x4; val_offset:134*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 134*FLEN/8, x5, x2, x3)

inst_94:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x023 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x019 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x423; op2val:0x819;
   valaddr_reg:x4; val_offset:136*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 136*FLEN/8, x5, x2, x3)

inst_95:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x050 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x038 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x450; op2val:0x838;
   valaddr_reg:x4; val_offset:138*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 138*FLEN/8, x5, x2, x3)

inst_96:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x02d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x036 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x42d; op2val:0x836;
   valaddr_reg:x4; val_offset:140*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 140*FLEN/8, x5, x2, x3)

inst_97:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x009 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x044 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x409; op2val:0x844;
   valaddr_reg:x4; val_offset:142*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 142*FLEN/8, x5, x2, x3)

inst_98:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x015 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x08a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x415; op2val:0x88a;
   valaddr_reg:x4; val_offset:144*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 144*FLEN/8, x5, x2, x3)

inst_99:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x044 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x122 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x444; op2val:0x922;
   valaddr_reg:x4; val_offset:146*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 146*FLEN/8, x5, x2, x3)

inst_100:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x055 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x352 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7855; op2val:0xf752;
   valaddr_reg:x4; val_offset:148*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 148*FLEN/8, x5, x2, x3)

inst_101:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x053 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x354 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7853; op2val:0xf754;
   valaddr_reg:x4; val_offset:150*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 150*FLEN/8, x5, x2, x3)

inst_102:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x026 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x3aa and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7826; op2val:0xf7aa;
   valaddr_reg:x4; val_offset:152*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 152*FLEN/8, x5, x2, x3)

inst_103:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x05a and fs2 == 1 and fe2 == 0x1d and fm2 == 0x33a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x785a; op2val:0xf73a;
   valaddr_reg:x4; val_offset:154*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 154*FLEN/8, x5, x2, x3)

inst_104:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x040 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x35e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7840; op2val:0xf75e;
   valaddr_reg:x4; val_offset:156*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 156*FLEN/8, x5, x2, x3)

inst_105:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x00f and fs2 == 1 and fe2 == 0x1d and fm2 == 0x3a0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x780f; op2val:0xf7a0;
   valaddr_reg:x4; val_offset:158*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 158*FLEN/8, x5, x2, x3)

inst_106:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x028 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x32e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7828; op2val:0xf72e;
   valaddr_reg:x4; val_offset:160*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 160*FLEN/8, x5, x2, x3)

inst_107:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x02c and fs2 == 1 and fe2 == 0x1d and fm2 == 0x2a6 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x782c; op2val:0xf6a6;
   valaddr_reg:x4; val_offset:162*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 162*FLEN/8, x5, x2, x3)

inst_108:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x019 and fs2 == 1 and fe2 == 0x1d and fm2 == 0x1cc and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7819; op2val:0xf5cc;
   valaddr_reg:x4; val_offset:164*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 164*FLEN/8, x5, x2, x3)

inst_109:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x00e and fs2 == 1 and fe2 == 0x1c and fm2 == 0x3c4 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x780e; op2val:0xf3c4;
   valaddr_reg:x4; val_offset:166*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 166*FLEN/8, x5, x2, x3)

inst_110:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x05e and fs2 == 0 and fe2 == 0x1f and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x785e; op2val:0x7c00;
   valaddr_reg:x4; val_offset:168*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 168*FLEN/8, x5, x2, x3)

inst_111:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x01b and fs2 == 0 and fe2 == 0x1f and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x781b; op2val:0x7c00;
   valaddr_reg:x4; val_offset:170*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 170*FLEN/8, x5, x2, x3)

inst_112:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x038 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7838; op2val:0x7c00;
   valaddr_reg:x4; val_offset:172*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 172*FLEN/8, x5, x2, x3)

inst_113:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x01d and fs2 == 0 and fe2 == 0x1f and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x781d; op2val:0x7c00;
   valaddr_reg:x4; val_offset:174*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 174*FLEN/8, x5, x2, x3)

inst_114:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x033 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7833; op2val:0x7c00;
   valaddr_reg:x4; val_offset:176*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 176*FLEN/8, x5, x2, x3)

inst_115:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x005 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7805; op2val:0x7c00;
   valaddr_reg:x4; val_offset:178*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 178*FLEN/8, x5, x2, x3)

inst_116:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x015 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7815; op2val:0x7c00;
   valaddr_reg:x4; val_offset:180*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 180*FLEN/8, x5, x2, x3)

inst_117:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x05b and fs2 == 0 and fe2 == 0x1f and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x785b; op2val:0x7c00;
   valaddr_reg:x4; val_offset:182*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 182*FLEN/8, x5, x2, x3)

inst_118:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x057 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7857; op2val:0x7c00;
   valaddr_reg:x4; val_offset:184*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 184*FLEN/8, x5, x2, x3)

inst_119:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x046 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x7846; op2val:0x7c00;
   valaddr_reg:x4; val_offset:186*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 186*FLEN/8, x5, x2, x3)

inst_120:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x012 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x010 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x12; op2val:0x10;
   valaddr_reg:x4; val_offset:188*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 188*FLEN/8, x5, x2, x3)

inst_121:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x03a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x02a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a; op2val:0x2a;
   valaddr_reg:x4; val_offset:190*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 190*FLEN/8, x5, x2, x3)

inst_122:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x03f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x041 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x3f; op2val:0x8041;
   valaddr_reg:x4; val_offset:192*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 192*FLEN/8, x5, x2, x3)

inst_123:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x004 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x024 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x4; op2val:0x24;
   valaddr_reg:x4; val_offset:194*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 194*FLEN/8, x5, x2, x3)

inst_124:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x004 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x044 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fsub.h ; op1:x30; op2:x29; dest:x31; op1val:0x4; op2val:0x44;
   valaddr_reg:x4; val_offset:196*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x3*/
TEST_FPRR_OP(fsub.h, x31, x30, x29, dyn, 0, 0, x4, 196*FLEN/8, x5, x2, x3)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(18,32,FLEN)
NAN_BOXED(18,32,FLEN)
NAN_BOXED(98,32,FLEN)
NAN_BOXED(96,32,FLEN)
NAN_BOXED(33,32,FLEN)
NAN_BOXED(29,32,FLEN)
NAN_BOXED(64,32,FLEN)
NAN_BOXED(56,32,FLEN)
NAN_BOXED(58,32,FLEN)
NAN_BOXED(58,32,FLEN)
NAN_BOXED(84,32,FLEN)
NAN_BOXED(52,32,FLEN)
NAN_BOXED(27,32,FLEN)
NAN_BOXED(32805,16,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(32833,16,FLEN)
NAN_BOXED(50,32,FLEN)
NAN_BOXED(32974,16,FLEN)
NAN_BOXED(78,32,FLEN)
NAN_BOXED(33202,16,FLEN)
NAN_BOXED(99,32,FLEN)
NAN_BOXED(100,32,FLEN)
NAN_BOXED(90,32,FLEN)
NAN_BOXED(92,32,FLEN)
NAN_BOXED(35,32,FLEN)
NAN_BOXED(39,32,FLEN)
test_dataset_1:
NAN_BOXED(30,32,FLEN)
NAN_BOXED(38,32,FLEN)
NAN_BOXED(14,32,FLEN)
NAN_BOXED(30,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4,32,FLEN)
NAN_BOXED(68,32,FLEN)
NAN_BOXED(70,32,FLEN)
NAN_BOXED(198,32,FLEN)
NAN_BOXED(49,32,FLEN)
NAN_BOXED(305,32,FLEN)
NAN_BOXED(28,32,FLEN)
NAN_BOXED(540,32,FLEN)
NAN_BOXED(15453,32,FLEN)
NAN_BOXED(11712,32,FLEN)
NAN_BOXED(15428,32,FLEN)
NAN_BOXED(11296,32,FLEN)
NAN_BOXED(15458,32,FLEN)
NAN_BOXED(11744,32,FLEN)
NAN_BOXED(15424,32,FLEN)
NAN_BOXED(11008,32,FLEN)
NAN_BOXED(15390,32,FLEN)
NAN_BOXED(8960,32,FLEN)
NAN_BOXED(15390,32,FLEN)
NAN_BOXED(38912,16,FLEN)
test_dataset_2:
NAN_BOXED(15389,16,FLEN)
NAN_BOXED(43104,16,FLEN)
NAN_BOXED(15419,16,FLEN)
NAN_BOXED(44112,16,FLEN)
NAN_BOXED(15363,16,FLEN)
NAN_BOXED(46056,16,FLEN)
NAN_BOXED(15432,16,FLEN)
NAN_BOXED(46816,16,FLEN)
NAN_BOXED(15373,16,FLEN)
NAN_BOXED(16391,16,FLEN)
NAN_BOXED(15441,16,FLEN)
NAN_BOXED(16425,16,FLEN)
NAN_BOXED(15398,16,FLEN)
NAN_BOXED(16405,16,FLEN)
NAN_BOXED(15456,16,FLEN)
NAN_BOXED(16436,16,FLEN)
NAN_BOXED(15453,16,FLEN)
NAN_BOXED(16438,16,FLEN)
NAN_BOXED(15425,16,FLEN)
NAN_BOXED(16432,16,FLEN)
NAN_BOXED(15425,16,FLEN)
NAN_BOXED(16448,16,FLEN)
NAN_BOXED(15385,16,FLEN)
NAN_BOXED(16460,16,FLEN)
NAN_BOXED(15397,16,FLEN)
NAN_BOXED(16530,16,FLEN)
NAN_BOXED(15424,16,FLEN)
NAN_BOXED(16672,16,FLEN)
NAN_BOXED(51,16,FLEN)
NAN_BOXED(49,16,FLEN)
NAN_BOXED(5,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(32,16,FLEN)
NAN_BOXED(27,16,FLEN)
NAN_BOXED(52,16,FLEN)
NAN_BOXED(43,16,FLEN)
NAN_BOXED(86,16,FLEN)
NAN_BOXED(69,16,FLEN)
NAN_BOXED(47,16,FLEN)
NAN_BOXED(14,16,FLEN)
NAN_BOXED(90,16,FLEN)
NAN_BOXED(25,16,FLEN)
NAN_BOXED(95,16,FLEN)
NAN_BOXED(32802,16,FLEN)
NAN_BOXED(12,16,FLEN)
NAN_BOXED(33013,16,FLEN)
NAN_BOXED(85,16,FLEN)
NAN_BOXED(33196,16,FLEN)
NAN_BOXED(14,16,FLEN)
NAN_BOXED(15,16,FLEN)
NAN_BOXED(67,16,FLEN)
NAN_BOXED(70,16,FLEN)
NAN_BOXED(48,16,FLEN)
NAN_BOXED(53,16,FLEN)
NAN_BOXED(94,16,FLEN)
NAN_BOXED(103,16,FLEN)
NAN_BOXED(61,16,FLEN)
NAN_BOXED(78,16,FLEN)
NAN_BOXED(40,16,FLEN)
NAN_BOXED(73,16,FLEN)
NAN_BOXED(79,16,FLEN)
NAN_BOXED(144,16,FLEN)
NAN_BOXED(75,16,FLEN)
NAN_BOXED(204,16,FLEN)
NAN_BOXED(83,16,FLEN)
NAN_BOXED(340,16,FLEN)
NAN_BOXED(22,16,FLEN)
NAN_BOXED(535,16,FLEN)
NAN_BOXED(30,16,FLEN)
NAN_BOXED(33760,16,FLEN)
NAN_BOXED(99,16,FLEN)
NAN_BOXED(33690,16,FLEN)
NAN_BOXED(70,16,FLEN)
NAN_BOXED(33717,16,FLEN)
NAN_BOXED(30,16,FLEN)
NAN_BOXED(33753,16,FLEN)
NAN_BOXED(66,16,FLEN)
NAN_BOXED(33709,16,FLEN)
NAN_BOXED(74,16,FLEN)
NAN_BOXED(33685,16,FLEN)
NAN_BOXED(59,16,FLEN)
NAN_BOXED(33668,16,FLEN)
NAN_BOXED(85,16,FLEN)
NAN_BOXED(33578,16,FLEN)
NAN_BOXED(78,16,FLEN)
NAN_BOXED(33457,16,FLEN)
NAN_BOXED(1,16,FLEN)
NAN_BOXED(33277,16,FLEN)
NAN_BOXED(95,16,FLEN)
NAN_BOXED(1117,16,FLEN)
NAN_BOXED(17,16,FLEN)
NAN_BOXED(1038,16,FLEN)
NAN_BOXED(72,16,FLEN)
NAN_BOXED(1091,16,FLEN)
NAN_BOXED(55,16,FLEN)
NAN_BOXED(1070,16,FLEN)
NAN_BOXED(62,16,FLEN)
NAN_BOXED(1069,16,FLEN)
NAN_BOXED(73,16,FLEN)
NAN_BOXED(1064,16,FLEN)
NAN_BOXED(26,16,FLEN)
NAN_BOXED(985,16,FLEN)
NAN_BOXED(53,16,FLEN)
NAN_BOXED(948,16,FLEN)
NAN_BOXED(46,16,FLEN)
NAN_BOXED(813,16,FLEN)
NAN_BOXED(45,16,FLEN)
NAN_BOXED(556,16,FLEN)
NAN_BOXED(1093,16,FLEN)
NAN_BOXED(68,16,FLEN)
NAN_BOXED(1104,16,FLEN)
NAN_BOXED(78,16,FLEN)
NAN_BOXED(1067,16,FLEN)
NAN_BOXED(39,16,FLEN)
NAN_BOXED(1101,16,FLEN)
NAN_BOXED(69,16,FLEN)
NAN_BOXED(1054,16,FLEN)
NAN_BOXED(14,16,FLEN)
NAN_BOXED(1047,16,FLEN)
NAN_BOXED(32777,16,FLEN)
NAN_BOXED(1099,16,FLEN)
NAN_BOXED(11,16,FLEN)
NAN_BOXED(1036,16,FLEN)
NAN_BOXED(32884,16,FLEN)
NAN_BOXED(1057,16,FLEN)
NAN_BOXED(32991,16,FLEN)
NAN_BOXED(1111,16,FLEN)
NAN_BOXED(33193,16,FLEN)
NAN_BOXED(1035,16,FLEN)
NAN_BOXED(2054,16,FLEN)
NAN_BOXED(1082,16,FLEN)
NAN_BOXED(2078,16,FLEN)
NAN_BOXED(1121,16,FLEN)
NAN_BOXED(2098,16,FLEN)
NAN_BOXED(1060,16,FLEN)
NAN_BOXED(2070,16,FLEN)
NAN_BOXED(1059,16,FLEN)
NAN_BOXED(2073,16,FLEN)
NAN_BOXED(1104,16,FLEN)
NAN_BOXED(2104,16,FLEN)
NAN_BOXED(1069,16,FLEN)
NAN_BOXED(2102,16,FLEN)
NAN_BOXED(1033,16,FLEN)
NAN_BOXED(2116,16,FLEN)
NAN_BOXED(1045,16,FLEN)
NAN_BOXED(2186,16,FLEN)
NAN_BOXED(1092,16,FLEN)
NAN_BOXED(2338,16,FLEN)
NAN_BOXED(30805,16,FLEN)
NAN_BOXED(63314,16,FLEN)
NAN_BOXED(30803,16,FLEN)
NAN_BOXED(63316,16,FLEN)
NAN_BOXED(30758,16,FLEN)
NAN_BOXED(63402,16,FLEN)
NAN_BOXED(30810,16,FLEN)
NAN_BOXED(63290,16,FLEN)
NAN_BOXED(30784,16,FLEN)
NAN_BOXED(63326,16,FLEN)
NAN_BOXED(30735,16,FLEN)
NAN_BOXED(63392,16,FLEN)
NAN_BOXED(30760,16,FLEN)
NAN_BOXED(63278,16,FLEN)
NAN_BOXED(30764,16,FLEN)
NAN_BOXED(63142,16,FLEN)
NAN_BOXED(30745,16,FLEN)
NAN_BOXED(62924,16,FLEN)
NAN_BOXED(30734,16,FLEN)
NAN_BOXED(62404,16,FLEN)
NAN_BOXED(30814,16,FLEN)
NAN_BOXED(31744,16,FLEN)
NAN_BOXED(30747,16,FLEN)
NAN_BOXED(31744,16,FLEN)
NAN_BOXED(30776,16,FLEN)
NAN_BOXED(31744,16,FLEN)
NAN_BOXED(30749,16,FLEN)
NAN_BOXED(31744,16,FLEN)
NAN_BOXED(30771,16,FLEN)
NAN_BOXED(31744,16,FLEN)
NAN_BOXED(30725,16,FLEN)
NAN_BOXED(31744,16,FLEN)
NAN_BOXED(30741,16,FLEN)
NAN_BOXED(31744,16,FLEN)
NAN_BOXED(30811,16,FLEN)
NAN_BOXED(31744,16,FLEN)
NAN_BOXED(30807,16,FLEN)
NAN_BOXED(31744,16,FLEN)
NAN_BOXED(30790,16,FLEN)
NAN_BOXED(31744,16,FLEN)
NAN_BOXED(18,16,FLEN)
NAN_BOXED(16,16,FLEN)
NAN_BOXED(58,16,FLEN)
NAN_BOXED(42,16,FLEN)
NAN_BOXED(63,16,FLEN)
NAN_BOXED(32833,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(36,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(68,16,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x12_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x12_1:
    .fill 28*((SIGALIGN)/4),4,0xdeadbeef


signature_x17_0:
    .fill 30*((SIGALIGN)/4),4,0xdeadbeef


signature_x2_0:
    .fill 192*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
