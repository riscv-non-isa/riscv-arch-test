
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.12.2
// timestamp : Wed Sep 25 05:45:15 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/testing/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/testing/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV32Zhinx/rv32h_fadd.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fadd.h instruction of the RISC-V RV32_Zfinx_Zhinx,RV64_Zfinx_Zhinx extension for the fadd_b8 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32I_Zfinx_Zhinx,RV64I_Zfinx_Zhinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*Zhinx.*);def TEST_CASE_1=True;",fadd_b8)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x4,test_dataset_0)
RVTEST_SIGBASE(x3,signature_x3_1)

inst_0:
// rs1 == rs2 != rd, rs1==x29, rs2==x29, rd==x28,fs1 == 0 and fe1 == 0x0c and fm1 == 0x0fa and fs2 == 1 and fe2 == 0x0c and fm2 == 0x0fa and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x29; op2:x29; dest:x28; op1val:0x30fa; op2val:0x30fa; 
   valaddr_reg:x4; val_offset:0*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2 
*/
TEST_FPRR_OP(fadd.h, x28, x29, x29, dyn, 0, 0, x4, 0*FLEN/8, x11, x3, x2)

inst_1:
// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x23, rs2==x28, rd==x7,fs1 == 0 and fe1 == 0x0c and fm1 == 0x0fa and fs2 == 1 and fe2 == 0x0c and fm2 == 0x0fa and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x23; op2:x28; dest:x7; op1val:0x30fa; op2val:0xb0fa; 
   valaddr_reg:x4; val_offset:2*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2 
*/
TEST_FPRR_OP(fadd.h, x7, x23, x28, dyn, 32, 0, x4, 2*FLEN/8, x11, x3, x2)

inst_2:
// rs1 == rs2 == rd, rs1==x21, rs2==x21, rd==x21,fs1 == 0 and fe1 == 0x0c and fm1 == 0x0fa and fs2 == 1 and fe2 == 0x0c and fm2 == 0x0fa and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x21; op2:x21; dest:x21; op1val:0x30fa; op2val:0x30fa; 
   valaddr_reg:x4; val_offset:4*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2 
*/
TEST_FPRR_OP(fadd.h, x21, x21, x21, dyn, 64, 0, x4, 4*FLEN/8, x11, x3, x2)

inst_3:
// rs2 == rd != rs1, rs1==x6, rs2==x0, rd==x0,fs1 == 0 and fe1 == 0x0c and fm1 == 0x0fa and fs2 == 1 and fe2 == 0x0c and fm2 == 0x0fa and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x6; op2:x0; dest:x0; op1val:0x30fa; op2val:0x0; 
   valaddr_reg:x4; val_offset:6*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2 
*/
TEST_FPRR_OP(fadd.h, x0, x6, x0, dyn, 96, 0, x4, 6*FLEN/8, x11, x3, x2)

inst_4:
// rs1 == rd != rs2, rs1==x10, rs2==x19, rd==x10,fs1 == 0 and fe1 == 0x0c and fm1 == 0x0fa and fs2 == 1 and fe2 == 0x0c and fm2 == 0x0fa and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x10; op2:x19; dest:x10; op1val:0x30fa; op2val:0xb0fa; 
   valaddr_reg:x4; val_offset:8*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2 
*/
TEST_FPRR_OP(fadd.h, x10, x10, x19, dyn, 128, 0, x4, 8*FLEN/8, x11, x3, x2)

inst_5:
// rs1==x12, rs2==x8, rd==x27,fs1 == 0 and fe1 == 0x0e and fm1 == 0x0a2 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0a2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x12; op2:x8; dest:x27; op1val:0x38a2; op2val:0xb8a2; 
   valaddr_reg:x4; val_offset:10*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2 
*/
TEST_FPRR_OP(fadd.h, x27, x12, x8, dyn, 0, 0, x4, 10*FLEN/8, x11, x3, x2)

inst_6:
// rs1==x22, rs2==x15, rd==x18,fs1 == 0 and fe1 == 0x0e and fm1 == 0x0a2 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0a2 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x22; op2:x15; dest:x18; op1val:0x38a2; op2val:0xb8a2; 
   valaddr_reg:x4; val_offset:12*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2 
*/
TEST_FPRR_OP(fadd.h, x18, x22, x15, dyn, 32, 0, x4, 12*FLEN/8, x11, x3, x2)

inst_7:
// rs1==x16, rs2==x13, rd==x31,fs1 == 0 and fe1 == 0x0e and fm1 == 0x0a2 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0a2 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x16; op2:x13; dest:x31; op1val:0x38a2; op2val:0xb8a2; 
   valaddr_reg:x4; val_offset:14*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2 
*/
TEST_FPRR_OP(fadd.h, x31, x16, x13, dyn, 64, 0, x4, 14*FLEN/8, x11, x3, x2)

inst_8:
// rs1==x1, rs2==x12, rd==x29,fs1 == 0 and fe1 == 0x0e and fm1 == 0x0a2 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0a2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x1; op2:x12; dest:x29; op1val:0x38a2; op2val:0xb8a2; 
   valaddr_reg:x4; val_offset:16*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2 
*/
TEST_FPRR_OP(fadd.h, x29, x1, x12, dyn, 96, 0, x4, 16*FLEN/8, x11, x3, x2)

inst_9:
// rs1==x26, rs2==x22, rd==x9,fs1 == 0 and fe1 == 0x0e and fm1 == 0x0a2 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0a2 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x26; op2:x22; dest:x9; op1val:0x38a2; op2val:0xb8a2; 
   valaddr_reg:x4; val_offset:18*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2 
*/
TEST_FPRR_OP(fadd.h, x9, x26, x22, dyn, 128, 0, x4, 18*FLEN/8, x11, x3, x2)

inst_10:
// rs1==x31, rs2==x24, rd==x25,fs1 == 0 and fe1 == 0x0d and fm1 == 0x3d1 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x3d1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x31; op2:x24; dest:x25; op1val:0x37d1; op2val:0xb7d1; 
   valaddr_reg:x4; val_offset:20*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2 
*/
TEST_FPRR_OP(fadd.h, x25, x31, x24, dyn, 0, 0, x4, 20*FLEN/8, x11, x3, x2)

inst_11:
// rs1==x13, rs2==x25, rd==x5,fs1 == 0 and fe1 == 0x0d and fm1 == 0x3d1 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x3d1 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x13; op2:x25; dest:x5; op1val:0x37d1; op2val:0xb7d1; 
   valaddr_reg:x4; val_offset:22*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2 
*/
TEST_FPRR_OP(fadd.h, x5, x13, x25, dyn, 32, 0, x4, 22*FLEN/8, x11, x3, x2)
RVTEST_VALBASEUPD(x6,test_dataset_1)

inst_12:
// rs1==x24, rs2==x27, rd==x14,fs1 == 0 and fe1 == 0x0d and fm1 == 0x3d1 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x3d1 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x24; op2:x27; dest:x14; op1val:0x37d1; op2val:0xb7d1; 
   valaddr_reg:x6; val_offset:0*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2 
*/
TEST_FPRR_OP(fadd.h, x14, x24, x27, dyn, 64, 0, x6, 0*FLEN/8, x13, x3, x2)

inst_13:
// rs1==x4, rs2==x9, rd==x22,fs1 == 0 and fe1 == 0x0d and fm1 == 0x3d1 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x3d1 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x4; op2:x9; dest:x22; op1val:0x37d1; op2val:0xb7d1; 
   valaddr_reg:x6; val_offset:2*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2 
*/
TEST_FPRR_OP(fadd.h, x22, x4, x9, dyn, 96, 0, x6, 2*FLEN/8, x13, x3, x2)

inst_14:
// rs1==x2, rs2==x7, rd==x8,fs1 == 0 and fe1 == 0x0d and fm1 == 0x3d1 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x3d1 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x2; op2:x7; dest:x8; op1val:0x37d1; op2val:0xb7d1; 
   valaddr_reg:x6; val_offset:4*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x21 
*/
TEST_FPRR_OP(fadd.h, x8, x2, x7, dyn, 128, 0, x6, 4*FLEN/8, x13, x3, x21)
RVTEST_SIGBASE(x10,signature_x10_0)

inst_15:
// rs1==x0, rs2==x30, rd==x11,fs1 == 0 and fe1 == 0x0c and fm1 == 0x2eb and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2eb and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x0; op2:x30; dest:x11; op1val:0x0; op2val:0xb2eb; 
   valaddr_reg:x6; val_offset:6*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x21 
*/
TEST_FPRR_OP(fadd.h, x11, x0, x30, dyn, 0, 0, x6, 6*FLEN/8, x13, x10, x21)

inst_16:
// rs1==x15, rs2==x31, rd==x12,fs1 == 0 and fe1 == 0x0c and fm1 == 0x2eb and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2eb and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x15; op2:x31; dest:x12; op1val:0x32eb; op2val:0xb2eb; 
   valaddr_reg:x6; val_offset:8*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x21 
*/
TEST_FPRR_OP(fadd.h, x12, x15, x31, dyn, 32, 0, x6, 8*FLEN/8, x13, x10, x21)

inst_17:
// rs1==x25, rs2==x5, rd==x1,fs1 == 0 and fe1 == 0x0c and fm1 == 0x2eb and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2eb and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x25; op2:x5; dest:x1; op1val:0x32eb; op2val:0xb2eb; 
   valaddr_reg:x6; val_offset:10*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x21 
*/
TEST_FPRR_OP(fadd.h, x1, x25, x5, dyn, 64, 0, x6, 10*FLEN/8, x13, x10, x21)

inst_18:
// rs1==x18, rs2==x17, rd==x19,fs1 == 0 and fe1 == 0x0c and fm1 == 0x2eb and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2eb and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x18; op2:x17; dest:x19; op1val:0x32eb; op2val:0xb2eb; 
   valaddr_reg:x6; val_offset:12*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x21 
*/
TEST_FPRR_OP(fadd.h, x19, x18, x17, dyn, 96, 0, x6, 12*FLEN/8, x13, x10, x21)

inst_19:
// rs1==x20, rs2==x16, rd==x30,fs1 == 0 and fe1 == 0x0c and fm1 == 0x2eb and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2eb and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x20; op2:x16; dest:x30; op1val:0x32eb; op2val:0xb2eb; 
   valaddr_reg:x6; val_offset:14*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x21 
*/
TEST_FPRR_OP(fadd.h, x30, x20, x16, dyn, 128, 0, x6, 14*FLEN/8, x13, x10, x21)
RVTEST_VALBASEUPD(x1,test_dataset_2)

inst_20:
// rs1==x28, rs2==x11, rd==x6,fs1 == 0 and fe1 == 0x0e and fm1 == 0x02f and fs2 == 1 and fe2 == 0x0e and fm2 == 0x02f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x28; op2:x11; dest:x6; op1val:0x382f; op2val:0xb82f; 
   valaddr_reg:x1; val_offset:0*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x21 
*/
TEST_FPRR_OP(fadd.h, x6, x28, x11, dyn, 0, 0, x1, 0*FLEN/8, x12, x10, x21)

inst_21:
// rs1==x8, rs2==x18, rd==x4,fs1 == 0 and fe1 == 0x0e and fm1 == 0x02f and fs2 == 1 and fe2 == 0x0e and fm2 == 0x02f and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x8; op2:x18; dest:x4; op1val:0x382f; op2val:0xb82f; 
   valaddr_reg:x1; val_offset:2*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x21 
*/
TEST_FPRR_OP(fadd.h, x4, x8, x18, dyn, 32, 0, x1, 2*FLEN/8, x12, x10, x21)

inst_22:
// rs1==x5, rs2==x23, rd==x13,fs1 == 0 and fe1 == 0x0e and fm1 == 0x02f and fs2 == 1 and fe2 == 0x0e and fm2 == 0x02f and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x5; op2:x23; dest:x13; op1val:0x382f; op2val:0xb82f; 
   valaddr_reg:x1; val_offset:4*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x21 
*/
TEST_FPRR_OP(fadd.h, x13, x5, x23, dyn, 64, 0, x1, 4*FLEN/8, x12, x10, x21)

inst_23:
// rs1==x9, rs2==x4, rd==x2,fs1 == 0 and fe1 == 0x0e and fm1 == 0x02f and fs2 == 1 and fe2 == 0x0e and fm2 == 0x02f and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x9; op2:x4; dest:x2; op1val:0x382f; op2val:0xb82f; 
   valaddr_reg:x1; val_offset:6*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x21 
*/
TEST_FPRR_OP(fadd.h, x2, x9, x4, dyn, 96, 0, x1, 6*FLEN/8, x12, x10, x21)

inst_24:
// rs1==x7, rs2==x14, rd==x15,fs1 == 0 and fe1 == 0x0e and fm1 == 0x02f and fs2 == 1 and fe2 == 0x0e and fm2 == 0x02f and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x7; op2:x14; dest:x15; op1val:0x382f; op2val:0xb82f; 
   valaddr_reg:x1; val_offset:8*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x21 
*/
TEST_FPRR_OP(fadd.h, x15, x7, x14, dyn, 128, 0, x1, 8*FLEN/8, x12, x10, x21)

inst_25:
// rs1==x3, rs2==x26, rd==x24,fs1 == 0 and fe1 == 0x0b and fm1 == 0x1e1 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x1e1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x3; op2:x26; dest:x24; op1val:0x2de1; op2val:0xade1; 
   valaddr_reg:x1; val_offset:10*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x21 
*/
TEST_FPRR_OP(fadd.h, x24, x3, x26, dyn, 0, 0, x1, 10*FLEN/8, x12, x10, x21)
RVTEST_SIGBASE(x4,signature_x4_0)

inst_26:
// rs1==x30, rs2==x6, rd==x23,fs1 == 0 and fe1 == 0x0b and fm1 == 0x1e1 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x1e1 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x6; dest:x23; op1val:0x2de1; op2val:0xade1; 
   valaddr_reg:x1; val_offset:12*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x23, x30, x6, dyn, 32, 0, x1, 12*FLEN/8, x12, x4, x5)

inst_27:
// rs1==x17, rs2==x20, rd==x16,fs1 == 0 and fe1 == 0x0b and fm1 == 0x1e1 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x1e1 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x17; op2:x20; dest:x16; op1val:0x2de1; op2val:0xade1; 
   valaddr_reg:x1; val_offset:14*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x16, x17, x20, dyn, 64, 0, x1, 14*FLEN/8, x12, x4, x5)

inst_28:
// rs1==x27, rs2==x10, rd==x3,fs1 == 0 and fe1 == 0x0b and fm1 == 0x1e1 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x1e1 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x27; op2:x10; dest:x3; op1val:0x2de1; op2val:0xade1; 
   valaddr_reg:x1; val_offset:16*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x3, x27, x10, dyn, 96, 0, x1, 16*FLEN/8, x12, x4, x5)

inst_29:
// rs1==x19, rs2==x2, rd==x20,fs1 == 0 and fe1 == 0x0b and fm1 == 0x1e1 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x1e1 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x19; op2:x2; dest:x20; op1val:0x2de1; op2val:0xade1; 
   valaddr_reg:x1; val_offset:18*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x20, x19, x2, dyn, 128, 0, x1, 18*FLEN/8, x12, x4, x5)
RVTEST_VALBASEUPD(x2,test_dataset_3)

inst_30:
// rs1==x11, rs2==x3, rd==x26,fs1 == 0 and fe1 == 0x0e and fm1 == 0x1be and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1be and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x11; op2:x3; dest:x26; op1val:0x39be; op2val:0xb9be; 
   valaddr_reg:x2; val_offset:0*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x26, x11, x3, dyn, 0, 0, x2, 0*FLEN/8, x6, x4, x5)

inst_31:
// rs1==x14, rs2==x1, rd==x17,fs1 == 0 and fe1 == 0x0e and fm1 == 0x1be and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1be and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x14; op2:x1; dest:x17; op1val:0x39be; op2val:0xb9be; 
   valaddr_reg:x2; val_offset:2*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x17, x14, x1, dyn, 32, 0, x2, 2*FLEN/8, x6, x4, x5)

inst_32:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1be and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1be and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39be; op2val:0xb9be; 
   valaddr_reg:x2; val_offset:4*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 4*FLEN/8, x6, x4, x5)

inst_33:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1be and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1be and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39be; op2val:0xb9be; 
   valaddr_reg:x2; val_offset:6*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 6*FLEN/8, x6, x4, x5)

inst_34:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1be and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1be and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39be; op2val:0xb9be; 
   valaddr_reg:x2; val_offset:8*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 8*FLEN/8, x6, x4, x5)

inst_35:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x21b and fs2 == 1 and fe2 == 0x0d and fm2 == 0x21b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x361b; op2val:0xb61b; 
   valaddr_reg:x2; val_offset:10*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 10*FLEN/8, x6, x4, x5)

inst_36:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x21b and fs2 == 1 and fe2 == 0x0d and fm2 == 0x21b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x361b; op2val:0xb61b; 
   valaddr_reg:x2; val_offset:12*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 12*FLEN/8, x6, x4, x5)

inst_37:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x21b and fs2 == 1 and fe2 == 0x0d and fm2 == 0x21b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x361b; op2val:0xb61b; 
   valaddr_reg:x2; val_offset:14*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 14*FLEN/8, x6, x4, x5)

inst_38:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x21b and fs2 == 1 and fe2 == 0x0d and fm2 == 0x21b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x361b; op2val:0xb61b; 
   valaddr_reg:x2; val_offset:16*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 16*FLEN/8, x6, x4, x5)

inst_39:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x21b and fs2 == 1 and fe2 == 0x0d and fm2 == 0x21b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x361b; op2val:0xb61b; 
   valaddr_reg:x2; val_offset:18*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 18*FLEN/8, x6, x4, x5)

inst_40:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1c6 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x1c6 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2dc6; op2val:0xadc6; 
   valaddr_reg:x2; val_offset:20*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 20*FLEN/8, x6, x4, x5)

inst_41:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1c6 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x1c6 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2dc6; op2val:0xadc6; 
   valaddr_reg:x2; val_offset:22*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 22*FLEN/8, x6, x4, x5)

inst_42:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1c6 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x1c6 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2dc6; op2val:0xadc6; 
   valaddr_reg:x2; val_offset:24*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 24*FLEN/8, x6, x4, x5)

inst_43:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1c6 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x1c6 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2dc6; op2val:0xadc6; 
   valaddr_reg:x2; val_offset:26*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 26*FLEN/8, x6, x4, x5)

inst_44:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1c6 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x1c6 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2dc6; op2val:0xadc6; 
   valaddr_reg:x2; val_offset:28*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 28*FLEN/8, x6, x4, x5)

inst_45:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x212 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x212 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3212; op2val:0xb212; 
   valaddr_reg:x2; val_offset:30*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 30*FLEN/8, x6, x4, x5)

inst_46:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x212 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x212 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3212; op2val:0xb212; 
   valaddr_reg:x2; val_offset:32*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 32*FLEN/8, x6, x4, x5)

inst_47:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x212 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x212 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3212; op2val:0xb212; 
   valaddr_reg:x2; val_offset:34*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 34*FLEN/8, x6, x4, x5)

inst_48:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x212 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x212 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3212; op2val:0xb212; 
   valaddr_reg:x2; val_offset:36*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 36*FLEN/8, x6, x4, x5)

inst_49:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x212 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x212 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3212; op2val:0xb212; 
   valaddr_reg:x2; val_offset:38*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 38*FLEN/8, x6, x4, x5)

inst_50:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x184 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x184 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3984; op2val:0xb984; 
   valaddr_reg:x2; val_offset:40*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 40*FLEN/8, x6, x4, x5)

inst_51:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x184 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x184 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3984; op2val:0xb984; 
   valaddr_reg:x2; val_offset:42*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 42*FLEN/8, x6, x4, x5)

inst_52:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x184 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x184 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3984; op2val:0xb984; 
   valaddr_reg:x2; val_offset:44*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 44*FLEN/8, x6, x4, x5)

inst_53:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x184 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x184 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3984; op2val:0xb984; 
   valaddr_reg:x2; val_offset:46*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 46*FLEN/8, x6, x4, x5)

inst_54:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x184 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x184 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3984; op2val:0xb984; 
   valaddr_reg:x2; val_offset:48*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 48*FLEN/8, x6, x4, x5)

inst_55:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x279 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x279 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2e79; op2val:0xae79; 
   valaddr_reg:x2; val_offset:50*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 50*FLEN/8, x6, x4, x5)

inst_56:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x279 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x279 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2e79; op2val:0xae79; 
   valaddr_reg:x2; val_offset:52*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 52*FLEN/8, x6, x4, x5)

inst_57:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x279 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x279 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2e79; op2val:0xae79; 
   valaddr_reg:x2; val_offset:54*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 54*FLEN/8, x6, x4, x5)

inst_58:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x279 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x279 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2e79; op2val:0xae79; 
   valaddr_reg:x2; val_offset:56*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 56*FLEN/8, x6, x4, x5)

inst_59:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x279 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x279 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2e79; op2val:0xae79; 
   valaddr_reg:x2; val_offset:58*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 58*FLEN/8, x6, x4, x5)

inst_60:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x039 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x039 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3839; op2val:0xb839; 
   valaddr_reg:x2; val_offset:60*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 60*FLEN/8, x6, x4, x5)

inst_61:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x039 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x039 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3839; op2val:0xb839; 
   valaddr_reg:x2; val_offset:62*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 62*FLEN/8, x6, x4, x5)

inst_62:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x039 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x039 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3839; op2val:0xb839; 
   valaddr_reg:x2; val_offset:64*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 64*FLEN/8, x6, x4, x5)

inst_63:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x039 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x039 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3839; op2val:0xb839; 
   valaddr_reg:x2; val_offset:66*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 66*FLEN/8, x6, x4, x5)

inst_64:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x039 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x039 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3839; op2val:0xb839; 
   valaddr_reg:x2; val_offset:68*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 68*FLEN/8, x6, x4, x5)

inst_65:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x086 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x086 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3886; op2val:0xb886; 
   valaddr_reg:x2; val_offset:70*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 70*FLEN/8, x6, x4, x5)

inst_66:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x086 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x086 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3886; op2val:0xb886; 
   valaddr_reg:x2; val_offset:72*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 72*FLEN/8, x6, x4, x5)

inst_67:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x086 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x086 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3886; op2val:0xb886; 
   valaddr_reg:x2; val_offset:74*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 74*FLEN/8, x6, x4, x5)

inst_68:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x086 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x086 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3886; op2val:0xb886; 
   valaddr_reg:x2; val_offset:76*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 76*FLEN/8, x6, x4, x5)

inst_69:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x086 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x086 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3886; op2val:0xb886; 
   valaddr_reg:x2; val_offset:78*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 78*FLEN/8, x6, x4, x5)

inst_70:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x191 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x191 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2d91; op2val:0xad91; 
   valaddr_reg:x2; val_offset:80*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 80*FLEN/8, x6, x4, x5)

inst_71:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x191 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x191 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2d91; op2val:0xad91; 
   valaddr_reg:x2; val_offset:82*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 82*FLEN/8, x6, x4, x5)

inst_72:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x191 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x191 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2d91; op2val:0xad91; 
   valaddr_reg:x2; val_offset:84*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 84*FLEN/8, x6, x4, x5)

inst_73:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x191 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x191 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2d91; op2val:0xad91; 
   valaddr_reg:x2; val_offset:86*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 86*FLEN/8, x6, x4, x5)

inst_74:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x191 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x191 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2d91; op2val:0xad91; 
   valaddr_reg:x2; val_offset:88*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 88*FLEN/8, x6, x4, x5)

inst_75:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1ea and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1ea and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39ea; op2val:0xb9ea; 
   valaddr_reg:x2; val_offset:90*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 90*FLEN/8, x6, x4, x5)

inst_76:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1ea and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1ea and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39ea; op2val:0xb9ea; 
   valaddr_reg:x2; val_offset:92*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 92*FLEN/8, x6, x4, x5)

inst_77:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1ea and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1ea and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39ea; op2val:0xb9ea; 
   valaddr_reg:x2; val_offset:94*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 94*FLEN/8, x6, x4, x5)

inst_78:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1ea and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1ea and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39ea; op2val:0xb9ea; 
   valaddr_reg:x2; val_offset:96*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 96*FLEN/8, x6, x4, x5)

inst_79:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1ea and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1ea and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39ea; op2val:0xb9ea; 
   valaddr_reg:x2; val_offset:98*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 98*FLEN/8, x6, x4, x5)

inst_80:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x338 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x338 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3738; op2val:0xb738; 
   valaddr_reg:x2; val_offset:100*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 100*FLEN/8, x6, x4, x5)

inst_81:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x338 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x338 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3738; op2val:0xb738; 
   valaddr_reg:x2; val_offset:102*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 102*FLEN/8, x6, x4, x5)

inst_82:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x338 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x338 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3738; op2val:0xb738; 
   valaddr_reg:x2; val_offset:104*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 104*FLEN/8, x6, x4, x5)

inst_83:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x338 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x338 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3738; op2val:0xb738; 
   valaddr_reg:x2; val_offset:106*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 106*FLEN/8, x6, x4, x5)

inst_84:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x338 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x338 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3738; op2val:0xb738; 
   valaddr_reg:x2; val_offset:108*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 108*FLEN/8, x6, x4, x5)

inst_85:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x07c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x07c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x347c; op2val:0xb47c; 
   valaddr_reg:x2; val_offset:110*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 110*FLEN/8, x6, x4, x5)

inst_86:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x07c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x07c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x347c; op2val:0xb47c; 
   valaddr_reg:x2; val_offset:112*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 112*FLEN/8, x6, x4, x5)

inst_87:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x07c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x07c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x347c; op2val:0xb47c; 
   valaddr_reg:x2; val_offset:114*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 114*FLEN/8, x6, x4, x5)

inst_88:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x07c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x07c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x347c; op2val:0xb47c; 
   valaddr_reg:x2; val_offset:116*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 116*FLEN/8, x6, x4, x5)

inst_89:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x07c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x07c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x347c; op2val:0xb47c; 
   valaddr_reg:x2; val_offset:118*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 118*FLEN/8, x6, x4, x5)

inst_90:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x19a and fs2 == 1 and fe2 == 0x0c and fm2 == 0x19a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x319a; op2val:0xb19a; 
   valaddr_reg:x2; val_offset:120*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 120*FLEN/8, x6, x4, x5)

inst_91:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x19a and fs2 == 1 and fe2 == 0x0c and fm2 == 0x19a and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x319a; op2val:0xb19a; 
   valaddr_reg:x2; val_offset:122*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 122*FLEN/8, x6, x4, x5)

inst_92:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x19a and fs2 == 1 and fe2 == 0x0c and fm2 == 0x19a and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x319a; op2val:0xb19a; 
   valaddr_reg:x2; val_offset:124*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 124*FLEN/8, x6, x4, x5)

inst_93:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x19a and fs2 == 1 and fe2 == 0x0c and fm2 == 0x19a and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x319a; op2val:0xb19a; 
   valaddr_reg:x2; val_offset:126*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 126*FLEN/8, x6, x4, x5)

inst_94:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x19a and fs2 == 1 and fe2 == 0x0c and fm2 == 0x19a and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x319a; op2val:0xb19a; 
   valaddr_reg:x2; val_offset:128*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 128*FLEN/8, x6, x4, x5)

inst_95:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3fd and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3fd and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bfd; op2val:0xbbfd; 
   valaddr_reg:x2; val_offset:130*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 130*FLEN/8, x6, x4, x5)

inst_96:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3fd and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3fd and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bfd; op2val:0xbbfd; 
   valaddr_reg:x2; val_offset:132*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 132*FLEN/8, x6, x4, x5)

inst_97:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3fd and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3fd and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bfd; op2val:0xbbfd; 
   valaddr_reg:x2; val_offset:134*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 134*FLEN/8, x6, x4, x5)

inst_98:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3fd and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3fd and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bfd; op2val:0xbbfd; 
   valaddr_reg:x2; val_offset:136*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 136*FLEN/8, x6, x4, x5)

inst_99:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3fd and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3fd and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bfd; op2val:0xbbfd; 
   valaddr_reg:x2; val_offset:138*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 138*FLEN/8, x6, x4, x5)

inst_100:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x03c and fs2 == 1 and fe2 == 0x0c and fm2 == 0x03c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x303c; op2val:0xb03c; 
   valaddr_reg:x2; val_offset:140*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 140*FLEN/8, x6, x4, x5)

inst_101:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x03c and fs2 == 1 and fe2 == 0x0c and fm2 == 0x03c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x303c; op2val:0xb03c; 
   valaddr_reg:x2; val_offset:142*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 142*FLEN/8, x6, x4, x5)

inst_102:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x03c and fs2 == 1 and fe2 == 0x0c and fm2 == 0x03c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x303c; op2val:0xb03c; 
   valaddr_reg:x2; val_offset:144*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 144*FLEN/8, x6, x4, x5)

inst_103:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x03c and fs2 == 1 and fe2 == 0x0c and fm2 == 0x03c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x303c; op2val:0xb03c; 
   valaddr_reg:x2; val_offset:146*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 146*FLEN/8, x6, x4, x5)

inst_104:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x03c and fs2 == 1 and fe2 == 0x0c and fm2 == 0x03c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x303c; op2val:0xb03c; 
   valaddr_reg:x2; val_offset:148*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 148*FLEN/8, x6, x4, x5)

inst_105:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x165 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x165 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3965; op2val:0xb965; 
   valaddr_reg:x2; val_offset:150*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 150*FLEN/8, x6, x4, x5)

inst_106:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x165 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x165 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3965; op2val:0xb965; 
   valaddr_reg:x2; val_offset:152*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 152*FLEN/8, x6, x4, x5)

inst_107:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x165 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x165 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3965; op2val:0xb965; 
   valaddr_reg:x2; val_offset:154*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 154*FLEN/8, x6, x4, x5)

inst_108:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x165 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x165 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3965; op2val:0xb965; 
   valaddr_reg:x2; val_offset:156*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 156*FLEN/8, x6, x4, x5)

inst_109:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x165 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x165 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3965; op2val:0xb965; 
   valaddr_reg:x2; val_offset:158*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 158*FLEN/8, x6, x4, x5)

inst_110:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x278 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x278 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a78; op2val:0xba78; 
   valaddr_reg:x2; val_offset:160*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 160*FLEN/8, x6, x4, x5)

inst_111:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x278 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x278 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a78; op2val:0xba78; 
   valaddr_reg:x2; val_offset:162*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 162*FLEN/8, x6, x4, x5)

inst_112:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x278 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x278 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a78; op2val:0xba78; 
   valaddr_reg:x2; val_offset:164*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 164*FLEN/8, x6, x4, x5)

inst_113:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x278 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x278 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a78; op2val:0xba78; 
   valaddr_reg:x2; val_offset:166*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 166*FLEN/8, x6, x4, x5)

inst_114:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x278 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x278 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a78; op2val:0xba78; 
   valaddr_reg:x2; val_offset:168*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 168*FLEN/8, x6, x4, x5)

inst_115:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x217 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x217 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a17; op2val:0xba17; 
   valaddr_reg:x2; val_offset:170*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 170*FLEN/8, x6, x4, x5)

inst_116:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x217 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x217 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a17; op2val:0xba17; 
   valaddr_reg:x2; val_offset:172*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 172*FLEN/8, x6, x4, x5)

inst_117:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x217 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x217 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a17; op2val:0xba17; 
   valaddr_reg:x2; val_offset:174*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 174*FLEN/8, x6, x4, x5)

inst_118:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x217 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x217 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a17; op2val:0xba17; 
   valaddr_reg:x2; val_offset:176*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 176*FLEN/8, x6, x4, x5)

inst_119:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x217 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x217 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a17; op2val:0xba17; 
   valaddr_reg:x2; val_offset:178*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 178*FLEN/8, x6, x4, x5)

inst_120:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x24c and fs2 == 1 and fe2 == 0x0c and fm2 == 0x24c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x324c; op2val:0xb24c; 
   valaddr_reg:x2; val_offset:180*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 180*FLEN/8, x6, x4, x5)

inst_121:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x24c and fs2 == 1 and fe2 == 0x0c and fm2 == 0x24c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x324c; op2val:0xb24c; 
   valaddr_reg:x2; val_offset:182*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 182*FLEN/8, x6, x4, x5)

inst_122:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x24c and fs2 == 1 and fe2 == 0x0c and fm2 == 0x24c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x324c; op2val:0xb24c; 
   valaddr_reg:x2; val_offset:184*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 184*FLEN/8, x6, x4, x5)

inst_123:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x24c and fs2 == 1 and fe2 == 0x0c and fm2 == 0x24c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x324c; op2val:0xb24c; 
   valaddr_reg:x2; val_offset:186*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 186*FLEN/8, x6, x4, x5)

inst_124:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x24c and fs2 == 1 and fe2 == 0x0c and fm2 == 0x24c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x324c; op2val:0xb24c; 
   valaddr_reg:x2; val_offset:188*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 188*FLEN/8, x6, x4, x5)

inst_125:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x35b and fs2 == 1 and fe2 == 0x0e and fm2 == 0x35b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b5b; op2val:0xbb5b; 
   valaddr_reg:x2; val_offset:190*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 190*FLEN/8, x6, x4, x5)

inst_126:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x35b and fs2 == 1 and fe2 == 0x0e and fm2 == 0x35b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b5b; op2val:0xbb5b; 
   valaddr_reg:x2; val_offset:192*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 192*FLEN/8, x6, x4, x5)

inst_127:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x35b and fs2 == 1 and fe2 == 0x0e and fm2 == 0x35b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b5b; op2val:0xbb5b; 
   valaddr_reg:x2; val_offset:194*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 194*FLEN/8, x6, x4, x5)

inst_128:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x35b and fs2 == 1 and fe2 == 0x0e and fm2 == 0x35b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b5b; op2val:0xbb5b; 
   valaddr_reg:x2; val_offset:196*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 196*FLEN/8, x6, x4, x5)

inst_129:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x35b and fs2 == 1 and fe2 == 0x0e and fm2 == 0x35b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b5b; op2val:0xbb5b; 
   valaddr_reg:x2; val_offset:198*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 198*FLEN/8, x6, x4, x5)

inst_130:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3df and fs2 == 1 and fe2 == 0x0d and fm2 == 0x3df and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37df; op2val:0xb7df; 
   valaddr_reg:x2; val_offset:200*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 200*FLEN/8, x6, x4, x5)

inst_131:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3df and fs2 == 1 and fe2 == 0x0d and fm2 == 0x3df and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37df; op2val:0xb7df; 
   valaddr_reg:x2; val_offset:202*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 202*FLEN/8, x6, x4, x5)

inst_132:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3df and fs2 == 1 and fe2 == 0x0d and fm2 == 0x3df and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37df; op2val:0xb7df; 
   valaddr_reg:x2; val_offset:204*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 204*FLEN/8, x6, x4, x5)

inst_133:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3df and fs2 == 1 and fe2 == 0x0d and fm2 == 0x3df and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37df; op2val:0xb7df; 
   valaddr_reg:x2; val_offset:206*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 206*FLEN/8, x6, x4, x5)

inst_134:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3df and fs2 == 1 and fe2 == 0x0d and fm2 == 0x3df and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37df; op2val:0xb7df; 
   valaddr_reg:x2; val_offset:208*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 208*FLEN/8, x6, x4, x5)

inst_135:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x320 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x320 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b20; op2val:0xbb20; 
   valaddr_reg:x2; val_offset:210*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 210*FLEN/8, x6, x4, x5)

inst_136:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x320 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x320 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b20; op2val:0xbb20; 
   valaddr_reg:x2; val_offset:212*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 212*FLEN/8, x6, x4, x5)

inst_137:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x320 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x320 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b20; op2val:0xbb20; 
   valaddr_reg:x2; val_offset:214*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 214*FLEN/8, x6, x4, x5)

inst_138:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x320 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x320 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b20; op2val:0xbb20; 
   valaddr_reg:x2; val_offset:216*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 216*FLEN/8, x6, x4, x5)

inst_139:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x320 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x320 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b20; op2val:0xbb20; 
   valaddr_reg:x2; val_offset:218*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 218*FLEN/8, x6, x4, x5)

inst_140:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0b1 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0b1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x34b1; op2val:0xb4b1; 
   valaddr_reg:x2; val_offset:220*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 220*FLEN/8, x6, x4, x5)

inst_141:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0b1 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0b1 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x34b1; op2val:0xb4b1; 
   valaddr_reg:x2; val_offset:222*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 222*FLEN/8, x6, x4, x5)

inst_142:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0b1 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0b1 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x34b1; op2val:0xb4b1; 
   valaddr_reg:x2; val_offset:224*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 224*FLEN/8, x6, x4, x5)

inst_143:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0b1 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0b1 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x34b1; op2val:0xb4b1; 
   valaddr_reg:x2; val_offset:226*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 226*FLEN/8, x6, x4, x5)

inst_144:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0b1 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0b1 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x34b1; op2val:0xb4b1; 
   valaddr_reg:x2; val_offset:228*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 228*FLEN/8, x6, x4, x5)

inst_145:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x1ef and fs2 == 1 and fe2 == 0x0c and fm2 == 0x1ef and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x31ef; op2val:0xb1ef; 
   valaddr_reg:x2; val_offset:230*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 230*FLEN/8, x6, x4, x5)

inst_146:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x1ef and fs2 == 1 and fe2 == 0x0c and fm2 == 0x1ef and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x31ef; op2val:0xb1ef; 
   valaddr_reg:x2; val_offset:232*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 232*FLEN/8, x6, x4, x5)

inst_147:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x1ef and fs2 == 1 and fe2 == 0x0c and fm2 == 0x1ef and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x31ef; op2val:0xb1ef; 
   valaddr_reg:x2; val_offset:234*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 234*FLEN/8, x6, x4, x5)

inst_148:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x1ef and fs2 == 1 and fe2 == 0x0c and fm2 == 0x1ef and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x31ef; op2val:0xb1ef; 
   valaddr_reg:x2; val_offset:236*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 236*FLEN/8, x6, x4, x5)

inst_149:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x1ef and fs2 == 1 and fe2 == 0x0c and fm2 == 0x1ef and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x31ef; op2val:0xb1ef; 
   valaddr_reg:x2; val_offset:238*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 238*FLEN/8, x6, x4, x5)

inst_150:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x0a0 and fs2 == 1 and fe2 == 0x0a and fm2 == 0x0a0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x28a0; op2val:0xa8a0; 
   valaddr_reg:x2; val_offset:240*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 240*FLEN/8, x6, x4, x5)

inst_151:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x0a0 and fs2 == 1 and fe2 == 0x0a and fm2 == 0x0a0 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x28a0; op2val:0xa8a0; 
   valaddr_reg:x2; val_offset:242*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 242*FLEN/8, x6, x4, x5)

inst_152:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x0a0 and fs2 == 1 and fe2 == 0x0a and fm2 == 0x0a0 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x28a0; op2val:0xa8a0; 
   valaddr_reg:x2; val_offset:244*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 244*FLEN/8, x6, x4, x5)

inst_153:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x0a0 and fs2 == 1 and fe2 == 0x0a and fm2 == 0x0a0 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x28a0; op2val:0xa8a0; 
   valaddr_reg:x2; val_offset:246*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 246*FLEN/8, x6, x4, x5)
RVTEST_SIGBASE(x4,signature_x4_1)

inst_154:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x0a0 and fs2 == 1 and fe2 == 0x0a and fm2 == 0x0a0 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x28a0; op2val:0xa8a0; 
   valaddr_reg:x2; val_offset:248*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 248*FLEN/8, x6, x4, x5)

inst_155:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x299 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x299 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3699; op2val:0xb699; 
   valaddr_reg:x2; val_offset:250*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 250*FLEN/8, x6, x4, x5)

inst_156:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x299 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x299 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3699; op2val:0xb699; 
   valaddr_reg:x2; val_offset:252*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 252*FLEN/8, x6, x4, x5)

inst_157:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x299 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x299 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3699; op2val:0xb699; 
   valaddr_reg:x2; val_offset:254*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 254*FLEN/8, x6, x4, x5)

inst_158:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x299 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x299 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3699; op2val:0xb699; 
   valaddr_reg:x2; val_offset:256*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 256*FLEN/8, x6, x4, x5)

inst_159:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x299 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x299 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3699; op2val:0xb699; 
   valaddr_reg:x2; val_offset:258*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 258*FLEN/8, x6, x4, x5)

inst_160:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x275 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x275 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3675; op2val:0xb675; 
   valaddr_reg:x2; val_offset:260*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 260*FLEN/8, x6, x4, x5)

inst_161:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x275 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x275 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3675; op2val:0xb675; 
   valaddr_reg:x2; val_offset:262*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 262*FLEN/8, x6, x4, x5)

inst_162:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x275 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x275 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3675; op2val:0xb675; 
   valaddr_reg:x2; val_offset:264*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 264*FLEN/8, x6, x4, x5)

inst_163:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x275 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x275 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3675; op2val:0xb675; 
   valaddr_reg:x2; val_offset:266*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 266*FLEN/8, x6, x4, x5)

inst_164:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x275 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x275 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3675; op2val:0xb675; 
   valaddr_reg:x2; val_offset:268*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 268*FLEN/8, x6, x4, x5)

inst_165:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2ca and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2ca and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36ca; op2val:0xb6ca; 
   valaddr_reg:x2; val_offset:270*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 270*FLEN/8, x6, x4, x5)

inst_166:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2ca and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2ca and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36ca; op2val:0xb6ca; 
   valaddr_reg:x2; val_offset:272*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 272*FLEN/8, x6, x4, x5)

inst_167:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2ca and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2ca and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36ca; op2val:0xb6ca; 
   valaddr_reg:x2; val_offset:274*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 274*FLEN/8, x6, x4, x5)

inst_168:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2ca and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2ca and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36ca; op2val:0xb6ca; 
   valaddr_reg:x2; val_offset:276*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 276*FLEN/8, x6, x4, x5)

inst_169:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2ca and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2ca and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36ca; op2val:0xb6ca; 
   valaddr_reg:x2; val_offset:278*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 278*FLEN/8, x6, x4, x5)

inst_170:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x27c and fs2 == 1 and fe2 == 0x0e and fm2 == 0x27c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a7c; op2val:0xba7c; 
   valaddr_reg:x2; val_offset:280*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 280*FLEN/8, x6, x4, x5)

inst_171:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x27c and fs2 == 1 and fe2 == 0x0e and fm2 == 0x27c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a7c; op2val:0xba7c; 
   valaddr_reg:x2; val_offset:282*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 282*FLEN/8, x6, x4, x5)

inst_172:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x27c and fs2 == 1 and fe2 == 0x0e and fm2 == 0x27c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a7c; op2val:0xba7c; 
   valaddr_reg:x2; val_offset:284*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 284*FLEN/8, x6, x4, x5)

inst_173:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x27c and fs2 == 1 and fe2 == 0x0e and fm2 == 0x27c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a7c; op2val:0xba7c; 
   valaddr_reg:x2; val_offset:286*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 286*FLEN/8, x6, x4, x5)

inst_174:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x27c and fs2 == 1 and fe2 == 0x0e and fm2 == 0x27c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a7c; op2val:0xba7c; 
   valaddr_reg:x2; val_offset:288*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 288*FLEN/8, x6, x4, x5)

inst_175:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x232 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x232 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3632; op2val:0xb632; 
   valaddr_reg:x2; val_offset:290*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 290*FLEN/8, x6, x4, x5)

inst_176:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x232 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x232 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3632; op2val:0xb632; 
   valaddr_reg:x2; val_offset:292*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 292*FLEN/8, x6, x4, x5)

inst_177:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x232 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x232 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3632; op2val:0xb632; 
   valaddr_reg:x2; val_offset:294*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 294*FLEN/8, x6, x4, x5)

inst_178:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x232 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x232 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3632; op2val:0xb632; 
   valaddr_reg:x2; val_offset:296*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 296*FLEN/8, x6, x4, x5)

inst_179:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x232 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x232 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3632; op2val:0xb632; 
   valaddr_reg:x2; val_offset:298*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 298*FLEN/8, x6, x4, x5)

inst_180:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x030 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x030 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3830; op2val:0xb830; 
   valaddr_reg:x2; val_offset:300*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 300*FLEN/8, x6, x4, x5)

inst_181:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x030 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x030 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3830; op2val:0xb830; 
   valaddr_reg:x2; val_offset:302*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 302*FLEN/8, x6, x4, x5)

inst_182:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x030 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x030 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3830; op2val:0xb830; 
   valaddr_reg:x2; val_offset:304*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 304*FLEN/8, x6, x4, x5)

inst_183:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x030 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x030 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3830; op2val:0xb830; 
   valaddr_reg:x2; val_offset:306*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 306*FLEN/8, x6, x4, x5)

inst_184:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x030 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x030 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3830; op2val:0xb830; 
   valaddr_reg:x2; val_offset:308*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 308*FLEN/8, x6, x4, x5)

inst_185:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3c1 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x3c1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x33c1; op2val:0xb3c1; 
   valaddr_reg:x2; val_offset:310*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 310*FLEN/8, x6, x4, x5)

inst_186:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3c1 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x3c1 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x33c1; op2val:0xb3c1; 
   valaddr_reg:x2; val_offset:312*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 312*FLEN/8, x6, x4, x5)

inst_187:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3c1 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x3c1 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x33c1; op2val:0xb3c1; 
   valaddr_reg:x2; val_offset:314*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 314*FLEN/8, x6, x4, x5)

inst_188:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3c1 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x3c1 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x33c1; op2val:0xb3c1; 
   valaddr_reg:x2; val_offset:316*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 316*FLEN/8, x6, x4, x5)

inst_189:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3c1 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x3c1 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x33c1; op2val:0xb3c1; 
   valaddr_reg:x2; val_offset:318*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 318*FLEN/8, x6, x4, x5)

inst_190:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x0e7 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x0e7 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2ce7; op2val:0xace7; 
   valaddr_reg:x2; val_offset:320*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 320*FLEN/8, x6, x4, x5)

inst_191:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x0e7 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x0e7 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2ce7; op2val:0xace7; 
   valaddr_reg:x2; val_offset:322*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 322*FLEN/8, x6, x4, x5)

inst_192:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x0e7 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x0e7 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2ce7; op2val:0xace7; 
   valaddr_reg:x2; val_offset:324*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 324*FLEN/8, x6, x4, x5)

inst_193:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x0e7 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x0e7 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2ce7; op2val:0xace7; 
   valaddr_reg:x2; val_offset:326*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 326*FLEN/8, x6, x4, x5)

inst_194:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x0e7 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x0e7 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2ce7; op2val:0xace7; 
   valaddr_reg:x2; val_offset:328*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 328*FLEN/8, x6, x4, x5)

inst_195:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x284 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x284 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2e84; op2val:0xae84; 
   valaddr_reg:x2; val_offset:330*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 330*FLEN/8, x6, x4, x5)

inst_196:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x284 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x284 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2e84; op2val:0xae84; 
   valaddr_reg:x2; val_offset:332*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 332*FLEN/8, x6, x4, x5)

inst_197:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x284 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x284 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2e84; op2val:0xae84; 
   valaddr_reg:x2; val_offset:334*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 334*FLEN/8, x6, x4, x5)

inst_198:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x284 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x284 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2e84; op2val:0xae84; 
   valaddr_reg:x2; val_offset:336*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 336*FLEN/8, x6, x4, x5)

inst_199:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x284 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x284 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2e84; op2val:0xae84; 
   valaddr_reg:x2; val_offset:338*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 338*FLEN/8, x6, x4, x5)

inst_200:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x359 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x359 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3759; op2val:0xb759; 
   valaddr_reg:x2; val_offset:340*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 340*FLEN/8, x6, x4, x5)

inst_201:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x359 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x359 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3759; op2val:0xb759; 
   valaddr_reg:x2; val_offset:342*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 342*FLEN/8, x6, x4, x5)

inst_202:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x359 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x359 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3759; op2val:0xb759; 
   valaddr_reg:x2; val_offset:344*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 344*FLEN/8, x6, x4, x5)

inst_203:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x359 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x359 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3759; op2val:0xb759; 
   valaddr_reg:x2; val_offset:346*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 346*FLEN/8, x6, x4, x5)

inst_204:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x359 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x359 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3759; op2val:0xb759; 
   valaddr_reg:x2; val_offset:348*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 348*FLEN/8, x6, x4, x5)

inst_205:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0b7 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0b7 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x34b7; op2val:0xb4b7; 
   valaddr_reg:x2; val_offset:350*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 350*FLEN/8, x6, x4, x5)

inst_206:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0b7 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0b7 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x34b7; op2val:0xb4b7; 
   valaddr_reg:x2; val_offset:352*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 352*FLEN/8, x6, x4, x5)

inst_207:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0b7 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0b7 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x34b7; op2val:0xb4b7; 
   valaddr_reg:x2; val_offset:354*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 354*FLEN/8, x6, x4, x5)

inst_208:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0b7 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0b7 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x34b7; op2val:0xb4b7; 
   valaddr_reg:x2; val_offset:356*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 356*FLEN/8, x6, x4, x5)

inst_209:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0b7 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0b7 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x34b7; op2val:0xb4b7; 
   valaddr_reg:x2; val_offset:358*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 358*FLEN/8, x6, x4, x5)

inst_210:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x207 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x207 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3207; op2val:0xb207; 
   valaddr_reg:x2; val_offset:360*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 360*FLEN/8, x6, x4, x5)

inst_211:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x207 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x207 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3207; op2val:0xb207; 
   valaddr_reg:x2; val_offset:362*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 362*FLEN/8, x6, x4, x5)

inst_212:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x207 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x207 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3207; op2val:0xb207; 
   valaddr_reg:x2; val_offset:364*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 364*FLEN/8, x6, x4, x5)

inst_213:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x207 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x207 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3207; op2val:0xb207; 
   valaddr_reg:x2; val_offset:366*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 366*FLEN/8, x6, x4, x5)

inst_214:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x207 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x207 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3207; op2val:0xb207; 
   valaddr_reg:x2; val_offset:368*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 368*FLEN/8, x6, x4, x5)

inst_215:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2b8 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x2b7 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2eb8; op2val:0xaeb7; 
   valaddr_reg:x2; val_offset:370*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 370*FLEN/8, x6, x4, x5)

inst_216:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2b8 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x2b7 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2eb8; op2val:0xaeb7; 
   valaddr_reg:x2; val_offset:372*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 372*FLEN/8, x6, x4, x5)

inst_217:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2b8 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x2b7 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2eb8; op2val:0xaeb7; 
   valaddr_reg:x2; val_offset:374*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 374*FLEN/8, x6, x4, x5)

inst_218:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2b8 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x2b7 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2eb8; op2val:0xaeb7; 
   valaddr_reg:x2; val_offset:376*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 376*FLEN/8, x6, x4, x5)

inst_219:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2b8 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x2b7 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2eb8; op2val:0xaeb7; 
   valaddr_reg:x2; val_offset:378*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 378*FLEN/8, x6, x4, x5)

inst_220:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x270 and fs2 == 1 and fe2 == 0x0a and fm2 == 0x26e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2a70; op2val:0xaa6e; 
   valaddr_reg:x2; val_offset:380*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 380*FLEN/8, x6, x4, x5)

inst_221:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x270 and fs2 == 1 and fe2 == 0x0a and fm2 == 0x26e and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2a70; op2val:0xaa6e; 
   valaddr_reg:x2; val_offset:382*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 382*FLEN/8, x6, x4, x5)

inst_222:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x270 and fs2 == 1 and fe2 == 0x0a and fm2 == 0x26e and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2a70; op2val:0xaa6e; 
   valaddr_reg:x2; val_offset:384*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 384*FLEN/8, x6, x4, x5)

inst_223:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x270 and fs2 == 1 and fe2 == 0x0a and fm2 == 0x26e and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2a70; op2val:0xaa6e; 
   valaddr_reg:x2; val_offset:386*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 386*FLEN/8, x6, x4, x5)

inst_224:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x270 and fs2 == 1 and fe2 == 0x0a and fm2 == 0x26e and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2a70; op2val:0xaa6e; 
   valaddr_reg:x2; val_offset:388*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 388*FLEN/8, x6, x4, x5)

inst_225:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x065 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x065 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3865; op2val:0xb865; 
   valaddr_reg:x2; val_offset:390*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 390*FLEN/8, x6, x4, x5)

inst_226:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x065 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x065 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3865; op2val:0xb865; 
   valaddr_reg:x2; val_offset:392*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 392*FLEN/8, x6, x4, x5)

inst_227:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x065 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x065 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3865; op2val:0xb865; 
   valaddr_reg:x2; val_offset:394*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 394*FLEN/8, x6, x4, x5)

inst_228:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x065 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x065 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3865; op2val:0xb865; 
   valaddr_reg:x2; val_offset:396*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 396*FLEN/8, x6, x4, x5)

inst_229:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x065 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x065 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3865; op2val:0xb865; 
   valaddr_reg:x2; val_offset:398*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 398*FLEN/8, x6, x4, x5)

inst_230:
// fs1 == 0 and fe1 == 0x06 and fm1 == 0x3c9 and fs2 == 1 and fe2 == 0x06 and fm2 == 0x3a9 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x1bc9; op2val:0x9ba9; 
   valaddr_reg:x2; val_offset:400*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 400*FLEN/8, x6, x4, x5)

inst_231:
// fs1 == 0 and fe1 == 0x06 and fm1 == 0x3c9 and fs2 == 1 and fe2 == 0x06 and fm2 == 0x3a9 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x1bc9; op2val:0x9ba9; 
   valaddr_reg:x2; val_offset:402*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 402*FLEN/8, x6, x4, x5)

inst_232:
// fs1 == 0 and fe1 == 0x06 and fm1 == 0x3c9 and fs2 == 1 and fe2 == 0x06 and fm2 == 0x3a9 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x1bc9; op2val:0x9ba9; 
   valaddr_reg:x2; val_offset:404*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 404*FLEN/8, x6, x4, x5)

inst_233:
// fs1 == 0 and fe1 == 0x06 and fm1 == 0x3c9 and fs2 == 1 and fe2 == 0x06 and fm2 == 0x3a9 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x1bc9; op2val:0x9ba9; 
   valaddr_reg:x2; val_offset:406*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 406*FLEN/8, x6, x4, x5)

inst_234:
// fs1 == 0 and fe1 == 0x06 and fm1 == 0x3c9 and fs2 == 1 and fe2 == 0x06 and fm2 == 0x3a9 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x1bc9; op2val:0x9ba9; 
   valaddr_reg:x2; val_offset:408*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 408*FLEN/8, x6, x4, x5)

inst_235:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x29d and fs2 == 1 and fe2 == 0x0c and fm2 == 0x29c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x329d; op2val:0xb29c; 
   valaddr_reg:x2; val_offset:410*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 410*FLEN/8, x6, x4, x5)

inst_236:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x29d and fs2 == 1 and fe2 == 0x0c and fm2 == 0x29c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x329d; op2val:0xb29c; 
   valaddr_reg:x2; val_offset:412*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 412*FLEN/8, x6, x4, x5)

inst_237:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x29d and fs2 == 1 and fe2 == 0x0c and fm2 == 0x29c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x329d; op2val:0xb29c; 
   valaddr_reg:x2; val_offset:414*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 414*FLEN/8, x6, x4, x5)

inst_238:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x29d and fs2 == 1 and fe2 == 0x0c and fm2 == 0x29c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x329d; op2val:0xb29c; 
   valaddr_reg:x2; val_offset:416*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 416*FLEN/8, x6, x4, x5)

inst_239:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x29d and fs2 == 1 and fe2 == 0x0c and fm2 == 0x29c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x329d; op2val:0xb29c; 
   valaddr_reg:x2; val_offset:418*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 418*FLEN/8, x6, x4, x5)

inst_240:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x232 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x231 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3632; op2val:0xb631; 
   valaddr_reg:x2; val_offset:420*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 420*FLEN/8, x6, x4, x5)

inst_241:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x232 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x231 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3632; op2val:0xb631; 
   valaddr_reg:x2; val_offset:422*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 422*FLEN/8, x6, x4, x5)

inst_242:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x232 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x231 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3632; op2val:0xb631; 
   valaddr_reg:x2; val_offset:424*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 424*FLEN/8, x6, x4, x5)

inst_243:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x232 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x231 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3632; op2val:0xb631; 
   valaddr_reg:x2; val_offset:426*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 426*FLEN/8, x6, x4, x5)

inst_244:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x232 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x231 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3632; op2val:0xb631; 
   valaddr_reg:x2; val_offset:428*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 428*FLEN/8, x6, x4, x5)

inst_245:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1eb and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1ea and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35eb; op2val:0xb5ea; 
   valaddr_reg:x2; val_offset:430*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 430*FLEN/8, x6, x4, x5)

inst_246:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1eb and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1ea and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35eb; op2val:0xb5ea; 
   valaddr_reg:x2; val_offset:432*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 432*FLEN/8, x6, x4, x5)

inst_247:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1eb and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1ea and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35eb; op2val:0xb5ea; 
   valaddr_reg:x2; val_offset:434*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 434*FLEN/8, x6, x4, x5)

inst_248:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1eb and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1ea and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35eb; op2val:0xb5ea; 
   valaddr_reg:x2; val_offset:436*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 436*FLEN/8, x6, x4, x5)

inst_249:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1eb and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1ea and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35eb; op2val:0xb5ea; 
   valaddr_reg:x2; val_offset:438*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 438*FLEN/8, x6, x4, x5)

inst_250:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x20e and fs2 == 1 and fe2 == 0x0e and fm2 == 0x20e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a0e; op2val:0xba0e; 
   valaddr_reg:x2; val_offset:440*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 440*FLEN/8, x6, x4, x5)

inst_251:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x20e and fs2 == 1 and fe2 == 0x0e and fm2 == 0x20e and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a0e; op2val:0xba0e; 
   valaddr_reg:x2; val_offset:442*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 442*FLEN/8, x6, x4, x5)

inst_252:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x20e and fs2 == 1 and fe2 == 0x0e and fm2 == 0x20e and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a0e; op2val:0xba0e; 
   valaddr_reg:x2; val_offset:444*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 444*FLEN/8, x6, x4, x5)

inst_253:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x20e and fs2 == 1 and fe2 == 0x0e and fm2 == 0x20e and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a0e; op2val:0xba0e; 
   valaddr_reg:x2; val_offset:446*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 446*FLEN/8, x6, x4, x5)

inst_254:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x20e and fs2 == 1 and fe2 == 0x0e and fm2 == 0x20e and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a0e; op2val:0xba0e; 
   valaddr_reg:x2; val_offset:448*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 448*FLEN/8, x6, x4, x5)

inst_255:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x310 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x30f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b10; op2val:0xbb0f; 
   valaddr_reg:x2; val_offset:450*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 450*FLEN/8, x6, x4, x5)

inst_256:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x310 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x30f and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b10; op2val:0xbb0f; 
   valaddr_reg:x2; val_offset:452*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 452*FLEN/8, x6, x4, x5)

inst_257:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x310 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x30f and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b10; op2val:0xbb0f; 
   valaddr_reg:x2; val_offset:454*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 454*FLEN/8, x6, x4, x5)

inst_258:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x310 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x30f and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b10; op2val:0xbb0f; 
   valaddr_reg:x2; val_offset:456*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 456*FLEN/8, x6, x4, x5)

inst_259:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x310 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x30f and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b10; op2val:0xbb0f; 
   valaddr_reg:x2; val_offset:458*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 458*FLEN/8, x6, x4, x5)

inst_260:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x293 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x292 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3293; op2val:0xb292; 
   valaddr_reg:x2; val_offset:460*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 460*FLEN/8, x6, x4, x5)

inst_261:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x293 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x292 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3293; op2val:0xb292; 
   valaddr_reg:x2; val_offset:462*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 462*FLEN/8, x6, x4, x5)

inst_262:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x293 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x292 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3293; op2val:0xb292; 
   valaddr_reg:x2; val_offset:464*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 464*FLEN/8, x6, x4, x5)

inst_263:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x293 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x292 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3293; op2val:0xb292; 
   valaddr_reg:x2; val_offset:466*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 466*FLEN/8, x6, x4, x5)

inst_264:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x293 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x292 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3293; op2val:0xb292; 
   valaddr_reg:x2; val_offset:468*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 468*FLEN/8, x6, x4, x5)

inst_265:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x1e4 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x1e3 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x31e4; op2val:0xb1e3; 
   valaddr_reg:x2; val_offset:470*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 470*FLEN/8, x6, x4, x5)

inst_266:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x1e4 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x1e3 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x31e4; op2val:0xb1e3; 
   valaddr_reg:x2; val_offset:472*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 472*FLEN/8, x6, x4, x5)

inst_267:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x1e4 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x1e3 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x31e4; op2val:0xb1e3; 
   valaddr_reg:x2; val_offset:474*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 474*FLEN/8, x6, x4, x5)

inst_268:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x1e4 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x1e3 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x31e4; op2val:0xb1e3; 
   valaddr_reg:x2; val_offset:476*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 476*FLEN/8, x6, x4, x5)

inst_269:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x1e4 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x1e3 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x31e4; op2val:0xb1e3; 
   valaddr_reg:x2; val_offset:478*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 478*FLEN/8, x6, x4, x5)

inst_270:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2d4 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2d4 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3ad4; op2val:0xbad4; 
   valaddr_reg:x2; val_offset:480*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 480*FLEN/8, x6, x4, x5)

inst_271:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2d4 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2d4 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3ad4; op2val:0xbad4; 
   valaddr_reg:x2; val_offset:482*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 482*FLEN/8, x6, x4, x5)

inst_272:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2d4 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2d4 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3ad4; op2val:0xbad4; 
   valaddr_reg:x2; val_offset:484*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 484*FLEN/8, x6, x4, x5)

inst_273:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2d4 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2d4 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3ad4; op2val:0xbad4; 
   valaddr_reg:x2; val_offset:486*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 486*FLEN/8, x6, x4, x5)

inst_274:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2d4 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2d4 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3ad4; op2val:0xbad4; 
   valaddr_reg:x2; val_offset:488*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 488*FLEN/8, x6, x4, x5)

inst_275:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3a3 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3a3 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3ba3; op2val:0xbba3; 
   valaddr_reg:x2; val_offset:490*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 490*FLEN/8, x6, x4, x5)

inst_276:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3a3 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3a3 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3ba3; op2val:0xbba3; 
   valaddr_reg:x2; val_offset:492*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 492*FLEN/8, x6, x4, x5)

inst_277:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3a3 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3a3 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3ba3; op2val:0xbba3; 
   valaddr_reg:x2; val_offset:494*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 494*FLEN/8, x6, x4, x5)

inst_278:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3a3 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3a3 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3ba3; op2val:0xbba3; 
   valaddr_reg:x2; val_offset:496*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 496*FLEN/8, x6, x4, x5)

inst_279:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3a3 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3a3 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3ba3; op2val:0xbba3; 
   valaddr_reg:x2; val_offset:498*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 498*FLEN/8, x6, x4, x5)

inst_280:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1c3 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x1c2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2dc3; op2val:0xadc2; 
   valaddr_reg:x2; val_offset:500*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 500*FLEN/8, x6, x4, x5)

inst_281:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1c3 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x1c2 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2dc3; op2val:0xadc2; 
   valaddr_reg:x2; val_offset:502*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 502*FLEN/8, x6, x4, x5)
RVTEST_SIGBASE(x4,signature_x4_2)

inst_282:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1c3 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x1c2 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2dc3; op2val:0xadc2; 
   valaddr_reg:x2; val_offset:504*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 504*FLEN/8, x6, x4, x5)

inst_283:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1c3 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x1c2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2dc3; op2val:0xadc2; 
   valaddr_reg:x2; val_offset:506*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 506*FLEN/8, x6, x4, x5)

inst_284:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1c3 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x1c2 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2dc3; op2val:0xadc2; 
   valaddr_reg:x2; val_offset:508*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 508*FLEN/8, x6, x4, x5)

inst_285:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x11c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x11c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x351c; op2val:0xb51c; 
   valaddr_reg:x2; val_offset:510*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 510*FLEN/8, x6, x4, x5)

inst_286:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x11c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x11c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x351c; op2val:0xb51c; 
   valaddr_reg:x2; val_offset:512*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 512*FLEN/8, x6, x4, x5)

inst_287:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x11c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x11c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x351c; op2val:0xb51c; 
   valaddr_reg:x2; val_offset:514*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 514*FLEN/8, x6, x4, x5)

inst_288:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x11c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x11c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x351c; op2val:0xb51c; 
   valaddr_reg:x2; val_offset:516*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 516*FLEN/8, x6, x4, x5)

inst_289:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x11c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x11c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x351c; op2val:0xb51c; 
   valaddr_reg:x2; val_offset:518*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 518*FLEN/8, x6, x4, x5)

inst_290:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1d7 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1d6 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35d7; op2val:0xb5d6; 
   valaddr_reg:x2; val_offset:520*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 520*FLEN/8, x6, x4, x5)

inst_291:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1d7 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1d6 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35d7; op2val:0xb5d6; 
   valaddr_reg:x2; val_offset:522*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 522*FLEN/8, x6, x4, x5)

inst_292:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1d7 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1d6 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35d7; op2val:0xb5d6; 
   valaddr_reg:x2; val_offset:524*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 524*FLEN/8, x6, x4, x5)

inst_293:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1d7 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1d6 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35d7; op2val:0xb5d6; 
   valaddr_reg:x2; val_offset:526*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 526*FLEN/8, x6, x4, x5)

inst_294:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1d7 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1d6 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35d7; op2val:0xb5d6; 
   valaddr_reg:x2; val_offset:528*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 528*FLEN/8, x6, x4, x5)

inst_295:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2c9 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2c8 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36c9; op2val:0xb6c8; 
   valaddr_reg:x2; val_offset:530*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 530*FLEN/8, x6, x4, x5)

inst_296:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2c9 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2c8 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36c9; op2val:0xb6c8; 
   valaddr_reg:x2; val_offset:532*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 532*FLEN/8, x6, x4, x5)

inst_297:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2c9 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2c8 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36c9; op2val:0xb6c8; 
   valaddr_reg:x2; val_offset:534*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 534*FLEN/8, x6, x4, x5)

inst_298:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2c9 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2c8 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36c9; op2val:0xb6c8; 
   valaddr_reg:x2; val_offset:536*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 536*FLEN/8, x6, x4, x5)

inst_299:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2c9 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2c8 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36c9; op2val:0xb6c8; 
   valaddr_reg:x2; val_offset:538*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 538*FLEN/8, x6, x4, x5)

inst_300:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x109 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x109 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3909; op2val:0xb909; 
   valaddr_reg:x2; val_offset:540*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 540*FLEN/8, x6, x4, x5)

inst_301:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x109 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x109 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3909; op2val:0xb909; 
   valaddr_reg:x2; val_offset:542*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 542*FLEN/8, x6, x4, x5)

inst_302:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x109 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x109 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3909; op2val:0xb909; 
   valaddr_reg:x2; val_offset:544*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 544*FLEN/8, x6, x4, x5)

inst_303:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x109 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x109 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3909; op2val:0xb909; 
   valaddr_reg:x2; val_offset:546*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 546*FLEN/8, x6, x4, x5)

inst_304:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x109 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x109 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3909; op2val:0xb909; 
   valaddr_reg:x2; val_offset:548*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 548*FLEN/8, x6, x4, x5)

inst_305:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3b5 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3b5 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bb5; op2val:0xbbb5; 
   valaddr_reg:x2; val_offset:550*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 550*FLEN/8, x6, x4, x5)

inst_306:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3b5 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3b5 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bb5; op2val:0xbbb5; 
   valaddr_reg:x2; val_offset:552*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 552*FLEN/8, x6, x4, x5)

inst_307:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3b5 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3b5 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bb5; op2val:0xbbb5; 
   valaddr_reg:x2; val_offset:554*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 554*FLEN/8, x6, x4, x5)

inst_308:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3b5 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3b5 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bb5; op2val:0xbbb5; 
   valaddr_reg:x2; val_offset:556*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 556*FLEN/8, x6, x4, x5)

inst_309:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3b5 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3b5 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bb5; op2val:0xbbb5; 
   valaddr_reg:x2; val_offset:558*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 558*FLEN/8, x6, x4, x5)

inst_310:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x0fe and fs2 == 1 and fe2 == 0x0a and fm2 == 0x0fc and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x28fe; op2val:0xa8fc; 
   valaddr_reg:x2; val_offset:560*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 560*FLEN/8, x6, x4, x5)

inst_311:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x0fe and fs2 == 1 and fe2 == 0x0a and fm2 == 0x0fc and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x28fe; op2val:0xa8fc; 
   valaddr_reg:x2; val_offset:562*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 562*FLEN/8, x6, x4, x5)

inst_312:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x0fe and fs2 == 1 and fe2 == 0x0a and fm2 == 0x0fc and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x28fe; op2val:0xa8fc; 
   valaddr_reg:x2; val_offset:564*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 564*FLEN/8, x6, x4, x5)

inst_313:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x0fe and fs2 == 1 and fe2 == 0x0a and fm2 == 0x0fc and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x28fe; op2val:0xa8fc; 
   valaddr_reg:x2; val_offset:566*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 566*FLEN/8, x6, x4, x5)

inst_314:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x0fe and fs2 == 1 and fe2 == 0x0a and fm2 == 0x0fc and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x28fe; op2val:0xa8fc; 
   valaddr_reg:x2; val_offset:568*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 568*FLEN/8, x6, x4, x5)

inst_315:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x302 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x302 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b02; op2val:0xbb02; 
   valaddr_reg:x2; val_offset:570*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 570*FLEN/8, x6, x4, x5)

inst_316:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x302 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x302 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b02; op2val:0xbb02; 
   valaddr_reg:x2; val_offset:572*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 572*FLEN/8, x6, x4, x5)

inst_317:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x302 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x302 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b02; op2val:0xbb02; 
   valaddr_reg:x2; val_offset:574*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 574*FLEN/8, x6, x4, x5)

inst_318:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x302 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x302 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b02; op2val:0xbb02; 
   valaddr_reg:x2; val_offset:576*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 576*FLEN/8, x6, x4, x5)

inst_319:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x302 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x302 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b02; op2val:0xbb02; 
   valaddr_reg:x2; val_offset:578*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 578*FLEN/8, x6, x4, x5)

inst_320:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x260 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x260 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3260; op2val:0xb260; 
   valaddr_reg:x2; val_offset:580*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 580*FLEN/8, x6, x4, x5)

inst_321:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x260 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x260 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3260; op2val:0xb260; 
   valaddr_reg:x2; val_offset:582*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 582*FLEN/8, x6, x4, x5)

inst_322:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x260 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x260 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3260; op2val:0xb260; 
   valaddr_reg:x2; val_offset:584*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 584*FLEN/8, x6, x4, x5)

inst_323:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x260 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x260 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3260; op2val:0xb260; 
   valaddr_reg:x2; val_offset:586*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 586*FLEN/8, x6, x4, x5)

inst_324:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x260 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x260 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3260; op2val:0xb260; 
   valaddr_reg:x2; val_offset:588*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 588*FLEN/8, x6, x4, x5)

inst_325:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3d1 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3d1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bd1; op2val:0xbbd1; 
   valaddr_reg:x2; val_offset:590*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 590*FLEN/8, x6, x4, x5)

inst_326:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3d1 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3d1 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bd1; op2val:0xbbd1; 
   valaddr_reg:x2; val_offset:592*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 592*FLEN/8, x6, x4, x5)

inst_327:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3d1 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3d1 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bd1; op2val:0xbbd1; 
   valaddr_reg:x2; val_offset:594*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 594*FLEN/8, x6, x4, x5)

inst_328:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3d1 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3d1 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bd1; op2val:0xbbd1; 
   valaddr_reg:x2; val_offset:596*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 596*FLEN/8, x6, x4, x5)

inst_329:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3d1 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3d1 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bd1; op2val:0xbbd1; 
   valaddr_reg:x2; val_offset:598*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 598*FLEN/8, x6, x4, x5)

inst_330:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x330 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x330 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b30; op2val:0xbb30; 
   valaddr_reg:x2; val_offset:600*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 600*FLEN/8, x6, x4, x5)

inst_331:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x330 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x330 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b30; op2val:0xbb30; 
   valaddr_reg:x2; val_offset:602*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 602*FLEN/8, x6, x4, x5)

inst_332:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x330 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x330 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b30; op2val:0xbb30; 
   valaddr_reg:x2; val_offset:604*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 604*FLEN/8, x6, x4, x5)

inst_333:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x330 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x330 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b30; op2val:0xbb30; 
   valaddr_reg:x2; val_offset:606*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 606*FLEN/8, x6, x4, x5)

inst_334:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x330 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x330 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b30; op2val:0xbb30; 
   valaddr_reg:x2; val_offset:608*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 608*FLEN/8, x6, x4, x5)

inst_335:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x23b and fs2 == 1 and fe2 == 0x0e and fm2 == 0x23b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a3b; op2val:0xba3b; 
   valaddr_reg:x2; val_offset:610*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 610*FLEN/8, x6, x4, x5)

inst_336:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x23b and fs2 == 1 and fe2 == 0x0e and fm2 == 0x23b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a3b; op2val:0xba3b; 
   valaddr_reg:x2; val_offset:612*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 612*FLEN/8, x6, x4, x5)

inst_337:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x23b and fs2 == 1 and fe2 == 0x0e and fm2 == 0x23b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a3b; op2val:0xba3b; 
   valaddr_reg:x2; val_offset:614*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 614*FLEN/8, x6, x4, x5)

inst_338:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x23b and fs2 == 1 and fe2 == 0x0e and fm2 == 0x23b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a3b; op2val:0xba3b; 
   valaddr_reg:x2; val_offset:616*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 616*FLEN/8, x6, x4, x5)

inst_339:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x23b and fs2 == 1 and fe2 == 0x0e and fm2 == 0x23b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a3b; op2val:0xba3b; 
   valaddr_reg:x2; val_offset:618*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 618*FLEN/8, x6, x4, x5)

inst_340:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x132 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x132 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3932; op2val:0xb932; 
   valaddr_reg:x2; val_offset:620*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 620*FLEN/8, x6, x4, x5)

inst_341:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x132 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x132 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3932; op2val:0xb932; 
   valaddr_reg:x2; val_offset:622*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 622*FLEN/8, x6, x4, x5)

inst_342:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x132 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x132 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3932; op2val:0xb932; 
   valaddr_reg:x2; val_offset:624*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 624*FLEN/8, x6, x4, x5)

inst_343:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x132 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x132 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3932; op2val:0xb932; 
   valaddr_reg:x2; val_offset:626*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 626*FLEN/8, x6, x4, x5)

inst_344:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x132 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x132 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3932; op2val:0xb932; 
   valaddr_reg:x2; val_offset:628*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 628*FLEN/8, x6, x4, x5)

inst_345:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3f1 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x3f0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37f1; op2val:0xb7f0; 
   valaddr_reg:x2; val_offset:630*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 630*FLEN/8, x6, x4, x5)

inst_346:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3f1 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x3f0 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37f1; op2val:0xb7f0; 
   valaddr_reg:x2; val_offset:632*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 632*FLEN/8, x6, x4, x5)

inst_347:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3f1 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x3f0 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37f1; op2val:0xb7f0; 
   valaddr_reg:x2; val_offset:634*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 634*FLEN/8, x6, x4, x5)

inst_348:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3f1 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x3f0 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37f1; op2val:0xb7f0; 
   valaddr_reg:x2; val_offset:636*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 636*FLEN/8, x6, x4, x5)

inst_349:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3f1 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x3f0 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37f1; op2val:0xb7f0; 
   valaddr_reg:x2; val_offset:638*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 638*FLEN/8, x6, x4, x5)

inst_350:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x331 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x331 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b31; op2val:0xbb31; 
   valaddr_reg:x2; val_offset:640*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 640*FLEN/8, x6, x4, x5)

inst_351:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x331 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x331 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b31; op2val:0xbb31; 
   valaddr_reg:x2; val_offset:642*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 642*FLEN/8, x6, x4, x5)

inst_352:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x331 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x331 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b31; op2val:0xbb31; 
   valaddr_reg:x2; val_offset:644*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 644*FLEN/8, x6, x4, x5)

inst_353:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x331 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x331 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b31; op2val:0xbb31; 
   valaddr_reg:x2; val_offset:646*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 646*FLEN/8, x6, x4, x5)

inst_354:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x331 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x331 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b31; op2val:0xbb31; 
   valaddr_reg:x2; val_offset:648*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 648*FLEN/8, x6, x4, x5)

inst_355:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x267 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x267 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a67; op2val:0xba67; 
   valaddr_reg:x2; val_offset:650*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 650*FLEN/8, x6, x4, x5)

inst_356:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x267 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x267 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a67; op2val:0xba67; 
   valaddr_reg:x2; val_offset:652*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 652*FLEN/8, x6, x4, x5)

inst_357:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x267 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x267 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a67; op2val:0xba67; 
   valaddr_reg:x2; val_offset:654*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 654*FLEN/8, x6, x4, x5)

inst_358:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x267 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x267 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a67; op2val:0xba67; 
   valaddr_reg:x2; val_offset:656*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 656*FLEN/8, x6, x4, x5)

inst_359:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x267 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x267 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a67; op2val:0xba67; 
   valaddr_reg:x2; val_offset:658*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 658*FLEN/8, x6, x4, x5)

inst_360:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x04b and fs2 == 1 and fe2 == 0x0d and fm2 == 0x04b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x344b; op2val:0xb44b; 
   valaddr_reg:x2; val_offset:660*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 660*FLEN/8, x6, x4, x5)

inst_361:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x04b and fs2 == 1 and fe2 == 0x0d and fm2 == 0x04b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x344b; op2val:0xb44b; 
   valaddr_reg:x2; val_offset:662*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 662*FLEN/8, x6, x4, x5)

inst_362:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x04b and fs2 == 1 and fe2 == 0x0d and fm2 == 0x04b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x344b; op2val:0xb44b; 
   valaddr_reg:x2; val_offset:664*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 664*FLEN/8, x6, x4, x5)

inst_363:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x04b and fs2 == 1 and fe2 == 0x0d and fm2 == 0x04b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x344b; op2val:0xb44b; 
   valaddr_reg:x2; val_offset:666*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 666*FLEN/8, x6, x4, x5)

inst_364:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x04b and fs2 == 1 and fe2 == 0x0d and fm2 == 0x04b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x344b; op2val:0xb44b; 
   valaddr_reg:x2; val_offset:668*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 668*FLEN/8, x6, x4, x5)

inst_365:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x138 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x137 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2d38; op2val:0xad37; 
   valaddr_reg:x2; val_offset:670*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 670*FLEN/8, x6, x4, x5)

inst_366:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x138 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x137 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2d38; op2val:0xad37; 
   valaddr_reg:x2; val_offset:672*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 672*FLEN/8, x6, x4, x5)

inst_367:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x138 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x137 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2d38; op2val:0xad37; 
   valaddr_reg:x2; val_offset:674*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 674*FLEN/8, x6, x4, x5)

inst_368:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x138 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x137 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2d38; op2val:0xad37; 
   valaddr_reg:x2; val_offset:676*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 676*FLEN/8, x6, x4, x5)

inst_369:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x138 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x137 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2d38; op2val:0xad37; 
   valaddr_reg:x2; val_offset:678*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 678*FLEN/8, x6, x4, x5)

inst_370:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x13d and fs2 == 1 and fe2 == 0x0d and fm2 == 0x13c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x353d; op2val:0xb53c; 
   valaddr_reg:x2; val_offset:680*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 680*FLEN/8, x6, x4, x5)

inst_371:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x13d and fs2 == 1 and fe2 == 0x0d and fm2 == 0x13c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x353d; op2val:0xb53c; 
   valaddr_reg:x2; val_offset:682*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 682*FLEN/8, x6, x4, x5)

inst_372:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x13d and fs2 == 1 and fe2 == 0x0d and fm2 == 0x13c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x353d; op2val:0xb53c; 
   valaddr_reg:x2; val_offset:684*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 684*FLEN/8, x6, x4, x5)

inst_373:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x13d and fs2 == 1 and fe2 == 0x0d and fm2 == 0x13c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x353d; op2val:0xb53c; 
   valaddr_reg:x2; val_offset:686*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 686*FLEN/8, x6, x4, x5)

inst_374:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x13d and fs2 == 1 and fe2 == 0x0d and fm2 == 0x13c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x353d; op2val:0xb53c; 
   valaddr_reg:x2; val_offset:688*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 688*FLEN/8, x6, x4, x5)

inst_375:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x389 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x388 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b89; op2val:0xbb88; 
   valaddr_reg:x2; val_offset:690*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 690*FLEN/8, x6, x4, x5)

inst_376:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x389 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x388 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b89; op2val:0xbb88; 
   valaddr_reg:x2; val_offset:692*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 692*FLEN/8, x6, x4, x5)

inst_377:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x389 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x388 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b89; op2val:0xbb88; 
   valaddr_reg:x2; val_offset:694*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 694*FLEN/8, x6, x4, x5)

inst_378:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x389 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x388 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b89; op2val:0xbb88; 
   valaddr_reg:x2; val_offset:696*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 696*FLEN/8, x6, x4, x5)

inst_379:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x389 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x388 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b89; op2val:0xbb88; 
   valaddr_reg:x2; val_offset:698*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 698*FLEN/8, x6, x4, x5)

inst_380:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x0f2 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x0f2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x30f2; op2val:0xb0f2; 
   valaddr_reg:x2; val_offset:700*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 700*FLEN/8, x6, x4, x5)

inst_381:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x0f2 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x0f2 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x30f2; op2val:0xb0f2; 
   valaddr_reg:x2; val_offset:702*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 702*FLEN/8, x6, x4, x5)

inst_382:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x0f2 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x0f2 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x30f2; op2val:0xb0f2; 
   valaddr_reg:x2; val_offset:704*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 704*FLEN/8, x6, x4, x5)

inst_383:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x0f2 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x0f2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x30f2; op2val:0xb0f2; 
   valaddr_reg:x2; val_offset:706*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 706*FLEN/8, x6, x4, x5)

inst_384:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x0f2 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x0f2 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x30f2; op2val:0xb0f2; 
   valaddr_reg:x2; val_offset:708*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 708*FLEN/8, x6, x4, x5)

inst_385:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1fe and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1fe and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39fe; op2val:0xb9fe; 
   valaddr_reg:x2; val_offset:710*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 710*FLEN/8, x6, x4, x5)

inst_386:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1fe and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1fe and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39fe; op2val:0xb9fe; 
   valaddr_reg:x2; val_offset:712*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 712*FLEN/8, x6, x4, x5)

inst_387:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1fe and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1fe and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39fe; op2val:0xb9fe; 
   valaddr_reg:x2; val_offset:714*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 714*FLEN/8, x6, x4, x5)

inst_388:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1fe and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1fe and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39fe; op2val:0xb9fe; 
   valaddr_reg:x2; val_offset:716*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 716*FLEN/8, x6, x4, x5)

inst_389:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1fe and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1fe and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39fe; op2val:0xb9fe; 
   valaddr_reg:x2; val_offset:718*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 718*FLEN/8, x6, x4, x5)

inst_390:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x076 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x076 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3876; op2val:0xb876; 
   valaddr_reg:x2; val_offset:720*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 720*FLEN/8, x6, x4, x5)

inst_391:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x076 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x076 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3876; op2val:0xb876; 
   valaddr_reg:x2; val_offset:722*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 722*FLEN/8, x6, x4, x5)

inst_392:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x076 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x076 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3876; op2val:0xb876; 
   valaddr_reg:x2; val_offset:724*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 724*FLEN/8, x6, x4, x5)

inst_393:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x076 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x076 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3876; op2val:0xb876; 
   valaddr_reg:x2; val_offset:726*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 726*FLEN/8, x6, x4, x5)

inst_394:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x076 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x076 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3876; op2val:0xb876; 
   valaddr_reg:x2; val_offset:728*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 728*FLEN/8, x6, x4, x5)

inst_395:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x03a and fs2 == 1 and fe2 == 0x0e and fm2 == 0x03a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x383a; op2val:0xb83a; 
   valaddr_reg:x2; val_offset:730*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 730*FLEN/8, x6, x4, x5)

inst_396:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x03a and fs2 == 1 and fe2 == 0x0e and fm2 == 0x03a and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x383a; op2val:0xb83a; 
   valaddr_reg:x2; val_offset:732*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 732*FLEN/8, x6, x4, x5)

inst_397:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x03a and fs2 == 1 and fe2 == 0x0e and fm2 == 0x03a and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x383a; op2val:0xb83a; 
   valaddr_reg:x2; val_offset:734*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 734*FLEN/8, x6, x4, x5)

inst_398:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x03a and fs2 == 1 and fe2 == 0x0e and fm2 == 0x03a and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x383a; op2val:0xb83a; 
   valaddr_reg:x2; val_offset:736*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 736*FLEN/8, x6, x4, x5)

inst_399:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x03a and fs2 == 1 and fe2 == 0x0e and fm2 == 0x03a and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x383a; op2val:0xb83a; 
   valaddr_reg:x2; val_offset:738*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 738*FLEN/8, x6, x4, x5)

inst_400:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2e5 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2e4 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36e5; op2val:0xb6e4; 
   valaddr_reg:x2; val_offset:740*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 740*FLEN/8, x6, x4, x5)

inst_401:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2e5 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2e4 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36e5; op2val:0xb6e4; 
   valaddr_reg:x2; val_offset:742*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 742*FLEN/8, x6, x4, x5)

inst_402:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2e5 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2e4 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36e5; op2val:0xb6e4; 
   valaddr_reg:x2; val_offset:744*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 744*FLEN/8, x6, x4, x5)

inst_403:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2e5 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2e4 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36e5; op2val:0xb6e4; 
   valaddr_reg:x2; val_offset:746*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 746*FLEN/8, x6, x4, x5)

inst_404:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2e5 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2e4 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36e5; op2val:0xb6e4; 
   valaddr_reg:x2; val_offset:748*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 748*FLEN/8, x6, x4, x5)

inst_405:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x182 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x182 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3982; op2val:0xb982; 
   valaddr_reg:x2; val_offset:750*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 750*FLEN/8, x6, x4, x5)

inst_406:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x182 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x182 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3982; op2val:0xb982; 
   valaddr_reg:x2; val_offset:752*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 752*FLEN/8, x6, x4, x5)

inst_407:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x182 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x182 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3982; op2val:0xb982; 
   valaddr_reg:x2; val_offset:754*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 754*FLEN/8, x6, x4, x5)

inst_408:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x182 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x182 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3982; op2val:0xb982; 
   valaddr_reg:x2; val_offset:756*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 756*FLEN/8, x6, x4, x5)

inst_409:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x182 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x182 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3982; op2val:0xb982; 
   valaddr_reg:x2; val_offset:758*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 758*FLEN/8, x6, x4, x5)
RVTEST_SIGBASE(x4,signature_x4_3)

inst_410:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x132 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x131 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3132; op2val:0xb131; 
   valaddr_reg:x2; val_offset:760*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 760*FLEN/8, x6, x4, x5)

inst_411:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x132 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x131 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3132; op2val:0xb131; 
   valaddr_reg:x2; val_offset:762*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 762*FLEN/8, x6, x4, x5)

inst_412:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x132 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x131 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3132; op2val:0xb131; 
   valaddr_reg:x2; val_offset:764*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 764*FLEN/8, x6, x4, x5)

inst_413:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x132 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x131 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3132; op2val:0xb131; 
   valaddr_reg:x2; val_offset:766*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 766*FLEN/8, x6, x4, x5)

inst_414:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x132 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x131 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3132; op2val:0xb131; 
   valaddr_reg:x2; val_offset:768*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 768*FLEN/8, x6, x4, x5)

inst_415:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x307 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x307 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3707; op2val:0xb707; 
   valaddr_reg:x2; val_offset:770*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 770*FLEN/8, x6, x4, x5)

inst_416:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x307 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x307 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3707; op2val:0xb707; 
   valaddr_reg:x2; val_offset:772*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 772*FLEN/8, x6, x4, x5)

inst_417:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x307 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x307 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3707; op2val:0xb707; 
   valaddr_reg:x2; val_offset:774*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 774*FLEN/8, x6, x4, x5)

inst_418:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x307 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x307 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3707; op2val:0xb707; 
   valaddr_reg:x2; val_offset:776*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 776*FLEN/8, x6, x4, x5)

inst_419:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x307 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x307 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3707; op2val:0xb707; 
   valaddr_reg:x2; val_offset:778*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 778*FLEN/8, x6, x4, x5)

inst_420:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x022 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x022 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3422; op2val:0xb422; 
   valaddr_reg:x2; val_offset:780*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 780*FLEN/8, x6, x4, x5)

inst_421:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x022 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x022 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3422; op2val:0xb422; 
   valaddr_reg:x2; val_offset:782*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 782*FLEN/8, x6, x4, x5)

inst_422:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x022 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x022 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3422; op2val:0xb422; 
   valaddr_reg:x2; val_offset:784*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 784*FLEN/8, x6, x4, x5)

inst_423:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x022 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x022 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3422; op2val:0xb422; 
   valaddr_reg:x2; val_offset:786*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 786*FLEN/8, x6, x4, x5)

inst_424:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x022 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x022 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3422; op2val:0xb422; 
   valaddr_reg:x2; val_offset:788*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 788*FLEN/8, x6, x4, x5)

inst_425:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3a2 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3a2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3ba2; op2val:0xbba2; 
   valaddr_reg:x2; val_offset:790*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 790*FLEN/8, x6, x4, x5)

inst_426:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3a2 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3a2 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3ba2; op2val:0xbba2; 
   valaddr_reg:x2; val_offset:792*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 792*FLEN/8, x6, x4, x5)

inst_427:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3a2 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3a2 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3ba2; op2val:0xbba2; 
   valaddr_reg:x2; val_offset:794*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 794*FLEN/8, x6, x4, x5)

inst_428:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3a2 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3a2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3ba2; op2val:0xbba2; 
   valaddr_reg:x2; val_offset:796*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 796*FLEN/8, x6, x4, x5)

inst_429:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3a2 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3a2 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3ba2; op2val:0xbba2; 
   valaddr_reg:x2; val_offset:798*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 798*FLEN/8, x6, x4, x5)

inst_430:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x214 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x214 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a14; op2val:0xba14; 
   valaddr_reg:x2; val_offset:800*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 800*FLEN/8, x6, x4, x5)

inst_431:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x214 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x214 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a14; op2val:0xba14; 
   valaddr_reg:x2; val_offset:802*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 802*FLEN/8, x6, x4, x5)

inst_432:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x214 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x214 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a14; op2val:0xba14; 
   valaddr_reg:x2; val_offset:804*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 804*FLEN/8, x6, x4, x5)

inst_433:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x214 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x214 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a14; op2val:0xba14; 
   valaddr_reg:x2; val_offset:806*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 806*FLEN/8, x6, x4, x5)

inst_434:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x214 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x214 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a14; op2val:0xba14; 
   valaddr_reg:x2; val_offset:808*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 808*FLEN/8, x6, x4, x5)

inst_435:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x12e and fs2 == 1 and fe2 == 0x0e and fm2 == 0x12e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x392e; op2val:0xb92e; 
   valaddr_reg:x2; val_offset:810*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 810*FLEN/8, x6, x4, x5)

inst_436:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x12e and fs2 == 1 and fe2 == 0x0e and fm2 == 0x12e and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x392e; op2val:0xb92e; 
   valaddr_reg:x2; val_offset:812*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 812*FLEN/8, x6, x4, x5)

inst_437:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x12e and fs2 == 1 and fe2 == 0x0e and fm2 == 0x12e and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x392e; op2val:0xb92e; 
   valaddr_reg:x2; val_offset:814*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 814*FLEN/8, x6, x4, x5)

inst_438:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x12e and fs2 == 1 and fe2 == 0x0e and fm2 == 0x12e and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x392e; op2val:0xb92e; 
   valaddr_reg:x2; val_offset:816*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 816*FLEN/8, x6, x4, x5)

inst_439:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x12e and fs2 == 1 and fe2 == 0x0e and fm2 == 0x12e and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x392e; op2val:0xb92e; 
   valaddr_reg:x2; val_offset:818*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 818*FLEN/8, x6, x4, x5)

inst_440:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x120 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x120 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3920; op2val:0xb920; 
   valaddr_reg:x2; val_offset:820*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 820*FLEN/8, x6, x4, x5)

inst_441:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x120 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x120 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3920; op2val:0xb920; 
   valaddr_reg:x2; val_offset:822*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 822*FLEN/8, x6, x4, x5)

inst_442:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x120 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x120 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3920; op2val:0xb920; 
   valaddr_reg:x2; val_offset:824*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 824*FLEN/8, x6, x4, x5)

inst_443:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x120 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x120 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3920; op2val:0xb920; 
   valaddr_reg:x2; val_offset:826*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 826*FLEN/8, x6, x4, x5)

inst_444:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x120 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x120 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3920; op2val:0xb920; 
   valaddr_reg:x2; val_offset:828*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 828*FLEN/8, x6, x4, x5)

inst_445:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1dc and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1dc and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35dc; op2val:0xb5dc; 
   valaddr_reg:x2; val_offset:830*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 830*FLEN/8, x6, x4, x5)

inst_446:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1dc and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1dc and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35dc; op2val:0xb5dc; 
   valaddr_reg:x2; val_offset:832*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 832*FLEN/8, x6, x4, x5)

inst_447:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1dc and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1dc and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35dc; op2val:0xb5dc; 
   valaddr_reg:x2; val_offset:834*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 834*FLEN/8, x6, x4, x5)

inst_448:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1dc and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1dc and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35dc; op2val:0xb5dc; 
   valaddr_reg:x2; val_offset:836*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 836*FLEN/8, x6, x4, x5)

inst_449:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1dc and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1dc and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35dc; op2val:0xb5dc; 
   valaddr_reg:x2; val_offset:838*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 838*FLEN/8, x6, x4, x5)

inst_450:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x08c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x08c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x348c; op2val:0xb48c; 
   valaddr_reg:x2; val_offset:840*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 840*FLEN/8, x6, x4, x5)

inst_451:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x08c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x08c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x348c; op2val:0xb48c; 
   valaddr_reg:x2; val_offset:842*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 842*FLEN/8, x6, x4, x5)

inst_452:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x08c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x08c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x348c; op2val:0xb48c; 
   valaddr_reg:x2; val_offset:844*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 844*FLEN/8, x6, x4, x5)

inst_453:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x08c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x08c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x348c; op2val:0xb48c; 
   valaddr_reg:x2; val_offset:846*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 846*FLEN/8, x6, x4, x5)

inst_454:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x08c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x08c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x348c; op2val:0xb48c; 
   valaddr_reg:x2; val_offset:848*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 848*FLEN/8, x6, x4, x5)

inst_455:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0af and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0af and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38af; op2val:0xb8af; 
   valaddr_reg:x2; val_offset:850*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 850*FLEN/8, x6, x4, x5)

inst_456:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0af and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0af and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38af; op2val:0xb8af; 
   valaddr_reg:x2; val_offset:852*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 852*FLEN/8, x6, x4, x5)

inst_457:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0af and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0af and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38af; op2val:0xb8af; 
   valaddr_reg:x2; val_offset:854*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 854*FLEN/8, x6, x4, x5)

inst_458:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0af and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0af and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38af; op2val:0xb8af; 
   valaddr_reg:x2; val_offset:856*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 856*FLEN/8, x6, x4, x5)

inst_459:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0af and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0af and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38af; op2val:0xb8af; 
   valaddr_reg:x2; val_offset:858*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 858*FLEN/8, x6, x4, x5)

inst_460:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3fc and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3fc and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bfc; op2val:0xbbfc; 
   valaddr_reg:x2; val_offset:860*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 860*FLEN/8, x6, x4, x5)

inst_461:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3fc and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3fc and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bfc; op2val:0xbbfc; 
   valaddr_reg:x2; val_offset:862*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 862*FLEN/8, x6, x4, x5)

inst_462:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3fc and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3fc and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bfc; op2val:0xbbfc; 
   valaddr_reg:x2; val_offset:864*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 864*FLEN/8, x6, x4, x5)

inst_463:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3fc and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3fc and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bfc; op2val:0xbbfc; 
   valaddr_reg:x2; val_offset:866*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 866*FLEN/8, x6, x4, x5)

inst_464:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3fc and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3fc and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bfc; op2val:0xbbfc; 
   valaddr_reg:x2; val_offset:868*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 868*FLEN/8, x6, x4, x5)

inst_465:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x153 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x153 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3953; op2val:0xb953; 
   valaddr_reg:x2; val_offset:870*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 870*FLEN/8, x6, x4, x5)

inst_466:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x153 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x153 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3953; op2val:0xb953; 
   valaddr_reg:x2; val_offset:872*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 872*FLEN/8, x6, x4, x5)

inst_467:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x153 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x153 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3953; op2val:0xb953; 
   valaddr_reg:x2; val_offset:874*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 874*FLEN/8, x6, x4, x5)

inst_468:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x153 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x153 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3953; op2val:0xb953; 
   valaddr_reg:x2; val_offset:876*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 876*FLEN/8, x6, x4, x5)

inst_469:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x153 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x153 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3953; op2val:0xb953; 
   valaddr_reg:x2; val_offset:878*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 878*FLEN/8, x6, x4, x5)

inst_470:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1cd and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1cd and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35cd; op2val:0xb5cd; 
   valaddr_reg:x2; val_offset:880*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 880*FLEN/8, x6, x4, x5)

inst_471:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1cd and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1cd and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35cd; op2val:0xb5cd; 
   valaddr_reg:x2; val_offset:882*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 882*FLEN/8, x6, x4, x5)

inst_472:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1cd and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1cd and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35cd; op2val:0xb5cd; 
   valaddr_reg:x2; val_offset:884*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 884*FLEN/8, x6, x4, x5)

inst_473:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1cd and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1cd and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35cd; op2val:0xb5cd; 
   valaddr_reg:x2; val_offset:886*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 886*FLEN/8, x6, x4, x5)

inst_474:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1cd and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1cd and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35cd; op2val:0xb5cd; 
   valaddr_reg:x2; val_offset:888*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 888*FLEN/8, x6, x4, x5)

inst_475:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x3f9 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x3f8 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2ff9; op2val:0xaff8; 
   valaddr_reg:x2; val_offset:890*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 890*FLEN/8, x6, x4, x5)

inst_476:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x3f9 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x3f8 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2ff9; op2val:0xaff8; 
   valaddr_reg:x2; val_offset:892*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 892*FLEN/8, x6, x4, x5)

inst_477:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x3f9 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x3f8 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2ff9; op2val:0xaff8; 
   valaddr_reg:x2; val_offset:894*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 894*FLEN/8, x6, x4, x5)

inst_478:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x3f9 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x3f8 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2ff9; op2val:0xaff8; 
   valaddr_reg:x2; val_offset:896*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 896*FLEN/8, x6, x4, x5)

inst_479:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x3f9 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x3f8 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2ff9; op2val:0xaff8; 
   valaddr_reg:x2; val_offset:898*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 898*FLEN/8, x6, x4, x5)

inst_480:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0c5 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0c5 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x34c5; op2val:0xb4c5; 
   valaddr_reg:x2; val_offset:900*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 900*FLEN/8, x6, x4, x5)

inst_481:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0c5 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0c5 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x34c5; op2val:0xb4c5; 
   valaddr_reg:x2; val_offset:902*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 902*FLEN/8, x6, x4, x5)

inst_482:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0c5 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0c5 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x34c5; op2val:0xb4c5; 
   valaddr_reg:x2; val_offset:904*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 904*FLEN/8, x6, x4, x5)

inst_483:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0c5 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0c5 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x34c5; op2val:0xb4c5; 
   valaddr_reg:x2; val_offset:906*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 906*FLEN/8, x6, x4, x5)

inst_484:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0c5 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0c5 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x34c5; op2val:0xb4c5; 
   valaddr_reg:x2; val_offset:908*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 908*FLEN/8, x6, x4, x5)

inst_485:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x167 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x167 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3567; op2val:0xb567; 
   valaddr_reg:x2; val_offset:910*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 910*FLEN/8, x6, x4, x5)

inst_486:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x167 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x167 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3567; op2val:0xb567; 
   valaddr_reg:x2; val_offset:912*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 912*FLEN/8, x6, x4, x5)

inst_487:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x167 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x167 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3567; op2val:0xb567; 
   valaddr_reg:x2; val_offset:914*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 914*FLEN/8, x6, x4, x5)

inst_488:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x167 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x167 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3567; op2val:0xb567; 
   valaddr_reg:x2; val_offset:916*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 916*FLEN/8, x6, x4, x5)

inst_489:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x167 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x167 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3567; op2val:0xb567; 
   valaddr_reg:x2; val_offset:918*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 918*FLEN/8, x6, x4, x5)

inst_490:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x06f and fs2 == 1 and fe2 == 0x0e and fm2 == 0x06f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x386f; op2val:0xb86f; 
   valaddr_reg:x2; val_offset:920*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 920*FLEN/8, x6, x4, x5)

inst_491:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x06f and fs2 == 1 and fe2 == 0x0e and fm2 == 0x06f and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x386f; op2val:0xb86f; 
   valaddr_reg:x2; val_offset:922*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 922*FLEN/8, x6, x4, x5)

inst_492:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x06f and fs2 == 1 and fe2 == 0x0e and fm2 == 0x06f and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x386f; op2val:0xb86f; 
   valaddr_reg:x2; val_offset:924*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 924*FLEN/8, x6, x4, x5)

inst_493:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x06f and fs2 == 1 and fe2 == 0x0e and fm2 == 0x06f and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x386f; op2val:0xb86f; 
   valaddr_reg:x2; val_offset:926*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 926*FLEN/8, x6, x4, x5)

inst_494:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x06f and fs2 == 1 and fe2 == 0x0e and fm2 == 0x06f and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x386f; op2val:0xb86f; 
   valaddr_reg:x2; val_offset:928*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 928*FLEN/8, x6, x4, x5)

inst_495:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2bd and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2bc and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3abd; op2val:0xbabc; 
   valaddr_reg:x2; val_offset:930*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 930*FLEN/8, x6, x4, x5)

inst_496:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2bd and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2bc and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3abd; op2val:0xbabc; 
   valaddr_reg:x2; val_offset:932*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 932*FLEN/8, x6, x4, x5)

inst_497:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2bd and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2bc and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3abd; op2val:0xbabc; 
   valaddr_reg:x2; val_offset:934*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 934*FLEN/8, x6, x4, x5)

inst_498:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2bd and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2bc and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3abd; op2val:0xbabc; 
   valaddr_reg:x2; val_offset:936*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 936*FLEN/8, x6, x4, x5)

inst_499:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2bd and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2bc and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3abd; op2val:0xbabc; 
   valaddr_reg:x2; val_offset:938*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 938*FLEN/8, x6, x4, x5)

inst_500:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x01a and fs2 == 1 and fe2 == 0x0e and fm2 == 0x01a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x381a; op2val:0xb81a; 
   valaddr_reg:x2; val_offset:940*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 940*FLEN/8, x6, x4, x5)

inst_501:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x01a and fs2 == 1 and fe2 == 0x0e and fm2 == 0x01a and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x381a; op2val:0xb81a; 
   valaddr_reg:x2; val_offset:942*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 942*FLEN/8, x6, x4, x5)

inst_502:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x01a and fs2 == 1 and fe2 == 0x0e and fm2 == 0x01a and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x381a; op2val:0xb81a; 
   valaddr_reg:x2; val_offset:944*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 944*FLEN/8, x6, x4, x5)

inst_503:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x01a and fs2 == 1 and fe2 == 0x0e and fm2 == 0x01a and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x381a; op2val:0xb81a; 
   valaddr_reg:x2; val_offset:946*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 946*FLEN/8, x6, x4, x5)

inst_504:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x01a and fs2 == 1 and fe2 == 0x0e and fm2 == 0x01a and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x381a; op2val:0xb81a; 
   valaddr_reg:x2; val_offset:948*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 948*FLEN/8, x6, x4, x5)

inst_505:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3d3 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x3d2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x33d3; op2val:0xb3d2; 
   valaddr_reg:x2; val_offset:950*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 950*FLEN/8, x6, x4, x5)

inst_506:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3d3 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x3d2 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x33d3; op2val:0xb3d2; 
   valaddr_reg:x2; val_offset:952*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 952*FLEN/8, x6, x4, x5)

inst_507:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3d3 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x3d2 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x33d3; op2val:0xb3d2; 
   valaddr_reg:x2; val_offset:954*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 954*FLEN/8, x6, x4, x5)

inst_508:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3d3 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x3d2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x33d3; op2val:0xb3d2; 
   valaddr_reg:x2; val_offset:956*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 956*FLEN/8, x6, x4, x5)

inst_509:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3d3 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x3d2 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x33d3; op2val:0xb3d2; 
   valaddr_reg:x2; val_offset:958*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 958*FLEN/8, x6, x4, x5)

inst_510:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x00b and fs2 == 1 and fe2 == 0x0e and fm2 == 0x00b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x380b; op2val:0xb80b; 
   valaddr_reg:x2; val_offset:960*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 960*FLEN/8, x6, x4, x5)

inst_511:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x00b and fs2 == 1 and fe2 == 0x0e and fm2 == 0x00b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x380b; op2val:0xb80b; 
   valaddr_reg:x2; val_offset:962*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 962*FLEN/8, x6, x4, x5)

inst_512:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x00b and fs2 == 1 and fe2 == 0x0e and fm2 == 0x00b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x380b; op2val:0xb80b; 
   valaddr_reg:x2; val_offset:964*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 964*FLEN/8, x6, x4, x5)

inst_513:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x00b and fs2 == 1 and fe2 == 0x0e and fm2 == 0x00b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x380b; op2val:0xb80b; 
   valaddr_reg:x2; val_offset:966*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 966*FLEN/8, x6, x4, x5)

inst_514:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x00b and fs2 == 1 and fe2 == 0x0e and fm2 == 0x00b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x380b; op2val:0xb80b; 
   valaddr_reg:x2; val_offset:968*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 968*FLEN/8, x6, x4, x5)

inst_515:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x043 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x043 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3843; op2val:0xb843; 
   valaddr_reg:x2; val_offset:970*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 970*FLEN/8, x6, x4, x5)

inst_516:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x043 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x043 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3843; op2val:0xb843; 
   valaddr_reg:x2; val_offset:972*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 972*FLEN/8, x6, x4, x5)

inst_517:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x043 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x043 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3843; op2val:0xb843; 
   valaddr_reg:x2; val_offset:974*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 974*FLEN/8, x6, x4, x5)

inst_518:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x043 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x043 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3843; op2val:0xb843; 
   valaddr_reg:x2; val_offset:976*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 976*FLEN/8, x6, x4, x5)

inst_519:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x043 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x043 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3843; op2val:0xb843; 
   valaddr_reg:x2; val_offset:978*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 978*FLEN/8, x6, x4, x5)

inst_520:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x000 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3000; op2val:0xafff; 
   valaddr_reg:x2; val_offset:980*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 980*FLEN/8, x6, x4, x5)

inst_521:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x000 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3000; op2val:0xafff; 
   valaddr_reg:x2; val_offset:982*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 982*FLEN/8, x6, x4, x5)

inst_522:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x000 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3000; op2val:0xafff; 
   valaddr_reg:x2; val_offset:984*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 984*FLEN/8, x6, x4, x5)

inst_523:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x000 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3000; op2val:0xafff; 
   valaddr_reg:x2; val_offset:986*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 986*FLEN/8, x6, x4, x5)

inst_524:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x000 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3000; op2val:0xafff; 
   valaddr_reg:x2; val_offset:988*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 988*FLEN/8, x6, x4, x5)

inst_525:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x27e and fs2 == 1 and fe2 == 0x0e and fm2 == 0x27e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a7e; op2val:0xba7e; 
   valaddr_reg:x2; val_offset:990*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 990*FLEN/8, x6, x4, x5)

inst_526:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x27e and fs2 == 1 and fe2 == 0x0e and fm2 == 0x27e and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a7e; op2val:0xba7e; 
   valaddr_reg:x2; val_offset:992*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 992*FLEN/8, x6, x4, x5)

inst_527:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x27e and fs2 == 1 and fe2 == 0x0e and fm2 == 0x27e and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a7e; op2val:0xba7e; 
   valaddr_reg:x2; val_offset:994*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 994*FLEN/8, x6, x4, x5)

inst_528:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x27e and fs2 == 1 and fe2 == 0x0e and fm2 == 0x27e and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a7e; op2val:0xba7e; 
   valaddr_reg:x2; val_offset:996*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 996*FLEN/8, x6, x4, x5)

inst_529:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x27e and fs2 == 1 and fe2 == 0x0e and fm2 == 0x27e and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a7e; op2val:0xba7e; 
   valaddr_reg:x2; val_offset:998*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 998*FLEN/8, x6, x4, x5)

inst_530:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1de and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1de and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35de; op2val:0xb5de; 
   valaddr_reg:x2; val_offset:1000*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1000*FLEN/8, x6, x4, x5)

inst_531:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1de and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1de and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35de; op2val:0xb5de; 
   valaddr_reg:x2; val_offset:1002*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1002*FLEN/8, x6, x4, x5)

inst_532:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1de and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1de and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35de; op2val:0xb5de; 
   valaddr_reg:x2; val_offset:1004*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1004*FLEN/8, x6, x4, x5)

inst_533:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1de and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1de and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35de; op2val:0xb5de; 
   valaddr_reg:x2; val_offset:1006*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1006*FLEN/8, x6, x4, x5)

inst_534:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1de and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1de and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35de; op2val:0xb5de; 
   valaddr_reg:x2; val_offset:1008*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1008*FLEN/8, x6, x4, x5)

inst_535:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x064 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x064 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3464; op2val:0xb464; 
   valaddr_reg:x2; val_offset:1010*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1010*FLEN/8, x6, x4, x5)

inst_536:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x064 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x064 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3464; op2val:0xb464; 
   valaddr_reg:x2; val_offset:1012*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1012*FLEN/8, x6, x4, x5)

inst_537:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x064 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x064 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3464; op2val:0xb464; 
   valaddr_reg:x2; val_offset:1014*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1014*FLEN/8, x6, x4, x5)
RVTEST_SIGBASE(x4,signature_x4_4)

inst_538:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x064 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x064 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3464; op2val:0xb464; 
   valaddr_reg:x2; val_offset:1016*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1016*FLEN/8, x6, x4, x5)

inst_539:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x064 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x064 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3464; op2val:0xb464; 
   valaddr_reg:x2; val_offset:1018*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1018*FLEN/8, x6, x4, x5)

inst_540:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0c9 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0c9 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38c9; op2val:0xb8c9; 
   valaddr_reg:x2; val_offset:1020*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1020*FLEN/8, x6, x4, x5)

inst_541:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0c9 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0c9 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38c9; op2val:0xb8c9; 
   valaddr_reg:x2; val_offset:1022*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1022*FLEN/8, x6, x4, x5)

inst_542:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0c9 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0c9 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38c9; op2val:0xb8c9; 
   valaddr_reg:x2; val_offset:1024*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1024*FLEN/8, x6, x4, x5)

inst_543:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0c9 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0c9 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38c9; op2val:0xb8c9; 
   valaddr_reg:x2; val_offset:1026*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1026*FLEN/8, x6, x4, x5)

inst_544:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0c9 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0c9 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38c9; op2val:0xb8c9; 
   valaddr_reg:x2; val_offset:1028*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1028*FLEN/8, x6, x4, x5)

inst_545:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x178 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x178 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3978; op2val:0xb978; 
   valaddr_reg:x2; val_offset:1030*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1030*FLEN/8, x6, x4, x5)

inst_546:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x178 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x178 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3978; op2val:0xb978; 
   valaddr_reg:x2; val_offset:1032*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1032*FLEN/8, x6, x4, x5)

inst_547:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x178 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x178 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3978; op2val:0xb978; 
   valaddr_reg:x2; val_offset:1034*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1034*FLEN/8, x6, x4, x5)

inst_548:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x178 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x178 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3978; op2val:0xb978; 
   valaddr_reg:x2; val_offset:1036*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1036*FLEN/8, x6, x4, x5)

inst_549:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x178 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x178 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3978; op2val:0xb978; 
   valaddr_reg:x2; val_offset:1038*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1038*FLEN/8, x6, x4, x5)

inst_550:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x085 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x085 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3485; op2val:0xb485; 
   valaddr_reg:x2; val_offset:1040*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1040*FLEN/8, x6, x4, x5)

inst_551:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x085 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x085 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3485; op2val:0xb485; 
   valaddr_reg:x2; val_offset:1042*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1042*FLEN/8, x6, x4, x5)

inst_552:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x085 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x085 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3485; op2val:0xb485; 
   valaddr_reg:x2; val_offset:1044*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1044*FLEN/8, x6, x4, x5)

inst_553:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x085 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x085 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3485; op2val:0xb485; 
   valaddr_reg:x2; val_offset:1046*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1046*FLEN/8, x6, x4, x5)

inst_554:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x085 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x085 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3485; op2val:0xb485; 
   valaddr_reg:x2; val_offset:1048*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1048*FLEN/8, x6, x4, x5)

inst_555:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x1ac and fs2 == 1 and fe2 == 0x0c and fm2 == 0x1ac and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x31ac; op2val:0xb1ac; 
   valaddr_reg:x2; val_offset:1050*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1050*FLEN/8, x6, x4, x5)

inst_556:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x1ac and fs2 == 1 and fe2 == 0x0c and fm2 == 0x1ac and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x31ac; op2val:0xb1ac; 
   valaddr_reg:x2; val_offset:1052*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1052*FLEN/8, x6, x4, x5)

inst_557:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x1ac and fs2 == 1 and fe2 == 0x0c and fm2 == 0x1ac and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x31ac; op2val:0xb1ac; 
   valaddr_reg:x2; val_offset:1054*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1054*FLEN/8, x6, x4, x5)

inst_558:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x1ac and fs2 == 1 and fe2 == 0x0c and fm2 == 0x1ac and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x31ac; op2val:0xb1ac; 
   valaddr_reg:x2; val_offset:1056*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1056*FLEN/8, x6, x4, x5)

inst_559:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x1ac and fs2 == 1 and fe2 == 0x0c and fm2 == 0x1ac and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x31ac; op2val:0xb1ac; 
   valaddr_reg:x2; val_offset:1058*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1058*FLEN/8, x6, x4, x5)

inst_560:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x337 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x337 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b37; op2val:0xbb37; 
   valaddr_reg:x2; val_offset:1060*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1060*FLEN/8, x6, x4, x5)

inst_561:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x337 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x337 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b37; op2val:0xbb37; 
   valaddr_reg:x2; val_offset:1062*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1062*FLEN/8, x6, x4, x5)

inst_562:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x337 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x337 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b37; op2val:0xbb37; 
   valaddr_reg:x2; val_offset:1064*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1064*FLEN/8, x6, x4, x5)

inst_563:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x337 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x337 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b37; op2val:0xbb37; 
   valaddr_reg:x2; val_offset:1066*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1066*FLEN/8, x6, x4, x5)

inst_564:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x337 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x337 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b37; op2val:0xbb37; 
   valaddr_reg:x2; val_offset:1068*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1068*FLEN/8, x6, x4, x5)

inst_565:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x19c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x19c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x359c; op2val:0xb59c; 
   valaddr_reg:x2; val_offset:1070*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1070*FLEN/8, x6, x4, x5)

inst_566:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x19c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x19c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x359c; op2val:0xb59c; 
   valaddr_reg:x2; val_offset:1072*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1072*FLEN/8, x6, x4, x5)

inst_567:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x19c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x19c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x359c; op2val:0xb59c; 
   valaddr_reg:x2; val_offset:1074*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1074*FLEN/8, x6, x4, x5)

inst_568:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x19c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x19c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x359c; op2val:0xb59c; 
   valaddr_reg:x2; val_offset:1076*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1076*FLEN/8, x6, x4, x5)

inst_569:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x19c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x19c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x359c; op2val:0xb59c; 
   valaddr_reg:x2; val_offset:1078*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1078*FLEN/8, x6, x4, x5)

inst_570:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1c2 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1c2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39c2; op2val:0xb9c2; 
   valaddr_reg:x2; val_offset:1080*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1080*FLEN/8, x6, x4, x5)

inst_571:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1c2 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1c2 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39c2; op2val:0xb9c2; 
   valaddr_reg:x2; val_offset:1082*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1082*FLEN/8, x6, x4, x5)

inst_572:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1c2 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1c2 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39c2; op2val:0xb9c2; 
   valaddr_reg:x2; val_offset:1084*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1084*FLEN/8, x6, x4, x5)

inst_573:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1c2 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1c2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39c2; op2val:0xb9c2; 
   valaddr_reg:x2; val_offset:1086*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1086*FLEN/8, x6, x4, x5)

inst_574:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1c2 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1c2 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39c2; op2val:0xb9c2; 
   valaddr_reg:x2; val_offset:1088*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1088*FLEN/8, x6, x4, x5)

inst_575:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x332 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x332 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b32; op2val:0xbb32; 
   valaddr_reg:x2; val_offset:1090*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1090*FLEN/8, x6, x4, x5)

inst_576:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x332 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x332 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b32; op2val:0xbb32; 
   valaddr_reg:x2; val_offset:1092*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1092*FLEN/8, x6, x4, x5)

inst_577:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x332 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x332 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b32; op2val:0xbb32; 
   valaddr_reg:x2; val_offset:1094*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1094*FLEN/8, x6, x4, x5)

inst_578:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x332 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x332 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b32; op2val:0xbb32; 
   valaddr_reg:x2; val_offset:1096*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1096*FLEN/8, x6, x4, x5)

inst_579:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x332 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x332 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b32; op2val:0xbb32; 
   valaddr_reg:x2; val_offset:1098*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1098*FLEN/8, x6, x4, x5)

inst_580:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0d3 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0d3 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38d3; op2val:0xb8d3; 
   valaddr_reg:x2; val_offset:1100*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1100*FLEN/8, x6, x4, x5)

inst_581:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0d3 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0d3 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38d3; op2val:0xb8d3; 
   valaddr_reg:x2; val_offset:1102*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1102*FLEN/8, x6, x4, x5)

inst_582:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0d3 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0d3 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38d3; op2val:0xb8d3; 
   valaddr_reg:x2; val_offset:1104*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1104*FLEN/8, x6, x4, x5)

inst_583:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0d3 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0d3 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38d3; op2val:0xb8d3; 
   valaddr_reg:x2; val_offset:1106*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1106*FLEN/8, x6, x4, x5)

inst_584:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0d3 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0d3 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38d3; op2val:0xb8d3; 
   valaddr_reg:x2; val_offset:1108*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1108*FLEN/8, x6, x4, x5)

inst_585:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1cd and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1cd and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39cd; op2val:0xb9cd; 
   valaddr_reg:x2; val_offset:1110*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1110*FLEN/8, x6, x4, x5)

inst_586:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1cd and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1cd and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39cd; op2val:0xb9cd; 
   valaddr_reg:x2; val_offset:1112*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1112*FLEN/8, x6, x4, x5)

inst_587:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1cd and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1cd and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39cd; op2val:0xb9cd; 
   valaddr_reg:x2; val_offset:1114*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1114*FLEN/8, x6, x4, x5)

inst_588:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1cd and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1cd and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39cd; op2val:0xb9cd; 
   valaddr_reg:x2; val_offset:1116*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1116*FLEN/8, x6, x4, x5)

inst_589:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1cd and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1cd and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39cd; op2val:0xb9cd; 
   valaddr_reg:x2; val_offset:1118*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1118*FLEN/8, x6, x4, x5)

inst_590:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x2a5 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2a5 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x32a5; op2val:0xb2a5; 
   valaddr_reg:x2; val_offset:1120*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1120*FLEN/8, x6, x4, x5)

inst_591:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x2a5 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2a5 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x32a5; op2val:0xb2a5; 
   valaddr_reg:x2; val_offset:1122*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1122*FLEN/8, x6, x4, x5)

inst_592:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x2a5 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2a5 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x32a5; op2val:0xb2a5; 
   valaddr_reg:x2; val_offset:1124*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1124*FLEN/8, x6, x4, x5)

inst_593:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x2a5 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2a5 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x32a5; op2val:0xb2a5; 
   valaddr_reg:x2; val_offset:1126*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1126*FLEN/8, x6, x4, x5)

inst_594:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x2a5 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2a5 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x32a5; op2val:0xb2a5; 
   valaddr_reg:x2; val_offset:1128*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1128*FLEN/8, x6, x4, x5)

inst_595:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2ee and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2ee and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3aee; op2val:0xbaee; 
   valaddr_reg:x2; val_offset:1130*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1130*FLEN/8, x6, x4, x5)

inst_596:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2ee and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2ee and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3aee; op2val:0xbaee; 
   valaddr_reg:x2; val_offset:1132*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1132*FLEN/8, x6, x4, x5)

inst_597:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2ee and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2ee and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3aee; op2val:0xbaee; 
   valaddr_reg:x2; val_offset:1134*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1134*FLEN/8, x6, x4, x5)

inst_598:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2ee and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2ee and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3aee; op2val:0xbaee; 
   valaddr_reg:x2; val_offset:1136*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1136*FLEN/8, x6, x4, x5)

inst_599:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2ee and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2ee and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3aee; op2val:0xbaee; 
   valaddr_reg:x2; val_offset:1138*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1138*FLEN/8, x6, x4, x5)

inst_600:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x196 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x196 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3596; op2val:0xb596; 
   valaddr_reg:x2; val_offset:1140*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1140*FLEN/8, x6, x4, x5)

inst_601:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x196 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x196 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3596; op2val:0xb596; 
   valaddr_reg:x2; val_offset:1142*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1142*FLEN/8, x6, x4, x5)

inst_602:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x196 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x196 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3596; op2val:0xb596; 
   valaddr_reg:x2; val_offset:1144*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1144*FLEN/8, x6, x4, x5)

inst_603:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x196 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x196 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3596; op2val:0xb596; 
   valaddr_reg:x2; val_offset:1146*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1146*FLEN/8, x6, x4, x5)

inst_604:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x196 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x196 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3596; op2val:0xb596; 
   valaddr_reg:x2; val_offset:1148*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1148*FLEN/8, x6, x4, x5)

inst_605:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x019 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x019 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3019; op2val:0xb019; 
   valaddr_reg:x2; val_offset:1150*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1150*FLEN/8, x6, x4, x5)

inst_606:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x019 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x019 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3019; op2val:0xb019; 
   valaddr_reg:x2; val_offset:1152*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1152*FLEN/8, x6, x4, x5)

inst_607:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x019 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x019 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3019; op2val:0xb019; 
   valaddr_reg:x2; val_offset:1154*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1154*FLEN/8, x6, x4, x5)

inst_608:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x019 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x019 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3019; op2val:0xb019; 
   valaddr_reg:x2; val_offset:1156*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1156*FLEN/8, x6, x4, x5)

inst_609:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x019 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x019 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3019; op2val:0xb019; 
   valaddr_reg:x2; val_offset:1158*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1158*FLEN/8, x6, x4, x5)

inst_610:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3d9 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3d9 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bd9; op2val:0xbbd9; 
   valaddr_reg:x2; val_offset:1160*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1160*FLEN/8, x6, x4, x5)

inst_611:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3d9 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3d9 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bd9; op2val:0xbbd9; 
   valaddr_reg:x2; val_offset:1162*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1162*FLEN/8, x6, x4, x5)

inst_612:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3d9 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3d9 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bd9; op2val:0xbbd9; 
   valaddr_reg:x2; val_offset:1164*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1164*FLEN/8, x6, x4, x5)

inst_613:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3d9 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3d9 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bd9; op2val:0xbbd9; 
   valaddr_reg:x2; val_offset:1166*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1166*FLEN/8, x6, x4, x5)

inst_614:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3d9 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3d9 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bd9; op2val:0xbbd9; 
   valaddr_reg:x2; val_offset:1168*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1168*FLEN/8, x6, x4, x5)

inst_615:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x11a and fs2 == 1 and fe2 == 0x0d and fm2 == 0x11a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x351a; op2val:0xb51a; 
   valaddr_reg:x2; val_offset:1170*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1170*FLEN/8, x6, x4, x5)

inst_616:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x11a and fs2 == 1 and fe2 == 0x0d and fm2 == 0x11a and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x351a; op2val:0xb51a; 
   valaddr_reg:x2; val_offset:1172*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1172*FLEN/8, x6, x4, x5)

inst_617:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x11a and fs2 == 1 and fe2 == 0x0d and fm2 == 0x11a and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x351a; op2val:0xb51a; 
   valaddr_reg:x2; val_offset:1174*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1174*FLEN/8, x6, x4, x5)

inst_618:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x11a and fs2 == 1 and fe2 == 0x0d and fm2 == 0x11a and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x351a; op2val:0xb51a; 
   valaddr_reg:x2; val_offset:1176*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1176*FLEN/8, x6, x4, x5)

inst_619:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x11a and fs2 == 1 and fe2 == 0x0d and fm2 == 0x11a and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x351a; op2val:0xb51a; 
   valaddr_reg:x2; val_offset:1178*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1178*FLEN/8, x6, x4, x5)

inst_620:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x2da and fs2 == 1 and fe2 == 0x0a and fm2 == 0x2d8 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2ada; op2val:0xaad8; 
   valaddr_reg:x2; val_offset:1180*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1180*FLEN/8, x6, x4, x5)

inst_621:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x2da and fs2 == 1 and fe2 == 0x0a and fm2 == 0x2d8 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2ada; op2val:0xaad8; 
   valaddr_reg:x2; val_offset:1182*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1182*FLEN/8, x6, x4, x5)

inst_622:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x2da and fs2 == 1 and fe2 == 0x0a and fm2 == 0x2d8 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2ada; op2val:0xaad8; 
   valaddr_reg:x2; val_offset:1184*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1184*FLEN/8, x6, x4, x5)

inst_623:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x2da and fs2 == 1 and fe2 == 0x0a and fm2 == 0x2d8 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2ada; op2val:0xaad8; 
   valaddr_reg:x2; val_offset:1186*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1186*FLEN/8, x6, x4, x5)

inst_624:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x2da and fs2 == 1 and fe2 == 0x0a and fm2 == 0x2d8 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2ada; op2val:0xaad8; 
   valaddr_reg:x2; val_offset:1188*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1188*FLEN/8, x6, x4, x5)

inst_625:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1c5 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x1c4 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2dc5; op2val:0xadc4; 
   valaddr_reg:x2; val_offset:1190*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1190*FLEN/8, x6, x4, x5)

inst_626:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1c5 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x1c4 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2dc5; op2val:0xadc4; 
   valaddr_reg:x2; val_offset:1192*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1192*FLEN/8, x6, x4, x5)

inst_627:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1c5 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x1c4 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2dc5; op2val:0xadc4; 
   valaddr_reg:x2; val_offset:1194*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1194*FLEN/8, x6, x4, x5)

inst_628:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1c5 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x1c4 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2dc5; op2val:0xadc4; 
   valaddr_reg:x2; val_offset:1196*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1196*FLEN/8, x6, x4, x5)

inst_629:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1c5 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x1c4 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2dc5; op2val:0xadc4; 
   valaddr_reg:x2; val_offset:1198*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1198*FLEN/8, x6, x4, x5)

inst_630:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x003 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x003 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3403; op2val:0xb403; 
   valaddr_reg:x2; val_offset:1200*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1200*FLEN/8, x6, x4, x5)

inst_631:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x003 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x003 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3403; op2val:0xb403; 
   valaddr_reg:x2; val_offset:1202*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1202*FLEN/8, x6, x4, x5)

inst_632:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x003 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x003 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3403; op2val:0xb403; 
   valaddr_reg:x2; val_offset:1204*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1204*FLEN/8, x6, x4, x5)

inst_633:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x003 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x003 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3403; op2val:0xb403; 
   valaddr_reg:x2; val_offset:1206*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1206*FLEN/8, x6, x4, x5)

inst_634:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x003 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x003 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3403; op2val:0xb403; 
   valaddr_reg:x2; val_offset:1208*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1208*FLEN/8, x6, x4, x5)

inst_635:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x183 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x183 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3583; op2val:0xb583; 
   valaddr_reg:x2; val_offset:1210*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1210*FLEN/8, x6, x4, x5)

inst_636:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x183 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x183 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3583; op2val:0xb583; 
   valaddr_reg:x2; val_offset:1212*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1212*FLEN/8, x6, x4, x5)

inst_637:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x183 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x183 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3583; op2val:0xb583; 
   valaddr_reg:x2; val_offset:1214*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1214*FLEN/8, x6, x4, x5)

inst_638:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x183 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x183 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3583; op2val:0xb583; 
   valaddr_reg:x2; val_offset:1216*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1216*FLEN/8, x6, x4, x5)

inst_639:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x183 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x183 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3583; op2val:0xb583; 
   valaddr_reg:x2; val_offset:1218*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1218*FLEN/8, x6, x4, x5)

inst_640:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x23a and fs2 == 1 and fe2 == 0x0b and fm2 == 0x239 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2e3a; op2val:0xae39; 
   valaddr_reg:x2; val_offset:1220*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1220*FLEN/8, x6, x4, x5)

inst_641:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x23a and fs2 == 1 and fe2 == 0x0b and fm2 == 0x239 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2e3a; op2val:0xae39; 
   valaddr_reg:x2; val_offset:1222*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1222*FLEN/8, x6, x4, x5)

inst_642:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x23a and fs2 == 1 and fe2 == 0x0b and fm2 == 0x239 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2e3a; op2val:0xae39; 
   valaddr_reg:x2; val_offset:1224*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1224*FLEN/8, x6, x4, x5)

inst_643:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x23a and fs2 == 1 and fe2 == 0x0b and fm2 == 0x239 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2e3a; op2val:0xae39; 
   valaddr_reg:x2; val_offset:1226*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1226*FLEN/8, x6, x4, x5)

inst_644:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x23a and fs2 == 1 and fe2 == 0x0b and fm2 == 0x239 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2e3a; op2val:0xae39; 
   valaddr_reg:x2; val_offset:1228*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1228*FLEN/8, x6, x4, x5)

inst_645:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x105 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x105 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3905; op2val:0xb905; 
   valaddr_reg:x2; val_offset:1230*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1230*FLEN/8, x6, x4, x5)

inst_646:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x105 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x105 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3905; op2val:0xb905; 
   valaddr_reg:x2; val_offset:1232*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1232*FLEN/8, x6, x4, x5)

inst_647:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x105 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x105 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3905; op2val:0xb905; 
   valaddr_reg:x2; val_offset:1234*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1234*FLEN/8, x6, x4, x5)

inst_648:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x105 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x105 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3905; op2val:0xb905; 
   valaddr_reg:x2; val_offset:1236*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1236*FLEN/8, x6, x4, x5)

inst_649:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x105 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x105 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3905; op2val:0xb905; 
   valaddr_reg:x2; val_offset:1238*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1238*FLEN/8, x6, x4, x5)

inst_650:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x256 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x256 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a56; op2val:0xba56; 
   valaddr_reg:x2; val_offset:1240*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1240*FLEN/8, x6, x4, x5)

inst_651:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x256 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x256 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a56; op2val:0xba56; 
   valaddr_reg:x2; val_offset:1242*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1242*FLEN/8, x6, x4, x5)

inst_652:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x256 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x256 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a56; op2val:0xba56; 
   valaddr_reg:x2; val_offset:1244*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1244*FLEN/8, x6, x4, x5)

inst_653:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x256 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x256 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a56; op2val:0xba56; 
   valaddr_reg:x2; val_offset:1246*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1246*FLEN/8, x6, x4, x5)

inst_654:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x256 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x256 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a56; op2val:0xba56; 
   valaddr_reg:x2; val_offset:1248*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1248*FLEN/8, x6, x4, x5)

inst_655:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3ed and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3ed and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bed; op2val:0xbbed; 
   valaddr_reg:x2; val_offset:1250*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1250*FLEN/8, x6, x4, x5)

inst_656:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3ed and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3ed and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bed; op2val:0xbbed; 
   valaddr_reg:x2; val_offset:1252*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1252*FLEN/8, x6, x4, x5)

inst_657:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3ed and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3ed and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bed; op2val:0xbbed; 
   valaddr_reg:x2; val_offset:1254*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1254*FLEN/8, x6, x4, x5)

inst_658:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3ed and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3ed and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bed; op2val:0xbbed; 
   valaddr_reg:x2; val_offset:1256*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1256*FLEN/8, x6, x4, x5)

inst_659:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3ed and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3ed and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bed; op2val:0xbbed; 
   valaddr_reg:x2; val_offset:1258*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1258*FLEN/8, x6, x4, x5)

inst_660:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x155 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x155 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3955; op2val:0xb955; 
   valaddr_reg:x2; val_offset:1260*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1260*FLEN/8, x6, x4, x5)

inst_661:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x155 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x155 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3955; op2val:0xb955; 
   valaddr_reg:x2; val_offset:1262*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1262*FLEN/8, x6, x4, x5)

inst_662:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x155 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x155 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3955; op2val:0xb955; 
   valaddr_reg:x2; val_offset:1264*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1264*FLEN/8, x6, x4, x5)

inst_663:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x155 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x155 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3955; op2val:0xb955; 
   valaddr_reg:x2; val_offset:1266*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1266*FLEN/8, x6, x4, x5)

inst_664:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x155 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x155 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3955; op2val:0xb955; 
   valaddr_reg:x2; val_offset:1268*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1268*FLEN/8, x6, x4, x5)

inst_665:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x081 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x080 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3481; op2val:0xb480; 
   valaddr_reg:x2; val_offset:1270*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1270*FLEN/8, x6, x4, x5)
RVTEST_SIGBASE(x4,signature_x4_5)

inst_666:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x081 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x080 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3481; op2val:0xb480; 
   valaddr_reg:x2; val_offset:1272*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1272*FLEN/8, x6, x4, x5)

inst_667:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x081 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x080 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3481; op2val:0xb480; 
   valaddr_reg:x2; val_offset:1274*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1274*FLEN/8, x6, x4, x5)

inst_668:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x081 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x080 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3481; op2val:0xb480; 
   valaddr_reg:x2; val_offset:1276*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1276*FLEN/8, x6, x4, x5)

inst_669:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x081 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x080 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3481; op2val:0xb480; 
   valaddr_reg:x2; val_offset:1278*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1278*FLEN/8, x6, x4, x5)

inst_670:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x212 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x212 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3612; op2val:0xb612; 
   valaddr_reg:x2; val_offset:1280*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1280*FLEN/8, x6, x4, x5)

inst_671:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x212 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x212 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3612; op2val:0xb612; 
   valaddr_reg:x2; val_offset:1282*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1282*FLEN/8, x6, x4, x5)

inst_672:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x212 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x212 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3612; op2val:0xb612; 
   valaddr_reg:x2; val_offset:1284*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1284*FLEN/8, x6, x4, x5)

inst_673:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x212 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x212 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3612; op2val:0xb612; 
   valaddr_reg:x2; val_offset:1286*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1286*FLEN/8, x6, x4, x5)

inst_674:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x212 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x212 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3612; op2val:0xb612; 
   valaddr_reg:x2; val_offset:1288*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1288*FLEN/8, x6, x4, x5)

inst_675:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2b0 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2b0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3ab0; op2val:0xbab0; 
   valaddr_reg:x2; val_offset:1290*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1290*FLEN/8, x6, x4, x5)

inst_676:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2b0 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2b0 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3ab0; op2val:0xbab0; 
   valaddr_reg:x2; val_offset:1292*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1292*FLEN/8, x6, x4, x5)

inst_677:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2b0 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2b0 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3ab0; op2val:0xbab0; 
   valaddr_reg:x2; val_offset:1294*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1294*FLEN/8, x6, x4, x5)

inst_678:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2b0 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2b0 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3ab0; op2val:0xbab0; 
   valaddr_reg:x2; val_offset:1296*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1296*FLEN/8, x6, x4, x5)

inst_679:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2b0 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2b0 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3ab0; op2val:0xbab0; 
   valaddr_reg:x2; val_offset:1298*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1298*FLEN/8, x6, x4, x5)

inst_680:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1af and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1ae and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39af; op2val:0xb9ae; 
   valaddr_reg:x2; val_offset:1300*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1300*FLEN/8, x6, x4, x5)

inst_681:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1af and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1ae and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39af; op2val:0xb9ae; 
   valaddr_reg:x2; val_offset:1302*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1302*FLEN/8, x6, x4, x5)

inst_682:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1af and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1ae and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39af; op2val:0xb9ae; 
   valaddr_reg:x2; val_offset:1304*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1304*FLEN/8, x6, x4, x5)

inst_683:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1af and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1ae and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39af; op2val:0xb9ae; 
   valaddr_reg:x2; val_offset:1306*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1306*FLEN/8, x6, x4, x5)

inst_684:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1af and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1ae and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39af; op2val:0xb9ae; 
   valaddr_reg:x2; val_offset:1308*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1308*FLEN/8, x6, x4, x5)

inst_685:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x339 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x339 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3739; op2val:0xb739; 
   valaddr_reg:x2; val_offset:1310*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1310*FLEN/8, x6, x4, x5)

inst_686:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x339 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x339 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3739; op2val:0xb739; 
   valaddr_reg:x2; val_offset:1312*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1312*FLEN/8, x6, x4, x5)

inst_687:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x339 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x339 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3739; op2val:0xb739; 
   valaddr_reg:x2; val_offset:1314*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1314*FLEN/8, x6, x4, x5)

inst_688:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x339 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x339 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3739; op2val:0xb739; 
   valaddr_reg:x2; val_offset:1316*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1316*FLEN/8, x6, x4, x5)

inst_689:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x339 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x339 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3739; op2val:0xb739; 
   valaddr_reg:x2; val_offset:1318*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1318*FLEN/8, x6, x4, x5)

inst_690:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x02c and fs2 == 1 and fe2 == 0x0e and fm2 == 0x02c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x382c; op2val:0xb82c; 
   valaddr_reg:x2; val_offset:1320*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1320*FLEN/8, x6, x4, x5)

inst_691:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x02c and fs2 == 1 and fe2 == 0x0e and fm2 == 0x02c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x382c; op2val:0xb82c; 
   valaddr_reg:x2; val_offset:1322*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1322*FLEN/8, x6, x4, x5)

inst_692:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x02c and fs2 == 1 and fe2 == 0x0e and fm2 == 0x02c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x382c; op2val:0xb82c; 
   valaddr_reg:x2; val_offset:1324*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1324*FLEN/8, x6, x4, x5)

inst_693:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x02c and fs2 == 1 and fe2 == 0x0e and fm2 == 0x02c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x382c; op2val:0xb82c; 
   valaddr_reg:x2; val_offset:1326*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1326*FLEN/8, x6, x4, x5)

inst_694:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x02c and fs2 == 1 and fe2 == 0x0e and fm2 == 0x02c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x382c; op2val:0xb82c; 
   valaddr_reg:x2; val_offset:1328*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1328*FLEN/8, x6, x4, x5)

inst_695:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x39d and fs2 == 1 and fe2 == 0x0e and fm2 == 0x39d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b9d; op2val:0xbb9d; 
   valaddr_reg:x2; val_offset:1330*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1330*FLEN/8, x6, x4, x5)

inst_696:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x39d and fs2 == 1 and fe2 == 0x0e and fm2 == 0x39d and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b9d; op2val:0xbb9d; 
   valaddr_reg:x2; val_offset:1332*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1332*FLEN/8, x6, x4, x5)

inst_697:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x39d and fs2 == 1 and fe2 == 0x0e and fm2 == 0x39d and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b9d; op2val:0xbb9d; 
   valaddr_reg:x2; val_offset:1334*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1334*FLEN/8, x6, x4, x5)

inst_698:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x39d and fs2 == 1 and fe2 == 0x0e and fm2 == 0x39d and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b9d; op2val:0xbb9d; 
   valaddr_reg:x2; val_offset:1336*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1336*FLEN/8, x6, x4, x5)

inst_699:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x39d and fs2 == 1 and fe2 == 0x0e and fm2 == 0x39d and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b9d; op2val:0xbb9d; 
   valaddr_reg:x2; val_offset:1338*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1338*FLEN/8, x6, x4, x5)

inst_700:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3a1 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x3a1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37a1; op2val:0xb7a1; 
   valaddr_reg:x2; val_offset:1340*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1340*FLEN/8, x6, x4, x5)

inst_701:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3a1 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x3a1 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37a1; op2val:0xb7a1; 
   valaddr_reg:x2; val_offset:1342*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1342*FLEN/8, x6, x4, x5)

inst_702:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3a1 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x3a1 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37a1; op2val:0xb7a1; 
   valaddr_reg:x2; val_offset:1344*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1344*FLEN/8, x6, x4, x5)

inst_703:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3a1 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x3a1 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37a1; op2val:0xb7a1; 
   valaddr_reg:x2; val_offset:1346*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1346*FLEN/8, x6, x4, x5)

inst_704:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3a1 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x3a1 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37a1; op2val:0xb7a1; 
   valaddr_reg:x2; val_offset:1348*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1348*FLEN/8, x6, x4, x5)

inst_705:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0c6 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0c6 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38c6; op2val:0xb8c6; 
   valaddr_reg:x2; val_offset:1350*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1350*FLEN/8, x6, x4, x5)

inst_706:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0c6 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0c6 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38c6; op2val:0xb8c6; 
   valaddr_reg:x2; val_offset:1352*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1352*FLEN/8, x6, x4, x5)

inst_707:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0c6 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0c6 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38c6; op2val:0xb8c6; 
   valaddr_reg:x2; val_offset:1354*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1354*FLEN/8, x6, x4, x5)

inst_708:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0c6 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0c6 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38c6; op2val:0xb8c6; 
   valaddr_reg:x2; val_offset:1356*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1356*FLEN/8, x6, x4, x5)

inst_709:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0c6 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0c6 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38c6; op2val:0xb8c6; 
   valaddr_reg:x2; val_offset:1358*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1358*FLEN/8, x6, x4, x5)

inst_710:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0ae and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0ae and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38ae; op2val:0xb8ae; 
   valaddr_reg:x2; val_offset:1360*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1360*FLEN/8, x6, x4, x5)

inst_711:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0ae and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0ae and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38ae; op2val:0xb8ae; 
   valaddr_reg:x2; val_offset:1362*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1362*FLEN/8, x6, x4, x5)

inst_712:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0ae and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0ae and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38ae; op2val:0xb8ae; 
   valaddr_reg:x2; val_offset:1364*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1364*FLEN/8, x6, x4, x5)

inst_713:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0ae and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0ae and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38ae; op2val:0xb8ae; 
   valaddr_reg:x2; val_offset:1366*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1366*FLEN/8, x6, x4, x5)

inst_714:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0ae and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0ae and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38ae; op2val:0xb8ae; 
   valaddr_reg:x2; val_offset:1368*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1368*FLEN/8, x6, x4, x5)

inst_715:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1d9 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x1d8 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2dd9; op2val:0xadd8; 
   valaddr_reg:x2; val_offset:1370*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1370*FLEN/8, x6, x4, x5)

inst_716:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1d9 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x1d8 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2dd9; op2val:0xadd8; 
   valaddr_reg:x2; val_offset:1372*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1372*FLEN/8, x6, x4, x5)

inst_717:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1d9 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x1d8 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2dd9; op2val:0xadd8; 
   valaddr_reg:x2; val_offset:1374*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1374*FLEN/8, x6, x4, x5)

inst_718:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1d9 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x1d8 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2dd9; op2val:0xadd8; 
   valaddr_reg:x2; val_offset:1376*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1376*FLEN/8, x6, x4, x5)

inst_719:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1d9 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x1d8 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2dd9; op2val:0xadd8; 
   valaddr_reg:x2; val_offset:1378*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1378*FLEN/8, x6, x4, x5)

inst_720:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x118 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x117 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3118; op2val:0xb117; 
   valaddr_reg:x2; val_offset:1380*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1380*FLEN/8, x6, x4, x5)

inst_721:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x118 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x117 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3118; op2val:0xb117; 
   valaddr_reg:x2; val_offset:1382*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1382*FLEN/8, x6, x4, x5)

inst_722:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x118 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x117 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3118; op2val:0xb117; 
   valaddr_reg:x2; val_offset:1384*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1384*FLEN/8, x6, x4, x5)

inst_723:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x118 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x117 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3118; op2val:0xb117; 
   valaddr_reg:x2; val_offset:1386*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1386*FLEN/8, x6, x4, x5)

inst_724:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x118 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x117 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3118; op2val:0xb117; 
   valaddr_reg:x2; val_offset:1388*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1388*FLEN/8, x6, x4, x5)

inst_725:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x140 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x140 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3940; op2val:0xb940; 
   valaddr_reg:x2; val_offset:1390*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1390*FLEN/8, x6, x4, x5)

inst_726:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x140 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x140 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3940; op2val:0xb940; 
   valaddr_reg:x2; val_offset:1392*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1392*FLEN/8, x6, x4, x5)

inst_727:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x140 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x140 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3940; op2val:0xb940; 
   valaddr_reg:x2; val_offset:1394*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1394*FLEN/8, x6, x4, x5)

inst_728:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x140 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x140 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3940; op2val:0xb940; 
   valaddr_reg:x2; val_offset:1396*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1396*FLEN/8, x6, x4, x5)

inst_729:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x140 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x140 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3940; op2val:0xb940; 
   valaddr_reg:x2; val_offset:1398*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1398*FLEN/8, x6, x4, x5)

inst_730:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0ce and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0ce and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x34ce; op2val:0xb4ce; 
   valaddr_reg:x2; val_offset:1400*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1400*FLEN/8, x6, x4, x5)

inst_731:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0ce and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0ce and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x34ce; op2val:0xb4ce; 
   valaddr_reg:x2; val_offset:1402*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1402*FLEN/8, x6, x4, x5)

inst_732:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0ce and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0ce and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x34ce; op2val:0xb4ce; 
   valaddr_reg:x2; val_offset:1404*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1404*FLEN/8, x6, x4, x5)

inst_733:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0ce and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0ce and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x34ce; op2val:0xb4ce; 
   valaddr_reg:x2; val_offset:1406*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1406*FLEN/8, x6, x4, x5)

inst_734:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0ce and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0ce and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x34ce; op2val:0xb4ce; 
   valaddr_reg:x2; val_offset:1408*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1408*FLEN/8, x6, x4, x5)

inst_735:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x195 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x195 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3995; op2val:0xb995; 
   valaddr_reg:x2; val_offset:1410*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1410*FLEN/8, x6, x4, x5)

inst_736:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x195 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x195 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3995; op2val:0xb995; 
   valaddr_reg:x2; val_offset:1412*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1412*FLEN/8, x6, x4, x5)

inst_737:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x195 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x195 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3995; op2val:0xb995; 
   valaddr_reg:x2; val_offset:1414*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1414*FLEN/8, x6, x4, x5)

inst_738:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x195 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x195 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3995; op2val:0xb995; 
   valaddr_reg:x2; val_offset:1416*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1416*FLEN/8, x6, x4, x5)

inst_739:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x195 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x195 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3995; op2val:0xb995; 
   valaddr_reg:x2; val_offset:1418*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1418*FLEN/8, x6, x4, x5)

inst_740:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2c3 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x2c2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2ec3; op2val:0xaec2; 
   valaddr_reg:x2; val_offset:1420*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1420*FLEN/8, x6, x4, x5)

inst_741:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2c3 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x2c2 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2ec3; op2val:0xaec2; 
   valaddr_reg:x2; val_offset:1422*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1422*FLEN/8, x6, x4, x5)

inst_742:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2c3 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x2c2 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2ec3; op2val:0xaec2; 
   valaddr_reg:x2; val_offset:1424*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1424*FLEN/8, x6, x4, x5)

inst_743:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2c3 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x2c2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2ec3; op2val:0xaec2; 
   valaddr_reg:x2; val_offset:1426*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1426*FLEN/8, x6, x4, x5)

inst_744:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2c3 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x2c2 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2ec3; op2val:0xaec2; 
   valaddr_reg:x2; val_offset:1428*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1428*FLEN/8, x6, x4, x5)

inst_745:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1f9 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1f8 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35f9; op2val:0xb5f8; 
   valaddr_reg:x2; val_offset:1430*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1430*FLEN/8, x6, x4, x5)

inst_746:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1f9 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1f8 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35f9; op2val:0xb5f8; 
   valaddr_reg:x2; val_offset:1432*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1432*FLEN/8, x6, x4, x5)

inst_747:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1f9 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1f8 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35f9; op2val:0xb5f8; 
   valaddr_reg:x2; val_offset:1434*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1434*FLEN/8, x6, x4, x5)

inst_748:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1f9 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1f8 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35f9; op2val:0xb5f8; 
   valaddr_reg:x2; val_offset:1436*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1436*FLEN/8, x6, x4, x5)

inst_749:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1f9 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1f8 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35f9; op2val:0xb5f8; 
   valaddr_reg:x2; val_offset:1438*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1438*FLEN/8, x6, x4, x5)

inst_750:
// fs1 == 0 and fe1 == 0x09 and fm1 == 0x287 and fs2 == 1 and fe2 == 0x09 and fm2 == 0x283 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2687; op2val:0xa683; 
   valaddr_reg:x2; val_offset:1440*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1440*FLEN/8, x6, x4, x5)

inst_751:
// fs1 == 0 and fe1 == 0x09 and fm1 == 0x287 and fs2 == 1 and fe2 == 0x09 and fm2 == 0x283 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2687; op2val:0xa683; 
   valaddr_reg:x2; val_offset:1442*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1442*FLEN/8, x6, x4, x5)

inst_752:
// fs1 == 0 and fe1 == 0x09 and fm1 == 0x287 and fs2 == 1 and fe2 == 0x09 and fm2 == 0x283 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2687; op2val:0xa683; 
   valaddr_reg:x2; val_offset:1444*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1444*FLEN/8, x6, x4, x5)

inst_753:
// fs1 == 0 and fe1 == 0x09 and fm1 == 0x287 and fs2 == 1 and fe2 == 0x09 and fm2 == 0x283 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2687; op2val:0xa683; 
   valaddr_reg:x2; val_offset:1446*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1446*FLEN/8, x6, x4, x5)

inst_754:
// fs1 == 0 and fe1 == 0x09 and fm1 == 0x287 and fs2 == 1 and fe2 == 0x09 and fm2 == 0x283 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2687; op2val:0xa683; 
   valaddr_reg:x2; val_offset:1448*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1448*FLEN/8, x6, x4, x5)

inst_755:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x379 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x379 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b79; op2val:0xbb79; 
   valaddr_reg:x2; val_offset:1450*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1450*FLEN/8, x6, x4, x5)

inst_756:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x379 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x379 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b79; op2val:0xbb79; 
   valaddr_reg:x2; val_offset:1452*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1452*FLEN/8, x6, x4, x5)

inst_757:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x379 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x379 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b79; op2val:0xbb79; 
   valaddr_reg:x2; val_offset:1454*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1454*FLEN/8, x6, x4, x5)

inst_758:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x379 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x379 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b79; op2val:0xbb79; 
   valaddr_reg:x2; val_offset:1456*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1456*FLEN/8, x6, x4, x5)

inst_759:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x379 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x379 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b79; op2val:0xbb79; 
   valaddr_reg:x2; val_offset:1458*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1458*FLEN/8, x6, x4, x5)

inst_760:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x000 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3400; op2val:0xb400; 
   valaddr_reg:x2; val_offset:1460*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1460*FLEN/8, x6, x4, x5)

inst_761:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x000 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x000 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3400; op2val:0xb400; 
   valaddr_reg:x2; val_offset:1462*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1462*FLEN/8, x6, x4, x5)

inst_762:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x000 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x000 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3400; op2val:0xb400; 
   valaddr_reg:x2; val_offset:1464*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1464*FLEN/8, x6, x4, x5)

inst_763:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x000 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x000 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3400; op2val:0xb400; 
   valaddr_reg:x2; val_offset:1466*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1466*FLEN/8, x6, x4, x5)

inst_764:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x000 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x000 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3400; op2val:0xb400; 
   valaddr_reg:x2; val_offset:1468*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1468*FLEN/8, x6, x4, x5)

inst_765:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3ef and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3ef and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bef; op2val:0xbbef; 
   valaddr_reg:x2; val_offset:1470*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1470*FLEN/8, x6, x4, x5)

inst_766:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3ef and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3ef and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bef; op2val:0xbbef; 
   valaddr_reg:x2; val_offset:1472*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1472*FLEN/8, x6, x4, x5)

inst_767:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3ef and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3ef and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bef; op2val:0xbbef; 
   valaddr_reg:x2; val_offset:1474*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1474*FLEN/8, x6, x4, x5)

inst_768:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3ef and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3ef and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bef; op2val:0xbbef; 
   valaddr_reg:x2; val_offset:1476*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1476*FLEN/8, x6, x4, x5)

inst_769:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3ef and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3ef and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bef; op2val:0xbbef; 
   valaddr_reg:x2; val_offset:1478*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1478*FLEN/8, x6, x4, x5)

inst_770:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3b2 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x3b2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37b2; op2val:0xb7b2; 
   valaddr_reg:x2; val_offset:1480*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1480*FLEN/8, x6, x4, x5)

inst_771:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3b2 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x3b2 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37b2; op2val:0xb7b2; 
   valaddr_reg:x2; val_offset:1482*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1482*FLEN/8, x6, x4, x5)

inst_772:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3b2 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x3b2 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37b2; op2val:0xb7b2; 
   valaddr_reg:x2; val_offset:1484*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1484*FLEN/8, x6, x4, x5)

inst_773:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3b2 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x3b2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37b2; op2val:0xb7b2; 
   valaddr_reg:x2; val_offset:1486*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1486*FLEN/8, x6, x4, x5)

inst_774:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3b2 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x3b2 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37b2; op2val:0xb7b2; 
   valaddr_reg:x2; val_offset:1488*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1488*FLEN/8, x6, x4, x5)

inst_775:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x017 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x017 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3817; op2val:0xb817; 
   valaddr_reg:x2; val_offset:1490*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1490*FLEN/8, x6, x4, x5)

inst_776:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x017 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x017 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3817; op2val:0xb817; 
   valaddr_reg:x2; val_offset:1492*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1492*FLEN/8, x6, x4, x5)

inst_777:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x017 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x017 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3817; op2val:0xb817; 
   valaddr_reg:x2; val_offset:1494*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1494*FLEN/8, x6, x4, x5)

inst_778:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x017 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x017 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3817; op2val:0xb817; 
   valaddr_reg:x2; val_offset:1496*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1496*FLEN/8, x6, x4, x5)

inst_779:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x017 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x017 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3817; op2val:0xb817; 
   valaddr_reg:x2; val_offset:1498*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1498*FLEN/8, x6, x4, x5)

inst_780:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x121 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x121 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3521; op2val:0xb521; 
   valaddr_reg:x2; val_offset:1500*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1500*FLEN/8, x6, x4, x5)

inst_781:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x121 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x121 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3521; op2val:0xb521; 
   valaddr_reg:x2; val_offset:1502*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1502*FLEN/8, x6, x4, x5)

inst_782:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x121 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x121 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3521; op2val:0xb521; 
   valaddr_reg:x2; val_offset:1504*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1504*FLEN/8, x6, x4, x5)

inst_783:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x121 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x121 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3521; op2val:0xb521; 
   valaddr_reg:x2; val_offset:1506*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1506*FLEN/8, x6, x4, x5)

inst_784:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x121 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x121 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3521; op2val:0xb521; 
   valaddr_reg:x2; val_offset:1508*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1508*FLEN/8, x6, x4, x5)

inst_785:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x10d and fs2 == 1 and fe2 == 0x0e and fm2 == 0x10d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x390d; op2val:0xb90d; 
   valaddr_reg:x2; val_offset:1510*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1510*FLEN/8, x6, x4, x5)

inst_786:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x10d and fs2 == 1 and fe2 == 0x0e and fm2 == 0x10d and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x390d; op2val:0xb90d; 
   valaddr_reg:x2; val_offset:1512*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1512*FLEN/8, x6, x4, x5)

inst_787:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x10d and fs2 == 1 and fe2 == 0x0e and fm2 == 0x10d and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x390d; op2val:0xb90d; 
   valaddr_reg:x2; val_offset:1514*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1514*FLEN/8, x6, x4, x5)

inst_788:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x10d and fs2 == 1 and fe2 == 0x0e and fm2 == 0x10d and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x390d; op2val:0xb90d; 
   valaddr_reg:x2; val_offset:1516*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1516*FLEN/8, x6, x4, x5)

inst_789:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x10d and fs2 == 1 and fe2 == 0x0e and fm2 == 0x10d and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x390d; op2val:0xb90d; 
   valaddr_reg:x2; val_offset:1518*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1518*FLEN/8, x6, x4, x5)

inst_790:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1e9 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1e9 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39e9; op2val:0xb9e9; 
   valaddr_reg:x2; val_offset:1520*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1520*FLEN/8, x6, x4, x5)

inst_791:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1e9 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1e9 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39e9; op2val:0xb9e9; 
   valaddr_reg:x2; val_offset:1522*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1522*FLEN/8, x6, x4, x5)

inst_792:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1e9 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1e9 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39e9; op2val:0xb9e9; 
   valaddr_reg:x2; val_offset:1524*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1524*FLEN/8, x6, x4, x5)

inst_793:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1e9 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1e9 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39e9; op2val:0xb9e9; 
   valaddr_reg:x2; val_offset:1526*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1526*FLEN/8, x6, x4, x5)
RVTEST_SIGBASE(x4,signature_x4_6)

inst_794:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1e9 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1e9 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39e9; op2val:0xb9e9; 
   valaddr_reg:x2; val_offset:1528*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1528*FLEN/8, x6, x4, x5)

inst_795:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x08c and fs2 == 1 and fe2 == 0x0e and fm2 == 0x08c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x388c; op2val:0xb88c; 
   valaddr_reg:x2; val_offset:1530*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1530*FLEN/8, x6, x4, x5)

inst_796:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x08c and fs2 == 1 and fe2 == 0x0e and fm2 == 0x08c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x388c; op2val:0xb88c; 
   valaddr_reg:x2; val_offset:1532*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1532*FLEN/8, x6, x4, x5)

inst_797:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x08c and fs2 == 1 and fe2 == 0x0e and fm2 == 0x08c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x388c; op2val:0xb88c; 
   valaddr_reg:x2; val_offset:1534*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1534*FLEN/8, x6, x4, x5)

inst_798:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x08c and fs2 == 1 and fe2 == 0x0e and fm2 == 0x08c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x388c; op2val:0xb88c; 
   valaddr_reg:x2; val_offset:1536*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1536*FLEN/8, x6, x4, x5)

inst_799:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x08c and fs2 == 1 and fe2 == 0x0e and fm2 == 0x08c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x388c; op2val:0xb88c; 
   valaddr_reg:x2; val_offset:1538*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1538*FLEN/8, x6, x4, x5)

inst_800:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x37d and fs2 == 1 and fe2 == 0x0e and fm2 == 0x37d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b7d; op2val:0xbb7d; 
   valaddr_reg:x2; val_offset:1540*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1540*FLEN/8, x6, x4, x5)

inst_801:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x37d and fs2 == 1 and fe2 == 0x0e and fm2 == 0x37d and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b7d; op2val:0xbb7d; 
   valaddr_reg:x2; val_offset:1542*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1542*FLEN/8, x6, x4, x5)

inst_802:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x37d and fs2 == 1 and fe2 == 0x0e and fm2 == 0x37d and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b7d; op2val:0xbb7d; 
   valaddr_reg:x2; val_offset:1544*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1544*FLEN/8, x6, x4, x5)

inst_803:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x37d and fs2 == 1 and fe2 == 0x0e and fm2 == 0x37d and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b7d; op2val:0xbb7d; 
   valaddr_reg:x2; val_offset:1546*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1546*FLEN/8, x6, x4, x5)

inst_804:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x37d and fs2 == 1 and fe2 == 0x0e and fm2 == 0x37d and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b7d; op2val:0xbb7d; 
   valaddr_reg:x2; val_offset:1548*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1548*FLEN/8, x6, x4, x5)

inst_805:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0c4 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0c4 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x34c4; op2val:0xb4c4; 
   valaddr_reg:x2; val_offset:1550*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1550*FLEN/8, x6, x4, x5)

inst_806:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0c4 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0c4 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x34c4; op2val:0xb4c4; 
   valaddr_reg:x2; val_offset:1552*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1552*FLEN/8, x6, x4, x5)

inst_807:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0c4 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0c4 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x34c4; op2val:0xb4c4; 
   valaddr_reg:x2; val_offset:1554*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1554*FLEN/8, x6, x4, x5)

inst_808:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0c4 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0c4 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x34c4; op2val:0xb4c4; 
   valaddr_reg:x2; val_offset:1556*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1556*FLEN/8, x6, x4, x5)

inst_809:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0c4 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0c4 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x34c4; op2val:0xb4c4; 
   valaddr_reg:x2; val_offset:1558*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1558*FLEN/8, x6, x4, x5)

inst_810:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x063 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x063 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3863; op2val:0xb863; 
   valaddr_reg:x2; val_offset:1560*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1560*FLEN/8, x6, x4, x5)

inst_811:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x063 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x063 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3863; op2val:0xb863; 
   valaddr_reg:x2; val_offset:1562*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1562*FLEN/8, x6, x4, x5)

inst_812:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x063 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x063 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3863; op2val:0xb863; 
   valaddr_reg:x2; val_offset:1564*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1564*FLEN/8, x6, x4, x5)

inst_813:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x063 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x063 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3863; op2val:0xb863; 
   valaddr_reg:x2; val_offset:1566*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1566*FLEN/8, x6, x4, x5)

inst_814:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x063 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x063 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3863; op2val:0xb863; 
   valaddr_reg:x2; val_offset:1568*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1568*FLEN/8, x6, x4, x5)

inst_815:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x30c and fs2 == 1 and fe2 == 0x0e and fm2 == 0x30c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b0c; op2val:0xbb0c; 
   valaddr_reg:x2; val_offset:1570*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1570*FLEN/8, x6, x4, x5)

inst_816:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x30c and fs2 == 1 and fe2 == 0x0e and fm2 == 0x30c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b0c; op2val:0xbb0c; 
   valaddr_reg:x2; val_offset:1572*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1572*FLEN/8, x6, x4, x5)

inst_817:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x30c and fs2 == 1 and fe2 == 0x0e and fm2 == 0x30c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b0c; op2val:0xbb0c; 
   valaddr_reg:x2; val_offset:1574*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1574*FLEN/8, x6, x4, x5)

inst_818:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x30c and fs2 == 1 and fe2 == 0x0e and fm2 == 0x30c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b0c; op2val:0xbb0c; 
   valaddr_reg:x2; val_offset:1576*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1576*FLEN/8, x6, x4, x5)

inst_819:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x30c and fs2 == 1 and fe2 == 0x0e and fm2 == 0x30c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b0c; op2val:0xbb0c; 
   valaddr_reg:x2; val_offset:1578*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1578*FLEN/8, x6, x4, x5)

inst_820:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x257 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x257 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a57; op2val:0xba57; 
   valaddr_reg:x2; val_offset:1580*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1580*FLEN/8, x6, x4, x5)

inst_821:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x257 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x257 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a57; op2val:0xba57; 
   valaddr_reg:x2; val_offset:1582*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1582*FLEN/8, x6, x4, x5)

inst_822:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x257 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x257 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a57; op2val:0xba57; 
   valaddr_reg:x2; val_offset:1584*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1584*FLEN/8, x6, x4, x5)

inst_823:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x257 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x257 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a57; op2val:0xba57; 
   valaddr_reg:x2; val_offset:1586*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1586*FLEN/8, x6, x4, x5)

inst_824:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x257 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x257 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a57; op2val:0xba57; 
   valaddr_reg:x2; val_offset:1588*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1588*FLEN/8, x6, x4, x5)

inst_825:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x2ab and fs2 == 1 and fe2 == 0x0a and fm2 == 0x2a9 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2aab; op2val:0xaaa9; 
   valaddr_reg:x2; val_offset:1590*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1590*FLEN/8, x6, x4, x5)

inst_826:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x2ab and fs2 == 1 and fe2 == 0x0a and fm2 == 0x2a9 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2aab; op2val:0xaaa9; 
   valaddr_reg:x2; val_offset:1592*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1592*FLEN/8, x6, x4, x5)

inst_827:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x2ab and fs2 == 1 and fe2 == 0x0a and fm2 == 0x2a9 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2aab; op2val:0xaaa9; 
   valaddr_reg:x2; val_offset:1594*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1594*FLEN/8, x6, x4, x5)

inst_828:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x2ab and fs2 == 1 and fe2 == 0x0a and fm2 == 0x2a9 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2aab; op2val:0xaaa9; 
   valaddr_reg:x2; val_offset:1596*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1596*FLEN/8, x6, x4, x5)

inst_829:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x2ab and fs2 == 1 and fe2 == 0x0a and fm2 == 0x2a9 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2aab; op2val:0xaaa9; 
   valaddr_reg:x2; val_offset:1598*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1598*FLEN/8, x6, x4, x5)

inst_830:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0f9 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0f9 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38f9; op2val:0xb8f9; 
   valaddr_reg:x2; val_offset:1600*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1600*FLEN/8, x6, x4, x5)

inst_831:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0f9 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0f9 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38f9; op2val:0xb8f9; 
   valaddr_reg:x2; val_offset:1602*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1602*FLEN/8, x6, x4, x5)

inst_832:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0f9 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0f9 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38f9; op2val:0xb8f9; 
   valaddr_reg:x2; val_offset:1604*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1604*FLEN/8, x6, x4, x5)

inst_833:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0f9 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0f9 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38f9; op2val:0xb8f9; 
   valaddr_reg:x2; val_offset:1606*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1606*FLEN/8, x6, x4, x5)

inst_834:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0f9 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0f9 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38f9; op2val:0xb8f9; 
   valaddr_reg:x2; val_offset:1608*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1608*FLEN/8, x6, x4, x5)

inst_835:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2ca and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2c9 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3aca; op2val:0xbac9; 
   valaddr_reg:x2; val_offset:1610*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1610*FLEN/8, x6, x4, x5)

inst_836:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2ca and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2c9 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3aca; op2val:0xbac9; 
   valaddr_reg:x2; val_offset:1612*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1612*FLEN/8, x6, x4, x5)

inst_837:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2ca and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2c9 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3aca; op2val:0xbac9; 
   valaddr_reg:x2; val_offset:1614*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1614*FLEN/8, x6, x4, x5)

inst_838:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2ca and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2c9 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3aca; op2val:0xbac9; 
   valaddr_reg:x2; val_offset:1616*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1616*FLEN/8, x6, x4, x5)

inst_839:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2ca and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2c9 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3aca; op2val:0xbac9; 
   valaddr_reg:x2; val_offset:1618*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1618*FLEN/8, x6, x4, x5)

inst_840:
// fs1 == 0 and fe1 == 0x09 and fm1 == 0x05f and fs2 == 1 and fe2 == 0x09 and fm2 == 0x05a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x245f; op2val:0xa45a; 
   valaddr_reg:x2; val_offset:1620*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1620*FLEN/8, x6, x4, x5)

inst_841:
// fs1 == 0 and fe1 == 0x09 and fm1 == 0x05f and fs2 == 1 and fe2 == 0x09 and fm2 == 0x05a and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x245f; op2val:0xa45a; 
   valaddr_reg:x2; val_offset:1622*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1622*FLEN/8, x6, x4, x5)

inst_842:
// fs1 == 0 and fe1 == 0x09 and fm1 == 0x05f and fs2 == 1 and fe2 == 0x09 and fm2 == 0x05a and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x245f; op2val:0xa45a; 
   valaddr_reg:x2; val_offset:1624*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1624*FLEN/8, x6, x4, x5)

inst_843:
// fs1 == 0 and fe1 == 0x09 and fm1 == 0x05f and fs2 == 1 and fe2 == 0x09 and fm2 == 0x05a and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x245f; op2val:0xa45a; 
   valaddr_reg:x2; val_offset:1626*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1626*FLEN/8, x6, x4, x5)

inst_844:
// fs1 == 0 and fe1 == 0x09 and fm1 == 0x05f and fs2 == 1 and fe2 == 0x09 and fm2 == 0x05a and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x245f; op2val:0xa45a; 
   valaddr_reg:x2; val_offset:1628*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1628*FLEN/8, x6, x4, x5)

inst_845:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0c0 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0c0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38c0; op2val:0xb8c0; 
   valaddr_reg:x2; val_offset:1630*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1630*FLEN/8, x6, x4, x5)

inst_846:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0c0 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0c0 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38c0; op2val:0xb8c0; 
   valaddr_reg:x2; val_offset:1632*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1632*FLEN/8, x6, x4, x5)

inst_847:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0c0 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0c0 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38c0; op2val:0xb8c0; 
   valaddr_reg:x2; val_offset:1634*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1634*FLEN/8, x6, x4, x5)

inst_848:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0c0 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0c0 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38c0; op2val:0xb8c0; 
   valaddr_reg:x2; val_offset:1636*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1636*FLEN/8, x6, x4, x5)

inst_849:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0c0 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0c0 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38c0; op2val:0xb8c0; 
   valaddr_reg:x2; val_offset:1638*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1638*FLEN/8, x6, x4, x5)

inst_850:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x3d5 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x3d4 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2fd5; op2val:0xafd4; 
   valaddr_reg:x2; val_offset:1640*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1640*FLEN/8, x6, x4, x5)

inst_851:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x3d5 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x3d4 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2fd5; op2val:0xafd4; 
   valaddr_reg:x2; val_offset:1642*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1642*FLEN/8, x6, x4, x5)

inst_852:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x3d5 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x3d4 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2fd5; op2val:0xafd4; 
   valaddr_reg:x2; val_offset:1644*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1644*FLEN/8, x6, x4, x5)

inst_853:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x3d5 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x3d4 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2fd5; op2val:0xafd4; 
   valaddr_reg:x2; val_offset:1646*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1646*FLEN/8, x6, x4, x5)

inst_854:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x3d5 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x3d4 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2fd5; op2val:0xafd4; 
   valaddr_reg:x2; val_offset:1648*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1648*FLEN/8, x6, x4, x5)

inst_855:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x150 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x14f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2d50; op2val:0xad4f; 
   valaddr_reg:x2; val_offset:1650*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1650*FLEN/8, x6, x4, x5)

inst_856:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x150 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x14f and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2d50; op2val:0xad4f; 
   valaddr_reg:x2; val_offset:1652*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1652*FLEN/8, x6, x4, x5)

inst_857:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x150 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x14f and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2d50; op2val:0xad4f; 
   valaddr_reg:x2; val_offset:1654*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1654*FLEN/8, x6, x4, x5)

inst_858:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x150 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x14f and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2d50; op2val:0xad4f; 
   valaddr_reg:x2; val_offset:1656*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1656*FLEN/8, x6, x4, x5)

inst_859:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x150 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x14f and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2d50; op2val:0xad4f; 
   valaddr_reg:x2; val_offset:1658*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1658*FLEN/8, x6, x4, x5)

inst_860:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x003 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x003 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3803; op2val:0xb803; 
   valaddr_reg:x2; val_offset:1660*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1660*FLEN/8, x6, x4, x5)

inst_861:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x003 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x003 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3803; op2val:0xb803; 
   valaddr_reg:x2; val_offset:1662*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1662*FLEN/8, x6, x4, x5)

inst_862:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x003 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x003 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3803; op2val:0xb803; 
   valaddr_reg:x2; val_offset:1664*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1664*FLEN/8, x6, x4, x5)

inst_863:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x003 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x003 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3803; op2val:0xb803; 
   valaddr_reg:x2; val_offset:1666*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1666*FLEN/8, x6, x4, x5)

inst_864:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x003 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x003 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3803; op2val:0xb803; 
   valaddr_reg:x2; val_offset:1668*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1668*FLEN/8, x6, x4, x5)

inst_865:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x147 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x147 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3547; op2val:0xb547; 
   valaddr_reg:x2; val_offset:1670*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1670*FLEN/8, x6, x4, x5)

inst_866:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x147 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x147 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3547; op2val:0xb547; 
   valaddr_reg:x2; val_offset:1672*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1672*FLEN/8, x6, x4, x5)

inst_867:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x147 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x147 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3547; op2val:0xb547; 
   valaddr_reg:x2; val_offset:1674*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1674*FLEN/8, x6, x4, x5)

inst_868:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x147 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x147 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3547; op2val:0xb547; 
   valaddr_reg:x2; val_offset:1676*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1676*FLEN/8, x6, x4, x5)

inst_869:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x147 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x147 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3547; op2val:0xb547; 
   valaddr_reg:x2; val_offset:1678*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1678*FLEN/8, x6, x4, x5)

inst_870:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x23e and fs2 == 1 and fe2 == 0x0d and fm2 == 0x23e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x363e; op2val:0xb63e; 
   valaddr_reg:x2; val_offset:1680*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1680*FLEN/8, x6, x4, x5)

inst_871:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x23e and fs2 == 1 and fe2 == 0x0d and fm2 == 0x23e and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x363e; op2val:0xb63e; 
   valaddr_reg:x2; val_offset:1682*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1682*FLEN/8, x6, x4, x5)

inst_872:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x23e and fs2 == 1 and fe2 == 0x0d and fm2 == 0x23e and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x363e; op2val:0xb63e; 
   valaddr_reg:x2; val_offset:1684*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1684*FLEN/8, x6, x4, x5)

inst_873:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x23e and fs2 == 1 and fe2 == 0x0d and fm2 == 0x23e and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x363e; op2val:0xb63e; 
   valaddr_reg:x2; val_offset:1686*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1686*FLEN/8, x6, x4, x5)

inst_874:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x23e and fs2 == 1 and fe2 == 0x0d and fm2 == 0x23e and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x363e; op2val:0xb63e; 
   valaddr_reg:x2; val_offset:1688*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1688*FLEN/8, x6, x4, x5)

inst_875:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x147 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x147 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3947; op2val:0xb947; 
   valaddr_reg:x2; val_offset:1690*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1690*FLEN/8, x6, x4, x5)

inst_876:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x147 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x147 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3947; op2val:0xb947; 
   valaddr_reg:x2; val_offset:1692*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1692*FLEN/8, x6, x4, x5)

inst_877:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x147 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x147 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3947; op2val:0xb947; 
   valaddr_reg:x2; val_offset:1694*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1694*FLEN/8, x6, x4, x5)

inst_878:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x147 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x147 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3947; op2val:0xb947; 
   valaddr_reg:x2; val_offset:1696*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1696*FLEN/8, x6, x4, x5)

inst_879:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x147 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x147 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3947; op2val:0xb947; 
   valaddr_reg:x2; val_offset:1698*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1698*FLEN/8, x6, x4, x5)

inst_880:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x277 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x276 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2e77; op2val:0xae76; 
   valaddr_reg:x2; val_offset:1700*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1700*FLEN/8, x6, x4, x5)

inst_881:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x277 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x276 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2e77; op2val:0xae76; 
   valaddr_reg:x2; val_offset:1702*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1702*FLEN/8, x6, x4, x5)

inst_882:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x277 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x276 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2e77; op2val:0xae76; 
   valaddr_reg:x2; val_offset:1704*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1704*FLEN/8, x6, x4, x5)

inst_883:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x277 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x276 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2e77; op2val:0xae76; 
   valaddr_reg:x2; val_offset:1706*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1706*FLEN/8, x6, x4, x5)

inst_884:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x277 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x276 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2e77; op2val:0xae76; 
   valaddr_reg:x2; val_offset:1708*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1708*FLEN/8, x6, x4, x5)

inst_885:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3b7 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3b7 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bb7; op2val:0xbbb7; 
   valaddr_reg:x2; val_offset:1710*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1710*FLEN/8, x6, x4, x5)

inst_886:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3b7 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3b7 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bb7; op2val:0xbbb7; 
   valaddr_reg:x2; val_offset:1712*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1712*FLEN/8, x6, x4, x5)

inst_887:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3b7 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3b7 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bb7; op2val:0xbbb7; 
   valaddr_reg:x2; val_offset:1714*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1714*FLEN/8, x6, x4, x5)

inst_888:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3b7 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3b7 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bb7; op2val:0xbbb7; 
   valaddr_reg:x2; val_offset:1716*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1716*FLEN/8, x6, x4, x5)

inst_889:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3b7 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3b7 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bb7; op2val:0xbbb7; 
   valaddr_reg:x2; val_offset:1718*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1718*FLEN/8, x6, x4, x5)

inst_890:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1f1 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1f1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39f1; op2val:0xb9f1; 
   valaddr_reg:x2; val_offset:1720*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1720*FLEN/8, x6, x4, x5)

inst_891:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1f1 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1f1 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39f1; op2val:0xb9f1; 
   valaddr_reg:x2; val_offset:1722*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1722*FLEN/8, x6, x4, x5)

inst_892:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1f1 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1f1 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39f1; op2val:0xb9f1; 
   valaddr_reg:x2; val_offset:1724*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1724*FLEN/8, x6, x4, x5)

inst_893:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1f1 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1f1 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39f1; op2val:0xb9f1; 
   valaddr_reg:x2; val_offset:1726*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1726*FLEN/8, x6, x4, x5)

inst_894:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1f1 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1f1 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39f1; op2val:0xb9f1; 
   valaddr_reg:x2; val_offset:1728*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1728*FLEN/8, x6, x4, x5)

inst_895:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x10c and fs2 == 1 and fe2 == 0x0c and fm2 == 0x10b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x310c; op2val:0xb10b; 
   valaddr_reg:x2; val_offset:1730*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1730*FLEN/8, x6, x4, x5)

inst_896:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x10c and fs2 == 1 and fe2 == 0x0c and fm2 == 0x10b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x310c; op2val:0xb10b; 
   valaddr_reg:x2; val_offset:1732*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1732*FLEN/8, x6, x4, x5)

inst_897:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x10c and fs2 == 1 and fe2 == 0x0c and fm2 == 0x10b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x310c; op2val:0xb10b; 
   valaddr_reg:x2; val_offset:1734*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1734*FLEN/8, x6, x4, x5)

inst_898:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x10c and fs2 == 1 and fe2 == 0x0c and fm2 == 0x10b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x310c; op2val:0xb10b; 
   valaddr_reg:x2; val_offset:1736*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1736*FLEN/8, x6, x4, x5)

inst_899:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x10c and fs2 == 1 and fe2 == 0x0c and fm2 == 0x10b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x310c; op2val:0xb10b; 
   valaddr_reg:x2; val_offset:1738*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1738*FLEN/8, x6, x4, x5)

inst_900:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x082 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x082 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3482; op2val:0xb482; 
   valaddr_reg:x2; val_offset:1740*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1740*FLEN/8, x6, x4, x5)

inst_901:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x082 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x082 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3482; op2val:0xb482; 
   valaddr_reg:x2; val_offset:1742*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1742*FLEN/8, x6, x4, x5)

inst_902:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x082 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x082 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3482; op2val:0xb482; 
   valaddr_reg:x2; val_offset:1744*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1744*FLEN/8, x6, x4, x5)

inst_903:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x082 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x082 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3482; op2val:0xb482; 
   valaddr_reg:x2; val_offset:1746*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1746*FLEN/8, x6, x4, x5)

inst_904:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x082 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x082 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3482; op2val:0xb482; 
   valaddr_reg:x2; val_offset:1748*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1748*FLEN/8, x6, x4, x5)

inst_905:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x378 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x377 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b78; op2val:0xbb77; 
   valaddr_reg:x2; val_offset:1750*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1750*FLEN/8, x6, x4, x5)

inst_906:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x378 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x377 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b78; op2val:0xbb77; 
   valaddr_reg:x2; val_offset:1752*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1752*FLEN/8, x6, x4, x5)

inst_907:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x378 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x377 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b78; op2val:0xbb77; 
   valaddr_reg:x2; val_offset:1754*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1754*FLEN/8, x6, x4, x5)

inst_908:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x378 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x377 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b78; op2val:0xbb77; 
   valaddr_reg:x2; val_offset:1756*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1756*FLEN/8, x6, x4, x5)

inst_909:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x378 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x377 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b78; op2val:0xbb77; 
   valaddr_reg:x2; val_offset:1758*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1758*FLEN/8, x6, x4, x5)

inst_910:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x032 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x031 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3032; op2val:0xb031; 
   valaddr_reg:x2; val_offset:1760*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1760*FLEN/8, x6, x4, x5)

inst_911:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x032 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x031 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3032; op2val:0xb031; 
   valaddr_reg:x2; val_offset:1762*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1762*FLEN/8, x6, x4, x5)

inst_912:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x032 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x031 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3032; op2val:0xb031; 
   valaddr_reg:x2; val_offset:1764*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1764*FLEN/8, x6, x4, x5)

inst_913:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x032 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x031 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3032; op2val:0xb031; 
   valaddr_reg:x2; val_offset:1766*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1766*FLEN/8, x6, x4, x5)

inst_914:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x032 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x031 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3032; op2val:0xb031; 
   valaddr_reg:x2; val_offset:1768*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1768*FLEN/8, x6, x4, x5)

inst_915:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x233 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x232 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a33; op2val:0xba32; 
   valaddr_reg:x2; val_offset:1770*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1770*FLEN/8, x6, x4, x5)

inst_916:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x233 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x232 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a33; op2val:0xba32; 
   valaddr_reg:x2; val_offset:1772*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1772*FLEN/8, x6, x4, x5)

inst_917:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x233 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x232 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a33; op2val:0xba32; 
   valaddr_reg:x2; val_offset:1774*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1774*FLEN/8, x6, x4, x5)

inst_918:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x233 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x232 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a33; op2val:0xba32; 
   valaddr_reg:x2; val_offset:1776*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1776*FLEN/8, x6, x4, x5)

inst_919:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x233 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x232 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a33; op2val:0xba32; 
   valaddr_reg:x2; val_offset:1778*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1778*FLEN/8, x6, x4, x5)

inst_920:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3e0 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3e0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3be0; op2val:0xbbe0; 
   valaddr_reg:x2; val_offset:1780*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1780*FLEN/8, x6, x4, x5)

inst_921:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3e0 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3e0 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3be0; op2val:0xbbe0; 
   valaddr_reg:x2; val_offset:1782*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1782*FLEN/8, x6, x4, x5)
RVTEST_SIGBASE(x4,signature_x4_7)

inst_922:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3e0 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3e0 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3be0; op2val:0xbbe0; 
   valaddr_reg:x2; val_offset:1784*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1784*FLEN/8, x6, x4, x5)

inst_923:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3e0 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3e0 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3be0; op2val:0xbbe0; 
   valaddr_reg:x2; val_offset:1786*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1786*FLEN/8, x6, x4, x5)

inst_924:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3e0 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3e0 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3be0; op2val:0xbbe0; 
   valaddr_reg:x2; val_offset:1788*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1788*FLEN/8, x6, x4, x5)

inst_925:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x15a and fs2 == 1 and fe2 == 0x0e and fm2 == 0x15a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x395a; op2val:0xb95a; 
   valaddr_reg:x2; val_offset:1790*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1790*FLEN/8, x6, x4, x5)

inst_926:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x15a and fs2 == 1 and fe2 == 0x0e and fm2 == 0x15a and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x395a; op2val:0xb95a; 
   valaddr_reg:x2; val_offset:1792*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1792*FLEN/8, x6, x4, x5)

inst_927:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x15a and fs2 == 1 and fe2 == 0x0e and fm2 == 0x15a and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x395a; op2val:0xb95a; 
   valaddr_reg:x2; val_offset:1794*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1794*FLEN/8, x6, x4, x5)

inst_928:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x15a and fs2 == 1 and fe2 == 0x0e and fm2 == 0x15a and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x395a; op2val:0xb95a; 
   valaddr_reg:x2; val_offset:1796*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1796*FLEN/8, x6, x4, x5)

inst_929:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x15a and fs2 == 1 and fe2 == 0x0e and fm2 == 0x15a and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x395a; op2val:0xb95a; 
   valaddr_reg:x2; val_offset:1798*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1798*FLEN/8, x6, x4, x5)

inst_930:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2cf and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2cf and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3acf; op2val:0xbacf; 
   valaddr_reg:x2; val_offset:1800*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1800*FLEN/8, x6, x4, x5)

inst_931:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2cf and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2cf and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3acf; op2val:0xbacf; 
   valaddr_reg:x2; val_offset:1802*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1802*FLEN/8, x6, x4, x5)

inst_932:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2cf and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2cf and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3acf; op2val:0xbacf; 
   valaddr_reg:x2; val_offset:1804*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1804*FLEN/8, x6, x4, x5)

inst_933:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2cf and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2cf and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3acf; op2val:0xbacf; 
   valaddr_reg:x2; val_offset:1806*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1806*FLEN/8, x6, x4, x5)

inst_934:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2cf and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2cf and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3acf; op2val:0xbacf; 
   valaddr_reg:x2; val_offset:1808*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1808*FLEN/8, x6, x4, x5)

inst_935:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x007 and fs2 == 1 and fe2 == 0x0a and fm2 == 0x004 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2807; op2val:0xa804; 
   valaddr_reg:x2; val_offset:1810*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1810*FLEN/8, x6, x4, x5)

inst_936:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x007 and fs2 == 1 and fe2 == 0x0a and fm2 == 0x004 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2807; op2val:0xa804; 
   valaddr_reg:x2; val_offset:1812*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1812*FLEN/8, x6, x4, x5)

inst_937:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x007 and fs2 == 1 and fe2 == 0x0a and fm2 == 0x004 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2807; op2val:0xa804; 
   valaddr_reg:x2; val_offset:1814*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1814*FLEN/8, x6, x4, x5)

inst_938:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x007 and fs2 == 1 and fe2 == 0x0a and fm2 == 0x004 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2807; op2val:0xa804; 
   valaddr_reg:x2; val_offset:1816*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1816*FLEN/8, x6, x4, x5)

inst_939:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x007 and fs2 == 1 and fe2 == 0x0a and fm2 == 0x004 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2807; op2val:0xa804; 
   valaddr_reg:x2; val_offset:1818*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1818*FLEN/8, x6, x4, x5)

inst_940:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x255 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x254 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2e55; op2val:0xae54; 
   valaddr_reg:x2; val_offset:1820*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1820*FLEN/8, x6, x4, x5)

inst_941:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x255 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x254 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2e55; op2val:0xae54; 
   valaddr_reg:x2; val_offset:1822*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1822*FLEN/8, x6, x4, x5)

inst_942:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x255 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x254 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2e55; op2val:0xae54; 
   valaddr_reg:x2; val_offset:1824*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1824*FLEN/8, x6, x4, x5)

inst_943:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x255 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x254 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2e55; op2val:0xae54; 
   valaddr_reg:x2; val_offset:1826*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1826*FLEN/8, x6, x4, x5)

inst_944:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x255 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x254 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2e55; op2val:0xae54; 
   valaddr_reg:x2; val_offset:1828*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1828*FLEN/8, x6, x4, x5)

inst_945:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2d1 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2d1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36d1; op2val:0xb6d1; 
   valaddr_reg:x2; val_offset:1830*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1830*FLEN/8, x6, x4, x5)

inst_946:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2d1 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2d1 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36d1; op2val:0xb6d1; 
   valaddr_reg:x2; val_offset:1832*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1832*FLEN/8, x6, x4, x5)

inst_947:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2d1 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2d1 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36d1; op2val:0xb6d1; 
   valaddr_reg:x2; val_offset:1834*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1834*FLEN/8, x6, x4, x5)

inst_948:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2d1 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2d1 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36d1; op2val:0xb6d1; 
   valaddr_reg:x2; val_offset:1836*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1836*FLEN/8, x6, x4, x5)

inst_949:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2d1 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2d1 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36d1; op2val:0xb6d1; 
   valaddr_reg:x2; val_offset:1838*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1838*FLEN/8, x6, x4, x5)

inst_950:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x23c and fs2 == 1 and fe2 == 0x0c and fm2 == 0x23c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x323c; op2val:0xb23c; 
   valaddr_reg:x2; val_offset:1840*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1840*FLEN/8, x6, x4, x5)

inst_951:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x23c and fs2 == 1 and fe2 == 0x0c and fm2 == 0x23c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x323c; op2val:0xb23c; 
   valaddr_reg:x2; val_offset:1842*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1842*FLEN/8, x6, x4, x5)

inst_952:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x23c and fs2 == 1 and fe2 == 0x0c and fm2 == 0x23c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x323c; op2val:0xb23c; 
   valaddr_reg:x2; val_offset:1844*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1844*FLEN/8, x6, x4, x5)

inst_953:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x23c and fs2 == 1 and fe2 == 0x0c and fm2 == 0x23c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x323c; op2val:0xb23c; 
   valaddr_reg:x2; val_offset:1846*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1846*FLEN/8, x6, x4, x5)

inst_954:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x23c and fs2 == 1 and fe2 == 0x0c and fm2 == 0x23c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x323c; op2val:0xb23c; 
   valaddr_reg:x2; val_offset:1848*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1848*FLEN/8, x6, x4, x5)

inst_955:
// fs1 == 0 and fe1 == 0x08 and fm1 == 0x0e1 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x0d8 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x20e1; op2val:0xa0d8; 
   valaddr_reg:x2; val_offset:1850*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1850*FLEN/8, x6, x4, x5)

inst_956:
// fs1 == 0 and fe1 == 0x08 and fm1 == 0x0e1 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x0d8 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x20e1; op2val:0xa0d8; 
   valaddr_reg:x2; val_offset:1852*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1852*FLEN/8, x6, x4, x5)

inst_957:
// fs1 == 0 and fe1 == 0x08 and fm1 == 0x0e1 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x0d8 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x20e1; op2val:0xa0d8; 
   valaddr_reg:x2; val_offset:1854*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1854*FLEN/8, x6, x4, x5)

inst_958:
// fs1 == 0 and fe1 == 0x08 and fm1 == 0x0e1 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x0d8 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x20e1; op2val:0xa0d8; 
   valaddr_reg:x2; val_offset:1856*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1856*FLEN/8, x6, x4, x5)

inst_959:
// fs1 == 0 and fe1 == 0x08 and fm1 == 0x0e1 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x0d8 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x20e1; op2val:0xa0d8; 
   valaddr_reg:x2; val_offset:1858*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1858*FLEN/8, x6, x4, x5)

inst_960:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x208 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x207 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2e08; op2val:0xae07; 
   valaddr_reg:x2; val_offset:1860*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1860*FLEN/8, x6, x4, x5)

inst_961:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x208 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x207 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2e08; op2val:0xae07; 
   valaddr_reg:x2; val_offset:1862*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1862*FLEN/8, x6, x4, x5)

inst_962:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x208 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x207 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2e08; op2val:0xae07; 
   valaddr_reg:x2; val_offset:1864*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1864*FLEN/8, x6, x4, x5)

inst_963:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x208 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x207 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2e08; op2val:0xae07; 
   valaddr_reg:x2; val_offset:1866*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1866*FLEN/8, x6, x4, x5)

inst_964:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x208 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x207 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2e08; op2val:0xae07; 
   valaddr_reg:x2; val_offset:1868*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1868*FLEN/8, x6, x4, x5)

inst_965:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x36f and fs2 == 1 and fe2 == 0x0d and fm2 == 0x36e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x376f; op2val:0xb76e; 
   valaddr_reg:x2; val_offset:1870*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1870*FLEN/8, x6, x4, x5)

inst_966:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x36f and fs2 == 1 and fe2 == 0x0d and fm2 == 0x36e and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x376f; op2val:0xb76e; 
   valaddr_reg:x2; val_offset:1872*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1872*FLEN/8, x6, x4, x5)

inst_967:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x36f and fs2 == 1 and fe2 == 0x0d and fm2 == 0x36e and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x376f; op2val:0xb76e; 
   valaddr_reg:x2; val_offset:1874*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1874*FLEN/8, x6, x4, x5)

inst_968:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x36f and fs2 == 1 and fe2 == 0x0d and fm2 == 0x36e and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x376f; op2val:0xb76e; 
   valaddr_reg:x2; val_offset:1876*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1876*FLEN/8, x6, x4, x5)

inst_969:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x36f and fs2 == 1 and fe2 == 0x0d and fm2 == 0x36e and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x376f; op2val:0xb76e; 
   valaddr_reg:x2; val_offset:1878*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1878*FLEN/8, x6, x4, x5)

inst_970:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x194 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x193 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3194; op2val:0xb193; 
   valaddr_reg:x2; val_offset:1880*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1880*FLEN/8, x6, x4, x5)

inst_971:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x194 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x193 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3194; op2val:0xb193; 
   valaddr_reg:x2; val_offset:1882*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1882*FLEN/8, x6, x4, x5)

inst_972:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x194 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x193 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3194; op2val:0xb193; 
   valaddr_reg:x2; val_offset:1884*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1884*FLEN/8, x6, x4, x5)

inst_973:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x194 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x193 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3194; op2val:0xb193; 
   valaddr_reg:x2; val_offset:1886*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1886*FLEN/8, x6, x4, x5)

inst_974:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x194 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x193 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3194; op2val:0xb193; 
   valaddr_reg:x2; val_offset:1888*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1888*FLEN/8, x6, x4, x5)

inst_975:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x2b0 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2af and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x32b0; op2val:0xb2af; 
   valaddr_reg:x2; val_offset:1890*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1890*FLEN/8, x6, x4, x5)

inst_976:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x2b0 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2af and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x32b0; op2val:0xb2af; 
   valaddr_reg:x2; val_offset:1892*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1892*FLEN/8, x6, x4, x5)

inst_977:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x2b0 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2af and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x32b0; op2val:0xb2af; 
   valaddr_reg:x2; val_offset:1894*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1894*FLEN/8, x6, x4, x5)

inst_978:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x2b0 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2af and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x32b0; op2val:0xb2af; 
   valaddr_reg:x2; val_offset:1896*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1896*FLEN/8, x6, x4, x5)

inst_979:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x2b0 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2af and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x32b0; op2val:0xb2af; 
   valaddr_reg:x2; val_offset:1898*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1898*FLEN/8, x6, x4, x5)

inst_980:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x29e and fs2 == 1 and fe2 == 0x0d and fm2 == 0x29e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x369e; op2val:0xb69e; 
   valaddr_reg:x2; val_offset:1900*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1900*FLEN/8, x6, x4, x5)

inst_981:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x29e and fs2 == 1 and fe2 == 0x0d and fm2 == 0x29e and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x369e; op2val:0xb69e; 
   valaddr_reg:x2; val_offset:1902*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1902*FLEN/8, x6, x4, x5)

inst_982:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x29e and fs2 == 1 and fe2 == 0x0d and fm2 == 0x29e and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x369e; op2val:0xb69e; 
   valaddr_reg:x2; val_offset:1904*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1904*FLEN/8, x6, x4, x5)

inst_983:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x29e and fs2 == 1 and fe2 == 0x0d and fm2 == 0x29e and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x369e; op2val:0xb69e; 
   valaddr_reg:x2; val_offset:1906*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1906*FLEN/8, x6, x4, x5)

inst_984:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x29e and fs2 == 1 and fe2 == 0x0d and fm2 == 0x29e and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x369e; op2val:0xb69e; 
   valaddr_reg:x2; val_offset:1908*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1908*FLEN/8, x6, x4, x5)

inst_985:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x276 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x276 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3276; op2val:0xb276; 
   valaddr_reg:x2; val_offset:1910*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1910*FLEN/8, x6, x4, x5)

inst_986:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x276 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x276 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3276; op2val:0xb276; 
   valaddr_reg:x2; val_offset:1912*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1912*FLEN/8, x6, x4, x5)

inst_987:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x276 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x276 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3276; op2val:0xb276; 
   valaddr_reg:x2; val_offset:1914*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1914*FLEN/8, x6, x4, x5)

inst_988:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x276 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x276 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3276; op2val:0xb276; 
   valaddr_reg:x2; val_offset:1916*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1916*FLEN/8, x6, x4, x5)

inst_989:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x276 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x276 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3276; op2val:0xb276; 
   valaddr_reg:x2; val_offset:1918*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1918*FLEN/8, x6, x4, x5)

inst_990:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bff; op2val:0xbbff; 
   valaddr_reg:x2; val_offset:1920*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1920*FLEN/8, x6, x4, x5)

inst_991:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bff; op2val:0xbbff; 
   valaddr_reg:x2; val_offset:1922*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1922*FLEN/8, x6, x4, x5)

inst_992:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bff; op2val:0xbbff; 
   valaddr_reg:x2; val_offset:1924*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1924*FLEN/8, x6, x4, x5)

inst_993:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bff; op2val:0xbbff; 
   valaddr_reg:x2; val_offset:1926*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1926*FLEN/8, x6, x4, x5)

inst_994:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bff; op2val:0xbbff; 
   valaddr_reg:x2; val_offset:1928*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1928*FLEN/8, x6, x4, x5)

inst_995:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3e4 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x3e3 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37e4; op2val:0xb7e3; 
   valaddr_reg:x2; val_offset:1930*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1930*FLEN/8, x6, x4, x5)

inst_996:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3e4 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x3e3 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37e4; op2val:0xb7e3; 
   valaddr_reg:x2; val_offset:1932*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1932*FLEN/8, x6, x4, x5)

inst_997:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3e4 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x3e3 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37e4; op2val:0xb7e3; 
   valaddr_reg:x2; val_offset:1934*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1934*FLEN/8, x6, x4, x5)

inst_998:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3e4 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x3e3 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37e4; op2val:0xb7e3; 
   valaddr_reg:x2; val_offset:1936*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1936*FLEN/8, x6, x4, x5)

inst_999:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3e4 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x3e3 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37e4; op2val:0xb7e3; 
   valaddr_reg:x2; val_offset:1938*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1938*FLEN/8, x6, x4, x5)

inst_1000:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x34f and fs2 == 1 and fe2 == 0x0a and fm2 == 0x34d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2b4f; op2val:0xab4d; 
   valaddr_reg:x2; val_offset:1940*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1940*FLEN/8, x6, x4, x5)

inst_1001:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x34f and fs2 == 1 and fe2 == 0x0a and fm2 == 0x34d and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2b4f; op2val:0xab4d; 
   valaddr_reg:x2; val_offset:1942*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1942*FLEN/8, x6, x4, x5)

inst_1002:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x34f and fs2 == 1 and fe2 == 0x0a and fm2 == 0x34d and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2b4f; op2val:0xab4d; 
   valaddr_reg:x2; val_offset:1944*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1944*FLEN/8, x6, x4, x5)

inst_1003:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x34f and fs2 == 1 and fe2 == 0x0a and fm2 == 0x34d and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2b4f; op2val:0xab4d; 
   valaddr_reg:x2; val_offset:1946*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1946*FLEN/8, x6, x4, x5)

inst_1004:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x34f and fs2 == 1 and fe2 == 0x0a and fm2 == 0x34d and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2b4f; op2val:0xab4d; 
   valaddr_reg:x2; val_offset:1948*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1948*FLEN/8, x6, x4, x5)

inst_1005:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0bc and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0bc and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38bc; op2val:0xb8bc; 
   valaddr_reg:x2; val_offset:1950*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1950*FLEN/8, x6, x4, x5)

inst_1006:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0bc and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0bc and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38bc; op2val:0xb8bc; 
   valaddr_reg:x2; val_offset:1952*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1952*FLEN/8, x6, x4, x5)

inst_1007:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0bc and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0bc and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38bc; op2val:0xb8bc; 
   valaddr_reg:x2; val_offset:1954*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1954*FLEN/8, x6, x4, x5)

inst_1008:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0bc and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0bc and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38bc; op2val:0xb8bc; 
   valaddr_reg:x2; val_offset:1956*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1956*FLEN/8, x6, x4, x5)

inst_1009:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0bc and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0bc and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38bc; op2val:0xb8bc; 
   valaddr_reg:x2; val_offset:1958*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1958*FLEN/8, x6, x4, x5)

inst_1010:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x380 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x380 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b80; op2val:0xbb80; 
   valaddr_reg:x2; val_offset:1960*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1960*FLEN/8, x6, x4, x5)

inst_1011:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x380 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x380 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b80; op2val:0xbb80; 
   valaddr_reg:x2; val_offset:1962*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1962*FLEN/8, x6, x4, x5)

inst_1012:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x380 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x380 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b80; op2val:0xbb80; 
   valaddr_reg:x2; val_offset:1964*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1964*FLEN/8, x6, x4, x5)

inst_1013:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x380 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x380 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b80; op2val:0xbb80; 
   valaddr_reg:x2; val_offset:1966*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1966*FLEN/8, x6, x4, x5)

inst_1014:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x380 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x380 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b80; op2val:0xbb80; 
   valaddr_reg:x2; val_offset:1968*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1968*FLEN/8, x6, x4, x5)

inst_1015:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2fb and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2fb and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3afb; op2val:0xbafb; 
   valaddr_reg:x2; val_offset:1970*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1970*FLEN/8, x6, x4, x5)

inst_1016:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2fb and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2fb and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3afb; op2val:0xbafb; 
   valaddr_reg:x2; val_offset:1972*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1972*FLEN/8, x6, x4, x5)

inst_1017:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2fb and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2fb and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3afb; op2val:0xbafb; 
   valaddr_reg:x2; val_offset:1974*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1974*FLEN/8, x6, x4, x5)

inst_1018:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2fb and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2fb and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3afb; op2val:0xbafb; 
   valaddr_reg:x2; val_offset:1976*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1976*FLEN/8, x6, x4, x5)

inst_1019:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2fb and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2fb and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3afb; op2val:0xbafb; 
   valaddr_reg:x2; val_offset:1978*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1978*FLEN/8, x6, x4, x5)

inst_1020:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x171 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x171 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3171; op2val:0xb171; 
   valaddr_reg:x2; val_offset:1980*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1980*FLEN/8, x6, x4, x5)

inst_1021:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x171 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x171 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3171; op2val:0xb171; 
   valaddr_reg:x2; val_offset:1982*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1982*FLEN/8, x6, x4, x5)

inst_1022:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x171 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x171 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3171; op2val:0xb171; 
   valaddr_reg:x2; val_offset:1984*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1984*FLEN/8, x6, x4, x5)

inst_1023:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x171 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x171 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3171; op2val:0xb171; 
   valaddr_reg:x2; val_offset:1986*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1986*FLEN/8, x6, x4, x5)

inst_1024:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x171 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x171 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3171; op2val:0xb171; 
   valaddr_reg:x2; val_offset:1988*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1988*FLEN/8, x6, x4, x5)

inst_1025:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3b6 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3b6 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bb6; op2val:0xbbb6; 
   valaddr_reg:x2; val_offset:1990*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 1990*FLEN/8, x6, x4, x5)

inst_1026:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3b6 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3b6 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bb6; op2val:0xbbb6; 
   valaddr_reg:x2; val_offset:1992*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 1992*FLEN/8, x6, x4, x5)

inst_1027:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3b6 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3b6 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bb6; op2val:0xbbb6; 
   valaddr_reg:x2; val_offset:1994*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 1994*FLEN/8, x6, x4, x5)

inst_1028:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3b6 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3b6 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bb6; op2val:0xbbb6; 
   valaddr_reg:x2; val_offset:1996*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 1996*FLEN/8, x6, x4, x5)

inst_1029:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3b6 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3b6 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bb6; op2val:0xbbb6; 
   valaddr_reg:x2; val_offset:1998*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 1998*FLEN/8, x6, x4, x5)

inst_1030:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x010 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x010 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3810; op2val:0xb810; 
   valaddr_reg:x2; val_offset:2000*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2000*FLEN/8, x6, x4, x5)

inst_1031:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x010 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x010 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3810; op2val:0xb810; 
   valaddr_reg:x2; val_offset:2002*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2002*FLEN/8, x6, x4, x5)

inst_1032:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x010 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x010 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3810; op2val:0xb810; 
   valaddr_reg:x2; val_offset:2004*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2004*FLEN/8, x6, x4, x5)

inst_1033:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x010 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x010 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3810; op2val:0xb810; 
   valaddr_reg:x2; val_offset:2006*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2006*FLEN/8, x6, x4, x5)

inst_1034:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x010 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x010 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3810; op2val:0xb810; 
   valaddr_reg:x2; val_offset:2008*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2008*FLEN/8, x6, x4, x5)

inst_1035:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x086 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x086 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3486; op2val:0xb486; 
   valaddr_reg:x2; val_offset:2010*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2010*FLEN/8, x6, x4, x5)

inst_1036:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x086 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x086 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3486; op2val:0xb486; 
   valaddr_reg:x2; val_offset:2012*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2012*FLEN/8, x6, x4, x5)

inst_1037:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x086 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x086 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3486; op2val:0xb486; 
   valaddr_reg:x2; val_offset:2014*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2014*FLEN/8, x6, x4, x5)

inst_1038:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x086 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x086 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3486; op2val:0xb486; 
   valaddr_reg:x2; val_offset:2016*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2016*FLEN/8, x6, x4, x5)

inst_1039:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x086 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x086 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3486; op2val:0xb486; 
   valaddr_reg:x2; val_offset:2018*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2018*FLEN/8, x6, x4, x5)

inst_1040:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0b6 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0b5 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38b6; op2val:0xb8b5; 
   valaddr_reg:x2; val_offset:2020*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2020*FLEN/8, x6, x4, x5)

inst_1041:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0b6 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0b5 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38b6; op2val:0xb8b5; 
   valaddr_reg:x2; val_offset:2022*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2022*FLEN/8, x6, x4, x5)

inst_1042:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0b6 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0b5 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38b6; op2val:0xb8b5; 
   valaddr_reg:x2; val_offset:2024*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2024*FLEN/8, x6, x4, x5)

inst_1043:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0b6 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0b5 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38b6; op2val:0xb8b5; 
   valaddr_reg:x2; val_offset:2026*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2026*FLEN/8, x6, x4, x5)

inst_1044:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0b6 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0b5 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38b6; op2val:0xb8b5; 
   valaddr_reg:x2; val_offset:2028*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2028*FLEN/8, x6, x4, x5)

inst_1045:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0e8 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0e7 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38e8; op2val:0xb8e7; 
   valaddr_reg:x2; val_offset:2030*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2030*FLEN/8, x6, x4, x5)

inst_1046:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0e8 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0e7 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38e8; op2val:0xb8e7; 
   valaddr_reg:x2; val_offset:2032*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2032*FLEN/8, x6, x4, x5)

inst_1047:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0e8 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0e7 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38e8; op2val:0xb8e7; 
   valaddr_reg:x2; val_offset:2034*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2034*FLEN/8, x6, x4, x5)

inst_1048:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0e8 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0e7 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38e8; op2val:0xb8e7; 
   valaddr_reg:x2; val_offset:2036*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2036*FLEN/8, x6, x4, x5)

inst_1049:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0e8 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0e7 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38e8; op2val:0xb8e7; 
   valaddr_reg:x2; val_offset:2038*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2038*FLEN/8, x6, x4, x5)
RVTEST_SIGBASE(x4,signature_x4_8)

inst_1050:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x03b and fs2 == 1 and fe2 == 0x0e and fm2 == 0x03b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x383b; op2val:0xb83b; 
   valaddr_reg:x2; val_offset:2040*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2040*FLEN/8, x6, x4, x5)

inst_1051:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x03b and fs2 == 1 and fe2 == 0x0e and fm2 == 0x03b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x383b; op2val:0xb83b; 
   valaddr_reg:x2; val_offset:2042*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2042*FLEN/8, x6, x4, x5)

inst_1052:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x03b and fs2 == 1 and fe2 == 0x0e and fm2 == 0x03b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x383b; op2val:0xb83b; 
   valaddr_reg:x2; val_offset:2044*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2044*FLEN/8, x6, x4, x5)

inst_1053:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x03b and fs2 == 1 and fe2 == 0x0e and fm2 == 0x03b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x383b; op2val:0xb83b; 
   valaddr_reg:x2; val_offset:2046*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2046*FLEN/8, x6, x4, x5)

inst_1054:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x03b and fs2 == 1 and fe2 == 0x0e and fm2 == 0x03b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x383b; op2val:0xb83b; 
   valaddr_reg:x2; val_offset:2048*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2048*FLEN/8, x6, x4, x5)

inst_1055:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3bd and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3bd and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bbd; op2val:0xbbbd; 
   valaddr_reg:x2; val_offset:2050*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2050*FLEN/8, x6, x4, x5)

inst_1056:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3bd and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3bd and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bbd; op2val:0xbbbd; 
   valaddr_reg:x2; val_offset:2052*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2052*FLEN/8, x6, x4, x5)

inst_1057:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3bd and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3bd and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bbd; op2val:0xbbbd; 
   valaddr_reg:x2; val_offset:2054*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2054*FLEN/8, x6, x4, x5)

inst_1058:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3bd and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3bd and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bbd; op2val:0xbbbd; 
   valaddr_reg:x2; val_offset:2056*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2056*FLEN/8, x6, x4, x5)

inst_1059:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3bd and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3bd and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bbd; op2val:0xbbbd; 
   valaddr_reg:x2; val_offset:2058*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2058*FLEN/8, x6, x4, x5)

inst_1060:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1eb and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1eb and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35eb; op2val:0xb5eb; 
   valaddr_reg:x2; val_offset:2060*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2060*FLEN/8, x6, x4, x5)

inst_1061:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1eb and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1eb and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35eb; op2val:0xb5eb; 
   valaddr_reg:x2; val_offset:2062*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2062*FLEN/8, x6, x4, x5)

inst_1062:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1eb and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1eb and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35eb; op2val:0xb5eb; 
   valaddr_reg:x2; val_offset:2064*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2064*FLEN/8, x6, x4, x5)

inst_1063:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1eb and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1eb and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35eb; op2val:0xb5eb; 
   valaddr_reg:x2; val_offset:2066*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2066*FLEN/8, x6, x4, x5)

inst_1064:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1eb and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1eb and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35eb; op2val:0xb5eb; 
   valaddr_reg:x2; val_offset:2068*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2068*FLEN/8, x6, x4, x5)

inst_1065:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x336 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x336 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3736; op2val:0xb736; 
   valaddr_reg:x2; val_offset:2070*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2070*FLEN/8, x6, x4, x5)

inst_1066:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x336 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x336 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3736; op2val:0xb736; 
   valaddr_reg:x2; val_offset:2072*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2072*FLEN/8, x6, x4, x5)

inst_1067:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x336 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x336 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3736; op2val:0xb736; 
   valaddr_reg:x2; val_offset:2074*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2074*FLEN/8, x6, x4, x5)

inst_1068:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x336 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x336 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3736; op2val:0xb736; 
   valaddr_reg:x2; val_offset:2076*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2076*FLEN/8, x6, x4, x5)

inst_1069:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x336 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x336 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3736; op2val:0xb736; 
   valaddr_reg:x2; val_offset:2078*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2078*FLEN/8, x6, x4, x5)

inst_1070:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0ee and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0ee and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38ee; op2val:0xb8ee; 
   valaddr_reg:x2; val_offset:2080*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2080*FLEN/8, x6, x4, x5)

inst_1071:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0ee and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0ee and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38ee; op2val:0xb8ee; 
   valaddr_reg:x2; val_offset:2082*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2082*FLEN/8, x6, x4, x5)

inst_1072:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0ee and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0ee and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38ee; op2val:0xb8ee; 
   valaddr_reg:x2; val_offset:2084*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2084*FLEN/8, x6, x4, x5)

inst_1073:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0ee and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0ee and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38ee; op2val:0xb8ee; 
   valaddr_reg:x2; val_offset:2086*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2086*FLEN/8, x6, x4, x5)

inst_1074:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0ee and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0ee and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38ee; op2val:0xb8ee; 
   valaddr_reg:x2; val_offset:2088*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2088*FLEN/8, x6, x4, x5)

inst_1075:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x013 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x013 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3813; op2val:0xb813; 
   valaddr_reg:x2; val_offset:2090*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2090*FLEN/8, x6, x4, x5)

inst_1076:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x013 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x013 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3813; op2val:0xb813; 
   valaddr_reg:x2; val_offset:2092*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2092*FLEN/8, x6, x4, x5)

inst_1077:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x013 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x013 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3813; op2val:0xb813; 
   valaddr_reg:x2; val_offset:2094*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2094*FLEN/8, x6, x4, x5)

inst_1078:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x013 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x013 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3813; op2val:0xb813; 
   valaddr_reg:x2; val_offset:2096*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2096*FLEN/8, x6, x4, x5)

inst_1079:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x013 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x013 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3813; op2val:0xb813; 
   valaddr_reg:x2; val_offset:2098*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2098*FLEN/8, x6, x4, x5)

inst_1080:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x23d and fs2 == 1 and fe2 == 0x0d and fm2 == 0x23c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x363d; op2val:0xb63c; 
   valaddr_reg:x2; val_offset:2100*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2100*FLEN/8, x6, x4, x5)

inst_1081:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x23d and fs2 == 1 and fe2 == 0x0d and fm2 == 0x23c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x363d; op2val:0xb63c; 
   valaddr_reg:x2; val_offset:2102*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2102*FLEN/8, x6, x4, x5)

inst_1082:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x23d and fs2 == 1 and fe2 == 0x0d and fm2 == 0x23c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x363d; op2val:0xb63c; 
   valaddr_reg:x2; val_offset:2104*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2104*FLEN/8, x6, x4, x5)

inst_1083:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x23d and fs2 == 1 and fe2 == 0x0d and fm2 == 0x23c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x363d; op2val:0xb63c; 
   valaddr_reg:x2; val_offset:2106*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2106*FLEN/8, x6, x4, x5)

inst_1084:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x23d and fs2 == 1 and fe2 == 0x0d and fm2 == 0x23c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x363d; op2val:0xb63c; 
   valaddr_reg:x2; val_offset:2108*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2108*FLEN/8, x6, x4, x5)

inst_1085:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1e2 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1e1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35e2; op2val:0xb5e1; 
   valaddr_reg:x2; val_offset:2110*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2110*FLEN/8, x6, x4, x5)

inst_1086:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1e2 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1e1 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35e2; op2val:0xb5e1; 
   valaddr_reg:x2; val_offset:2112*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2112*FLEN/8, x6, x4, x5)

inst_1087:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1e2 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1e1 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35e2; op2val:0xb5e1; 
   valaddr_reg:x2; val_offset:2114*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2114*FLEN/8, x6, x4, x5)

inst_1088:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1e2 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1e1 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35e2; op2val:0xb5e1; 
   valaddr_reg:x2; val_offset:2116*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2116*FLEN/8, x6, x4, x5)

inst_1089:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1e2 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1e1 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35e2; op2val:0xb5e1; 
   valaddr_reg:x2; val_offset:2118*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2118*FLEN/8, x6, x4, x5)

inst_1090:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x301 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x301 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b01; op2val:0xbb01; 
   valaddr_reg:x2; val_offset:2120*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2120*FLEN/8, x6, x4, x5)

inst_1091:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x301 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x301 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b01; op2val:0xbb01; 
   valaddr_reg:x2; val_offset:2122*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2122*FLEN/8, x6, x4, x5)

inst_1092:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x301 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x301 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b01; op2val:0xbb01; 
   valaddr_reg:x2; val_offset:2124*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2124*FLEN/8, x6, x4, x5)

inst_1093:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x301 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x301 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b01; op2val:0xbb01; 
   valaddr_reg:x2; val_offset:2126*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2126*FLEN/8, x6, x4, x5)

inst_1094:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x301 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x301 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b01; op2val:0xbb01; 
   valaddr_reg:x2; val_offset:2128*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2128*FLEN/8, x6, x4, x5)

inst_1095:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x20c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x20c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x360c; op2val:0xb60c; 
   valaddr_reg:x2; val_offset:2130*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2130*FLEN/8, x6, x4, x5)

inst_1096:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x20c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x20c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x360c; op2val:0xb60c; 
   valaddr_reg:x2; val_offset:2132*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2132*FLEN/8, x6, x4, x5)

inst_1097:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x20c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x20c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x360c; op2val:0xb60c; 
   valaddr_reg:x2; val_offset:2134*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2134*FLEN/8, x6, x4, x5)

inst_1098:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x20c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x20c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x360c; op2val:0xb60c; 
   valaddr_reg:x2; val_offset:2136*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2136*FLEN/8, x6, x4, x5)

inst_1099:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x20c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x20c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x360c; op2val:0xb60c; 
   valaddr_reg:x2; val_offset:2138*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2138*FLEN/8, x6, x4, x5)

inst_1100:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x26c and fs2 == 1 and fe2 == 0x0c and fm2 == 0x26b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x326c; op2val:0xb26b; 
   valaddr_reg:x2; val_offset:2140*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2140*FLEN/8, x6, x4, x5)

inst_1101:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x26c and fs2 == 1 and fe2 == 0x0c and fm2 == 0x26b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x326c; op2val:0xb26b; 
   valaddr_reg:x2; val_offset:2142*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2142*FLEN/8, x6, x4, x5)

inst_1102:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x26c and fs2 == 1 and fe2 == 0x0c and fm2 == 0x26b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x326c; op2val:0xb26b; 
   valaddr_reg:x2; val_offset:2144*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2144*FLEN/8, x6, x4, x5)

inst_1103:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x26c and fs2 == 1 and fe2 == 0x0c and fm2 == 0x26b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x326c; op2val:0xb26b; 
   valaddr_reg:x2; val_offset:2146*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2146*FLEN/8, x6, x4, x5)

inst_1104:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x26c and fs2 == 1 and fe2 == 0x0c and fm2 == 0x26b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x326c; op2val:0xb26b; 
   valaddr_reg:x2; val_offset:2148*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2148*FLEN/8, x6, x4, x5)

inst_1105:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x014 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x014 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3014; op2val:0xb014; 
   valaddr_reg:x2; val_offset:2150*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2150*FLEN/8, x6, x4, x5)

inst_1106:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x014 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x014 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3014; op2val:0xb014; 
   valaddr_reg:x2; val_offset:2152*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2152*FLEN/8, x6, x4, x5)

inst_1107:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x014 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x014 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3014; op2val:0xb014; 
   valaddr_reg:x2; val_offset:2154*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2154*FLEN/8, x6, x4, x5)

inst_1108:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x014 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x014 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3014; op2val:0xb014; 
   valaddr_reg:x2; val_offset:2156*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2156*FLEN/8, x6, x4, x5)

inst_1109:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x014 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x014 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3014; op2val:0xb014; 
   valaddr_reg:x2; val_offset:2158*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2158*FLEN/8, x6, x4, x5)

inst_1110:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x2dd and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2dd and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x32dd; op2val:0xb2dd; 
   valaddr_reg:x2; val_offset:2160*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2160*FLEN/8, x6, x4, x5)

inst_1111:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x2dd and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2dd and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x32dd; op2val:0xb2dd; 
   valaddr_reg:x2; val_offset:2162*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2162*FLEN/8, x6, x4, x5)

inst_1112:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x2dd and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2dd and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x32dd; op2val:0xb2dd; 
   valaddr_reg:x2; val_offset:2164*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2164*FLEN/8, x6, x4, x5)

inst_1113:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x2dd and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2dd and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x32dd; op2val:0xb2dd; 
   valaddr_reg:x2; val_offset:2166*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2166*FLEN/8, x6, x4, x5)

inst_1114:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x2dd and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2dd and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x32dd; op2val:0xb2dd; 
   valaddr_reg:x2; val_offset:2168*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2168*FLEN/8, x6, x4, x5)

inst_1115:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x2f9 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2f8 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x32f9; op2val:0xb2f8; 
   valaddr_reg:x2; val_offset:2170*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2170*FLEN/8, x6, x4, x5)

inst_1116:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x2f9 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2f8 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x32f9; op2val:0xb2f8; 
   valaddr_reg:x2; val_offset:2172*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2172*FLEN/8, x6, x4, x5)

inst_1117:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x2f9 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2f8 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x32f9; op2val:0xb2f8; 
   valaddr_reg:x2; val_offset:2174*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2174*FLEN/8, x6, x4, x5)

inst_1118:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x2f9 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2f8 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x32f9; op2val:0xb2f8; 
   valaddr_reg:x2; val_offset:2176*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2176*FLEN/8, x6, x4, x5)

inst_1119:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x2f9 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2f8 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x32f9; op2val:0xb2f8; 
   valaddr_reg:x2; val_offset:2178*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2178*FLEN/8, x6, x4, x5)

inst_1120:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3ca and fs2 == 1 and fe2 == 0x0c and fm2 == 0x3c9 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x33ca; op2val:0xb3c9; 
   valaddr_reg:x2; val_offset:2180*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2180*FLEN/8, x6, x4, x5)

inst_1121:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3ca and fs2 == 1 and fe2 == 0x0c and fm2 == 0x3c9 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x33ca; op2val:0xb3c9; 
   valaddr_reg:x2; val_offset:2182*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2182*FLEN/8, x6, x4, x5)

inst_1122:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3ca and fs2 == 1 and fe2 == 0x0c and fm2 == 0x3c9 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x33ca; op2val:0xb3c9; 
   valaddr_reg:x2; val_offset:2184*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2184*FLEN/8, x6, x4, x5)

inst_1123:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3ca and fs2 == 1 and fe2 == 0x0c and fm2 == 0x3c9 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x33ca; op2val:0xb3c9; 
   valaddr_reg:x2; val_offset:2186*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2186*FLEN/8, x6, x4, x5)

inst_1124:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3ca and fs2 == 1 and fe2 == 0x0c and fm2 == 0x3c9 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x33ca; op2val:0xb3c9; 
   valaddr_reg:x2; val_offset:2188*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2188*FLEN/8, x6, x4, x5)

inst_1125:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x2bc and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2bb and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x32bc; op2val:0xb2bb; 
   valaddr_reg:x2; val_offset:2190*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2190*FLEN/8, x6, x4, x5)

inst_1126:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x2bc and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2bb and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x32bc; op2val:0xb2bb; 
   valaddr_reg:x2; val_offset:2192*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2192*FLEN/8, x6, x4, x5)

inst_1127:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x2bc and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2bb and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x32bc; op2val:0xb2bb; 
   valaddr_reg:x2; val_offset:2194*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2194*FLEN/8, x6, x4, x5)

inst_1128:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x2bc and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2bb and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x32bc; op2val:0xb2bb; 
   valaddr_reg:x2; val_offset:2196*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2196*FLEN/8, x6, x4, x5)

inst_1129:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x2bc and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2bb and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x32bc; op2val:0xb2bb; 
   valaddr_reg:x2; val_offset:2198*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2198*FLEN/8, x6, x4, x5)

inst_1130:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3a4 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3a4 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3ba4; op2val:0xbba4; 
   valaddr_reg:x2; val_offset:2200*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2200*FLEN/8, x6, x4, x5)

inst_1131:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3a4 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3a4 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3ba4; op2val:0xbba4; 
   valaddr_reg:x2; val_offset:2202*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2202*FLEN/8, x6, x4, x5)

inst_1132:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3a4 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3a4 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3ba4; op2val:0xbba4; 
   valaddr_reg:x2; val_offset:2204*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2204*FLEN/8, x6, x4, x5)

inst_1133:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3a4 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3a4 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3ba4; op2val:0xbba4; 
   valaddr_reg:x2; val_offset:2206*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2206*FLEN/8, x6, x4, x5)

inst_1134:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3a4 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3a4 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3ba4; op2val:0xbba4; 
   valaddr_reg:x2; val_offset:2208*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2208*FLEN/8, x6, x4, x5)

inst_1135:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x01c and fs2 == 1 and fe2 == 0x0e and fm2 == 0x01c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x381c; op2val:0xb81c; 
   valaddr_reg:x2; val_offset:2210*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2210*FLEN/8, x6, x4, x5)

inst_1136:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x01c and fs2 == 1 and fe2 == 0x0e and fm2 == 0x01c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x381c; op2val:0xb81c; 
   valaddr_reg:x2; val_offset:2212*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2212*FLEN/8, x6, x4, x5)

inst_1137:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x01c and fs2 == 1 and fe2 == 0x0e and fm2 == 0x01c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x381c; op2val:0xb81c; 
   valaddr_reg:x2; val_offset:2214*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2214*FLEN/8, x6, x4, x5)

inst_1138:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x01c and fs2 == 1 and fe2 == 0x0e and fm2 == 0x01c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x381c; op2val:0xb81c; 
   valaddr_reg:x2; val_offset:2216*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2216*FLEN/8, x6, x4, x5)

inst_1139:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x01c and fs2 == 1 and fe2 == 0x0e and fm2 == 0x01c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x381c; op2val:0xb81c; 
   valaddr_reg:x2; val_offset:2218*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2218*FLEN/8, x6, x4, x5)

inst_1140:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x313 and fs2 == 1 and fe2 == 0x0a and fm2 == 0x311 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2b13; op2val:0xab11; 
   valaddr_reg:x2; val_offset:2220*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2220*FLEN/8, x6, x4, x5)

inst_1141:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x313 and fs2 == 1 and fe2 == 0x0a and fm2 == 0x311 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2b13; op2val:0xab11; 
   valaddr_reg:x2; val_offset:2222*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2222*FLEN/8, x6, x4, x5)

inst_1142:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x313 and fs2 == 1 and fe2 == 0x0a and fm2 == 0x311 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2b13; op2val:0xab11; 
   valaddr_reg:x2; val_offset:2224*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2224*FLEN/8, x6, x4, x5)

inst_1143:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x313 and fs2 == 1 and fe2 == 0x0a and fm2 == 0x311 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2b13; op2val:0xab11; 
   valaddr_reg:x2; val_offset:2226*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2226*FLEN/8, x6, x4, x5)

inst_1144:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x313 and fs2 == 1 and fe2 == 0x0a and fm2 == 0x311 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2b13; op2val:0xab11; 
   valaddr_reg:x2; val_offset:2228*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2228*FLEN/8, x6, x4, x5)

inst_1145:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2da and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2d9 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36da; op2val:0xb6d9; 
   valaddr_reg:x2; val_offset:2230*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2230*FLEN/8, x6, x4, x5)

inst_1146:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2da and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2d9 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36da; op2val:0xb6d9; 
   valaddr_reg:x2; val_offset:2232*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2232*FLEN/8, x6, x4, x5)

inst_1147:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2da and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2d9 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36da; op2val:0xb6d9; 
   valaddr_reg:x2; val_offset:2234*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2234*FLEN/8, x6, x4, x5)

inst_1148:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2da and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2d9 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36da; op2val:0xb6d9; 
   valaddr_reg:x2; val_offset:2236*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2236*FLEN/8, x6, x4, x5)

inst_1149:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2da and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2d9 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36da; op2val:0xb6d9; 
   valaddr_reg:x2; val_offset:2238*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2238*FLEN/8, x6, x4, x5)

inst_1150:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x340 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x340 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b40; op2val:0xbb40; 
   valaddr_reg:x2; val_offset:2240*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2240*FLEN/8, x6, x4, x5)

inst_1151:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x340 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x340 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b40; op2val:0xbb40; 
   valaddr_reg:x2; val_offset:2242*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2242*FLEN/8, x6, x4, x5)

inst_1152:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x340 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x340 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b40; op2val:0xbb40; 
   valaddr_reg:x2; val_offset:2244*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2244*FLEN/8, x6, x4, x5)

inst_1153:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x340 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x340 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b40; op2val:0xbb40; 
   valaddr_reg:x2; val_offset:2246*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2246*FLEN/8, x6, x4, x5)

inst_1154:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x340 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x340 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b40; op2val:0xbb40; 
   valaddr_reg:x2; val_offset:2248*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2248*FLEN/8, x6, x4, x5)

inst_1155:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x31f and fs2 == 1 and fe2 == 0x0b and fm2 == 0x31e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2f1f; op2val:0xaf1e; 
   valaddr_reg:x2; val_offset:2250*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2250*FLEN/8, x6, x4, x5)

inst_1156:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x31f and fs2 == 1 and fe2 == 0x0b and fm2 == 0x31e and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2f1f; op2val:0xaf1e; 
   valaddr_reg:x2; val_offset:2252*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2252*FLEN/8, x6, x4, x5)

inst_1157:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x31f and fs2 == 1 and fe2 == 0x0b and fm2 == 0x31e and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2f1f; op2val:0xaf1e; 
   valaddr_reg:x2; val_offset:2254*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2254*FLEN/8, x6, x4, x5)

inst_1158:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x31f and fs2 == 1 and fe2 == 0x0b and fm2 == 0x31e and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2f1f; op2val:0xaf1e; 
   valaddr_reg:x2; val_offset:2256*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2256*FLEN/8, x6, x4, x5)

inst_1159:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x31f and fs2 == 1 and fe2 == 0x0b and fm2 == 0x31e and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2f1f; op2val:0xaf1e; 
   valaddr_reg:x2; val_offset:2258*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2258*FLEN/8, x6, x4, x5)

inst_1160:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0d3 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0d2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x34d3; op2val:0xb4d2; 
   valaddr_reg:x2; val_offset:2260*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2260*FLEN/8, x6, x4, x5)

inst_1161:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0d3 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0d2 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x34d3; op2val:0xb4d2; 
   valaddr_reg:x2; val_offset:2262*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2262*FLEN/8, x6, x4, x5)

inst_1162:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0d3 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0d2 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x34d3; op2val:0xb4d2; 
   valaddr_reg:x2; val_offset:2264*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2264*FLEN/8, x6, x4, x5)

inst_1163:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0d3 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0d2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x34d3; op2val:0xb4d2; 
   valaddr_reg:x2; val_offset:2266*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2266*FLEN/8, x6, x4, x5)

inst_1164:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0d3 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0d2 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x34d3; op2val:0xb4d2; 
   valaddr_reg:x2; val_offset:2268*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2268*FLEN/8, x6, x4, x5)

inst_1165:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x18e and fs2 == 1 and fe2 == 0x0e and fm2 == 0x18e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x398e; op2val:0xb98e; 
   valaddr_reg:x2; val_offset:2270*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2270*FLEN/8, x6, x4, x5)

inst_1166:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x18e and fs2 == 1 and fe2 == 0x0e and fm2 == 0x18e and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x398e; op2val:0xb98e; 
   valaddr_reg:x2; val_offset:2272*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2272*FLEN/8, x6, x4, x5)

inst_1167:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x18e and fs2 == 1 and fe2 == 0x0e and fm2 == 0x18e and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x398e; op2val:0xb98e; 
   valaddr_reg:x2; val_offset:2274*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2274*FLEN/8, x6, x4, x5)

inst_1168:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x18e and fs2 == 1 and fe2 == 0x0e and fm2 == 0x18e and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x398e; op2val:0xb98e; 
   valaddr_reg:x2; val_offset:2276*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2276*FLEN/8, x6, x4, x5)

inst_1169:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x18e and fs2 == 1 and fe2 == 0x0e and fm2 == 0x18e and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x398e; op2val:0xb98e; 
   valaddr_reg:x2; val_offset:2278*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2278*FLEN/8, x6, x4, x5)

inst_1170:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x097 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x097 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3897; op2val:0xb897; 
   valaddr_reg:x2; val_offset:2280*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2280*FLEN/8, x6, x4, x5)

inst_1171:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x097 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x097 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3897; op2val:0xb897; 
   valaddr_reg:x2; val_offset:2282*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2282*FLEN/8, x6, x4, x5)

inst_1172:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x097 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x097 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3897; op2val:0xb897; 
   valaddr_reg:x2; val_offset:2284*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2284*FLEN/8, x6, x4, x5)

inst_1173:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x097 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x097 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3897; op2val:0xb897; 
   valaddr_reg:x2; val_offset:2286*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2286*FLEN/8, x6, x4, x5)

inst_1174:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x097 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x097 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3897; op2val:0xb897; 
   valaddr_reg:x2; val_offset:2288*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2288*FLEN/8, x6, x4, x5)

inst_1175:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x0f0 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x0ef and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2cf0; op2val:0xacef; 
   valaddr_reg:x2; val_offset:2290*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2290*FLEN/8, x6, x4, x5)

inst_1176:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x0f0 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x0ef and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2cf0; op2val:0xacef; 
   valaddr_reg:x2; val_offset:2292*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2292*FLEN/8, x6, x4, x5)

inst_1177:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x0f0 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x0ef and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2cf0; op2val:0xacef; 
   valaddr_reg:x2; val_offset:2294*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2294*FLEN/8, x6, x4, x5)
RVTEST_SIGBASE(x4,signature_x4_9)

inst_1178:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x0f0 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x0ef and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2cf0; op2val:0xacef; 
   valaddr_reg:x2; val_offset:2296*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2296*FLEN/8, x6, x4, x5)

inst_1179:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x0f0 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x0ef and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2cf0; op2val:0xacef; 
   valaddr_reg:x2; val_offset:2298*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2298*FLEN/8, x6, x4, x5)

inst_1180:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0ac and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0ac and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38ac; op2val:0xb8ac; 
   valaddr_reg:x2; val_offset:2300*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2300*FLEN/8, x6, x4, x5)

inst_1181:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0ac and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0ac and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38ac; op2val:0xb8ac; 
   valaddr_reg:x2; val_offset:2302*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2302*FLEN/8, x6, x4, x5)

inst_1182:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0ac and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0ac and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38ac; op2val:0xb8ac; 
   valaddr_reg:x2; val_offset:2304*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2304*FLEN/8, x6, x4, x5)

inst_1183:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0ac and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0ac and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38ac; op2val:0xb8ac; 
   valaddr_reg:x2; val_offset:2306*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2306*FLEN/8, x6, x4, x5)

inst_1184:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0ac and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0ac and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38ac; op2val:0xb8ac; 
   valaddr_reg:x2; val_offset:2308*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2308*FLEN/8, x6, x4, x5)

inst_1185:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x33d and fs2 == 1 and fe2 == 0x0c and fm2 == 0x33c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x333d; op2val:0xb33c; 
   valaddr_reg:x2; val_offset:2310*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2310*FLEN/8, x6, x4, x5)

inst_1186:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x33d and fs2 == 1 and fe2 == 0x0c and fm2 == 0x33c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x333d; op2val:0xb33c; 
   valaddr_reg:x2; val_offset:2312*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2312*FLEN/8, x6, x4, x5)

inst_1187:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x33d and fs2 == 1 and fe2 == 0x0c and fm2 == 0x33c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x333d; op2val:0xb33c; 
   valaddr_reg:x2; val_offset:2314*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2314*FLEN/8, x6, x4, x5)

inst_1188:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x33d and fs2 == 1 and fe2 == 0x0c and fm2 == 0x33c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x333d; op2val:0xb33c; 
   valaddr_reg:x2; val_offset:2316*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2316*FLEN/8, x6, x4, x5)

inst_1189:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x33d and fs2 == 1 and fe2 == 0x0c and fm2 == 0x33c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x333d; op2val:0xb33c; 
   valaddr_reg:x2; val_offset:2318*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2318*FLEN/8, x6, x4, x5)

inst_1190:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3c1 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3c0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bc1; op2val:0xbbc0; 
   valaddr_reg:x2; val_offset:2320*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2320*FLEN/8, x6, x4, x5)

inst_1191:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3c1 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3c0 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bc1; op2val:0xbbc0; 
   valaddr_reg:x2; val_offset:2322*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2322*FLEN/8, x6, x4, x5)

inst_1192:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3c1 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3c0 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bc1; op2val:0xbbc0; 
   valaddr_reg:x2; val_offset:2324*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2324*FLEN/8, x6, x4, x5)

inst_1193:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3c1 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3c0 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bc1; op2val:0xbbc0; 
   valaddr_reg:x2; val_offset:2326*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2326*FLEN/8, x6, x4, x5)

inst_1194:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3c1 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3c0 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bc1; op2val:0xbbc0; 
   valaddr_reg:x2; val_offset:2328*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2328*FLEN/8, x6, x4, x5)

inst_1195:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x104 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x104 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3504; op2val:0xb504; 
   valaddr_reg:x2; val_offset:2330*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2330*FLEN/8, x6, x4, x5)

inst_1196:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x104 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x104 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3504; op2val:0xb504; 
   valaddr_reg:x2; val_offset:2332*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2332*FLEN/8, x6, x4, x5)

inst_1197:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x104 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x104 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3504; op2val:0xb504; 
   valaddr_reg:x2; val_offset:2334*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2334*FLEN/8, x6, x4, x5)

inst_1198:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x104 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x104 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3504; op2val:0xb504; 
   valaddr_reg:x2; val_offset:2336*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2336*FLEN/8, x6, x4, x5)

inst_1199:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x104 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x104 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3504; op2val:0xb504; 
   valaddr_reg:x2; val_offset:2338*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2338*FLEN/8, x6, x4, x5)

inst_1200:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x12b and fs2 == 1 and fe2 == 0x0b and fm2 == 0x12a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2d2b; op2val:0xad2a; 
   valaddr_reg:x2; val_offset:2340*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2340*FLEN/8, x6, x4, x5)

inst_1201:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x12b and fs2 == 1 and fe2 == 0x0b and fm2 == 0x12a and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2d2b; op2val:0xad2a; 
   valaddr_reg:x2; val_offset:2342*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2342*FLEN/8, x6, x4, x5)

inst_1202:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x12b and fs2 == 1 and fe2 == 0x0b and fm2 == 0x12a and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2d2b; op2val:0xad2a; 
   valaddr_reg:x2; val_offset:2344*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2344*FLEN/8, x6, x4, x5)

inst_1203:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x12b and fs2 == 1 and fe2 == 0x0b and fm2 == 0x12a and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2d2b; op2val:0xad2a; 
   valaddr_reg:x2; val_offset:2346*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2346*FLEN/8, x6, x4, x5)

inst_1204:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x12b and fs2 == 1 and fe2 == 0x0b and fm2 == 0x12a and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x2d2b; op2val:0xad2a; 
   valaddr_reg:x2; val_offset:2348*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2348*FLEN/8, x6, x4, x5)

inst_1205:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x070 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x070 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3470; op2val:0xb470; 
   valaddr_reg:x2; val_offset:2350*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2350*FLEN/8, x6, x4, x5)

inst_1206:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x070 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x070 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3470; op2val:0xb470; 
   valaddr_reg:x2; val_offset:2352*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2352*FLEN/8, x6, x4, x5)

inst_1207:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x070 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x070 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3470; op2val:0xb470; 
   valaddr_reg:x2; val_offset:2354*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2354*FLEN/8, x6, x4, x5)

inst_1208:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x070 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x070 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3470; op2val:0xb470; 
   valaddr_reg:x2; val_offset:2356*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2356*FLEN/8, x6, x4, x5)

inst_1209:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x070 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x070 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3470; op2val:0xb470; 
   valaddr_reg:x2; val_offset:2358*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2358*FLEN/8, x6, x4, x5)

inst_1210:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x36f and fs2 == 1 and fe2 == 0x0e and fm2 == 0x36f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b6f; op2val:0xbb6f; 
   valaddr_reg:x2; val_offset:2360*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2360*FLEN/8, x6, x4, x5)

inst_1211:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x36f and fs2 == 1 and fe2 == 0x0e and fm2 == 0x36f and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b6f; op2val:0xbb6f; 
   valaddr_reg:x2; val_offset:2362*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2362*FLEN/8, x6, x4, x5)

inst_1212:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x36f and fs2 == 1 and fe2 == 0x0e and fm2 == 0x36f and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b6f; op2val:0xbb6f; 
   valaddr_reg:x2; val_offset:2364*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2364*FLEN/8, x6, x4, x5)

inst_1213:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x36f and fs2 == 1 and fe2 == 0x0e and fm2 == 0x36f and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b6f; op2val:0xbb6f; 
   valaddr_reg:x2; val_offset:2366*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2366*FLEN/8, x6, x4, x5)

inst_1214:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x36f and fs2 == 1 and fe2 == 0x0e and fm2 == 0x36f and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b6f; op2val:0xbb6f; 
   valaddr_reg:x2; val_offset:2368*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2368*FLEN/8, x6, x4, x5)

inst_1215:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3c3 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3c3 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bc3; op2val:0xbbc3; 
   valaddr_reg:x2; val_offset:2370*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2370*FLEN/8, x6, x4, x5)

inst_1216:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3c3 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3c3 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bc3; op2val:0xbbc3; 
   valaddr_reg:x2; val_offset:2372*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2372*FLEN/8, x6, x4, x5)

inst_1217:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3c3 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3c3 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bc3; op2val:0xbbc3; 
   valaddr_reg:x2; val_offset:2374*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2374*FLEN/8, x6, x4, x5)

inst_1218:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3c3 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3c3 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bc3; op2val:0xbbc3; 
   valaddr_reg:x2; val_offset:2376*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2376*FLEN/8, x6, x4, x5)

inst_1219:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3c3 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3c3 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bc3; op2val:0xbbc3; 
   valaddr_reg:x2; val_offset:2378*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2378*FLEN/8, x6, x4, x5)

inst_1220:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3eb and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3eb and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3beb; op2val:0xbbeb; 
   valaddr_reg:x2; val_offset:2380*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2380*FLEN/8, x6, x4, x5)

inst_1221:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3eb and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3eb and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3beb; op2val:0xbbeb; 
   valaddr_reg:x2; val_offset:2382*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2382*FLEN/8, x6, x4, x5)

inst_1222:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3eb and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3eb and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3beb; op2val:0xbbeb; 
   valaddr_reg:x2; val_offset:2384*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2384*FLEN/8, x6, x4, x5)

inst_1223:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3eb and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3eb and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3beb; op2val:0xbbeb; 
   valaddr_reg:x2; val_offset:2386*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2386*FLEN/8, x6, x4, x5)

inst_1224:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3eb and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3eb and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3beb; op2val:0xbbeb; 
   valaddr_reg:x2; val_offset:2388*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2388*FLEN/8, x6, x4, x5)

inst_1225:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x293 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x1b3 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5293; op2val:0x49b3; 
   valaddr_reg:x2; val_offset:2390*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2390*FLEN/8, x6, x4, x5)

inst_1226:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x293 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x1b3 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5293; op2val:0x49b3; 
   valaddr_reg:x2; val_offset:2392*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2392*FLEN/8, x6, x4, x5)

inst_1227:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x293 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x1b3 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5293; op2val:0x49b3; 
   valaddr_reg:x2; val_offset:2394*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2394*FLEN/8, x6, x4, x5)

inst_1228:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x293 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x1b3 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5293; op2val:0x49b3; 
   valaddr_reg:x2; val_offset:2396*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2396*FLEN/8, x6, x4, x5)

inst_1229:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x293 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x1b3 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5293; op2val:0x49b3; 
   valaddr_reg:x2; val_offset:2398*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2398*FLEN/8, x6, x4, x5)

inst_1230:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x329 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x2b6 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5329; op2val:0x46b6; 
   valaddr_reg:x2; val_offset:2400*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2400*FLEN/8, x6, x4, x5)

inst_1231:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x329 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x2b6 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5329; op2val:0x46b6; 
   valaddr_reg:x2; val_offset:2402*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2402*FLEN/8, x6, x4, x5)

inst_1232:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x329 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x2b6 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5329; op2val:0x46b6; 
   valaddr_reg:x2; val_offset:2404*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2404*FLEN/8, x6, x4, x5)

inst_1233:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x329 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x2b6 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5329; op2val:0x46b6; 
   valaddr_reg:x2; val_offset:2406*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2406*FLEN/8, x6, x4, x5)

inst_1234:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x329 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x2b6 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5329; op2val:0x46b6; 
   valaddr_reg:x2; val_offset:2408*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2408*FLEN/8, x6, x4, x5)

inst_1235:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x2f3 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x243 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4af3; op2val:0x5243; 
   valaddr_reg:x2; val_offset:2410*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2410*FLEN/8, x6, x4, x5)

inst_1236:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x2f3 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x243 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4af3; op2val:0x5243; 
   valaddr_reg:x2; val_offset:2412*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2412*FLEN/8, x6, x4, x5)

inst_1237:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x2f3 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x243 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4af3; op2val:0x5243; 
   valaddr_reg:x2; val_offset:2414*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2414*FLEN/8, x6, x4, x5)

inst_1238:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x2f3 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x243 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4af3; op2val:0x5243; 
   valaddr_reg:x2; val_offset:2416*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2416*FLEN/8, x6, x4, x5)

inst_1239:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x2f3 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x243 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4af3; op2val:0x5243; 
   valaddr_reg:x2; val_offset:2418*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2418*FLEN/8, x6, x4, x5)

inst_1240:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x383 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x3c7 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5383; op2val:0x43c7; 
   valaddr_reg:x2; val_offset:2420*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2420*FLEN/8, x6, x4, x5)

inst_1241:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x383 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x3c7 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5383; op2val:0x43c7; 
   valaddr_reg:x2; val_offset:2422*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2422*FLEN/8, x6, x4, x5)

inst_1242:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x383 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x3c7 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5383; op2val:0x43c7; 
   valaddr_reg:x2; val_offset:2424*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2424*FLEN/8, x6, x4, x5)

inst_1243:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x383 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x3c7 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5383; op2val:0x43c7; 
   valaddr_reg:x2; val_offset:2426*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2426*FLEN/8, x6, x4, x5)

inst_1244:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x383 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x3c7 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5383; op2val:0x43c7; 
   valaddr_reg:x2; val_offset:2428*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2428*FLEN/8, x6, x4, x5)

inst_1245:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x1cf and fs2 == 0 and fe2 == 0x14 and fm2 == 0x3d1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3dcf; op2val:0x53d1; 
   valaddr_reg:x2; val_offset:2430*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2430*FLEN/8, x6, x4, x5)

inst_1246:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x1cf and fs2 == 0 and fe2 == 0x14 and fm2 == 0x3d1 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3dcf; op2val:0x53d1; 
   valaddr_reg:x2; val_offset:2432*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2432*FLEN/8, x6, x4, x5)

inst_1247:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x1cf and fs2 == 0 and fe2 == 0x14 and fm2 == 0x3d1 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3dcf; op2val:0x53d1; 
   valaddr_reg:x2; val_offset:2434*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2434*FLEN/8, x6, x4, x5)

inst_1248:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x1cf and fs2 == 0 and fe2 == 0x14 and fm2 == 0x3d1 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3dcf; op2val:0x53d1; 
   valaddr_reg:x2; val_offset:2436*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2436*FLEN/8, x6, x4, x5)

inst_1249:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x1cf and fs2 == 0 and fe2 == 0x14 and fm2 == 0x3d1 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3dcf; op2val:0x53d1; 
   valaddr_reg:x2; val_offset:2438*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2438*FLEN/8, x6, x4, x5)

inst_1250:
// fs1 == 0 and fe1 == 0x10 and fm1 == 0x11b and fs2 == 0 and fe2 == 0x14 and fm2 == 0x3ae and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x411b; op2val:0x53ae; 
   valaddr_reg:x2; val_offset:2440*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2440*FLEN/8, x6, x4, x5)

inst_1251:
// fs1 == 0 and fe1 == 0x10 and fm1 == 0x11b and fs2 == 0 and fe2 == 0x14 and fm2 == 0x3ae and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x411b; op2val:0x53ae; 
   valaddr_reg:x2; val_offset:2442*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2442*FLEN/8, x6, x4, x5)

inst_1252:
// fs1 == 0 and fe1 == 0x10 and fm1 == 0x11b and fs2 == 0 and fe2 == 0x14 and fm2 == 0x3ae and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x411b; op2val:0x53ae; 
   valaddr_reg:x2; val_offset:2444*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2444*FLEN/8, x6, x4, x5)

inst_1253:
// fs1 == 0 and fe1 == 0x10 and fm1 == 0x11b and fs2 == 0 and fe2 == 0x14 and fm2 == 0x3ae and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x411b; op2val:0x53ae; 
   valaddr_reg:x2; val_offset:2446*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2446*FLEN/8, x6, x4, x5)

inst_1254:
// fs1 == 0 and fe1 == 0x10 and fm1 == 0x11b and fs2 == 0 and fe2 == 0x14 and fm2 == 0x3ae and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x411b; op2val:0x53ae; 
   valaddr_reg:x2; val_offset:2448*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2448*FLEN/8, x6, x4, x5)

inst_1255:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x2e4 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x06f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x52e4; op2val:0x486f; 
   valaddr_reg:x2; val_offset:2450*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2450*FLEN/8, x6, x4, x5)

inst_1256:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x2e4 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x06f and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x52e4; op2val:0x486f; 
   valaddr_reg:x2; val_offset:2452*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2452*FLEN/8, x6, x4, x5)

inst_1257:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x2e4 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x06f and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x52e4; op2val:0x486f; 
   valaddr_reg:x2; val_offset:2454*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2454*FLEN/8, x6, x4, x5)

inst_1258:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x2e4 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x06f and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x52e4; op2val:0x486f; 
   valaddr_reg:x2; val_offset:2456*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2456*FLEN/8, x6, x4, x5)

inst_1259:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x2e4 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x06f and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x52e4; op2val:0x486f; 
   valaddr_reg:x2; val_offset:2458*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2458*FLEN/8, x6, x4, x5)

inst_1260:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x00a and fs2 == 0 and fe2 == 0x14 and fm2 == 0x2fd and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x480a; op2val:0x52fd; 
   valaddr_reg:x2; val_offset:2460*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2460*FLEN/8, x6, x4, x5)

inst_1261:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x00a and fs2 == 0 and fe2 == 0x14 and fm2 == 0x2fd and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x480a; op2val:0x52fd; 
   valaddr_reg:x2; val_offset:2462*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2462*FLEN/8, x6, x4, x5)

inst_1262:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x00a and fs2 == 0 and fe2 == 0x14 and fm2 == 0x2fd and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x480a; op2val:0x52fd; 
   valaddr_reg:x2; val_offset:2464*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2464*FLEN/8, x6, x4, x5)

inst_1263:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x00a and fs2 == 0 and fe2 == 0x14 and fm2 == 0x2fd and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x480a; op2val:0x52fd; 
   valaddr_reg:x2; val_offset:2466*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2466*FLEN/8, x6, x4, x5)

inst_1264:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x00a and fs2 == 0 and fe2 == 0x14 and fm2 == 0x2fd and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x480a; op2val:0x52fd; 
   valaddr_reg:x2; val_offset:2468*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2468*FLEN/8, x6, x4, x5)

inst_1265:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x3ad and fs2 == 0 and fe2 == 0x10 and fm2 == 0x125 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x53ad; op2val:0x4125; 
   valaddr_reg:x2; val_offset:2470*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2470*FLEN/8, x6, x4, x5)

inst_1266:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x3ad and fs2 == 0 and fe2 == 0x10 and fm2 == 0x125 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x53ad; op2val:0x4125; 
   valaddr_reg:x2; val_offset:2472*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2472*FLEN/8, x6, x4, x5)

inst_1267:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x3ad and fs2 == 0 and fe2 == 0x10 and fm2 == 0x125 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x53ad; op2val:0x4125; 
   valaddr_reg:x2; val_offset:2474*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2474*FLEN/8, x6, x4, x5)

inst_1268:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x3ad and fs2 == 0 and fe2 == 0x10 and fm2 == 0x125 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x53ad; op2val:0x4125; 
   valaddr_reg:x2; val_offset:2476*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2476*FLEN/8, x6, x4, x5)

inst_1269:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x3ad and fs2 == 0 and fe2 == 0x10 and fm2 == 0x125 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x53ad; op2val:0x4125; 
   valaddr_reg:x2; val_offset:2478*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2478*FLEN/8, x6, x4, x5)

inst_1270:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x3bc and fs2 == 0 and fe2 == 0x10 and fm2 == 0x038 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x53bc; op2val:0x4038; 
   valaddr_reg:x2; val_offset:2480*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2480*FLEN/8, x6, x4, x5)

inst_1271:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x3bc and fs2 == 0 and fe2 == 0x10 and fm2 == 0x038 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x53bc; op2val:0x4038; 
   valaddr_reg:x2; val_offset:2482*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2482*FLEN/8, x6, x4, x5)

inst_1272:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x3bc and fs2 == 0 and fe2 == 0x10 and fm2 == 0x038 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x53bc; op2val:0x4038; 
   valaddr_reg:x2; val_offset:2484*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2484*FLEN/8, x6, x4, x5)

inst_1273:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x3bc and fs2 == 0 and fe2 == 0x10 and fm2 == 0x038 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x53bc; op2val:0x4038; 
   valaddr_reg:x2; val_offset:2486*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2486*FLEN/8, x6, x4, x5)

inst_1274:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x3bc and fs2 == 0 and fe2 == 0x10 and fm2 == 0x038 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x53bc; op2val:0x4038; 
   valaddr_reg:x2; val_offset:2488*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2488*FLEN/8, x6, x4, x5)

inst_1275:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x3b4 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x025 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4fb4; op2val:0x5025; 
   valaddr_reg:x2; val_offset:2490*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2490*FLEN/8, x6, x4, x5)

inst_1276:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x3b4 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x025 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4fb4; op2val:0x5025; 
   valaddr_reg:x2; val_offset:2492*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2492*FLEN/8, x6, x4, x5)

inst_1277:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x3b4 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x025 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4fb4; op2val:0x5025; 
   valaddr_reg:x2; val_offset:2494*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2494*FLEN/8, x6, x4, x5)

inst_1278:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x3b4 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x025 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4fb4; op2val:0x5025; 
   valaddr_reg:x2; val_offset:2496*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2496*FLEN/8, x6, x4, x5)

inst_1279:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x3b4 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x025 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4fb4; op2val:0x5025; 
   valaddr_reg:x2; val_offset:2498*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2498*FLEN/8, x6, x4, x5)

inst_1280:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x381 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x3ec and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5381; op2val:0x43ec; 
   valaddr_reg:x2; val_offset:2500*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2500*FLEN/8, x6, x4, x5)

inst_1281:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x381 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x3ec and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5381; op2val:0x43ec; 
   valaddr_reg:x2; val_offset:2502*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2502*FLEN/8, x6, x4, x5)

inst_1282:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x381 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x3ec and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5381; op2val:0x43ec; 
   valaddr_reg:x2; val_offset:2504*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2504*FLEN/8, x6, x4, x5)

inst_1283:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x381 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x3ec and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5381; op2val:0x43ec; 
   valaddr_reg:x2; val_offset:2506*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2506*FLEN/8, x6, x4, x5)

inst_1284:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x381 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x3ec and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5381; op2val:0x43ec; 
   valaddr_reg:x2; val_offset:2508*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2508*FLEN/8, x6, x4, x5)

inst_1285:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x122 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x1bc and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5122; op2val:0x4dbc; 
   valaddr_reg:x2; val_offset:2510*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2510*FLEN/8, x6, x4, x5)

inst_1286:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x122 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x1bc and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5122; op2val:0x4dbc; 
   valaddr_reg:x2; val_offset:2512*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2512*FLEN/8, x6, x4, x5)

inst_1287:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x122 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x1bc and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5122; op2val:0x4dbc; 
   valaddr_reg:x2; val_offset:2514*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2514*FLEN/8, x6, x4, x5)

inst_1288:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x122 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x1bc and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5122; op2val:0x4dbc; 
   valaddr_reg:x2; val_offset:2516*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2516*FLEN/8, x6, x4, x5)

inst_1289:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x122 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x1bc and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5122; op2val:0x4dbc; 
   valaddr_reg:x2; val_offset:2518*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2518*FLEN/8, x6, x4, x5)

inst_1290:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x3f2 and fs2 == 0 and fe2 == 0x0d and fm2 == 0x31b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x53f2; op2val:0x371b; 
   valaddr_reg:x2; val_offset:2520*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2520*FLEN/8, x6, x4, x5)

inst_1291:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x3f2 and fs2 == 0 and fe2 == 0x0d and fm2 == 0x31b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x53f2; op2val:0x371b; 
   valaddr_reg:x2; val_offset:2522*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2522*FLEN/8, x6, x4, x5)

inst_1292:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x3f2 and fs2 == 0 and fe2 == 0x0d and fm2 == 0x31b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x53f2; op2val:0x371b; 
   valaddr_reg:x2; val_offset:2524*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2524*FLEN/8, x6, x4, x5)

inst_1293:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x3f2 and fs2 == 0 and fe2 == 0x0d and fm2 == 0x31b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x53f2; op2val:0x371b; 
   valaddr_reg:x2; val_offset:2526*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2526*FLEN/8, x6, x4, x5)

inst_1294:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x3f2 and fs2 == 0 and fe2 == 0x0d and fm2 == 0x31b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x53f2; op2val:0x371b; 
   valaddr_reg:x2; val_offset:2528*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2528*FLEN/8, x6, x4, x5)

inst_1295:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x0b3 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x29a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x50b3; op2val:0x4e9a; 
   valaddr_reg:x2; val_offset:2530*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2530*FLEN/8, x6, x4, x5)

inst_1296:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x0b3 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x29a and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x50b3; op2val:0x4e9a; 
   valaddr_reg:x2; val_offset:2532*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2532*FLEN/8, x6, x4, x5)

inst_1297:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x0b3 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x29a and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x50b3; op2val:0x4e9a; 
   valaddr_reg:x2; val_offset:2534*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2534*FLEN/8, x6, x4, x5)

inst_1298:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x0b3 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x29a and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x50b3; op2val:0x4e9a; 
   valaddr_reg:x2; val_offset:2536*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2536*FLEN/8, x6, x4, x5)

inst_1299:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x0b3 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x29a and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x50b3; op2val:0x4e9a; 
   valaddr_reg:x2; val_offset:2538*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2538*FLEN/8, x6, x4, x5)

inst_1300:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x331 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x272 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5331; op2val:0x4672; 
   valaddr_reg:x2; val_offset:2540*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2540*FLEN/8, x6, x4, x5)

inst_1301:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x331 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x272 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5331; op2val:0x4672; 
   valaddr_reg:x2; val_offset:2542*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2542*FLEN/8, x6, x4, x5)

inst_1302:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x331 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x272 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5331; op2val:0x4672; 
   valaddr_reg:x2; val_offset:2544*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2544*FLEN/8, x6, x4, x5)

inst_1303:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x331 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x272 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5331; op2val:0x4672; 
   valaddr_reg:x2; val_offset:2546*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2546*FLEN/8, x6, x4, x5)

inst_1304:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x331 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x272 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5331; op2val:0x4672; 
   valaddr_reg:x2; val_offset:2548*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2548*FLEN/8, x6, x4, x5)

inst_1305:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x275 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x229 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5275; op2val:0x4a29; 
   valaddr_reg:x2; val_offset:2550*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2550*FLEN/8, x6, x4, x5)
RVTEST_SIGBASE(x4,signature_x4_10)

inst_1306:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x275 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x229 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5275; op2val:0x4a29; 
   valaddr_reg:x2; val_offset:2552*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2552*FLEN/8, x6, x4, x5)

inst_1307:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x275 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x229 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5275; op2val:0x4a29; 
   valaddr_reg:x2; val_offset:2554*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2554*FLEN/8, x6, x4, x5)

inst_1308:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x275 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x229 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5275; op2val:0x4a29; 
   valaddr_reg:x2; val_offset:2556*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2556*FLEN/8, x6, x4, x5)

inst_1309:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x275 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x229 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5275; op2val:0x4a29; 
   valaddr_reg:x2; val_offset:2558*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2558*FLEN/8, x6, x4, x5)

inst_1310:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x013 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x1f6 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4c13; op2val:0x51f6; 
   valaddr_reg:x2; val_offset:2560*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2560*FLEN/8, x6, x4, x5)

inst_1311:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x013 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x1f6 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4c13; op2val:0x51f6; 
   valaddr_reg:x2; val_offset:2562*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2562*FLEN/8, x6, x4, x5)

inst_1312:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x013 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x1f6 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4c13; op2val:0x51f6; 
   valaddr_reg:x2; val_offset:2564*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2564*FLEN/8, x6, x4, x5)

inst_1313:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x013 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x1f6 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4c13; op2val:0x51f6; 
   valaddr_reg:x2; val_offset:2566*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2566*FLEN/8, x6, x4, x5)

inst_1314:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x013 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x1f6 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4c13; op2val:0x51f6; 
   valaddr_reg:x2; val_offset:2568*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2568*FLEN/8, x6, x4, x5)

inst_1315:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x0d5 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x195 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4cd5; op2val:0x5195; 
   valaddr_reg:x2; val_offset:2570*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2570*FLEN/8, x6, x4, x5)

inst_1316:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x0d5 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x195 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4cd5; op2val:0x5195; 
   valaddr_reg:x2; val_offset:2572*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2572*FLEN/8, x6, x4, x5)

inst_1317:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x0d5 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x195 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4cd5; op2val:0x5195; 
   valaddr_reg:x2; val_offset:2574*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2574*FLEN/8, x6, x4, x5)

inst_1318:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x0d5 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x195 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4cd5; op2val:0x5195; 
   valaddr_reg:x2; val_offset:2576*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2576*FLEN/8, x6, x4, x5)

inst_1319:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x0d5 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x195 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4cd5; op2val:0x5195; 
   valaddr_reg:x2; val_offset:2578*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2578*FLEN/8, x6, x4, x5)

inst_1320:
// fs1 == 0 and fe1 == 0x10 and fm1 == 0x3d4 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x382 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x43d4; op2val:0x5382; 
   valaddr_reg:x2; val_offset:2580*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2580*FLEN/8, x6, x4, x5)

inst_1321:
// fs1 == 0 and fe1 == 0x10 and fm1 == 0x3d4 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x382 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x43d4; op2val:0x5382; 
   valaddr_reg:x2; val_offset:2582*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2582*FLEN/8, x6, x4, x5)

inst_1322:
// fs1 == 0 and fe1 == 0x10 and fm1 == 0x3d4 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x382 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x43d4; op2val:0x5382; 
   valaddr_reg:x2; val_offset:2584*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2584*FLEN/8, x6, x4, x5)

inst_1323:
// fs1 == 0 and fe1 == 0x10 and fm1 == 0x3d4 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x382 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x43d4; op2val:0x5382; 
   valaddr_reg:x2; val_offset:2586*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2586*FLEN/8, x6, x4, x5)

inst_1324:
// fs1 == 0 and fe1 == 0x10 and fm1 == 0x3d4 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x382 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x43d4; op2val:0x5382; 
   valaddr_reg:x2; val_offset:2588*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2588*FLEN/8, x6, x4, x5)

inst_1325:
// fs1 == 0 and fe1 == 0x10 and fm1 == 0x096 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x3b6 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4096; op2val:0x53b6; 
   valaddr_reg:x2; val_offset:2590*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2590*FLEN/8, x6, x4, x5)

inst_1326:
// fs1 == 0 and fe1 == 0x10 and fm1 == 0x096 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x3b6 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4096; op2val:0x53b6; 
   valaddr_reg:x2; val_offset:2592*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2592*FLEN/8, x6, x4, x5)

inst_1327:
// fs1 == 0 and fe1 == 0x10 and fm1 == 0x096 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x3b6 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4096; op2val:0x53b6; 
   valaddr_reg:x2; val_offset:2594*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2594*FLEN/8, x6, x4, x5)

inst_1328:
// fs1 == 0 and fe1 == 0x10 and fm1 == 0x096 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x3b6 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4096; op2val:0x53b6; 
   valaddr_reg:x2; val_offset:2596*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2596*FLEN/8, x6, x4, x5)

inst_1329:
// fs1 == 0 and fe1 == 0x10 and fm1 == 0x096 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x3b6 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4096; op2val:0x53b6; 
   valaddr_reg:x2; val_offset:2598*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2598*FLEN/8, x6, x4, x5)

inst_1330:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x19c and fs2 == 0 and fe2 == 0x14 and fm2 == 0x34c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x459c; op2val:0x534c; 
   valaddr_reg:x2; val_offset:2600*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2600*FLEN/8, x6, x4, x5)

inst_1331:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x19c and fs2 == 0 and fe2 == 0x14 and fm2 == 0x34c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x459c; op2val:0x534c; 
   valaddr_reg:x2; val_offset:2602*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2602*FLEN/8, x6, x4, x5)

inst_1332:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x19c and fs2 == 0 and fe2 == 0x14 and fm2 == 0x34c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x459c; op2val:0x534c; 
   valaddr_reg:x2; val_offset:2604*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2604*FLEN/8, x6, x4, x5)

inst_1333:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x19c and fs2 == 0 and fe2 == 0x14 and fm2 == 0x34c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x459c; op2val:0x534c; 
   valaddr_reg:x2; val_offset:2606*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2606*FLEN/8, x6, x4, x5)

inst_1334:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x19c and fs2 == 0 and fe2 == 0x14 and fm2 == 0x34c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x459c; op2val:0x534c; 
   valaddr_reg:x2; val_offset:2608*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2608*FLEN/8, x6, x4, x5)

inst_1335:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x076 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x313 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5076; op2val:0x4f13; 
   valaddr_reg:x2; val_offset:2610*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2610*FLEN/8, x6, x4, x5)

inst_1336:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x076 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x313 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5076; op2val:0x4f13; 
   valaddr_reg:x2; val_offset:2612*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2612*FLEN/8, x6, x4, x5)

inst_1337:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x076 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x313 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5076; op2val:0x4f13; 
   valaddr_reg:x2; val_offset:2614*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2614*FLEN/8, x6, x4, x5)

inst_1338:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x076 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x313 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5076; op2val:0x4f13; 
   valaddr_reg:x2; val_offset:2616*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2616*FLEN/8, x6, x4, x5)

inst_1339:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x076 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x313 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5076; op2val:0x4f13; 
   valaddr_reg:x2; val_offset:2618*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2618*FLEN/8, x6, x4, x5)

inst_1340:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x0fb and fs2 == 0 and fe2 == 0x14 and fm2 == 0x2c1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x48fb; op2val:0x52c1; 
   valaddr_reg:x2; val_offset:2620*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2620*FLEN/8, x6, x4, x5)

inst_1341:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x0fb and fs2 == 0 and fe2 == 0x14 and fm2 == 0x2c1 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x48fb; op2val:0x52c1; 
   valaddr_reg:x2; val_offset:2622*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2622*FLEN/8, x6, x4, x5)

inst_1342:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x0fb and fs2 == 0 and fe2 == 0x14 and fm2 == 0x2c1 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x48fb; op2val:0x52c1; 
   valaddr_reg:x2; val_offset:2624*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2624*FLEN/8, x6, x4, x5)

inst_1343:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x0fb and fs2 == 0 and fe2 == 0x14 and fm2 == 0x2c1 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x48fb; op2val:0x52c1; 
   valaddr_reg:x2; val_offset:2626*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2626*FLEN/8, x6, x4, x5)

inst_1344:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x0fb and fs2 == 0 and fe2 == 0x14 and fm2 == 0x2c1 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x48fb; op2val:0x52c1; 
   valaddr_reg:x2; val_offset:2628*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2628*FLEN/8, x6, x4, x5)

inst_1345:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x124 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x1b8 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5124; op2val:0x4db8; 
   valaddr_reg:x2; val_offset:2630*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2630*FLEN/8, x6, x4, x5)

inst_1346:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x124 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x1b8 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5124; op2val:0x4db8; 
   valaddr_reg:x2; val_offset:2632*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2632*FLEN/8, x6, x4, x5)

inst_1347:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x124 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x1b8 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5124; op2val:0x4db8; 
   valaddr_reg:x2; val_offset:2634*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2634*FLEN/8, x6, x4, x5)

inst_1348:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x124 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x1b8 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5124; op2val:0x4db8; 
   valaddr_reg:x2; val_offset:2636*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2636*FLEN/8, x6, x4, x5)

inst_1349:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x124 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x1b8 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5124; op2val:0x4db8; 
   valaddr_reg:x2; val_offset:2638*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2638*FLEN/8, x6, x4, x5)

inst_1350:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x341 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x05f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4f41; op2val:0x505f; 
   valaddr_reg:x2; val_offset:2640*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2640*FLEN/8, x6, x4, x5)

inst_1351:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x341 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x05f and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4f41; op2val:0x505f; 
   valaddr_reg:x2; val_offset:2642*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2642*FLEN/8, x6, x4, x5)

inst_1352:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x341 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x05f and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4f41; op2val:0x505f; 
   valaddr_reg:x2; val_offset:2644*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2644*FLEN/8, x6, x4, x5)

inst_1353:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x341 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x05f and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4f41; op2val:0x505f; 
   valaddr_reg:x2; val_offset:2646*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2646*FLEN/8, x6, x4, x5)

inst_1354:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x341 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x05f and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4f41; op2val:0x505f; 
   valaddr_reg:x2; val_offset:2648*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2648*FLEN/8, x6, x4, x5)

inst_1355:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x399 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x26f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5399; op2val:0x426f; 
   valaddr_reg:x2; val_offset:2650*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2650*FLEN/8, x6, x4, x5)

inst_1356:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x399 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x26f and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5399; op2val:0x426f; 
   valaddr_reg:x2; val_offset:2652*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2652*FLEN/8, x6, x4, x5)

inst_1357:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x399 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x26f and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5399; op2val:0x426f; 
   valaddr_reg:x2; val_offset:2654*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2654*FLEN/8, x6, x4, x5)

inst_1358:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x399 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x26f and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5399; op2val:0x426f; 
   valaddr_reg:x2; val_offset:2656*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2656*FLEN/8, x6, x4, x5)

inst_1359:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x399 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x26f and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5399; op2val:0x426f; 
   valaddr_reg:x2; val_offset:2658*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2658*FLEN/8, x6, x4, x5)

inst_1360:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x2af and fs2 == 0 and fe2 == 0x14 and fm2 == 0x0a8 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4eaf; op2val:0x50a8; 
   valaddr_reg:x2; val_offset:2660*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2660*FLEN/8, x6, x4, x5)

inst_1361:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x2af and fs2 == 0 and fe2 == 0x14 and fm2 == 0x0a8 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4eaf; op2val:0x50a8; 
   valaddr_reg:x2; val_offset:2662*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2662*FLEN/8, x6, x4, x5)

inst_1362:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x2af and fs2 == 0 and fe2 == 0x14 and fm2 == 0x0a8 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4eaf; op2val:0x50a8; 
   valaddr_reg:x2; val_offset:2664*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2664*FLEN/8, x6, x4, x5)

inst_1363:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x2af and fs2 == 0 and fe2 == 0x14 and fm2 == 0x0a8 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4eaf; op2val:0x50a8; 
   valaddr_reg:x2; val_offset:2666*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2666*FLEN/8, x6, x4, x5)

inst_1364:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x2af and fs2 == 0 and fe2 == 0x14 and fm2 == 0x0a8 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4eaf; op2val:0x50a8; 
   valaddr_reg:x2; val_offset:2668*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2668*FLEN/8, x6, x4, x5)

inst_1365:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x1dc and fs2 == 0 and fe2 == 0x13 and fm2 == 0x048 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x51dc; op2val:0x4c48; 
   valaddr_reg:x2; val_offset:2670*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2670*FLEN/8, x6, x4, x5)

inst_1366:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x1dc and fs2 == 0 and fe2 == 0x13 and fm2 == 0x048 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x51dc; op2val:0x4c48; 
   valaddr_reg:x2; val_offset:2672*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2672*FLEN/8, x6, x4, x5)

inst_1367:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x1dc and fs2 == 0 and fe2 == 0x13 and fm2 == 0x048 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x51dc; op2val:0x4c48; 
   valaddr_reg:x2; val_offset:2674*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2674*FLEN/8, x6, x4, x5)

inst_1368:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x1dc and fs2 == 0 and fe2 == 0x13 and fm2 == 0x048 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x51dc; op2val:0x4c48; 
   valaddr_reg:x2; val_offset:2676*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2676*FLEN/8, x6, x4, x5)

inst_1369:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x1dc and fs2 == 0 and fe2 == 0x13 and fm2 == 0x048 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x51dc; op2val:0x4c48; 
   valaddr_reg:x2; val_offset:2678*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2678*FLEN/8, x6, x4, x5)

inst_1370:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x2ed and fs2 == 0 and fe2 == 0x14 and fm2 == 0x244 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4aed; op2val:0x5244; 
   valaddr_reg:x2; val_offset:2680*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2680*FLEN/8, x6, x4, x5)

inst_1371:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x2ed and fs2 == 0 and fe2 == 0x14 and fm2 == 0x244 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4aed; op2val:0x5244; 
   valaddr_reg:x2; val_offset:2682*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2682*FLEN/8, x6, x4, x5)

inst_1372:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x2ed and fs2 == 0 and fe2 == 0x14 and fm2 == 0x244 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4aed; op2val:0x5244; 
   valaddr_reg:x2; val_offset:2684*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2684*FLEN/8, x6, x4, x5)

inst_1373:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x2ed and fs2 == 0 and fe2 == 0x14 and fm2 == 0x244 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4aed; op2val:0x5244; 
   valaddr_reg:x2; val_offset:2686*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2686*FLEN/8, x6, x4, x5)

inst_1374:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x2ed and fs2 == 0 and fe2 == 0x14 and fm2 == 0x244 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4aed; op2val:0x5244; 
   valaddr_reg:x2; val_offset:2688*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2688*FLEN/8, x6, x4, x5)

inst_1375:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x3aa and fs2 == 0 and fe2 == 0x14 and fm2 == 0x02a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4faa; op2val:0x502a; 
   valaddr_reg:x2; val_offset:2690*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2690*FLEN/8, x6, x4, x5)

inst_1376:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x3aa and fs2 == 0 and fe2 == 0x14 and fm2 == 0x02a and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4faa; op2val:0x502a; 
   valaddr_reg:x2; val_offset:2692*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2692*FLEN/8, x6, x4, x5)

inst_1377:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x3aa and fs2 == 0 and fe2 == 0x14 and fm2 == 0x02a and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4faa; op2val:0x502a; 
   valaddr_reg:x2; val_offset:2694*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2694*FLEN/8, x6, x4, x5)

inst_1378:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x3aa and fs2 == 0 and fe2 == 0x14 and fm2 == 0x02a and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4faa; op2val:0x502a; 
   valaddr_reg:x2; val_offset:2696*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2696*FLEN/8, x6, x4, x5)

inst_1379:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x3aa and fs2 == 0 and fe2 == 0x14 and fm2 == 0x02a and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4faa; op2val:0x502a; 
   valaddr_reg:x2; val_offset:2698*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2698*FLEN/8, x6, x4, x5)

inst_1380:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x265 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x269 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5265; op2val:0x4a69; 
   valaddr_reg:x2; val_offset:2700*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2700*FLEN/8, x6, x4, x5)

inst_1381:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x265 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x269 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5265; op2val:0x4a69; 
   valaddr_reg:x2; val_offset:2702*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2702*FLEN/8, x6, x4, x5)

inst_1382:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x265 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x269 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5265; op2val:0x4a69; 
   valaddr_reg:x2; val_offset:2704*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2704*FLEN/8, x6, x4, x5)

inst_1383:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x265 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x269 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5265; op2val:0x4a69; 
   valaddr_reg:x2; val_offset:2706*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2706*FLEN/8, x6, x4, x5)

inst_1384:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x265 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x269 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5265; op2val:0x4a69; 
   valaddr_reg:x2; val_offset:2708*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2708*FLEN/8, x6, x4, x5)

inst_1385:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x085 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x2f5 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5085; op2val:0x4ef5; 
   valaddr_reg:x2; val_offset:2710*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2710*FLEN/8, x6, x4, x5)

inst_1386:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x085 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x2f5 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5085; op2val:0x4ef5; 
   valaddr_reg:x2; val_offset:2712*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2712*FLEN/8, x6, x4, x5)

inst_1387:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x085 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x2f5 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5085; op2val:0x4ef5; 
   valaddr_reg:x2; val_offset:2714*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2714*FLEN/8, x6, x4, x5)

inst_1388:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x085 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x2f5 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5085; op2val:0x4ef5; 
   valaddr_reg:x2; val_offset:2716*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2716*FLEN/8, x6, x4, x5)

inst_1389:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x085 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x2f5 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5085; op2val:0x4ef5; 
   valaddr_reg:x2; val_offset:2718*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2718*FLEN/8, x6, x4, x5)

inst_1390:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x264 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x270 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5264; op2val:0x4a70; 
   valaddr_reg:x2; val_offset:2720*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2720*FLEN/8, x6, x4, x5)

inst_1391:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x264 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x270 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5264; op2val:0x4a70; 
   valaddr_reg:x2; val_offset:2722*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2722*FLEN/8, x6, x4, x5)

inst_1392:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x264 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x270 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5264; op2val:0x4a70; 
   valaddr_reg:x2; val_offset:2724*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2724*FLEN/8, x6, x4, x5)

inst_1393:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x264 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x270 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5264; op2val:0x4a70; 
   valaddr_reg:x2; val_offset:2726*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2726*FLEN/8, x6, x4, x5)

inst_1394:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x264 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x270 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5264; op2val:0x4a70; 
   valaddr_reg:x2; val_offset:2728*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2728*FLEN/8, x6, x4, x5)

inst_1395:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x288 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x0bc and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4e88; op2val:0x50bc; 
   valaddr_reg:x2; val_offset:2730*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2730*FLEN/8, x6, x4, x5)

inst_1396:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x288 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x0bc and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4e88; op2val:0x50bc; 
   valaddr_reg:x2; val_offset:2732*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2732*FLEN/8, x6, x4, x5)

inst_1397:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x288 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x0bc and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4e88; op2val:0x50bc; 
   valaddr_reg:x2; val_offset:2734*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2734*FLEN/8, x6, x4, x5)

inst_1398:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x288 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x0bc and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4e88; op2val:0x50bc; 
   valaddr_reg:x2; val_offset:2736*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2736*FLEN/8, x6, x4, x5)

inst_1399:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x288 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x0bc and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4e88; op2val:0x50bc; 
   valaddr_reg:x2; val_offset:2738*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2738*FLEN/8, x6, x4, x5)

inst_1400:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x30c and fs2 == 0 and fe2 == 0x14 and fm2 == 0x079 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4f0c; op2val:0x5079; 
   valaddr_reg:x2; val_offset:2740*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2740*FLEN/8, x6, x4, x5)

inst_1401:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x30c and fs2 == 0 and fe2 == 0x14 and fm2 == 0x079 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4f0c; op2val:0x5079; 
   valaddr_reg:x2; val_offset:2742*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2742*FLEN/8, x6, x4, x5)

inst_1402:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x30c and fs2 == 0 and fe2 == 0x14 and fm2 == 0x079 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4f0c; op2val:0x5079; 
   valaddr_reg:x2; val_offset:2744*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2744*FLEN/8, x6, x4, x5)

inst_1403:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x30c and fs2 == 0 and fe2 == 0x14 and fm2 == 0x079 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4f0c; op2val:0x5079; 
   valaddr_reg:x2; val_offset:2746*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2746*FLEN/8, x6, x4, x5)

inst_1404:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x30c and fs2 == 0 and fe2 == 0x14 and fm2 == 0x079 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4f0c; op2val:0x5079; 
   valaddr_reg:x2; val_offset:2748*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2748*FLEN/8, x6, x4, x5)

inst_1405:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x364 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x04e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4f64; op2val:0x504e; 
   valaddr_reg:x2; val_offset:2750*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2750*FLEN/8, x6, x4, x5)

inst_1406:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x364 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x04e and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4f64; op2val:0x504e; 
   valaddr_reg:x2; val_offset:2752*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2752*FLEN/8, x6, x4, x5)

inst_1407:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x364 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x04e and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4f64; op2val:0x504e; 
   valaddr_reg:x2; val_offset:2754*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2754*FLEN/8, x6, x4, x5)

inst_1408:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x364 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x04e and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4f64; op2val:0x504e; 
   valaddr_reg:x2; val_offset:2756*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2756*FLEN/8, x6, x4, x5)

inst_1409:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x364 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x04e and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4f64; op2val:0x504e; 
   valaddr_reg:x2; val_offset:2758*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2758*FLEN/8, x6, x4, x5)

inst_1410:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x0fd and fs2 == 0 and fe2 == 0x14 and fm2 == 0x2c0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x48fd; op2val:0x52c0; 
   valaddr_reg:x2; val_offset:2760*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2760*FLEN/8, x6, x4, x5)

inst_1411:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x0fd and fs2 == 0 and fe2 == 0x14 and fm2 == 0x2c0 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x48fd; op2val:0x52c0; 
   valaddr_reg:x2; val_offset:2762*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2762*FLEN/8, x6, x4, x5)

inst_1412:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x0fd and fs2 == 0 and fe2 == 0x14 and fm2 == 0x2c0 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x48fd; op2val:0x52c0; 
   valaddr_reg:x2; val_offset:2764*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2764*FLEN/8, x6, x4, x5)

inst_1413:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x0fd and fs2 == 0 and fe2 == 0x14 and fm2 == 0x2c0 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x48fd; op2val:0x52c0; 
   valaddr_reg:x2; val_offset:2766*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2766*FLEN/8, x6, x4, x5)

inst_1414:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x0fd and fs2 == 0 and fe2 == 0x14 and fm2 == 0x2c0 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x48fd; op2val:0x52c0; 
   valaddr_reg:x2; val_offset:2768*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2768*FLEN/8, x6, x4, x5)

inst_1415:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x125 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x1b6 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5125; op2val:0x4db6; 
   valaddr_reg:x2; val_offset:2770*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2770*FLEN/8, x6, x4, x5)

inst_1416:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x125 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x1b6 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5125; op2val:0x4db6; 
   valaddr_reg:x2; val_offset:2772*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2772*FLEN/8, x6, x4, x5)

inst_1417:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x125 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x1b6 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5125; op2val:0x4db6; 
   valaddr_reg:x2; val_offset:2774*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2774*FLEN/8, x6, x4, x5)

inst_1418:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x125 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x1b6 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5125; op2val:0x4db6; 
   valaddr_reg:x2; val_offset:2776*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2776*FLEN/8, x6, x4, x5)

inst_1419:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x125 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x1b6 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x5125; op2val:0x4db6; 
   valaddr_reg:x2; val_offset:2778*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2778*FLEN/8, x6, x4, x5)

inst_1420:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x2ea and fs2 == 0 and fe2 == 0x14 and fm2 == 0x245 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4aea; op2val:0x5245; 
   valaddr_reg:x2; val_offset:2780*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2780*FLEN/8, x6, x4, x5)

inst_1421:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x2ea and fs2 == 0 and fe2 == 0x14 and fm2 == 0x245 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4aea; op2val:0x5245; 
   valaddr_reg:x2; val_offset:2782*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2782*FLEN/8, x6, x4, x5)

inst_1422:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x2ea and fs2 == 0 and fe2 == 0x14 and fm2 == 0x245 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4aea; op2val:0x5245; 
   valaddr_reg:x2; val_offset:2784*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2784*FLEN/8, x6, x4, x5)

inst_1423:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x2ea and fs2 == 0 and fe2 == 0x14 and fm2 == 0x245 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4aea; op2val:0x5245; 
   valaddr_reg:x2; val_offset:2786*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2786*FLEN/8, x6, x4, x5)

inst_1424:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x2ea and fs2 == 0 and fe2 == 0x14 and fm2 == 0x245 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x4aea; op2val:0x5245; 
   valaddr_reg:x2; val_offset:2788*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2788*FLEN/8, x6, x4, x5)

inst_1425:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x1a1 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x0bd and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x51a1; op2val:0x4cbd; 
   valaddr_reg:x2; val_offset:2790*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2790*FLEN/8, x6, x4, x5)

inst_1426:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x1a1 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x0bd and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x51a1; op2val:0x4cbd; 
   valaddr_reg:x2; val_offset:2792*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2792*FLEN/8, x6, x4, x5)

inst_1427:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x1a1 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x0bd and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x51a1; op2val:0x4cbd; 
   valaddr_reg:x2; val_offset:2794*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2794*FLEN/8, x6, x4, x5)

inst_1428:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x1a1 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x0bd and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x51a1; op2val:0x4cbd; 
   valaddr_reg:x2; val_offset:2796*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2796*FLEN/8, x6, x4, x5)

inst_1429:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x1a1 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x0bd and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x51a1; op2val:0x4cbd; 
   valaddr_reg:x2; val_offset:2798*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2798*FLEN/8, x6, x4, x5)

inst_1430:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x1f5 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x3d0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3df5; op2val:0x53d0; 
   valaddr_reg:x2; val_offset:2800*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2800*FLEN/8, x6, x4, x5)

inst_1431:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x1f5 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x3d0 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3df5; op2val:0x53d0; 
   valaddr_reg:x2; val_offset:2802*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2802*FLEN/8, x6, x4, x5)

inst_1432:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x1f5 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x3d0 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3df5; op2val:0x53d0; 
   valaddr_reg:x2; val_offset:2804*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2804*FLEN/8, x6, x4, x5)

inst_1433:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x1f5 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x3d0 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3df5; op2val:0x53d0; 
   valaddr_reg:x2; val_offset:2806*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2806*FLEN/8, x6, x4, x5)
RVTEST_SIGBASE(x4,signature_x4_11)

inst_1434:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x1f5 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x3d0 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0x0000  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3df5; op2val:0x53d0; 
   valaddr_reg:x2; val_offset:2808*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2808*FLEN/8, x6, x4, x5)

inst_1435:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x016 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x32c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3416; op2val:0xb32c; 
   valaddr_reg:x2; val_offset:2810*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2810*FLEN/8, x6, x4, x5)

inst_1436:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x016 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x32c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3416; op2val:0xb32c; 
   valaddr_reg:x2; val_offset:2812*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2812*FLEN/8, x6, x4, x5)

inst_1437:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x016 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x32c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3416; op2val:0xb32c; 
   valaddr_reg:x2; val_offset:2814*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2814*FLEN/8, x6, x4, x5)

inst_1438:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x016 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x32c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3416; op2val:0xb32c; 
   valaddr_reg:x2; val_offset:2816*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2816*FLEN/8, x6, x4, x5)

inst_1439:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x016 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x32c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3416; op2val:0xb32c; 
   valaddr_reg:x2; val_offset:2818*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2818*FLEN/8, x6, x4, x5)

inst_1440:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x38c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x30c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x378c; op2val:0xb70c; 
   valaddr_reg:x2; val_offset:2820*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2820*FLEN/8, x6, x4, x5)

inst_1441:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x38c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x30c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x378c; op2val:0xb70c; 
   valaddr_reg:x2; val_offset:2822*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2822*FLEN/8, x6, x4, x5)

inst_1442:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x38c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x30c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x378c; op2val:0xb70c; 
   valaddr_reg:x2; val_offset:2824*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2824*FLEN/8, x6, x4, x5)

inst_1443:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x38c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x30c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x378c; op2val:0xb70c; 
   valaddr_reg:x2; val_offset:2826*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2826*FLEN/8, x6, x4, x5)

inst_1444:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x38c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x30c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x378c; op2val:0xb70c; 
   valaddr_reg:x2; val_offset:2828*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2828*FLEN/8, x6, x4, x5)

inst_1445:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x10d and fs2 == 1 and fe2 == 0x0d and fm2 == 0x08d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x350d; op2val:0xb48d; 
   valaddr_reg:x2; val_offset:2830*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2830*FLEN/8, x6, x4, x5)

inst_1446:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x10d and fs2 == 1 and fe2 == 0x0d and fm2 == 0x08d and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x350d; op2val:0xb48d; 
   valaddr_reg:x2; val_offset:2832*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2832*FLEN/8, x6, x4, x5)

inst_1447:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x10d and fs2 == 1 and fe2 == 0x0d and fm2 == 0x08d and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x350d; op2val:0xb48d; 
   valaddr_reg:x2; val_offset:2834*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2834*FLEN/8, x6, x4, x5)

inst_1448:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x10d and fs2 == 1 and fe2 == 0x0d and fm2 == 0x08d and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x350d; op2val:0xb48d; 
   valaddr_reg:x2; val_offset:2836*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2836*FLEN/8, x6, x4, x5)

inst_1449:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x10d and fs2 == 1 and fe2 == 0x0d and fm2 == 0x08d and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x350d; op2val:0xb48d; 
   valaddr_reg:x2; val_offset:2838*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2838*FLEN/8, x6, x4, x5)

inst_1450:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x17c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0fc and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x357c; op2val:0xb4fc; 
   valaddr_reg:x2; val_offset:2840*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2840*FLEN/8, x6, x4, x5)

inst_1451:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x17c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0fc and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x357c; op2val:0xb4fc; 
   valaddr_reg:x2; val_offset:2842*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2842*FLEN/8, x6, x4, x5)

inst_1452:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x17c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0fc and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x357c; op2val:0xb4fc; 
   valaddr_reg:x2; val_offset:2844*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2844*FLEN/8, x6, x4, x5)

inst_1453:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x17c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0fc and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x357c; op2val:0xb4fc; 
   valaddr_reg:x2; val_offset:2846*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2846*FLEN/8, x6, x4, x5)

inst_1454:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x17c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0fc and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x357c; op2val:0xb4fc; 
   valaddr_reg:x2; val_offset:2848*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2848*FLEN/8, x6, x4, x5)

inst_1455:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x232 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1f2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a32; op2val:0xb9f2; 
   valaddr_reg:x2; val_offset:2850*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2850*FLEN/8, x6, x4, x5)

inst_1456:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x232 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1f2 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a32; op2val:0xb9f2; 
   valaddr_reg:x2; val_offset:2852*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2852*FLEN/8, x6, x4, x5)

inst_1457:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x232 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1f2 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a32; op2val:0xb9f2; 
   valaddr_reg:x2; val_offset:2854*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2854*FLEN/8, x6, x4, x5)

inst_1458:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x232 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1f2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a32; op2val:0xb9f2; 
   valaddr_reg:x2; val_offset:2856*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2856*FLEN/8, x6, x4, x5)

inst_1459:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x232 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1f2 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a32; op2val:0xb9f2; 
   valaddr_reg:x2; val_offset:2858*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2858*FLEN/8, x6, x4, x5)

inst_1460:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1d4 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x194 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39d4; op2val:0xb994; 
   valaddr_reg:x2; val_offset:2860*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2860*FLEN/8, x6, x4, x5)

inst_1461:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1d4 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x194 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39d4; op2val:0xb994; 
   valaddr_reg:x2; val_offset:2862*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2862*FLEN/8, x6, x4, x5)

inst_1462:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1d4 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x194 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39d4; op2val:0xb994; 
   valaddr_reg:x2; val_offset:2864*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2864*FLEN/8, x6, x4, x5)

inst_1463:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1d4 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x194 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39d4; op2val:0xb994; 
   valaddr_reg:x2; val_offset:2866*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2866*FLEN/8, x6, x4, x5)

inst_1464:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1d4 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x194 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39d4; op2val:0xb994; 
   valaddr_reg:x2; val_offset:2868*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2868*FLEN/8, x6, x4, x5)

inst_1465:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x310 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2d0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b10; op2val:0xbad0; 
   valaddr_reg:x2; val_offset:2870*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2870*FLEN/8, x6, x4, x5)

inst_1466:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x310 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2d0 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b10; op2val:0xbad0; 
   valaddr_reg:x2; val_offset:2872*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2872*FLEN/8, x6, x4, x5)

inst_1467:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x310 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2d0 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b10; op2val:0xbad0; 
   valaddr_reg:x2; val_offset:2874*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2874*FLEN/8, x6, x4, x5)

inst_1468:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x310 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2d0 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b10; op2val:0xbad0; 
   valaddr_reg:x2; val_offset:2876*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2876*FLEN/8, x6, x4, x5)

inst_1469:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x310 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2d0 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b10; op2val:0xbad0; 
   valaddr_reg:x2; val_offset:2878*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2878*FLEN/8, x6, x4, x5)

inst_1470:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3af and fs2 == 1 and fe2 == 0x0e and fm2 == 0x36f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3baf; op2val:0xbb6f; 
   valaddr_reg:x2; val_offset:2880*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2880*FLEN/8, x6, x4, x5)

inst_1471:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3af and fs2 == 1 and fe2 == 0x0e and fm2 == 0x36f and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3baf; op2val:0xbb6f; 
   valaddr_reg:x2; val_offset:2882*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2882*FLEN/8, x6, x4, x5)

inst_1472:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3af and fs2 == 1 and fe2 == 0x0e and fm2 == 0x36f and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3baf; op2val:0xbb6f; 
   valaddr_reg:x2; val_offset:2884*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2884*FLEN/8, x6, x4, x5)

inst_1473:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3af and fs2 == 1 and fe2 == 0x0e and fm2 == 0x36f and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3baf; op2val:0xbb6f; 
   valaddr_reg:x2; val_offset:2886*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2886*FLEN/8, x6, x4, x5)

inst_1474:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3af and fs2 == 1 and fe2 == 0x0e and fm2 == 0x36f and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3baf; op2val:0xbb6f; 
   valaddr_reg:x2; val_offset:2888*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2888*FLEN/8, x6, x4, x5)

inst_1475:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3d8 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x358 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37d8; op2val:0xb758; 
   valaddr_reg:x2; val_offset:2890*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2890*FLEN/8, x6, x4, x5)

inst_1476:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3d8 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x358 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37d8; op2val:0xb758; 
   valaddr_reg:x2; val_offset:2892*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2892*FLEN/8, x6, x4, x5)

inst_1477:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3d8 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x358 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37d8; op2val:0xb758; 
   valaddr_reg:x2; val_offset:2894*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2894*FLEN/8, x6, x4, x5)

inst_1478:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3d8 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x358 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37d8; op2val:0xb758; 
   valaddr_reg:x2; val_offset:2896*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2896*FLEN/8, x6, x4, x5)

inst_1479:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3d8 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x358 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37d8; op2val:0xb758; 
   valaddr_reg:x2; val_offset:2898*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2898*FLEN/8, x6, x4, x5)

inst_1480:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0ed and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0ad and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38ed; op2val:0xb8ad; 
   valaddr_reg:x2; val_offset:2900*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2900*FLEN/8, x6, x4, x5)

inst_1481:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0ed and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0ad and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38ed; op2val:0xb8ad; 
   valaddr_reg:x2; val_offset:2902*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2902*FLEN/8, x6, x4, x5)

inst_1482:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0ed and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0ad and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38ed; op2val:0xb8ad; 
   valaddr_reg:x2; val_offset:2904*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2904*FLEN/8, x6, x4, x5)

inst_1483:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0ed and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0ad and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38ed; op2val:0xb8ad; 
   valaddr_reg:x2; val_offset:2906*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2906*FLEN/8, x6, x4, x5)

inst_1484:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0ed and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0ad and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x38ed; op2val:0xb8ad; 
   valaddr_reg:x2; val_offset:2908*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2908*FLEN/8, x6, x4, x5)

inst_1485:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x20a and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1ca and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a0a; op2val:0xb9ca; 
   valaddr_reg:x2; val_offset:2910*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2910*FLEN/8, x6, x4, x5)

inst_1486:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x20a and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1ca and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a0a; op2val:0xb9ca; 
   valaddr_reg:x2; val_offset:2912*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2912*FLEN/8, x6, x4, x5)

inst_1487:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x20a and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1ca and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a0a; op2val:0xb9ca; 
   valaddr_reg:x2; val_offset:2914*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2914*FLEN/8, x6, x4, x5)

inst_1488:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x20a and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1ca and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a0a; op2val:0xb9ca; 
   valaddr_reg:x2; val_offset:2916*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2916*FLEN/8, x6, x4, x5)

inst_1489:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x20a and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1ca and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a0a; op2val:0xb9ca; 
   valaddr_reg:x2; val_offset:2918*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2918*FLEN/8, x6, x4, x5)

inst_1490:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x04b and fs2 == 1 and fe2 == 0x0c and fm2 == 0x396 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x344b; op2val:0xb396; 
   valaddr_reg:x2; val_offset:2920*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2920*FLEN/8, x6, x4, x5)

inst_1491:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x04b and fs2 == 1 and fe2 == 0x0c and fm2 == 0x396 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x344b; op2val:0xb396; 
   valaddr_reg:x2; val_offset:2922*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2922*FLEN/8, x6, x4, x5)

inst_1492:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x04b and fs2 == 1 and fe2 == 0x0c and fm2 == 0x396 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x344b; op2val:0xb396; 
   valaddr_reg:x2; val_offset:2924*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2924*FLEN/8, x6, x4, x5)

inst_1493:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x04b and fs2 == 1 and fe2 == 0x0c and fm2 == 0x396 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x344b; op2val:0xb396; 
   valaddr_reg:x2; val_offset:2926*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2926*FLEN/8, x6, x4, x5)

inst_1494:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x04b and fs2 == 1 and fe2 == 0x0c and fm2 == 0x396 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x344b; op2val:0xb396; 
   valaddr_reg:x2; val_offset:2928*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2928*FLEN/8, x6, x4, x5)

inst_1495:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2c5 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x245 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36c5; op2val:0xb645; 
   valaddr_reg:x2; val_offset:2930*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2930*FLEN/8, x6, x4, x5)

inst_1496:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2c5 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x245 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36c5; op2val:0xb645; 
   valaddr_reg:x2; val_offset:2932*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2932*FLEN/8, x6, x4, x5)

inst_1497:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2c5 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x245 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36c5; op2val:0xb645; 
   valaddr_reg:x2; val_offset:2934*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2934*FLEN/8, x6, x4, x5)

inst_1498:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2c5 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x245 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36c5; op2val:0xb645; 
   valaddr_reg:x2; val_offset:2936*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2936*FLEN/8, x6, x4, x5)

inst_1499:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2c5 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x245 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36c5; op2val:0xb645; 
   valaddr_reg:x2; val_offset:2938*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2938*FLEN/8, x6, x4, x5)

inst_1500:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x370 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x270 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3370; op2val:0xb270; 
   valaddr_reg:x2; val_offset:2940*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2940*FLEN/8, x6, x4, x5)

inst_1501:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x370 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x270 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3370; op2val:0xb270; 
   valaddr_reg:x2; val_offset:2942*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2942*FLEN/8, x6, x4, x5)

inst_1502:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x370 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x270 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3370; op2val:0xb270; 
   valaddr_reg:x2; val_offset:2944*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2944*FLEN/8, x6, x4, x5)

inst_1503:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x370 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x270 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3370; op2val:0xb270; 
   valaddr_reg:x2; val_offset:2946*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2946*FLEN/8, x6, x4, x5)

inst_1504:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x370 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x270 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3370; op2val:0xb270; 
   valaddr_reg:x2; val_offset:2948*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2948*FLEN/8, x6, x4, x5)

inst_1505:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x15d and fs2 == 1 and fe2 == 0x0e and fm2 == 0x11d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x395d; op2val:0xb91d; 
   valaddr_reg:x2; val_offset:2950*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2950*FLEN/8, x6, x4, x5)

inst_1506:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x15d and fs2 == 1 and fe2 == 0x0e and fm2 == 0x11d and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x395d; op2val:0xb91d; 
   valaddr_reg:x2; val_offset:2952*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2952*FLEN/8, x6, x4, x5)

inst_1507:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x15d and fs2 == 1 and fe2 == 0x0e and fm2 == 0x11d and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x395d; op2val:0xb91d; 
   valaddr_reg:x2; val_offset:2954*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2954*FLEN/8, x6, x4, x5)

inst_1508:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x15d and fs2 == 1 and fe2 == 0x0e and fm2 == 0x11d and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x395d; op2val:0xb91d; 
   valaddr_reg:x2; val_offset:2956*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2956*FLEN/8, x6, x4, x5)

inst_1509:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x15d and fs2 == 1 and fe2 == 0x0e and fm2 == 0x11d and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x395d; op2val:0xb91d; 
   valaddr_reg:x2; val_offset:2958*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2958*FLEN/8, x6, x4, x5)

inst_1510:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x211 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1d1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a11; op2val:0xb9d1; 
   valaddr_reg:x2; val_offset:2960*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2960*FLEN/8, x6, x4, x5)

inst_1511:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x211 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1d1 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a11; op2val:0xb9d1; 
   valaddr_reg:x2; val_offset:2962*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2962*FLEN/8, x6, x4, x5)

inst_1512:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x211 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1d1 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a11; op2val:0xb9d1; 
   valaddr_reg:x2; val_offset:2964*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2964*FLEN/8, x6, x4, x5)

inst_1513:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x211 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1d1 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a11; op2val:0xb9d1; 
   valaddr_reg:x2; val_offset:2966*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2966*FLEN/8, x6, x4, x5)

inst_1514:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x211 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1d1 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a11; op2val:0xb9d1; 
   valaddr_reg:x2; val_offset:2968*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2968*FLEN/8, x6, x4, x5)

inst_1515:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2bb and fs2 == 1 and fe2 == 0x0e and fm2 == 0x27b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3abb; op2val:0xba7b; 
   valaddr_reg:x2; val_offset:2970*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2970*FLEN/8, x6, x4, x5)

inst_1516:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2bb and fs2 == 1 and fe2 == 0x0e and fm2 == 0x27b and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3abb; op2val:0xba7b; 
   valaddr_reg:x2; val_offset:2972*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2972*FLEN/8, x6, x4, x5)

inst_1517:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2bb and fs2 == 1 and fe2 == 0x0e and fm2 == 0x27b and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3abb; op2val:0xba7b; 
   valaddr_reg:x2; val_offset:2974*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2974*FLEN/8, x6, x4, x5)

inst_1518:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2bb and fs2 == 1 and fe2 == 0x0e and fm2 == 0x27b and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3abb; op2val:0xba7b; 
   valaddr_reg:x2; val_offset:2976*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2976*FLEN/8, x6, x4, x5)

inst_1519:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2bb and fs2 == 1 and fe2 == 0x0e and fm2 == 0x27b and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3abb; op2val:0xba7b; 
   valaddr_reg:x2; val_offset:2978*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2978*FLEN/8, x6, x4, x5)

inst_1520:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1c1 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x181 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39c1; op2val:0xb981; 
   valaddr_reg:x2; val_offset:2980*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2980*FLEN/8, x6, x4, x5)

inst_1521:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1c1 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x181 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39c1; op2val:0xb981; 
   valaddr_reg:x2; val_offset:2982*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2982*FLEN/8, x6, x4, x5)

inst_1522:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1c1 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x181 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39c1; op2val:0xb981; 
   valaddr_reg:x2; val_offset:2984*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2984*FLEN/8, x6, x4, x5)

inst_1523:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1c1 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x181 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39c1; op2val:0xb981; 
   valaddr_reg:x2; val_offset:2986*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2986*FLEN/8, x6, x4, x5)

inst_1524:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1c1 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x181 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39c1; op2val:0xb981; 
   valaddr_reg:x2; val_offset:2988*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2988*FLEN/8, x6, x4, x5)

inst_1525:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x31a and fs2 == 1 and fe2 == 0x0d and fm2 == 0x29a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x371a; op2val:0xb69a; 
   valaddr_reg:x2; val_offset:2990*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 2990*FLEN/8, x6, x4, x5)

inst_1526:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x31a and fs2 == 1 and fe2 == 0x0d and fm2 == 0x29a and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x371a; op2val:0xb69a; 
   valaddr_reg:x2; val_offset:2992*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 2992*FLEN/8, x6, x4, x5)

inst_1527:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x31a and fs2 == 1 and fe2 == 0x0d and fm2 == 0x29a and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x371a; op2val:0xb69a; 
   valaddr_reg:x2; val_offset:2994*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 2994*FLEN/8, x6, x4, x5)

inst_1528:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x31a and fs2 == 1 and fe2 == 0x0d and fm2 == 0x29a and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x371a; op2val:0xb69a; 
   valaddr_reg:x2; val_offset:2996*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 2996*FLEN/8, x6, x4, x5)

inst_1529:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x31a and fs2 == 1 and fe2 == 0x0d and fm2 == 0x29a and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x371a; op2val:0xb69a; 
   valaddr_reg:x2; val_offset:2998*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 2998*FLEN/8, x6, x4, x5)

inst_1530:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3c3 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x343 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37c3; op2val:0xb743; 
   valaddr_reg:x2; val_offset:3000*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 3000*FLEN/8, x6, x4, x5)

inst_1531:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3c3 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x343 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37c3; op2val:0xb743; 
   valaddr_reg:x2; val_offset:3002*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 3002*FLEN/8, x6, x4, x5)

inst_1532:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3c3 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x343 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37c3; op2val:0xb743; 
   valaddr_reg:x2; val_offset:3004*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 3004*FLEN/8, x6, x4, x5)

inst_1533:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3c3 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x343 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37c3; op2val:0xb743; 
   valaddr_reg:x2; val_offset:3006*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 3006*FLEN/8, x6, x4, x5)

inst_1534:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3c3 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x343 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x37c3; op2val:0xb743; 
   valaddr_reg:x2; val_offset:3008*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 3008*FLEN/8, x6, x4, x5)

inst_1535:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x229 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1a9 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3629; op2val:0xb5a9; 
   valaddr_reg:x2; val_offset:3010*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 3010*FLEN/8, x6, x4, x5)

inst_1536:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x229 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1a9 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3629; op2val:0xb5a9; 
   valaddr_reg:x2; val_offset:3012*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 3012*FLEN/8, x6, x4, x5)

inst_1537:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x229 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1a9 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3629; op2val:0xb5a9; 
   valaddr_reg:x2; val_offset:3014*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 3014*FLEN/8, x6, x4, x5)

inst_1538:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x229 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1a9 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3629; op2val:0xb5a9; 
   valaddr_reg:x2; val_offset:3016*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 3016*FLEN/8, x6, x4, x5)

inst_1539:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x229 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1a9 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3629; op2val:0xb5a9; 
   valaddr_reg:x2; val_offset:3018*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 3018*FLEN/8, x6, x4, x5)

inst_1540:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3dd and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2dd and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x33dd; op2val:0xb2dd; 
   valaddr_reg:x2; val_offset:3020*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 3020*FLEN/8, x6, x4, x5)

inst_1541:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3dd and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2dd and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x33dd; op2val:0xb2dd; 
   valaddr_reg:x2; val_offset:3022*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 3022*FLEN/8, x6, x4, x5)

inst_1542:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3dd and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2dd and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x33dd; op2val:0xb2dd; 
   valaddr_reg:x2; val_offset:3024*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 3024*FLEN/8, x6, x4, x5)

inst_1543:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3dd and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2dd and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x33dd; op2val:0xb2dd; 
   valaddr_reg:x2; val_offset:3026*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 3026*FLEN/8, x6, x4, x5)

inst_1544:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3dd and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2dd and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x33dd; op2val:0xb2dd; 
   valaddr_reg:x2; val_offset:3028*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 3028*FLEN/8, x6, x4, x5)

inst_1545:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1bc and fs2 == 1 and fe2 == 0x0e and fm2 == 0x17c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39bc; op2val:0xb97c; 
   valaddr_reg:x2; val_offset:3030*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 3030*FLEN/8, x6, x4, x5)

inst_1546:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1bc and fs2 == 1 and fe2 == 0x0e and fm2 == 0x17c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39bc; op2val:0xb97c; 
   valaddr_reg:x2; val_offset:3032*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 3032*FLEN/8, x6, x4, x5)

inst_1547:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1bc and fs2 == 1 and fe2 == 0x0e and fm2 == 0x17c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39bc; op2val:0xb97c; 
   valaddr_reg:x2; val_offset:3034*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 3034*FLEN/8, x6, x4, x5)

inst_1548:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1bc and fs2 == 1 and fe2 == 0x0e and fm2 == 0x17c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39bc; op2val:0xb97c; 
   valaddr_reg:x2; val_offset:3036*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 3036*FLEN/8, x6, x4, x5)

inst_1549:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1bc and fs2 == 1 and fe2 == 0x0e and fm2 == 0x17c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x39bc; op2val:0xb97c; 
   valaddr_reg:x2; val_offset:3038*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 3038*FLEN/8, x6, x4, x5)

inst_1550:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x240 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1c0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3640; op2val:0xb5c0; 
   valaddr_reg:x2; val_offset:3040*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 3040*FLEN/8, x6, x4, x5)

inst_1551:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x240 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1c0 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3640; op2val:0xb5c0; 
   valaddr_reg:x2; val_offset:3042*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 3042*FLEN/8, x6, x4, x5)

inst_1552:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x240 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1c0 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3640; op2val:0xb5c0; 
   valaddr_reg:x2; val_offset:3044*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 3044*FLEN/8, x6, x4, x5)

inst_1553:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x240 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1c0 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3640; op2val:0xb5c0; 
   valaddr_reg:x2; val_offset:3046*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 3046*FLEN/8, x6, x4, x5)

inst_1554:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x240 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1c0 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3640; op2val:0xb5c0; 
   valaddr_reg:x2; val_offset:3048*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 3048*FLEN/8, x6, x4, x5)

inst_1555:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x132 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0b2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3532; op2val:0xb4b2; 
   valaddr_reg:x2; val_offset:3050*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 3050*FLEN/8, x6, x4, x5)

inst_1556:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x132 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0b2 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3532; op2val:0xb4b2; 
   valaddr_reg:x2; val_offset:3052*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 3052*FLEN/8, x6, x4, x5)

inst_1557:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x132 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0b2 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3532; op2val:0xb4b2; 
   valaddr_reg:x2; val_offset:3054*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 3054*FLEN/8, x6, x4, x5)

inst_1558:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x132 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0b2 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3532; op2val:0xb4b2; 
   valaddr_reg:x2; val_offset:3056*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 3056*FLEN/8, x6, x4, x5)

inst_1559:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x132 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0b2 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3532; op2val:0xb4b2; 
   valaddr_reg:x2; val_offset:3058*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 3058*FLEN/8, x6, x4, x5)

inst_1560:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2d6 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x256 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36d6; op2val:0xb656; 
   valaddr_reg:x2; val_offset:3060*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 3060*FLEN/8, x6, x4, x5)

inst_1561:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2d6 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x256 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36d6; op2val:0xb656; 
   valaddr_reg:x2; val_offset:3062*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 3062*FLEN/8, x6, x4, x5)
RVTEST_SIGBASE(x4,signature_x4_12)

inst_1562:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2d6 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x256 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36d6; op2val:0xb656; 
   valaddr_reg:x2; val_offset:3064*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 3064*FLEN/8, x6, x4, x5)

inst_1563:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2d6 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x256 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36d6; op2val:0xb656; 
   valaddr_reg:x2; val_offset:3066*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 3066*FLEN/8, x6, x4, x5)

inst_1564:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2d6 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x256 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x36d6; op2val:0xb656; 
   valaddr_reg:x2; val_offset:3068*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 3068*FLEN/8, x6, x4, x5)

inst_1565:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1a4 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x124 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35a4; op2val:0xb524; 
   valaddr_reg:x2; val_offset:3070*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 3070*FLEN/8, x6, x4, x5)

inst_1566:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1a4 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x124 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35a4; op2val:0xb524; 
   valaddr_reg:x2; val_offset:3072*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 3072*FLEN/8, x6, x4, x5)

inst_1567:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1a4 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x124 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35a4; op2val:0xb524; 
   valaddr_reg:x2; val_offset:3074*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 3074*FLEN/8, x6, x4, x5)

inst_1568:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1a4 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x124 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35a4; op2val:0xb524; 
   valaddr_reg:x2; val_offset:3076*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 3076*FLEN/8, x6, x4, x5)

inst_1569:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1a4 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x124 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35a4; op2val:0xb524; 
   valaddr_reg:x2; val_offset:3078*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 3078*FLEN/8, x6, x4, x5)

inst_1570:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x056 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x016 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3856; op2val:0xb816; 
   valaddr_reg:x2; val_offset:3080*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 3080*FLEN/8, x6, x4, x5)

inst_1571:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x056 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x016 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3856; op2val:0xb816; 
   valaddr_reg:x2; val_offset:3082*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 3082*FLEN/8, x6, x4, x5)

inst_1572:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x056 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x016 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3856; op2val:0xb816; 
   valaddr_reg:x2; val_offset:3084*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 3084*FLEN/8, x6, x4, x5)

inst_1573:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x056 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x016 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3856; op2val:0xb816; 
   valaddr_reg:x2; val_offset:3086*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 3086*FLEN/8, x6, x4, x5)

inst_1574:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x056 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x016 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3856; op2val:0xb816; 
   valaddr_reg:x2; val_offset:3088*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 3088*FLEN/8, x6, x4, x5)

inst_1575:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x04e and fs2 == 1 and fe2 == 0x0e and fm2 == 0x00e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x384e; op2val:0xb80e; 
   valaddr_reg:x2; val_offset:3090*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 3090*FLEN/8, x6, x4, x5)

inst_1576:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x04e and fs2 == 1 and fe2 == 0x0e and fm2 == 0x00e and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x384e; op2val:0xb80e; 
   valaddr_reg:x2; val_offset:3092*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 3092*FLEN/8, x6, x4, x5)

inst_1577:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x04e and fs2 == 1 and fe2 == 0x0e and fm2 == 0x00e and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x384e; op2val:0xb80e; 
   valaddr_reg:x2; val_offset:3094*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 3094*FLEN/8, x6, x4, x5)

inst_1578:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x04e and fs2 == 1 and fe2 == 0x0e and fm2 == 0x00e and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x384e; op2val:0xb80e; 
   valaddr_reg:x2; val_offset:3096*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 3096*FLEN/8, x6, x4, x5)

inst_1579:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x04e and fs2 == 1 and fe2 == 0x0e and fm2 == 0x00e and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x384e; op2val:0xb80e; 
   valaddr_reg:x2; val_offset:3098*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 3098*FLEN/8, x6, x4, x5)

inst_1580:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x188 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x148 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3988; op2val:0xb948; 
   valaddr_reg:x2; val_offset:3100*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 3100*FLEN/8, x6, x4, x5)

inst_1581:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x188 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x148 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3988; op2val:0xb948; 
   valaddr_reg:x2; val_offset:3102*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 3102*FLEN/8, x6, x4, x5)

inst_1582:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x188 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x148 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3988; op2val:0xb948; 
   valaddr_reg:x2; val_offset:3104*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 3104*FLEN/8, x6, x4, x5)

inst_1583:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x188 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x148 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3988; op2val:0xb948; 
   valaddr_reg:x2; val_offset:3106*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 3106*FLEN/8, x6, x4, x5)

inst_1584:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x188 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x148 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3988; op2val:0xb948; 
   valaddr_reg:x2; val_offset:3108*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 3108*FLEN/8, x6, x4, x5)

inst_1585:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x388 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x348 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b88; op2val:0xbb48; 
   valaddr_reg:x2; val_offset:3110*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 3110*FLEN/8, x6, x4, x5)

inst_1586:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x388 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x348 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b88; op2val:0xbb48; 
   valaddr_reg:x2; val_offset:3112*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 3112*FLEN/8, x6, x4, x5)

inst_1587:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x388 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x348 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b88; op2val:0xbb48; 
   valaddr_reg:x2; val_offset:3114*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 3114*FLEN/8, x6, x4, x5)

inst_1588:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x388 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x348 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b88; op2val:0xbb48; 
   valaddr_reg:x2; val_offset:3116*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 3116*FLEN/8, x6, x4, x5)

inst_1589:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x388 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x348 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b88; op2val:0xbb48; 
   valaddr_reg:x2; val_offset:3118*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 3118*FLEN/8, x6, x4, x5)

inst_1590:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x073 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x3e6 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3473; op2val:0xb3e6; 
   valaddr_reg:x2; val_offset:3120*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 3120*FLEN/8, x6, x4, x5)

inst_1591:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x073 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x3e6 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3473; op2val:0xb3e6; 
   valaddr_reg:x2; val_offset:3122*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 3122*FLEN/8, x6, x4, x5)

inst_1592:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x073 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x3e6 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3473; op2val:0xb3e6; 
   valaddr_reg:x2; val_offset:3124*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 3124*FLEN/8, x6, x4, x5)

inst_1593:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x073 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x3e6 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3473; op2val:0xb3e6; 
   valaddr_reg:x2; val_offset:3126*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 3126*FLEN/8, x6, x4, x5)

inst_1594:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x073 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x3e6 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3473; op2val:0xb3e6; 
   valaddr_reg:x2; val_offset:3128*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 3128*FLEN/8, x6, x4, x5)

inst_1595:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x25f and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1df and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x365f; op2val:0xb5df; 
   valaddr_reg:x2; val_offset:3130*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 3130*FLEN/8, x6, x4, x5)

inst_1596:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x25f and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1df and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x365f; op2val:0xb5df; 
   valaddr_reg:x2; val_offset:3132*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 3132*FLEN/8, x6, x4, x5)

inst_1597:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x25f and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1df and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x365f; op2val:0xb5df; 
   valaddr_reg:x2; val_offset:3134*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 3134*FLEN/8, x6, x4, x5)

inst_1598:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x25f and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1df and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x365f; op2val:0xb5df; 
   valaddr_reg:x2; val_offset:3136*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 3136*FLEN/8, x6, x4, x5)

inst_1599:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x25f and fs2 == 1 and fe2 == 0x0d and fm2 == 0x1df and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x365f; op2val:0xb5df; 
   valaddr_reg:x2; val_offset:3138*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 3138*FLEN/8, x6, x4, x5)

inst_1600:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x058 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x018 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3858; op2val:0xb818; 
   valaddr_reg:x2; val_offset:3140*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 3140*FLEN/8, x6, x4, x5)

inst_1601:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x058 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x018 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3858; op2val:0xb818; 
   valaddr_reg:x2; val_offset:3142*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 3142*FLEN/8, x6, x4, x5)

inst_1602:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x058 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x018 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3858; op2val:0xb818; 
   valaddr_reg:x2; val_offset:3144*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 3144*FLEN/8, x6, x4, x5)

inst_1603:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x058 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x018 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3858; op2val:0xb818; 
   valaddr_reg:x2; val_offset:3146*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 3146*FLEN/8, x6, x4, x5)

inst_1604:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x058 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x018 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3858; op2val:0xb818; 
   valaddr_reg:x2; val_offset:3148*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 3148*FLEN/8, x6, x4, x5)

inst_1605:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3eb and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3ab and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3beb; op2val:0xbbab; 
   valaddr_reg:x2; val_offset:3150*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 3150*FLEN/8, x6, x4, x5)

inst_1606:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3eb and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3ab and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3beb; op2val:0xbbab; 
   valaddr_reg:x2; val_offset:3152*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 3152*FLEN/8, x6, x4, x5)

inst_1607:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3eb and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3ab and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3beb; op2val:0xbbab; 
   valaddr_reg:x2; val_offset:3154*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 3154*FLEN/8, x6, x4, x5)

inst_1608:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3eb and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3ab and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3beb; op2val:0xbbab; 
   valaddr_reg:x2; val_offset:3156*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 3156*FLEN/8, x6, x4, x5)

inst_1609:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3eb and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3ab and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3beb; op2val:0xbbab; 
   valaddr_reg:x2; val_offset:3158*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 3158*FLEN/8, x6, x4, x5)

inst_1610:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x37c and fs2 == 1 and fe2 == 0x0e and fm2 == 0x33c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b7c; op2val:0xbb3c; 
   valaddr_reg:x2; val_offset:3160*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 3160*FLEN/8, x6, x4, x5)

inst_1611:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x37c and fs2 == 1 and fe2 == 0x0e and fm2 == 0x33c and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b7c; op2val:0xbb3c; 
   valaddr_reg:x2; val_offset:3162*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 3162*FLEN/8, x6, x4, x5)

inst_1612:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x37c and fs2 == 1 and fe2 == 0x0e and fm2 == 0x33c and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b7c; op2val:0xbb3c; 
   valaddr_reg:x2; val_offset:3164*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 3164*FLEN/8, x6, x4, x5)

inst_1613:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x37c and fs2 == 1 and fe2 == 0x0e and fm2 == 0x33c and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b7c; op2val:0xbb3c; 
   valaddr_reg:x2; val_offset:3166*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 3166*FLEN/8, x6, x4, x5)

inst_1614:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x37c and fs2 == 1 and fe2 == 0x0e and fm2 == 0x33c and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3b7c; op2val:0xbb3c; 
   valaddr_reg:x2; val_offset:3168*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 3168*FLEN/8, x6, x4, x5)

inst_1615:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x15c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0dc and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x355c; op2val:0xb4dc; 
   valaddr_reg:x2; val_offset:3170*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 3170*FLEN/8, x6, x4, x5)

inst_1616:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x15c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0dc and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x355c; op2val:0xb4dc; 
   valaddr_reg:x2; val_offset:3172*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 3172*FLEN/8, x6, x4, x5)

inst_1617:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x15c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0dc and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x355c; op2val:0xb4dc; 
   valaddr_reg:x2; val_offset:3174*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 3174*FLEN/8, x6, x4, x5)

inst_1618:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x15c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0dc and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x355c; op2val:0xb4dc; 
   valaddr_reg:x2; val_offset:3176*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 3176*FLEN/8, x6, x4, x5)

inst_1619:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x15c and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0dc and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x355c; op2val:0xb4dc; 
   valaddr_reg:x2; val_offset:3178*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 3178*FLEN/8, x6, x4, x5)

inst_1620:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1a1 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x121 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35a1; op2val:0xb521; 
   valaddr_reg:x2; val_offset:3180*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 3180*FLEN/8, x6, x4, x5)

inst_1621:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1a1 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x121 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35a1; op2val:0xb521; 
   valaddr_reg:x2; val_offset:3182*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 3182*FLEN/8, x6, x4, x5)

inst_1622:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1a1 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x121 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35a1; op2val:0xb521; 
   valaddr_reg:x2; val_offset:3184*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 3184*FLEN/8, x6, x4, x5)

inst_1623:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1a1 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x121 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35a1; op2val:0xb521; 
   valaddr_reg:x2; val_offset:3186*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 3186*FLEN/8, x6, x4, x5)

inst_1624:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1a1 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x121 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x35a1; op2val:0xb521; 
   valaddr_reg:x2; val_offset:3188*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 3188*FLEN/8, x6, x4, x5)

inst_1625:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3ae and fs2 == 1 and fe2 == 0x0e and fm2 == 0x36e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bae; op2val:0xbb6e; 
   valaddr_reg:x2; val_offset:3190*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 3190*FLEN/8, x6, x4, x5)

inst_1626:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3ae and fs2 == 1 and fe2 == 0x0e and fm2 == 0x36e and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bae; op2val:0xbb6e; 
   valaddr_reg:x2; val_offset:3192*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 3192*FLEN/8, x6, x4, x5)

inst_1627:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3ae and fs2 == 1 and fe2 == 0x0e and fm2 == 0x36e and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bae; op2val:0xbb6e; 
   valaddr_reg:x2; val_offset:3194*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 3194*FLEN/8, x6, x4, x5)

inst_1628:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3ae and fs2 == 1 and fe2 == 0x0e and fm2 == 0x36e and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bae; op2val:0xbb6e; 
   valaddr_reg:x2; val_offset:3196*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 3196*FLEN/8, x6, x4, x5)

inst_1629:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3ae and fs2 == 1 and fe2 == 0x0e and fm2 == 0x36e and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3bae; op2val:0xbb6e; 
   valaddr_reg:x2; val_offset:3198*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 3198*FLEN/8, x6, x4, x5)

inst_1630:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x00a and fs2 == 1 and fe2 == 0x03 and fm2 == 0x0ff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x280a; op2val:0x8cff; 
   valaddr_reg:x2; val_offset:3200*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 3200*FLEN/8, x6, x4, x5)

inst_1631:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x00a and fs2 == 1 and fe2 == 0x03 and fm2 == 0x0ff and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x280a; op2val:0x8cff; 
   valaddr_reg:x2; val_offset:3202*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 3202*FLEN/8, x6, x4, x5)

inst_1632:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x00a and fs2 == 1 and fe2 == 0x03 and fm2 == 0x0ff and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x280a; op2val:0x8cff; 
   valaddr_reg:x2; val_offset:3204*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 3204*FLEN/8, x6, x4, x5)

inst_1633:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x00a and fs2 == 1 and fe2 == 0x03 and fm2 == 0x0ff and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x280a; op2val:0x8cff; 
   valaddr_reg:x2; val_offset:3206*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 3206*FLEN/8, x6, x4, x5)

inst_1634:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x00a and fs2 == 1 and fe2 == 0x03 and fm2 == 0x0ff and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x280a; op2val:0x8cff; 
   valaddr_reg:x2; val_offset:3208*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 3208*FLEN/8, x6, x4, x5)

inst_1635:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x127 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0a7 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3527; op2val:0xb4a7; 
   valaddr_reg:x2; val_offset:3210*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 3210*FLEN/8, x6, x4, x5)

inst_1636:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x127 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0a7 and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3527; op2val:0xb4a7; 
   valaddr_reg:x2; val_offset:3212*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 3212*FLEN/8, x6, x4, x5)

inst_1637:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x127 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0a7 and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3527; op2val:0xb4a7; 
   valaddr_reg:x2; val_offset:3214*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 3214*FLEN/8, x6, x4, x5)

inst_1638:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x127 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0a7 and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3527; op2val:0xb4a7; 
   valaddr_reg:x2; val_offset:3216*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 3216*FLEN/8, x6, x4, x5)

inst_1639:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x127 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0a7 and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3527; op2val:0xb4a7; 
   valaddr_reg:x2; val_offset:3218*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 3218*FLEN/8, x6, x4, x5)

inst_1640:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x23e and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1fe and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a3e; op2val:0xb9fe; 
   valaddr_reg:x2; val_offset:3220*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 3220*FLEN/8, x6, x4, x5)

inst_1641:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x23e and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1fe and  fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a3e; op2val:0xb9fe; 
   valaddr_reg:x2; val_offset:3222*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 32, 0, x2, 3222*FLEN/8, x6, x4, x5)

inst_1642:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x23e and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1fe and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a3e; op2val:0xb9fe; 
   valaddr_reg:x2; val_offset:3224*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 3224*FLEN/8, x6, x4, x5)

inst_1643:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x23e and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1fe and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a3e; op2val:0xb9fe; 
   valaddr_reg:x2; val_offset:3226*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 3226*FLEN/8, x6, x4, x5)

inst_1644:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x23e and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1fe and  fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x3a3e; op2val:0xb9fe; 
   valaddr_reg:x2; val_offset:3228*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 128, 0, x2, 3228*FLEN/8, x6, x4, x5)

inst_1645:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x0fa and fs2 == 1 and fe2 == 0x0c and fm2 == 0x0fa and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x30fa; op2val:0xb0fa; 
   valaddr_reg:x2; val_offset:3230*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 3230*FLEN/8, x6, x4, x5)

inst_1646:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x0fa and fs2 == 1 and fe2 == 0x0c and fm2 == 0x0fa and  fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x30fa; op2val:0xb0fa; 
   valaddr_reg:x2; val_offset:3232*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 64, 0, x2, 3232*FLEN/8, x6, x4, x5)

inst_1647:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x0fa and fs2 == 1 and fe2 == 0x0c and fm2 == 0x0fa and  fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x30fa; op2val:0xb0fa; 
   valaddr_reg:x2; val_offset:3234*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 96, 0, x2, 3234*FLEN/8, x6, x4, x5)

inst_1648:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x2eb and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2eb and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x0000 and rs2_sgn_prefix == 0xffff  
/* opcode: fadd.h ; op1:x30; op2:x29; dest:x31; op1val:0x32eb; op2val:0xb2eb; 
   valaddr_reg:x2; val_offset:3236*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x5 
*/
TEST_FPRR_OP(fadd.h, x31, x30, x29, dyn, 0, 0, x2, 3236*FLEN/8, x6, x4, x5)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(12538,32,FLEN)
NAN_BOXED(12538,16,FLEN)
NAN_BOXED(12538,32,FLEN)
NAN_BOXED(45306,16,FLEN)
NAN_BOXED(12538,32,FLEN)
NAN_BOXED(12538,16,FLEN)
NAN_BOXED(12538,32,FLEN)
NAN_BOXED(0,16,FLEN)
NAN_BOXED(12538,32,FLEN)
NAN_BOXED(45306,16,FLEN)
NAN_BOXED(14498,32,FLEN)
NAN_BOXED(47266,16,FLEN)
NAN_BOXED(14498,32,FLEN)
NAN_BOXED(47266,16,FLEN)
NAN_BOXED(14498,32,FLEN)
NAN_BOXED(47266,16,FLEN)
NAN_BOXED(14498,32,FLEN)
NAN_BOXED(47266,16,FLEN)
NAN_BOXED(14498,32,FLEN)
NAN_BOXED(47266,16,FLEN)
NAN_BOXED(14289,32,FLEN)
NAN_BOXED(47057,16,FLEN)
NAN_BOXED(14289,32,FLEN)
NAN_BOXED(47057,16,FLEN)
test_dataset_1:
NAN_BOXED(14289,32,FLEN)
NAN_BOXED(47057,16,FLEN)
NAN_BOXED(14289,32,FLEN)
NAN_BOXED(47057,16,FLEN)
NAN_BOXED(14289,32,FLEN)
NAN_BOXED(47057,16,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(45803,16,FLEN)
NAN_BOXED(13035,32,FLEN)
NAN_BOXED(45803,16,FLEN)
NAN_BOXED(13035,32,FLEN)
NAN_BOXED(45803,16,FLEN)
NAN_BOXED(13035,32,FLEN)
NAN_BOXED(45803,16,FLEN)
NAN_BOXED(13035,32,FLEN)
NAN_BOXED(45803,16,FLEN)
test_dataset_2:
NAN_BOXED(14383,32,FLEN)
NAN_BOXED(47151,16,FLEN)
NAN_BOXED(14383,32,FLEN)
NAN_BOXED(47151,16,FLEN)
NAN_BOXED(14383,32,FLEN)
NAN_BOXED(47151,16,FLEN)
NAN_BOXED(14383,32,FLEN)
NAN_BOXED(47151,16,FLEN)
NAN_BOXED(14383,32,FLEN)
NAN_BOXED(47151,16,FLEN)
NAN_BOXED(11745,32,FLEN)
NAN_BOXED(44513,16,FLEN)
NAN_BOXED(11745,32,FLEN)
NAN_BOXED(44513,16,FLEN)
NAN_BOXED(11745,32,FLEN)
NAN_BOXED(44513,16,FLEN)
NAN_BOXED(11745,32,FLEN)
NAN_BOXED(44513,16,FLEN)
NAN_BOXED(11745,32,FLEN)
NAN_BOXED(44513,16,FLEN)
test_dataset_3:
NAN_BOXED(14782,16,FLEN)
NAN_BOXED(47550,16,FLEN)
NAN_BOXED(14782,16,FLEN)
NAN_BOXED(47550,16,FLEN)
NAN_BOXED(14782,16,FLEN)
NAN_BOXED(47550,16,FLEN)
NAN_BOXED(14782,16,FLEN)
NAN_BOXED(47550,16,FLEN)
NAN_BOXED(14782,16,FLEN)
NAN_BOXED(47550,16,FLEN)
NAN_BOXED(13851,16,FLEN)
NAN_BOXED(46619,16,FLEN)
NAN_BOXED(13851,16,FLEN)
NAN_BOXED(46619,16,FLEN)
NAN_BOXED(13851,16,FLEN)
NAN_BOXED(46619,16,FLEN)
NAN_BOXED(13851,16,FLEN)
NAN_BOXED(46619,16,FLEN)
NAN_BOXED(13851,16,FLEN)
NAN_BOXED(46619,16,FLEN)
NAN_BOXED(11718,16,FLEN)
NAN_BOXED(44486,16,FLEN)
NAN_BOXED(11718,16,FLEN)
NAN_BOXED(44486,16,FLEN)
NAN_BOXED(11718,16,FLEN)
NAN_BOXED(44486,16,FLEN)
NAN_BOXED(11718,16,FLEN)
NAN_BOXED(44486,16,FLEN)
NAN_BOXED(11718,16,FLEN)
NAN_BOXED(44486,16,FLEN)
NAN_BOXED(12818,16,FLEN)
NAN_BOXED(45586,16,FLEN)
NAN_BOXED(12818,16,FLEN)
NAN_BOXED(45586,16,FLEN)
NAN_BOXED(12818,16,FLEN)
NAN_BOXED(45586,16,FLEN)
NAN_BOXED(12818,16,FLEN)
NAN_BOXED(45586,16,FLEN)
NAN_BOXED(12818,16,FLEN)
NAN_BOXED(45586,16,FLEN)
NAN_BOXED(14724,16,FLEN)
NAN_BOXED(47492,16,FLEN)
NAN_BOXED(14724,16,FLEN)
NAN_BOXED(47492,16,FLEN)
NAN_BOXED(14724,16,FLEN)
NAN_BOXED(47492,16,FLEN)
NAN_BOXED(14724,16,FLEN)
NAN_BOXED(47492,16,FLEN)
NAN_BOXED(14724,16,FLEN)
NAN_BOXED(47492,16,FLEN)
NAN_BOXED(11897,16,FLEN)
NAN_BOXED(44665,16,FLEN)
NAN_BOXED(11897,16,FLEN)
NAN_BOXED(44665,16,FLEN)
NAN_BOXED(11897,16,FLEN)
NAN_BOXED(44665,16,FLEN)
NAN_BOXED(11897,16,FLEN)
NAN_BOXED(44665,16,FLEN)
NAN_BOXED(11897,16,FLEN)
NAN_BOXED(44665,16,FLEN)
NAN_BOXED(14393,16,FLEN)
NAN_BOXED(47161,16,FLEN)
NAN_BOXED(14393,16,FLEN)
NAN_BOXED(47161,16,FLEN)
NAN_BOXED(14393,16,FLEN)
NAN_BOXED(47161,16,FLEN)
NAN_BOXED(14393,16,FLEN)
NAN_BOXED(47161,16,FLEN)
NAN_BOXED(14393,16,FLEN)
NAN_BOXED(47161,16,FLEN)
NAN_BOXED(14470,16,FLEN)
NAN_BOXED(47238,16,FLEN)
NAN_BOXED(14470,16,FLEN)
NAN_BOXED(47238,16,FLEN)
NAN_BOXED(14470,16,FLEN)
NAN_BOXED(47238,16,FLEN)
NAN_BOXED(14470,16,FLEN)
NAN_BOXED(47238,16,FLEN)
NAN_BOXED(14470,16,FLEN)
NAN_BOXED(47238,16,FLEN)
NAN_BOXED(11665,16,FLEN)
NAN_BOXED(44433,16,FLEN)
NAN_BOXED(11665,16,FLEN)
NAN_BOXED(44433,16,FLEN)
NAN_BOXED(11665,16,FLEN)
NAN_BOXED(44433,16,FLEN)
NAN_BOXED(11665,16,FLEN)
NAN_BOXED(44433,16,FLEN)
NAN_BOXED(11665,16,FLEN)
NAN_BOXED(44433,16,FLEN)
NAN_BOXED(14826,16,FLEN)
NAN_BOXED(47594,16,FLEN)
NAN_BOXED(14826,16,FLEN)
NAN_BOXED(47594,16,FLEN)
NAN_BOXED(14826,16,FLEN)
NAN_BOXED(47594,16,FLEN)
NAN_BOXED(14826,16,FLEN)
NAN_BOXED(47594,16,FLEN)
NAN_BOXED(14826,16,FLEN)
NAN_BOXED(47594,16,FLEN)
NAN_BOXED(14136,16,FLEN)
NAN_BOXED(46904,16,FLEN)
NAN_BOXED(14136,16,FLEN)
NAN_BOXED(46904,16,FLEN)
NAN_BOXED(14136,16,FLEN)
NAN_BOXED(46904,16,FLEN)
NAN_BOXED(14136,16,FLEN)
NAN_BOXED(46904,16,FLEN)
NAN_BOXED(14136,16,FLEN)
NAN_BOXED(46904,16,FLEN)
NAN_BOXED(13436,16,FLEN)
NAN_BOXED(46204,16,FLEN)
NAN_BOXED(13436,16,FLEN)
NAN_BOXED(46204,16,FLEN)
NAN_BOXED(13436,16,FLEN)
NAN_BOXED(46204,16,FLEN)
NAN_BOXED(13436,16,FLEN)
NAN_BOXED(46204,16,FLEN)
NAN_BOXED(13436,16,FLEN)
NAN_BOXED(46204,16,FLEN)
NAN_BOXED(12698,16,FLEN)
NAN_BOXED(45466,16,FLEN)
NAN_BOXED(12698,16,FLEN)
NAN_BOXED(45466,16,FLEN)
NAN_BOXED(12698,16,FLEN)
NAN_BOXED(45466,16,FLEN)
NAN_BOXED(12698,16,FLEN)
NAN_BOXED(45466,16,FLEN)
NAN_BOXED(12698,16,FLEN)
NAN_BOXED(45466,16,FLEN)
NAN_BOXED(15357,16,FLEN)
NAN_BOXED(48125,16,FLEN)
NAN_BOXED(15357,16,FLEN)
NAN_BOXED(48125,16,FLEN)
NAN_BOXED(15357,16,FLEN)
NAN_BOXED(48125,16,FLEN)
NAN_BOXED(15357,16,FLEN)
NAN_BOXED(48125,16,FLEN)
NAN_BOXED(15357,16,FLEN)
NAN_BOXED(48125,16,FLEN)
NAN_BOXED(12348,16,FLEN)
NAN_BOXED(45116,16,FLEN)
NAN_BOXED(12348,16,FLEN)
NAN_BOXED(45116,16,FLEN)
NAN_BOXED(12348,16,FLEN)
NAN_BOXED(45116,16,FLEN)
NAN_BOXED(12348,16,FLEN)
NAN_BOXED(45116,16,FLEN)
NAN_BOXED(12348,16,FLEN)
NAN_BOXED(45116,16,FLEN)
NAN_BOXED(14693,16,FLEN)
NAN_BOXED(47461,16,FLEN)
NAN_BOXED(14693,16,FLEN)
NAN_BOXED(47461,16,FLEN)
NAN_BOXED(14693,16,FLEN)
NAN_BOXED(47461,16,FLEN)
NAN_BOXED(14693,16,FLEN)
NAN_BOXED(47461,16,FLEN)
NAN_BOXED(14693,16,FLEN)
NAN_BOXED(47461,16,FLEN)
NAN_BOXED(14968,16,FLEN)
NAN_BOXED(47736,16,FLEN)
NAN_BOXED(14968,16,FLEN)
NAN_BOXED(47736,16,FLEN)
NAN_BOXED(14968,16,FLEN)
NAN_BOXED(47736,16,FLEN)
NAN_BOXED(14968,16,FLEN)
NAN_BOXED(47736,16,FLEN)
NAN_BOXED(14968,16,FLEN)
NAN_BOXED(47736,16,FLEN)
NAN_BOXED(14871,16,FLEN)
NAN_BOXED(47639,16,FLEN)
NAN_BOXED(14871,16,FLEN)
NAN_BOXED(47639,16,FLEN)
NAN_BOXED(14871,16,FLEN)
NAN_BOXED(47639,16,FLEN)
NAN_BOXED(14871,16,FLEN)
NAN_BOXED(47639,16,FLEN)
NAN_BOXED(14871,16,FLEN)
NAN_BOXED(47639,16,FLEN)
NAN_BOXED(12876,16,FLEN)
NAN_BOXED(45644,16,FLEN)
NAN_BOXED(12876,16,FLEN)
NAN_BOXED(45644,16,FLEN)
NAN_BOXED(12876,16,FLEN)
NAN_BOXED(45644,16,FLEN)
NAN_BOXED(12876,16,FLEN)
NAN_BOXED(45644,16,FLEN)
NAN_BOXED(12876,16,FLEN)
NAN_BOXED(45644,16,FLEN)
NAN_BOXED(15195,16,FLEN)
NAN_BOXED(47963,16,FLEN)
NAN_BOXED(15195,16,FLEN)
NAN_BOXED(47963,16,FLEN)
NAN_BOXED(15195,16,FLEN)
NAN_BOXED(47963,16,FLEN)
NAN_BOXED(15195,16,FLEN)
NAN_BOXED(47963,16,FLEN)
NAN_BOXED(15195,16,FLEN)
NAN_BOXED(47963,16,FLEN)
NAN_BOXED(14303,16,FLEN)
NAN_BOXED(47071,16,FLEN)
NAN_BOXED(14303,16,FLEN)
NAN_BOXED(47071,16,FLEN)
NAN_BOXED(14303,16,FLEN)
NAN_BOXED(47071,16,FLEN)
NAN_BOXED(14303,16,FLEN)
NAN_BOXED(47071,16,FLEN)
NAN_BOXED(14303,16,FLEN)
NAN_BOXED(47071,16,FLEN)
NAN_BOXED(15136,16,FLEN)
NAN_BOXED(47904,16,FLEN)
NAN_BOXED(15136,16,FLEN)
NAN_BOXED(47904,16,FLEN)
NAN_BOXED(15136,16,FLEN)
NAN_BOXED(47904,16,FLEN)
NAN_BOXED(15136,16,FLEN)
NAN_BOXED(47904,16,FLEN)
NAN_BOXED(15136,16,FLEN)
NAN_BOXED(47904,16,FLEN)
NAN_BOXED(13489,16,FLEN)
NAN_BOXED(46257,16,FLEN)
NAN_BOXED(13489,16,FLEN)
NAN_BOXED(46257,16,FLEN)
NAN_BOXED(13489,16,FLEN)
NAN_BOXED(46257,16,FLEN)
NAN_BOXED(13489,16,FLEN)
NAN_BOXED(46257,16,FLEN)
NAN_BOXED(13489,16,FLEN)
NAN_BOXED(46257,16,FLEN)
NAN_BOXED(12783,16,FLEN)
NAN_BOXED(45551,16,FLEN)
NAN_BOXED(12783,16,FLEN)
NAN_BOXED(45551,16,FLEN)
NAN_BOXED(12783,16,FLEN)
NAN_BOXED(45551,16,FLEN)
NAN_BOXED(12783,16,FLEN)
NAN_BOXED(45551,16,FLEN)
NAN_BOXED(12783,16,FLEN)
NAN_BOXED(45551,16,FLEN)
NAN_BOXED(10400,16,FLEN)
NAN_BOXED(43168,16,FLEN)
NAN_BOXED(10400,16,FLEN)
NAN_BOXED(43168,16,FLEN)
NAN_BOXED(10400,16,FLEN)
NAN_BOXED(43168,16,FLEN)
NAN_BOXED(10400,16,FLEN)
NAN_BOXED(43168,16,FLEN)
NAN_BOXED(10400,16,FLEN)
NAN_BOXED(43168,16,FLEN)
NAN_BOXED(13977,16,FLEN)
NAN_BOXED(46745,16,FLEN)
NAN_BOXED(13977,16,FLEN)
NAN_BOXED(46745,16,FLEN)
NAN_BOXED(13977,16,FLEN)
NAN_BOXED(46745,16,FLEN)
NAN_BOXED(13977,16,FLEN)
NAN_BOXED(46745,16,FLEN)
NAN_BOXED(13977,16,FLEN)
NAN_BOXED(46745,16,FLEN)
NAN_BOXED(13941,16,FLEN)
NAN_BOXED(46709,16,FLEN)
NAN_BOXED(13941,16,FLEN)
NAN_BOXED(46709,16,FLEN)
NAN_BOXED(13941,16,FLEN)
NAN_BOXED(46709,16,FLEN)
NAN_BOXED(13941,16,FLEN)
NAN_BOXED(46709,16,FLEN)
NAN_BOXED(13941,16,FLEN)
NAN_BOXED(46709,16,FLEN)
NAN_BOXED(14026,16,FLEN)
NAN_BOXED(46794,16,FLEN)
NAN_BOXED(14026,16,FLEN)
NAN_BOXED(46794,16,FLEN)
NAN_BOXED(14026,16,FLEN)
NAN_BOXED(46794,16,FLEN)
NAN_BOXED(14026,16,FLEN)
NAN_BOXED(46794,16,FLEN)
NAN_BOXED(14026,16,FLEN)
NAN_BOXED(46794,16,FLEN)
NAN_BOXED(14972,16,FLEN)
NAN_BOXED(47740,16,FLEN)
NAN_BOXED(14972,16,FLEN)
NAN_BOXED(47740,16,FLEN)
NAN_BOXED(14972,16,FLEN)
NAN_BOXED(47740,16,FLEN)
NAN_BOXED(14972,16,FLEN)
NAN_BOXED(47740,16,FLEN)
NAN_BOXED(14972,16,FLEN)
NAN_BOXED(47740,16,FLEN)
NAN_BOXED(13874,16,FLEN)
NAN_BOXED(46642,16,FLEN)
NAN_BOXED(13874,16,FLEN)
NAN_BOXED(46642,16,FLEN)
NAN_BOXED(13874,16,FLEN)
NAN_BOXED(46642,16,FLEN)
NAN_BOXED(13874,16,FLEN)
NAN_BOXED(46642,16,FLEN)
NAN_BOXED(13874,16,FLEN)
NAN_BOXED(46642,16,FLEN)
NAN_BOXED(14384,16,FLEN)
NAN_BOXED(47152,16,FLEN)
NAN_BOXED(14384,16,FLEN)
NAN_BOXED(47152,16,FLEN)
NAN_BOXED(14384,16,FLEN)
NAN_BOXED(47152,16,FLEN)
NAN_BOXED(14384,16,FLEN)
NAN_BOXED(47152,16,FLEN)
NAN_BOXED(14384,16,FLEN)
NAN_BOXED(47152,16,FLEN)
NAN_BOXED(13249,16,FLEN)
NAN_BOXED(46017,16,FLEN)
NAN_BOXED(13249,16,FLEN)
NAN_BOXED(46017,16,FLEN)
NAN_BOXED(13249,16,FLEN)
NAN_BOXED(46017,16,FLEN)
NAN_BOXED(13249,16,FLEN)
NAN_BOXED(46017,16,FLEN)
NAN_BOXED(13249,16,FLEN)
NAN_BOXED(46017,16,FLEN)
NAN_BOXED(11495,16,FLEN)
NAN_BOXED(44263,16,FLEN)
NAN_BOXED(11495,16,FLEN)
NAN_BOXED(44263,16,FLEN)
NAN_BOXED(11495,16,FLEN)
NAN_BOXED(44263,16,FLEN)
NAN_BOXED(11495,16,FLEN)
NAN_BOXED(44263,16,FLEN)
NAN_BOXED(11495,16,FLEN)
NAN_BOXED(44263,16,FLEN)
NAN_BOXED(11908,16,FLEN)
NAN_BOXED(44676,16,FLEN)
NAN_BOXED(11908,16,FLEN)
NAN_BOXED(44676,16,FLEN)
NAN_BOXED(11908,16,FLEN)
NAN_BOXED(44676,16,FLEN)
NAN_BOXED(11908,16,FLEN)
NAN_BOXED(44676,16,FLEN)
NAN_BOXED(11908,16,FLEN)
NAN_BOXED(44676,16,FLEN)
NAN_BOXED(14169,16,FLEN)
NAN_BOXED(46937,16,FLEN)
NAN_BOXED(14169,16,FLEN)
NAN_BOXED(46937,16,FLEN)
NAN_BOXED(14169,16,FLEN)
NAN_BOXED(46937,16,FLEN)
NAN_BOXED(14169,16,FLEN)
NAN_BOXED(46937,16,FLEN)
NAN_BOXED(14169,16,FLEN)
NAN_BOXED(46937,16,FLEN)
NAN_BOXED(13495,16,FLEN)
NAN_BOXED(46263,16,FLEN)
NAN_BOXED(13495,16,FLEN)
NAN_BOXED(46263,16,FLEN)
NAN_BOXED(13495,16,FLEN)
NAN_BOXED(46263,16,FLEN)
NAN_BOXED(13495,16,FLEN)
NAN_BOXED(46263,16,FLEN)
NAN_BOXED(13495,16,FLEN)
NAN_BOXED(46263,16,FLEN)
NAN_BOXED(12807,16,FLEN)
NAN_BOXED(45575,16,FLEN)
NAN_BOXED(12807,16,FLEN)
NAN_BOXED(45575,16,FLEN)
NAN_BOXED(12807,16,FLEN)
NAN_BOXED(45575,16,FLEN)
NAN_BOXED(12807,16,FLEN)
NAN_BOXED(45575,16,FLEN)
NAN_BOXED(12807,16,FLEN)
NAN_BOXED(45575,16,FLEN)
NAN_BOXED(11960,16,FLEN)
NAN_BOXED(44727,16,FLEN)
NAN_BOXED(11960,16,FLEN)
NAN_BOXED(44727,16,FLEN)
NAN_BOXED(11960,16,FLEN)
NAN_BOXED(44727,16,FLEN)
NAN_BOXED(11960,16,FLEN)
NAN_BOXED(44727,16,FLEN)
NAN_BOXED(11960,16,FLEN)
NAN_BOXED(44727,16,FLEN)
NAN_BOXED(10864,16,FLEN)
NAN_BOXED(43630,16,FLEN)
NAN_BOXED(10864,16,FLEN)
NAN_BOXED(43630,16,FLEN)
NAN_BOXED(10864,16,FLEN)
NAN_BOXED(43630,16,FLEN)
NAN_BOXED(10864,16,FLEN)
NAN_BOXED(43630,16,FLEN)
NAN_BOXED(10864,16,FLEN)
NAN_BOXED(43630,16,FLEN)
NAN_BOXED(14437,16,FLEN)
NAN_BOXED(47205,16,FLEN)
NAN_BOXED(14437,16,FLEN)
NAN_BOXED(47205,16,FLEN)
NAN_BOXED(14437,16,FLEN)
NAN_BOXED(47205,16,FLEN)
NAN_BOXED(14437,16,FLEN)
NAN_BOXED(47205,16,FLEN)
NAN_BOXED(14437,16,FLEN)
NAN_BOXED(47205,16,FLEN)
NAN_BOXED(7113,16,FLEN)
NAN_BOXED(39849,16,FLEN)
NAN_BOXED(7113,16,FLEN)
NAN_BOXED(39849,16,FLEN)
NAN_BOXED(7113,16,FLEN)
NAN_BOXED(39849,16,FLEN)
NAN_BOXED(7113,16,FLEN)
NAN_BOXED(39849,16,FLEN)
NAN_BOXED(7113,16,FLEN)
NAN_BOXED(39849,16,FLEN)
NAN_BOXED(12957,16,FLEN)
NAN_BOXED(45724,16,FLEN)
NAN_BOXED(12957,16,FLEN)
NAN_BOXED(45724,16,FLEN)
NAN_BOXED(12957,16,FLEN)
NAN_BOXED(45724,16,FLEN)
NAN_BOXED(12957,16,FLEN)
NAN_BOXED(45724,16,FLEN)
NAN_BOXED(12957,16,FLEN)
NAN_BOXED(45724,16,FLEN)
NAN_BOXED(13874,16,FLEN)
NAN_BOXED(46641,16,FLEN)
NAN_BOXED(13874,16,FLEN)
NAN_BOXED(46641,16,FLEN)
NAN_BOXED(13874,16,FLEN)
NAN_BOXED(46641,16,FLEN)
NAN_BOXED(13874,16,FLEN)
NAN_BOXED(46641,16,FLEN)
NAN_BOXED(13874,16,FLEN)
NAN_BOXED(46641,16,FLEN)
NAN_BOXED(13803,16,FLEN)
NAN_BOXED(46570,16,FLEN)
NAN_BOXED(13803,16,FLEN)
NAN_BOXED(46570,16,FLEN)
NAN_BOXED(13803,16,FLEN)
NAN_BOXED(46570,16,FLEN)
NAN_BOXED(13803,16,FLEN)
NAN_BOXED(46570,16,FLEN)
NAN_BOXED(13803,16,FLEN)
NAN_BOXED(46570,16,FLEN)
NAN_BOXED(14862,16,FLEN)
NAN_BOXED(47630,16,FLEN)
NAN_BOXED(14862,16,FLEN)
NAN_BOXED(47630,16,FLEN)
NAN_BOXED(14862,16,FLEN)
NAN_BOXED(47630,16,FLEN)
NAN_BOXED(14862,16,FLEN)
NAN_BOXED(47630,16,FLEN)
NAN_BOXED(14862,16,FLEN)
NAN_BOXED(47630,16,FLEN)
NAN_BOXED(15120,16,FLEN)
NAN_BOXED(47887,16,FLEN)
NAN_BOXED(15120,16,FLEN)
NAN_BOXED(47887,16,FLEN)
NAN_BOXED(15120,16,FLEN)
NAN_BOXED(47887,16,FLEN)
NAN_BOXED(15120,16,FLEN)
NAN_BOXED(47887,16,FLEN)
NAN_BOXED(15120,16,FLEN)
NAN_BOXED(47887,16,FLEN)
NAN_BOXED(12947,16,FLEN)
NAN_BOXED(45714,16,FLEN)
NAN_BOXED(12947,16,FLEN)
NAN_BOXED(45714,16,FLEN)
NAN_BOXED(12947,16,FLEN)
NAN_BOXED(45714,16,FLEN)
NAN_BOXED(12947,16,FLEN)
NAN_BOXED(45714,16,FLEN)
NAN_BOXED(12947,16,FLEN)
NAN_BOXED(45714,16,FLEN)
NAN_BOXED(12772,16,FLEN)
NAN_BOXED(45539,16,FLEN)
NAN_BOXED(12772,16,FLEN)
NAN_BOXED(45539,16,FLEN)
NAN_BOXED(12772,16,FLEN)
NAN_BOXED(45539,16,FLEN)
NAN_BOXED(12772,16,FLEN)
NAN_BOXED(45539,16,FLEN)
NAN_BOXED(12772,16,FLEN)
NAN_BOXED(45539,16,FLEN)
NAN_BOXED(15060,16,FLEN)
NAN_BOXED(47828,16,FLEN)
NAN_BOXED(15060,16,FLEN)
NAN_BOXED(47828,16,FLEN)
NAN_BOXED(15060,16,FLEN)
NAN_BOXED(47828,16,FLEN)
NAN_BOXED(15060,16,FLEN)
NAN_BOXED(47828,16,FLEN)
NAN_BOXED(15060,16,FLEN)
NAN_BOXED(47828,16,FLEN)
NAN_BOXED(15267,16,FLEN)
NAN_BOXED(48035,16,FLEN)
NAN_BOXED(15267,16,FLEN)
NAN_BOXED(48035,16,FLEN)
NAN_BOXED(15267,16,FLEN)
NAN_BOXED(48035,16,FLEN)
NAN_BOXED(15267,16,FLEN)
NAN_BOXED(48035,16,FLEN)
NAN_BOXED(15267,16,FLEN)
NAN_BOXED(48035,16,FLEN)
NAN_BOXED(11715,16,FLEN)
NAN_BOXED(44482,16,FLEN)
NAN_BOXED(11715,16,FLEN)
NAN_BOXED(44482,16,FLEN)
NAN_BOXED(11715,16,FLEN)
NAN_BOXED(44482,16,FLEN)
NAN_BOXED(11715,16,FLEN)
NAN_BOXED(44482,16,FLEN)
NAN_BOXED(11715,16,FLEN)
NAN_BOXED(44482,16,FLEN)
NAN_BOXED(13596,16,FLEN)
NAN_BOXED(46364,16,FLEN)
NAN_BOXED(13596,16,FLEN)
NAN_BOXED(46364,16,FLEN)
NAN_BOXED(13596,16,FLEN)
NAN_BOXED(46364,16,FLEN)
NAN_BOXED(13596,16,FLEN)
NAN_BOXED(46364,16,FLEN)
NAN_BOXED(13596,16,FLEN)
NAN_BOXED(46364,16,FLEN)
NAN_BOXED(13783,16,FLEN)
NAN_BOXED(46550,16,FLEN)
NAN_BOXED(13783,16,FLEN)
NAN_BOXED(46550,16,FLEN)
NAN_BOXED(13783,16,FLEN)
NAN_BOXED(46550,16,FLEN)
NAN_BOXED(13783,16,FLEN)
NAN_BOXED(46550,16,FLEN)
NAN_BOXED(13783,16,FLEN)
NAN_BOXED(46550,16,FLEN)
NAN_BOXED(14025,16,FLEN)
NAN_BOXED(46792,16,FLEN)
NAN_BOXED(14025,16,FLEN)
NAN_BOXED(46792,16,FLEN)
NAN_BOXED(14025,16,FLEN)
NAN_BOXED(46792,16,FLEN)
NAN_BOXED(14025,16,FLEN)
NAN_BOXED(46792,16,FLEN)
NAN_BOXED(14025,16,FLEN)
NAN_BOXED(46792,16,FLEN)
NAN_BOXED(14601,16,FLEN)
NAN_BOXED(47369,16,FLEN)
NAN_BOXED(14601,16,FLEN)
NAN_BOXED(47369,16,FLEN)
NAN_BOXED(14601,16,FLEN)
NAN_BOXED(47369,16,FLEN)
NAN_BOXED(14601,16,FLEN)
NAN_BOXED(47369,16,FLEN)
NAN_BOXED(14601,16,FLEN)
NAN_BOXED(47369,16,FLEN)
NAN_BOXED(15285,16,FLEN)
NAN_BOXED(48053,16,FLEN)
NAN_BOXED(15285,16,FLEN)
NAN_BOXED(48053,16,FLEN)
NAN_BOXED(15285,16,FLEN)
NAN_BOXED(48053,16,FLEN)
NAN_BOXED(15285,16,FLEN)
NAN_BOXED(48053,16,FLEN)
NAN_BOXED(15285,16,FLEN)
NAN_BOXED(48053,16,FLEN)
NAN_BOXED(10494,16,FLEN)
NAN_BOXED(43260,16,FLEN)
NAN_BOXED(10494,16,FLEN)
NAN_BOXED(43260,16,FLEN)
NAN_BOXED(10494,16,FLEN)
NAN_BOXED(43260,16,FLEN)
NAN_BOXED(10494,16,FLEN)
NAN_BOXED(43260,16,FLEN)
NAN_BOXED(10494,16,FLEN)
NAN_BOXED(43260,16,FLEN)
NAN_BOXED(15106,16,FLEN)
NAN_BOXED(47874,16,FLEN)
NAN_BOXED(15106,16,FLEN)
NAN_BOXED(47874,16,FLEN)
NAN_BOXED(15106,16,FLEN)
NAN_BOXED(47874,16,FLEN)
NAN_BOXED(15106,16,FLEN)
NAN_BOXED(47874,16,FLEN)
NAN_BOXED(15106,16,FLEN)
NAN_BOXED(47874,16,FLEN)
NAN_BOXED(12896,16,FLEN)
NAN_BOXED(45664,16,FLEN)
NAN_BOXED(12896,16,FLEN)
NAN_BOXED(45664,16,FLEN)
NAN_BOXED(12896,16,FLEN)
NAN_BOXED(45664,16,FLEN)
NAN_BOXED(12896,16,FLEN)
NAN_BOXED(45664,16,FLEN)
NAN_BOXED(12896,16,FLEN)
NAN_BOXED(45664,16,FLEN)
NAN_BOXED(15313,16,FLEN)
NAN_BOXED(48081,16,FLEN)
NAN_BOXED(15313,16,FLEN)
NAN_BOXED(48081,16,FLEN)
NAN_BOXED(15313,16,FLEN)
NAN_BOXED(48081,16,FLEN)
NAN_BOXED(15313,16,FLEN)
NAN_BOXED(48081,16,FLEN)
NAN_BOXED(15313,16,FLEN)
NAN_BOXED(48081,16,FLEN)
NAN_BOXED(15152,16,FLEN)
NAN_BOXED(47920,16,FLEN)
NAN_BOXED(15152,16,FLEN)
NAN_BOXED(47920,16,FLEN)
NAN_BOXED(15152,16,FLEN)
NAN_BOXED(47920,16,FLEN)
NAN_BOXED(15152,16,FLEN)
NAN_BOXED(47920,16,FLEN)
NAN_BOXED(15152,16,FLEN)
NAN_BOXED(47920,16,FLEN)
NAN_BOXED(14907,16,FLEN)
NAN_BOXED(47675,16,FLEN)
NAN_BOXED(14907,16,FLEN)
NAN_BOXED(47675,16,FLEN)
NAN_BOXED(14907,16,FLEN)
NAN_BOXED(47675,16,FLEN)
NAN_BOXED(14907,16,FLEN)
NAN_BOXED(47675,16,FLEN)
NAN_BOXED(14907,16,FLEN)
NAN_BOXED(47675,16,FLEN)
NAN_BOXED(14642,16,FLEN)
NAN_BOXED(47410,16,FLEN)
NAN_BOXED(14642,16,FLEN)
NAN_BOXED(47410,16,FLEN)
NAN_BOXED(14642,16,FLEN)
NAN_BOXED(47410,16,FLEN)
NAN_BOXED(14642,16,FLEN)
NAN_BOXED(47410,16,FLEN)
NAN_BOXED(14642,16,FLEN)
NAN_BOXED(47410,16,FLEN)
NAN_BOXED(14321,16,FLEN)
NAN_BOXED(47088,16,FLEN)
NAN_BOXED(14321,16,FLEN)
NAN_BOXED(47088,16,FLEN)
NAN_BOXED(14321,16,FLEN)
NAN_BOXED(47088,16,FLEN)
NAN_BOXED(14321,16,FLEN)
NAN_BOXED(47088,16,FLEN)
NAN_BOXED(14321,16,FLEN)
NAN_BOXED(47088,16,FLEN)
NAN_BOXED(15153,16,FLEN)
NAN_BOXED(47921,16,FLEN)
NAN_BOXED(15153,16,FLEN)
NAN_BOXED(47921,16,FLEN)
NAN_BOXED(15153,16,FLEN)
NAN_BOXED(47921,16,FLEN)
NAN_BOXED(15153,16,FLEN)
NAN_BOXED(47921,16,FLEN)
NAN_BOXED(15153,16,FLEN)
NAN_BOXED(47921,16,FLEN)
NAN_BOXED(14951,16,FLEN)
NAN_BOXED(47719,16,FLEN)
NAN_BOXED(14951,16,FLEN)
NAN_BOXED(47719,16,FLEN)
NAN_BOXED(14951,16,FLEN)
NAN_BOXED(47719,16,FLEN)
NAN_BOXED(14951,16,FLEN)
NAN_BOXED(47719,16,FLEN)
NAN_BOXED(14951,16,FLEN)
NAN_BOXED(47719,16,FLEN)
NAN_BOXED(13387,16,FLEN)
NAN_BOXED(46155,16,FLEN)
NAN_BOXED(13387,16,FLEN)
NAN_BOXED(46155,16,FLEN)
NAN_BOXED(13387,16,FLEN)
NAN_BOXED(46155,16,FLEN)
NAN_BOXED(13387,16,FLEN)
NAN_BOXED(46155,16,FLEN)
NAN_BOXED(13387,16,FLEN)
NAN_BOXED(46155,16,FLEN)
NAN_BOXED(11576,16,FLEN)
NAN_BOXED(44343,16,FLEN)
NAN_BOXED(11576,16,FLEN)
NAN_BOXED(44343,16,FLEN)
NAN_BOXED(11576,16,FLEN)
NAN_BOXED(44343,16,FLEN)
NAN_BOXED(11576,16,FLEN)
NAN_BOXED(44343,16,FLEN)
NAN_BOXED(11576,16,FLEN)
NAN_BOXED(44343,16,FLEN)
NAN_BOXED(13629,16,FLEN)
NAN_BOXED(46396,16,FLEN)
NAN_BOXED(13629,16,FLEN)
NAN_BOXED(46396,16,FLEN)
NAN_BOXED(13629,16,FLEN)
NAN_BOXED(46396,16,FLEN)
NAN_BOXED(13629,16,FLEN)
NAN_BOXED(46396,16,FLEN)
NAN_BOXED(13629,16,FLEN)
NAN_BOXED(46396,16,FLEN)
NAN_BOXED(15241,16,FLEN)
NAN_BOXED(48008,16,FLEN)
NAN_BOXED(15241,16,FLEN)
NAN_BOXED(48008,16,FLEN)
NAN_BOXED(15241,16,FLEN)
NAN_BOXED(48008,16,FLEN)
NAN_BOXED(15241,16,FLEN)
NAN_BOXED(48008,16,FLEN)
NAN_BOXED(15241,16,FLEN)
NAN_BOXED(48008,16,FLEN)
NAN_BOXED(12530,16,FLEN)
NAN_BOXED(45298,16,FLEN)
NAN_BOXED(12530,16,FLEN)
NAN_BOXED(45298,16,FLEN)
NAN_BOXED(12530,16,FLEN)
NAN_BOXED(45298,16,FLEN)
NAN_BOXED(12530,16,FLEN)
NAN_BOXED(45298,16,FLEN)
NAN_BOXED(12530,16,FLEN)
NAN_BOXED(45298,16,FLEN)
NAN_BOXED(14846,16,FLEN)
NAN_BOXED(47614,16,FLEN)
NAN_BOXED(14846,16,FLEN)
NAN_BOXED(47614,16,FLEN)
NAN_BOXED(14846,16,FLEN)
NAN_BOXED(47614,16,FLEN)
NAN_BOXED(14846,16,FLEN)
NAN_BOXED(47614,16,FLEN)
NAN_BOXED(14846,16,FLEN)
NAN_BOXED(47614,16,FLEN)
NAN_BOXED(14454,16,FLEN)
NAN_BOXED(47222,16,FLEN)
NAN_BOXED(14454,16,FLEN)
NAN_BOXED(47222,16,FLEN)
NAN_BOXED(14454,16,FLEN)
NAN_BOXED(47222,16,FLEN)
NAN_BOXED(14454,16,FLEN)
NAN_BOXED(47222,16,FLEN)
NAN_BOXED(14454,16,FLEN)
NAN_BOXED(47222,16,FLEN)
NAN_BOXED(14394,16,FLEN)
NAN_BOXED(47162,16,FLEN)
NAN_BOXED(14394,16,FLEN)
NAN_BOXED(47162,16,FLEN)
NAN_BOXED(14394,16,FLEN)
NAN_BOXED(47162,16,FLEN)
NAN_BOXED(14394,16,FLEN)
NAN_BOXED(47162,16,FLEN)
NAN_BOXED(14394,16,FLEN)
NAN_BOXED(47162,16,FLEN)
NAN_BOXED(14053,16,FLEN)
NAN_BOXED(46820,16,FLEN)
NAN_BOXED(14053,16,FLEN)
NAN_BOXED(46820,16,FLEN)
NAN_BOXED(14053,16,FLEN)
NAN_BOXED(46820,16,FLEN)
NAN_BOXED(14053,16,FLEN)
NAN_BOXED(46820,16,FLEN)
NAN_BOXED(14053,16,FLEN)
NAN_BOXED(46820,16,FLEN)
NAN_BOXED(14722,16,FLEN)
NAN_BOXED(47490,16,FLEN)
NAN_BOXED(14722,16,FLEN)
NAN_BOXED(47490,16,FLEN)
NAN_BOXED(14722,16,FLEN)
NAN_BOXED(47490,16,FLEN)
NAN_BOXED(14722,16,FLEN)
NAN_BOXED(47490,16,FLEN)
NAN_BOXED(14722,16,FLEN)
NAN_BOXED(47490,16,FLEN)
NAN_BOXED(12594,16,FLEN)
NAN_BOXED(45361,16,FLEN)
NAN_BOXED(12594,16,FLEN)
NAN_BOXED(45361,16,FLEN)
NAN_BOXED(12594,16,FLEN)
NAN_BOXED(45361,16,FLEN)
NAN_BOXED(12594,16,FLEN)
NAN_BOXED(45361,16,FLEN)
NAN_BOXED(12594,16,FLEN)
NAN_BOXED(45361,16,FLEN)
NAN_BOXED(14087,16,FLEN)
NAN_BOXED(46855,16,FLEN)
NAN_BOXED(14087,16,FLEN)
NAN_BOXED(46855,16,FLEN)
NAN_BOXED(14087,16,FLEN)
NAN_BOXED(46855,16,FLEN)
NAN_BOXED(14087,16,FLEN)
NAN_BOXED(46855,16,FLEN)
NAN_BOXED(14087,16,FLEN)
NAN_BOXED(46855,16,FLEN)
NAN_BOXED(13346,16,FLEN)
NAN_BOXED(46114,16,FLEN)
NAN_BOXED(13346,16,FLEN)
NAN_BOXED(46114,16,FLEN)
NAN_BOXED(13346,16,FLEN)
NAN_BOXED(46114,16,FLEN)
NAN_BOXED(13346,16,FLEN)
NAN_BOXED(46114,16,FLEN)
NAN_BOXED(13346,16,FLEN)
NAN_BOXED(46114,16,FLEN)
NAN_BOXED(15266,16,FLEN)
NAN_BOXED(48034,16,FLEN)
NAN_BOXED(15266,16,FLEN)
NAN_BOXED(48034,16,FLEN)
NAN_BOXED(15266,16,FLEN)
NAN_BOXED(48034,16,FLEN)
NAN_BOXED(15266,16,FLEN)
NAN_BOXED(48034,16,FLEN)
NAN_BOXED(15266,16,FLEN)
NAN_BOXED(48034,16,FLEN)
NAN_BOXED(14868,16,FLEN)
NAN_BOXED(47636,16,FLEN)
NAN_BOXED(14868,16,FLEN)
NAN_BOXED(47636,16,FLEN)
NAN_BOXED(14868,16,FLEN)
NAN_BOXED(47636,16,FLEN)
NAN_BOXED(14868,16,FLEN)
NAN_BOXED(47636,16,FLEN)
NAN_BOXED(14868,16,FLEN)
NAN_BOXED(47636,16,FLEN)
NAN_BOXED(14638,16,FLEN)
NAN_BOXED(47406,16,FLEN)
NAN_BOXED(14638,16,FLEN)
NAN_BOXED(47406,16,FLEN)
NAN_BOXED(14638,16,FLEN)
NAN_BOXED(47406,16,FLEN)
NAN_BOXED(14638,16,FLEN)
NAN_BOXED(47406,16,FLEN)
NAN_BOXED(14638,16,FLEN)
NAN_BOXED(47406,16,FLEN)
NAN_BOXED(14624,16,FLEN)
NAN_BOXED(47392,16,FLEN)
NAN_BOXED(14624,16,FLEN)
NAN_BOXED(47392,16,FLEN)
NAN_BOXED(14624,16,FLEN)
NAN_BOXED(47392,16,FLEN)
NAN_BOXED(14624,16,FLEN)
NAN_BOXED(47392,16,FLEN)
NAN_BOXED(14624,16,FLEN)
NAN_BOXED(47392,16,FLEN)
NAN_BOXED(13788,16,FLEN)
NAN_BOXED(46556,16,FLEN)
NAN_BOXED(13788,16,FLEN)
NAN_BOXED(46556,16,FLEN)
NAN_BOXED(13788,16,FLEN)
NAN_BOXED(46556,16,FLEN)
NAN_BOXED(13788,16,FLEN)
NAN_BOXED(46556,16,FLEN)
NAN_BOXED(13788,16,FLEN)
NAN_BOXED(46556,16,FLEN)
NAN_BOXED(13452,16,FLEN)
NAN_BOXED(46220,16,FLEN)
NAN_BOXED(13452,16,FLEN)
NAN_BOXED(46220,16,FLEN)
NAN_BOXED(13452,16,FLEN)
NAN_BOXED(46220,16,FLEN)
NAN_BOXED(13452,16,FLEN)
NAN_BOXED(46220,16,FLEN)
NAN_BOXED(13452,16,FLEN)
NAN_BOXED(46220,16,FLEN)
NAN_BOXED(14511,16,FLEN)
NAN_BOXED(47279,16,FLEN)
NAN_BOXED(14511,16,FLEN)
NAN_BOXED(47279,16,FLEN)
NAN_BOXED(14511,16,FLEN)
NAN_BOXED(47279,16,FLEN)
NAN_BOXED(14511,16,FLEN)
NAN_BOXED(47279,16,FLEN)
NAN_BOXED(14511,16,FLEN)
NAN_BOXED(47279,16,FLEN)
NAN_BOXED(15356,16,FLEN)
NAN_BOXED(48124,16,FLEN)
NAN_BOXED(15356,16,FLEN)
NAN_BOXED(48124,16,FLEN)
NAN_BOXED(15356,16,FLEN)
NAN_BOXED(48124,16,FLEN)
NAN_BOXED(15356,16,FLEN)
NAN_BOXED(48124,16,FLEN)
NAN_BOXED(15356,16,FLEN)
NAN_BOXED(48124,16,FLEN)
NAN_BOXED(14675,16,FLEN)
NAN_BOXED(47443,16,FLEN)
NAN_BOXED(14675,16,FLEN)
NAN_BOXED(47443,16,FLEN)
NAN_BOXED(14675,16,FLEN)
NAN_BOXED(47443,16,FLEN)
NAN_BOXED(14675,16,FLEN)
NAN_BOXED(47443,16,FLEN)
NAN_BOXED(14675,16,FLEN)
NAN_BOXED(47443,16,FLEN)
NAN_BOXED(13773,16,FLEN)
NAN_BOXED(46541,16,FLEN)
NAN_BOXED(13773,16,FLEN)
NAN_BOXED(46541,16,FLEN)
NAN_BOXED(13773,16,FLEN)
NAN_BOXED(46541,16,FLEN)
NAN_BOXED(13773,16,FLEN)
NAN_BOXED(46541,16,FLEN)
NAN_BOXED(13773,16,FLEN)
NAN_BOXED(46541,16,FLEN)
NAN_BOXED(12281,16,FLEN)
NAN_BOXED(45048,16,FLEN)
NAN_BOXED(12281,16,FLEN)
NAN_BOXED(45048,16,FLEN)
NAN_BOXED(12281,16,FLEN)
NAN_BOXED(45048,16,FLEN)
NAN_BOXED(12281,16,FLEN)
NAN_BOXED(45048,16,FLEN)
NAN_BOXED(12281,16,FLEN)
NAN_BOXED(45048,16,FLEN)
NAN_BOXED(13509,16,FLEN)
NAN_BOXED(46277,16,FLEN)
NAN_BOXED(13509,16,FLEN)
NAN_BOXED(46277,16,FLEN)
NAN_BOXED(13509,16,FLEN)
NAN_BOXED(46277,16,FLEN)
NAN_BOXED(13509,16,FLEN)
NAN_BOXED(46277,16,FLEN)
NAN_BOXED(13509,16,FLEN)
NAN_BOXED(46277,16,FLEN)
NAN_BOXED(13671,16,FLEN)
NAN_BOXED(46439,16,FLEN)
NAN_BOXED(13671,16,FLEN)
NAN_BOXED(46439,16,FLEN)
NAN_BOXED(13671,16,FLEN)
NAN_BOXED(46439,16,FLEN)
NAN_BOXED(13671,16,FLEN)
NAN_BOXED(46439,16,FLEN)
NAN_BOXED(13671,16,FLEN)
NAN_BOXED(46439,16,FLEN)
NAN_BOXED(14447,16,FLEN)
NAN_BOXED(47215,16,FLEN)
NAN_BOXED(14447,16,FLEN)
NAN_BOXED(47215,16,FLEN)
NAN_BOXED(14447,16,FLEN)
NAN_BOXED(47215,16,FLEN)
NAN_BOXED(14447,16,FLEN)
NAN_BOXED(47215,16,FLEN)
NAN_BOXED(14447,16,FLEN)
NAN_BOXED(47215,16,FLEN)
NAN_BOXED(15037,16,FLEN)
NAN_BOXED(47804,16,FLEN)
NAN_BOXED(15037,16,FLEN)
NAN_BOXED(47804,16,FLEN)
NAN_BOXED(15037,16,FLEN)
NAN_BOXED(47804,16,FLEN)
NAN_BOXED(15037,16,FLEN)
NAN_BOXED(47804,16,FLEN)
NAN_BOXED(15037,16,FLEN)
NAN_BOXED(47804,16,FLEN)
NAN_BOXED(14362,16,FLEN)
NAN_BOXED(47130,16,FLEN)
NAN_BOXED(14362,16,FLEN)
NAN_BOXED(47130,16,FLEN)
NAN_BOXED(14362,16,FLEN)
NAN_BOXED(47130,16,FLEN)
NAN_BOXED(14362,16,FLEN)
NAN_BOXED(47130,16,FLEN)
NAN_BOXED(14362,16,FLEN)
NAN_BOXED(47130,16,FLEN)
NAN_BOXED(13267,16,FLEN)
NAN_BOXED(46034,16,FLEN)
NAN_BOXED(13267,16,FLEN)
NAN_BOXED(46034,16,FLEN)
NAN_BOXED(13267,16,FLEN)
NAN_BOXED(46034,16,FLEN)
NAN_BOXED(13267,16,FLEN)
NAN_BOXED(46034,16,FLEN)
NAN_BOXED(13267,16,FLEN)
NAN_BOXED(46034,16,FLEN)
NAN_BOXED(14347,16,FLEN)
NAN_BOXED(47115,16,FLEN)
NAN_BOXED(14347,16,FLEN)
NAN_BOXED(47115,16,FLEN)
NAN_BOXED(14347,16,FLEN)
NAN_BOXED(47115,16,FLEN)
NAN_BOXED(14347,16,FLEN)
NAN_BOXED(47115,16,FLEN)
NAN_BOXED(14347,16,FLEN)
NAN_BOXED(47115,16,FLEN)
NAN_BOXED(14403,16,FLEN)
NAN_BOXED(47171,16,FLEN)
NAN_BOXED(14403,16,FLEN)
NAN_BOXED(47171,16,FLEN)
NAN_BOXED(14403,16,FLEN)
NAN_BOXED(47171,16,FLEN)
NAN_BOXED(14403,16,FLEN)
NAN_BOXED(47171,16,FLEN)
NAN_BOXED(14403,16,FLEN)
NAN_BOXED(47171,16,FLEN)
NAN_BOXED(12288,16,FLEN)
NAN_BOXED(45055,16,FLEN)
NAN_BOXED(12288,16,FLEN)
NAN_BOXED(45055,16,FLEN)
NAN_BOXED(12288,16,FLEN)
NAN_BOXED(45055,16,FLEN)
NAN_BOXED(12288,16,FLEN)
NAN_BOXED(45055,16,FLEN)
NAN_BOXED(12288,16,FLEN)
NAN_BOXED(45055,16,FLEN)
NAN_BOXED(14974,16,FLEN)
NAN_BOXED(47742,16,FLEN)
NAN_BOXED(14974,16,FLEN)
NAN_BOXED(47742,16,FLEN)
NAN_BOXED(14974,16,FLEN)
NAN_BOXED(47742,16,FLEN)
NAN_BOXED(14974,16,FLEN)
NAN_BOXED(47742,16,FLEN)
NAN_BOXED(14974,16,FLEN)
NAN_BOXED(47742,16,FLEN)
NAN_BOXED(13790,16,FLEN)
NAN_BOXED(46558,16,FLEN)
NAN_BOXED(13790,16,FLEN)
NAN_BOXED(46558,16,FLEN)
NAN_BOXED(13790,16,FLEN)
NAN_BOXED(46558,16,FLEN)
NAN_BOXED(13790,16,FLEN)
NAN_BOXED(46558,16,FLEN)
NAN_BOXED(13790,16,FLEN)
NAN_BOXED(46558,16,FLEN)
NAN_BOXED(13412,16,FLEN)
NAN_BOXED(46180,16,FLEN)
NAN_BOXED(13412,16,FLEN)
NAN_BOXED(46180,16,FLEN)
NAN_BOXED(13412,16,FLEN)
NAN_BOXED(46180,16,FLEN)
NAN_BOXED(13412,16,FLEN)
NAN_BOXED(46180,16,FLEN)
NAN_BOXED(13412,16,FLEN)
NAN_BOXED(46180,16,FLEN)
NAN_BOXED(14537,16,FLEN)
NAN_BOXED(47305,16,FLEN)
NAN_BOXED(14537,16,FLEN)
NAN_BOXED(47305,16,FLEN)
NAN_BOXED(14537,16,FLEN)
NAN_BOXED(47305,16,FLEN)
NAN_BOXED(14537,16,FLEN)
NAN_BOXED(47305,16,FLEN)
NAN_BOXED(14537,16,FLEN)
NAN_BOXED(47305,16,FLEN)
NAN_BOXED(14712,16,FLEN)
NAN_BOXED(47480,16,FLEN)
NAN_BOXED(14712,16,FLEN)
NAN_BOXED(47480,16,FLEN)
NAN_BOXED(14712,16,FLEN)
NAN_BOXED(47480,16,FLEN)
NAN_BOXED(14712,16,FLEN)
NAN_BOXED(47480,16,FLEN)
NAN_BOXED(14712,16,FLEN)
NAN_BOXED(47480,16,FLEN)
NAN_BOXED(13445,16,FLEN)
NAN_BOXED(46213,16,FLEN)
NAN_BOXED(13445,16,FLEN)
NAN_BOXED(46213,16,FLEN)
NAN_BOXED(13445,16,FLEN)
NAN_BOXED(46213,16,FLEN)
NAN_BOXED(13445,16,FLEN)
NAN_BOXED(46213,16,FLEN)
NAN_BOXED(13445,16,FLEN)
NAN_BOXED(46213,16,FLEN)
NAN_BOXED(12716,16,FLEN)
NAN_BOXED(45484,16,FLEN)
NAN_BOXED(12716,16,FLEN)
NAN_BOXED(45484,16,FLEN)
NAN_BOXED(12716,16,FLEN)
NAN_BOXED(45484,16,FLEN)
NAN_BOXED(12716,16,FLEN)
NAN_BOXED(45484,16,FLEN)
NAN_BOXED(12716,16,FLEN)
NAN_BOXED(45484,16,FLEN)
NAN_BOXED(15159,16,FLEN)
NAN_BOXED(47927,16,FLEN)
NAN_BOXED(15159,16,FLEN)
NAN_BOXED(47927,16,FLEN)
NAN_BOXED(15159,16,FLEN)
NAN_BOXED(47927,16,FLEN)
NAN_BOXED(15159,16,FLEN)
NAN_BOXED(47927,16,FLEN)
NAN_BOXED(15159,16,FLEN)
NAN_BOXED(47927,16,FLEN)
NAN_BOXED(13724,16,FLEN)
NAN_BOXED(46492,16,FLEN)
NAN_BOXED(13724,16,FLEN)
NAN_BOXED(46492,16,FLEN)
NAN_BOXED(13724,16,FLEN)
NAN_BOXED(46492,16,FLEN)
NAN_BOXED(13724,16,FLEN)
NAN_BOXED(46492,16,FLEN)
NAN_BOXED(13724,16,FLEN)
NAN_BOXED(46492,16,FLEN)
NAN_BOXED(14786,16,FLEN)
NAN_BOXED(47554,16,FLEN)
NAN_BOXED(14786,16,FLEN)
NAN_BOXED(47554,16,FLEN)
NAN_BOXED(14786,16,FLEN)
NAN_BOXED(47554,16,FLEN)
NAN_BOXED(14786,16,FLEN)
NAN_BOXED(47554,16,FLEN)
NAN_BOXED(14786,16,FLEN)
NAN_BOXED(47554,16,FLEN)
NAN_BOXED(15154,16,FLEN)
NAN_BOXED(47922,16,FLEN)
NAN_BOXED(15154,16,FLEN)
NAN_BOXED(47922,16,FLEN)
NAN_BOXED(15154,16,FLEN)
NAN_BOXED(47922,16,FLEN)
NAN_BOXED(15154,16,FLEN)
NAN_BOXED(47922,16,FLEN)
NAN_BOXED(15154,16,FLEN)
NAN_BOXED(47922,16,FLEN)
NAN_BOXED(14547,16,FLEN)
NAN_BOXED(47315,16,FLEN)
NAN_BOXED(14547,16,FLEN)
NAN_BOXED(47315,16,FLEN)
NAN_BOXED(14547,16,FLEN)
NAN_BOXED(47315,16,FLEN)
NAN_BOXED(14547,16,FLEN)
NAN_BOXED(47315,16,FLEN)
NAN_BOXED(14547,16,FLEN)
NAN_BOXED(47315,16,FLEN)
NAN_BOXED(14797,16,FLEN)
NAN_BOXED(47565,16,FLEN)
NAN_BOXED(14797,16,FLEN)
NAN_BOXED(47565,16,FLEN)
NAN_BOXED(14797,16,FLEN)
NAN_BOXED(47565,16,FLEN)
NAN_BOXED(14797,16,FLEN)
NAN_BOXED(47565,16,FLEN)
NAN_BOXED(14797,16,FLEN)
NAN_BOXED(47565,16,FLEN)
NAN_BOXED(12965,16,FLEN)
NAN_BOXED(45733,16,FLEN)
NAN_BOXED(12965,16,FLEN)
NAN_BOXED(45733,16,FLEN)
NAN_BOXED(12965,16,FLEN)
NAN_BOXED(45733,16,FLEN)
NAN_BOXED(12965,16,FLEN)
NAN_BOXED(45733,16,FLEN)
NAN_BOXED(12965,16,FLEN)
NAN_BOXED(45733,16,FLEN)
NAN_BOXED(15086,16,FLEN)
NAN_BOXED(47854,16,FLEN)
NAN_BOXED(15086,16,FLEN)
NAN_BOXED(47854,16,FLEN)
NAN_BOXED(15086,16,FLEN)
NAN_BOXED(47854,16,FLEN)
NAN_BOXED(15086,16,FLEN)
NAN_BOXED(47854,16,FLEN)
NAN_BOXED(15086,16,FLEN)
NAN_BOXED(47854,16,FLEN)
NAN_BOXED(13718,16,FLEN)
NAN_BOXED(46486,16,FLEN)
NAN_BOXED(13718,16,FLEN)
NAN_BOXED(46486,16,FLEN)
NAN_BOXED(13718,16,FLEN)
NAN_BOXED(46486,16,FLEN)
NAN_BOXED(13718,16,FLEN)
NAN_BOXED(46486,16,FLEN)
NAN_BOXED(13718,16,FLEN)
NAN_BOXED(46486,16,FLEN)
NAN_BOXED(12313,16,FLEN)
NAN_BOXED(45081,16,FLEN)
NAN_BOXED(12313,16,FLEN)
NAN_BOXED(45081,16,FLEN)
NAN_BOXED(12313,16,FLEN)
NAN_BOXED(45081,16,FLEN)
NAN_BOXED(12313,16,FLEN)
NAN_BOXED(45081,16,FLEN)
NAN_BOXED(12313,16,FLEN)
NAN_BOXED(45081,16,FLEN)
NAN_BOXED(15321,16,FLEN)
NAN_BOXED(48089,16,FLEN)
NAN_BOXED(15321,16,FLEN)
NAN_BOXED(48089,16,FLEN)
NAN_BOXED(15321,16,FLEN)
NAN_BOXED(48089,16,FLEN)
NAN_BOXED(15321,16,FLEN)
NAN_BOXED(48089,16,FLEN)
NAN_BOXED(15321,16,FLEN)
NAN_BOXED(48089,16,FLEN)
NAN_BOXED(13594,16,FLEN)
NAN_BOXED(46362,16,FLEN)
NAN_BOXED(13594,16,FLEN)
NAN_BOXED(46362,16,FLEN)
NAN_BOXED(13594,16,FLEN)
NAN_BOXED(46362,16,FLEN)
NAN_BOXED(13594,16,FLEN)
NAN_BOXED(46362,16,FLEN)
NAN_BOXED(13594,16,FLEN)
NAN_BOXED(46362,16,FLEN)
NAN_BOXED(10970,16,FLEN)
NAN_BOXED(43736,16,FLEN)
NAN_BOXED(10970,16,FLEN)
NAN_BOXED(43736,16,FLEN)
NAN_BOXED(10970,16,FLEN)
NAN_BOXED(43736,16,FLEN)
NAN_BOXED(10970,16,FLEN)
NAN_BOXED(43736,16,FLEN)
NAN_BOXED(10970,16,FLEN)
NAN_BOXED(43736,16,FLEN)
NAN_BOXED(11717,16,FLEN)
NAN_BOXED(44484,16,FLEN)
NAN_BOXED(11717,16,FLEN)
NAN_BOXED(44484,16,FLEN)
NAN_BOXED(11717,16,FLEN)
NAN_BOXED(44484,16,FLEN)
NAN_BOXED(11717,16,FLEN)
NAN_BOXED(44484,16,FLEN)
NAN_BOXED(11717,16,FLEN)
NAN_BOXED(44484,16,FLEN)
NAN_BOXED(13315,16,FLEN)
NAN_BOXED(46083,16,FLEN)
NAN_BOXED(13315,16,FLEN)
NAN_BOXED(46083,16,FLEN)
NAN_BOXED(13315,16,FLEN)
NAN_BOXED(46083,16,FLEN)
NAN_BOXED(13315,16,FLEN)
NAN_BOXED(46083,16,FLEN)
NAN_BOXED(13315,16,FLEN)
NAN_BOXED(46083,16,FLEN)
NAN_BOXED(13699,16,FLEN)
NAN_BOXED(46467,16,FLEN)
NAN_BOXED(13699,16,FLEN)
NAN_BOXED(46467,16,FLEN)
NAN_BOXED(13699,16,FLEN)
NAN_BOXED(46467,16,FLEN)
NAN_BOXED(13699,16,FLEN)
NAN_BOXED(46467,16,FLEN)
NAN_BOXED(13699,16,FLEN)
NAN_BOXED(46467,16,FLEN)
NAN_BOXED(11834,16,FLEN)
NAN_BOXED(44601,16,FLEN)
NAN_BOXED(11834,16,FLEN)
NAN_BOXED(44601,16,FLEN)
NAN_BOXED(11834,16,FLEN)
NAN_BOXED(44601,16,FLEN)
NAN_BOXED(11834,16,FLEN)
NAN_BOXED(44601,16,FLEN)
NAN_BOXED(11834,16,FLEN)
NAN_BOXED(44601,16,FLEN)
NAN_BOXED(14597,16,FLEN)
NAN_BOXED(47365,16,FLEN)
NAN_BOXED(14597,16,FLEN)
NAN_BOXED(47365,16,FLEN)
NAN_BOXED(14597,16,FLEN)
NAN_BOXED(47365,16,FLEN)
NAN_BOXED(14597,16,FLEN)
NAN_BOXED(47365,16,FLEN)
NAN_BOXED(14597,16,FLEN)
NAN_BOXED(47365,16,FLEN)
NAN_BOXED(14934,16,FLEN)
NAN_BOXED(47702,16,FLEN)
NAN_BOXED(14934,16,FLEN)
NAN_BOXED(47702,16,FLEN)
NAN_BOXED(14934,16,FLEN)
NAN_BOXED(47702,16,FLEN)
NAN_BOXED(14934,16,FLEN)
NAN_BOXED(47702,16,FLEN)
NAN_BOXED(14934,16,FLEN)
NAN_BOXED(47702,16,FLEN)
NAN_BOXED(15341,16,FLEN)
NAN_BOXED(48109,16,FLEN)
NAN_BOXED(15341,16,FLEN)
NAN_BOXED(48109,16,FLEN)
NAN_BOXED(15341,16,FLEN)
NAN_BOXED(48109,16,FLEN)
NAN_BOXED(15341,16,FLEN)
NAN_BOXED(48109,16,FLEN)
NAN_BOXED(15341,16,FLEN)
NAN_BOXED(48109,16,FLEN)
NAN_BOXED(14677,16,FLEN)
NAN_BOXED(47445,16,FLEN)
NAN_BOXED(14677,16,FLEN)
NAN_BOXED(47445,16,FLEN)
NAN_BOXED(14677,16,FLEN)
NAN_BOXED(47445,16,FLEN)
NAN_BOXED(14677,16,FLEN)
NAN_BOXED(47445,16,FLEN)
NAN_BOXED(14677,16,FLEN)
NAN_BOXED(47445,16,FLEN)
NAN_BOXED(13441,16,FLEN)
NAN_BOXED(46208,16,FLEN)
NAN_BOXED(13441,16,FLEN)
NAN_BOXED(46208,16,FLEN)
NAN_BOXED(13441,16,FLEN)
NAN_BOXED(46208,16,FLEN)
NAN_BOXED(13441,16,FLEN)
NAN_BOXED(46208,16,FLEN)
NAN_BOXED(13441,16,FLEN)
NAN_BOXED(46208,16,FLEN)
NAN_BOXED(13842,16,FLEN)
NAN_BOXED(46610,16,FLEN)
NAN_BOXED(13842,16,FLEN)
NAN_BOXED(46610,16,FLEN)
NAN_BOXED(13842,16,FLEN)
NAN_BOXED(46610,16,FLEN)
NAN_BOXED(13842,16,FLEN)
NAN_BOXED(46610,16,FLEN)
NAN_BOXED(13842,16,FLEN)
NAN_BOXED(46610,16,FLEN)
NAN_BOXED(15024,16,FLEN)
NAN_BOXED(47792,16,FLEN)
NAN_BOXED(15024,16,FLEN)
NAN_BOXED(47792,16,FLEN)
NAN_BOXED(15024,16,FLEN)
NAN_BOXED(47792,16,FLEN)
NAN_BOXED(15024,16,FLEN)
NAN_BOXED(47792,16,FLEN)
NAN_BOXED(15024,16,FLEN)
NAN_BOXED(47792,16,FLEN)
NAN_BOXED(14767,16,FLEN)
NAN_BOXED(47534,16,FLEN)
NAN_BOXED(14767,16,FLEN)
NAN_BOXED(47534,16,FLEN)
NAN_BOXED(14767,16,FLEN)
NAN_BOXED(47534,16,FLEN)
NAN_BOXED(14767,16,FLEN)
NAN_BOXED(47534,16,FLEN)
NAN_BOXED(14767,16,FLEN)
NAN_BOXED(47534,16,FLEN)
NAN_BOXED(14137,16,FLEN)
NAN_BOXED(46905,16,FLEN)
NAN_BOXED(14137,16,FLEN)
NAN_BOXED(46905,16,FLEN)
NAN_BOXED(14137,16,FLEN)
NAN_BOXED(46905,16,FLEN)
NAN_BOXED(14137,16,FLEN)
NAN_BOXED(46905,16,FLEN)
NAN_BOXED(14137,16,FLEN)
NAN_BOXED(46905,16,FLEN)
NAN_BOXED(14380,16,FLEN)
NAN_BOXED(47148,16,FLEN)
NAN_BOXED(14380,16,FLEN)
NAN_BOXED(47148,16,FLEN)
NAN_BOXED(14380,16,FLEN)
NAN_BOXED(47148,16,FLEN)
NAN_BOXED(14380,16,FLEN)
NAN_BOXED(47148,16,FLEN)
NAN_BOXED(14380,16,FLEN)
NAN_BOXED(47148,16,FLEN)
NAN_BOXED(15261,16,FLEN)
NAN_BOXED(48029,16,FLEN)
NAN_BOXED(15261,16,FLEN)
NAN_BOXED(48029,16,FLEN)
NAN_BOXED(15261,16,FLEN)
NAN_BOXED(48029,16,FLEN)
NAN_BOXED(15261,16,FLEN)
NAN_BOXED(48029,16,FLEN)
NAN_BOXED(15261,16,FLEN)
NAN_BOXED(48029,16,FLEN)
NAN_BOXED(14241,16,FLEN)
NAN_BOXED(47009,16,FLEN)
NAN_BOXED(14241,16,FLEN)
NAN_BOXED(47009,16,FLEN)
NAN_BOXED(14241,16,FLEN)
NAN_BOXED(47009,16,FLEN)
NAN_BOXED(14241,16,FLEN)
NAN_BOXED(47009,16,FLEN)
NAN_BOXED(14241,16,FLEN)
NAN_BOXED(47009,16,FLEN)
NAN_BOXED(14534,16,FLEN)
NAN_BOXED(47302,16,FLEN)
NAN_BOXED(14534,16,FLEN)
NAN_BOXED(47302,16,FLEN)
NAN_BOXED(14534,16,FLEN)
NAN_BOXED(47302,16,FLEN)
NAN_BOXED(14534,16,FLEN)
NAN_BOXED(47302,16,FLEN)
NAN_BOXED(14534,16,FLEN)
NAN_BOXED(47302,16,FLEN)
NAN_BOXED(14510,16,FLEN)
NAN_BOXED(47278,16,FLEN)
NAN_BOXED(14510,16,FLEN)
NAN_BOXED(47278,16,FLEN)
NAN_BOXED(14510,16,FLEN)
NAN_BOXED(47278,16,FLEN)
NAN_BOXED(14510,16,FLEN)
NAN_BOXED(47278,16,FLEN)
NAN_BOXED(14510,16,FLEN)
NAN_BOXED(47278,16,FLEN)
NAN_BOXED(11737,16,FLEN)
NAN_BOXED(44504,16,FLEN)
NAN_BOXED(11737,16,FLEN)
NAN_BOXED(44504,16,FLEN)
NAN_BOXED(11737,16,FLEN)
NAN_BOXED(44504,16,FLEN)
NAN_BOXED(11737,16,FLEN)
NAN_BOXED(44504,16,FLEN)
NAN_BOXED(11737,16,FLEN)
NAN_BOXED(44504,16,FLEN)
NAN_BOXED(12568,16,FLEN)
NAN_BOXED(45335,16,FLEN)
NAN_BOXED(12568,16,FLEN)
NAN_BOXED(45335,16,FLEN)
NAN_BOXED(12568,16,FLEN)
NAN_BOXED(45335,16,FLEN)
NAN_BOXED(12568,16,FLEN)
NAN_BOXED(45335,16,FLEN)
NAN_BOXED(12568,16,FLEN)
NAN_BOXED(45335,16,FLEN)
NAN_BOXED(14656,16,FLEN)
NAN_BOXED(47424,16,FLEN)
NAN_BOXED(14656,16,FLEN)
NAN_BOXED(47424,16,FLEN)
NAN_BOXED(14656,16,FLEN)
NAN_BOXED(47424,16,FLEN)
NAN_BOXED(14656,16,FLEN)
NAN_BOXED(47424,16,FLEN)
NAN_BOXED(14656,16,FLEN)
NAN_BOXED(47424,16,FLEN)
NAN_BOXED(13518,16,FLEN)
NAN_BOXED(46286,16,FLEN)
NAN_BOXED(13518,16,FLEN)
NAN_BOXED(46286,16,FLEN)
NAN_BOXED(13518,16,FLEN)
NAN_BOXED(46286,16,FLEN)
NAN_BOXED(13518,16,FLEN)
NAN_BOXED(46286,16,FLEN)
NAN_BOXED(13518,16,FLEN)
NAN_BOXED(46286,16,FLEN)
NAN_BOXED(14741,16,FLEN)
NAN_BOXED(47509,16,FLEN)
NAN_BOXED(14741,16,FLEN)
NAN_BOXED(47509,16,FLEN)
NAN_BOXED(14741,16,FLEN)
NAN_BOXED(47509,16,FLEN)
NAN_BOXED(14741,16,FLEN)
NAN_BOXED(47509,16,FLEN)
NAN_BOXED(14741,16,FLEN)
NAN_BOXED(47509,16,FLEN)
NAN_BOXED(11971,16,FLEN)
NAN_BOXED(44738,16,FLEN)
NAN_BOXED(11971,16,FLEN)
NAN_BOXED(44738,16,FLEN)
NAN_BOXED(11971,16,FLEN)
NAN_BOXED(44738,16,FLEN)
NAN_BOXED(11971,16,FLEN)
NAN_BOXED(44738,16,FLEN)
NAN_BOXED(11971,16,FLEN)
NAN_BOXED(44738,16,FLEN)
NAN_BOXED(13817,16,FLEN)
NAN_BOXED(46584,16,FLEN)
NAN_BOXED(13817,16,FLEN)
NAN_BOXED(46584,16,FLEN)
NAN_BOXED(13817,16,FLEN)
NAN_BOXED(46584,16,FLEN)
NAN_BOXED(13817,16,FLEN)
NAN_BOXED(46584,16,FLEN)
NAN_BOXED(13817,16,FLEN)
NAN_BOXED(46584,16,FLEN)
NAN_BOXED(9863,16,FLEN)
NAN_BOXED(42627,16,FLEN)
NAN_BOXED(9863,16,FLEN)
NAN_BOXED(42627,16,FLEN)
NAN_BOXED(9863,16,FLEN)
NAN_BOXED(42627,16,FLEN)
NAN_BOXED(9863,16,FLEN)
NAN_BOXED(42627,16,FLEN)
NAN_BOXED(9863,16,FLEN)
NAN_BOXED(42627,16,FLEN)
NAN_BOXED(15225,16,FLEN)
NAN_BOXED(47993,16,FLEN)
NAN_BOXED(15225,16,FLEN)
NAN_BOXED(47993,16,FLEN)
NAN_BOXED(15225,16,FLEN)
NAN_BOXED(47993,16,FLEN)
NAN_BOXED(15225,16,FLEN)
NAN_BOXED(47993,16,FLEN)
NAN_BOXED(15225,16,FLEN)
NAN_BOXED(47993,16,FLEN)
NAN_BOXED(13312,16,FLEN)
NAN_BOXED(46080,16,FLEN)
NAN_BOXED(13312,16,FLEN)
NAN_BOXED(46080,16,FLEN)
NAN_BOXED(13312,16,FLEN)
NAN_BOXED(46080,16,FLEN)
NAN_BOXED(13312,16,FLEN)
NAN_BOXED(46080,16,FLEN)
NAN_BOXED(13312,16,FLEN)
NAN_BOXED(46080,16,FLEN)
NAN_BOXED(15343,16,FLEN)
NAN_BOXED(48111,16,FLEN)
NAN_BOXED(15343,16,FLEN)
NAN_BOXED(48111,16,FLEN)
NAN_BOXED(15343,16,FLEN)
NAN_BOXED(48111,16,FLEN)
NAN_BOXED(15343,16,FLEN)
NAN_BOXED(48111,16,FLEN)
NAN_BOXED(15343,16,FLEN)
NAN_BOXED(48111,16,FLEN)
NAN_BOXED(14258,16,FLEN)
NAN_BOXED(47026,16,FLEN)
NAN_BOXED(14258,16,FLEN)
NAN_BOXED(47026,16,FLEN)
NAN_BOXED(14258,16,FLEN)
NAN_BOXED(47026,16,FLEN)
NAN_BOXED(14258,16,FLEN)
NAN_BOXED(47026,16,FLEN)
NAN_BOXED(14258,16,FLEN)
NAN_BOXED(47026,16,FLEN)
NAN_BOXED(14359,16,FLEN)
NAN_BOXED(47127,16,FLEN)
NAN_BOXED(14359,16,FLEN)
NAN_BOXED(47127,16,FLEN)
NAN_BOXED(14359,16,FLEN)
NAN_BOXED(47127,16,FLEN)
NAN_BOXED(14359,16,FLEN)
NAN_BOXED(47127,16,FLEN)
NAN_BOXED(14359,16,FLEN)
NAN_BOXED(47127,16,FLEN)
NAN_BOXED(13601,16,FLEN)
NAN_BOXED(46369,16,FLEN)
NAN_BOXED(13601,16,FLEN)
NAN_BOXED(46369,16,FLEN)
NAN_BOXED(13601,16,FLEN)
NAN_BOXED(46369,16,FLEN)
NAN_BOXED(13601,16,FLEN)
NAN_BOXED(46369,16,FLEN)
NAN_BOXED(13601,16,FLEN)
NAN_BOXED(46369,16,FLEN)
NAN_BOXED(14605,16,FLEN)
NAN_BOXED(47373,16,FLEN)
NAN_BOXED(14605,16,FLEN)
NAN_BOXED(47373,16,FLEN)
NAN_BOXED(14605,16,FLEN)
NAN_BOXED(47373,16,FLEN)
NAN_BOXED(14605,16,FLEN)
NAN_BOXED(47373,16,FLEN)
NAN_BOXED(14605,16,FLEN)
NAN_BOXED(47373,16,FLEN)
NAN_BOXED(14825,16,FLEN)
NAN_BOXED(47593,16,FLEN)
NAN_BOXED(14825,16,FLEN)
NAN_BOXED(47593,16,FLEN)
NAN_BOXED(14825,16,FLEN)
NAN_BOXED(47593,16,FLEN)
NAN_BOXED(14825,16,FLEN)
NAN_BOXED(47593,16,FLEN)
NAN_BOXED(14825,16,FLEN)
NAN_BOXED(47593,16,FLEN)
NAN_BOXED(14476,16,FLEN)
NAN_BOXED(47244,16,FLEN)
NAN_BOXED(14476,16,FLEN)
NAN_BOXED(47244,16,FLEN)
NAN_BOXED(14476,16,FLEN)
NAN_BOXED(47244,16,FLEN)
NAN_BOXED(14476,16,FLEN)
NAN_BOXED(47244,16,FLEN)
NAN_BOXED(14476,16,FLEN)
NAN_BOXED(47244,16,FLEN)
NAN_BOXED(15229,16,FLEN)
NAN_BOXED(47997,16,FLEN)
NAN_BOXED(15229,16,FLEN)
NAN_BOXED(47997,16,FLEN)
NAN_BOXED(15229,16,FLEN)
NAN_BOXED(47997,16,FLEN)
NAN_BOXED(15229,16,FLEN)
NAN_BOXED(47997,16,FLEN)
NAN_BOXED(15229,16,FLEN)
NAN_BOXED(47997,16,FLEN)
NAN_BOXED(13508,16,FLEN)
NAN_BOXED(46276,16,FLEN)
NAN_BOXED(13508,16,FLEN)
NAN_BOXED(46276,16,FLEN)
NAN_BOXED(13508,16,FLEN)
NAN_BOXED(46276,16,FLEN)
NAN_BOXED(13508,16,FLEN)
NAN_BOXED(46276,16,FLEN)
NAN_BOXED(13508,16,FLEN)
NAN_BOXED(46276,16,FLEN)
NAN_BOXED(14435,16,FLEN)
NAN_BOXED(47203,16,FLEN)
NAN_BOXED(14435,16,FLEN)
NAN_BOXED(47203,16,FLEN)
NAN_BOXED(14435,16,FLEN)
NAN_BOXED(47203,16,FLEN)
NAN_BOXED(14435,16,FLEN)
NAN_BOXED(47203,16,FLEN)
NAN_BOXED(14435,16,FLEN)
NAN_BOXED(47203,16,FLEN)
NAN_BOXED(15116,16,FLEN)
NAN_BOXED(47884,16,FLEN)
NAN_BOXED(15116,16,FLEN)
NAN_BOXED(47884,16,FLEN)
NAN_BOXED(15116,16,FLEN)
NAN_BOXED(47884,16,FLEN)
NAN_BOXED(15116,16,FLEN)
NAN_BOXED(47884,16,FLEN)
NAN_BOXED(15116,16,FLEN)
NAN_BOXED(47884,16,FLEN)
NAN_BOXED(14935,16,FLEN)
NAN_BOXED(47703,16,FLEN)
NAN_BOXED(14935,16,FLEN)
NAN_BOXED(47703,16,FLEN)
NAN_BOXED(14935,16,FLEN)
NAN_BOXED(47703,16,FLEN)
NAN_BOXED(14935,16,FLEN)
NAN_BOXED(47703,16,FLEN)
NAN_BOXED(14935,16,FLEN)
NAN_BOXED(47703,16,FLEN)
NAN_BOXED(10923,16,FLEN)
NAN_BOXED(43689,16,FLEN)
NAN_BOXED(10923,16,FLEN)
NAN_BOXED(43689,16,FLEN)
NAN_BOXED(10923,16,FLEN)
NAN_BOXED(43689,16,FLEN)
NAN_BOXED(10923,16,FLEN)
NAN_BOXED(43689,16,FLEN)
NAN_BOXED(10923,16,FLEN)
NAN_BOXED(43689,16,FLEN)
NAN_BOXED(14585,16,FLEN)
NAN_BOXED(47353,16,FLEN)
NAN_BOXED(14585,16,FLEN)
NAN_BOXED(47353,16,FLEN)
NAN_BOXED(14585,16,FLEN)
NAN_BOXED(47353,16,FLEN)
NAN_BOXED(14585,16,FLEN)
NAN_BOXED(47353,16,FLEN)
NAN_BOXED(14585,16,FLEN)
NAN_BOXED(47353,16,FLEN)
NAN_BOXED(15050,16,FLEN)
NAN_BOXED(47817,16,FLEN)
NAN_BOXED(15050,16,FLEN)
NAN_BOXED(47817,16,FLEN)
NAN_BOXED(15050,16,FLEN)
NAN_BOXED(47817,16,FLEN)
NAN_BOXED(15050,16,FLEN)
NAN_BOXED(47817,16,FLEN)
NAN_BOXED(15050,16,FLEN)
NAN_BOXED(47817,16,FLEN)
NAN_BOXED(9311,16,FLEN)
NAN_BOXED(42074,16,FLEN)
NAN_BOXED(9311,16,FLEN)
NAN_BOXED(42074,16,FLEN)
NAN_BOXED(9311,16,FLEN)
NAN_BOXED(42074,16,FLEN)
NAN_BOXED(9311,16,FLEN)
NAN_BOXED(42074,16,FLEN)
NAN_BOXED(9311,16,FLEN)
NAN_BOXED(42074,16,FLEN)
NAN_BOXED(14528,16,FLEN)
NAN_BOXED(47296,16,FLEN)
NAN_BOXED(14528,16,FLEN)
NAN_BOXED(47296,16,FLEN)
NAN_BOXED(14528,16,FLEN)
NAN_BOXED(47296,16,FLEN)
NAN_BOXED(14528,16,FLEN)
NAN_BOXED(47296,16,FLEN)
NAN_BOXED(14528,16,FLEN)
NAN_BOXED(47296,16,FLEN)
NAN_BOXED(12245,16,FLEN)
NAN_BOXED(45012,16,FLEN)
NAN_BOXED(12245,16,FLEN)
NAN_BOXED(45012,16,FLEN)
NAN_BOXED(12245,16,FLEN)
NAN_BOXED(45012,16,FLEN)
NAN_BOXED(12245,16,FLEN)
NAN_BOXED(45012,16,FLEN)
NAN_BOXED(12245,16,FLEN)
NAN_BOXED(45012,16,FLEN)
NAN_BOXED(11600,16,FLEN)
NAN_BOXED(44367,16,FLEN)
NAN_BOXED(11600,16,FLEN)
NAN_BOXED(44367,16,FLEN)
NAN_BOXED(11600,16,FLEN)
NAN_BOXED(44367,16,FLEN)
NAN_BOXED(11600,16,FLEN)
NAN_BOXED(44367,16,FLEN)
NAN_BOXED(11600,16,FLEN)
NAN_BOXED(44367,16,FLEN)
NAN_BOXED(14339,16,FLEN)
NAN_BOXED(47107,16,FLEN)
NAN_BOXED(14339,16,FLEN)
NAN_BOXED(47107,16,FLEN)
NAN_BOXED(14339,16,FLEN)
NAN_BOXED(47107,16,FLEN)
NAN_BOXED(14339,16,FLEN)
NAN_BOXED(47107,16,FLEN)
NAN_BOXED(14339,16,FLEN)
NAN_BOXED(47107,16,FLEN)
NAN_BOXED(13639,16,FLEN)
NAN_BOXED(46407,16,FLEN)
NAN_BOXED(13639,16,FLEN)
NAN_BOXED(46407,16,FLEN)
NAN_BOXED(13639,16,FLEN)
NAN_BOXED(46407,16,FLEN)
NAN_BOXED(13639,16,FLEN)
NAN_BOXED(46407,16,FLEN)
NAN_BOXED(13639,16,FLEN)
NAN_BOXED(46407,16,FLEN)
NAN_BOXED(13886,16,FLEN)
NAN_BOXED(46654,16,FLEN)
NAN_BOXED(13886,16,FLEN)
NAN_BOXED(46654,16,FLEN)
NAN_BOXED(13886,16,FLEN)
NAN_BOXED(46654,16,FLEN)
NAN_BOXED(13886,16,FLEN)
NAN_BOXED(46654,16,FLEN)
NAN_BOXED(13886,16,FLEN)
NAN_BOXED(46654,16,FLEN)
NAN_BOXED(14663,16,FLEN)
NAN_BOXED(47431,16,FLEN)
NAN_BOXED(14663,16,FLEN)
NAN_BOXED(47431,16,FLEN)
NAN_BOXED(14663,16,FLEN)
NAN_BOXED(47431,16,FLEN)
NAN_BOXED(14663,16,FLEN)
NAN_BOXED(47431,16,FLEN)
NAN_BOXED(14663,16,FLEN)
NAN_BOXED(47431,16,FLEN)
NAN_BOXED(11895,16,FLEN)
NAN_BOXED(44662,16,FLEN)
NAN_BOXED(11895,16,FLEN)
NAN_BOXED(44662,16,FLEN)
NAN_BOXED(11895,16,FLEN)
NAN_BOXED(44662,16,FLEN)
NAN_BOXED(11895,16,FLEN)
NAN_BOXED(44662,16,FLEN)
NAN_BOXED(11895,16,FLEN)
NAN_BOXED(44662,16,FLEN)
NAN_BOXED(15287,16,FLEN)
NAN_BOXED(48055,16,FLEN)
NAN_BOXED(15287,16,FLEN)
NAN_BOXED(48055,16,FLEN)
NAN_BOXED(15287,16,FLEN)
NAN_BOXED(48055,16,FLEN)
NAN_BOXED(15287,16,FLEN)
NAN_BOXED(48055,16,FLEN)
NAN_BOXED(15287,16,FLEN)
NAN_BOXED(48055,16,FLEN)
NAN_BOXED(14833,16,FLEN)
NAN_BOXED(47601,16,FLEN)
NAN_BOXED(14833,16,FLEN)
NAN_BOXED(47601,16,FLEN)
NAN_BOXED(14833,16,FLEN)
NAN_BOXED(47601,16,FLEN)
NAN_BOXED(14833,16,FLEN)
NAN_BOXED(47601,16,FLEN)
NAN_BOXED(14833,16,FLEN)
NAN_BOXED(47601,16,FLEN)
NAN_BOXED(12556,16,FLEN)
NAN_BOXED(45323,16,FLEN)
NAN_BOXED(12556,16,FLEN)
NAN_BOXED(45323,16,FLEN)
NAN_BOXED(12556,16,FLEN)
NAN_BOXED(45323,16,FLEN)
NAN_BOXED(12556,16,FLEN)
NAN_BOXED(45323,16,FLEN)
NAN_BOXED(12556,16,FLEN)
NAN_BOXED(45323,16,FLEN)
NAN_BOXED(13442,16,FLEN)
NAN_BOXED(46210,16,FLEN)
NAN_BOXED(13442,16,FLEN)
NAN_BOXED(46210,16,FLEN)
NAN_BOXED(13442,16,FLEN)
NAN_BOXED(46210,16,FLEN)
NAN_BOXED(13442,16,FLEN)
NAN_BOXED(46210,16,FLEN)
NAN_BOXED(13442,16,FLEN)
NAN_BOXED(46210,16,FLEN)
NAN_BOXED(15224,16,FLEN)
NAN_BOXED(47991,16,FLEN)
NAN_BOXED(15224,16,FLEN)
NAN_BOXED(47991,16,FLEN)
NAN_BOXED(15224,16,FLEN)
NAN_BOXED(47991,16,FLEN)
NAN_BOXED(15224,16,FLEN)
NAN_BOXED(47991,16,FLEN)
NAN_BOXED(15224,16,FLEN)
NAN_BOXED(47991,16,FLEN)
NAN_BOXED(12338,16,FLEN)
NAN_BOXED(45105,16,FLEN)
NAN_BOXED(12338,16,FLEN)
NAN_BOXED(45105,16,FLEN)
NAN_BOXED(12338,16,FLEN)
NAN_BOXED(45105,16,FLEN)
NAN_BOXED(12338,16,FLEN)
NAN_BOXED(45105,16,FLEN)
NAN_BOXED(12338,16,FLEN)
NAN_BOXED(45105,16,FLEN)
NAN_BOXED(14899,16,FLEN)
NAN_BOXED(47666,16,FLEN)
NAN_BOXED(14899,16,FLEN)
NAN_BOXED(47666,16,FLEN)
NAN_BOXED(14899,16,FLEN)
NAN_BOXED(47666,16,FLEN)
NAN_BOXED(14899,16,FLEN)
NAN_BOXED(47666,16,FLEN)
NAN_BOXED(14899,16,FLEN)
NAN_BOXED(47666,16,FLEN)
NAN_BOXED(15328,16,FLEN)
NAN_BOXED(48096,16,FLEN)
NAN_BOXED(15328,16,FLEN)
NAN_BOXED(48096,16,FLEN)
NAN_BOXED(15328,16,FLEN)
NAN_BOXED(48096,16,FLEN)
NAN_BOXED(15328,16,FLEN)
NAN_BOXED(48096,16,FLEN)
NAN_BOXED(15328,16,FLEN)
NAN_BOXED(48096,16,FLEN)
NAN_BOXED(14682,16,FLEN)
NAN_BOXED(47450,16,FLEN)
NAN_BOXED(14682,16,FLEN)
NAN_BOXED(47450,16,FLEN)
NAN_BOXED(14682,16,FLEN)
NAN_BOXED(47450,16,FLEN)
NAN_BOXED(14682,16,FLEN)
NAN_BOXED(47450,16,FLEN)
NAN_BOXED(14682,16,FLEN)
NAN_BOXED(47450,16,FLEN)
NAN_BOXED(15055,16,FLEN)
NAN_BOXED(47823,16,FLEN)
NAN_BOXED(15055,16,FLEN)
NAN_BOXED(47823,16,FLEN)
NAN_BOXED(15055,16,FLEN)
NAN_BOXED(47823,16,FLEN)
NAN_BOXED(15055,16,FLEN)
NAN_BOXED(47823,16,FLEN)
NAN_BOXED(15055,16,FLEN)
NAN_BOXED(47823,16,FLEN)
NAN_BOXED(10247,16,FLEN)
NAN_BOXED(43012,16,FLEN)
NAN_BOXED(10247,16,FLEN)
NAN_BOXED(43012,16,FLEN)
NAN_BOXED(10247,16,FLEN)
NAN_BOXED(43012,16,FLEN)
NAN_BOXED(10247,16,FLEN)
NAN_BOXED(43012,16,FLEN)
NAN_BOXED(10247,16,FLEN)
NAN_BOXED(43012,16,FLEN)
NAN_BOXED(11861,16,FLEN)
NAN_BOXED(44628,16,FLEN)
NAN_BOXED(11861,16,FLEN)
NAN_BOXED(44628,16,FLEN)
NAN_BOXED(11861,16,FLEN)
NAN_BOXED(44628,16,FLEN)
NAN_BOXED(11861,16,FLEN)
NAN_BOXED(44628,16,FLEN)
NAN_BOXED(11861,16,FLEN)
NAN_BOXED(44628,16,FLEN)
NAN_BOXED(14033,16,FLEN)
NAN_BOXED(46801,16,FLEN)
NAN_BOXED(14033,16,FLEN)
NAN_BOXED(46801,16,FLEN)
NAN_BOXED(14033,16,FLEN)
NAN_BOXED(46801,16,FLEN)
NAN_BOXED(14033,16,FLEN)
NAN_BOXED(46801,16,FLEN)
NAN_BOXED(14033,16,FLEN)
NAN_BOXED(46801,16,FLEN)
NAN_BOXED(12860,16,FLEN)
NAN_BOXED(45628,16,FLEN)
NAN_BOXED(12860,16,FLEN)
NAN_BOXED(45628,16,FLEN)
NAN_BOXED(12860,16,FLEN)
NAN_BOXED(45628,16,FLEN)
NAN_BOXED(12860,16,FLEN)
NAN_BOXED(45628,16,FLEN)
NAN_BOXED(12860,16,FLEN)
NAN_BOXED(45628,16,FLEN)
NAN_BOXED(8417,16,FLEN)
NAN_BOXED(41176,16,FLEN)
NAN_BOXED(8417,16,FLEN)
NAN_BOXED(41176,16,FLEN)
NAN_BOXED(8417,16,FLEN)
NAN_BOXED(41176,16,FLEN)
NAN_BOXED(8417,16,FLEN)
NAN_BOXED(41176,16,FLEN)
NAN_BOXED(8417,16,FLEN)
NAN_BOXED(41176,16,FLEN)
NAN_BOXED(11784,16,FLEN)
NAN_BOXED(44551,16,FLEN)
NAN_BOXED(11784,16,FLEN)
NAN_BOXED(44551,16,FLEN)
NAN_BOXED(11784,16,FLEN)
NAN_BOXED(44551,16,FLEN)
NAN_BOXED(11784,16,FLEN)
NAN_BOXED(44551,16,FLEN)
NAN_BOXED(11784,16,FLEN)
NAN_BOXED(44551,16,FLEN)
NAN_BOXED(14191,16,FLEN)
NAN_BOXED(46958,16,FLEN)
NAN_BOXED(14191,16,FLEN)
NAN_BOXED(46958,16,FLEN)
NAN_BOXED(14191,16,FLEN)
NAN_BOXED(46958,16,FLEN)
NAN_BOXED(14191,16,FLEN)
NAN_BOXED(46958,16,FLEN)
NAN_BOXED(14191,16,FLEN)
NAN_BOXED(46958,16,FLEN)
NAN_BOXED(12692,16,FLEN)
NAN_BOXED(45459,16,FLEN)
NAN_BOXED(12692,16,FLEN)
NAN_BOXED(45459,16,FLEN)
NAN_BOXED(12692,16,FLEN)
NAN_BOXED(45459,16,FLEN)
NAN_BOXED(12692,16,FLEN)
NAN_BOXED(45459,16,FLEN)
NAN_BOXED(12692,16,FLEN)
NAN_BOXED(45459,16,FLEN)
NAN_BOXED(12976,16,FLEN)
NAN_BOXED(45743,16,FLEN)
NAN_BOXED(12976,16,FLEN)
NAN_BOXED(45743,16,FLEN)
NAN_BOXED(12976,16,FLEN)
NAN_BOXED(45743,16,FLEN)
NAN_BOXED(12976,16,FLEN)
NAN_BOXED(45743,16,FLEN)
NAN_BOXED(12976,16,FLEN)
NAN_BOXED(45743,16,FLEN)
NAN_BOXED(13982,16,FLEN)
NAN_BOXED(46750,16,FLEN)
NAN_BOXED(13982,16,FLEN)
NAN_BOXED(46750,16,FLEN)
NAN_BOXED(13982,16,FLEN)
NAN_BOXED(46750,16,FLEN)
NAN_BOXED(13982,16,FLEN)
NAN_BOXED(46750,16,FLEN)
NAN_BOXED(13982,16,FLEN)
NAN_BOXED(46750,16,FLEN)
NAN_BOXED(12918,16,FLEN)
NAN_BOXED(45686,16,FLEN)
NAN_BOXED(12918,16,FLEN)
NAN_BOXED(45686,16,FLEN)
NAN_BOXED(12918,16,FLEN)
NAN_BOXED(45686,16,FLEN)
NAN_BOXED(12918,16,FLEN)
NAN_BOXED(45686,16,FLEN)
NAN_BOXED(12918,16,FLEN)
NAN_BOXED(45686,16,FLEN)
NAN_BOXED(15359,16,FLEN)
NAN_BOXED(48127,16,FLEN)
NAN_BOXED(15359,16,FLEN)
NAN_BOXED(48127,16,FLEN)
NAN_BOXED(15359,16,FLEN)
NAN_BOXED(48127,16,FLEN)
NAN_BOXED(15359,16,FLEN)
NAN_BOXED(48127,16,FLEN)
NAN_BOXED(15359,16,FLEN)
NAN_BOXED(48127,16,FLEN)
NAN_BOXED(14308,16,FLEN)
NAN_BOXED(47075,16,FLEN)
NAN_BOXED(14308,16,FLEN)
NAN_BOXED(47075,16,FLEN)
NAN_BOXED(14308,16,FLEN)
NAN_BOXED(47075,16,FLEN)
NAN_BOXED(14308,16,FLEN)
NAN_BOXED(47075,16,FLEN)
NAN_BOXED(14308,16,FLEN)
NAN_BOXED(47075,16,FLEN)
NAN_BOXED(11087,16,FLEN)
NAN_BOXED(43853,16,FLEN)
NAN_BOXED(11087,16,FLEN)
NAN_BOXED(43853,16,FLEN)
NAN_BOXED(11087,16,FLEN)
NAN_BOXED(43853,16,FLEN)
NAN_BOXED(11087,16,FLEN)
NAN_BOXED(43853,16,FLEN)
NAN_BOXED(11087,16,FLEN)
NAN_BOXED(43853,16,FLEN)
NAN_BOXED(14524,16,FLEN)
NAN_BOXED(47292,16,FLEN)
NAN_BOXED(14524,16,FLEN)
NAN_BOXED(47292,16,FLEN)
NAN_BOXED(14524,16,FLEN)
NAN_BOXED(47292,16,FLEN)
NAN_BOXED(14524,16,FLEN)
NAN_BOXED(47292,16,FLEN)
NAN_BOXED(14524,16,FLEN)
NAN_BOXED(47292,16,FLEN)
NAN_BOXED(15232,16,FLEN)
NAN_BOXED(48000,16,FLEN)
NAN_BOXED(15232,16,FLEN)
NAN_BOXED(48000,16,FLEN)
NAN_BOXED(15232,16,FLEN)
NAN_BOXED(48000,16,FLEN)
NAN_BOXED(15232,16,FLEN)
NAN_BOXED(48000,16,FLEN)
NAN_BOXED(15232,16,FLEN)
NAN_BOXED(48000,16,FLEN)
NAN_BOXED(15099,16,FLEN)
NAN_BOXED(47867,16,FLEN)
NAN_BOXED(15099,16,FLEN)
NAN_BOXED(47867,16,FLEN)
NAN_BOXED(15099,16,FLEN)
NAN_BOXED(47867,16,FLEN)
NAN_BOXED(15099,16,FLEN)
NAN_BOXED(47867,16,FLEN)
NAN_BOXED(15099,16,FLEN)
NAN_BOXED(47867,16,FLEN)
NAN_BOXED(12657,16,FLEN)
NAN_BOXED(45425,16,FLEN)
NAN_BOXED(12657,16,FLEN)
NAN_BOXED(45425,16,FLEN)
NAN_BOXED(12657,16,FLEN)
NAN_BOXED(45425,16,FLEN)
NAN_BOXED(12657,16,FLEN)
NAN_BOXED(45425,16,FLEN)
NAN_BOXED(12657,16,FLEN)
NAN_BOXED(45425,16,FLEN)
NAN_BOXED(15286,16,FLEN)
NAN_BOXED(48054,16,FLEN)
NAN_BOXED(15286,16,FLEN)
NAN_BOXED(48054,16,FLEN)
NAN_BOXED(15286,16,FLEN)
NAN_BOXED(48054,16,FLEN)
NAN_BOXED(15286,16,FLEN)
NAN_BOXED(48054,16,FLEN)
NAN_BOXED(15286,16,FLEN)
NAN_BOXED(48054,16,FLEN)
NAN_BOXED(14352,16,FLEN)
NAN_BOXED(47120,16,FLEN)
NAN_BOXED(14352,16,FLEN)
NAN_BOXED(47120,16,FLEN)
NAN_BOXED(14352,16,FLEN)
NAN_BOXED(47120,16,FLEN)
NAN_BOXED(14352,16,FLEN)
NAN_BOXED(47120,16,FLEN)
NAN_BOXED(14352,16,FLEN)
NAN_BOXED(47120,16,FLEN)
NAN_BOXED(13446,16,FLEN)
NAN_BOXED(46214,16,FLEN)
NAN_BOXED(13446,16,FLEN)
NAN_BOXED(46214,16,FLEN)
NAN_BOXED(13446,16,FLEN)
NAN_BOXED(46214,16,FLEN)
NAN_BOXED(13446,16,FLEN)
NAN_BOXED(46214,16,FLEN)
NAN_BOXED(13446,16,FLEN)
NAN_BOXED(46214,16,FLEN)
NAN_BOXED(14518,16,FLEN)
NAN_BOXED(47285,16,FLEN)
NAN_BOXED(14518,16,FLEN)
NAN_BOXED(47285,16,FLEN)
NAN_BOXED(14518,16,FLEN)
NAN_BOXED(47285,16,FLEN)
NAN_BOXED(14518,16,FLEN)
NAN_BOXED(47285,16,FLEN)
NAN_BOXED(14518,16,FLEN)
NAN_BOXED(47285,16,FLEN)
NAN_BOXED(14568,16,FLEN)
NAN_BOXED(47335,16,FLEN)
NAN_BOXED(14568,16,FLEN)
NAN_BOXED(47335,16,FLEN)
NAN_BOXED(14568,16,FLEN)
NAN_BOXED(47335,16,FLEN)
NAN_BOXED(14568,16,FLEN)
NAN_BOXED(47335,16,FLEN)
NAN_BOXED(14568,16,FLEN)
NAN_BOXED(47335,16,FLEN)
NAN_BOXED(14395,16,FLEN)
NAN_BOXED(47163,16,FLEN)
NAN_BOXED(14395,16,FLEN)
NAN_BOXED(47163,16,FLEN)
NAN_BOXED(14395,16,FLEN)
NAN_BOXED(47163,16,FLEN)
NAN_BOXED(14395,16,FLEN)
NAN_BOXED(47163,16,FLEN)
NAN_BOXED(14395,16,FLEN)
NAN_BOXED(47163,16,FLEN)
NAN_BOXED(15293,16,FLEN)
NAN_BOXED(48061,16,FLEN)
NAN_BOXED(15293,16,FLEN)
NAN_BOXED(48061,16,FLEN)
NAN_BOXED(15293,16,FLEN)
NAN_BOXED(48061,16,FLEN)
NAN_BOXED(15293,16,FLEN)
NAN_BOXED(48061,16,FLEN)
NAN_BOXED(15293,16,FLEN)
NAN_BOXED(48061,16,FLEN)
NAN_BOXED(13803,16,FLEN)
NAN_BOXED(46571,16,FLEN)
NAN_BOXED(13803,16,FLEN)
NAN_BOXED(46571,16,FLEN)
NAN_BOXED(13803,16,FLEN)
NAN_BOXED(46571,16,FLEN)
NAN_BOXED(13803,16,FLEN)
NAN_BOXED(46571,16,FLEN)
NAN_BOXED(13803,16,FLEN)
NAN_BOXED(46571,16,FLEN)
NAN_BOXED(14134,16,FLEN)
NAN_BOXED(46902,16,FLEN)
NAN_BOXED(14134,16,FLEN)
NAN_BOXED(46902,16,FLEN)
NAN_BOXED(14134,16,FLEN)
NAN_BOXED(46902,16,FLEN)
NAN_BOXED(14134,16,FLEN)
NAN_BOXED(46902,16,FLEN)
NAN_BOXED(14134,16,FLEN)
NAN_BOXED(46902,16,FLEN)
NAN_BOXED(14574,16,FLEN)
NAN_BOXED(47342,16,FLEN)
NAN_BOXED(14574,16,FLEN)
NAN_BOXED(47342,16,FLEN)
NAN_BOXED(14574,16,FLEN)
NAN_BOXED(47342,16,FLEN)
NAN_BOXED(14574,16,FLEN)
NAN_BOXED(47342,16,FLEN)
NAN_BOXED(14574,16,FLEN)
NAN_BOXED(47342,16,FLEN)
NAN_BOXED(14355,16,FLEN)
NAN_BOXED(47123,16,FLEN)
NAN_BOXED(14355,16,FLEN)
NAN_BOXED(47123,16,FLEN)
NAN_BOXED(14355,16,FLEN)
NAN_BOXED(47123,16,FLEN)
NAN_BOXED(14355,16,FLEN)
NAN_BOXED(47123,16,FLEN)
NAN_BOXED(14355,16,FLEN)
NAN_BOXED(47123,16,FLEN)
NAN_BOXED(13885,16,FLEN)
NAN_BOXED(46652,16,FLEN)
NAN_BOXED(13885,16,FLEN)
NAN_BOXED(46652,16,FLEN)
NAN_BOXED(13885,16,FLEN)
NAN_BOXED(46652,16,FLEN)
NAN_BOXED(13885,16,FLEN)
NAN_BOXED(46652,16,FLEN)
NAN_BOXED(13885,16,FLEN)
NAN_BOXED(46652,16,FLEN)
NAN_BOXED(13794,16,FLEN)
NAN_BOXED(46561,16,FLEN)
NAN_BOXED(13794,16,FLEN)
NAN_BOXED(46561,16,FLEN)
NAN_BOXED(13794,16,FLEN)
NAN_BOXED(46561,16,FLEN)
NAN_BOXED(13794,16,FLEN)
NAN_BOXED(46561,16,FLEN)
NAN_BOXED(13794,16,FLEN)
NAN_BOXED(46561,16,FLEN)
NAN_BOXED(15105,16,FLEN)
NAN_BOXED(47873,16,FLEN)
NAN_BOXED(15105,16,FLEN)
NAN_BOXED(47873,16,FLEN)
NAN_BOXED(15105,16,FLEN)
NAN_BOXED(47873,16,FLEN)
NAN_BOXED(15105,16,FLEN)
NAN_BOXED(47873,16,FLEN)
NAN_BOXED(15105,16,FLEN)
NAN_BOXED(47873,16,FLEN)
NAN_BOXED(13836,16,FLEN)
NAN_BOXED(46604,16,FLEN)
NAN_BOXED(13836,16,FLEN)
NAN_BOXED(46604,16,FLEN)
NAN_BOXED(13836,16,FLEN)
NAN_BOXED(46604,16,FLEN)
NAN_BOXED(13836,16,FLEN)
NAN_BOXED(46604,16,FLEN)
NAN_BOXED(13836,16,FLEN)
NAN_BOXED(46604,16,FLEN)
NAN_BOXED(12908,16,FLEN)
NAN_BOXED(45675,16,FLEN)
NAN_BOXED(12908,16,FLEN)
NAN_BOXED(45675,16,FLEN)
NAN_BOXED(12908,16,FLEN)
NAN_BOXED(45675,16,FLEN)
NAN_BOXED(12908,16,FLEN)
NAN_BOXED(45675,16,FLEN)
NAN_BOXED(12908,16,FLEN)
NAN_BOXED(45675,16,FLEN)
NAN_BOXED(12308,16,FLEN)
NAN_BOXED(45076,16,FLEN)
NAN_BOXED(12308,16,FLEN)
NAN_BOXED(45076,16,FLEN)
NAN_BOXED(12308,16,FLEN)
NAN_BOXED(45076,16,FLEN)
NAN_BOXED(12308,16,FLEN)
NAN_BOXED(45076,16,FLEN)
NAN_BOXED(12308,16,FLEN)
NAN_BOXED(45076,16,FLEN)
NAN_BOXED(13021,16,FLEN)
NAN_BOXED(45789,16,FLEN)
NAN_BOXED(13021,16,FLEN)
NAN_BOXED(45789,16,FLEN)
NAN_BOXED(13021,16,FLEN)
NAN_BOXED(45789,16,FLEN)
NAN_BOXED(13021,16,FLEN)
NAN_BOXED(45789,16,FLEN)
NAN_BOXED(13021,16,FLEN)
NAN_BOXED(45789,16,FLEN)
NAN_BOXED(13049,16,FLEN)
NAN_BOXED(45816,16,FLEN)
NAN_BOXED(13049,16,FLEN)
NAN_BOXED(45816,16,FLEN)
NAN_BOXED(13049,16,FLEN)
NAN_BOXED(45816,16,FLEN)
NAN_BOXED(13049,16,FLEN)
NAN_BOXED(45816,16,FLEN)
NAN_BOXED(13049,16,FLEN)
NAN_BOXED(45816,16,FLEN)
NAN_BOXED(13258,16,FLEN)
NAN_BOXED(46025,16,FLEN)
NAN_BOXED(13258,16,FLEN)
NAN_BOXED(46025,16,FLEN)
NAN_BOXED(13258,16,FLEN)
NAN_BOXED(46025,16,FLEN)
NAN_BOXED(13258,16,FLEN)
NAN_BOXED(46025,16,FLEN)
NAN_BOXED(13258,16,FLEN)
NAN_BOXED(46025,16,FLEN)
NAN_BOXED(12988,16,FLEN)
NAN_BOXED(45755,16,FLEN)
NAN_BOXED(12988,16,FLEN)
NAN_BOXED(45755,16,FLEN)
NAN_BOXED(12988,16,FLEN)
NAN_BOXED(45755,16,FLEN)
NAN_BOXED(12988,16,FLEN)
NAN_BOXED(45755,16,FLEN)
NAN_BOXED(12988,16,FLEN)
NAN_BOXED(45755,16,FLEN)
NAN_BOXED(15268,16,FLEN)
NAN_BOXED(48036,16,FLEN)
NAN_BOXED(15268,16,FLEN)
NAN_BOXED(48036,16,FLEN)
NAN_BOXED(15268,16,FLEN)
NAN_BOXED(48036,16,FLEN)
NAN_BOXED(15268,16,FLEN)
NAN_BOXED(48036,16,FLEN)
NAN_BOXED(15268,16,FLEN)
NAN_BOXED(48036,16,FLEN)
NAN_BOXED(14364,16,FLEN)
NAN_BOXED(47132,16,FLEN)
NAN_BOXED(14364,16,FLEN)
NAN_BOXED(47132,16,FLEN)
NAN_BOXED(14364,16,FLEN)
NAN_BOXED(47132,16,FLEN)
NAN_BOXED(14364,16,FLEN)
NAN_BOXED(47132,16,FLEN)
NAN_BOXED(14364,16,FLEN)
NAN_BOXED(47132,16,FLEN)
NAN_BOXED(11027,16,FLEN)
NAN_BOXED(43793,16,FLEN)
NAN_BOXED(11027,16,FLEN)
NAN_BOXED(43793,16,FLEN)
NAN_BOXED(11027,16,FLEN)
NAN_BOXED(43793,16,FLEN)
NAN_BOXED(11027,16,FLEN)
NAN_BOXED(43793,16,FLEN)
NAN_BOXED(11027,16,FLEN)
NAN_BOXED(43793,16,FLEN)
NAN_BOXED(14042,16,FLEN)
NAN_BOXED(46809,16,FLEN)
NAN_BOXED(14042,16,FLEN)
NAN_BOXED(46809,16,FLEN)
NAN_BOXED(14042,16,FLEN)
NAN_BOXED(46809,16,FLEN)
NAN_BOXED(14042,16,FLEN)
NAN_BOXED(46809,16,FLEN)
NAN_BOXED(14042,16,FLEN)
NAN_BOXED(46809,16,FLEN)
NAN_BOXED(15168,16,FLEN)
NAN_BOXED(47936,16,FLEN)
NAN_BOXED(15168,16,FLEN)
NAN_BOXED(47936,16,FLEN)
NAN_BOXED(15168,16,FLEN)
NAN_BOXED(47936,16,FLEN)
NAN_BOXED(15168,16,FLEN)
NAN_BOXED(47936,16,FLEN)
NAN_BOXED(15168,16,FLEN)
NAN_BOXED(47936,16,FLEN)
NAN_BOXED(12063,16,FLEN)
NAN_BOXED(44830,16,FLEN)
NAN_BOXED(12063,16,FLEN)
NAN_BOXED(44830,16,FLEN)
NAN_BOXED(12063,16,FLEN)
NAN_BOXED(44830,16,FLEN)
NAN_BOXED(12063,16,FLEN)
NAN_BOXED(44830,16,FLEN)
NAN_BOXED(12063,16,FLEN)
NAN_BOXED(44830,16,FLEN)
NAN_BOXED(13523,16,FLEN)
NAN_BOXED(46290,16,FLEN)
NAN_BOXED(13523,16,FLEN)
NAN_BOXED(46290,16,FLEN)
NAN_BOXED(13523,16,FLEN)
NAN_BOXED(46290,16,FLEN)
NAN_BOXED(13523,16,FLEN)
NAN_BOXED(46290,16,FLEN)
NAN_BOXED(13523,16,FLEN)
NAN_BOXED(46290,16,FLEN)
NAN_BOXED(14734,16,FLEN)
NAN_BOXED(47502,16,FLEN)
NAN_BOXED(14734,16,FLEN)
NAN_BOXED(47502,16,FLEN)
NAN_BOXED(14734,16,FLEN)
NAN_BOXED(47502,16,FLEN)
NAN_BOXED(14734,16,FLEN)
NAN_BOXED(47502,16,FLEN)
NAN_BOXED(14734,16,FLEN)
NAN_BOXED(47502,16,FLEN)
NAN_BOXED(14487,16,FLEN)
NAN_BOXED(47255,16,FLEN)
NAN_BOXED(14487,16,FLEN)
NAN_BOXED(47255,16,FLEN)
NAN_BOXED(14487,16,FLEN)
NAN_BOXED(47255,16,FLEN)
NAN_BOXED(14487,16,FLEN)
NAN_BOXED(47255,16,FLEN)
NAN_BOXED(14487,16,FLEN)
NAN_BOXED(47255,16,FLEN)
NAN_BOXED(11504,16,FLEN)
NAN_BOXED(44271,16,FLEN)
NAN_BOXED(11504,16,FLEN)
NAN_BOXED(44271,16,FLEN)
NAN_BOXED(11504,16,FLEN)
NAN_BOXED(44271,16,FLEN)
NAN_BOXED(11504,16,FLEN)
NAN_BOXED(44271,16,FLEN)
NAN_BOXED(11504,16,FLEN)
NAN_BOXED(44271,16,FLEN)
NAN_BOXED(14508,16,FLEN)
NAN_BOXED(47276,16,FLEN)
NAN_BOXED(14508,16,FLEN)
NAN_BOXED(47276,16,FLEN)
NAN_BOXED(14508,16,FLEN)
NAN_BOXED(47276,16,FLEN)
NAN_BOXED(14508,16,FLEN)
NAN_BOXED(47276,16,FLEN)
NAN_BOXED(14508,16,FLEN)
NAN_BOXED(47276,16,FLEN)
NAN_BOXED(13117,16,FLEN)
NAN_BOXED(45884,16,FLEN)
NAN_BOXED(13117,16,FLEN)
NAN_BOXED(45884,16,FLEN)
NAN_BOXED(13117,16,FLEN)
NAN_BOXED(45884,16,FLEN)
NAN_BOXED(13117,16,FLEN)
NAN_BOXED(45884,16,FLEN)
NAN_BOXED(13117,16,FLEN)
NAN_BOXED(45884,16,FLEN)
NAN_BOXED(15297,16,FLEN)
NAN_BOXED(48064,16,FLEN)
NAN_BOXED(15297,16,FLEN)
NAN_BOXED(48064,16,FLEN)
NAN_BOXED(15297,16,FLEN)
NAN_BOXED(48064,16,FLEN)
NAN_BOXED(15297,16,FLEN)
NAN_BOXED(48064,16,FLEN)
NAN_BOXED(15297,16,FLEN)
NAN_BOXED(48064,16,FLEN)
NAN_BOXED(13572,16,FLEN)
NAN_BOXED(46340,16,FLEN)
NAN_BOXED(13572,16,FLEN)
NAN_BOXED(46340,16,FLEN)
NAN_BOXED(13572,16,FLEN)
NAN_BOXED(46340,16,FLEN)
NAN_BOXED(13572,16,FLEN)
NAN_BOXED(46340,16,FLEN)
NAN_BOXED(13572,16,FLEN)
NAN_BOXED(46340,16,FLEN)
NAN_BOXED(11563,16,FLEN)
NAN_BOXED(44330,16,FLEN)
NAN_BOXED(11563,16,FLEN)
NAN_BOXED(44330,16,FLEN)
NAN_BOXED(11563,16,FLEN)
NAN_BOXED(44330,16,FLEN)
NAN_BOXED(11563,16,FLEN)
NAN_BOXED(44330,16,FLEN)
NAN_BOXED(11563,16,FLEN)
NAN_BOXED(44330,16,FLEN)
NAN_BOXED(13424,16,FLEN)
NAN_BOXED(46192,16,FLEN)
NAN_BOXED(13424,16,FLEN)
NAN_BOXED(46192,16,FLEN)
NAN_BOXED(13424,16,FLEN)
NAN_BOXED(46192,16,FLEN)
NAN_BOXED(13424,16,FLEN)
NAN_BOXED(46192,16,FLEN)
NAN_BOXED(13424,16,FLEN)
NAN_BOXED(46192,16,FLEN)
NAN_BOXED(15215,16,FLEN)
NAN_BOXED(47983,16,FLEN)
NAN_BOXED(15215,16,FLEN)
NAN_BOXED(47983,16,FLEN)
NAN_BOXED(15215,16,FLEN)
NAN_BOXED(47983,16,FLEN)
NAN_BOXED(15215,16,FLEN)
NAN_BOXED(47983,16,FLEN)
NAN_BOXED(15215,16,FLEN)
NAN_BOXED(47983,16,FLEN)
NAN_BOXED(15299,16,FLEN)
NAN_BOXED(48067,16,FLEN)
NAN_BOXED(15299,16,FLEN)
NAN_BOXED(48067,16,FLEN)
NAN_BOXED(15299,16,FLEN)
NAN_BOXED(48067,16,FLEN)
NAN_BOXED(15299,16,FLEN)
NAN_BOXED(48067,16,FLEN)
NAN_BOXED(15299,16,FLEN)
NAN_BOXED(48067,16,FLEN)
NAN_BOXED(15339,16,FLEN)
NAN_BOXED(48107,16,FLEN)
NAN_BOXED(15339,16,FLEN)
NAN_BOXED(48107,16,FLEN)
NAN_BOXED(15339,16,FLEN)
NAN_BOXED(48107,16,FLEN)
NAN_BOXED(15339,16,FLEN)
NAN_BOXED(48107,16,FLEN)
NAN_BOXED(15339,16,FLEN)
NAN_BOXED(48107,16,FLEN)
NAN_BOXED(21139,16,FLEN)
NAN_BOXED(18867,16,FLEN)
NAN_BOXED(21139,16,FLEN)
NAN_BOXED(18867,16,FLEN)
NAN_BOXED(21139,16,FLEN)
NAN_BOXED(18867,16,FLEN)
NAN_BOXED(21139,16,FLEN)
NAN_BOXED(18867,16,FLEN)
NAN_BOXED(21139,16,FLEN)
NAN_BOXED(18867,16,FLEN)
NAN_BOXED(21289,16,FLEN)
NAN_BOXED(18102,16,FLEN)
NAN_BOXED(21289,16,FLEN)
NAN_BOXED(18102,16,FLEN)
NAN_BOXED(21289,16,FLEN)
NAN_BOXED(18102,16,FLEN)
NAN_BOXED(21289,16,FLEN)
NAN_BOXED(18102,16,FLEN)
NAN_BOXED(21289,16,FLEN)
NAN_BOXED(18102,16,FLEN)
NAN_BOXED(19187,16,FLEN)
NAN_BOXED(21059,16,FLEN)
NAN_BOXED(19187,16,FLEN)
NAN_BOXED(21059,16,FLEN)
NAN_BOXED(19187,16,FLEN)
NAN_BOXED(21059,16,FLEN)
NAN_BOXED(19187,16,FLEN)
NAN_BOXED(21059,16,FLEN)
NAN_BOXED(19187,16,FLEN)
NAN_BOXED(21059,16,FLEN)
NAN_BOXED(21379,16,FLEN)
NAN_BOXED(17351,16,FLEN)
NAN_BOXED(21379,16,FLEN)
NAN_BOXED(17351,16,FLEN)
NAN_BOXED(21379,16,FLEN)
NAN_BOXED(17351,16,FLEN)
NAN_BOXED(21379,16,FLEN)
NAN_BOXED(17351,16,FLEN)
NAN_BOXED(21379,16,FLEN)
NAN_BOXED(17351,16,FLEN)
NAN_BOXED(15823,16,FLEN)
NAN_BOXED(21457,16,FLEN)
NAN_BOXED(15823,16,FLEN)
NAN_BOXED(21457,16,FLEN)
NAN_BOXED(15823,16,FLEN)
NAN_BOXED(21457,16,FLEN)
NAN_BOXED(15823,16,FLEN)
NAN_BOXED(21457,16,FLEN)
NAN_BOXED(15823,16,FLEN)
NAN_BOXED(21457,16,FLEN)
NAN_BOXED(16667,16,FLEN)
NAN_BOXED(21422,16,FLEN)
NAN_BOXED(16667,16,FLEN)
NAN_BOXED(21422,16,FLEN)
NAN_BOXED(16667,16,FLEN)
NAN_BOXED(21422,16,FLEN)
NAN_BOXED(16667,16,FLEN)
NAN_BOXED(21422,16,FLEN)
NAN_BOXED(16667,16,FLEN)
NAN_BOXED(21422,16,FLEN)
NAN_BOXED(21220,16,FLEN)
NAN_BOXED(18543,16,FLEN)
NAN_BOXED(21220,16,FLEN)
NAN_BOXED(18543,16,FLEN)
NAN_BOXED(21220,16,FLEN)
NAN_BOXED(18543,16,FLEN)
NAN_BOXED(21220,16,FLEN)
NAN_BOXED(18543,16,FLEN)
NAN_BOXED(21220,16,FLEN)
NAN_BOXED(18543,16,FLEN)
NAN_BOXED(18442,16,FLEN)
NAN_BOXED(21245,16,FLEN)
NAN_BOXED(18442,16,FLEN)
NAN_BOXED(21245,16,FLEN)
NAN_BOXED(18442,16,FLEN)
NAN_BOXED(21245,16,FLEN)
NAN_BOXED(18442,16,FLEN)
NAN_BOXED(21245,16,FLEN)
NAN_BOXED(18442,16,FLEN)
NAN_BOXED(21245,16,FLEN)
NAN_BOXED(21421,16,FLEN)
NAN_BOXED(16677,16,FLEN)
NAN_BOXED(21421,16,FLEN)
NAN_BOXED(16677,16,FLEN)
NAN_BOXED(21421,16,FLEN)
NAN_BOXED(16677,16,FLEN)
NAN_BOXED(21421,16,FLEN)
NAN_BOXED(16677,16,FLEN)
NAN_BOXED(21421,16,FLEN)
NAN_BOXED(16677,16,FLEN)
NAN_BOXED(21436,16,FLEN)
NAN_BOXED(16440,16,FLEN)
NAN_BOXED(21436,16,FLEN)
NAN_BOXED(16440,16,FLEN)
NAN_BOXED(21436,16,FLEN)
NAN_BOXED(16440,16,FLEN)
NAN_BOXED(21436,16,FLEN)
NAN_BOXED(16440,16,FLEN)
NAN_BOXED(21436,16,FLEN)
NAN_BOXED(16440,16,FLEN)
NAN_BOXED(20404,16,FLEN)
NAN_BOXED(20517,16,FLEN)
NAN_BOXED(20404,16,FLEN)
NAN_BOXED(20517,16,FLEN)
NAN_BOXED(20404,16,FLEN)
NAN_BOXED(20517,16,FLEN)
NAN_BOXED(20404,16,FLEN)
NAN_BOXED(20517,16,FLEN)
NAN_BOXED(20404,16,FLEN)
NAN_BOXED(20517,16,FLEN)
NAN_BOXED(21377,16,FLEN)
NAN_BOXED(17388,16,FLEN)
NAN_BOXED(21377,16,FLEN)
NAN_BOXED(17388,16,FLEN)
NAN_BOXED(21377,16,FLEN)
NAN_BOXED(17388,16,FLEN)
NAN_BOXED(21377,16,FLEN)
NAN_BOXED(17388,16,FLEN)
NAN_BOXED(21377,16,FLEN)
NAN_BOXED(17388,16,FLEN)
NAN_BOXED(20770,16,FLEN)
NAN_BOXED(19900,16,FLEN)
NAN_BOXED(20770,16,FLEN)
NAN_BOXED(19900,16,FLEN)
NAN_BOXED(20770,16,FLEN)
NAN_BOXED(19900,16,FLEN)
NAN_BOXED(20770,16,FLEN)
NAN_BOXED(19900,16,FLEN)
NAN_BOXED(20770,16,FLEN)
NAN_BOXED(19900,16,FLEN)
NAN_BOXED(21490,16,FLEN)
NAN_BOXED(14107,16,FLEN)
NAN_BOXED(21490,16,FLEN)
NAN_BOXED(14107,16,FLEN)
NAN_BOXED(21490,16,FLEN)
NAN_BOXED(14107,16,FLEN)
NAN_BOXED(21490,16,FLEN)
NAN_BOXED(14107,16,FLEN)
NAN_BOXED(21490,16,FLEN)
NAN_BOXED(14107,16,FLEN)
NAN_BOXED(20659,16,FLEN)
NAN_BOXED(20122,16,FLEN)
NAN_BOXED(20659,16,FLEN)
NAN_BOXED(20122,16,FLEN)
NAN_BOXED(20659,16,FLEN)
NAN_BOXED(20122,16,FLEN)
NAN_BOXED(20659,16,FLEN)
NAN_BOXED(20122,16,FLEN)
NAN_BOXED(20659,16,FLEN)
NAN_BOXED(20122,16,FLEN)
NAN_BOXED(21297,16,FLEN)
NAN_BOXED(18034,16,FLEN)
NAN_BOXED(21297,16,FLEN)
NAN_BOXED(18034,16,FLEN)
NAN_BOXED(21297,16,FLEN)
NAN_BOXED(18034,16,FLEN)
NAN_BOXED(21297,16,FLEN)
NAN_BOXED(18034,16,FLEN)
NAN_BOXED(21297,16,FLEN)
NAN_BOXED(18034,16,FLEN)
NAN_BOXED(21109,16,FLEN)
NAN_BOXED(18985,16,FLEN)
NAN_BOXED(21109,16,FLEN)
NAN_BOXED(18985,16,FLEN)
NAN_BOXED(21109,16,FLEN)
NAN_BOXED(18985,16,FLEN)
NAN_BOXED(21109,16,FLEN)
NAN_BOXED(18985,16,FLEN)
NAN_BOXED(21109,16,FLEN)
NAN_BOXED(18985,16,FLEN)
NAN_BOXED(19475,16,FLEN)
NAN_BOXED(20982,16,FLEN)
NAN_BOXED(19475,16,FLEN)
NAN_BOXED(20982,16,FLEN)
NAN_BOXED(19475,16,FLEN)
NAN_BOXED(20982,16,FLEN)
NAN_BOXED(19475,16,FLEN)
NAN_BOXED(20982,16,FLEN)
NAN_BOXED(19475,16,FLEN)
NAN_BOXED(20982,16,FLEN)
NAN_BOXED(19669,16,FLEN)
NAN_BOXED(20885,16,FLEN)
NAN_BOXED(19669,16,FLEN)
NAN_BOXED(20885,16,FLEN)
NAN_BOXED(19669,16,FLEN)
NAN_BOXED(20885,16,FLEN)
NAN_BOXED(19669,16,FLEN)
NAN_BOXED(20885,16,FLEN)
NAN_BOXED(19669,16,FLEN)
NAN_BOXED(20885,16,FLEN)
NAN_BOXED(17364,16,FLEN)
NAN_BOXED(21378,16,FLEN)
NAN_BOXED(17364,16,FLEN)
NAN_BOXED(21378,16,FLEN)
NAN_BOXED(17364,16,FLEN)
NAN_BOXED(21378,16,FLEN)
NAN_BOXED(17364,16,FLEN)
NAN_BOXED(21378,16,FLEN)
NAN_BOXED(17364,16,FLEN)
NAN_BOXED(21378,16,FLEN)
NAN_BOXED(16534,16,FLEN)
NAN_BOXED(21430,16,FLEN)
NAN_BOXED(16534,16,FLEN)
NAN_BOXED(21430,16,FLEN)
NAN_BOXED(16534,16,FLEN)
NAN_BOXED(21430,16,FLEN)
NAN_BOXED(16534,16,FLEN)
NAN_BOXED(21430,16,FLEN)
NAN_BOXED(16534,16,FLEN)
NAN_BOXED(21430,16,FLEN)
NAN_BOXED(17820,16,FLEN)
NAN_BOXED(21324,16,FLEN)
NAN_BOXED(17820,16,FLEN)
NAN_BOXED(21324,16,FLEN)
NAN_BOXED(17820,16,FLEN)
NAN_BOXED(21324,16,FLEN)
NAN_BOXED(17820,16,FLEN)
NAN_BOXED(21324,16,FLEN)
NAN_BOXED(17820,16,FLEN)
NAN_BOXED(21324,16,FLEN)
NAN_BOXED(20598,16,FLEN)
NAN_BOXED(20243,16,FLEN)
NAN_BOXED(20598,16,FLEN)
NAN_BOXED(20243,16,FLEN)
NAN_BOXED(20598,16,FLEN)
NAN_BOXED(20243,16,FLEN)
NAN_BOXED(20598,16,FLEN)
NAN_BOXED(20243,16,FLEN)
NAN_BOXED(20598,16,FLEN)
NAN_BOXED(20243,16,FLEN)
NAN_BOXED(18683,16,FLEN)
NAN_BOXED(21185,16,FLEN)
NAN_BOXED(18683,16,FLEN)
NAN_BOXED(21185,16,FLEN)
NAN_BOXED(18683,16,FLEN)
NAN_BOXED(21185,16,FLEN)
NAN_BOXED(18683,16,FLEN)
NAN_BOXED(21185,16,FLEN)
NAN_BOXED(18683,16,FLEN)
NAN_BOXED(21185,16,FLEN)
NAN_BOXED(20772,16,FLEN)
NAN_BOXED(19896,16,FLEN)
NAN_BOXED(20772,16,FLEN)
NAN_BOXED(19896,16,FLEN)
NAN_BOXED(20772,16,FLEN)
NAN_BOXED(19896,16,FLEN)
NAN_BOXED(20772,16,FLEN)
NAN_BOXED(19896,16,FLEN)
NAN_BOXED(20772,16,FLEN)
NAN_BOXED(19896,16,FLEN)
NAN_BOXED(20289,16,FLEN)
NAN_BOXED(20575,16,FLEN)
NAN_BOXED(20289,16,FLEN)
NAN_BOXED(20575,16,FLEN)
NAN_BOXED(20289,16,FLEN)
NAN_BOXED(20575,16,FLEN)
NAN_BOXED(20289,16,FLEN)
NAN_BOXED(20575,16,FLEN)
NAN_BOXED(20289,16,FLEN)
NAN_BOXED(20575,16,FLEN)
NAN_BOXED(21401,16,FLEN)
NAN_BOXED(17007,16,FLEN)
NAN_BOXED(21401,16,FLEN)
NAN_BOXED(17007,16,FLEN)
NAN_BOXED(21401,16,FLEN)
NAN_BOXED(17007,16,FLEN)
NAN_BOXED(21401,16,FLEN)
NAN_BOXED(17007,16,FLEN)
NAN_BOXED(21401,16,FLEN)
NAN_BOXED(17007,16,FLEN)
NAN_BOXED(20143,16,FLEN)
NAN_BOXED(20648,16,FLEN)
NAN_BOXED(20143,16,FLEN)
NAN_BOXED(20648,16,FLEN)
NAN_BOXED(20143,16,FLEN)
NAN_BOXED(20648,16,FLEN)
NAN_BOXED(20143,16,FLEN)
NAN_BOXED(20648,16,FLEN)
NAN_BOXED(20143,16,FLEN)
NAN_BOXED(20648,16,FLEN)
NAN_BOXED(20956,16,FLEN)
NAN_BOXED(19528,16,FLEN)
NAN_BOXED(20956,16,FLEN)
NAN_BOXED(19528,16,FLEN)
NAN_BOXED(20956,16,FLEN)
NAN_BOXED(19528,16,FLEN)
NAN_BOXED(20956,16,FLEN)
NAN_BOXED(19528,16,FLEN)
NAN_BOXED(20956,16,FLEN)
NAN_BOXED(19528,16,FLEN)
NAN_BOXED(19181,16,FLEN)
NAN_BOXED(21060,16,FLEN)
NAN_BOXED(19181,16,FLEN)
NAN_BOXED(21060,16,FLEN)
NAN_BOXED(19181,16,FLEN)
NAN_BOXED(21060,16,FLEN)
NAN_BOXED(19181,16,FLEN)
NAN_BOXED(21060,16,FLEN)
NAN_BOXED(19181,16,FLEN)
NAN_BOXED(21060,16,FLEN)
NAN_BOXED(20394,16,FLEN)
NAN_BOXED(20522,16,FLEN)
NAN_BOXED(20394,16,FLEN)
NAN_BOXED(20522,16,FLEN)
NAN_BOXED(20394,16,FLEN)
NAN_BOXED(20522,16,FLEN)
NAN_BOXED(20394,16,FLEN)
NAN_BOXED(20522,16,FLEN)
NAN_BOXED(20394,16,FLEN)
NAN_BOXED(20522,16,FLEN)
NAN_BOXED(21093,16,FLEN)
NAN_BOXED(19049,16,FLEN)
NAN_BOXED(21093,16,FLEN)
NAN_BOXED(19049,16,FLEN)
NAN_BOXED(21093,16,FLEN)
NAN_BOXED(19049,16,FLEN)
NAN_BOXED(21093,16,FLEN)
NAN_BOXED(19049,16,FLEN)
NAN_BOXED(21093,16,FLEN)
NAN_BOXED(19049,16,FLEN)
NAN_BOXED(20613,16,FLEN)
NAN_BOXED(20213,16,FLEN)
NAN_BOXED(20613,16,FLEN)
NAN_BOXED(20213,16,FLEN)
NAN_BOXED(20613,16,FLEN)
NAN_BOXED(20213,16,FLEN)
NAN_BOXED(20613,16,FLEN)
NAN_BOXED(20213,16,FLEN)
NAN_BOXED(20613,16,FLEN)
NAN_BOXED(20213,16,FLEN)
NAN_BOXED(21092,16,FLEN)
NAN_BOXED(19056,16,FLEN)
NAN_BOXED(21092,16,FLEN)
NAN_BOXED(19056,16,FLEN)
NAN_BOXED(21092,16,FLEN)
NAN_BOXED(19056,16,FLEN)
NAN_BOXED(21092,16,FLEN)
NAN_BOXED(19056,16,FLEN)
NAN_BOXED(21092,16,FLEN)
NAN_BOXED(19056,16,FLEN)
NAN_BOXED(20104,16,FLEN)
NAN_BOXED(20668,16,FLEN)
NAN_BOXED(20104,16,FLEN)
NAN_BOXED(20668,16,FLEN)
NAN_BOXED(20104,16,FLEN)
NAN_BOXED(20668,16,FLEN)
NAN_BOXED(20104,16,FLEN)
NAN_BOXED(20668,16,FLEN)
NAN_BOXED(20104,16,FLEN)
NAN_BOXED(20668,16,FLEN)
NAN_BOXED(20236,16,FLEN)
NAN_BOXED(20601,16,FLEN)
NAN_BOXED(20236,16,FLEN)
NAN_BOXED(20601,16,FLEN)
NAN_BOXED(20236,16,FLEN)
NAN_BOXED(20601,16,FLEN)
NAN_BOXED(20236,16,FLEN)
NAN_BOXED(20601,16,FLEN)
NAN_BOXED(20236,16,FLEN)
NAN_BOXED(20601,16,FLEN)
NAN_BOXED(20324,16,FLEN)
NAN_BOXED(20558,16,FLEN)
NAN_BOXED(20324,16,FLEN)
NAN_BOXED(20558,16,FLEN)
NAN_BOXED(20324,16,FLEN)
NAN_BOXED(20558,16,FLEN)
NAN_BOXED(20324,16,FLEN)
NAN_BOXED(20558,16,FLEN)
NAN_BOXED(20324,16,FLEN)
NAN_BOXED(20558,16,FLEN)
NAN_BOXED(18685,16,FLEN)
NAN_BOXED(21184,16,FLEN)
NAN_BOXED(18685,16,FLEN)
NAN_BOXED(21184,16,FLEN)
NAN_BOXED(18685,16,FLEN)
NAN_BOXED(21184,16,FLEN)
NAN_BOXED(18685,16,FLEN)
NAN_BOXED(21184,16,FLEN)
NAN_BOXED(18685,16,FLEN)
NAN_BOXED(21184,16,FLEN)
NAN_BOXED(20773,16,FLEN)
NAN_BOXED(19894,16,FLEN)
NAN_BOXED(20773,16,FLEN)
NAN_BOXED(19894,16,FLEN)
NAN_BOXED(20773,16,FLEN)
NAN_BOXED(19894,16,FLEN)
NAN_BOXED(20773,16,FLEN)
NAN_BOXED(19894,16,FLEN)
NAN_BOXED(20773,16,FLEN)
NAN_BOXED(19894,16,FLEN)
NAN_BOXED(19178,16,FLEN)
NAN_BOXED(21061,16,FLEN)
NAN_BOXED(19178,16,FLEN)
NAN_BOXED(21061,16,FLEN)
NAN_BOXED(19178,16,FLEN)
NAN_BOXED(21061,16,FLEN)
NAN_BOXED(19178,16,FLEN)
NAN_BOXED(21061,16,FLEN)
NAN_BOXED(19178,16,FLEN)
NAN_BOXED(21061,16,FLEN)
NAN_BOXED(20897,16,FLEN)
NAN_BOXED(19645,16,FLEN)
NAN_BOXED(20897,16,FLEN)
NAN_BOXED(19645,16,FLEN)
NAN_BOXED(20897,16,FLEN)
NAN_BOXED(19645,16,FLEN)
NAN_BOXED(20897,16,FLEN)
NAN_BOXED(19645,16,FLEN)
NAN_BOXED(20897,16,FLEN)
NAN_BOXED(19645,16,FLEN)
NAN_BOXED(15861,16,FLEN)
NAN_BOXED(21456,16,FLEN)
NAN_BOXED(15861,16,FLEN)
NAN_BOXED(21456,16,FLEN)
NAN_BOXED(15861,16,FLEN)
NAN_BOXED(21456,16,FLEN)
NAN_BOXED(15861,16,FLEN)
NAN_BOXED(21456,16,FLEN)
NAN_BOXED(15861,16,FLEN)
NAN_BOXED(21456,16,FLEN)
NAN_BOXED(13334,16,FLEN)
NAN_BOXED(45868,16,FLEN)
NAN_BOXED(13334,16,FLEN)
NAN_BOXED(45868,16,FLEN)
NAN_BOXED(13334,16,FLEN)
NAN_BOXED(45868,16,FLEN)
NAN_BOXED(13334,16,FLEN)
NAN_BOXED(45868,16,FLEN)
NAN_BOXED(13334,16,FLEN)
NAN_BOXED(45868,16,FLEN)
NAN_BOXED(14220,16,FLEN)
NAN_BOXED(46860,16,FLEN)
NAN_BOXED(14220,16,FLEN)
NAN_BOXED(46860,16,FLEN)
NAN_BOXED(14220,16,FLEN)
NAN_BOXED(46860,16,FLEN)
NAN_BOXED(14220,16,FLEN)
NAN_BOXED(46860,16,FLEN)
NAN_BOXED(14220,16,FLEN)
NAN_BOXED(46860,16,FLEN)
NAN_BOXED(13581,16,FLEN)
NAN_BOXED(46221,16,FLEN)
NAN_BOXED(13581,16,FLEN)
NAN_BOXED(46221,16,FLEN)
NAN_BOXED(13581,16,FLEN)
NAN_BOXED(46221,16,FLEN)
NAN_BOXED(13581,16,FLEN)
NAN_BOXED(46221,16,FLEN)
NAN_BOXED(13581,16,FLEN)
NAN_BOXED(46221,16,FLEN)
NAN_BOXED(13692,16,FLEN)
NAN_BOXED(46332,16,FLEN)
NAN_BOXED(13692,16,FLEN)
NAN_BOXED(46332,16,FLEN)
NAN_BOXED(13692,16,FLEN)
NAN_BOXED(46332,16,FLEN)
NAN_BOXED(13692,16,FLEN)
NAN_BOXED(46332,16,FLEN)
NAN_BOXED(13692,16,FLEN)
NAN_BOXED(46332,16,FLEN)
NAN_BOXED(14898,16,FLEN)
NAN_BOXED(47602,16,FLEN)
NAN_BOXED(14898,16,FLEN)
NAN_BOXED(47602,16,FLEN)
NAN_BOXED(14898,16,FLEN)
NAN_BOXED(47602,16,FLEN)
NAN_BOXED(14898,16,FLEN)
NAN_BOXED(47602,16,FLEN)
NAN_BOXED(14898,16,FLEN)
NAN_BOXED(47602,16,FLEN)
NAN_BOXED(14804,16,FLEN)
NAN_BOXED(47508,16,FLEN)
NAN_BOXED(14804,16,FLEN)
NAN_BOXED(47508,16,FLEN)
NAN_BOXED(14804,16,FLEN)
NAN_BOXED(47508,16,FLEN)
NAN_BOXED(14804,16,FLEN)
NAN_BOXED(47508,16,FLEN)
NAN_BOXED(14804,16,FLEN)
NAN_BOXED(47508,16,FLEN)
NAN_BOXED(15120,16,FLEN)
NAN_BOXED(47824,16,FLEN)
NAN_BOXED(15120,16,FLEN)
NAN_BOXED(47824,16,FLEN)
NAN_BOXED(15120,16,FLEN)
NAN_BOXED(47824,16,FLEN)
NAN_BOXED(15120,16,FLEN)
NAN_BOXED(47824,16,FLEN)
NAN_BOXED(15120,16,FLEN)
NAN_BOXED(47824,16,FLEN)
NAN_BOXED(15279,16,FLEN)
NAN_BOXED(47983,16,FLEN)
NAN_BOXED(15279,16,FLEN)
NAN_BOXED(47983,16,FLEN)
NAN_BOXED(15279,16,FLEN)
NAN_BOXED(47983,16,FLEN)
NAN_BOXED(15279,16,FLEN)
NAN_BOXED(47983,16,FLEN)
NAN_BOXED(15279,16,FLEN)
NAN_BOXED(47983,16,FLEN)
NAN_BOXED(14296,16,FLEN)
NAN_BOXED(46936,16,FLEN)
NAN_BOXED(14296,16,FLEN)
NAN_BOXED(46936,16,FLEN)
NAN_BOXED(14296,16,FLEN)
NAN_BOXED(46936,16,FLEN)
NAN_BOXED(14296,16,FLEN)
NAN_BOXED(46936,16,FLEN)
NAN_BOXED(14296,16,FLEN)
NAN_BOXED(46936,16,FLEN)
NAN_BOXED(14573,16,FLEN)
NAN_BOXED(47277,16,FLEN)
NAN_BOXED(14573,16,FLEN)
NAN_BOXED(47277,16,FLEN)
NAN_BOXED(14573,16,FLEN)
NAN_BOXED(47277,16,FLEN)
NAN_BOXED(14573,16,FLEN)
NAN_BOXED(47277,16,FLEN)
NAN_BOXED(14573,16,FLEN)
NAN_BOXED(47277,16,FLEN)
NAN_BOXED(14858,16,FLEN)
NAN_BOXED(47562,16,FLEN)
NAN_BOXED(14858,16,FLEN)
NAN_BOXED(47562,16,FLEN)
NAN_BOXED(14858,16,FLEN)
NAN_BOXED(47562,16,FLEN)
NAN_BOXED(14858,16,FLEN)
NAN_BOXED(47562,16,FLEN)
NAN_BOXED(14858,16,FLEN)
NAN_BOXED(47562,16,FLEN)
NAN_BOXED(13387,16,FLEN)
NAN_BOXED(45974,16,FLEN)
NAN_BOXED(13387,16,FLEN)
NAN_BOXED(45974,16,FLEN)
NAN_BOXED(13387,16,FLEN)
NAN_BOXED(45974,16,FLEN)
NAN_BOXED(13387,16,FLEN)
NAN_BOXED(45974,16,FLEN)
NAN_BOXED(13387,16,FLEN)
NAN_BOXED(45974,16,FLEN)
NAN_BOXED(14021,16,FLEN)
NAN_BOXED(46661,16,FLEN)
NAN_BOXED(14021,16,FLEN)
NAN_BOXED(46661,16,FLEN)
NAN_BOXED(14021,16,FLEN)
NAN_BOXED(46661,16,FLEN)
NAN_BOXED(14021,16,FLEN)
NAN_BOXED(46661,16,FLEN)
NAN_BOXED(14021,16,FLEN)
NAN_BOXED(46661,16,FLEN)
NAN_BOXED(13168,16,FLEN)
NAN_BOXED(45680,16,FLEN)
NAN_BOXED(13168,16,FLEN)
NAN_BOXED(45680,16,FLEN)
NAN_BOXED(13168,16,FLEN)
NAN_BOXED(45680,16,FLEN)
NAN_BOXED(13168,16,FLEN)
NAN_BOXED(45680,16,FLEN)
NAN_BOXED(13168,16,FLEN)
NAN_BOXED(45680,16,FLEN)
NAN_BOXED(14685,16,FLEN)
NAN_BOXED(47389,16,FLEN)
NAN_BOXED(14685,16,FLEN)
NAN_BOXED(47389,16,FLEN)
NAN_BOXED(14685,16,FLEN)
NAN_BOXED(47389,16,FLEN)
NAN_BOXED(14685,16,FLEN)
NAN_BOXED(47389,16,FLEN)
NAN_BOXED(14685,16,FLEN)
NAN_BOXED(47389,16,FLEN)
NAN_BOXED(14865,16,FLEN)
NAN_BOXED(47569,16,FLEN)
NAN_BOXED(14865,16,FLEN)
NAN_BOXED(47569,16,FLEN)
NAN_BOXED(14865,16,FLEN)
NAN_BOXED(47569,16,FLEN)
NAN_BOXED(14865,16,FLEN)
NAN_BOXED(47569,16,FLEN)
NAN_BOXED(14865,16,FLEN)
NAN_BOXED(47569,16,FLEN)
NAN_BOXED(15035,16,FLEN)
NAN_BOXED(47739,16,FLEN)
NAN_BOXED(15035,16,FLEN)
NAN_BOXED(47739,16,FLEN)
NAN_BOXED(15035,16,FLEN)
NAN_BOXED(47739,16,FLEN)
NAN_BOXED(15035,16,FLEN)
NAN_BOXED(47739,16,FLEN)
NAN_BOXED(15035,16,FLEN)
NAN_BOXED(47739,16,FLEN)
NAN_BOXED(14785,16,FLEN)
NAN_BOXED(47489,16,FLEN)
NAN_BOXED(14785,16,FLEN)
NAN_BOXED(47489,16,FLEN)
NAN_BOXED(14785,16,FLEN)
NAN_BOXED(47489,16,FLEN)
NAN_BOXED(14785,16,FLEN)
NAN_BOXED(47489,16,FLEN)
NAN_BOXED(14785,16,FLEN)
NAN_BOXED(47489,16,FLEN)
NAN_BOXED(14106,16,FLEN)
NAN_BOXED(46746,16,FLEN)
NAN_BOXED(14106,16,FLEN)
NAN_BOXED(46746,16,FLEN)
NAN_BOXED(14106,16,FLEN)
NAN_BOXED(46746,16,FLEN)
NAN_BOXED(14106,16,FLEN)
NAN_BOXED(46746,16,FLEN)
NAN_BOXED(14106,16,FLEN)
NAN_BOXED(46746,16,FLEN)
NAN_BOXED(14275,16,FLEN)
NAN_BOXED(46915,16,FLEN)
NAN_BOXED(14275,16,FLEN)
NAN_BOXED(46915,16,FLEN)
NAN_BOXED(14275,16,FLEN)
NAN_BOXED(46915,16,FLEN)
NAN_BOXED(14275,16,FLEN)
NAN_BOXED(46915,16,FLEN)
NAN_BOXED(14275,16,FLEN)
NAN_BOXED(46915,16,FLEN)
NAN_BOXED(13865,16,FLEN)
NAN_BOXED(46505,16,FLEN)
NAN_BOXED(13865,16,FLEN)
NAN_BOXED(46505,16,FLEN)
NAN_BOXED(13865,16,FLEN)
NAN_BOXED(46505,16,FLEN)
NAN_BOXED(13865,16,FLEN)
NAN_BOXED(46505,16,FLEN)
NAN_BOXED(13865,16,FLEN)
NAN_BOXED(46505,16,FLEN)
NAN_BOXED(13277,16,FLEN)
NAN_BOXED(45789,16,FLEN)
NAN_BOXED(13277,16,FLEN)
NAN_BOXED(45789,16,FLEN)
NAN_BOXED(13277,16,FLEN)
NAN_BOXED(45789,16,FLEN)
NAN_BOXED(13277,16,FLEN)
NAN_BOXED(45789,16,FLEN)
NAN_BOXED(13277,16,FLEN)
NAN_BOXED(45789,16,FLEN)
NAN_BOXED(14780,16,FLEN)
NAN_BOXED(47484,16,FLEN)
NAN_BOXED(14780,16,FLEN)
NAN_BOXED(47484,16,FLEN)
NAN_BOXED(14780,16,FLEN)
NAN_BOXED(47484,16,FLEN)
NAN_BOXED(14780,16,FLEN)
NAN_BOXED(47484,16,FLEN)
NAN_BOXED(14780,16,FLEN)
NAN_BOXED(47484,16,FLEN)
NAN_BOXED(13888,16,FLEN)
NAN_BOXED(46528,16,FLEN)
NAN_BOXED(13888,16,FLEN)
NAN_BOXED(46528,16,FLEN)
NAN_BOXED(13888,16,FLEN)
NAN_BOXED(46528,16,FLEN)
NAN_BOXED(13888,16,FLEN)
NAN_BOXED(46528,16,FLEN)
NAN_BOXED(13888,16,FLEN)
NAN_BOXED(46528,16,FLEN)
NAN_BOXED(13618,16,FLEN)
NAN_BOXED(46258,16,FLEN)
NAN_BOXED(13618,16,FLEN)
NAN_BOXED(46258,16,FLEN)
NAN_BOXED(13618,16,FLEN)
NAN_BOXED(46258,16,FLEN)
NAN_BOXED(13618,16,FLEN)
NAN_BOXED(46258,16,FLEN)
NAN_BOXED(13618,16,FLEN)
NAN_BOXED(46258,16,FLEN)
NAN_BOXED(14038,16,FLEN)
NAN_BOXED(46678,16,FLEN)
NAN_BOXED(14038,16,FLEN)
NAN_BOXED(46678,16,FLEN)
NAN_BOXED(14038,16,FLEN)
NAN_BOXED(46678,16,FLEN)
NAN_BOXED(14038,16,FLEN)
NAN_BOXED(46678,16,FLEN)
NAN_BOXED(14038,16,FLEN)
NAN_BOXED(46678,16,FLEN)
NAN_BOXED(13732,16,FLEN)
NAN_BOXED(46372,16,FLEN)
NAN_BOXED(13732,16,FLEN)
NAN_BOXED(46372,16,FLEN)
NAN_BOXED(13732,16,FLEN)
NAN_BOXED(46372,16,FLEN)
NAN_BOXED(13732,16,FLEN)
NAN_BOXED(46372,16,FLEN)
NAN_BOXED(13732,16,FLEN)
NAN_BOXED(46372,16,FLEN)
NAN_BOXED(14422,16,FLEN)
NAN_BOXED(47126,16,FLEN)
NAN_BOXED(14422,16,FLEN)
NAN_BOXED(47126,16,FLEN)
NAN_BOXED(14422,16,FLEN)
NAN_BOXED(47126,16,FLEN)
NAN_BOXED(14422,16,FLEN)
NAN_BOXED(47126,16,FLEN)
NAN_BOXED(14422,16,FLEN)
NAN_BOXED(47126,16,FLEN)
NAN_BOXED(14414,16,FLEN)
NAN_BOXED(47118,16,FLEN)
NAN_BOXED(14414,16,FLEN)
NAN_BOXED(47118,16,FLEN)
NAN_BOXED(14414,16,FLEN)
NAN_BOXED(47118,16,FLEN)
NAN_BOXED(14414,16,FLEN)
NAN_BOXED(47118,16,FLEN)
NAN_BOXED(14414,16,FLEN)
NAN_BOXED(47118,16,FLEN)
NAN_BOXED(14728,16,FLEN)
NAN_BOXED(47432,16,FLEN)
NAN_BOXED(14728,16,FLEN)
NAN_BOXED(47432,16,FLEN)
NAN_BOXED(14728,16,FLEN)
NAN_BOXED(47432,16,FLEN)
NAN_BOXED(14728,16,FLEN)
NAN_BOXED(47432,16,FLEN)
NAN_BOXED(14728,16,FLEN)
NAN_BOXED(47432,16,FLEN)
NAN_BOXED(15240,16,FLEN)
NAN_BOXED(47944,16,FLEN)
NAN_BOXED(15240,16,FLEN)
NAN_BOXED(47944,16,FLEN)
NAN_BOXED(15240,16,FLEN)
NAN_BOXED(47944,16,FLEN)
NAN_BOXED(15240,16,FLEN)
NAN_BOXED(47944,16,FLEN)
NAN_BOXED(15240,16,FLEN)
NAN_BOXED(47944,16,FLEN)
NAN_BOXED(13427,16,FLEN)
NAN_BOXED(46054,16,FLEN)
NAN_BOXED(13427,16,FLEN)
NAN_BOXED(46054,16,FLEN)
NAN_BOXED(13427,16,FLEN)
NAN_BOXED(46054,16,FLEN)
NAN_BOXED(13427,16,FLEN)
NAN_BOXED(46054,16,FLEN)
NAN_BOXED(13427,16,FLEN)
NAN_BOXED(46054,16,FLEN)
NAN_BOXED(13919,16,FLEN)
NAN_BOXED(46559,16,FLEN)
NAN_BOXED(13919,16,FLEN)
NAN_BOXED(46559,16,FLEN)
NAN_BOXED(13919,16,FLEN)
NAN_BOXED(46559,16,FLEN)
NAN_BOXED(13919,16,FLEN)
NAN_BOXED(46559,16,FLEN)
NAN_BOXED(13919,16,FLEN)
NAN_BOXED(46559,16,FLEN)
NAN_BOXED(14424,16,FLEN)
NAN_BOXED(47128,16,FLEN)
NAN_BOXED(14424,16,FLEN)
NAN_BOXED(47128,16,FLEN)
NAN_BOXED(14424,16,FLEN)
NAN_BOXED(47128,16,FLEN)
NAN_BOXED(14424,16,FLEN)
NAN_BOXED(47128,16,FLEN)
NAN_BOXED(14424,16,FLEN)
NAN_BOXED(47128,16,FLEN)
NAN_BOXED(15339,16,FLEN)
NAN_BOXED(48043,16,FLEN)
NAN_BOXED(15339,16,FLEN)
NAN_BOXED(48043,16,FLEN)
NAN_BOXED(15339,16,FLEN)
NAN_BOXED(48043,16,FLEN)
NAN_BOXED(15339,16,FLEN)
NAN_BOXED(48043,16,FLEN)
NAN_BOXED(15339,16,FLEN)
NAN_BOXED(48043,16,FLEN)
NAN_BOXED(15228,16,FLEN)
NAN_BOXED(47932,16,FLEN)
NAN_BOXED(15228,16,FLEN)
NAN_BOXED(47932,16,FLEN)
NAN_BOXED(15228,16,FLEN)
NAN_BOXED(47932,16,FLEN)
NAN_BOXED(15228,16,FLEN)
NAN_BOXED(47932,16,FLEN)
NAN_BOXED(15228,16,FLEN)
NAN_BOXED(47932,16,FLEN)
NAN_BOXED(13660,16,FLEN)
NAN_BOXED(46300,16,FLEN)
NAN_BOXED(13660,16,FLEN)
NAN_BOXED(46300,16,FLEN)
NAN_BOXED(13660,16,FLEN)
NAN_BOXED(46300,16,FLEN)
NAN_BOXED(13660,16,FLEN)
NAN_BOXED(46300,16,FLEN)
NAN_BOXED(13660,16,FLEN)
NAN_BOXED(46300,16,FLEN)
NAN_BOXED(13729,16,FLEN)
NAN_BOXED(46369,16,FLEN)
NAN_BOXED(13729,16,FLEN)
NAN_BOXED(46369,16,FLEN)
NAN_BOXED(13729,16,FLEN)
NAN_BOXED(46369,16,FLEN)
NAN_BOXED(13729,16,FLEN)
NAN_BOXED(46369,16,FLEN)
NAN_BOXED(13729,16,FLEN)
NAN_BOXED(46369,16,FLEN)
NAN_BOXED(15278,16,FLEN)
NAN_BOXED(47982,16,FLEN)
NAN_BOXED(15278,16,FLEN)
NAN_BOXED(47982,16,FLEN)
NAN_BOXED(15278,16,FLEN)
NAN_BOXED(47982,16,FLEN)
NAN_BOXED(15278,16,FLEN)
NAN_BOXED(47982,16,FLEN)
NAN_BOXED(15278,16,FLEN)
NAN_BOXED(47982,16,FLEN)
NAN_BOXED(10250,16,FLEN)
NAN_BOXED(36095,16,FLEN)
NAN_BOXED(10250,16,FLEN)
NAN_BOXED(36095,16,FLEN)
NAN_BOXED(10250,16,FLEN)
NAN_BOXED(36095,16,FLEN)
NAN_BOXED(10250,16,FLEN)
NAN_BOXED(36095,16,FLEN)
NAN_BOXED(10250,16,FLEN)
NAN_BOXED(36095,16,FLEN)
NAN_BOXED(13607,16,FLEN)
NAN_BOXED(46247,16,FLEN)
NAN_BOXED(13607,16,FLEN)
NAN_BOXED(46247,16,FLEN)
NAN_BOXED(13607,16,FLEN)
NAN_BOXED(46247,16,FLEN)
NAN_BOXED(13607,16,FLEN)
NAN_BOXED(46247,16,FLEN)
NAN_BOXED(13607,16,FLEN)
NAN_BOXED(46247,16,FLEN)
NAN_BOXED(14910,16,FLEN)
NAN_BOXED(47614,16,FLEN)
NAN_BOXED(14910,16,FLEN)
NAN_BOXED(47614,16,FLEN)
NAN_BOXED(14910,16,FLEN)
NAN_BOXED(47614,16,FLEN)
NAN_BOXED(14910,16,FLEN)
NAN_BOXED(47614,16,FLEN)
NAN_BOXED(14910,16,FLEN)
NAN_BOXED(47614,16,FLEN)
NAN_BOXED(12538,16,FLEN)
NAN_BOXED(45306,16,FLEN)
NAN_BOXED(12538,16,FLEN)
NAN_BOXED(45306,16,FLEN)
NAN_BOXED(12538,16,FLEN)
NAN_BOXED(45306,16,FLEN)
NAN_BOXED(13035,16,FLEN)
NAN_BOXED(45803,16,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x3_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x3_1:
    .fill 30*((SIGALIGN)/4),4,0xdeadbeef


signature_x10_0:
    .fill 22*((SIGALIGN)/4),4,0xdeadbeef


signature_x4_0:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x4_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x4_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x4_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x4_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x4_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x4_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x4_7:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x4_8:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x4_9:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x4_10:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x4_11:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x4_12:
    .fill 174*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
