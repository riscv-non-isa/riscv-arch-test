
#include "compliance_model.h"
#include "compliance_test.h"

RVTEST_ISA("RV32I")

RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1
RVTEST_CASE(1,"//check ISA:=regex(.*I.*);def TEST_CASE_1=True;",sub)
la x1,signature_x1_1
TEST_RR_OP(sub, x31, x30, x29, -2130706431, -2147483648, -16777217, x1, 0, x2)
TEST_RR_OP(sub, x30, x31, x28, 16777217, 0, -16777217, x1, 4, x2)
TEST_RR_OP(sub, x29, x28, x31, 2164260864, 2147483647, -16777217, x1, 8, x2)
TEST_RR_OP(sub, x28, x29, x30, 16777218, 1, -16777217, x1, 12, x2)
TEST_RR_OP(sub, x27, x26, x25, 2130706431, -16777217, -2147483648, x1, 16, x2)
TEST_RR_OP(sub, x26, x27, x24, -16777217, -16777217, 0, x1, 20, x2)
TEST_RR_OP(sub, x25, x24, x27, -2164260864, -16777217, 2147483647, x1, 24, x2)
TEST_RR_OP(sub, x24, x25, x26, -16777218, -16777217, 1, x1, 28, x2)
TEST_RR_OP(sub, x23, x22, x21, 0, 1073741823, 1073741823, x1, 32, x2)
TEST_RR_OP(sub, x22, x23, x20, 16777219, 2, -16777217, x1, 36, x2)
TEST_RR_OP(sub, x21, x20, x23, 16777221, 4, -16777217, x1, 40, x2)
TEST_RR_OP(sub, x20, x21, x22, 16777225, 8, -16777217, x1, 44, x2)
TEST_RR_OP(sub, x19, x18, x17, 16777233, 16, -16777217, x1, 48, x2)
TEST_RR_OP(sub, x18, x19, x16, 16777249, 32, -16777217, x1, 52, x2)
TEST_RR_OP(sub, x17, x16, x19, 16777281, 64, -16777217, x1, 56, x2)
TEST_RR_OP(sub, x16, x17, x18, 16777345, 128, -16777217, x1, 60, x2)
TEST_RR_OP(sub, x15, x14, x13, 16777473, 256, -16777217, x1, 64, x2)
TEST_RR_OP(sub, x14, x15, x12, 16777729, 512, -16777217, x1, 68, x2)
TEST_RR_OP(sub, x13, x12, x15, 16778241, 1024, -16777217, x1, 72, x2)
TEST_RR_OP(sub, x12, x13, x14, 16779265, 2048, -16777217, x1, 76, x2)
TEST_RR_OP(sub, x11, x10, x9, 16781313, 4096, -16777217, x1, 80, x2)
TEST_RR_OP(sub, x10, x11, x8, 16785409, 8192, -16777217, x1, 84, x2)
TEST_RR_OP(sub, x9, x8, x11, 16793601, 16384, -16777217, x1, 88, x2)
TEST_RR_OP(sub, x8, x9, x10, 16809985, 32768, -16777217, x1, 92, x2)
TEST_RR_OP(sub, x7, x6, x5, 16842753, 65536, -16777217, x1, 96, x2)
TEST_RR_OP(sub, x6, x7, x4, 16908289, 131072, -16777217, x1, 100, x9)
la x8,signature_x8_0
TEST_RR_OP(sub, x5, x4, x7, 17039361, 262144, -16777217, x8, 0, x9)
TEST_RR_OP(sub, x4, x5, x6, 17301505, 524288, -16777217, x8, 4, x9)
TEST_RR_OP(sub, x3, x2, x1, 17825793, 1048576, -16777217, x8, 8, x9)
TEST_RR_OP(sub, x2, x3, x0, 18874369, 2097152, -16777217, x8, 12, x9)
TEST_RR_OP(sub, x1, x0, x3, 20971521, 4194304, -16777217, x8, 16, x9)
TEST_RR_OP(sub, x0, x1, x2, 25165825, 8388608, -16777217, x8, 20, x9)
TEST_RR_OP(sub, x31, x30, x30, 33554433, 16777216, -16777217, x8, 24, x9)
TEST_RR_OP(sub, x31, x31, x30, 50331649, 33554432, -16777217, x8, 28, x9)
TEST_RR_OP(sub, x31, x30, x31, 83886081, 67108864, -16777217, x8, 32, x9)
TEST_RR_OP(sub, x31, x31, x31, 150994945, 134217728, -16777217, x8, 36, x9)
TEST_RR_OP(sub, x12, x10, x11, 285212673, 268435456, -16777217, x8, 40, x9)
TEST_RR_OP(sub, x12, x10, x11, 553648129, 536870912, -16777217, x8, 44, x9)
TEST_RR_OP(sub, x12, x10, x11, 1090519041, 1073741824, -16777217, x8, 48, x9)
TEST_RR_OP(sub, x12, x10, x11, 16777215, -2, -16777217, x8, 52, x9)
TEST_RR_OP(sub, x12, x10, x11, 16777214, -3, -16777217, x8, 56, x9)
TEST_RR_OP(sub, x12, x10, x11, 16777212, -5, -16777217, x8, 60, x9)
TEST_RR_OP(sub, x12, x10, x11, 16777208, -9, -16777217, x8, 64, x9)
TEST_RR_OP(sub, x12, x10, x11, 16777200, -17, -16777217, x8, 68, x9)
TEST_RR_OP(sub, x12, x10, x11, 16777184, -33, -16777217, x8, 72, x9)
TEST_RR_OP(sub, x12, x10, x11, 16777152, -65, -16777217, x8, 76, x9)
TEST_RR_OP(sub, x12, x10, x11, 16777088, -129, -16777217, x8, 80, x9)
TEST_RR_OP(sub, x12, x10, x11, 16776960, -257, -16777217, x8, 84, x9)
TEST_RR_OP(sub, x12, x10, x11, 16776704, -513, -16777217, x8, 88, x9)
TEST_RR_OP(sub, x12, x10, x11, 16776192, -1025, -16777217, x8, 92, x9)
TEST_RR_OP(sub, x12, x10, x11, 16775168, -2049, -16777217, x8, 96, x9)
TEST_RR_OP(sub, x12, x10, x11, 16773120, -4097, -16777217, x8, 100, x9)
TEST_RR_OP(sub, x12, x10, x11, 16769024, -8193, -16777217, x8, 104, x9)
TEST_RR_OP(sub, x12, x10, x11, 16760832, -16385, -16777217, x8, 108, x9)
TEST_RR_OP(sub, x12, x10, x11, 16744448, -32769, -16777217, x8, 112, x9)
TEST_RR_OP(sub, x12, x10, x11, 16711680, -65537, -16777217, x8, 116, x9)
TEST_RR_OP(sub, x12, x10, x11, 16646144, -131073, -16777217, x8, 120, x9)
TEST_RR_OP(sub, x12, x10, x11, 16515072, -262145, -16777217, x8, 124, x9)
TEST_RR_OP(sub, x12, x10, x11, 16252928, -524289, -16777217, x8, 128, x9)
TEST_RR_OP(sub, x12, x10, x11, 15728640, -1048577, -16777217, x8, 132, x9)
TEST_RR_OP(sub, x12, x10, x11, 14680064, -2097153, -16777217, x8, 136, x9)
TEST_RR_OP(sub, x12, x10, x11, 12582912, -4194305, -16777217, x8, 140, x9)
TEST_RR_OP(sub, x12, x10, x11, 8388608, -8388609, -16777217, x8, 144, x9)
TEST_RR_OP(sub, x12, x10, x11, -16777216, -33554433, -16777217, x8, 148, x9)
TEST_RR_OP(sub, x12, x10, x11, -50331648, -67108865, -16777217, x8, 152, x9)
TEST_RR_OP(sub, x12, x10, x11, -117440512, -134217729, -16777217, x8, 156, x9)
TEST_RR_OP(sub, x12, x10, x11, -251658240, -268435457, -16777217, x8, 160, x9)
TEST_RR_OP(sub, x12, x10, x11, -520093696, -536870913, -16777217, x8, 164, x9)
TEST_RR_OP(sub, x12, x10, x11, -1056964608, -1073741825, -16777217, x8, 168, x9)
TEST_RR_OP(sub, x12, x10, x11, 1448432982, 1431655765, -16777217, x8, 172, x9)
TEST_RR_OP(sub, x12, x10, x11, -16515072, -16777217, -262145, x8, 176, x9)
TEST_RR_OP(sub, x12, x10, x11, -16252928, -16777217, -524289, x8, 180, x9)
TEST_RR_OP(sub, x12, x10, x11, -15728640, -16777217, -1048577, x8, 184, x9)
TEST_RR_OP(sub, x12, x10, x11, -14680064, -16777217, -2097153, x8, 188, x9)
TEST_RR_OP(sub, x12, x10, x11, -12582912, -16777217, -4194305, x8, 192, x9)
TEST_RR_OP(sub, x12, x10, x11, -8388608, -16777217, -8388609, x8, 196, x9)
TEST_RR_OP(sub, x12, x10, x11, 16777216, -16777217, -33554433, x8, 200, x9)
TEST_RR_OP(sub, x12, x10, x11, 50331648, -16777217, -67108865, x8, 204, x9)
TEST_RR_OP(sub, x12, x10, x11, 117440512, -16777217, -134217729, x8, 208, x9)
TEST_RR_OP(sub, x12, x10, x11, 251658240, -16777217, -268435457, x8, 212, x9)
TEST_RR_OP(sub, x12, x10, x11, 520093696, -16777217, -536870913, x8, 216, x9)
TEST_RR_OP(sub, x12, x10, x11, 1056964608, -16777217, -1073741825, x8, 220, x9)
TEST_RR_OP(sub, x12, x10, x11, -1448432982, -16777217, 1431655765, x8, 224, x9)
TEST_RR_OP(sub, x12, x10, x11, 1414878549, -16777217, -1431655766, x8, 228, x9)
TEST_RR_OP(sub, x12, x10, x11, -1414878549, -1431655766, -16777217, x8, 232, x9)
TEST_RR_OP(sub, x12, x10, x11, -16777219, -16777217, 2, x8, 236, x9)
TEST_RR_OP(sub, x12, x10, x11, -16777221, -16777217, 4, x8, 240, x9)
TEST_RR_OP(sub, x12, x10, x11, -16777225, -16777217, 8, x8, 244, x9)
TEST_RR_OP(sub, x12, x10, x11, -16777233, -16777217, 16, x8, 248, x9)
TEST_RR_OP(sub, x12, x10, x11, -16777249, -16777217, 32, x8, 252, x9)
TEST_RR_OP(sub, x12, x10, x11, -16777281, -16777217, 64, x8, 256, x9)
TEST_RR_OP(sub, x12, x10, x11, -16777345, -16777217, 128, x8, 260, x9)
TEST_RR_OP(sub, x12, x10, x11, -16777473, -16777217, 256, x8, 264, x9)
TEST_RR_OP(sub, x12, x10, x11, -16777729, -16777217, 512, x8, 268, x9)
TEST_RR_OP(sub, x12, x10, x11, -16778241, -16777217, 1024, x8, 272, x9)
TEST_RR_OP(sub, x12, x10, x11, -16779265, -16777217, 2048, x8, 276, x9)
TEST_RR_OP(sub, x12, x10, x11, -16781313, -16777217, 4096, x8, 280, x9)
TEST_RR_OP(sub, x12, x10, x11, -16785409, -16777217, 8192, x8, 284, x9)
TEST_RR_OP(sub, x12, x10, x11, -16793601, -16777217, 16384, x8, 288, x9)
TEST_RR_OP(sub, x12, x10, x11, -16809985, -16777217, 32768, x8, 292, x9)
TEST_RR_OP(sub, x12, x10, x11, -16842753, -16777217, 65536, x8, 296, x9)
TEST_RR_OP(sub, x12, x10, x11, -16908289, -16777217, 131072, x8, 300, x9)
TEST_RR_OP(sub, x12, x10, x11, -17039361, -16777217, 262144, x8, 304, x9)
TEST_RR_OP(sub, x12, x10, x11, -17301505, -16777217, 524288, x8, 308, x9)
TEST_RR_OP(sub, x12, x10, x11, -17825793, -16777217, 1048576, x8, 312, x9)
TEST_RR_OP(sub, x12, x10, x11, -18874369, -16777217, 2097152, x8, 316, x9)
TEST_RR_OP(sub, x12, x10, x11, -20971521, -16777217, 4194304, x8, 320, x9)
TEST_RR_OP(sub, x12, x10, x11, -25165825, -16777217, 8388608, x8, 324, x9)
TEST_RR_OP(sub, x12, x10, x11, -33554433, -16777217, 16777216, x8, 328, x9)
TEST_RR_OP(sub, x12, x10, x11, -50331649, -16777217, 33554432, x8, 332, x9)
TEST_RR_OP(sub, x12, x10, x11, -83886081, -16777217, 67108864, x8, 336, x9)
TEST_RR_OP(sub, x12, x10, x11, -150994945, -16777217, 134217728, x8, 340, x9)
TEST_RR_OP(sub, x12, x10, x11, -285212673, -16777217, 268435456, x8, 344, x9)
TEST_RR_OP(sub, x12, x10, x11, -553648129, -16777217, 536870912, x8, 348, x9)
TEST_RR_OP(sub, x12, x10, x11, -1090519041, -16777217, 1073741824, x8, 352, x9)
TEST_RR_OP(sub, x12, x10, x11, -16777215, -16777217, -2, x8, 356, x9)
TEST_RR_OP(sub, x12, x10, x11, -16777214, -16777217, -3, x8, 360, x9)
TEST_RR_OP(sub, x12, x10, x11, -16777212, -16777217, -5, x8, 364, x9)
TEST_RR_OP(sub, x12, x10, x11, -16777208, -16777217, -9, x8, 368, x9)
TEST_RR_OP(sub, x12, x10, x11, -16777200, -16777217, -17, x8, 372, x9)
TEST_RR_OP(sub, x12, x10, x11, -16777184, -16777217, -33, x8, 376, x9)
TEST_RR_OP(sub, x12, x10, x11, -16777152, -16777217, -65, x8, 380, x9)
TEST_RR_OP(sub, x12, x10, x11, -16777088, -16777217, -129, x8, 384, x9)
TEST_RR_OP(sub, x12, x10, x11, -16776960, -16777217, -257, x8, 388, x9)
TEST_RR_OP(sub, x12, x10, x11, -16776704, -16777217, -513, x8, 392, x9)
TEST_RR_OP(sub, x12, x10, x11, -16776192, -16777217, -1025, x8, 396, x9)
TEST_RR_OP(sub, x12, x10, x11, -16775168, -16777217, -2049, x8, 400, x9)
TEST_RR_OP(sub, x12, x10, x11, -16773120, -16777217, -4097, x8, 404, x9)
TEST_RR_OP(sub, x12, x10, x11, -16769024, -16777217, -8193, x8, 408, x9)
TEST_RR_OP(sub, x12, x10, x11, -16760832, -16777217, -16385, x8, 412, x9)
TEST_RR_OP(sub, x12, x10, x11, -16744448, -16777217, -32769, x8, 416, x9)
TEST_RR_OP(sub, x12, x10, x11, -16711680, -16777217, -65537, x8, 420, x9)
TEST_RR_OP(sub, x12, x10, x11, -16646144, -16777217, -131073, x8, 424, x9)
TEST_RR_OP(sub, x12, x10, x11, 18874369, 2097152, -16777217, x8, 428, x9)
TEST_RR_OP(sub, x12, x10, x11, 20971521, 4194304, -16777217, x8, 432, x9)
TEST_RR_OP(sub, x12, x10, x11, 25165825, 8388608, -16777217, x8, 436, x9)
TEST_RR_OP(sub, x12, x10, x11, 33554433, 16777216, -16777217, x8, 440, x9)
TEST_RR_OP(sub, x12, x10, x11, 50331649, 33554432, -16777217, x8, 444, x9)
TEST_RR_OP(sub, x12, x10, x11, 83886081, 67108864, -16777217, x8, 448, x9)
TEST_RR_OP(sub, x12, x10, x11, 150994945, 134217728, -16777217, x8, 452, x9)
#endif


RVMODEL_HALT
RVTEST_CODE_END

RVTEST_DATA_BEGIN
.align 4
.align 4
rvtest_data:
.word 0xbabecafe
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
.align 4

signature_x1_0:
    .fill 0*(XLEN/32),4,0xafacadee


signature_x1_1:
    .fill 26*(XLEN/32),4,0xafacadee


signature_x8_0:
    .fill 114*(XLEN/32),4,0xafacadee

RVMODEL_DATA_END
