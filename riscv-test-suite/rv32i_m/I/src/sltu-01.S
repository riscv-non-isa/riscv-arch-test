
// -----------
// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
// version   : 0.2.0
// timestamp : Wed Nov 18 05:39:15 2020 GMT
// usage     : riscv_ctg \
//                  -- cgf ('/scratch/git-repo/incoresemi/riscv-compliance/riscv_ctg/sample_cgfs/dataset.cgf', '/scratch/git-repo/incoresemi/riscv-compliance/riscv_ctg/sample_cgfs/rv32i.cgf') \
//                  -- xlen 32 \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the sltu instruction of the RISC-V I extension for the sltu covergroup.
// 
#include "compliance_model.h"
#include "arch_test.h"
RVTEST_ISA("RV32I")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*);def TEST_CASE_1=True;",sltu)

RVTEST_SIGBASE( x8,signature_x8_1)

inst_0:
// rs1 == rs2 == rd, rs1==x30, rs2==x30, rd==x30, rs1_val > 0 and rs2_val > 0, rs1_val != rs2_val and rs1_val > 0 and rs2_val > 0, rs2_val == 4294967287
// opcode: sltu ; op1:x30; op2:x30; dest:x30; op1val:3;  op2val:4294967287
TEST_RR_OP(sltu, x30, x30, x30, 0x1, 3, 4294967287, x8, 0, x15)

inst_1:
// rs1 == rd != rs2, rs1==x21, rs2==x0, rd==x21, rs1_val == rs2_val and rs1_val > 0 and rs2_val > 0, rs2_val == 1431655765, rs1_val == 1431655765, rs1_val==1431655765 and rs2_val==1431655765
// opcode: sltu ; op1:x21; op2:x0; dest:x21; op1val:1431655765;  op2val:1431655765
TEST_RR_OP(sltu, x21, x21, x0, 0x0, 1431655765, 1431655765, x8, 4, x15)

inst_2:
// rs2 == rd != rs1, rs1==x24, rs2==x3, rd==x3, rs2_val == 0, rs1_val == (2**(xlen)-1)
// opcode: sltu ; op1:x24; op2:x3; dest:x3; op1val:4294967295;  op2val:0
TEST_RR_OP(sltu, x3, x24, x3, 0x0, 4294967295, 0, x8, 8, x15)

inst_3:
// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x29, rs2==x6, rd==x14, rs2_val == (2**(xlen)-1), rs1_val == 4294950911
// opcode: sltu ; op1:x29; op2:x6; dest:x14; op1val:4294950911;  op2val:4294967295
TEST_RR_OP(sltu, x14, x29, x6, 0x1, 4294950911, 4294967295, x8, 12, x15)

inst_4:
// rs1 == rs2 != rd, rs1==x2, rs2==x2, rd==x18, rs2_val == 1, rs1_val == 4294967279
// opcode: sltu ; op1:x2; op2:x2; dest:x18; op1val:4294967279;  op2val:1
TEST_RR_OP(sltu, x18, x2, x2, 0x0, 4294967279, 1, x8, 16, x15)

inst_5:
// rs1==x1, rs2==x24, rd==x4, rs1_val == 0, rs2_val == 4194304
// opcode: sltu ; op1:x1; op2:x24; dest:x4; op1val:0;  op2val:4194304
TEST_RR_OP(sltu, x4, x1, x24, 0x1, 0, 4194304, x8, 20, x15)

inst_6:
// rs1==x6, rs2==x7, rd==x28, rs1_val == 1, 
// opcode: sltu ; op1:x6; op2:x7; dest:x28; op1val:1;  op2val:10
TEST_RR_OP(sltu, x28, x6, x7, 0x1, 1, 10, x8, 24, x15)

inst_7:
// rs1==x19, rs2==x16, rd==x24, rs2_val == 2, rs1_val == 2147483648
// opcode: sltu ; op1:x19; op2:x16; dest:x24; op1val:2147483648;  op2val:2
TEST_RR_OP(sltu, x24, x19, x16, 0x0, 2147483648, 2, x8, 28, x15)

inst_8:
// rs1==x5, rs2==x26, rd==x6, rs2_val == 4, rs1_val == 128
// opcode: sltu ; op1:x5; op2:x26; dest:x6; op1val:128;  op2val:4
TEST_RR_OP(sltu, x6, x5, x26, 0x0, 128, 4, x8, 32, x15)

inst_9:
// rs1==x26, rs2==x22, rd==x20, rs2_val == 8, rs1_val == 1048576
// opcode: sltu ; op1:x26; op2:x22; dest:x20; op1val:1048576;  op2val:8
TEST_RR_OP(sltu, x20, x26, x22, 0x0, 1048576, 8, x8, 36, x15)

inst_10:
// rs1==x17, rs2==x13, rd==x25, rs2_val == 16, rs1_val == 4293918719
// opcode: sltu ; op1:x17; op2:x13; dest:x25; op1val:4293918719;  op2val:16
TEST_RR_OP(sltu, x25, x17, x13, 0x0, 4293918719, 16, x8, 40, x15)

inst_11:
// rs1==x25, rs2==x12, rd==x13, rs2_val == 32, rs1_val == 4294963199
// opcode: sltu ; op1:x25; op2:x12; dest:x13; op1val:4294963199;  op2val:32
TEST_RR_OP(sltu, x13, x25, x12, 0x0, 4294963199, 32, x8, 44, x15)

inst_12:
// rs1==x20, rs2==x23, rd==x0, rs2_val == 64, rs1_val == 4278190079
// opcode: sltu ; op1:x20; op2:x23; dest:x0; op1val:4278190079;  op2val:64
TEST_RR_OP(sltu, x0, x20, x23, 0x0, 4278190079, 64, x8, 48, x15)

inst_13:
// rs1==x23, rs2==x21, rd==x11, rs2_val == 128, rs1_val == 2863311530
// opcode: sltu ; op1:x23; op2:x21; dest:x11; op1val:2863311530;  op2val:128
TEST_RR_OP(sltu, x11, x23, x21, 0x0, 2863311530, 128, x8, 52, x15)

inst_14:
// rs1==x4, rs2==x18, rd==x7, rs2_val == 256, rs1_val == 1073741824
// opcode: sltu ; op1:x4; op2:x18; dest:x7; op1val:1073741824;  op2val:256
TEST_RR_OP(sltu, x7, x4, x18, 0x0, 1073741824, 256, x8, 56, x15)

inst_15:
// rs1==x27, rs2==x25, rd==x17, rs2_val == 512, 
// opcode: sltu ; op1:x27; op2:x25; dest:x17; op1val:4294967295;  op2val:512
TEST_RR_OP(sltu, x17, x27, x25, 0x0, 4294967295, 512, x8, 60, x15)

inst_16:
// rs1==x10, rs2==x14, rd==x9, rs2_val == 1024, 
// opcode: sltu ; op1:x10; op2:x14; dest:x9; op1val:1073741824;  op2val:1024
TEST_RR_OP(sltu, x9, x10, x14, 0x0, 1073741824, 1024, x8, 64, x15)
RVTEST_SIGBASE( x6,signature_x6_0)

inst_17:
// rs1==x22, rs2==x9, rd==x2, rs2_val == 2048, rs1_val == 16777216
// opcode: sltu ; op1:x22; op2:x9; dest:x2; op1val:16777216;  op2val:2048
TEST_RR_OP(sltu, x2, x22, x9, 0x0, 16777216, 2048, x6, 0, x21)

inst_18:
// rs1==x28, rs2==x19, rd==x10, rs2_val == 4096, 
// opcode: sltu ; op1:x28; op2:x19; dest:x10; op1val:10;  op2val:4096
TEST_RR_OP(sltu, x10, x28, x19, 0x1, 10, 4096, x6, 4, x21)

inst_19:
// rs1==x14, rs2==x11, rd==x19, rs2_val == 8192, 
// opcode: sltu ; op1:x14; op2:x11; dest:x19; op1val:1717986919;  op2val:8192
TEST_RR_OP(sltu, x19, x14, x11, 0x0, 1717986919, 8192, x6, 8, x21)

inst_20:
// rs1==x9, rs2==x10, rd==x23, rs2_val == 16384, rs1_val == 4294443007
// opcode: sltu ; op1:x9; op2:x10; dest:x23; op1val:4294443007;  op2val:16384
TEST_RR_OP(sltu, x23, x9, x10, 0x0, 4294443007, 16384, x6, 12, x21)

inst_21:
// rs1==x31, rs2==x5, rd==x22, rs2_val == 32768, rs1_val == 8192
// opcode: sltu ; op1:x31; op2:x5; dest:x22; op1val:8192;  op2val:32768
TEST_RR_OP(sltu, x22, x31, x5, 0x1, 8192, 32768, x6, 16, x21)

inst_22:
// rs1==x11, rs2==x1, rd==x29, rs2_val == 65536, rs1_val == 4294967293
// opcode: sltu ; op1:x11; op2:x1; dest:x29; op1val:4294967293;  op2val:65536
TEST_RR_OP(sltu, x29, x11, x1, 0x0, 4294967293, 65536, x6, 20, x21)

inst_23:
// rs1==x13, rs2==x15, rd==x26, rs2_val == 131072, rs1_val == 4294934527
// opcode: sltu ; op1:x13; op2:x15; dest:x26; op1val:4294934527;  op2val:131072
TEST_RR_OP(sltu, x26, x13, x15, 0x0, 4294934527, 131072, x6, 24, x21)

inst_24:
// rs1==x8, rs2==x20, rd==x12, rs2_val == 262144, 
// opcode: sltu ; op1:x8; op2:x20; dest:x12; op1val:128;  op2val:262144
TEST_RR_OP(sltu, x12, x8, x20, 0x1, 128, 262144, x6, 28, x21)

inst_25:
// rs1==x18, rs2==x28, rd==x27, rs2_val == 524288, rs1_val == 4294901759
// opcode: sltu ; op1:x18; op2:x28; dest:x27; op1val:4294901759;  op2val:524288
TEST_RR_OP(sltu, x27, x18, x28, 0x0, 4294901759, 524288, x6, 32, x21)

inst_26:
// rs1==x7, rs2==x31, rd==x16, rs2_val == 1048576, 
// opcode: sltu ; op1:x7; op2:x31; dest:x16; op1val:4294950911;  op2val:1048576
TEST_RR_OP(sltu, x16, x7, x31, 0x0, 4294950911, 1048576, x6, 36, x21)

inst_27:
// rs1==x15, rs2==x4, rd==x31, rs2_val == 2097152, rs1_val == 64
// opcode: sltu ; op1:x15; op2:x4; dest:x31; op1val:64;  op2val:2097152
TEST_RR_OP(sltu, x31, x15, x4, 0x1, 64, 2097152, x6, 40, x21)

inst_28:
// rs1==x3, rs2==x8, rd==x15, rs2_val == 8388608, rs1_val == 33554432
// opcode: sltu ; op1:x3; op2:x8; dest:x15; op1val:33554432;  op2val:8388608
TEST_RR_OP(sltu, x15, x3, x8, 0x0, 33554432, 8388608, x6, 44, x21)

inst_29:
// rs1==x0, rs2==x27, rd==x1, rs2_val == 16777216, 
// opcode: sltu ; op1:x0; op2:x27; dest:x1; op1val:858993460;  op2val:16777216
TEST_RR_OP(sltu, x1, x0, x27, 0x0, 858993460, 16777216, x6, 48, x21)

inst_30:
// rs1==x12, rs2==x17, rd==x5, rs2_val == 33554432, 
// opcode: sltu ; op1:x12; op2:x17; dest:x5; op1val:13;  op2val:33554432
TEST_RR_OP(sltu, x5, x12, x17, 0x1, 13, 33554432, x6, 52, x21)

inst_31:
// rs1==x16, rs2==x29, rd==x8, rs2_val == 67108864, 
// opcode: sltu ; op1:x16; op2:x29; dest:x8; op1val:1431655765;  op2val:67108864
TEST_RR_OP(sltu, x8, x16, x29, 0x0, 1431655765, 67108864, x6, 56, x21)

inst_32:
// rs2_val == 134217728, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4293918719;  op2val:134217728
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 4293918719, 134217728, x6, 60, x21)

inst_33:
// rs2_val == 268435456, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655764;  op2val:268435456
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655764, 268435456, x6, 64, x21)

inst_34:
// rs2_val == 536870912, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:17;  op2val:536870912
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 17, 536870912, x6, 68, x21)

inst_35:
// rs2_val == 1073741824, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1;  op2val:1073741824
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1, 1073741824, x6, 72, x21)

inst_36:
// rs2_val == 2147483648, rs1_val == 512
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:512;  op2val:2147483648
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 512, 2147483648, x6, 76, x21)

inst_37:
// rs2_val == 4294967294, rs1_val == 2097152
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2097152;  op2val:4294967294
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 2097152, 4294967294, x6, 80, x21)

inst_38:
// rs2_val == 4294967293, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:4294967293
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0, 4294967293, x6, 84, x21)

inst_39:
// rs2_val == 4294967291, rs1_val == 4096
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4096;  op2val:4294967291
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 4096, 4294967291, x6, 88, x21)

inst_40:
// rs2_val == 4294967279, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:4294967279
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 5, 4294967279, x6, 92, x21)

inst_41:
// rs2_val == 4294967263, rs1_val == 3221225471
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:3221225471;  op2val:4294967263
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 3221225471, 4294967263, x6, 96, x21)

inst_42:
// rs2_val == 4294967231, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46339;  op2val:4294967231
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46339, 4294967231, x6, 100, x21)

inst_43:
// rs2_val == 4294967167, rs1_val == 524288
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:524288;  op2val:4294967167
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 524288, 4294967167, x6, 104, x21)

inst_44:
// rs2_val == 4294967039, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:512;  op2val:4294967039
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 512, 4294967039, x6, 108, x21)

inst_45:
// rs2_val == 4294966783, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1073741824;  op2val:4294966783
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1073741824, 4294966783, x6, 112, x21)

inst_46:
// rs2_val == 4294966271, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:15;  op2val:4294966271
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 15, 4294966271, x6, 116, x21)

inst_47:
// rs2_val == 4294965247, rs1_val == 4294959103
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4294959103;  op2val:4294965247
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 4294959103, 4294965247, x6, 120, x21)

inst_48:
// rs2_val == 4294963199, rs1_val == 4294836223
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4294836223;  op2val:4294963199
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 4294836223, 4294963199, x6, 124, x21)

inst_49:
// rs2_val == 4294959103, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46339;  op2val:4294959103
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46339, 4294959103, x6, 128, x21)

inst_50:
// rs2_val == 4294950911, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1;  op2val:4294950911
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1, 4294950911, x6, 132, x21)

inst_51:
// rs2_val == 4294934527, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1073741824;  op2val:4294934527
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1073741824, 4294934527, x6, 136, x21)

inst_52:
// rs2_val == 4294901759, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655765;  op2val:4294901759
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1431655765, 4294901759, x6, 140, x21)

inst_53:
// rs2_val == 4294836223, rs1_val == 4160749567
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4160749567;  op2val:4294836223
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 4160749567, 4294836223, x6, 144, x21)

inst_54:
// rs2_val == 4294705151, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4293918719;  op2val:4294705151
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 4293918719, 4294705151, x6, 148, x21)

inst_55:
// rs2_val == 4294443007, rs1_val == 4227858431
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4227858431;  op2val:4294443007
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 4227858431, 4294443007, x6, 152, x21)

inst_56:
// rs2_val == 4293918719, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:7;  op2val:4293918719
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 7, 4293918719, x6, 156, x21)

inst_57:
// rs2_val == 4292870143, rs1_val == 2147483647
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2147483647;  op2val:4292870143
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 2147483647, 4292870143, x6, 160, x21)

inst_58:
// rs2_val == 4290772991, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4294967295;  op2val:4290772991
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 4294967295, 4290772991, x6, 164, x21)

inst_59:
// rs2_val == 4286578687, rs1_val == 2048
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2048;  op2val:4286578687
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 2048, 4286578687, x6, 168, x21)

inst_60:
// rs2_val == 4278190079, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:4278190079
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 6, 4278190079, x6, 172, x21)

inst_61:
// rs2_val == 4261412863, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:15;  op2val:4261412863
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 15, 4261412863, x6, 176, x21)

inst_62:
// rs2_val == 4227858431, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:64;  op2val:4227858431
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 64, 4227858431, x6, 180, x21)

inst_63:
// rs2_val == 4160749567, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993459;  op2val:4160749567
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 858993459, 4160749567, x6, 184, x21)

inst_64:
// rs2_val == 4026531839, rs1_val == 3758096383
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:3758096383;  op2val:4026531839
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 3758096383, 4026531839, x6, 188, x21)

inst_65:
// rs2_val == 3758096383, rs1_val == 4294967167
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4294967167;  op2val:3758096383
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 4294967167, 3758096383, x6, 192, x21)

inst_66:
// rs2_val == 3221225471, rs1_val == 4294967287
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4294967287;  op2val:3221225471
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 4294967287, 3221225471, x6, 196, x21)

inst_67:
// rs2_val == 2147483647, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:17;  op2val:2147483647
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 17, 2147483647, x6, 200, x21)

inst_68:
// rs2_val == 2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:12;  op2val:2863311530
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 12, 2863311530, x6, 204, x21)

inst_69:
// rs1_val == 2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:7
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 2, 7, x6, 208, x21)

inst_70:
// rs1_val == 4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:16
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 4, 16, x6, 212, x21)

inst_71:
// rs1_val == 8, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:8;  op2val:16
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 8, 16, x6, 216, x21)

inst_72:
// rs1_val == 16, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:16;  op2val:4294967291
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 16, 4294967291, x6, 220, x21)

inst_73:
// rs1_val == 32, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:32;  op2val:131072
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 32, 131072, x6, 224, x21)

inst_74:
// rs1_val == 256, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:256;  op2val:3758096383
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 256, 3758096383, x6, 228, x21)

inst_75:
// rs1_val == 1024, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1024;  op2val:4026531839
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1024, 4026531839, x6, 232, x21)

inst_76:
// rs1_val == 16384, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:16384;  op2val:1717986917
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 16384, 1717986917, x6, 236, x21)

inst_77:
// rs1_val == 32768, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:32768;  op2val:4294966271
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 32768, 4294966271, x6, 240, x21)

inst_78:
// rs1_val == 65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65536;  op2val:4294966271
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65536, 4294966271, x6, 244, x21)

inst_79:
// rs1_val == 131072, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:131072;  op2val:67108864
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 131072, 67108864, x6, 248, x21)

inst_80:
// rs1_val == 262144, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:262144;  op2val:4292870143
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 262144, 4292870143, x6, 252, x21)

inst_81:
// rs1_val == 4194304, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4194304;  op2val:2863311531
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 4194304, 2863311531, x6, 256, x21)

inst_82:
// rs1_val == 8388608, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:8388608;  op2val:4294967167
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 8388608, 4294967167, x6, 260, x21)

inst_83:
// rs1_val == 67108864, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:67108864;  op2val:6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 67108864, 6, x6, 264, x21)

inst_84:
// rs1_val == 134217728, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:134217728;  op2val:262144
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 134217728, 262144, x6, 268, x21)

inst_85:
// rs1_val == 268435456, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:268435456;  op2val:262144
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 268435456, 262144, x6, 272, x21)

inst_86:
// rs1_val == 536870912, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:536870912;  op2val:3221225471
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 536870912, 3221225471, x6, 276, x21)

inst_87:
// rs1_val == 4294967294, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4294967294;  op2val:2863311530
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 4294967294, 2863311530, x6, 280, x21)

inst_88:
// rs1_val == 4294967291, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4294967291;  op2val:4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 4294967291, 4, x6, 284, x21)

inst_89:
// rs1_val == 4294967263, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4294967263;  op2val:3758096383
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 4294967263, 3758096383, x6, 288, x21)

inst_90:
// rs1_val == 4294967231, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4294967231;  op2val:3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 4294967231, 3, x6, 292, x21)

inst_91:
// rs1_val == 4294967039, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4294967039;  op2val:1717986919
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 4294967039, 1717986919, x6, 296, x21)

inst_92:
// rs1_val == 4294966783, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4294966783;  op2val:33554432
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 4294966783, 33554432, x6, 300, x21)

inst_93:
// rs1_val == 4294966271, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4294966271;  op2val:5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 4294966271, 5, x6, 304, x21)

inst_94:
// rs1_val == 4294965247, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4294965247;  op2val:4294967231
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 4294965247, 4294967231, x6, 308, x21)

inst_95:
// rs1_val == 4294705151, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4294705151;  op2val:46341
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 4294705151, 46341, x6, 312, x21)

inst_96:
// rs1_val == 4292870143, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4292870143;  op2val:5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 4292870143, 5, x6, 316, x21)

inst_97:
// rs1_val == 4290772991, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4290772991;  op2val:1431655765
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 4290772991, 1431655765, x6, 320, x21)

inst_98:
// rs1_val == 4286578687, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4286578687;  op2val:131072
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 4286578687, 131072, x6, 324, x21)

inst_99:
// rs1_val == 4261412863, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4261412863;  op2val:2863311530
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 4261412863, 2863311530, x6, 328, x21)

inst_100:
// rs1_val == 4026531839, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4026531839;  op2val:1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 4026531839, 1, x6, 332, x21)

inst_101:
// rs1_val==3 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 3, 3, x6, 336, x21)

inst_102:
// rs1_val==3 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:1431655765
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 3, 1431655765, x6, 340, x21)

inst_103:
// rs1_val==3 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:2863311530
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 3, 2863311530, x6, 344, x21)

inst_104:
// rs1_val==3 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:5
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 3, 5, x6, 348, x21)

inst_105:
// rs1_val==3 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:858993459
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 3, 858993459, x6, 352, x21)

inst_106:
// rs1_val==3 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:1717986918
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 3, 1717986918, x6, 356, x21)

inst_107:
// rs1_val==3 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:46340
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 3, 46340, x6, 360, x21)

inst_108:
// rs1_val==3 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 3, 0, x6, 364, x21)

inst_109:
// rs1_val==3 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:65535
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 3, 65535, x6, 368, x21)

inst_110:
// rs1_val==3 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 3, 2, x6, 372, x21)

inst_111:
// rs1_val==3 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:1431655764
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 3, 1431655764, x6, 376, x21)

inst_112:
// rs1_val==3 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:2863311529
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 3, 2863311529, x6, 380, x21)

inst_113:
// rs1_val==3 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:4
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 3, 4, x6, 384, x21)

inst_114:
// rs1_val==3 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:858993458
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 3, 858993458, x6, 388, x21)

inst_115:
// rs1_val==3 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:1717986917
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 3, 1717986917, x6, 392, x21)

inst_116:
// rs1_val==3 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:46339
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 3, 46339, x6, 396, x21)

inst_117:
// rs1_val==3 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:65534
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 3, 65534, x6, 400, x21)

inst_118:
// rs1_val==3 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:1431655766
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 3, 1431655766, x6, 404, x21)

inst_119:
// rs1_val==3 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:2863311531
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 3, 2863311531, x6, 408, x21)

inst_120:
// rs1_val==3 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:6
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 3, 6, x6, 412, x21)

inst_121:
// rs1_val==3 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:858993460
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 3, 858993460, x6, 416, x21)

inst_122:
// rs1_val==3 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:1717986919
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 3, 1717986919, x6, 420, x21)

inst_123:
// rs1_val==3 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:46341
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 3, 46341, x6, 424, x21)

inst_124:
// rs1_val==3 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 3, 1, x6, 428, x21)

inst_125:
// rs1_val==3 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:65536
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 3, 65536, x6, 432, x21)

inst_126:
// rs1_val==1431655765 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655765;  op2val:3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655765, 3, x6, 436, x21)

inst_127:
// rs1_val==1431655765 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655765;  op2val:2863311530
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1431655765, 2863311530, x6, 440, x21)

inst_128:
// rs1_val==1431655765 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655765;  op2val:5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655765, 5, x6, 444, x21)

inst_129:
// rs1_val==1431655765 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655765;  op2val:858993459
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655765, 858993459, x6, 448, x21)

inst_130:
// rs1_val==1431655765 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655765;  op2val:1717986918
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1431655765, 1717986918, x6, 452, x21)

inst_131:
// rs1_val==1431655765 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655765;  op2val:46340
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655765, 46340, x6, 456, x21)

inst_132:
// rs1_val==1431655765 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655765;  op2val:0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655765, 0, x6, 460, x21)

inst_133:
// rs1_val==1431655765 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655765;  op2val:65535
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655765, 65535, x6, 464, x21)

inst_134:
// rs1_val==1431655765 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655765;  op2val:2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655765, 2, x6, 468, x21)

inst_135:
// rs1_val==1431655765 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655765;  op2val:1431655764
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655765, 1431655764, x6, 472, x21)

inst_136:
// rs1_val==1431655765 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655765;  op2val:2863311529
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1431655765, 2863311529, x6, 476, x21)

inst_137:
// rs1_val==1431655765 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655765;  op2val:4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655765, 4, x6, 480, x21)

inst_138:
// rs1_val==1431655765 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655765;  op2val:858993458
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655765, 858993458, x6, 484, x21)

inst_139:
// rs1_val==1431655765 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655765;  op2val:1717986917
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1431655765, 1717986917, x6, 488, x21)

inst_140:
// rs1_val==1431655765 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655765;  op2val:46339
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655765, 46339, x6, 492, x21)

inst_141:
// rs1_val==1431655765 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655765;  op2val:65534
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655765, 65534, x6, 496, x21)

inst_142:
// rs1_val==1431655765 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655765;  op2val:1431655766
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1431655765, 1431655766, x6, 500, x21)

inst_143:
// rs1_val==1431655765 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655765;  op2val:2863311531
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1431655765, 2863311531, x6, 504, x21)

inst_144:
// rs1_val==1431655765 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655765;  op2val:6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655765, 6, x6, 508, x21)

inst_145:
// rs1_val==1431655765 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655765;  op2val:858993460
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655765, 858993460, x6, 512, x21)

inst_146:
// rs1_val==1431655765 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655765;  op2val:1717986919
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1431655765, 1717986919, x6, 516, x21)

inst_147:
// rs1_val==1431655765 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655765;  op2val:46341
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655765, 46341, x6, 520, x21)

inst_148:
// rs1_val==1431655765 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655765;  op2val:1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655765, 1, x6, 524, x21)

inst_149:
// rs1_val==1431655765 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655765;  op2val:65536
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655765, 65536, x6, 528, x21)

inst_150:
// rs1_val==2863311530 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311530;  op2val:3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311530, 3, x6, 532, x21)

inst_151:
// rs1_val==2863311530 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311530;  op2val:1431655765
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311530, 1431655765, x6, 536, x21)

inst_152:
// rs1_val==2863311530 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311530;  op2val:2863311530
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311530, 2863311530, x6, 540, x21)

inst_153:
// rs1_val==2863311530 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311530;  op2val:5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311530, 5, x6, 544, x21)

inst_154:
// rs1_val==2863311530 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311530;  op2val:858993459
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311530, 858993459, x6, 548, x21)

inst_155:
// rs1_val==2863311530 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311530;  op2val:1717986918
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311530, 1717986918, x6, 552, x21)

inst_156:
// rs1_val==2863311530 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311530;  op2val:46340
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311530, 46340, x6, 556, x21)

inst_157:
// rs1_val==2863311530 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311530;  op2val:0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311530, 0, x6, 560, x21)

inst_158:
// rs1_val==2863311530 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311530;  op2val:65535
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311530, 65535, x6, 564, x21)

inst_159:
// rs1_val==2863311530 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311530;  op2val:2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311530, 2, x6, 568, x21)

inst_160:
// rs1_val==2863311530 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311530;  op2val:1431655764
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311530, 1431655764, x6, 572, x21)

inst_161:
// rs1_val==2863311530 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311530;  op2val:2863311529
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311530, 2863311529, x6, 576, x21)

inst_162:
// rs1_val==2863311530 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311530;  op2val:4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311530, 4, x6, 580, x21)

inst_163:
// rs1_val==2863311530 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311530;  op2val:858993458
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311530, 858993458, x6, 584, x21)

inst_164:
// rs1_val==2863311530 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311530;  op2val:1717986917
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311530, 1717986917, x6, 588, x21)

inst_165:
// rs1_val==2863311530 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311530;  op2val:46339
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311530, 46339, x6, 592, x21)

inst_166:
// rs1_val==2863311530 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311530;  op2val:65534
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311530, 65534, x6, 596, x21)

inst_167:
// rs1_val==2863311530 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311530;  op2val:1431655766
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311530, 1431655766, x6, 600, x21)

inst_168:
// rs1_val==2863311530 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311530;  op2val:2863311531
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 2863311530, 2863311531, x6, 604, x21)

inst_169:
// rs1_val==2863311530 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311530;  op2val:6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311530, 6, x6, 608, x21)

inst_170:
// rs1_val==2863311530 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311530;  op2val:858993460
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311530, 858993460, x6, 612, x21)

inst_171:
// rs1_val==2863311530 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311530;  op2val:1717986919
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311530, 1717986919, x6, 616, x21)

inst_172:
// rs1_val==2863311530 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311530;  op2val:46341
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311530, 46341, x6, 620, x21)

inst_173:
// rs1_val==2863311530 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311530;  op2val:1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311530, 1, x6, 624, x21)

inst_174:
// rs1_val==2863311530 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311530;  op2val:65536
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311530, 65536, x6, 628, x21)

inst_175:
// rs1_val==5 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 5, 3, x6, 632, x21)

inst_176:
// rs1_val==5 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:1431655765
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 5, 1431655765, x6, 636, x21)

inst_177:
// rs1_val==5 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:2863311530
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 5, 2863311530, x6, 640, x21)

inst_178:
// rs1_val==5 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 5, 5, x6, 644, x21)

inst_179:
// rs1_val==5 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:858993459
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 5, 858993459, x6, 648, x21)

inst_180:
// rs1_val==5 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:1717986918
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 5, 1717986918, x6, 652, x21)

inst_181:
// rs1_val==5 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:46340
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 5, 46340, x6, 656, x21)

inst_182:
// rs1_val==5 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 5, 0, x6, 660, x21)

inst_183:
// rs1_val==5 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:65535
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 5, 65535, x6, 664, x21)

inst_184:
// rs1_val==5 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 5, 2, x6, 668, x21)

inst_185:
// rs1_val==5 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:1431655764
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 5, 1431655764, x6, 672, x21)

inst_186:
// rs1_val==5 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:2863311529
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 5, 2863311529, x6, 676, x21)

inst_187:
// rs1_val==5 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 5, 4, x6, 680, x21)

inst_188:
// rs1_val==5 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:858993458
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 5, 858993458, x6, 684, x21)

inst_189:
// rs1_val==5 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:1717986917
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 5, 1717986917, x6, 688, x21)

inst_190:
// rs1_val==5 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:46339
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 5, 46339, x6, 692, x21)

inst_191:
// rs1_val==5 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:65534
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 5, 65534, x6, 696, x21)

inst_192:
// rs1_val==5 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:1431655766
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 5, 1431655766, x6, 700, x21)

inst_193:
// rs1_val==5 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:2863311531
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 5, 2863311531, x6, 704, x21)

inst_194:
// rs1_val==5 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:6
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 5, 6, x6, 708, x21)

inst_195:
// rs1_val==5 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:858993460
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 5, 858993460, x6, 712, x21)

inst_196:
// rs1_val==5 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:1717986919
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 5, 1717986919, x6, 716, x21)

inst_197:
// rs1_val==5 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:46341
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 5, 46341, x6, 720, x21)

inst_198:
// rs1_val==5 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 5, 1, x6, 724, x21)

inst_199:
// rs1_val==5 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:65536
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 5, 65536, x6, 728, x21)

inst_200:
// rs1_val==858993459 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993459;  op2val:3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993459, 3, x6, 732, x21)

inst_201:
// rs1_val==858993459 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993459;  op2val:1431655765
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 858993459, 1431655765, x6, 736, x21)

inst_202:
// rs1_val==858993459 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993459;  op2val:2863311530
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 858993459, 2863311530, x6, 740, x21)

inst_203:
// rs1_val==858993459 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993459;  op2val:5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993459, 5, x6, 744, x21)

inst_204:
// rs1_val==858993459 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993459;  op2val:858993459
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993459, 858993459, x6, 748, x21)

inst_205:
// rs1_val==858993459 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993459;  op2val:1717986918
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 858993459, 1717986918, x6, 752, x21)

inst_206:
// rs1_val==858993459 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993459;  op2val:46340
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993459, 46340, x6, 756, x21)

inst_207:
// rs1_val==858993459 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993459;  op2val:0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993459, 0, x6, 760, x21)

inst_208:
// rs1_val==858993459 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993459;  op2val:65535
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993459, 65535, x6, 764, x21)

inst_209:
// rs1_val==858993459 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993459;  op2val:2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993459, 2, x6, 768, x21)

inst_210:
// rs1_val==858993459 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993459;  op2val:1431655764
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 858993459, 1431655764, x6, 772, x21)

inst_211:
// rs1_val==858993459 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993459;  op2val:2863311529
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 858993459, 2863311529, x6, 776, x21)

inst_212:
// rs1_val==858993459 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993459;  op2val:4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993459, 4, x6, 780, x21)

inst_213:
// rs1_val==858993459 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993459;  op2val:858993458
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993459, 858993458, x6, 784, x21)

inst_214:
// rs1_val==858993459 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993459;  op2val:1717986917
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 858993459, 1717986917, x6, 788, x21)

inst_215:
// rs1_val==858993459 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993459;  op2val:46339
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993459, 46339, x6, 792, x21)

inst_216:
// rs1_val==858993459 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993459;  op2val:65534
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993459, 65534, x6, 796, x21)

inst_217:
// rs1_val==858993459 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993459;  op2val:1431655766
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 858993459, 1431655766, x6, 800, x21)

inst_218:
// rs1_val==858993459 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993459;  op2val:2863311531
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 858993459, 2863311531, x6, 804, x21)

inst_219:
// rs1_val==858993459 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993459;  op2val:6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993459, 6, x6, 808, x21)

inst_220:
// rs1_val==858993459 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993459;  op2val:858993460
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 858993459, 858993460, x6, 812, x21)

inst_221:
// rs1_val==858993459 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993459;  op2val:1717986919
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 858993459, 1717986919, x6, 816, x21)

inst_222:
// rs1_val==858993459 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993459;  op2val:46341
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993459, 46341, x6, 820, x21)

inst_223:
// rs1_val==858993459 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993459;  op2val:1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993459, 1, x6, 824, x21)

inst_224:
// rs1_val==858993459 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993459;  op2val:65536
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993459, 65536, x6, 828, x21)

inst_225:
// rs1_val==1717986918 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986918;  op2val:3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986918, 3, x6, 832, x21)

inst_226:
// rs1_val==1717986918 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986918;  op2val:1431655765
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986918, 1431655765, x6, 836, x21)

inst_227:
// rs1_val==1717986918 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986918;  op2val:2863311530
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1717986918, 2863311530, x6, 840, x21)

inst_228:
// rs1_val==1717986918 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986918;  op2val:5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986918, 5, x6, 844, x21)

inst_229:
// rs1_val==1717986918 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986918;  op2val:858993459
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986918, 858993459, x6, 848, x21)

inst_230:
// rs1_val==1717986918 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986918;  op2val:1717986918
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986918, 1717986918, x6, 852, x21)

inst_231:
// rs1_val==1717986918 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986918;  op2val:46340
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986918, 46340, x6, 856, x21)

inst_232:
// rs1_val==1717986918 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986918;  op2val:0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986918, 0, x6, 860, x21)

inst_233:
// rs1_val==1717986918 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986918;  op2val:65535
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986918, 65535, x6, 864, x21)

inst_234:
// rs1_val==1717986918 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986918;  op2val:2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986918, 2, x6, 868, x21)

inst_235:
// rs1_val==1717986918 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986918;  op2val:1431655764
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986918, 1431655764, x6, 872, x21)

inst_236:
// rs1_val==1717986918 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986918;  op2val:2863311529
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1717986918, 2863311529, x6, 876, x21)

inst_237:
// rs1_val==1717986918 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986918;  op2val:4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986918, 4, x6, 880, x21)

inst_238:
// rs1_val==1717986918 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986918;  op2val:858993458
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986918, 858993458, x6, 884, x21)

inst_239:
// rs1_val==1717986918 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986918;  op2val:1717986917
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986918, 1717986917, x6, 888, x21)

inst_240:
// rs1_val==1717986918 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986918;  op2val:46339
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986918, 46339, x6, 892, x21)

inst_241:
// rs1_val==1717986918 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986918;  op2val:65534
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986918, 65534, x6, 896, x21)

inst_242:
// rs1_val==1717986918 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986918;  op2val:1431655766
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986918, 1431655766, x6, 900, x21)

inst_243:
// rs1_val==1717986918 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986918;  op2val:2863311531
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1717986918, 2863311531, x6, 904, x21)

inst_244:
// rs1_val==1717986918 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986918;  op2val:6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986918, 6, x6, 908, x21)

inst_245:
// rs1_val==1717986918 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986918;  op2val:858993460
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986918, 858993460, x6, 912, x21)

inst_246:
// rs1_val==1717986918 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986918;  op2val:1717986919
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1717986918, 1717986919, x6, 916, x21)

inst_247:
// rs1_val==1717986918 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986918;  op2val:46341
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986918, 46341, x6, 920, x21)

inst_248:
// rs1_val==1717986918 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986918;  op2val:1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986918, 1, x6, 924, x21)

inst_249:
// rs1_val==1717986918 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986918;  op2val:65536
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986918, 65536, x6, 928, x21)

inst_250:
// rs1_val==46340 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46340;  op2val:3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 46340, 3, x6, 932, x21)

inst_251:
// rs1_val==46340 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46340;  op2val:1431655765
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46340, 1431655765, x6, 936, x21)

inst_252:
// rs1_val==46340 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46340;  op2val:2863311530
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46340, 2863311530, x6, 940, x21)

inst_253:
// rs1_val==46340 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46340;  op2val:5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 46340, 5, x6, 944, x21)

inst_254:
// rs1_val==46340 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46340;  op2val:858993459
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46340, 858993459, x6, 948, x21)

inst_255:
// rs1_val==46340 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46340;  op2val:1717986918
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46340, 1717986918, x6, 952, x21)

inst_256:
// rs1_val==46340 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46340;  op2val:46340
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 46340, 46340, x6, 956, x21)

inst_257:
// rs1_val==46340 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46340;  op2val:0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 46340, 0, x6, 960, x21)

inst_258:
// rs1_val==46340 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46340;  op2val:65535
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46340, 65535, x6, 964, x21)

inst_259:
// rs1_val==46340 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46340;  op2val:2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 46340, 2, x6, 968, x21)

inst_260:
// rs1_val==46340 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46340;  op2val:1431655764
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46340, 1431655764, x6, 972, x21)

inst_261:
// rs1_val==46340 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46340;  op2val:2863311529
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46340, 2863311529, x6, 976, x21)

inst_262:
// rs1_val==46340 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46340;  op2val:4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 46340, 4, x6, 980, x21)

inst_263:
// rs1_val==46340 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46340;  op2val:858993458
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46340, 858993458, x6, 984, x21)

inst_264:
// rs1_val==46340 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46340;  op2val:1717986917
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46340, 1717986917, x6, 988, x21)

inst_265:
// rs1_val==46340 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46340;  op2val:46339
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 46340, 46339, x6, 992, x21)

inst_266:
// rs1_val==46340 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46340;  op2val:65534
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46340, 65534, x6, 996, x21)

inst_267:
// rs1_val==46340 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46340;  op2val:1431655766
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46340, 1431655766, x6, 1000, x21)

inst_268:
// rs1_val==46340 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46340;  op2val:2863311531
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46340, 2863311531, x6, 1004, x21)

inst_269:
// rs1_val==46340 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46340;  op2val:6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 46340, 6, x6, 1008, x21)

inst_270:
// rs1_val==46340 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46340;  op2val:858993460
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46340, 858993460, x6, 1012, x21)

inst_271:
// rs1_val==46340 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46340;  op2val:1717986919
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46340, 1717986919, x6, 1016, x21)

inst_272:
// rs1_val==46340 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46340;  op2val:46341
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46340, 46341, x6, 1020, x21)

inst_273:
// rs1_val==46340 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46340;  op2val:1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 46340, 1, x6, 1024, x21)

inst_274:
// rs1_val==46340 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46340;  op2val:65536
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46340, 65536, x6, 1028, x21)

inst_275:
// rs1_val==0 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:3
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0, 3, x6, 1032, x21)

inst_276:
// rs1_val==0 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:1431655765
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0, 1431655765, x6, 1036, x21)

inst_277:
// rs1_val==0 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:2863311530
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0, 2863311530, x6, 1040, x21)

inst_278:
// rs1_val==0 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:5
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0, 5, x6, 1044, x21)

inst_279:
// rs1_val==0 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:858993459
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0, 858993459, x6, 1048, x21)

inst_280:
// rs1_val==0 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:1717986918
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0, 1717986918, x6, 1052, x21)

inst_281:
// rs1_val==0 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:46340
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0, 46340, x6, 1056, x21)

inst_282:
// rs1_val==0 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0, 0, x6, 1060, x21)

inst_283:
// rs1_val==0 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:65535
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0, 65535, x6, 1064, x21)

inst_284:
// rs1_val==0 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:2
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0, 2, x6, 1068, x21)

inst_285:
// rs1_val==0 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:1431655764
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0, 1431655764, x6, 1072, x21)

inst_286:
// rs1_val==0 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:2863311529
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0, 2863311529, x6, 1076, x21)

inst_287:
// rs1_val==0 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:4
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0, 4, x6, 1080, x21)

inst_288:
// rs1_val==0 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:858993458
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0, 858993458, x6, 1084, x21)

inst_289:
// rs1_val==0 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:1717986917
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0, 1717986917, x6, 1088, x21)

inst_290:
// rs1_val==0 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:46339
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0, 46339, x6, 1092, x21)

inst_291:
// rs1_val==0 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:65534
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0, 65534, x6, 1096, x21)

inst_292:
// rs1_val==0 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:1431655766
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0, 1431655766, x6, 1100, x21)

inst_293:
// rs1_val==0 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:2863311531
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0, 2863311531, x6, 1104, x21)

inst_294:
// rs1_val==0 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:6
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0, 6, x6, 1108, x21)

inst_295:
// rs1_val==0 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:858993460
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0, 858993460, x6, 1112, x21)

inst_296:
// rs1_val==0 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:1717986919
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0, 1717986919, x6, 1116, x21)

inst_297:
// rs1_val==0 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:46341
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0, 46341, x6, 1120, x21)

inst_298:
// rs1_val==0 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:1
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0, 1, x6, 1124, x21)

inst_299:
// rs1_val==0 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:65536
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0, 65536, x6, 1128, x21)

inst_300:
// rs1_val==65535 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65535;  op2val:3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65535, 3, x6, 1132, x21)

inst_301:
// rs1_val==65535 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65535;  op2val:1431655765
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65535, 1431655765, x6, 1136, x21)

inst_302:
// rs1_val==65535 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65535;  op2val:2863311530
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65535, 2863311530, x6, 1140, x21)

inst_303:
// rs1_val==65535 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65535;  op2val:5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65535, 5, x6, 1144, x21)

inst_304:
// rs1_val==65535 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65535;  op2val:858993459
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65535, 858993459, x6, 1148, x21)

inst_305:
// rs1_val==65535 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65535;  op2val:1717986918
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65535, 1717986918, x6, 1152, x21)

inst_306:
// rs1_val==65535 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65535;  op2val:46340
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65535, 46340, x6, 1156, x21)

inst_307:
// rs1_val==65535 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65535;  op2val:0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65535, 0, x6, 1160, x21)

inst_308:
// rs1_val==65535 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65535;  op2val:65535
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65535, 65535, x6, 1164, x21)

inst_309:
// rs1_val==65535 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65535;  op2val:2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65535, 2, x6, 1168, x21)

inst_310:
// rs1_val==65535 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65535;  op2val:1431655764
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65535, 1431655764, x6, 1172, x21)

inst_311:
// rs1_val==65535 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65535;  op2val:2863311529
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65535, 2863311529, x6, 1176, x21)

inst_312:
// rs1_val==65535 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65535;  op2val:4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65535, 4, x6, 1180, x21)

inst_313:
// rs1_val==65535 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65535;  op2val:858993458
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65535, 858993458, x6, 1184, x21)

inst_314:
// rs1_val==65535 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65535;  op2val:1717986917
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65535, 1717986917, x6, 1188, x21)

inst_315:
// rs1_val==65535 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65535;  op2val:46339
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65535, 46339, x6, 1192, x21)

inst_316:
// rs1_val==65535 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65535;  op2val:65534
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65535, 65534, x6, 1196, x21)

inst_317:
// rs1_val==65535 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65535;  op2val:1431655766
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65535, 1431655766, x6, 1200, x21)

inst_318:
// rs1_val==65535 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65535;  op2val:2863311531
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65535, 2863311531, x6, 1204, x21)

inst_319:
// rs1_val==65535 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65535;  op2val:6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65535, 6, x6, 1208, x21)

inst_320:
// rs1_val==65535 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65535;  op2val:858993460
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65535, 858993460, x6, 1212, x21)

inst_321:
// rs1_val==65535 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65535;  op2val:1717986919
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65535, 1717986919, x6, 1216, x21)

inst_322:
// rs1_val==65535 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65535;  op2val:46341
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65535, 46341, x6, 1220, x21)

inst_323:
// rs1_val==65535 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65535;  op2val:1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65535, 1, x6, 1224, x21)

inst_324:
// rs1_val==65535 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65535;  op2val:65536
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65535, 65536, x6, 1228, x21)

inst_325:
// rs1_val==2 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:3
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 2, 3, x6, 1232, x21)

inst_326:
// rs1_val==2 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:1431655765
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 2, 1431655765, x6, 1236, x21)

inst_327:
// rs1_val==2 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:2863311530
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 2, 2863311530, x6, 1240, x21)

inst_328:
// rs1_val==2 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:5
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 2, 5, x6, 1244, x21)

inst_329:
// rs1_val==2 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:858993459
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 2, 858993459, x6, 1248, x21)

inst_330:
// rs1_val==2 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:1717986918
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 2, 1717986918, x6, 1252, x21)

inst_331:
// rs1_val==2 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:46340
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 2, 46340, x6, 1256, x21)

inst_332:
// rs1_val==2 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2, 0, x6, 1260, x21)

inst_333:
// rs1_val==2 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:65535
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 2, 65535, x6, 1264, x21)

inst_334:
// rs1_val==2 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2, 2, x6, 1268, x21)

inst_335:
// rs1_val==2 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:1431655764
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 2, 1431655764, x6, 1272, x21)

inst_336:
// rs1_val==2 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:2863311529
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 2, 2863311529, x6, 1276, x21)

inst_337:
// rs1_val==2 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:4
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 2, 4, x6, 1280, x21)

inst_338:
// rs1_val==2 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:858993458
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 2, 858993458, x6, 1284, x21)

inst_339:
// rs1_val==2 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:1717986917
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 2, 1717986917, x6, 1288, x21)

inst_340:
// rs1_val==2 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:46339
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 2, 46339, x6, 1292, x21)

inst_341:
// rs1_val==2 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:65534
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 2, 65534, x6, 1296, x21)

inst_342:
// rs1_val==2 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:1431655766
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 2, 1431655766, x6, 1300, x21)

inst_343:
// rs1_val==2 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:2863311531
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 2, 2863311531, x6, 1304, x21)

inst_344:
// rs1_val==2 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:6
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 2, 6, x6, 1308, x21)

inst_345:
// rs1_val==2 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:858993460
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 2, 858993460, x6, 1312, x21)

inst_346:
// rs1_val==2 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:1717986919
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 2, 1717986919, x6, 1316, x21)

inst_347:
// rs1_val==2 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:46341
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 2, 46341, x6, 1320, x21)

inst_348:
// rs1_val==2 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2, 1, x6, 1324, x21)

inst_349:
// rs1_val==2 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:65536
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 2, 65536, x6, 1328, x21)

inst_350:
// rs1_val==1431655764 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655764;  op2val:3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655764, 3, x6, 1332, x21)

inst_351:
// rs1_val==1431655764 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655764;  op2val:1431655765
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1431655764, 1431655765, x6, 1336, x21)

inst_352:
// rs1_val==1431655764 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655764;  op2val:2863311530
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1431655764, 2863311530, x6, 1340, x21)

inst_353:
// rs1_val==1431655764 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655764;  op2val:5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655764, 5, x6, 1344, x21)

inst_354:
// rs1_val==1431655764 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655764;  op2val:858993459
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655764, 858993459, x6, 1348, x21)

inst_355:
// rs1_val==1431655764 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655764;  op2val:1717986918
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1431655764, 1717986918, x6, 1352, x21)

inst_356:
// rs1_val==1431655764 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655764;  op2val:46340
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655764, 46340, x6, 1356, x21)

inst_357:
// rs1_val==1431655764 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655764;  op2val:0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655764, 0, x6, 1360, x21)

inst_358:
// rs1_val==1431655764 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655764;  op2val:65535
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655764, 65535, x6, 1364, x21)

inst_359:
// rs1_val==1431655764 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655764;  op2val:2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655764, 2, x6, 1368, x21)

inst_360:
// rs1_val==1431655764 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655764;  op2val:1431655764
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655764, 1431655764, x6, 1372, x21)

inst_361:
// rs1_val==1431655764 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655764;  op2val:2863311529
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1431655764, 2863311529, x6, 1376, x21)

inst_362:
// rs1_val==1431655764 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655764;  op2val:4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655764, 4, x6, 1380, x21)

inst_363:
// rs1_val==1431655764 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655764;  op2val:858993458
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655764, 858993458, x6, 1384, x21)

inst_364:
// rs1_val==1431655764 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655764;  op2val:1717986917
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1431655764, 1717986917, x6, 1388, x21)

inst_365:
// rs1_val==1431655764 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655764;  op2val:46339
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655764, 46339, x6, 1392, x21)

inst_366:
// rs1_val==1431655764 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655764;  op2val:65534
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655764, 65534, x6, 1396, x21)

inst_367:
// rs1_val==1431655764 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655764;  op2val:1431655766
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1431655764, 1431655766, x6, 1400, x21)

inst_368:
// rs1_val==1431655764 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655764;  op2val:2863311531
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1431655764, 2863311531, x6, 1404, x21)

inst_369:
// rs1_val==1431655764 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655764;  op2val:6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655764, 6, x6, 1408, x21)

inst_370:
// rs1_val==1431655764 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655764;  op2val:858993460
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655764, 858993460, x6, 1412, x21)

inst_371:
// rs1_val==1431655764 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655764;  op2val:1717986919
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1431655764, 1717986919, x6, 1416, x21)

inst_372:
// rs1_val==1431655764 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655764;  op2val:46341
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655764, 46341, x6, 1420, x21)

inst_373:
// rs1_val==1431655764 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655764;  op2val:1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655764, 1, x6, 1424, x21)

inst_374:
// rs1_val==1431655764 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655764;  op2val:65536
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655764, 65536, x6, 1428, x21)

inst_375:
// rs1_val==2863311529 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311529;  op2val:3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311529, 3, x6, 1432, x21)

inst_376:
// rs1_val==2863311529 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311529;  op2val:1431655765
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311529, 1431655765, x6, 1436, x21)

inst_377:
// rs1_val==2863311529 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311529;  op2val:2863311530
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 2863311529, 2863311530, x6, 1440, x21)

inst_378:
// rs1_val==2863311529 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311529;  op2val:5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311529, 5, x6, 1444, x21)

inst_379:
// rs1_val==2863311529 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311529;  op2val:858993459
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311529, 858993459, x6, 1448, x21)

inst_380:
// rs1_val==2863311529 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311529;  op2val:1717986918
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311529, 1717986918, x6, 1452, x21)

inst_381:
// rs1_val==2863311529 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311529;  op2val:46340
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311529, 46340, x6, 1456, x21)

inst_382:
// rs1_val==2863311529 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311529;  op2val:0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311529, 0, x6, 1460, x21)

inst_383:
// rs1_val==2863311529 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311529;  op2val:65535
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311529, 65535, x6, 1464, x21)

inst_384:
// rs1_val==2863311529 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311529;  op2val:2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311529, 2, x6, 1468, x21)

inst_385:
// rs1_val==2863311529 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311529;  op2val:1431655764
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311529, 1431655764, x6, 1472, x21)

inst_386:
// rs1_val==2863311529 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311529;  op2val:2863311529
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311529, 2863311529, x6, 1476, x21)

inst_387:
// rs1_val==2863311529 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311529;  op2val:4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311529, 4, x6, 1480, x21)

inst_388:
// rs1_val==2863311529 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311529;  op2val:858993458
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311529, 858993458, x6, 1484, x21)

inst_389:
// rs1_val==2863311529 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311529;  op2val:1717986917
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311529, 1717986917, x6, 1488, x21)

inst_390:
// rs1_val==2863311529 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311529;  op2val:46339
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311529, 46339, x6, 1492, x21)

inst_391:
// rs1_val==2863311529 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311529;  op2val:65534
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311529, 65534, x6, 1496, x21)

inst_392:
// rs1_val==2863311529 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311529;  op2val:1431655766
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311529, 1431655766, x6, 1500, x21)

inst_393:
// rs1_val==2863311529 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311529;  op2val:2863311531
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 2863311529, 2863311531, x6, 1504, x21)

inst_394:
// rs1_val==2863311529 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311529;  op2val:6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311529, 6, x6, 1508, x21)

inst_395:
// rs1_val==2863311529 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311529;  op2val:858993460
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311529, 858993460, x6, 1512, x21)

inst_396:
// rs1_val==2863311529 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311529;  op2val:1717986919
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311529, 1717986919, x6, 1516, x21)

inst_397:
// rs1_val==2863311529 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311529;  op2val:46341
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311529, 46341, x6, 1520, x21)

inst_398:
// rs1_val==2863311529 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311529;  op2val:1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311529, 1, x6, 1524, x21)

inst_399:
// rs1_val==2863311529 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311529;  op2val:65536
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311529, 65536, x6, 1528, x21)

inst_400:
// rs1_val==4 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 4, 3, x6, 1532, x21)

inst_401:
// rs1_val==4 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:1431655765
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 4, 1431655765, x6, 1536, x21)

inst_402:
// rs1_val==4 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:2863311530
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 4, 2863311530, x6, 1540, x21)

inst_403:
// rs1_val==4 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:5
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 4, 5, x6, 1544, x21)

inst_404:
// rs1_val==4 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:858993459
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 4, 858993459, x6, 1548, x21)

inst_405:
// rs1_val==4 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:1717986918
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 4, 1717986918, x6, 1552, x21)

inst_406:
// rs1_val==4 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:46340
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 4, 46340, x6, 1556, x21)

inst_407:
// rs1_val==4 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 4, 0, x6, 1560, x21)

inst_408:
// rs1_val==4 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:65535
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 4, 65535, x6, 1564, x21)

inst_409:
// rs1_val==4 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 4, 2, x6, 1568, x21)

inst_410:
// rs1_val==4 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:1431655764
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 4, 1431655764, x6, 1572, x21)

inst_411:
// rs1_val==4 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:2863311529
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 4, 2863311529, x6, 1576, x21)

inst_412:
// rs1_val==4 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 4, 4, x6, 1580, x21)

inst_413:
// rs1_val==4 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:858993458
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 4, 858993458, x6, 1584, x21)

inst_414:
// rs1_val==4 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:1717986917
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 4, 1717986917, x6, 1588, x21)

inst_415:
// rs1_val==4 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:46339
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 4, 46339, x6, 1592, x21)

inst_416:
// rs1_val==4 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:65534
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 4, 65534, x6, 1596, x21)

inst_417:
// rs1_val==4 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:1431655766
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 4, 1431655766, x6, 1600, x21)

inst_418:
// rs1_val==4 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:2863311531
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 4, 2863311531, x6, 1604, x21)

inst_419:
// rs1_val==4 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:6
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 4, 6, x6, 1608, x21)

inst_420:
// rs1_val==4 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:858993460
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 4, 858993460, x6, 1612, x21)

inst_421:
// rs1_val==4 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:1717986919
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 4, 1717986919, x6, 1616, x21)

inst_422:
// rs1_val==4 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:46341
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 4, 46341, x6, 1620, x21)

inst_423:
// rs1_val==4 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 4, 1, x6, 1624, x21)

inst_424:
// rs1_val==4 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:65536
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 4, 65536, x6, 1628, x21)

inst_425:
// rs1_val==858993458 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993458;  op2val:3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993458, 3, x6, 1632, x21)

inst_426:
// rs1_val==858993458 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993458;  op2val:1431655765
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 858993458, 1431655765, x6, 1636, x21)

inst_427:
// rs1_val==858993458 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993458;  op2val:2863311530
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 858993458, 2863311530, x6, 1640, x21)

inst_428:
// rs1_val==858993458 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993458;  op2val:5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993458, 5, x6, 1644, x21)

inst_429:
// rs1_val==858993458 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993458;  op2val:858993459
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 858993458, 858993459, x6, 1648, x21)

inst_430:
// rs1_val==858993458 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993458;  op2val:1717986918
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 858993458, 1717986918, x6, 1652, x21)

inst_431:
// rs1_val==858993458 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993458;  op2val:46340
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993458, 46340, x6, 1656, x21)

inst_432:
// rs1_val==858993458 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993458;  op2val:0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993458, 0, x6, 1660, x21)

inst_433:
// rs1_val==858993458 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993458;  op2val:65535
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993458, 65535, x6, 1664, x21)

inst_434:
// rs1_val==858993458 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993458;  op2val:2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993458, 2, x6, 1668, x21)

inst_435:
// rs1_val==858993458 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993458;  op2val:1431655764
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 858993458, 1431655764, x6, 1672, x21)

inst_436:
// rs1_val==858993458 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993458;  op2val:2863311529
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 858993458, 2863311529, x6, 1676, x21)

inst_437:
// rs1_val==858993458 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993458;  op2val:4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993458, 4, x6, 1680, x21)

inst_438:
// rs1_val==858993458 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993458;  op2val:858993458
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993458, 858993458, x6, 1684, x21)

inst_439:
// rs1_val==858993458 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993458;  op2val:1717986917
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 858993458, 1717986917, x6, 1688, x21)

inst_440:
// rs1_val==858993458 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993458;  op2val:46339
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993458, 46339, x6, 1692, x21)

inst_441:
// rs1_val==858993458 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993458;  op2val:65534
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993458, 65534, x6, 1696, x21)

inst_442:
// rs1_val==858993458 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993458;  op2val:1431655766
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 858993458, 1431655766, x6, 1700, x21)

inst_443:
// rs1_val==858993458 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993458;  op2val:2863311531
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 858993458, 2863311531, x6, 1704, x21)

inst_444:
// rs1_val==858993458 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993458;  op2val:6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993458, 6, x6, 1708, x21)

inst_445:
// rs1_val==858993458 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993458;  op2val:858993460
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 858993458, 858993460, x6, 1712, x21)

inst_446:
// rs1_val==858993458 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993458;  op2val:1717986919
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 858993458, 1717986919, x6, 1716, x21)

inst_447:
// rs1_val==858993458 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993458;  op2val:46341
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993458, 46341, x6, 1720, x21)

inst_448:
// rs1_val==858993458 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993458;  op2val:1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993458, 1, x6, 1724, x21)

inst_449:
// rs1_val==858993458 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993458;  op2val:65536
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993458, 65536, x6, 1728, x21)

inst_450:
// rs1_val==1717986917 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986917;  op2val:3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986917, 3, x6, 1732, x21)

inst_451:
// rs1_val==1717986917 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986917;  op2val:1431655765
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986917, 1431655765, x6, 1736, x21)

inst_452:
// rs1_val==1717986917 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986917;  op2val:2863311530
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1717986917, 2863311530, x6, 1740, x21)

inst_453:
// rs1_val==1717986917 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986917;  op2val:5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986917, 5, x6, 1744, x21)

inst_454:
// rs1_val==1717986917 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986917;  op2val:858993459
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986917, 858993459, x6, 1748, x21)

inst_455:
// rs1_val==1717986917 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986917;  op2val:1717986918
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1717986917, 1717986918, x6, 1752, x21)

inst_456:
// rs1_val==1717986917 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986917;  op2val:46340
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986917, 46340, x6, 1756, x21)

inst_457:
// rs1_val==1717986917 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986917;  op2val:0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986917, 0, x6, 1760, x21)

inst_458:
// rs1_val==1717986917 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986917;  op2val:65535
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986917, 65535, x6, 1764, x21)

inst_459:
// rs1_val==1717986917 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986917;  op2val:2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986917, 2, x6, 1768, x21)

inst_460:
// rs1_val==1717986917 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986917;  op2val:1431655764
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986917, 1431655764, x6, 1772, x21)

inst_461:
// rs1_val==1717986917 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986917;  op2val:2863311529
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1717986917, 2863311529, x6, 1776, x21)

inst_462:
// rs1_val==1717986917 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986917;  op2val:4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986917, 4, x6, 1780, x21)

inst_463:
// rs1_val==1717986917 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986917;  op2val:858993458
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986917, 858993458, x6, 1784, x21)

inst_464:
// rs1_val==1717986917 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986917;  op2val:1717986917
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986917, 1717986917, x6, 1788, x21)

inst_465:
// rs1_val==1717986917 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986917;  op2val:46339
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986917, 46339, x6, 1792, x21)

inst_466:
// rs1_val==1717986917 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986917;  op2val:65534
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986917, 65534, x6, 1796, x21)

inst_467:
// rs1_val==1717986917 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986917;  op2val:1431655766
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986917, 1431655766, x6, 1800, x21)

inst_468:
// rs1_val==1717986917 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986917;  op2val:2863311531
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1717986917, 2863311531, x6, 1804, x21)

inst_469:
// rs1_val==1717986917 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986917;  op2val:6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986917, 6, x6, 1808, x21)

inst_470:
// rs1_val==1717986917 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986917;  op2val:1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986917, 1, x6, 1812, x21)

inst_471:
// rs1_val==1717986917 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986917;  op2val:65536
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986917, 65536, x6, 1816, x21)

inst_472:
// rs1_val==46339 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46339;  op2val:3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 46339, 3, x6, 1820, x21)

inst_473:
// rs1_val==46339 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46339;  op2val:1431655765
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46339, 1431655765, x6, 1824, x21)

inst_474:
// rs1_val==46339 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46339;  op2val:2863311530
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46339, 2863311530, x6, 1828, x21)

inst_475:
// rs1_val==46339 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46339;  op2val:5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 46339, 5, x6, 1832, x21)

inst_476:
// rs1_val==46339 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46339;  op2val:858993459
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46339, 858993459, x6, 1836, x21)

inst_477:
// rs1_val==46339 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46339;  op2val:1717986918
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46339, 1717986918, x6, 1840, x21)

inst_478:
// rs1_val==46339 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46339;  op2val:46340
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46339, 46340, x6, 1844, x21)

inst_479:
// rs1_val==46339 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46339;  op2val:0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 46339, 0, x6, 1848, x21)

inst_480:
// rs1_val==46339 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46339;  op2val:65535
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46339, 65535, x6, 1852, x21)

inst_481:
// rs1_val==46339 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46339;  op2val:2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 46339, 2, x6, 1856, x21)

inst_482:
// rs1_val==46339 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46339;  op2val:1431655764
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46339, 1431655764, x6, 1860, x21)

inst_483:
// rs1_val==46339 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46339;  op2val:2863311529
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46339, 2863311529, x6, 1864, x21)

inst_484:
// rs1_val==46339 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46339;  op2val:4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 46339, 4, x6, 1868, x21)

inst_485:
// rs1_val==46339 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46339;  op2val:858993458
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46339, 858993458, x6, 1872, x21)

inst_486:
// rs1_val==46339 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46339;  op2val:1717986917
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46339, 1717986917, x6, 1876, x21)

inst_487:
// rs1_val==46339 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46339;  op2val:46339
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 46339, 46339, x6, 1880, x21)

inst_488:
// rs1_val==46339 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46339;  op2val:65534
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46339, 65534, x6, 1884, x21)

inst_489:
// rs1_val==46339 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46339;  op2val:1431655766
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46339, 1431655766, x6, 1888, x21)

inst_490:
// rs1_val==46339 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46339;  op2val:2863311531
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46339, 2863311531, x6, 1892, x21)

inst_491:
// rs1_val==46339 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46339;  op2val:6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 46339, 6, x6, 1896, x21)

inst_492:
// rs1_val==46339 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46339;  op2val:858993460
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46339, 858993460, x6, 1900, x21)

inst_493:
// rs1_val==46339 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46339;  op2val:1717986919
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46339, 1717986919, x6, 1904, x21)

inst_494:
// rs1_val==46339 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46339;  op2val:46341
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46339, 46341, x6, 1908, x21)

inst_495:
// rs1_val==46339 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46339;  op2val:1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 46339, 1, x6, 1912, x21)

inst_496:
// rs1_val==46339 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46339;  op2val:65536
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46339, 65536, x6, 1916, x21)

inst_497:
// rs1_val==65534 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65534;  op2val:3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65534, 3, x6, 1920, x21)

inst_498:
// rs1_val==65534 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65534;  op2val:1431655765
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65534, 1431655765, x6, 1924, x21)

inst_499:
// rs1_val==65534 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65534;  op2val:2863311530
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65534, 2863311530, x6, 1928, x21)

inst_500:
// rs1_val==65534 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65534;  op2val:5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65534, 5, x6, 1932, x21)

inst_501:
// rs1_val==65534 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65534;  op2val:858993459
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65534, 858993459, x6, 1936, x21)

inst_502:
// rs1_val==65534 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65534;  op2val:1717986918
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65534, 1717986918, x6, 1940, x21)

inst_503:
// rs1_val==65534 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65534;  op2val:46340
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65534, 46340, x6, 1944, x21)

inst_504:
// rs1_val==65534 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65534;  op2val:0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65534, 0, x6, 1948, x21)

inst_505:
// rs1_val==65534 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65534;  op2val:65535
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65534, 65535, x6, 1952, x21)

inst_506:
// rs1_val==65534 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65534;  op2val:2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65534, 2, x6, 1956, x21)

inst_507:
// rs1_val==65534 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65534;  op2val:1431655764
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65534, 1431655764, x6, 1960, x21)

inst_508:
// rs1_val==65534 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65534;  op2val:2863311529
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65534, 2863311529, x6, 1964, x21)

inst_509:
// rs1_val==65534 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65534;  op2val:4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65534, 4, x6, 1968, x21)

inst_510:
// rs1_val==65534 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65534;  op2val:858993458
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65534, 858993458, x6, 1972, x21)

inst_511:
// rs1_val==65534 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65534;  op2val:1717986917
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65534, 1717986917, x6, 1976, x21)

inst_512:
// rs1_val==65534 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65534;  op2val:46339
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65534, 46339, x6, 1980, x21)

inst_513:
// rs1_val==65534 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65534;  op2val:65534
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65534, 65534, x6, 1984, x21)

inst_514:
// rs1_val==65534 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65534;  op2val:1431655766
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65534, 1431655766, x6, 1988, x21)

inst_515:
// rs1_val==65534 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65534;  op2val:2863311531
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65534, 2863311531, x6, 1992, x21)

inst_516:
// rs1_val==65534 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65534;  op2val:6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65534, 6, x6, 1996, x21)

inst_517:
// rs1_val==65534 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65534;  op2val:858993460
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65534, 858993460, x6, 2000, x21)

inst_518:
// rs1_val==65534 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65534;  op2val:1717986919
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65534, 1717986919, x6, 2004, x21)

inst_519:
// rs1_val==65534 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65534;  op2val:46341
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65534, 46341, x6, 2008, x21)

inst_520:
// rs1_val==65534 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65534;  op2val:1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65534, 1, x6, 2012, x21)

inst_521:
// rs1_val==65534 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65534;  op2val:65536
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65534, 65536, x6, 2016, x21)

inst_522:
// rs1_val==1431655766 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655766;  op2val:3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655766, 3, x6, 2020, x21)

inst_523:
// rs1_val==1431655766 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655766;  op2val:1431655765
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655766, 1431655765, x6, 2024, x21)

inst_524:
// rs1_val==1431655766 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655766;  op2val:2863311530
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1431655766, 2863311530, x6, 2028, x21)

inst_525:
// rs1_val==1431655766 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655766;  op2val:5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655766, 5, x6, 2032, x21)

inst_526:
// rs1_val==1431655766 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655766;  op2val:858993459
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655766, 858993459, x6, 2036, x21)

inst_527:
// rs1_val==1431655766 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655766;  op2val:1717986918
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1431655766, 1717986918, x6, 2040, x21)

inst_528:
// rs1_val==1431655766 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655766;  op2val:46340
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655766, 46340, x6, 2044, x21)
RVTEST_SIGBASE( x6,signature_x6_1)

inst_529:
// rs1_val==1431655766 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655766;  op2val:0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655766, 0, x6, 0, x21)

inst_530:
// rs1_val==1431655766 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655766;  op2val:65535
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655766, 65535, x6, 4, x21)

inst_531:
// rs1_val==1431655766 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655766;  op2val:2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655766, 2, x6, 8, x21)

inst_532:
// rs1_val==1431655766 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655766;  op2val:1431655764
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655766, 1431655764, x6, 12, x21)

inst_533:
// rs1_val==1431655766 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655766;  op2val:2863311529
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1431655766, 2863311529, x6, 16, x21)

inst_534:
// rs1_val==1431655766 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655766;  op2val:4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655766, 4, x6, 20, x21)

inst_535:
// rs1_val==1431655766 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655766;  op2val:858993458
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655766, 858993458, x6, 24, x21)

inst_536:
// rs1_val==1431655766 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655766;  op2val:1717986917
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1431655766, 1717986917, x6, 28, x21)

inst_537:
// rs1_val==1431655766 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655766;  op2val:46339
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655766, 46339, x6, 32, x21)

inst_538:
// rs1_val==1431655766 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655766;  op2val:65534
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655766, 65534, x6, 36, x21)

inst_539:
// rs1_val==1431655766 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655766;  op2val:1431655766
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655766, 1431655766, x6, 40, x21)

inst_540:
// rs1_val==1431655766 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655766;  op2val:2863311531
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1431655766, 2863311531, x6, 44, x21)

inst_541:
// rs1_val==1431655766 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655766;  op2val:6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655766, 6, x6, 48, x21)

inst_542:
// rs1_val==1431655766 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655766;  op2val:858993460
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655766, 858993460, x6, 52, x21)

inst_543:
// rs1_val==1431655766 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655766;  op2val:1717986919
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1431655766, 1717986919, x6, 56, x21)

inst_544:
// rs1_val==1431655766 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655766;  op2val:46341
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655766, 46341, x6, 60, x21)

inst_545:
// rs1_val==1431655766 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655766;  op2val:1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655766, 1, x6, 64, x21)

inst_546:
// rs1_val==1431655766 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655766;  op2val:65536
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655766, 65536, x6, 68, x21)

inst_547:
// rs1_val==2863311531 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311531;  op2val:3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311531, 3, x6, 72, x21)

inst_548:
// rs1_val==2863311531 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311531;  op2val:1431655765
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311531, 1431655765, x6, 76, x21)

inst_549:
// rs1_val==2863311531 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311531;  op2val:2863311530
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311531, 2863311530, x6, 80, x21)

inst_550:
// rs1_val==2863311531 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311531;  op2val:5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311531, 5, x6, 84, x21)

inst_551:
// rs1_val==2863311531 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311531;  op2val:858993459
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311531, 858993459, x6, 88, x21)

inst_552:
// rs1_val==2863311531 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311531;  op2val:1717986918
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311531, 1717986918, x6, 92, x21)

inst_553:
// rs1_val==2863311531 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311531;  op2val:46340
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311531, 46340, x6, 96, x21)

inst_554:
// rs1_val==2863311531 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311531;  op2val:0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311531, 0, x6, 100, x21)

inst_555:
// rs1_val==2863311531 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311531;  op2val:65535
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311531, 65535, x6, 104, x21)

inst_556:
// rs1_val==2863311531 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311531;  op2val:2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311531, 2, x6, 108, x21)

inst_557:
// rs1_val==2863311531 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311531;  op2val:1431655764
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311531, 1431655764, x6, 112, x21)

inst_558:
// rs1_val==2863311531 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311531;  op2val:2863311529
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311531, 2863311529, x6, 116, x21)

inst_559:
// rs1_val==2863311531 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311531;  op2val:4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311531, 4, x6, 120, x21)

inst_560:
// rs1_val==2863311531 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311531;  op2val:858993458
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311531, 858993458, x6, 124, x21)

inst_561:
// rs1_val==2863311531 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311531;  op2val:1717986917
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311531, 1717986917, x6, 128, x21)

inst_562:
// rs1_val==2863311531 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311531;  op2val:46339
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311531, 46339, x6, 132, x21)

inst_563:
// rs1_val==2863311531 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311531;  op2val:65534
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311531, 65534, x6, 136, x21)

inst_564:
// rs1_val==2863311531 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311531;  op2val:1431655766
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311531, 1431655766, x6, 140, x21)

inst_565:
// rs1_val==2863311531 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311531;  op2val:2863311531
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311531, 2863311531, x6, 144, x21)

inst_566:
// rs1_val==2863311531 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311531;  op2val:6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311531, 6, x6, 148, x21)

inst_567:
// rs1_val==2863311531 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311531;  op2val:858993460
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311531, 858993460, x6, 152, x21)

inst_568:
// rs1_val==2863311531 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311531;  op2val:1717986919
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311531, 1717986919, x6, 156, x21)

inst_569:
// rs1_val==2863311531 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311531;  op2val:46341
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311531, 46341, x6, 160, x21)

inst_570:
// rs1_val==2863311531 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311531;  op2val:1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311531, 1, x6, 164, x21)

inst_571:
// rs1_val==2863311531 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:2863311531;  op2val:65536
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 2863311531, 65536, x6, 168, x21)

inst_572:
// rs1_val==6 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 6, 3, x6, 172, x21)

inst_573:
// rs1_val==6 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:1431655765
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 6, 1431655765, x6, 176, x21)

inst_574:
// rs1_val==6 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:2863311530
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 6, 2863311530, x6, 180, x21)

inst_575:
// rs1_val==6 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 6, 5, x6, 184, x21)

inst_576:
// rs1_val==6 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:858993459
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 6, 858993459, x6, 188, x21)

inst_577:
// rs1_val==6 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:1717986918
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 6, 1717986918, x6, 192, x21)

inst_578:
// rs1_val==6 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:46340
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 6, 46340, x6, 196, x21)

inst_579:
// rs1_val==6 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 6, 0, x6, 200, x21)

inst_580:
// rs1_val==6 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:65535
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 6, 65535, x6, 204, x21)

inst_581:
// rs1_val==6 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 6, 2, x6, 208, x21)

inst_582:
// rs1_val==6 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:1431655764
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 6, 1431655764, x6, 212, x21)

inst_583:
// rs1_val==6 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:2863311529
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 6, 2863311529, x6, 216, x21)

inst_584:
// rs1_val==6 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 6, 4, x6, 220, x21)

inst_585:
// rs1_val==6 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:858993458
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 6, 858993458, x6, 224, x21)

inst_586:
// rs1_val==6 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:1717986917
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 6, 1717986917, x6, 228, x21)

inst_587:
// rs1_val==6 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:46339
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 6, 46339, x6, 232, x21)

inst_588:
// rs1_val==6 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:65534
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 6, 65534, x6, 236, x21)

inst_589:
// rs1_val==6 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:1431655766
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 6, 1431655766, x6, 240, x21)

inst_590:
// rs1_val==6 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:2863311531
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 6, 2863311531, x6, 244, x21)

inst_591:
// rs1_val==6 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 6, 6, x6, 248, x21)

inst_592:
// rs1_val==6 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:858993460
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 6, 858993460, x6, 252, x21)

inst_593:
// rs1_val==6 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:1717986919
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 6, 1717986919, x6, 256, x21)

inst_594:
// rs1_val==6 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:46341
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 6, 46341, x6, 260, x21)

inst_595:
// rs1_val==6 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 6, 1, x6, 264, x21)

inst_596:
// rs1_val==6 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:65536
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 6, 65536, x6, 268, x21)

inst_597:
// rs1_val==858993460 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993460;  op2val:3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993460, 3, x6, 272, x21)

inst_598:
// rs1_val==858993460 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993460;  op2val:1431655765
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 858993460, 1431655765, x6, 276, x21)

inst_599:
// rs1_val==858993460 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993460;  op2val:2863311530
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 858993460, 2863311530, x6, 280, x21)

inst_600:
// rs1_val==858993460 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993460;  op2val:5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993460, 5, x6, 284, x21)

inst_601:
// rs1_val==858993460 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993460;  op2val:858993459
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993460, 858993459, x6, 288, x21)

inst_602:
// rs1_val==858993460 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993460;  op2val:1717986918
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 858993460, 1717986918, x6, 292, x21)

inst_603:
// rs1_val==858993460 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993460;  op2val:46340
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993460, 46340, x6, 296, x21)

inst_604:
// rs1_val==858993460 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993460;  op2val:0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993460, 0, x6, 300, x21)

inst_605:
// rs1_val==858993460 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993460;  op2val:65535
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993460, 65535, x6, 304, x21)

inst_606:
// rs1_val==858993460 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993460;  op2val:2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993460, 2, x6, 308, x21)

inst_607:
// rs1_val==858993460 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993460;  op2val:1431655764
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 858993460, 1431655764, x6, 312, x21)

inst_608:
// rs1_val==858993460 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993460;  op2val:2863311529
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 858993460, 2863311529, x6, 316, x21)

inst_609:
// rs1_val==858993460 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993460;  op2val:4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993460, 4, x6, 320, x21)

inst_610:
// rs1_val==858993460 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993460;  op2val:858993458
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993460, 858993458, x6, 324, x21)

inst_611:
// rs1_val==858993460 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993460;  op2val:1717986917
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 858993460, 1717986917, x6, 328, x21)

inst_612:
// rs1_val==858993460 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993460;  op2val:46339
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993460, 46339, x6, 332, x21)

inst_613:
// rs1_val==858993460 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993460;  op2val:65534
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993460, 65534, x6, 336, x21)

inst_614:
// rs1_val==858993460 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993460;  op2val:1431655766
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 858993460, 1431655766, x6, 340, x21)

inst_615:
// rs1_val==858993460 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993460;  op2val:2863311531
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 858993460, 2863311531, x6, 344, x21)

inst_616:
// rs1_val==858993460 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993460;  op2val:6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993460, 6, x6, 348, x21)

inst_617:
// rs1_val==858993460 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993460;  op2val:858993460
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993460, 858993460, x6, 352, x21)

inst_618:
// rs1_val==858993460 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993460;  op2val:1717986919
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 858993460, 1717986919, x6, 356, x21)

inst_619:
// rs1_val==858993460 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993460;  op2val:46341
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993460, 46341, x6, 360, x21)

inst_620:
// rs1_val==858993460 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993460;  op2val:1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993460, 1, x6, 364, x21)

inst_621:
// rs1_val==858993460 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993460;  op2val:65536
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993460, 65536, x6, 368, x21)

inst_622:
// rs1_val==1717986919 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986919;  op2val:3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986919, 3, x6, 372, x21)

inst_623:
// rs1_val==1717986919 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986919;  op2val:1431655765
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986919, 1431655765, x6, 376, x21)

inst_624:
// rs1_val==1717986919 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986919;  op2val:2863311530
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1717986919, 2863311530, x6, 380, x21)

inst_625:
// rs1_val==1717986919 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986919;  op2val:5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986919, 5, x6, 384, x21)

inst_626:
// rs1_val==1717986919 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986919;  op2val:858993459
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986919, 858993459, x6, 388, x21)

inst_627:
// rs1_val==1717986919 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986919;  op2val:1717986918
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986919, 1717986918, x6, 392, x21)

inst_628:
// rs1_val==1717986919 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986919;  op2val:46340
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986919, 46340, x6, 396, x21)

inst_629:
// rs1_val==1717986919 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986919;  op2val:0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986919, 0, x6, 400, x21)

inst_630:
// rs1_val==1717986919 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986919;  op2val:65535
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986919, 65535, x6, 404, x21)

inst_631:
// rs1_val==1717986919 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986919;  op2val:2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986919, 2, x6, 408, x21)

inst_632:
// rs1_val==1717986919 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986919;  op2val:1431655764
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986919, 1431655764, x6, 412, x21)

inst_633:
// rs1_val==1717986919 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986919;  op2val:2863311529
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1717986919, 2863311529, x6, 416, x21)

inst_634:
// rs1_val==1717986919 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986919;  op2val:4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986919, 4, x6, 420, x21)

inst_635:
// rs1_val==1717986919 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986919;  op2val:858993458
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986919, 858993458, x6, 424, x21)

inst_636:
// rs1_val==1717986919 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986919;  op2val:1717986917
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986919, 1717986917, x6, 428, x21)

inst_637:
// rs1_val==1717986919 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986919;  op2val:46339
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986919, 46339, x6, 432, x21)

inst_638:
// rs1_val==1717986919 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986919;  op2val:65534
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986919, 65534, x6, 436, x21)

inst_639:
// rs1_val==1717986919 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986919;  op2val:1431655766
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986919, 1431655766, x6, 440, x21)

inst_640:
// rs1_val==1717986919 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986919;  op2val:2863311531
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1717986919, 2863311531, x6, 444, x21)

inst_641:
// rs1_val==1717986919 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986919;  op2val:6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986919, 6, x6, 448, x21)

inst_642:
// rs1_val==1717986919 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986919;  op2val:858993460
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986919, 858993460, x6, 452, x21)

inst_643:
// rs1_val==1717986919 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986919;  op2val:1717986919
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986919, 1717986919, x6, 456, x21)

inst_644:
// rs1_val==1717986919 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986919;  op2val:46341
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986919, 46341, x6, 460, x21)

inst_645:
// rs1_val==1717986919 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986919;  op2val:1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986919, 1, x6, 464, x21)

inst_646:
// rs1_val==1717986919 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986919;  op2val:65536
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986919, 65536, x6, 468, x21)

inst_647:
// rs1_val==46341 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46341;  op2val:3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 46341, 3, x6, 472, x21)

inst_648:
// rs1_val==46341 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46341;  op2val:1431655765
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46341, 1431655765, x6, 476, x21)

inst_649:
// rs1_val==46341 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46341;  op2val:2863311530
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46341, 2863311530, x6, 480, x21)

inst_650:
// rs1_val==46341 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46341;  op2val:5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 46341, 5, x6, 484, x21)

inst_651:
// rs1_val==46341 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46341;  op2val:858993459
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46341, 858993459, x6, 488, x21)

inst_652:
// rs1_val==46341 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46341;  op2val:1717986918
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46341, 1717986918, x6, 492, x21)

inst_653:
// rs1_val==46341 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46341;  op2val:46340
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 46341, 46340, x6, 496, x21)

inst_654:
// rs1_val==46341 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46341;  op2val:0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 46341, 0, x6, 500, x21)

inst_655:
// rs1_val==46341 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46341;  op2val:65535
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46341, 65535, x6, 504, x21)

inst_656:
// rs1_val==46341 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46341;  op2val:2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 46341, 2, x6, 508, x21)

inst_657:
// rs1_val==46341 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46341;  op2val:1431655764
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46341, 1431655764, x6, 512, x21)

inst_658:
// rs1_val==46341 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46341;  op2val:2863311529
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46341, 2863311529, x6, 516, x21)

inst_659:
// rs1_val==46341 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46341;  op2val:4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 46341, 4, x6, 520, x21)

inst_660:
// rs1_val==46341 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46341;  op2val:858993458
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46341, 858993458, x6, 524, x21)

inst_661:
// rs1_val==46341 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46341;  op2val:1717986917
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46341, 1717986917, x6, 528, x21)

inst_662:
// rs1_val==46341 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46341;  op2val:46339
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 46341, 46339, x6, 532, x21)

inst_663:
// rs1_val==46341 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46341;  op2val:65534
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46341, 65534, x6, 536, x21)

inst_664:
// rs1_val==46341 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46341;  op2val:1431655766
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46341, 1431655766, x6, 540, x21)

inst_665:
// rs1_val==46341 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46341;  op2val:2863311531
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46341, 2863311531, x6, 544, x21)

inst_666:
// rs1_val==46341 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46341;  op2val:6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 46341, 6, x6, 548, x21)

inst_667:
// rs1_val==46341 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46341;  op2val:858993460
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46341, 858993460, x6, 552, x21)

inst_668:
// rs1_val==46341 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46341;  op2val:1717986919
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46341, 1717986919, x6, 556, x21)

inst_669:
// rs1_val==46341 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46341;  op2val:46341
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 46341, 46341, x6, 560, x21)

inst_670:
// rs1_val==46341 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46341;  op2val:1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 46341, 1, x6, 564, x21)

inst_671:
// rs1_val==46341 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:46341;  op2val:65536
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 46341, 65536, x6, 568, x21)

inst_672:
// rs1_val==1 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1;  op2val:3
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1, 3, x6, 572, x21)

inst_673:
// rs1_val==1 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1;  op2val:1431655765
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1, 1431655765, x6, 576, x21)

inst_674:
// rs1_val==1 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1;  op2val:2863311530
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1, 2863311530, x6, 580, x21)

inst_675:
// rs1_val==1 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1;  op2val:5
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1, 5, x6, 584, x21)

inst_676:
// rs1_val==1 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1;  op2val:858993459
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1, 858993459, x6, 588, x21)

inst_677:
// rs1_val==1 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1;  op2val:1717986918
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1, 1717986918, x6, 592, x21)

inst_678:
// rs1_val==1 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1;  op2val:46340
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1, 46340, x6, 596, x21)

inst_679:
// rs1_val==1 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1;  op2val:0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1, 0, x6, 600, x21)

inst_680:
// rs1_val==1 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1;  op2val:65535
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1, 65535, x6, 604, x21)

inst_681:
// rs1_val==1 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1;  op2val:2
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1, 2, x6, 608, x21)

inst_682:
// rs1_val==1 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1;  op2val:1431655764
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1, 1431655764, x6, 612, x21)

inst_683:
// rs1_val==1 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1;  op2val:2863311529
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1, 2863311529, x6, 616, x21)

inst_684:
// rs1_val==1 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1;  op2val:4
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1, 4, x6, 620, x21)

inst_685:
// rs1_val==1 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1;  op2val:858993458
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1, 858993458, x6, 624, x21)

inst_686:
// rs1_val==1 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1;  op2val:1717986917
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1, 1717986917, x6, 628, x21)

inst_687:
// rs1_val==1 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1;  op2val:46339
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1, 46339, x6, 632, x21)

inst_688:
// rs1_val==1 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1;  op2val:65534
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1, 65534, x6, 636, x21)

inst_689:
// rs1_val==1 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1;  op2val:1431655766
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1, 1431655766, x6, 640, x21)

inst_690:
// rs1_val==1 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1;  op2val:2863311531
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1, 2863311531, x6, 644, x21)

inst_691:
// rs1_val==1 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1;  op2val:6
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1, 6, x6, 648, x21)

inst_692:
// rs1_val==1 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1;  op2val:858993460
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1, 858993460, x6, 652, x21)

inst_693:
// rs1_val==1 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1;  op2val:1717986919
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1, 1717986919, x6, 656, x21)

inst_694:
// rs1_val==1 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1;  op2val:46341
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1, 46341, x6, 660, x21)

inst_695:
// rs1_val==1 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1;  op2val:1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1, 1, x6, 664, x21)

inst_696:
// rs1_val==1 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1;  op2val:65536
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1, 65536, x6, 668, x21)

inst_697:
// rs1_val==65536 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65536;  op2val:3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65536, 3, x6, 672, x21)

inst_698:
// rs1_val==65536 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65536;  op2val:1431655765
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65536, 1431655765, x6, 676, x21)

inst_699:
// rs1_val==65536 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65536;  op2val:2863311530
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65536, 2863311530, x6, 680, x21)

inst_700:
// rs1_val==65536 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65536;  op2val:5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65536, 5, x6, 684, x21)

inst_701:
// rs1_val==65536 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65536;  op2val:858993459
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65536, 858993459, x6, 688, x21)

inst_702:
// rs1_val==65536 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65536;  op2val:1717986918
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65536, 1717986918, x6, 692, x21)

inst_703:
// rs1_val==65536 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65536;  op2val:46340
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65536, 46340, x6, 696, x21)

inst_704:
// rs1_val==65536 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65536;  op2val:0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65536, 0, x6, 700, x21)

inst_705:
// rs1_val==65536 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65536;  op2val:65535
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65536, 65535, x6, 704, x21)

inst_706:
// rs1_val==65536 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65536;  op2val:2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65536, 2, x6, 708, x21)

inst_707:
// rs1_val==65536 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65536;  op2val:1431655764
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65536, 1431655764, x6, 712, x21)

inst_708:
// rs1_val==65536 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65536;  op2val:2863311529
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65536, 2863311529, x6, 716, x21)

inst_709:
// rs1_val==65536 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65536;  op2val:4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65536, 4, x6, 720, x21)

inst_710:
// rs1_val==65536 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65536;  op2val:858993458
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65536, 858993458, x6, 724, x21)

inst_711:
// rs1_val==65536 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65536;  op2val:1717986917
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65536, 1717986917, x6, 728, x21)

inst_712:
// rs1_val==65536 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65536;  op2val:46339
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65536, 46339, x6, 732, x21)

inst_713:
// rs1_val==65536 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65536;  op2val:65534
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65536, 65534, x6, 736, x21)

inst_714:
// rs1_val==65536 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65536;  op2val:1431655766
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65536, 1431655766, x6, 740, x21)

inst_715:
// rs1_val==65536 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65536;  op2val:2863311531
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65536, 2863311531, x6, 744, x21)

inst_716:
// rs1_val==65536 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65536;  op2val:6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65536, 6, x6, 748, x21)

inst_717:
// rs1_val==65536 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65536;  op2val:858993460
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65536, 858993460, x6, 752, x21)

inst_718:
// rs1_val==65536 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65536;  op2val:1717986919
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 65536, 1717986919, x6, 756, x21)

inst_719:
// rs1_val==65536 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65536;  op2val:46341
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65536, 46341, x6, 760, x21)

inst_720:
// rs1_val==65536 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65536;  op2val:1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65536, 1, x6, 764, x21)

inst_721:
// rs1_val==65536 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:65536;  op2val:65536
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 65536, 65536, x6, 768, x21)

inst_722:
// rs1_val==1717986917 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986917;  op2val:858993460
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986917, 858993460, x6, 772, x21)

inst_723:
// rs1_val==1717986917 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986917;  op2val:1717986919
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 1717986917, 1717986919, x6, 776, x21)

inst_724:
// rs1_val==1717986917 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1717986917;  op2val:46341
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1717986917, 46341, x6, 780, x21)

inst_725:
// rs1_val > 0 and rs2_val > 0, rs1_val != rs2_val and rs1_val > 0 and rs2_val > 0, rs2_val == 4294967287
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:4294967287
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 3, 4294967287, x6, 784, x21)

inst_726:
// rs1_val == rs2_val and rs1_val > 0 and rs2_val > 0, rs2_val == 1431655765, rs1_val == 1431655765, rs1_val==1431655765 and rs2_val==1431655765
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:1431655765;  op2val:1431655765
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 1431655765, 1431655765, x6, 788, x21)

inst_727:
// rs2_val == 1, rs1_val == 4294967279
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4294967279;  op2val:1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 4294967279, 1, x6, 792, x21)

inst_728:
// rs2_val == 64, rs1_val == 4278190079
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:4278190079;  op2val:64
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 4278190079, 64, x6, 796, x21)

inst_729:
// rs2_val == 16777216, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:858993460;  op2val:16777216
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 858993460, 16777216, x6, 800, x21)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x8_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x8_1:
    .fill 17*(XLEN/32),4,0xdeadbeef


signature_x6_0:
    .fill 512*(XLEN/32),4,0xdeadbeef


signature_x6_1:
    .fill 201*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
