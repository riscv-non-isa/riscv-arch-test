
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Fri Aug 25 05:36:11 2023 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV32Zdinx/fsub.d.cgf \
 \
//                  -- xlen 32  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fsub.d instruction of the RISC-V RV32_Zfinx_Zdinx extension for the fsub.d_b4 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32I_Zfinx_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*Zdinx.*);def TEST_CASE_1=True;",fsub.d_b4)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:// rs1 == rs2 == rd, rs1==x30, rs2==x30, rd==x30,fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc81394a2171e9 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x1bf635aef470a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x30; dest:x30; op1val:0x7fdc81394a2171e9; valaddr_reg:x3; op2:x30; op2val:0x7fdc81394a2171e9
offset:0*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x30, x31,x30,x31,0, 0, 0, 0x4a2171e9, 0x7fdc8139,0x4a2171e9,0x7fdc8139,x3, 0*SIGALIGN, x4,x1, x2)

inst_1:// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x26, rs2==x24, rd==x28,fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc81394a2171e9 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x1bf635aef470a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fsub.d ; op1:x26; dest:x28; op1val:0x7fdc81394a2171e9; valaddr_reg:x3; op2:x24; op2val:0xffe1bf635aef470a
offset:2*FLEN/8; correctval:??; testreg:x2;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fsub.d, x28, x29, x26, x27,x24,x25,32, 0, 0, 0x4a2171e9, 0x7fdc8139,0x5aef470a,0xffe1bf63,x3, 2*SIGALIGN, x4,x1, x2)

inst_2:// rs1 == rd != rs2, rs1==x24, rs2==x28, rd==x24,fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc81394a2171e9 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x1bf635aef470a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fsub.d ; op1:x24; dest:x24; op1val:0x7fdc81394a2171e9; valaddr_reg:x3; op2:x28; op2val:0xffe1bf635aef470a
offset:4*FLEN/8; correctval:??; testreg:x2;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fsub.d, x24, x25, x24, x25,x28,x29,64, 0, 0, 0x4a2171e9, 0x7fdc8139,0x5aef470a,0xffe1bf63,x3, 4*SIGALIGN, x4,x1, x2)

inst_3:// rs2 == rd != rs1, rs1==x28, rs2==x26, rd==x26,fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc81394a2171e9 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x1bf635aef470a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x26; op1val:0x7fdc81394a2171e9; valaddr_reg:x3; op2:x26; op2val:0xffe1bf635aef470a
offset:6*FLEN/8; correctval:??; testreg:x2;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fsub.d, x26, x27, x28, x29,x26,x27,96, 0, 0, 0x4a2171e9, 0x7fdc8139,0x5aef470a,0xffe1bf63,x3, 6*SIGALIGN, x4,x1, x2)

inst_4:// rs1 == rs2 != rd, rs1==x20, rs2==x20, rd==x22,fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc81394a2171e9 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x1bf635aef470a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fsub.d ; op1:x20; dest:x22; op1val:0x7fdc81394a2171e9; valaddr_reg:x3; op2:x20; op2val:0x7fdc81394a2171e9
offset:8*FLEN/8; correctval:??; testreg:x2;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fsub.d, x22, x23, x20, x21,x20,x21,128, 0, 0, 0x4a2171e9, 0x7fdc8139,0x4a2171e9,0x7fdc8139,x3, 8*SIGALIGN, x4,x1, x2)

inst_5:// rs1==x22, rs2==x18, rd==x20,fs1 == 0 and fe1 == 0x7fc and fm1 == 0xd481499755d4b and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8adfad9a2a8ab and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x22; dest:x20; op1val:0x7fcd481499755d4b; valaddr_reg:x3; op2:x18; op2val:0xffe8adfad9a2a8ab
offset:10*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x20, x21, x22, x23,x18,x19,0, 0, 0, 0x99755d4b, 0x7fcd4814,0xd9a2a8ab,0xffe8adfa,x3, 10*SIGALIGN, x4,x1, x2)

inst_6:// rs1==x16, rs2==x22, rd==x18,fs1 == 0 and fe1 == 0x7fc and fm1 == 0xd481499755d4b and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8adfad9a2a8ab and  fcsr == 0x20 and rm_val == 7   
/* opcode: fsub.d ; op1:x16; dest:x18; op1val:0x7fcd481499755d4b; valaddr_reg:x3; op2:x22; op2val:0xffe8adfad9a2a8ab
offset:12*FLEN/8; correctval:??; testreg:x2;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fsub.d, x18, x19, x16, x17,x22,x23,32, 0, 0, 0x99755d4b, 0x7fcd4814,0xd9a2a8ab,0xffe8adfa,x3, 12*SIGALIGN, x4,x1, x2)

inst_7:// rs1==x18, rs2==x14, rd==x16,fs1 == 0 and fe1 == 0x7fc and fm1 == 0xd481499755d4b and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8adfad9a2a8ab and  fcsr == 0x40 and rm_val == 7   
/* opcode: fsub.d ; op1:x18; dest:x16; op1val:0x7fcd481499755d4b; valaddr_reg:x3; op2:x14; op2val:0xffe8adfad9a2a8ab
offset:14*FLEN/8; correctval:??; testreg:x2;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fsub.d, x16, x17, x18, x19,x14,x15,64, 0, 0, 0x99755d4b, 0x7fcd4814,0xd9a2a8ab,0xffe8adfa,x3, 14*SIGALIGN, x4,x1, x2)

inst_8:// rs1==x12, rs2==x16, rd==x14,fs1 == 0 and fe1 == 0x7fc and fm1 == 0xd481499755d4b and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8adfad9a2a8ab and  fcsr == 0x60 and rm_val == 7   
/* opcode: fsub.d ; op1:x12; dest:x14; op1val:0x7fcd481499755d4b; valaddr_reg:x3; op2:x16; op2val:0xffe8adfad9a2a8ab
offset:16*FLEN/8; correctval:??; testreg:x2;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fsub.d, x14, x15, x12, x13,x16,x17,96, 0, 0, 0x99755d4b, 0x7fcd4814,0xd9a2a8ab,0xffe8adfa,x3, 16*SIGALIGN, x4,x1, x2)
RVTEST_VALBASEUPD(x16,test_dataset_1)

inst_9:// rs1==x14, rs2==x10, rd==x12,fs1 == 0 and fe1 == 0x7fc and fm1 == 0xd481499755d4b and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8adfad9a2a8ab and  fcsr == 0x80 and rm_val == 7   
/* opcode: fsub.d ; op1:x14; dest:x12; op1val:0x7fcd481499755d4b; valaddr_reg:x16; op2:x10; op2val:0xffe8adfad9a2a8ab
offset:0*FLEN/8; correctval:??; testreg:x2;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fsub.d, x12, x13, x14, x15,x10,x11,128, 0, 0, 0x99755d4b, 0x7fcd4814,0xd9a2a8ab,0xffe8adfa,x16, 18*SIGALIGN, x17,x1, x2)

inst_10:// rs1==x8, rs2==x12, rd==x10,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcd87e65450c45 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x93c0cd5d79dd0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x8; dest:x10; op1val:0x7fecd87e65450c45; valaddr_reg:x16; op2:x12; op2val:0xffb93c0cd5d79dd0
offset:2*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x10, x11, x8, x9,x12,x13,0, 0, 0, 0x65450c45, 0x7fecd87e,0xd5d79dd0,0xffb93c0c,x16, 20*SIGALIGN, x17,x1, x14)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_11:// rs1==x10, rs2==x6, rd==x8,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcd87e65450c45 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x93c0cd5d79dd0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fsub.d ; op1:x10; dest:x8; op1val:0x7fecd87e65450c45; valaddr_reg:x16; op2:x6; op2val:0xffb93c0cd5d79dd0
offset:4*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fsub.d, x8, x9, x10, x11,x6,x7,32, 0, 0, 0x65450c45, 0x7fecd87e,0xd5d79dd0,0xffb93c0c,x16, 0*SIGALIGN, x17,x1, x14)

inst_12:// rs1==x4, rs2==x8, rd==x6,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcd87e65450c45 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x93c0cd5d79dd0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fsub.d ; op1:x4; dest:x6; op1val:0x7fecd87e65450c45; valaddr_reg:x16; op2:x8; op2val:0xffb93c0cd5d79dd0
offset:6*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fsub.d, x6, x7, x4, x5,x8,x9,64, 0, 0, 0x65450c45, 0x7fecd87e,0xd5d79dd0,0xffb93c0c,x16, 2*SIGALIGN, x17,x1, x14)

inst_13:// rs1==x6, rs2==x2, rd==x4,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcd87e65450c45 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x93c0cd5d79dd0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fsub.d ; op1:x6; dest:x4; op1val:0x7fecd87e65450c45; valaddr_reg:x16; op2:x2; op2val:0xffb93c0cd5d79dd0
offset:8*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fsub.d, x4, x5, x6, x7,x2,x3,96, 0, 0, 0x65450c45, 0x7fecd87e,0xd5d79dd0,0xffb93c0c,x16, 4*SIGALIGN, x17,x1, x14)

inst_14:// rs1==x2,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcd87e65450c45 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x93c0cd5d79dd0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fsub.d ; op1:x2; dest:x30; op1val:0x7fecd87e65450c45; valaddr_reg:x16; op2:x28; op2val:0xffb93c0cd5d79dd0
offset:10*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x2, x3,x28,x29,128, 0, 0, 0x65450c45, 0x7fecd87e,0xd5d79dd0,0xffb93c0c,x16, 6*SIGALIGN, x17,x1, x14)

inst_15:// rs2==x4,fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xa0e7ad32453df and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xf2f8c2966dd5f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7f9a0e7ad32453df; valaddr_reg:x16; op2:x4; op2val:0xffef2f8c2966dd5f
offset:12*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x4,x5,0, 0, 0, 0xd32453df, 0x7f9a0e7a,0x2966dd5f,0xffef2f8c,x16, 8*SIGALIGN, x17,x1, x14)

inst_16:// rd==x2,fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xa0e7ad32453df and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xf2f8c2966dd5f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fsub.d ; op1:x30; dest:x2; op1val:0x7f9a0e7ad32453df; valaddr_reg:x16; op2:x28; op2val:0xffef2f8c2966dd5f
offset:14*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fsub.d, x2, x3, x30, x31,x28,x29,32, 0, 0, 0xd32453df, 0x7f9a0e7a,0x2966dd5f,0xffef2f8c,x16, 10*SIGALIGN, x17,x1, x14)

inst_17:// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xa0e7ad32453df and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xf2f8c2966dd5f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7f9a0e7ad32453df; valaddr_reg:x16; op2:x26; op2val:0xffef2f8c2966dd5f
offset:16*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xd32453df, 0x7f9a0e7a,0x2966dd5f,0xffef2f8c,x16, 12*SIGALIGN, x17,x1, x14)

inst_18:// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xa0e7ad32453df and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xf2f8c2966dd5f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7f9a0e7ad32453df; valaddr_reg:x16; op2:x26; op2val:0xffef2f8c2966dd5f
offset:18*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd32453df, 0x7f9a0e7a,0x2966dd5f,0xffef2f8c,x16, 14*SIGALIGN, x17,x1, x14)

inst_19:// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xa0e7ad32453df and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xf2f8c2966dd5f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7f9a0e7ad32453df; valaddr_reg:x16; op2:x26; op2val:0xffef2f8c2966dd5f
offset:20*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xd32453df, 0x7f9a0e7a,0x2966dd5f,0xffef2f8c,x16, 16*SIGALIGN, x17,x1, x14)

inst_20:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe0d828b86622a and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xf27d74799dd4f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fee0d828b86622a; valaddr_reg:x16; op2:x26; op2val:0xffaf27d74799dd4f
offset:22*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x8b86622a, 0x7fee0d82,0x4799dd4f,0xffaf27d7,x16, 18*SIGALIGN, x17,x1, x14)

inst_21:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe0d828b86622a and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xf27d74799dd4f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fee0d828b86622a; valaddr_reg:x16; op2:x26; op2val:0xffaf27d74799dd4f
offset:24*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x8b86622a, 0x7fee0d82,0x4799dd4f,0xffaf27d7,x16, 20*SIGALIGN, x17,x1, x14)

inst_22:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe0d828b86622a and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xf27d74799dd4f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fee0d828b86622a; valaddr_reg:x16; op2:x26; op2val:0xffaf27d74799dd4f
offset:26*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x8b86622a, 0x7fee0d82,0x4799dd4f,0xffaf27d7,x16, 22*SIGALIGN, x17,x1, x14)

inst_23:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe0d828b86622a and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xf27d74799dd4f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fee0d828b86622a; valaddr_reg:x16; op2:x26; op2val:0xffaf27d74799dd4f
offset:28*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x8b86622a, 0x7fee0d82,0x4799dd4f,0xffaf27d7,x16, 24*SIGALIGN, x17,x1, x14)

inst_24:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe0d828b86622a and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xf27d74799dd4f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fee0d828b86622a; valaddr_reg:x16; op2:x26; op2val:0xffaf27d74799dd4f
offset:30*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x8b86622a, 0x7fee0d82,0x4799dd4f,0xffaf27d7,x16, 26*SIGALIGN, x17,x1, x14)

inst_25:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xbb9876f8130c3 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x9119e241fb3cd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fcbb9876f8130c3; valaddr_reg:x16; op2:x26; op2val:0xffe9119e241fb3cd
offset:32*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x6f8130c3, 0x7fcbb987,0x241fb3cd,0xffe9119e,x16, 28*SIGALIGN, x17,x1, x14)

inst_26:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xbb9876f8130c3 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x9119e241fb3cd and  fcsr == 0x20 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fcbb9876f8130c3; valaddr_reg:x16; op2:x26; op2val:0xffe9119e241fb3cd
offset:34*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x6f8130c3, 0x7fcbb987,0x241fb3cd,0xffe9119e,x16, 30*SIGALIGN, x17,x1, x14)

inst_27:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xbb9876f8130c3 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x9119e241fb3cd and  fcsr == 0x40 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fcbb9876f8130c3; valaddr_reg:x16; op2:x26; op2val:0xffe9119e241fb3cd
offset:36*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x6f8130c3, 0x7fcbb987,0x241fb3cd,0xffe9119e,x16, 32*SIGALIGN, x17,x1, x14)

inst_28:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xbb9876f8130c3 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x9119e241fb3cd and  fcsr == 0x60 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fcbb9876f8130c3; valaddr_reg:x16; op2:x26; op2val:0xffe9119e241fb3cd
offset:38*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x6f8130c3, 0x7fcbb987,0x241fb3cd,0xffe9119e,x16, 34*SIGALIGN, x17,x1, x14)

inst_29:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xbb9876f8130c3 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x9119e241fb3cd and  fcsr == 0x80 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fcbb9876f8130c3; valaddr_reg:x16; op2:x26; op2val:0xffe9119e241fb3cd
offset:40*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x6f8130c3, 0x7fcbb987,0x241fb3cd,0xffe9119e,x16, 36*SIGALIGN, x17,x1, x14)

inst_30:// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xdbcde43895c3f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xf12190de3b51d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7f9dbcde43895c3f; valaddr_reg:x16; op2:x26; op2val:0xffef12190de3b51d
offset:42*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x43895c3f, 0x7f9dbcde,0x0de3b51d,0xffef1219,x16, 38*SIGALIGN, x17,x1, x14)

inst_31:// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xdbcde43895c3f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xf12190de3b51d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7f9dbcde43895c3f; valaddr_reg:x16; op2:x26; op2val:0xffef12190de3b51d
offset:44*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x43895c3f, 0x7f9dbcde,0x0de3b51d,0xffef1219,x16, 40*SIGALIGN, x17,x1, x14)

inst_32:// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xdbcde43895c3f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xf12190de3b51d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7f9dbcde43895c3f; valaddr_reg:x16; op2:x26; op2val:0xffef12190de3b51d
offset:46*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x43895c3f, 0x7f9dbcde,0x0de3b51d,0xffef1219,x16, 42*SIGALIGN, x17,x1, x14)

inst_33:// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xdbcde43895c3f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xf12190de3b51d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7f9dbcde43895c3f; valaddr_reg:x16; op2:x26; op2val:0xffef12190de3b51d
offset:48*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x43895c3f, 0x7f9dbcde,0x0de3b51d,0xffef1219,x16, 44*SIGALIGN, x17,x1, x14)

inst_34:// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xdbcde43895c3f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xf12190de3b51d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7f9dbcde43895c3f; valaddr_reg:x16; op2:x26; op2val:0xffef12190de3b51d
offset:50*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x43895c3f, 0x7f9dbcde,0x0de3b51d,0xffef1219,x16, 46*SIGALIGN, x17,x1, x14)

inst_35:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc0659af8369fd and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x1fcd3283e4aff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fdc0659af8369fd; valaddr_reg:x16; op2:x26; op2val:0xffe1fcd3283e4aff
offset:52*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xaf8369fd, 0x7fdc0659,0x283e4aff,0xffe1fcd3,x16, 48*SIGALIGN, x17,x1, x14)

inst_36:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc0659af8369fd and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x1fcd3283e4aff and  fcsr == 0x20 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fdc0659af8369fd; valaddr_reg:x16; op2:x26; op2val:0xffe1fcd3283e4aff
offset:54*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xaf8369fd, 0x7fdc0659,0x283e4aff,0xffe1fcd3,x16, 50*SIGALIGN, x17,x1, x14)

inst_37:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc0659af8369fd and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x1fcd3283e4aff and  fcsr == 0x40 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fdc0659af8369fd; valaddr_reg:x16; op2:x26; op2val:0xffe1fcd3283e4aff
offset:56*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xaf8369fd, 0x7fdc0659,0x283e4aff,0xffe1fcd3,x16, 52*SIGALIGN, x17,x1, x14)

inst_38:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc0659af8369fd and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x1fcd3283e4aff and  fcsr == 0x60 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fdc0659af8369fd; valaddr_reg:x16; op2:x26; op2val:0xffe1fcd3283e4aff
offset:58*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xaf8369fd, 0x7fdc0659,0x283e4aff,0xffe1fcd3,x16, 54*SIGALIGN, x17,x1, x14)

inst_39:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc0659af8369fd and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x1fcd3283e4aff and  fcsr == 0x80 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fdc0659af8369fd; valaddr_reg:x16; op2:x26; op2val:0xffe1fcd3283e4aff
offset:60*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xaf8369fd, 0x7fdc0659,0x283e4aff,0xffe1fcd3,x16, 56*SIGALIGN, x17,x1, x14)

inst_40:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xdd5b61587fd27 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x88a927a9e00b5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fcdd5b61587fd27; valaddr_reg:x16; op2:x26; op2val:0xffe88a927a9e00b5
offset:62*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x1587fd27, 0x7fcdd5b6,0x7a9e00b5,0xffe88a92,x16, 58*SIGALIGN, x17,x1, x14)

inst_41:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xdd5b61587fd27 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x88a927a9e00b5 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fcdd5b61587fd27; valaddr_reg:x16; op2:x26; op2val:0xffe88a927a9e00b5
offset:64*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x1587fd27, 0x7fcdd5b6,0x7a9e00b5,0xffe88a92,x16, 60*SIGALIGN, x17,x1, x14)

inst_42:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xdd5b61587fd27 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x88a927a9e00b5 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fcdd5b61587fd27; valaddr_reg:x16; op2:x26; op2val:0xffe88a927a9e00b5
offset:66*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x1587fd27, 0x7fcdd5b6,0x7a9e00b5,0xffe88a92,x16, 62*SIGALIGN, x17,x1, x14)

inst_43:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xdd5b61587fd27 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x88a927a9e00b5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fcdd5b61587fd27; valaddr_reg:x16; op2:x26; op2val:0xffe88a927a9e00b5
offset:68*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x1587fd27, 0x7fcdd5b6,0x7a9e00b5,0xffe88a92,x16, 64*SIGALIGN, x17,x1, x14)

inst_44:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xdd5b61587fd27 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x88a927a9e00b5 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fcdd5b61587fd27; valaddr_reg:x16; op2:x26; op2val:0xffe88a927a9e00b5
offset:70*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x1587fd27, 0x7fcdd5b6,0x7a9e00b5,0xffe88a92,x16, 66*SIGALIGN, x17,x1, x14)

inst_45:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc01045c2cd787 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8ffbee8f4ca1c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fcc01045c2cd787; valaddr_reg:x16; op2:x26; op2val:0xffe8ffbee8f4ca1c
offset:72*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x5c2cd787, 0x7fcc0104,0xe8f4ca1c,0xffe8ffbe,x16, 68*SIGALIGN, x17,x1, x14)

inst_46:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc01045c2cd787 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8ffbee8f4ca1c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fcc01045c2cd787; valaddr_reg:x16; op2:x26; op2val:0xffe8ffbee8f4ca1c
offset:74*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x5c2cd787, 0x7fcc0104,0xe8f4ca1c,0xffe8ffbe,x16, 70*SIGALIGN, x17,x1, x14)

inst_47:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc01045c2cd787 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8ffbee8f4ca1c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fcc01045c2cd787; valaddr_reg:x16; op2:x26; op2val:0xffe8ffbee8f4ca1c
offset:76*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x5c2cd787, 0x7fcc0104,0xe8f4ca1c,0xffe8ffbe,x16, 72*SIGALIGN, x17,x1, x14)

inst_48:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc01045c2cd787 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8ffbee8f4ca1c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fcc01045c2cd787; valaddr_reg:x16; op2:x26; op2val:0xffe8ffbee8f4ca1c
offset:78*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x5c2cd787, 0x7fcc0104,0xe8f4ca1c,0xffe8ffbe,x16, 74*SIGALIGN, x17,x1, x14)

inst_49:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc01045c2cd787 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8ffbee8f4ca1c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fcc01045c2cd787; valaddr_reg:x16; op2:x26; op2val:0xffe8ffbee8f4ca1c
offset:80*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x5c2cd787, 0x7fcc0104,0xe8f4ca1c,0xffe8ffbe,x16, 76*SIGALIGN, x17,x1, x14)

inst_50:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x28bc82f697c4d and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x6ba1be84b41d8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd28bc82f697c4d; valaddr_reg:x16; op2:x26; op2val:0xffe6ba1be84b41d8
offset:82*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x2f697c4d, 0x7fd28bc8,0xe84b41d8,0xffe6ba1b,x16, 78*SIGALIGN, x17,x1, x14)

inst_51:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x28bc82f697c4d and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x6ba1be84b41d8 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd28bc82f697c4d; valaddr_reg:x16; op2:x26; op2val:0xffe6ba1be84b41d8
offset:84*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x2f697c4d, 0x7fd28bc8,0xe84b41d8,0xffe6ba1b,x16, 80*SIGALIGN, x17,x1, x14)

inst_52:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x28bc82f697c4d and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x6ba1be84b41d8 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd28bc82f697c4d; valaddr_reg:x16; op2:x26; op2val:0xffe6ba1be84b41d8
offset:86*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x2f697c4d, 0x7fd28bc8,0xe84b41d8,0xffe6ba1b,x16, 82*SIGALIGN, x17,x1, x14)

inst_53:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x28bc82f697c4d and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x6ba1be84b41d8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd28bc82f697c4d; valaddr_reg:x16; op2:x26; op2val:0xffe6ba1be84b41d8
offset:88*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x2f697c4d, 0x7fd28bc8,0xe84b41d8,0xffe6ba1b,x16, 84*SIGALIGN, x17,x1, x14)

inst_54:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x28bc82f697c4d and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x6ba1be84b41d8 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd28bc82f697c4d; valaddr_reg:x16; op2:x26; op2val:0xffe6ba1be84b41d8
offset:90*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x2f697c4d, 0x7fd28bc8,0xe84b41d8,0xffe6ba1b,x16, 86*SIGALIGN, x17,x1, x14)

inst_55:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xacd7053aa42a2 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x4ca3eb156f570 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7feacd7053aa42a2; valaddr_reg:x16; op2:x26; op2val:0xffc4ca3eb156f570
offset:92*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x53aa42a2, 0x7feacd70,0xb156f570,0xffc4ca3e,x16, 88*SIGALIGN, x17,x1, x14)

inst_56:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xacd7053aa42a2 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x4ca3eb156f570 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7feacd7053aa42a2; valaddr_reg:x16; op2:x26; op2val:0xffc4ca3eb156f570
offset:94*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x53aa42a2, 0x7feacd70,0xb156f570,0xffc4ca3e,x16, 90*SIGALIGN, x17,x1, x14)

inst_57:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xacd7053aa42a2 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x4ca3eb156f570 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7feacd7053aa42a2; valaddr_reg:x16; op2:x26; op2val:0xffc4ca3eb156f570
offset:96*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x53aa42a2, 0x7feacd70,0xb156f570,0xffc4ca3e,x16, 92*SIGALIGN, x17,x1, x14)

inst_58:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xacd7053aa42a2 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x4ca3eb156f570 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7feacd7053aa42a2; valaddr_reg:x16; op2:x26; op2val:0xffc4ca3eb156f570
offset:98*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x53aa42a2, 0x7feacd70,0xb156f570,0xffc4ca3e,x16, 94*SIGALIGN, x17,x1, x14)

inst_59:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xacd7053aa42a2 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x4ca3eb156f570 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7feacd7053aa42a2; valaddr_reg:x16; op2:x26; op2val:0xffc4ca3eb156f570
offset:100*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x53aa42a2, 0x7feacd70,0xb156f570,0xffc4ca3e,x16, 96*SIGALIGN, x17,x1, x14)

inst_60:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x48dace8666677 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x6e4a62f333310 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe48dace8666677; valaddr_reg:x16; op2:x26; op2val:0xffd6e4a62f333310
offset:102*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe8666677, 0x7fe48dac,0x2f333310,0xffd6e4a6,x16, 98*SIGALIGN, x17,x1, x14)

inst_61:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x48dace8666677 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x6e4a62f333310 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe48dace8666677; valaddr_reg:x16; op2:x26; op2val:0xffd6e4a62f333310
offset:104*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xe8666677, 0x7fe48dac,0x2f333310,0xffd6e4a6,x16, 100*SIGALIGN, x17,x1, x14)

inst_62:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x48dace8666677 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x6e4a62f333310 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe48dace8666677; valaddr_reg:x16; op2:x26; op2val:0xffd6e4a62f333310
offset:106*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xe8666677, 0x7fe48dac,0x2f333310,0xffd6e4a6,x16, 102*SIGALIGN, x17,x1, x14)

inst_63:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x48dace8666677 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x6e4a62f333310 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe48dace8666677; valaddr_reg:x16; op2:x26; op2val:0xffd6e4a62f333310
offset:108*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe8666677, 0x7fe48dac,0x2f333310,0xffd6e4a6,x16, 104*SIGALIGN, x17,x1, x14)

inst_64:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x48dace8666677 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x6e4a62f333310 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe48dace8666677; valaddr_reg:x16; op2:x26; op2val:0xffd6e4a62f333310
offset:110*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xe8666677, 0x7fe48dac,0x2f333310,0xffd6e4a6,x16, 106*SIGALIGN, x17,x1, x14)

inst_65:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfc2ea66e5019e and fs2 == 1 and fe2 == 0x7f7 and fm2 == 0xe8acc8d7f2ffb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fefc2ea66e5019e; valaddr_reg:x16; op2:x26; op2val:0xff7e8acc8d7f2ffb
offset:112*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x66e5019e, 0x7fefc2ea,0x8d7f2ffb,0xff7e8acc,x16, 108*SIGALIGN, x17,x1, x14)

inst_66:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfc2ea66e5019e and fs2 == 1 and fe2 == 0x7f7 and fm2 == 0xe8acc8d7f2ffb and  fcsr == 0x20 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fefc2ea66e5019e; valaddr_reg:x16; op2:x26; op2val:0xff7e8acc8d7f2ffb
offset:114*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x66e5019e, 0x7fefc2ea,0x8d7f2ffb,0xff7e8acc,x16, 110*SIGALIGN, x17,x1, x14)

inst_67:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfc2ea66e5019e and fs2 == 1 and fe2 == 0x7f7 and fm2 == 0xe8acc8d7f2ffb and  fcsr == 0x40 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fefc2ea66e5019e; valaddr_reg:x16; op2:x26; op2val:0xff7e8acc8d7f2ffb
offset:116*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x66e5019e, 0x7fefc2ea,0x8d7f2ffb,0xff7e8acc,x16, 112*SIGALIGN, x17,x1, x14)

inst_68:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfc2ea66e5019e and fs2 == 1 and fe2 == 0x7f7 and fm2 == 0xe8acc8d7f2ffb and  fcsr == 0x60 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fefc2ea66e5019e; valaddr_reg:x16; op2:x26; op2val:0xff7e8acc8d7f2ffb
offset:118*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x66e5019e, 0x7fefc2ea,0x8d7f2ffb,0xff7e8acc,x16, 114*SIGALIGN, x17,x1, x14)

inst_69:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfc2ea66e5019e and fs2 == 1 and fe2 == 0x7f7 and fm2 == 0xe8acc8d7f2ffb and  fcsr == 0x80 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fefc2ea66e5019e; valaddr_reg:x16; op2:x26; op2val:0xff7e8acc8d7f2ffb
offset:120*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x66e5019e, 0x7fefc2ea,0x8d7f2ffb,0xff7e8acc,x16, 116*SIGALIGN, x17,x1, x14)

inst_70:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xef2a4f7c7db7f and fs2 == 1 and fe2 == 0x7f8 and fm2 == 0xb9867d3787c37 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fbef2a4f7c7db7f; valaddr_reg:x16; op2:x26; op2val:0xff8b9867d3787c37
offset:122*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf7c7db7f, 0x7fbef2a4,0xd3787c37,0xff8b9867,x16, 118*SIGALIGN, x17,x1, x14)

inst_71:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xef2a4f7c7db7f and fs2 == 1 and fe2 == 0x7f8 and fm2 == 0xb9867d3787c37 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fbef2a4f7c7db7f; valaddr_reg:x16; op2:x26; op2val:0xff8b9867d3787c37
offset:124*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xf7c7db7f, 0x7fbef2a4,0xd3787c37,0xff8b9867,x16, 120*SIGALIGN, x17,x1, x14)

inst_72:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xef2a4f7c7db7f and fs2 == 1 and fe2 == 0x7f8 and fm2 == 0xb9867d3787c37 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fbef2a4f7c7db7f; valaddr_reg:x16; op2:x26; op2val:0xff8b9867d3787c37
offset:126*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xf7c7db7f, 0x7fbef2a4,0xd3787c37,0xff8b9867,x16, 122*SIGALIGN, x17,x1, x14)

inst_73:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xef2a4f7c7db7f and fs2 == 1 and fe2 == 0x7f8 and fm2 == 0xb9867d3787c37 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fbef2a4f7c7db7f; valaddr_reg:x16; op2:x26; op2val:0xff8b9867d3787c37
offset:128*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf7c7db7f, 0x7fbef2a4,0xd3787c37,0xff8b9867,x16, 124*SIGALIGN, x17,x1, x14)

inst_74:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xef2a4f7c7db7f and fs2 == 1 and fe2 == 0x7f8 and fm2 == 0xb9867d3787c37 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fbef2a4f7c7db7f; valaddr_reg:x16; op2:x26; op2val:0xff8b9867d3787c37
offset:130*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xf7c7db7f, 0x7fbef2a4,0xd3787c37,0xff8b9867,x16, 126*SIGALIGN, x17,x1, x14)

inst_75:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7166677e49c3c and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x9cc9e3436c322 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe7166677e49c3c; valaddr_reg:x16; op2:x26; op2val:0x7fe9cc9e3436c322
offset:132*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x77e49c3c, 0x7fe71666,0x3436c322,0x7fe9cc9e,x16, 128*SIGALIGN, x17,x1, x14)

inst_76:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7166677e49c3c and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x9cc9e3436c322 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe7166677e49c3c; valaddr_reg:x16; op2:x26; op2val:0x7fe9cc9e3436c322
offset:134*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x77e49c3c, 0x7fe71666,0x3436c322,0x7fe9cc9e,x16, 130*SIGALIGN, x17,x1, x14)

inst_77:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7166677e49c3c and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x9cc9e3436c322 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe7166677e49c3c; valaddr_reg:x16; op2:x26; op2val:0x7fe9cc9e3436c322
offset:136*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x77e49c3c, 0x7fe71666,0x3436c322,0x7fe9cc9e,x16, 132*SIGALIGN, x17,x1, x14)

inst_78:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7166677e49c3c and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x9cc9e3436c322 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe7166677e49c3c; valaddr_reg:x16; op2:x26; op2val:0x7fe9cc9e3436c322
offset:138*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x77e49c3c, 0x7fe71666,0x3436c322,0x7fe9cc9e,x16, 134*SIGALIGN, x17,x1, x14)

inst_79:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7166677e49c3c and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x9cc9e3436c322 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe7166677e49c3c; valaddr_reg:x16; op2:x26; op2val:0x7fe9cc9e3436c322
offset:140*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x77e49c3c, 0x7fe71666,0x3436c322,0x7fe9cc9e,x16, 136*SIGALIGN, x17,x1, x14)

inst_80:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdf7523fde6c5d and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb85a31a3e5c75 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fedf7523fde6c5d; valaddr_reg:x16; op2:x26; op2val:0x7feb85a31a3e5c75
offset:142*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x3fde6c5d, 0x7fedf752,0x1a3e5c75,0x7feb85a3,x16, 138*SIGALIGN, x17,x1, x14)

inst_81:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdf7523fde6c5d and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb85a31a3e5c75 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fedf7523fde6c5d; valaddr_reg:x16; op2:x26; op2val:0x7feb85a31a3e5c75
offset:144*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x3fde6c5d, 0x7fedf752,0x1a3e5c75,0x7feb85a3,x16, 140*SIGALIGN, x17,x1, x14)

inst_82:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdf7523fde6c5d and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb85a31a3e5c75 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fedf7523fde6c5d; valaddr_reg:x16; op2:x26; op2val:0x7feb85a31a3e5c75
offset:146*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x3fde6c5d, 0x7fedf752,0x1a3e5c75,0x7feb85a3,x16, 142*SIGALIGN, x17,x1, x14)

inst_83:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdf7523fde6c5d and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb85a31a3e5c75 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fedf7523fde6c5d; valaddr_reg:x16; op2:x26; op2val:0x7feb85a31a3e5c75
offset:148*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x3fde6c5d, 0x7fedf752,0x1a3e5c75,0x7feb85a3,x16, 144*SIGALIGN, x17,x1, x14)

inst_84:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdf7523fde6c5d and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb85a31a3e5c75 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fedf7523fde6c5d; valaddr_reg:x16; op2:x26; op2val:0x7feb85a31a3e5c75
offset:150*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x3fde6c5d, 0x7fedf752,0x1a3e5c75,0x7feb85a3,x16, 146*SIGALIGN, x17,x1, x14)

inst_85:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa8fa703a4078c and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fea8fa703a4078c; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:152*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x03a4078c, 0x7fea8fa7,0x00000000,0x7ff00000,x16, 148*SIGALIGN, x17,x1, x14)

inst_86:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa8fa703a4078c and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fea8fa703a4078c; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:154*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x03a4078c, 0x7fea8fa7,0x00000000,0x7ff00000,x16, 150*SIGALIGN, x17,x1, x14)

inst_87:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa8fa703a4078c and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fea8fa703a4078c; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:156*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x03a4078c, 0x7fea8fa7,0x00000000,0x7ff00000,x16, 152*SIGALIGN, x17,x1, x14)

inst_88:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa8fa703a4078c and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fea8fa703a4078c; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:158*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x03a4078c, 0x7fea8fa7,0x00000000,0x7ff00000,x16, 154*SIGALIGN, x17,x1, x14)

inst_89:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa8fa703a4078c and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fea8fa703a4078c; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:160*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x03a4078c, 0x7fea8fa7,0x00000000,0x7ff00000,x16, 156*SIGALIGN, x17,x1, x14)

inst_90:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x36a63c245f557 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x895a337a0fc43 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd36a63c245f557; valaddr_reg:x16; op2:x26; op2val:0xffc895a337a0fc43
offset:162*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xc245f557, 0x7fd36a63,0x37a0fc43,0xffc895a3,x16, 158*SIGALIGN, x17,x1, x14)

inst_91:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x36a63c245f557 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x895a337a0fc43 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd36a63c245f557; valaddr_reg:x16; op2:x26; op2val:0xffc895a337a0fc43
offset:164*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xc245f557, 0x7fd36a63,0x37a0fc43,0xffc895a3,x16, 160*SIGALIGN, x17,x1, x14)

inst_92:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x36a63c245f557 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x895a337a0fc43 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd36a63c245f557; valaddr_reg:x16; op2:x26; op2val:0xffc895a337a0fc43
offset:166*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xc245f557, 0x7fd36a63,0x37a0fc43,0xffc895a3,x16, 162*SIGALIGN, x17,x1, x14)

inst_93:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x36a63c245f557 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x895a337a0fc43 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd36a63c245f557; valaddr_reg:x16; op2:x26; op2val:0xffc895a337a0fc43
offset:168*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xc245f557, 0x7fd36a63,0x37a0fc43,0xffc895a3,x16, 164*SIGALIGN, x17,x1, x14)

inst_94:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x36a63c245f557 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x895a337a0fc43 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd36a63c245f557; valaddr_reg:x16; op2:x26; op2val:0xffc895a337a0fc43
offset:170*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xc245f557, 0x7fd36a63,0x37a0fc43,0xffc895a3,x16, 166*SIGALIGN, x17,x1, x14)

inst_95:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc3d4499ff58c3 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fec3d4499ff58c3; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:172*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x99ff58c3, 0x7fec3d44,0x00000000,0x7ff00000,x16, 168*SIGALIGN, x17,x1, x14)

inst_96:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc3d4499ff58c3 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fec3d4499ff58c3; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:174*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x99ff58c3, 0x7fec3d44,0x00000000,0x7ff00000,x16, 170*SIGALIGN, x17,x1, x14)

inst_97:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc3d4499ff58c3 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fec3d4499ff58c3; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:176*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x99ff58c3, 0x7fec3d44,0x00000000,0x7ff00000,x16, 172*SIGALIGN, x17,x1, x14)

inst_98:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc3d4499ff58c3 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fec3d4499ff58c3; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:178*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x99ff58c3, 0x7fec3d44,0x00000000,0x7ff00000,x16, 174*SIGALIGN, x17,x1, x14)

inst_99:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc3d4499ff58c3 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fec3d4499ff58c3; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:180*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x99ff58c3, 0x7fec3d44,0x00000000,0x7ff00000,x16, 176*SIGALIGN, x17,x1, x14)

inst_100:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x02b48f992cb49 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xc2b000c717167 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe02b48f992cb49; valaddr_reg:x16; op2:x26; op2val:0x7fdc2b000c717167
offset:182*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf992cb49, 0x7fe02b48,0x0c717167,0x7fdc2b00,x16, 178*SIGALIGN, x17,x1, x14)

inst_101:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x02b48f992cb49 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xc2b000c717167 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe02b48f992cb49; valaddr_reg:x16; op2:x26; op2val:0x7fdc2b000c717167
offset:184*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xf992cb49, 0x7fe02b48,0x0c717167,0x7fdc2b00,x16, 180*SIGALIGN, x17,x1, x14)

inst_102:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x02b48f992cb49 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xc2b000c717167 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe02b48f992cb49; valaddr_reg:x16; op2:x26; op2val:0x7fdc2b000c717167
offset:186*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xf992cb49, 0x7fe02b48,0x0c717167,0x7fdc2b00,x16, 182*SIGALIGN, x17,x1, x14)

inst_103:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x02b48f992cb49 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xc2b000c717167 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe02b48f992cb49; valaddr_reg:x16; op2:x26; op2val:0x7fdc2b000c717167
offset:188*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf992cb49, 0x7fe02b48,0x0c717167,0x7fdc2b00,x16, 184*SIGALIGN, x17,x1, x14)

inst_104:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x02b48f992cb49 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xc2b000c717167 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe02b48f992cb49; valaddr_reg:x16; op2:x26; op2val:0x7fdc2b000c717167
offset:190*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xf992cb49, 0x7fe02b48,0x0c717167,0x7fdc2b00,x16, 186*SIGALIGN, x17,x1, x14)

inst_105:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x1ad5e9ebc09df and fs2 == 0 and fe2 == 0x7fb and fm2 == 0xd07a9833d36d8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fa1ad5e9ebc09df; valaddr_reg:x16; op2:x26; op2val:0x7fbd07a9833d36d8
offset:192*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x9ebc09df, 0x7fa1ad5e,0x833d36d8,0x7fbd07a9,x16, 188*SIGALIGN, x17,x1, x14)

inst_106:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x1ad5e9ebc09df and fs2 == 0 and fe2 == 0x7fb and fm2 == 0xd07a9833d36d8 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fa1ad5e9ebc09df; valaddr_reg:x16; op2:x26; op2val:0x7fbd07a9833d36d8
offset:194*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x9ebc09df, 0x7fa1ad5e,0x833d36d8,0x7fbd07a9,x16, 190*SIGALIGN, x17,x1, x14)

inst_107:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x1ad5e9ebc09df and fs2 == 0 and fe2 == 0x7fb and fm2 == 0xd07a9833d36d8 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fa1ad5e9ebc09df; valaddr_reg:x16; op2:x26; op2val:0x7fbd07a9833d36d8
offset:196*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x9ebc09df, 0x7fa1ad5e,0x833d36d8,0x7fbd07a9,x16, 192*SIGALIGN, x17,x1, x14)

inst_108:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x1ad5e9ebc09df and fs2 == 0 and fe2 == 0x7fb and fm2 == 0xd07a9833d36d8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fa1ad5e9ebc09df; valaddr_reg:x16; op2:x26; op2val:0x7fbd07a9833d36d8
offset:198*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x9ebc09df, 0x7fa1ad5e,0x833d36d8,0x7fbd07a9,x16, 194*SIGALIGN, x17,x1, x14)

inst_109:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x1ad5e9ebc09df and fs2 == 0 and fe2 == 0x7fb and fm2 == 0xd07a9833d36d8 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fa1ad5e9ebc09df; valaddr_reg:x16; op2:x26; op2val:0x7fbd07a9833d36d8
offset:200*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x9ebc09df, 0x7fa1ad5e,0x833d36d8,0x7fbd07a9,x16, 196*SIGALIGN, x17,x1, x14)

inst_110:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x98455e99dfdb1 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x212912796a508 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe98455e99dfdb1; valaddr_reg:x16; op2:x26; op2val:0xffc212912796a508
offset:202*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe99dfdb1, 0x7fe98455,0x2796a508,0xffc21291,x16, 198*SIGALIGN, x17,x1, x14)

inst_111:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x98455e99dfdb1 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x212912796a508 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe98455e99dfdb1; valaddr_reg:x16; op2:x26; op2val:0xffc212912796a508
offset:204*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xe99dfdb1, 0x7fe98455,0x2796a508,0xffc21291,x16, 200*SIGALIGN, x17,x1, x14)

inst_112:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x98455e99dfdb1 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x212912796a508 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe98455e99dfdb1; valaddr_reg:x16; op2:x26; op2val:0xffc212912796a508
offset:206*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xe99dfdb1, 0x7fe98455,0x2796a508,0xffc21291,x16, 202*SIGALIGN, x17,x1, x14)

inst_113:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x98455e99dfdb1 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x212912796a508 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe98455e99dfdb1; valaddr_reg:x16; op2:x26; op2val:0xffc212912796a508
offset:208*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe99dfdb1, 0x7fe98455,0x2796a508,0xffc21291,x16, 204*SIGALIGN, x17,x1, x14)

inst_114:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x98455e99dfdb1 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x212912796a508 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe98455e99dfdb1; valaddr_reg:x16; op2:x26; op2val:0xffc212912796a508
offset:210*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xe99dfdb1, 0x7fe98455,0x2796a508,0xffc21291,x16, 206*SIGALIGN, x17,x1, x14)

inst_115:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x6251b45dfbd3b and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fc6251b45dfbd3b; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:212*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x45dfbd3b, 0x7fc6251b,0x00000000,0x7ff00000,x16, 208*SIGALIGN, x17,x1, x14)

inst_116:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x6251b45dfbd3b and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fc6251b45dfbd3b; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:214*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x45dfbd3b, 0x7fc6251b,0x00000000,0x7ff00000,x16, 210*SIGALIGN, x17,x1, x14)

inst_117:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x6251b45dfbd3b and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fc6251b45dfbd3b; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:216*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x45dfbd3b, 0x7fc6251b,0x00000000,0x7ff00000,x16, 212*SIGALIGN, x17,x1, x14)

inst_118:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x6251b45dfbd3b and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fc6251b45dfbd3b; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:218*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x45dfbd3b, 0x7fc6251b,0x00000000,0x7ff00000,x16, 214*SIGALIGN, x17,x1, x14)

inst_119:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x6251b45dfbd3b and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fc6251b45dfbd3b; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:220*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x45dfbd3b, 0x7fc6251b,0x00000000,0x7ff00000,x16, 216*SIGALIGN, x17,x1, x14)

inst_120:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x67f4f571a752e and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0fd1c79d2d36d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe67f4f571a752e; valaddr_reg:x16; op2:x26; op2val:0xffc0fd1c79d2d36d
offset:222*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x571a752e, 0x7fe67f4f,0x79d2d36d,0xffc0fd1c,x16, 218*SIGALIGN, x17,x1, x14)

inst_121:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x67f4f571a752e and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0fd1c79d2d36d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe67f4f571a752e; valaddr_reg:x16; op2:x26; op2val:0xffc0fd1c79d2d36d
offset:224*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x571a752e, 0x7fe67f4f,0x79d2d36d,0xffc0fd1c,x16, 220*SIGALIGN, x17,x1, x14)

inst_122:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x67f4f571a752e and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0fd1c79d2d36d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe67f4f571a752e; valaddr_reg:x16; op2:x26; op2val:0xffc0fd1c79d2d36d
offset:226*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x571a752e, 0x7fe67f4f,0x79d2d36d,0xffc0fd1c,x16, 222*SIGALIGN, x17,x1, x14)

inst_123:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x67f4f571a752e and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0fd1c79d2d36d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe67f4f571a752e; valaddr_reg:x16; op2:x26; op2val:0xffc0fd1c79d2d36d
offset:228*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x571a752e, 0x7fe67f4f,0x79d2d36d,0xffc0fd1c,x16, 224*SIGALIGN, x17,x1, x14)

inst_124:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x67f4f571a752e and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0fd1c79d2d36d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe67f4f571a752e; valaddr_reg:x16; op2:x26; op2val:0xffc0fd1c79d2d36d
offset:230*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x571a752e, 0x7fe67f4f,0x79d2d36d,0xffc0fd1c,x16, 226*SIGALIGN, x17,x1, x14)

inst_125:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7fb2260b115e9 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd7fb2260b115e9; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:232*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x60b115e9, 0x7fd7fb22,0x00000000,0x7ff00000,x16, 228*SIGALIGN, x17,x1, x14)

inst_126:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7fb2260b115e9 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd7fb2260b115e9; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:234*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x60b115e9, 0x7fd7fb22,0x00000000,0x7ff00000,x16, 230*SIGALIGN, x17,x1, x14)

inst_127:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7fb2260b115e9 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd7fb2260b115e9; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:236*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x60b115e9, 0x7fd7fb22,0x00000000,0x7ff00000,x16, 232*SIGALIGN, x17,x1, x14)

inst_128:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7fb2260b115e9 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd7fb2260b115e9; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:238*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x60b115e9, 0x7fd7fb22,0x00000000,0x7ff00000,x16, 234*SIGALIGN, x17,x1, x14)

inst_129:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7fb2260b115e9 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd7fb2260b115e9; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:240*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x60b115e9, 0x7fd7fb22,0x00000000,0x7ff00000,x16, 236*SIGALIGN, x17,x1, x14)

inst_130:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x04507a06e8587 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x03f232546187a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe04507a06e8587; valaddr_reg:x16; op2:x26; op2val:0xffd03f232546187a
offset:242*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xa06e8587, 0x7fe04507,0x2546187a,0xffd03f23,x16, 238*SIGALIGN, x17,x1, x14)

inst_131:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x04507a06e8587 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x03f232546187a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe04507a06e8587; valaddr_reg:x16; op2:x26; op2val:0xffd03f232546187a
offset:244*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xa06e8587, 0x7fe04507,0x2546187a,0xffd03f23,x16, 240*SIGALIGN, x17,x1, x14)

inst_132:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x04507a06e8587 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x03f232546187a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe04507a06e8587; valaddr_reg:x16; op2:x26; op2val:0xffd03f232546187a
offset:246*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xa06e8587, 0x7fe04507,0x2546187a,0xffd03f23,x16, 242*SIGALIGN, x17,x1, x14)

inst_133:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x04507a06e8587 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x03f232546187a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe04507a06e8587; valaddr_reg:x16; op2:x26; op2val:0xffd03f232546187a
offset:248*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xa06e8587, 0x7fe04507,0x2546187a,0xffd03f23,x16, 244*SIGALIGN, x17,x1, x14)

inst_134:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x04507a06e8587 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x03f232546187a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe04507a06e8587; valaddr_reg:x16; op2:x26; op2val:0xffd03f232546187a
offset:250*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xa06e8587, 0x7fe04507,0x2546187a,0xffd03f23,x16, 246*SIGALIGN, x17,x1, x14)

inst_135:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0ab870b5c1c40 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0ab870b5c1c40; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:252*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0b5c1c40, 0x7fe0ab87,0x00000000,0x7ff00000,x16, 248*SIGALIGN, x17,x1, x14)

inst_136:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0ab870b5c1c40 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0ab870b5c1c40; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:254*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x0b5c1c40, 0x7fe0ab87,0x00000000,0x7ff00000,x16, 250*SIGALIGN, x17,x1, x14)

inst_137:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0ab870b5c1c40 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0ab870b5c1c40; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:256*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x0b5c1c40, 0x7fe0ab87,0x00000000,0x7ff00000,x16, 252*SIGALIGN, x17,x1, x14)

inst_138:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0ab870b5c1c40 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0ab870b5c1c40; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:258*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x0b5c1c40, 0x7fe0ab87,0x00000000,0x7ff00000,x16, 254*SIGALIGN, x17,x1, x14)

inst_139:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0ab870b5c1c40 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0ab870b5c1c40; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:260*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x0b5c1c40, 0x7fe0ab87,0x00000000,0x7ff00000,x16, 256*SIGALIGN, x17,x1, x14)

inst_140:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc81394a2171e9 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x1bf635aef470a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fdc81394a2171e9; valaddr_reg:x16; op2:x26; op2val:0xffe1bf635aef470a
offset:262*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x4a2171e9, 0x7fdc8139,0x5aef470a,0xffe1bf63,x16, 258*SIGALIGN, x17,x1, x14)

inst_141:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc81394a2171e9 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x1bf635aef470a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fdc81394a2171e9; valaddr_reg:x16; op2:x26; op2val:0xffe1bf635aef470a
offset:264*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x4a2171e9, 0x7fdc8139,0x5aef470a,0xffe1bf63,x16, 260*SIGALIGN, x17,x1, x14)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0x4a2171e9,64,FLEN)
NAN_BOXED(0x4a2171e9,64,FLEN)
NAN_BOXED(0x4a2171e9,64,FLEN)
NAN_BOXED(0x5aef470a,64,FLEN)
NAN_BOXED(0x4a2171e9,64,FLEN)
NAN_BOXED(0x5aef470a,64,FLEN)
NAN_BOXED(0x4a2171e9,64,FLEN)
NAN_BOXED(0x5aef470a,64,FLEN)
NAN_BOXED(0x4a2171e9,64,FLEN)
NAN_BOXED(0x4a2171e9,64,FLEN)
NAN_BOXED(0x99755d4b,64,FLEN)
NAN_BOXED(0xd9a2a8ab,64,FLEN)
NAN_BOXED(0x99755d4b,64,FLEN)
NAN_BOXED(0xd9a2a8ab,64,FLEN)
NAN_BOXED(0x99755d4b,64,FLEN)
NAN_BOXED(0xd9a2a8ab,64,FLEN)
NAN_BOXED(0x99755d4b,64,FLEN)
NAN_BOXED(0xd9a2a8ab,64,FLEN)
test_dataset_1:
NAN_BOXED(0x99755d4b,64,FLEN)
NAN_BOXED(0xd9a2a8ab,64,FLEN)
NAN_BOXED(0x65450c45,64,FLEN)
NAN_BOXED(0xd5d79dd0,64,FLEN)
NAN_BOXED(0x65450c45,64,FLEN)
NAN_BOXED(0xd5d79dd0,64,FLEN)
NAN_BOXED(0x65450c45,64,FLEN)
NAN_BOXED(0xd5d79dd0,64,FLEN)
NAN_BOXED(0x65450c45,64,FLEN)
NAN_BOXED(0xd5d79dd0,64,FLEN)
NAN_BOXED(0x65450c45,64,FLEN)
NAN_BOXED(0xd5d79dd0,64,FLEN)
NAN_BOXED(0xd32453df,64,FLEN)
NAN_BOXED(0x2966dd5f,64,FLEN)
NAN_BOXED(0xd32453df,64,FLEN)
NAN_BOXED(0x2966dd5f,64,FLEN)
NAN_BOXED(0xd32453df,64,FLEN)
NAN_BOXED(0x2966dd5f,64,FLEN)
NAN_BOXED(0xd32453df,64,FLEN)
NAN_BOXED(0x2966dd5f,64,FLEN)
NAN_BOXED(0xd32453df,64,FLEN)
NAN_BOXED(0x2966dd5f,64,FLEN)
NAN_BOXED(0x8b86622a,64,FLEN)
NAN_BOXED(0x4799dd4f,64,FLEN)
NAN_BOXED(0x8b86622a,64,FLEN)
NAN_BOXED(0x4799dd4f,64,FLEN)
NAN_BOXED(0x8b86622a,64,FLEN)
NAN_BOXED(0x4799dd4f,64,FLEN)
NAN_BOXED(0x8b86622a,64,FLEN)
NAN_BOXED(0x4799dd4f,64,FLEN)
NAN_BOXED(0x8b86622a,64,FLEN)
NAN_BOXED(0x4799dd4f,64,FLEN)
NAN_BOXED(0x6f8130c3,64,FLEN)
NAN_BOXED(0x241fb3cd,64,FLEN)
NAN_BOXED(0x6f8130c3,64,FLEN)
NAN_BOXED(0x241fb3cd,64,FLEN)
NAN_BOXED(0x6f8130c3,64,FLEN)
NAN_BOXED(0x241fb3cd,64,FLEN)
NAN_BOXED(0x6f8130c3,64,FLEN)
NAN_BOXED(0x241fb3cd,64,FLEN)
NAN_BOXED(0x6f8130c3,64,FLEN)
NAN_BOXED(0x241fb3cd,64,FLEN)
NAN_BOXED(0x43895c3f,64,FLEN)
NAN_BOXED(0x0de3b51d,64,FLEN)
NAN_BOXED(0x43895c3f,64,FLEN)
NAN_BOXED(0x0de3b51d,64,FLEN)
NAN_BOXED(0x43895c3f,64,FLEN)
NAN_BOXED(0x0de3b51d,64,FLEN)
NAN_BOXED(0x43895c3f,64,FLEN)
NAN_BOXED(0x0de3b51d,64,FLEN)
NAN_BOXED(0x43895c3f,64,FLEN)
NAN_BOXED(0x0de3b51d,64,FLEN)
NAN_BOXED(0xaf8369fd,64,FLEN)
NAN_BOXED(0x283e4aff,64,FLEN)
NAN_BOXED(0xaf8369fd,64,FLEN)
NAN_BOXED(0x283e4aff,64,FLEN)
NAN_BOXED(0xaf8369fd,64,FLEN)
NAN_BOXED(0x283e4aff,64,FLEN)
NAN_BOXED(0xaf8369fd,64,FLEN)
NAN_BOXED(0x283e4aff,64,FLEN)
NAN_BOXED(0xaf8369fd,64,FLEN)
NAN_BOXED(0x283e4aff,64,FLEN)
NAN_BOXED(0x1587fd27,64,FLEN)
NAN_BOXED(0x7a9e00b5,64,FLEN)
NAN_BOXED(0x1587fd27,64,FLEN)
NAN_BOXED(0x7a9e00b5,64,FLEN)
NAN_BOXED(0x1587fd27,64,FLEN)
NAN_BOXED(0x7a9e00b5,64,FLEN)
NAN_BOXED(0x1587fd27,64,FLEN)
NAN_BOXED(0x7a9e00b5,64,FLEN)
NAN_BOXED(0x1587fd27,64,FLEN)
NAN_BOXED(0x7a9e00b5,64,FLEN)
NAN_BOXED(0x5c2cd787,64,FLEN)
NAN_BOXED(0xe8f4ca1c,64,FLEN)
NAN_BOXED(0x5c2cd787,64,FLEN)
NAN_BOXED(0xe8f4ca1c,64,FLEN)
NAN_BOXED(0x5c2cd787,64,FLEN)
NAN_BOXED(0xe8f4ca1c,64,FLEN)
NAN_BOXED(0x5c2cd787,64,FLEN)
NAN_BOXED(0xe8f4ca1c,64,FLEN)
NAN_BOXED(0x5c2cd787,64,FLEN)
NAN_BOXED(0xe8f4ca1c,64,FLEN)
NAN_BOXED(0x2f697c4d,64,FLEN)
NAN_BOXED(0xe84b41d8,64,FLEN)
NAN_BOXED(0x2f697c4d,64,FLEN)
NAN_BOXED(0xe84b41d8,64,FLEN)
NAN_BOXED(0x2f697c4d,64,FLEN)
NAN_BOXED(0xe84b41d8,64,FLEN)
NAN_BOXED(0x2f697c4d,64,FLEN)
NAN_BOXED(0xe84b41d8,64,FLEN)
NAN_BOXED(0x2f697c4d,64,FLEN)
NAN_BOXED(0xe84b41d8,64,FLEN)
NAN_BOXED(0x53aa42a2,64,FLEN)
NAN_BOXED(0xb156f570,64,FLEN)
NAN_BOXED(0x53aa42a2,64,FLEN)
NAN_BOXED(0xb156f570,64,FLEN)
NAN_BOXED(0x53aa42a2,64,FLEN)
NAN_BOXED(0xb156f570,64,FLEN)
NAN_BOXED(0x53aa42a2,64,FLEN)
NAN_BOXED(0xb156f570,64,FLEN)
NAN_BOXED(0x53aa42a2,64,FLEN)
NAN_BOXED(0xb156f570,64,FLEN)
NAN_BOXED(0xe8666677,64,FLEN)
NAN_BOXED(0x2f333310,64,FLEN)
NAN_BOXED(0xe8666677,64,FLEN)
NAN_BOXED(0x2f333310,64,FLEN)
NAN_BOXED(0xe8666677,64,FLEN)
NAN_BOXED(0x2f333310,64,FLEN)
NAN_BOXED(0xe8666677,64,FLEN)
NAN_BOXED(0x2f333310,64,FLEN)
NAN_BOXED(0xe8666677,64,FLEN)
NAN_BOXED(0x2f333310,64,FLEN)
NAN_BOXED(0x66e5019e,64,FLEN)
NAN_BOXED(0x8d7f2ffb,64,FLEN)
NAN_BOXED(0x66e5019e,64,FLEN)
NAN_BOXED(0x8d7f2ffb,64,FLEN)
NAN_BOXED(0x66e5019e,64,FLEN)
NAN_BOXED(0x8d7f2ffb,64,FLEN)
NAN_BOXED(0x66e5019e,64,FLEN)
NAN_BOXED(0x8d7f2ffb,64,FLEN)
NAN_BOXED(0x66e5019e,64,FLEN)
NAN_BOXED(0x8d7f2ffb,64,FLEN)
NAN_BOXED(0xf7c7db7f,64,FLEN)
NAN_BOXED(0xd3787c37,64,FLEN)
NAN_BOXED(0xf7c7db7f,64,FLEN)
NAN_BOXED(0xd3787c37,64,FLEN)
NAN_BOXED(0xf7c7db7f,64,FLEN)
NAN_BOXED(0xd3787c37,64,FLEN)
NAN_BOXED(0xf7c7db7f,64,FLEN)
NAN_BOXED(0xd3787c37,64,FLEN)
NAN_BOXED(0xf7c7db7f,64,FLEN)
NAN_BOXED(0xd3787c37,64,FLEN)
NAN_BOXED(0x77e49c3c,64,FLEN)
NAN_BOXED(0x3436c322,64,FLEN)
NAN_BOXED(0x77e49c3c,64,FLEN)
NAN_BOXED(0x3436c322,64,FLEN)
NAN_BOXED(0x77e49c3c,64,FLEN)
NAN_BOXED(0x3436c322,64,FLEN)
NAN_BOXED(0x77e49c3c,64,FLEN)
NAN_BOXED(0x3436c322,64,FLEN)
NAN_BOXED(0x77e49c3c,64,FLEN)
NAN_BOXED(0x3436c322,64,FLEN)
NAN_BOXED(0x3fde6c5d,64,FLEN)
NAN_BOXED(0x1a3e5c75,64,FLEN)
NAN_BOXED(0x3fde6c5d,64,FLEN)
NAN_BOXED(0x1a3e5c75,64,FLEN)
NAN_BOXED(0x3fde6c5d,64,FLEN)
NAN_BOXED(0x1a3e5c75,64,FLEN)
NAN_BOXED(0x3fde6c5d,64,FLEN)
NAN_BOXED(0x1a3e5c75,64,FLEN)
NAN_BOXED(0x3fde6c5d,64,FLEN)
NAN_BOXED(0x1a3e5c75,64,FLEN)
NAN_BOXED(0x03a4078c,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x03a4078c,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x03a4078c,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x03a4078c,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x03a4078c,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xc245f557,64,FLEN)
NAN_BOXED(0x37a0fc43,64,FLEN)
NAN_BOXED(0xc245f557,64,FLEN)
NAN_BOXED(0x37a0fc43,64,FLEN)
NAN_BOXED(0xc245f557,64,FLEN)
NAN_BOXED(0x37a0fc43,64,FLEN)
NAN_BOXED(0xc245f557,64,FLEN)
NAN_BOXED(0x37a0fc43,64,FLEN)
NAN_BOXED(0xc245f557,64,FLEN)
NAN_BOXED(0x37a0fc43,64,FLEN)
NAN_BOXED(0x99ff58c3,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x99ff58c3,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x99ff58c3,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x99ff58c3,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x99ff58c3,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xf992cb49,64,FLEN)
NAN_BOXED(0x0c717167,64,FLEN)
NAN_BOXED(0xf992cb49,64,FLEN)
NAN_BOXED(0x0c717167,64,FLEN)
NAN_BOXED(0xf992cb49,64,FLEN)
NAN_BOXED(0x0c717167,64,FLEN)
NAN_BOXED(0xf992cb49,64,FLEN)
NAN_BOXED(0x0c717167,64,FLEN)
NAN_BOXED(0xf992cb49,64,FLEN)
NAN_BOXED(0x0c717167,64,FLEN)
NAN_BOXED(0x9ebc09df,64,FLEN)
NAN_BOXED(0x833d36d8,64,FLEN)
NAN_BOXED(0x9ebc09df,64,FLEN)
NAN_BOXED(0x833d36d8,64,FLEN)
NAN_BOXED(0x9ebc09df,64,FLEN)
NAN_BOXED(0x833d36d8,64,FLEN)
NAN_BOXED(0x9ebc09df,64,FLEN)
NAN_BOXED(0x833d36d8,64,FLEN)
NAN_BOXED(0x9ebc09df,64,FLEN)
NAN_BOXED(0x833d36d8,64,FLEN)
NAN_BOXED(0xe99dfdb1,64,FLEN)
NAN_BOXED(0x2796a508,64,FLEN)
NAN_BOXED(0xe99dfdb1,64,FLEN)
NAN_BOXED(0x2796a508,64,FLEN)
NAN_BOXED(0xe99dfdb1,64,FLEN)
NAN_BOXED(0x2796a508,64,FLEN)
NAN_BOXED(0xe99dfdb1,64,FLEN)
NAN_BOXED(0x2796a508,64,FLEN)
NAN_BOXED(0xe99dfdb1,64,FLEN)
NAN_BOXED(0x2796a508,64,FLEN)
NAN_BOXED(0x45dfbd3b,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x45dfbd3b,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x45dfbd3b,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x45dfbd3b,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x45dfbd3b,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x571a752e,64,FLEN)
NAN_BOXED(0x79d2d36d,64,FLEN)
NAN_BOXED(0x571a752e,64,FLEN)
NAN_BOXED(0x79d2d36d,64,FLEN)
NAN_BOXED(0x571a752e,64,FLEN)
NAN_BOXED(0x79d2d36d,64,FLEN)
NAN_BOXED(0x571a752e,64,FLEN)
NAN_BOXED(0x79d2d36d,64,FLEN)
NAN_BOXED(0x571a752e,64,FLEN)
NAN_BOXED(0x79d2d36d,64,FLEN)
NAN_BOXED(0x60b115e9,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x60b115e9,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x60b115e9,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x60b115e9,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x60b115e9,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xa06e8587,64,FLEN)
NAN_BOXED(0x2546187a,64,FLEN)
NAN_BOXED(0xa06e8587,64,FLEN)
NAN_BOXED(0x2546187a,64,FLEN)
NAN_BOXED(0xa06e8587,64,FLEN)
NAN_BOXED(0x2546187a,64,FLEN)
NAN_BOXED(0xa06e8587,64,FLEN)
NAN_BOXED(0x2546187a,64,FLEN)
NAN_BOXED(0xa06e8587,64,FLEN)
NAN_BOXED(0x2546187a,64,FLEN)
NAN_BOXED(0x0b5c1c40,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0b5c1c40,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0b5c1c40,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0b5c1c40,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0b5c1c40,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x4a2171e9,64,FLEN)
NAN_BOXED(0x5aef470a,64,FLEN)
NAN_BOXED(0x4a2171e9,64,FLEN)
NAN_BOXED(0x5aef470a,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 22*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 262*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
