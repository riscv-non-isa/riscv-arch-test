
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Thu Aug 24 09:25:42 2023 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV32Zdinx/fadd.d.cgf \
 \
//                  -- xlen 32  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fadd.d instruction of the RISC-V RV32_Zfinx_Zdinx extension for the fadd.d_b8 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32I_Zfinx_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*Zdinx.*);def TEST_CASE_1=True;",fadd.d_b8)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:// rs1 == rs2 == rd, rs1==x30, rs2==x30, rd==x30,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x3e9fc19d60908 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x3e9fc19d60908 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x30; dest:x30; op1val:0x3fc3e9fc19d60908; valaddr_reg:x3; op2:x30; op2val:0x3fc3e9fc19d60908
offset:0*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x30, x31,x30,x31,0, 0, 0, 0x19d60908, 0x3fc3e9fc,0x19d60908,0x3fc3e9fc,x3, 0*SIGALIGN, x4,x1, x2)

inst_1:// rs1 == rs2 != rd, rs1==x26, rs2==x26, rd==x28,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x3e9fc19d60908 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x3e9fc19d60908 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x26; dest:x28; op1val:0x3fc3e9fc19d60908; valaddr_reg:x3; op2:x26; op2val:0x3fc3e9fc19d60908
offset:2*FLEN/8; correctval:??; testreg:x2;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x28, x29, x26, x27,x26,x27,32, 0, 0, 0x19d60908, 0x3fc3e9fc,0x19d60908,0x3fc3e9fc,x3, 2*SIGALIGN, x4,x1, x2)

inst_2:// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x28, rs2==x24, rd==x26,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x3e9fc19d60908 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x3e9fc19d60908 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x26; op1val:0x3fc3e9fc19d60908; valaddr_reg:x3; op2:x24; op2val:0xbfc3e9fc19d60908
offset:4*FLEN/8; correctval:??; testreg:x2;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x26, x27, x28, x29,x24,x25,64, 0, 0, 0x19d60908, 0x3fc3e9fc,0x19d60908,0xbfc3e9fc,x3, 4*SIGALIGN, x4,x1, x2)

inst_3:// rs1 == rd != rs2, rs1==x24, rs2==x28, rd==x24,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x3e9fc19d60908 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x3e9fc19d60908 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x24; dest:x24; op1val:0x3fc3e9fc19d60908; valaddr_reg:x3; op2:x28; op2val:0xbfc3e9fc19d60908
offset:6*FLEN/8; correctval:??; testreg:x2;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x24, x25, x24, x25,x28,x29,96, 0, 0, 0x19d60908, 0x3fc3e9fc,0x19d60908,0xbfc3e9fc,x3, 6*SIGALIGN, x4,x1, x2)

inst_4:// rs2 == rd != rs1, rs1==x20, rs2==x22, rd==x22,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x3e9fc19d60908 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x3e9fc19d60908 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x20; dest:x22; op1val:0x3fc3e9fc19d60908; valaddr_reg:x3; op2:x22; op2val:0xbfc3e9fc19d60908
offset:8*FLEN/8; correctval:??; testreg:x2;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x22, x23, x20, x21,x22,x23,128, 0, 0, 0x19d60908, 0x3fc3e9fc,0x19d60908,0xbfc3e9fc,x3, 8*SIGALIGN, x4,x1, x2)

inst_5:// rs1==x22, rs2==x18, rd==x20,fs1 == 0 and fe1 == 0x3fe and fm1 == 0x28aad77d68b44 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x28aad77d68b44 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x22; dest:x20; op1val:0x3fe28aad77d68b44; valaddr_reg:x3; op2:x18; op2val:0xbfe28aad77d68b44
offset:10*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x20, x21, x22, x23,x18,x19,0, 0, 0, 0x77d68b44, 0x3fe28aad,0x77d68b44,0xbfe28aad,x3, 10*SIGALIGN, x4,x1, x2)

inst_6:// rs1==x16, rs2==x20, rd==x18,fs1 == 0 and fe1 == 0x3fe and fm1 == 0x28aad77d68b44 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x28aad77d68b44 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x16; dest:x18; op1val:0x3fe28aad77d68b44; valaddr_reg:x3; op2:x20; op2val:0xbfe28aad77d68b44
offset:12*FLEN/8; correctval:??; testreg:x2;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x18, x19, x16, x17,x20,x21,32, 0, 0, 0x77d68b44, 0x3fe28aad,0x77d68b44,0xbfe28aad,x3, 12*SIGALIGN, x4,x1, x2)

inst_7:// rs1==x18, rs2==x14, rd==x16,fs1 == 0 and fe1 == 0x3fe and fm1 == 0x28aad77d68b44 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x28aad77d68b44 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x18; dest:x16; op1val:0x3fe28aad77d68b44; valaddr_reg:x3; op2:x14; op2val:0xbfe28aad77d68b44
offset:14*FLEN/8; correctval:??; testreg:x2;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x16, x17, x18, x19,x14,x15,64, 0, 0, 0x77d68b44, 0x3fe28aad,0x77d68b44,0xbfe28aad,x3, 14*SIGALIGN, x4,x1, x2)

inst_8:// rs1==x12, rs2==x16, rd==x14,fs1 == 0 and fe1 == 0x3fe and fm1 == 0x28aad77d68b44 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x28aad77d68b44 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x12; dest:x14; op1val:0x3fe28aad77d68b44; valaddr_reg:x3; op2:x16; op2val:0xbfe28aad77d68b44
offset:16*FLEN/8; correctval:??; testreg:x2;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x14, x15, x12, x13,x16,x17,96, 0, 0, 0x77d68b44, 0x3fe28aad,0x77d68b44,0xbfe28aad,x3, 16*SIGALIGN, x4,x1, x2)
RVTEST_VALBASEUPD(x16,test_dataset_1)

inst_9:// rs1==x14, rs2==x10, rd==x12,fs1 == 0 and fe1 == 0x3fe and fm1 == 0x28aad77d68b44 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x28aad77d68b44 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x14; dest:x12; op1val:0x3fe28aad77d68b44; valaddr_reg:x16; op2:x10; op2val:0xbfe28aad77d68b44
offset:0*FLEN/8; correctval:??; testreg:x2;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x12, x13, x14, x15,x10,x11,128, 0, 0, 0x77d68b44, 0x3fe28aad,0x77d68b44,0xbfe28aad,x16, 18*SIGALIGN, x17,x1, x2)

inst_10:// rs1==x8, rs2==x12, rd==x10,fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf4746641cd1f2 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf4746641cd1f2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x8; dest:x10; op1val:0x3fdf4746641cd1f2; valaddr_reg:x16; op2:x12; op2val:0xbfdf4746641cd1f2
offset:2*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x10, x11, x8, x9,x12,x13,0, 0, 0, 0x641cd1f2, 0x3fdf4746,0x641cd1f2,0xbfdf4746,x16, 20*SIGALIGN, x17,x1, x14)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_11:// rs1==x10, rs2==x6, rd==x8,fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf4746641cd1f2 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf4746641cd1f2 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x10; dest:x8; op1val:0x3fdf4746641cd1f2; valaddr_reg:x16; op2:x6; op2val:0xbfdf4746641cd1f2
offset:4*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x8, x9, x10, x11,x6,x7,32, 0, 0, 0x641cd1f2, 0x3fdf4746,0x641cd1f2,0xbfdf4746,x16, 0*SIGALIGN, x17,x1, x14)

inst_12:// rs1==x4, rs2==x8, rd==x6,fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf4746641cd1f2 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf4746641cd1f2 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x4; dest:x6; op1val:0x3fdf4746641cd1f2; valaddr_reg:x16; op2:x8; op2val:0xbfdf4746641cd1f2
offset:6*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x6, x7, x4, x5,x8,x9,64, 0, 0, 0x641cd1f2, 0x3fdf4746,0x641cd1f2,0xbfdf4746,x16, 2*SIGALIGN, x17,x1, x14)

inst_13:// rs1==x6, rs2==x2, rd==x4,fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf4746641cd1f2 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf4746641cd1f2 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x6; dest:x4; op1val:0x3fdf4746641cd1f2; valaddr_reg:x16; op2:x2; op2val:0xbfdf4746641cd1f2
offset:8*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x4, x5, x6, x7,x2,x3,96, 0, 0, 0x641cd1f2, 0x3fdf4746,0x641cd1f2,0xbfdf4746,x16, 4*SIGALIGN, x17,x1, x14)

inst_14:// rs1==x2,fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf4746641cd1f2 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf4746641cd1f2 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x2; dest:x30; op1val:0x3fdf4746641cd1f2; valaddr_reg:x16; op2:x28; op2val:0xbfdf4746641cd1f2
offset:10*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x2, x3,x28,x29,128, 0, 0, 0x641cd1f2, 0x3fdf4746,0x641cd1f2,0xbfdf4746,x16, 6*SIGALIGN, x17,x1, x14)

inst_15:// rs2==x4,fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbac7ce2b8ec2c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xbac7ce2b8ec2c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcbac7ce2b8ec2c; valaddr_reg:x16; op2:x4; op2val:0xbfcbac7ce2b8ec2c
offset:12*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x4,x5,0, 0, 0, 0xe2b8ec2c, 0x3fcbac7c,0xe2b8ec2c,0xbfcbac7c,x16, 8*SIGALIGN, x17,x1, x14)

inst_16:// rd==x2,fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbac7ce2b8ec2c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xbac7ce2b8ec2c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x30; dest:x2; op1val:0x3fcbac7ce2b8ec2c; valaddr_reg:x16; op2:x28; op2val:0xbfcbac7ce2b8ec2c
offset:14*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x2, x3, x30, x31,x28,x29,32, 0, 0, 0xe2b8ec2c, 0x3fcbac7c,0xe2b8ec2c,0xbfcbac7c,x16, 10*SIGALIGN, x17,x1, x14)

inst_17:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbac7ce2b8ec2c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xbac7ce2b8ec2c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcbac7ce2b8ec2c; valaddr_reg:x16; op2:x26; op2val:0xbfcbac7ce2b8ec2c
offset:16*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xe2b8ec2c, 0x3fcbac7c,0xe2b8ec2c,0xbfcbac7c,x16, 12*SIGALIGN, x17,x1, x14)

inst_18:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbac7ce2b8ec2c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xbac7ce2b8ec2c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcbac7ce2b8ec2c; valaddr_reg:x16; op2:x26; op2val:0xbfcbac7ce2b8ec2c
offset:18*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe2b8ec2c, 0x3fcbac7c,0xe2b8ec2c,0xbfcbac7c,x16, 14*SIGALIGN, x17,x1, x14)

inst_19:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbac7ce2b8ec2c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xbac7ce2b8ec2c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcbac7ce2b8ec2c; valaddr_reg:x16; op2:x26; op2val:0xbfcbac7ce2b8ec2c
offset:20*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xe2b8ec2c, 0x3fcbac7c,0xe2b8ec2c,0xbfcbac7c,x16, 16*SIGALIGN, x17,x1, x14)

inst_20:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0bfb7be915b82 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0bfb7be915b82 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0bfb7be915b82; valaddr_reg:x16; op2:x26; op2val:0xbfe0bfb7be915b82
offset:22*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xbe915b82, 0x3fe0bfb7,0xbe915b82,0xbfe0bfb7,x16, 18*SIGALIGN, x17,x1, x14)

inst_21:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0bfb7be915b82 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0bfb7be915b82 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0bfb7be915b82; valaddr_reg:x16; op2:x26; op2val:0xbfe0bfb7be915b82
offset:24*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xbe915b82, 0x3fe0bfb7,0xbe915b82,0xbfe0bfb7,x16, 20*SIGALIGN, x17,x1, x14)

inst_22:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0bfb7be915b82 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0bfb7be915b82 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0bfb7be915b82; valaddr_reg:x16; op2:x26; op2val:0xbfe0bfb7be915b82
offset:26*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xbe915b82, 0x3fe0bfb7,0xbe915b82,0xbfe0bfb7,x16, 22*SIGALIGN, x17,x1, x14)

inst_23:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0bfb7be915b82 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0bfb7be915b82 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0bfb7be915b82; valaddr_reg:x16; op2:x26; op2val:0xbfe0bfb7be915b82
offset:28*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xbe915b82, 0x3fe0bfb7,0xbe915b82,0xbfe0bfb7,x16, 24*SIGALIGN, x17,x1, x14)

inst_24:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0bfb7be915b82 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0bfb7be915b82 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0bfb7be915b82; valaddr_reg:x16; op2:x26; op2val:0xbfe0bfb7be915b82
offset:30*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xbe915b82, 0x3fe0bfb7,0xbe915b82,0xbfe0bfb7,x16, 26*SIGALIGN, x17,x1, x14)

inst_25:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x785e9f9028468 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x785e9f9028468 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb785e9f9028468; valaddr_reg:x16; op2:x26; op2val:0xbfb785e9f9028468
offset:32*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf9028468, 0x3fb785e9,0xf9028468,0xbfb785e9,x16, 28*SIGALIGN, x17,x1, x14)

inst_26:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x785e9f9028468 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x785e9f9028468 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb785e9f9028468; valaddr_reg:x16; op2:x26; op2val:0xbfb785e9f9028468
offset:34*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xf9028468, 0x3fb785e9,0xf9028468,0xbfb785e9,x16, 30*SIGALIGN, x17,x1, x14)

inst_27:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x785e9f9028468 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x785e9f9028468 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb785e9f9028468; valaddr_reg:x16; op2:x26; op2val:0xbfb785e9f9028468
offset:36*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xf9028468, 0x3fb785e9,0xf9028468,0xbfb785e9,x16, 32*SIGALIGN, x17,x1, x14)

inst_28:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x785e9f9028468 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x785e9f9028468 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb785e9f9028468; valaddr_reg:x16; op2:x26; op2val:0xbfb785e9f9028468
offset:38*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf9028468, 0x3fb785e9,0xf9028468,0xbfb785e9,x16, 34*SIGALIGN, x17,x1, x14)

inst_29:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x785e9f9028468 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x785e9f9028468 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb785e9f9028468; valaddr_reg:x16; op2:x26; op2val:0xbfb785e9f9028468
offset:40*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xf9028468, 0x3fb785e9,0xf9028468,0xbfb785e9,x16, 36*SIGALIGN, x17,x1, x14)

inst_30:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6fb2f3370e67c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6fb2f3370e67c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe6fb2f3370e67c; valaddr_reg:x16; op2:x26; op2val:0xbfe6fb2f3370e67c
offset:42*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x3370e67c, 0x3fe6fb2f,0x3370e67c,0xbfe6fb2f,x16, 38*SIGALIGN, x17,x1, x14)

inst_31:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6fb2f3370e67c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6fb2f3370e67c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe6fb2f3370e67c; valaddr_reg:x16; op2:x26; op2val:0xbfe6fb2f3370e67c
offset:44*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x3370e67c, 0x3fe6fb2f,0x3370e67c,0xbfe6fb2f,x16, 40*SIGALIGN, x17,x1, x14)

inst_32:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6fb2f3370e67c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6fb2f3370e67c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe6fb2f3370e67c; valaddr_reg:x16; op2:x26; op2val:0xbfe6fb2f3370e67c
offset:46*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x3370e67c, 0x3fe6fb2f,0x3370e67c,0xbfe6fb2f,x16, 42*SIGALIGN, x17,x1, x14)

inst_33:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6fb2f3370e67c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6fb2f3370e67c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe6fb2f3370e67c; valaddr_reg:x16; op2:x26; op2val:0xbfe6fb2f3370e67c
offset:48*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x3370e67c, 0x3fe6fb2f,0x3370e67c,0xbfe6fb2f,x16, 44*SIGALIGN, x17,x1, x14)

inst_34:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6fb2f3370e67c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6fb2f3370e67c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe6fb2f3370e67c; valaddr_reg:x16; op2:x26; op2val:0xbfe6fb2f3370e67c
offset:50*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x3370e67c, 0x3fe6fb2f,0x3370e67c,0xbfe6fb2f,x16, 46*SIGALIGN, x17,x1, x14)

inst_35:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x86ca4719ad2d4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x86ca4719ad2d4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd86ca4719ad2d4; valaddr_reg:x16; op2:x26; op2val:0xbfd86ca4719ad2d4
offset:52*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x719ad2d4, 0x3fd86ca4,0x719ad2d4,0xbfd86ca4,x16, 48*SIGALIGN, x17,x1, x14)

inst_36:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x86ca4719ad2d4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x86ca4719ad2d4 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd86ca4719ad2d4; valaddr_reg:x16; op2:x26; op2val:0xbfd86ca4719ad2d4
offset:54*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x719ad2d4, 0x3fd86ca4,0x719ad2d4,0xbfd86ca4,x16, 50*SIGALIGN, x17,x1, x14)

inst_37:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x86ca4719ad2d4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x86ca4719ad2d4 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd86ca4719ad2d4; valaddr_reg:x16; op2:x26; op2val:0xbfd86ca4719ad2d4
offset:56*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x719ad2d4, 0x3fd86ca4,0x719ad2d4,0xbfd86ca4,x16, 52*SIGALIGN, x17,x1, x14)

inst_38:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x86ca4719ad2d4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x86ca4719ad2d4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd86ca4719ad2d4; valaddr_reg:x16; op2:x26; op2val:0xbfd86ca4719ad2d4
offset:58*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x719ad2d4, 0x3fd86ca4,0x719ad2d4,0xbfd86ca4,x16, 54*SIGALIGN, x17,x1, x14)

inst_39:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x86ca4719ad2d4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x86ca4719ad2d4 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd86ca4719ad2d4; valaddr_reg:x16; op2:x26; op2val:0xbfd86ca4719ad2d4
offset:60*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x719ad2d4, 0x3fd86ca4,0x719ad2d4,0xbfd86ca4,x16, 56*SIGALIGN, x17,x1, x14)

inst_40:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x71ade8ef53d20 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x71ade8ef53d20 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb71ade8ef53d20; valaddr_reg:x16; op2:x26; op2val:0xbfb71ade8ef53d20
offset:62*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x8ef53d20, 0x3fb71ade,0x8ef53d20,0xbfb71ade,x16, 58*SIGALIGN, x17,x1, x14)

inst_41:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x71ade8ef53d20 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x71ade8ef53d20 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb71ade8ef53d20; valaddr_reg:x16; op2:x26; op2val:0xbfb71ade8ef53d20
offset:64*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x8ef53d20, 0x3fb71ade,0x8ef53d20,0xbfb71ade,x16, 60*SIGALIGN, x17,x1, x14)

inst_42:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x71ade8ef53d20 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x71ade8ef53d20 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb71ade8ef53d20; valaddr_reg:x16; op2:x26; op2val:0xbfb71ade8ef53d20
offset:66*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x8ef53d20, 0x3fb71ade,0x8ef53d20,0xbfb71ade,x16, 62*SIGALIGN, x17,x1, x14)

inst_43:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x71ade8ef53d20 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x71ade8ef53d20 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb71ade8ef53d20; valaddr_reg:x16; op2:x26; op2val:0xbfb71ade8ef53d20
offset:68*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x8ef53d20, 0x3fb71ade,0x8ef53d20,0xbfb71ade,x16, 64*SIGALIGN, x17,x1, x14)

inst_44:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x71ade8ef53d20 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x71ade8ef53d20 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb71ade8ef53d20; valaddr_reg:x16; op2:x26; op2val:0xbfb71ade8ef53d20
offset:70*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x8ef53d20, 0x3fb71ade,0x8ef53d20,0xbfb71ade,x16, 66*SIGALIGN, x17,x1, x14)

inst_45:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x84acd365e9bf0 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x84acd365e9bf0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc84acd365e9bf0; valaddr_reg:x16; op2:x26; op2val:0xbfc84acd365e9bf0
offset:72*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x365e9bf0, 0x3fc84acd,0x365e9bf0,0xbfc84acd,x16, 68*SIGALIGN, x17,x1, x14)

inst_46:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x84acd365e9bf0 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x84acd365e9bf0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc84acd365e9bf0; valaddr_reg:x16; op2:x26; op2val:0xbfc84acd365e9bf0
offset:74*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x365e9bf0, 0x3fc84acd,0x365e9bf0,0xbfc84acd,x16, 70*SIGALIGN, x17,x1, x14)

inst_47:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x84acd365e9bf0 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x84acd365e9bf0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc84acd365e9bf0; valaddr_reg:x16; op2:x26; op2val:0xbfc84acd365e9bf0
offset:76*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x365e9bf0, 0x3fc84acd,0x365e9bf0,0xbfc84acd,x16, 72*SIGALIGN, x17,x1, x14)

inst_48:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x84acd365e9bf0 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x84acd365e9bf0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc84acd365e9bf0; valaddr_reg:x16; op2:x26; op2val:0xbfc84acd365e9bf0
offset:78*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x365e9bf0, 0x3fc84acd,0x365e9bf0,0xbfc84acd,x16, 74*SIGALIGN, x17,x1, x14)

inst_49:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x84acd365e9bf0 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x84acd365e9bf0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc84acd365e9bf0; valaddr_reg:x16; op2:x26; op2val:0xbfc84acd365e9bf0
offset:80*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x365e9bf0, 0x3fc84acd,0x365e9bf0,0xbfc84acd,x16, 76*SIGALIGN, x17,x1, x14)

inst_50:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x61345679addc9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x61345679addc9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe61345679addc9; valaddr_reg:x16; op2:x26; op2val:0xbfe61345679addc9
offset:82*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x679addc9, 0x3fe61345,0x679addc9,0xbfe61345,x16, 78*SIGALIGN, x17,x1, x14)

inst_51:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x61345679addc9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x61345679addc9 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe61345679addc9; valaddr_reg:x16; op2:x26; op2val:0xbfe61345679addc9
offset:84*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x679addc9, 0x3fe61345,0x679addc9,0xbfe61345,x16, 80*SIGALIGN, x17,x1, x14)

inst_52:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x61345679addc9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x61345679addc9 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe61345679addc9; valaddr_reg:x16; op2:x26; op2val:0xbfe61345679addc9
offset:86*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x679addc9, 0x3fe61345,0x679addc9,0xbfe61345,x16, 82*SIGALIGN, x17,x1, x14)

inst_53:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x61345679addc9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x61345679addc9 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe61345679addc9; valaddr_reg:x16; op2:x26; op2val:0xbfe61345679addc9
offset:88*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x679addc9, 0x3fe61345,0x679addc9,0xbfe61345,x16, 84*SIGALIGN, x17,x1, x14)

inst_54:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x61345679addc9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x61345679addc9 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe61345679addc9; valaddr_reg:x16; op2:x26; op2val:0xbfe61345679addc9
offset:90*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x679addc9, 0x3fe61345,0x679addc9,0xbfe61345,x16, 86*SIGALIGN, x17,x1, x14)

inst_55:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x9e5bbe4c8eb20 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x9e5bbe4c8eb20 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb9e5bbe4c8eb20; valaddr_reg:x16; op2:x26; op2val:0xbfb9e5bbe4c8eb20
offset:92*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe4c8eb20, 0x3fb9e5bb,0xe4c8eb20,0xbfb9e5bb,x16, 88*SIGALIGN, x17,x1, x14)

inst_56:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x9e5bbe4c8eb20 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x9e5bbe4c8eb20 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb9e5bbe4c8eb20; valaddr_reg:x16; op2:x26; op2val:0xbfb9e5bbe4c8eb20
offset:94*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xe4c8eb20, 0x3fb9e5bb,0xe4c8eb20,0xbfb9e5bb,x16, 90*SIGALIGN, x17,x1, x14)

inst_57:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x9e5bbe4c8eb20 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x9e5bbe4c8eb20 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb9e5bbe4c8eb20; valaddr_reg:x16; op2:x26; op2val:0xbfb9e5bbe4c8eb20
offset:96*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xe4c8eb20, 0x3fb9e5bb,0xe4c8eb20,0xbfb9e5bb,x16, 92*SIGALIGN, x17,x1, x14)

inst_58:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x9e5bbe4c8eb20 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x9e5bbe4c8eb20 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb9e5bbe4c8eb20; valaddr_reg:x16; op2:x26; op2val:0xbfb9e5bbe4c8eb20
offset:98*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe4c8eb20, 0x3fb9e5bb,0xe4c8eb20,0xbfb9e5bb,x16, 94*SIGALIGN, x17,x1, x14)

inst_59:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x9e5bbe4c8eb20 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x9e5bbe4c8eb20 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb9e5bbe4c8eb20; valaddr_reg:x16; op2:x26; op2val:0xbfb9e5bbe4c8eb20
offset:100*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xe4c8eb20, 0x3fb9e5bb,0xe4c8eb20,0xbfb9e5bb,x16, 96*SIGALIGN, x17,x1, x14)

inst_60:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0e434f5c2c034 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0e434f5c2c034 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0e434f5c2c034; valaddr_reg:x16; op2:x26; op2val:0xbfe0e434f5c2c034
offset:102*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf5c2c034, 0x3fe0e434,0xf5c2c034,0xbfe0e434,x16, 98*SIGALIGN, x17,x1, x14)

inst_61:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0e434f5c2c034 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0e434f5c2c034 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0e434f5c2c034; valaddr_reg:x16; op2:x26; op2val:0xbfe0e434f5c2c034
offset:104*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xf5c2c034, 0x3fe0e434,0xf5c2c034,0xbfe0e434,x16, 100*SIGALIGN, x17,x1, x14)

inst_62:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0e434f5c2c034 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0e434f5c2c034 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0e434f5c2c034; valaddr_reg:x16; op2:x26; op2val:0xbfe0e434f5c2c034
offset:106*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xf5c2c034, 0x3fe0e434,0xf5c2c034,0xbfe0e434,x16, 102*SIGALIGN, x17,x1, x14)

inst_63:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0e434f5c2c034 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0e434f5c2c034 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0e434f5c2c034; valaddr_reg:x16; op2:x26; op2val:0xbfe0e434f5c2c034
offset:108*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf5c2c034, 0x3fe0e434,0xf5c2c034,0xbfe0e434,x16, 104*SIGALIGN, x17,x1, x14)

inst_64:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0e434f5c2c034 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0e434f5c2c034 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0e434f5c2c034; valaddr_reg:x16; op2:x26; op2val:0xbfe0e434f5c2c034
offset:110*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xf5c2c034, 0x3fe0e434,0xf5c2c034,0xbfe0e434,x16, 106*SIGALIGN, x17,x1, x14)

inst_65:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x21b43aabc36ef and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x21b43aabc36ef and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe21b43aabc36ef; valaddr_reg:x16; op2:x26; op2val:0xbfe21b43aabc36ef
offset:112*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xaabc36ef, 0x3fe21b43,0xaabc36ef,0xbfe21b43,x16, 108*SIGALIGN, x17,x1, x14)

inst_66:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x21b43aabc36ef and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x21b43aabc36ef and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe21b43aabc36ef; valaddr_reg:x16; op2:x26; op2val:0xbfe21b43aabc36ef
offset:114*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xaabc36ef, 0x3fe21b43,0xaabc36ef,0xbfe21b43,x16, 110*SIGALIGN, x17,x1, x14)

inst_67:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x21b43aabc36ef and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x21b43aabc36ef and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe21b43aabc36ef; valaddr_reg:x16; op2:x26; op2val:0xbfe21b43aabc36ef
offset:116*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xaabc36ef, 0x3fe21b43,0xaabc36ef,0xbfe21b43,x16, 112*SIGALIGN, x17,x1, x14)

inst_68:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x21b43aabc36ef and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x21b43aabc36ef and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe21b43aabc36ef; valaddr_reg:x16; op2:x26; op2val:0xbfe21b43aabc36ef
offset:118*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xaabc36ef, 0x3fe21b43,0xaabc36ef,0xbfe21b43,x16, 114*SIGALIGN, x17,x1, x14)

inst_69:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x21b43aabc36ef and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x21b43aabc36ef and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe21b43aabc36ef; valaddr_reg:x16; op2:x26; op2val:0xbfe21b43aabc36ef
offset:120*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xaabc36ef, 0x3fe21b43,0xaabc36ef,0xbfe21b43,x16, 116*SIGALIGN, x17,x1, x14)

inst_70:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x644e85974eb18 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x644e85974eb18 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb644e85974eb18; valaddr_reg:x16; op2:x26; op2val:0xbfb644e85974eb18
offset:122*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x5974eb18, 0x3fb644e8,0x5974eb18,0xbfb644e8,x16, 118*SIGALIGN, x17,x1, x14)

inst_71:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x644e85974eb18 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x644e85974eb18 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb644e85974eb18; valaddr_reg:x16; op2:x26; op2val:0xbfb644e85974eb18
offset:124*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x5974eb18, 0x3fb644e8,0x5974eb18,0xbfb644e8,x16, 120*SIGALIGN, x17,x1, x14)

inst_72:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x644e85974eb18 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x644e85974eb18 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb644e85974eb18; valaddr_reg:x16; op2:x26; op2val:0xbfb644e85974eb18
offset:126*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x5974eb18, 0x3fb644e8,0x5974eb18,0xbfb644e8,x16, 122*SIGALIGN, x17,x1, x14)

inst_73:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x644e85974eb18 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x644e85974eb18 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb644e85974eb18; valaddr_reg:x16; op2:x26; op2val:0xbfb644e85974eb18
offset:128*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x5974eb18, 0x3fb644e8,0x5974eb18,0xbfb644e8,x16, 124*SIGALIGN, x17,x1, x14)

inst_74:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x644e85974eb18 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x644e85974eb18 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb644e85974eb18; valaddr_reg:x16; op2:x26; op2val:0xbfb644e85974eb18
offset:130*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x5974eb18, 0x3fb644e8,0x5974eb18,0xbfb644e8,x16, 126*SIGALIGN, x17,x1, x14)

inst_75:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0bc55fe3aae98 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0bc55fe3aae98 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0bc55fe3aae98; valaddr_reg:x16; op2:x26; op2val:0xbfe0bc55fe3aae98
offset:132*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xfe3aae98, 0x3fe0bc55,0xfe3aae98,0xbfe0bc55,x16, 128*SIGALIGN, x17,x1, x14)

inst_76:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0bc55fe3aae98 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0bc55fe3aae98 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0bc55fe3aae98; valaddr_reg:x16; op2:x26; op2val:0xbfe0bc55fe3aae98
offset:134*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xfe3aae98, 0x3fe0bc55,0xfe3aae98,0xbfe0bc55,x16, 130*SIGALIGN, x17,x1, x14)

inst_77:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0bc55fe3aae98 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0bc55fe3aae98 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0bc55fe3aae98; valaddr_reg:x16; op2:x26; op2val:0xbfe0bc55fe3aae98
offset:136*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xfe3aae98, 0x3fe0bc55,0xfe3aae98,0xbfe0bc55,x16, 132*SIGALIGN, x17,x1, x14)

inst_78:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0bc55fe3aae98 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0bc55fe3aae98 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0bc55fe3aae98; valaddr_reg:x16; op2:x26; op2val:0xbfe0bc55fe3aae98
offset:138*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xfe3aae98, 0x3fe0bc55,0xfe3aae98,0xbfe0bc55,x16, 134*SIGALIGN, x17,x1, x14)

inst_79:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0bc55fe3aae98 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0bc55fe3aae98 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0bc55fe3aae98; valaddr_reg:x16; op2:x26; op2val:0xbfe0bc55fe3aae98
offset:140*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xfe3aae98, 0x3fe0bc55,0xfe3aae98,0xbfe0bc55,x16, 136*SIGALIGN, x17,x1, x14)

inst_80:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7aa0c07c039c8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7aa0c07c039c8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe7aa0c07c039c8; valaddr_reg:x16; op2:x26; op2val:0xbfe7aa0c07c039c8
offset:142*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x07c039c8, 0x3fe7aa0c,0x07c039c8,0xbfe7aa0c,x16, 138*SIGALIGN, x17,x1, x14)

inst_81:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7aa0c07c039c8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7aa0c07c039c8 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe7aa0c07c039c8; valaddr_reg:x16; op2:x26; op2val:0xbfe7aa0c07c039c8
offset:144*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x07c039c8, 0x3fe7aa0c,0x07c039c8,0xbfe7aa0c,x16, 140*SIGALIGN, x17,x1, x14)

inst_82:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7aa0c07c039c8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7aa0c07c039c8 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe7aa0c07c039c8; valaddr_reg:x16; op2:x26; op2val:0xbfe7aa0c07c039c8
offset:146*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x07c039c8, 0x3fe7aa0c,0x07c039c8,0xbfe7aa0c,x16, 142*SIGALIGN, x17,x1, x14)

inst_83:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7aa0c07c039c8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7aa0c07c039c8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe7aa0c07c039c8; valaddr_reg:x16; op2:x26; op2val:0xbfe7aa0c07c039c8
offset:148*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x07c039c8, 0x3fe7aa0c,0x07c039c8,0xbfe7aa0c,x16, 144*SIGALIGN, x17,x1, x14)

inst_84:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7aa0c07c039c8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7aa0c07c039c8 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe7aa0c07c039c8; valaddr_reg:x16; op2:x26; op2val:0xbfe7aa0c07c039c8
offset:150*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x07c039c8, 0x3fe7aa0c,0x07c039c8,0xbfe7aa0c,x16, 146*SIGALIGN, x17,x1, x14)

inst_85:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xce21c50ac0b16 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xce21c50ac0b16 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdce21c50ac0b16; valaddr_reg:x16; op2:x26; op2val:0xbfdce21c50ac0b16
offset:152*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x50ac0b16, 0x3fdce21c,0x50ac0b16,0xbfdce21c,x16, 148*SIGALIGN, x17,x1, x14)

inst_86:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xce21c50ac0b16 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xce21c50ac0b16 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdce21c50ac0b16; valaddr_reg:x16; op2:x26; op2val:0xbfdce21c50ac0b16
offset:154*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x50ac0b16, 0x3fdce21c,0x50ac0b16,0xbfdce21c,x16, 150*SIGALIGN, x17,x1, x14)

inst_87:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xce21c50ac0b16 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xce21c50ac0b16 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdce21c50ac0b16; valaddr_reg:x16; op2:x26; op2val:0xbfdce21c50ac0b16
offset:156*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x50ac0b16, 0x3fdce21c,0x50ac0b16,0xbfdce21c,x16, 152*SIGALIGN, x17,x1, x14)

inst_88:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xce21c50ac0b16 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xce21c50ac0b16 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdce21c50ac0b16; valaddr_reg:x16; op2:x26; op2val:0xbfdce21c50ac0b16
offset:158*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x50ac0b16, 0x3fdce21c,0x50ac0b16,0xbfdce21c,x16, 154*SIGALIGN, x17,x1, x14)

inst_89:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xce21c50ac0b16 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xce21c50ac0b16 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdce21c50ac0b16; valaddr_reg:x16; op2:x26; op2val:0xbfdce21c50ac0b16
offset:160*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x50ac0b16, 0x3fdce21c,0x50ac0b16,0xbfdce21c,x16, 156*SIGALIGN, x17,x1, x14)

inst_90:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1f05bc1477e42 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x1f05bc1477e42 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd1f05bc1477e42; valaddr_reg:x16; op2:x26; op2val:0xbfd1f05bc1477e42
offset:162*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xc1477e42, 0x3fd1f05b,0xc1477e42,0xbfd1f05b,x16, 158*SIGALIGN, x17,x1, x14)

inst_91:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1f05bc1477e42 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x1f05bc1477e42 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd1f05bc1477e42; valaddr_reg:x16; op2:x26; op2val:0xbfd1f05bc1477e42
offset:164*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xc1477e42, 0x3fd1f05b,0xc1477e42,0xbfd1f05b,x16, 160*SIGALIGN, x17,x1, x14)

inst_92:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1f05bc1477e42 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x1f05bc1477e42 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd1f05bc1477e42; valaddr_reg:x16; op2:x26; op2val:0xbfd1f05bc1477e42
offset:166*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xc1477e42, 0x3fd1f05b,0xc1477e42,0xbfd1f05b,x16, 162*SIGALIGN, x17,x1, x14)

inst_93:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1f05bc1477e42 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x1f05bc1477e42 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd1f05bc1477e42; valaddr_reg:x16; op2:x26; op2val:0xbfd1f05bc1477e42
offset:168*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xc1477e42, 0x3fd1f05b,0xc1477e42,0xbfd1f05b,x16, 164*SIGALIGN, x17,x1, x14)

inst_94:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1f05bc1477e42 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x1f05bc1477e42 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd1f05bc1477e42; valaddr_reg:x16; op2:x26; op2val:0xbfd1f05bc1477e42
offset:170*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xc1477e42, 0x3fd1f05b,0xc1477e42,0xbfd1f05b,x16, 166*SIGALIGN, x17,x1, x14)

inst_95:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x66b7ad37071c4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x66b7ad37071c4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc66b7ad37071c4; valaddr_reg:x16; op2:x26; op2val:0xbfc66b7ad37071c4
offset:172*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xd37071c4, 0x3fc66b7a,0xd37071c4,0xbfc66b7a,x16, 168*SIGALIGN, x17,x1, x14)

inst_96:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x66b7ad37071c4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x66b7ad37071c4 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc66b7ad37071c4; valaddr_reg:x16; op2:x26; op2val:0xbfc66b7ad37071c4
offset:174*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xd37071c4, 0x3fc66b7a,0xd37071c4,0xbfc66b7a,x16, 170*SIGALIGN, x17,x1, x14)

inst_97:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x66b7ad37071c4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x66b7ad37071c4 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc66b7ad37071c4; valaddr_reg:x16; op2:x26; op2val:0xbfc66b7ad37071c4
offset:176*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xd37071c4, 0x3fc66b7a,0xd37071c4,0xbfc66b7a,x16, 172*SIGALIGN, x17,x1, x14)

inst_98:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x66b7ad37071c4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x66b7ad37071c4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc66b7ad37071c4; valaddr_reg:x16; op2:x26; op2val:0xbfc66b7ad37071c4
offset:178*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd37071c4, 0x3fc66b7a,0xd37071c4,0xbfc66b7a,x16, 174*SIGALIGN, x17,x1, x14)

inst_99:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x66b7ad37071c4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x66b7ad37071c4 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc66b7ad37071c4; valaddr_reg:x16; op2:x26; op2val:0xbfc66b7ad37071c4
offset:180*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xd37071c4, 0x3fc66b7a,0xd37071c4,0xbfc66b7a,x16, 176*SIGALIGN, x17,x1, x14)

inst_100:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xff6a3558d6ada and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xff6a3558d6ada and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feff6a3558d6ada; valaddr_reg:x16; op2:x26; op2val:0xbfeff6a3558d6ada
offset:182*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x558d6ada, 0x3feff6a3,0x558d6ada,0xbfeff6a3,x16, 178*SIGALIGN, x17,x1, x14)

inst_101:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xff6a3558d6ada and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xff6a3558d6ada and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feff6a3558d6ada; valaddr_reg:x16; op2:x26; op2val:0xbfeff6a3558d6ada
offset:184*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x558d6ada, 0x3feff6a3,0x558d6ada,0xbfeff6a3,x16, 180*SIGALIGN, x17,x1, x14)

inst_102:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xff6a3558d6ada and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xff6a3558d6ada and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feff6a3558d6ada; valaddr_reg:x16; op2:x26; op2val:0xbfeff6a3558d6ada
offset:186*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x558d6ada, 0x3feff6a3,0x558d6ada,0xbfeff6a3,x16, 182*SIGALIGN, x17,x1, x14)

inst_103:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xff6a3558d6ada and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xff6a3558d6ada and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feff6a3558d6ada; valaddr_reg:x16; op2:x26; op2val:0xbfeff6a3558d6ada
offset:188*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x558d6ada, 0x3feff6a3,0x558d6ada,0xbfeff6a3,x16, 184*SIGALIGN, x17,x1, x14)

inst_104:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xff6a3558d6ada and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xff6a3558d6ada and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feff6a3558d6ada; valaddr_reg:x16; op2:x26; op2val:0xbfeff6a3558d6ada
offset:190*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x558d6ada, 0x3feff6a3,0x558d6ada,0xbfeff6a3,x16, 186*SIGALIGN, x17,x1, x14)

inst_105:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x0f2646aab7a80 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x0f2646aab7a80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc0f2646aab7a80; valaddr_reg:x16; op2:x26; op2val:0xbfc0f2646aab7a80
offset:192*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x6aab7a80, 0x3fc0f264,0x6aab7a80,0xbfc0f264,x16, 188*SIGALIGN, x17,x1, x14)

inst_106:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x0f2646aab7a80 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x0f2646aab7a80 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc0f2646aab7a80; valaddr_reg:x16; op2:x26; op2val:0xbfc0f2646aab7a80
offset:194*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x6aab7a80, 0x3fc0f264,0x6aab7a80,0xbfc0f264,x16, 190*SIGALIGN, x17,x1, x14)

inst_107:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x0f2646aab7a80 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x0f2646aab7a80 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc0f2646aab7a80; valaddr_reg:x16; op2:x26; op2val:0xbfc0f2646aab7a80
offset:196*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x6aab7a80, 0x3fc0f264,0x6aab7a80,0xbfc0f264,x16, 192*SIGALIGN, x17,x1, x14)

inst_108:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x0f2646aab7a80 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x0f2646aab7a80 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc0f2646aab7a80; valaddr_reg:x16; op2:x26; op2val:0xbfc0f2646aab7a80
offset:198*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x6aab7a80, 0x3fc0f264,0x6aab7a80,0xbfc0f264,x16, 194*SIGALIGN, x17,x1, x14)

inst_109:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x0f2646aab7a80 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x0f2646aab7a80 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc0f2646aab7a80; valaddr_reg:x16; op2:x26; op2val:0xbfc0f2646aab7a80
offset:200*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x6aab7a80, 0x3fc0f264,0x6aab7a80,0xbfc0f264,x16, 196*SIGALIGN, x17,x1, x14)

inst_110:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x597ed052f7855 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x597ed052f7855 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe597ed052f7855; valaddr_reg:x16; op2:x26; op2val:0xbfe597ed052f7855
offset:202*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x052f7855, 0x3fe597ed,0x052f7855,0xbfe597ed,x16, 198*SIGALIGN, x17,x1, x14)

inst_111:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x597ed052f7855 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x597ed052f7855 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe597ed052f7855; valaddr_reg:x16; op2:x26; op2val:0xbfe597ed052f7855
offset:204*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x052f7855, 0x3fe597ed,0x052f7855,0xbfe597ed,x16, 200*SIGALIGN, x17,x1, x14)

inst_112:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x597ed052f7855 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x597ed052f7855 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe597ed052f7855; valaddr_reg:x16; op2:x26; op2val:0xbfe597ed052f7855
offset:206*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x052f7855, 0x3fe597ed,0x052f7855,0xbfe597ed,x16, 202*SIGALIGN, x17,x1, x14)

inst_113:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x597ed052f7855 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x597ed052f7855 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe597ed052f7855; valaddr_reg:x16; op2:x26; op2val:0xbfe597ed052f7855
offset:208*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x052f7855, 0x3fe597ed,0x052f7855,0xbfe597ed,x16, 204*SIGALIGN, x17,x1, x14)

inst_114:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x597ed052f7855 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x597ed052f7855 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe597ed052f7855; valaddr_reg:x16; op2:x26; op2val:0xbfe597ed052f7855
offset:210*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x052f7855, 0x3fe597ed,0x052f7855,0xbfe597ed,x16, 206*SIGALIGN, x17,x1, x14)

inst_115:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9e2c74454f8fb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9e2c74454f8fb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe9e2c74454f8fb; valaddr_reg:x16; op2:x26; op2val:0xbfe9e2c74454f8fb
offset:212*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x4454f8fb, 0x3fe9e2c7,0x4454f8fb,0xbfe9e2c7,x16, 208*SIGALIGN, x17,x1, x14)

inst_116:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9e2c74454f8fb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9e2c74454f8fb and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe9e2c74454f8fb; valaddr_reg:x16; op2:x26; op2val:0xbfe9e2c74454f8fb
offset:214*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x4454f8fb, 0x3fe9e2c7,0x4454f8fb,0xbfe9e2c7,x16, 210*SIGALIGN, x17,x1, x14)

inst_117:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9e2c74454f8fb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9e2c74454f8fb and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe9e2c74454f8fb; valaddr_reg:x16; op2:x26; op2val:0xbfe9e2c74454f8fb
offset:216*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x4454f8fb, 0x3fe9e2c7,0x4454f8fb,0xbfe9e2c7,x16, 212*SIGALIGN, x17,x1, x14)

inst_118:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9e2c74454f8fb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9e2c74454f8fb and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe9e2c74454f8fb; valaddr_reg:x16; op2:x26; op2val:0xbfe9e2c74454f8fb
offset:218*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x4454f8fb, 0x3fe9e2c7,0x4454f8fb,0xbfe9e2c7,x16, 214*SIGALIGN, x17,x1, x14)

inst_119:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9e2c74454f8fb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9e2c74454f8fb and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe9e2c74454f8fb; valaddr_reg:x16; op2:x26; op2val:0xbfe9e2c74454f8fb
offset:220*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x4454f8fb, 0x3fe9e2c7,0x4454f8fb,0xbfe9e2c7,x16, 216*SIGALIGN, x17,x1, x14)

inst_120:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x85d4220c95feb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x85d4220c95feb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe85d4220c95feb; valaddr_reg:x16; op2:x26; op2val:0xbfe85d4220c95feb
offset:222*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x20c95feb, 0x3fe85d42,0x20c95feb,0xbfe85d42,x16, 218*SIGALIGN, x17,x1, x14)

inst_121:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x85d4220c95feb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x85d4220c95feb and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe85d4220c95feb; valaddr_reg:x16; op2:x26; op2val:0xbfe85d4220c95feb
offset:224*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x20c95feb, 0x3fe85d42,0x20c95feb,0xbfe85d42,x16, 220*SIGALIGN, x17,x1, x14)

inst_122:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x85d4220c95feb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x85d4220c95feb and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe85d4220c95feb; valaddr_reg:x16; op2:x26; op2val:0xbfe85d4220c95feb
offset:226*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x20c95feb, 0x3fe85d42,0x20c95feb,0xbfe85d42,x16, 222*SIGALIGN, x17,x1, x14)

inst_123:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x85d4220c95feb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x85d4220c95feb and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe85d4220c95feb; valaddr_reg:x16; op2:x26; op2val:0xbfe85d4220c95feb
offset:228*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x20c95feb, 0x3fe85d42,0x20c95feb,0xbfe85d42,x16, 224*SIGALIGN, x17,x1, x14)

inst_124:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x85d4220c95feb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x85d4220c95feb and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe85d4220c95feb; valaddr_reg:x16; op2:x26; op2val:0xbfe85d4220c95feb
offset:230*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x20c95feb, 0x3fe85d42,0x20c95feb,0xbfe85d42,x16, 226*SIGALIGN, x17,x1, x14)

inst_125:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9316a474fe9c4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x9316a474fe9c4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc9316a474fe9c4; valaddr_reg:x16; op2:x26; op2val:0xbfc9316a474fe9c4
offset:232*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x474fe9c4, 0x3fc9316a,0x474fe9c4,0xbfc9316a,x16, 228*SIGALIGN, x17,x1, x14)

inst_126:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9316a474fe9c4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x9316a474fe9c4 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc9316a474fe9c4; valaddr_reg:x16; op2:x26; op2val:0xbfc9316a474fe9c4
offset:234*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x474fe9c4, 0x3fc9316a,0x474fe9c4,0xbfc9316a,x16, 230*SIGALIGN, x17,x1, x14)

inst_127:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9316a474fe9c4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x9316a474fe9c4 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc9316a474fe9c4; valaddr_reg:x16; op2:x26; op2val:0xbfc9316a474fe9c4
offset:236*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x474fe9c4, 0x3fc9316a,0x474fe9c4,0xbfc9316a,x16, 232*SIGALIGN, x17,x1, x14)

inst_128:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9316a474fe9c4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x9316a474fe9c4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc9316a474fe9c4; valaddr_reg:x16; op2:x26; op2val:0xbfc9316a474fe9c4
offset:238*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x474fe9c4, 0x3fc9316a,0x474fe9c4,0xbfc9316a,x16, 234*SIGALIGN, x17,x1, x14)

inst_129:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9316a474fe9c4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x9316a474fe9c4 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc9316a474fe9c4; valaddr_reg:x16; op2:x26; op2val:0xbfc9316a474fe9c4
offset:240*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x474fe9c4, 0x3fc9316a,0x474fe9c4,0xbfc9316a,x16, 236*SIGALIGN, x17,x1, x14)

inst_130:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd6cfce406f0ee and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd6cfce406f0ee and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fed6cfce406f0ee; valaddr_reg:x16; op2:x26; op2val:0xbfed6cfce406f0ee
offset:242*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe406f0ee, 0x3fed6cfc,0xe406f0ee,0xbfed6cfc,x16, 238*SIGALIGN, x17,x1, x14)

inst_131:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd6cfce406f0ee and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd6cfce406f0ee and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fed6cfce406f0ee; valaddr_reg:x16; op2:x26; op2val:0xbfed6cfce406f0ee
offset:244*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xe406f0ee, 0x3fed6cfc,0xe406f0ee,0xbfed6cfc,x16, 240*SIGALIGN, x17,x1, x14)

inst_132:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd6cfce406f0ee and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd6cfce406f0ee and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fed6cfce406f0ee; valaddr_reg:x16; op2:x26; op2val:0xbfed6cfce406f0ee
offset:246*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xe406f0ee, 0x3fed6cfc,0xe406f0ee,0xbfed6cfc,x16, 242*SIGALIGN, x17,x1, x14)

inst_133:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd6cfce406f0ee and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd6cfce406f0ee and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fed6cfce406f0ee; valaddr_reg:x16; op2:x26; op2val:0xbfed6cfce406f0ee
offset:248*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe406f0ee, 0x3fed6cfc,0xe406f0ee,0xbfed6cfc,x16, 244*SIGALIGN, x17,x1, x14)

inst_134:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd6cfce406f0ee and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd6cfce406f0ee and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fed6cfce406f0ee; valaddr_reg:x16; op2:x26; op2val:0xbfed6cfce406f0ee
offset:250*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xe406f0ee, 0x3fed6cfc,0xe406f0ee,0xbfed6cfc,x16, 246*SIGALIGN, x17,x1, x14)

inst_135:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf7de688042774 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf7de688042774 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdf7de688042774; valaddr_reg:x16; op2:x26; op2val:0xbfdf7de688042774
offset:252*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x88042774, 0x3fdf7de6,0x88042774,0xbfdf7de6,x16, 248*SIGALIGN, x17,x1, x14)

inst_136:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf7de688042774 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf7de688042774 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdf7de688042774; valaddr_reg:x16; op2:x26; op2val:0xbfdf7de688042774
offset:254*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x88042774, 0x3fdf7de6,0x88042774,0xbfdf7de6,x16, 250*SIGALIGN, x17,x1, x14)

inst_137:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf7de688042774 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf7de688042774 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdf7de688042774; valaddr_reg:x16; op2:x26; op2val:0xbfdf7de688042774
offset:256*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x88042774, 0x3fdf7de6,0x88042774,0xbfdf7de6,x16, 252*SIGALIGN, x17,x1, x14)

inst_138:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf7de688042774 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf7de688042774 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdf7de688042774; valaddr_reg:x16; op2:x26; op2val:0xbfdf7de688042774
offset:258*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x88042774, 0x3fdf7de6,0x88042774,0xbfdf7de6,x16, 254*SIGALIGN, x17,x1, x14)

inst_139:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf7de688042774 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf7de688042774 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdf7de688042774; valaddr_reg:x16; op2:x26; op2val:0xbfdf7de688042774
offset:260*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x88042774, 0x3fdf7de6,0x88042774,0xbfdf7de6,x16, 256*SIGALIGN, x17,x1, x14)

inst_140:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc82991ecb5189 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc82991ecb5189 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fec82991ecb5189; valaddr_reg:x16; op2:x26; op2val:0xbfec82991ecb5189
offset:262*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x1ecb5189, 0x3fec8299,0x1ecb5189,0xbfec8299,x16, 258*SIGALIGN, x17,x1, x14)

inst_141:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc82991ecb5189 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc82991ecb5189 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fec82991ecb5189; valaddr_reg:x16; op2:x26; op2val:0xbfec82991ecb5189
offset:264*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x1ecb5189, 0x3fec8299,0x1ecb5189,0xbfec8299,x16, 260*SIGALIGN, x17,x1, x14)

inst_142:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc82991ecb5189 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc82991ecb5189 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fec82991ecb5189; valaddr_reg:x16; op2:x26; op2val:0xbfec82991ecb5189
offset:266*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x1ecb5189, 0x3fec8299,0x1ecb5189,0xbfec8299,x16, 262*SIGALIGN, x17,x1, x14)

inst_143:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc82991ecb5189 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc82991ecb5189 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fec82991ecb5189; valaddr_reg:x16; op2:x26; op2val:0xbfec82991ecb5189
offset:268*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x1ecb5189, 0x3fec8299,0x1ecb5189,0xbfec8299,x16, 264*SIGALIGN, x17,x1, x14)

inst_144:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc82991ecb5189 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc82991ecb5189 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fec82991ecb5189; valaddr_reg:x16; op2:x26; op2val:0xbfec82991ecb5189
offset:270*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x1ecb5189, 0x3fec8299,0x1ecb5189,0xbfec8299,x16, 266*SIGALIGN, x17,x1, x14)

inst_145:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2c7b2a700633e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2c7b2a700633e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd2c7b2a700633e; valaddr_reg:x16; op2:x26; op2val:0xbfd2c7b2a700633e
offset:272*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xa700633e, 0x3fd2c7b2,0xa700633e,0xbfd2c7b2,x16, 268*SIGALIGN, x17,x1, x14)

inst_146:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2c7b2a700633e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2c7b2a700633e and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd2c7b2a700633e; valaddr_reg:x16; op2:x26; op2val:0xbfd2c7b2a700633e
offset:274*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xa700633e, 0x3fd2c7b2,0xa700633e,0xbfd2c7b2,x16, 270*SIGALIGN, x17,x1, x14)

inst_147:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2c7b2a700633e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2c7b2a700633e and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd2c7b2a700633e; valaddr_reg:x16; op2:x26; op2val:0xbfd2c7b2a700633e
offset:276*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xa700633e, 0x3fd2c7b2,0xa700633e,0xbfd2c7b2,x16, 272*SIGALIGN, x17,x1, x14)

inst_148:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2c7b2a700633e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2c7b2a700633e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd2c7b2a700633e; valaddr_reg:x16; op2:x26; op2val:0xbfd2c7b2a700633e
offset:278*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xa700633e, 0x3fd2c7b2,0xa700633e,0xbfd2c7b2,x16, 274*SIGALIGN, x17,x1, x14)

inst_149:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2c7b2a700633e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2c7b2a700633e and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd2c7b2a700633e; valaddr_reg:x16; op2:x26; op2val:0xbfd2c7b2a700633e
offset:280*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xa700633e, 0x3fd2c7b2,0xa700633e,0xbfd2c7b2,x16, 276*SIGALIGN, x17,x1, x14)

inst_150:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x7bf8cc13e7714 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x7bf8cc13e7714 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc7bf8cc13e7714; valaddr_reg:x16; op2:x26; op2val:0xbfc7bf8cc13e7714
offset:282*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xc13e7714, 0x3fc7bf8c,0xc13e7714,0xbfc7bf8c,x16, 278*SIGALIGN, x17,x1, x14)

inst_151:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x7bf8cc13e7714 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x7bf8cc13e7714 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc7bf8cc13e7714; valaddr_reg:x16; op2:x26; op2val:0xbfc7bf8cc13e7714
offset:284*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xc13e7714, 0x3fc7bf8c,0xc13e7714,0xbfc7bf8c,x16, 280*SIGALIGN, x17,x1, x14)

inst_152:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x7bf8cc13e7714 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x7bf8cc13e7714 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc7bf8cc13e7714; valaddr_reg:x16; op2:x26; op2val:0xbfc7bf8cc13e7714
offset:286*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xc13e7714, 0x3fc7bf8c,0xc13e7714,0xbfc7bf8c,x16, 282*SIGALIGN, x17,x1, x14)

inst_153:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x7bf8cc13e7714 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x7bf8cc13e7714 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc7bf8cc13e7714; valaddr_reg:x16; op2:x26; op2val:0xbfc7bf8cc13e7714
offset:288*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xc13e7714, 0x3fc7bf8c,0xc13e7714,0xbfc7bf8c,x16, 284*SIGALIGN, x17,x1, x14)

inst_154:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x7bf8cc13e7714 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x7bf8cc13e7714 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc7bf8cc13e7714; valaddr_reg:x16; op2:x26; op2val:0xbfc7bf8cc13e7714
offset:290*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xc13e7714, 0x3fc7bf8c,0xc13e7714,0xbfc7bf8c,x16, 286*SIGALIGN, x17,x1, x14)

inst_155:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x283c10cd62fb0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x283c10cd62fb0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fa283c10cd62fb0; valaddr_reg:x16; op2:x26; op2val:0xbfa283c10cd62fb0
offset:292*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0cd62fb0, 0x3fa283c1,0x0cd62fb0,0xbfa283c1,x16, 288*SIGALIGN, x17,x1, x14)

inst_156:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x283c10cd62fb0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x283c10cd62fb0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fa283c10cd62fb0; valaddr_reg:x16; op2:x26; op2val:0xbfa283c10cd62fb0
offset:294*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x0cd62fb0, 0x3fa283c1,0x0cd62fb0,0xbfa283c1,x16, 290*SIGALIGN, x17,x1, x14)

inst_157:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x283c10cd62fb0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x283c10cd62fb0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fa283c10cd62fb0; valaddr_reg:x16; op2:x26; op2val:0xbfa283c10cd62fb0
offset:296*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x0cd62fb0, 0x3fa283c1,0x0cd62fb0,0xbfa283c1,x16, 292*SIGALIGN, x17,x1, x14)

inst_158:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x283c10cd62fb0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x283c10cd62fb0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fa283c10cd62fb0; valaddr_reg:x16; op2:x26; op2val:0xbfa283c10cd62fb0
offset:298*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x0cd62fb0, 0x3fa283c1,0x0cd62fb0,0xbfa283c1,x16, 294*SIGALIGN, x17,x1, x14)

inst_159:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x283c10cd62fb0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x283c10cd62fb0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fa283c10cd62fb0; valaddr_reg:x16; op2:x26; op2val:0xbfa283c10cd62fb0
offset:300*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x0cd62fb0, 0x3fa283c1,0x0cd62fb0,0xbfa283c1,x16, 296*SIGALIGN, x17,x1, x14)

inst_160:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa647b65b2e0c0 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xa647b65b2e0c0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fda647b65b2e0c0; valaddr_reg:x16; op2:x26; op2val:0xbfda647b65b2e0c0
offset:302*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x65b2e0c0, 0x3fda647b,0x65b2e0c0,0xbfda647b,x16, 298*SIGALIGN, x17,x1, x14)

inst_161:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa647b65b2e0c0 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xa647b65b2e0c0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fda647b65b2e0c0; valaddr_reg:x16; op2:x26; op2val:0xbfda647b65b2e0c0
offset:304*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x65b2e0c0, 0x3fda647b,0x65b2e0c0,0xbfda647b,x16, 300*SIGALIGN, x17,x1, x14)

inst_162:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa647b65b2e0c0 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xa647b65b2e0c0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fda647b65b2e0c0; valaddr_reg:x16; op2:x26; op2val:0xbfda647b65b2e0c0
offset:306*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x65b2e0c0, 0x3fda647b,0x65b2e0c0,0xbfda647b,x16, 302*SIGALIGN, x17,x1, x14)

inst_163:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa647b65b2e0c0 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xa647b65b2e0c0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fda647b65b2e0c0; valaddr_reg:x16; op2:x26; op2val:0xbfda647b65b2e0c0
offset:308*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x65b2e0c0, 0x3fda647b,0x65b2e0c0,0xbfda647b,x16, 304*SIGALIGN, x17,x1, x14)

inst_164:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa647b65b2e0c0 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xa647b65b2e0c0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fda647b65b2e0c0; valaddr_reg:x16; op2:x26; op2val:0xbfda647b65b2e0c0
offset:310*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x65b2e0c0, 0x3fda647b,0x65b2e0c0,0xbfda647b,x16, 306*SIGALIGN, x17,x1, x14)

inst_165:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9d66fa19dd440 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x9d66fa19dd440 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd9d66fa19dd440; valaddr_reg:x16; op2:x26; op2val:0xbfd9d66fa19dd440
offset:312*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xa19dd440, 0x3fd9d66f,0xa19dd440,0xbfd9d66f,x16, 308*SIGALIGN, x17,x1, x14)

inst_166:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9d66fa19dd440 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x9d66fa19dd440 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd9d66fa19dd440; valaddr_reg:x16; op2:x26; op2val:0xbfd9d66fa19dd440
offset:314*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xa19dd440, 0x3fd9d66f,0xa19dd440,0xbfd9d66f,x16, 310*SIGALIGN, x17,x1, x14)

inst_167:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9d66fa19dd440 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x9d66fa19dd440 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd9d66fa19dd440; valaddr_reg:x16; op2:x26; op2val:0xbfd9d66fa19dd440
offset:316*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xa19dd440, 0x3fd9d66f,0xa19dd440,0xbfd9d66f,x16, 312*SIGALIGN, x17,x1, x14)

inst_168:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9d66fa19dd440 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x9d66fa19dd440 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd9d66fa19dd440; valaddr_reg:x16; op2:x26; op2val:0xbfd9d66fa19dd440
offset:318*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xa19dd440, 0x3fd9d66f,0xa19dd440,0xbfd9d66f,x16, 314*SIGALIGN, x17,x1, x14)

inst_169:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9d66fa19dd440 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x9d66fa19dd440 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd9d66fa19dd440; valaddr_reg:x16; op2:x26; op2val:0xbfd9d66fa19dd440
offset:320*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xa19dd440, 0x3fd9d66f,0xa19dd440,0xbfd9d66f,x16, 316*SIGALIGN, x17,x1, x14)

inst_170:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb2888a6102a20 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb2888a6102a20 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdb2888a6102a20; valaddr_reg:x16; op2:x26; op2val:0xbfdb2888a6102a20
offset:322*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xa6102a20, 0x3fdb2888,0xa6102a20,0xbfdb2888,x16, 318*SIGALIGN, x17,x1, x14)

inst_171:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb2888a6102a20 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb2888a6102a20 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdb2888a6102a20; valaddr_reg:x16; op2:x26; op2val:0xbfdb2888a6102a20
offset:324*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xa6102a20, 0x3fdb2888,0xa6102a20,0xbfdb2888,x16, 320*SIGALIGN, x17,x1, x14)

inst_172:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb2888a6102a20 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb2888a6102a20 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdb2888a6102a20; valaddr_reg:x16; op2:x26; op2val:0xbfdb2888a6102a20
offset:326*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xa6102a20, 0x3fdb2888,0xa6102a20,0xbfdb2888,x16, 322*SIGALIGN, x17,x1, x14)

inst_173:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb2888a6102a20 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb2888a6102a20 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdb2888a6102a20; valaddr_reg:x16; op2:x26; op2val:0xbfdb2888a6102a20
offset:328*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xa6102a20, 0x3fdb2888,0xa6102a20,0xbfdb2888,x16, 324*SIGALIGN, x17,x1, x14)

inst_174:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb2888a6102a20 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb2888a6102a20 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdb2888a6102a20; valaddr_reg:x16; op2:x26; op2val:0xbfdb2888a6102a20
offset:330*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xa6102a20, 0x3fdb2888,0xa6102a20,0xbfdb2888,x16, 326*SIGALIGN, x17,x1, x14)

inst_175:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9f08198b6d14d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9f08198b6d14d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe9f08198b6d14d; valaddr_reg:x16; op2:x26; op2val:0xbfe9f08198b6d14d
offset:332*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x98b6d14d, 0x3fe9f081,0x98b6d14d,0xbfe9f081,x16, 328*SIGALIGN, x17,x1, x14)

inst_176:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9f08198b6d14d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9f08198b6d14d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe9f08198b6d14d; valaddr_reg:x16; op2:x26; op2val:0xbfe9f08198b6d14d
offset:334*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x98b6d14d, 0x3fe9f081,0x98b6d14d,0xbfe9f081,x16, 330*SIGALIGN, x17,x1, x14)

inst_177:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9f08198b6d14d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9f08198b6d14d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe9f08198b6d14d; valaddr_reg:x16; op2:x26; op2val:0xbfe9f08198b6d14d
offset:336*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x98b6d14d, 0x3fe9f081,0x98b6d14d,0xbfe9f081,x16, 332*SIGALIGN, x17,x1, x14)

inst_178:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9f08198b6d14d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9f08198b6d14d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe9f08198b6d14d; valaddr_reg:x16; op2:x26; op2val:0xbfe9f08198b6d14d
offset:338*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x98b6d14d, 0x3fe9f081,0x98b6d14d,0xbfe9f081,x16, 334*SIGALIGN, x17,x1, x14)

inst_179:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9f08198b6d14d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9f08198b6d14d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe9f08198b6d14d; valaddr_reg:x16; op2:x26; op2val:0xbfe9f08198b6d14d
offset:340*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x98b6d14d, 0x3fe9f081,0x98b6d14d,0xbfe9f081,x16, 336*SIGALIGN, x17,x1, x14)

inst_180:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8c85300264c54 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8c85300264c54 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd8c85300264c54; valaddr_reg:x16; op2:x26; op2val:0xbfd8c85300264c54
offset:342*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00264c54, 0x3fd8c853,0x00264c54,0xbfd8c853,x16, 338*SIGALIGN, x17,x1, x14)

inst_181:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8c85300264c54 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8c85300264c54 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd8c85300264c54; valaddr_reg:x16; op2:x26; op2val:0xbfd8c85300264c54
offset:344*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x00264c54, 0x3fd8c853,0x00264c54,0xbfd8c853,x16, 340*SIGALIGN, x17,x1, x14)

inst_182:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8c85300264c54 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8c85300264c54 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd8c85300264c54; valaddr_reg:x16; op2:x26; op2val:0xbfd8c85300264c54
offset:346*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x00264c54, 0x3fd8c853,0x00264c54,0xbfd8c853,x16, 342*SIGALIGN, x17,x1, x14)

inst_183:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8c85300264c54 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8c85300264c54 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd8c85300264c54; valaddr_reg:x16; op2:x26; op2val:0xbfd8c85300264c54
offset:348*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x00264c54, 0x3fd8c853,0x00264c54,0xbfd8c853,x16, 344*SIGALIGN, x17,x1, x14)

inst_184:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8c85300264c54 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8c85300264c54 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd8c85300264c54; valaddr_reg:x16; op2:x26; op2val:0xbfd8c85300264c54
offset:350*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x00264c54, 0x3fd8c853,0x00264c54,0xbfd8c853,x16, 346*SIGALIGN, x17,x1, x14)

inst_185:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0c04213b941b8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0c04213b941b8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0c04213b941b8; valaddr_reg:x16; op2:x26; op2val:0xbfe0c04213b941b8
offset:352*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x13b941b8, 0x3fe0c042,0x13b941b8,0xbfe0c042,x16, 348*SIGALIGN, x17,x1, x14)

inst_186:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0c04213b941b8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0c04213b941b8 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0c04213b941b8; valaddr_reg:x16; op2:x26; op2val:0xbfe0c04213b941b8
offset:354*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x13b941b8, 0x3fe0c042,0x13b941b8,0xbfe0c042,x16, 350*SIGALIGN, x17,x1, x14)

inst_187:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0c04213b941b8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0c04213b941b8 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0c04213b941b8; valaddr_reg:x16; op2:x26; op2val:0xbfe0c04213b941b8
offset:356*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x13b941b8, 0x3fe0c042,0x13b941b8,0xbfe0c042,x16, 352*SIGALIGN, x17,x1, x14)

inst_188:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0c04213b941b8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0c04213b941b8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0c04213b941b8; valaddr_reg:x16; op2:x26; op2val:0xbfe0c04213b941b8
offset:358*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x13b941b8, 0x3fe0c042,0x13b941b8,0xbfe0c042,x16, 354*SIGALIGN, x17,x1, x14)

inst_189:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0c04213b941b8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0c04213b941b8 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0c04213b941b8; valaddr_reg:x16; op2:x26; op2val:0xbfe0c04213b941b8
offset:360*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x13b941b8, 0x3fe0c042,0x13b941b8,0xbfe0c042,x16, 356*SIGALIGN, x17,x1, x14)

inst_190:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xf06d5adea99c8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xf06d5adea99c8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcf06d5adea99c8; valaddr_reg:x16; op2:x26; op2val:0xbfcf06d5adea99c8
offset:362*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xadea99c8, 0x3fcf06d5,0xadea99c8,0xbfcf06d5,x16, 358*SIGALIGN, x17,x1, x14)

inst_191:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xf06d5adea99c8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xf06d5adea99c8 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcf06d5adea99c8; valaddr_reg:x16; op2:x26; op2val:0xbfcf06d5adea99c8
offset:364*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xadea99c8, 0x3fcf06d5,0xadea99c8,0xbfcf06d5,x16, 360*SIGALIGN, x17,x1, x14)

inst_192:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xf06d5adea99c8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xf06d5adea99c8 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcf06d5adea99c8; valaddr_reg:x16; op2:x26; op2val:0xbfcf06d5adea99c8
offset:366*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xadea99c8, 0x3fcf06d5,0xadea99c8,0xbfcf06d5,x16, 362*SIGALIGN, x17,x1, x14)

inst_193:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xf06d5adea99c8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xf06d5adea99c8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcf06d5adea99c8; valaddr_reg:x16; op2:x26; op2val:0xbfcf06d5adea99c8
offset:368*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xadea99c8, 0x3fcf06d5,0xadea99c8,0xbfcf06d5,x16, 364*SIGALIGN, x17,x1, x14)

inst_194:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xf06d5adea99c8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xf06d5adea99c8 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcf06d5adea99c8; valaddr_reg:x16; op2:x26; op2val:0xbfcf06d5adea99c8
offset:370*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xadea99c8, 0x3fcf06d5,0xadea99c8,0xbfcf06d5,x16, 366*SIGALIGN, x17,x1, x14)

inst_195:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x39d4d3ec372c8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x39d4d3ec372c8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb39d4d3ec372c8; valaddr_reg:x16; op2:x26; op2val:0xbfb39d4d3ec372c8
offset:372*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x3ec372c8, 0x3fb39d4d,0x3ec372c8,0xbfb39d4d,x16, 368*SIGALIGN, x17,x1, x14)

inst_196:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x39d4d3ec372c8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x39d4d3ec372c8 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb39d4d3ec372c8; valaddr_reg:x16; op2:x26; op2val:0xbfb39d4d3ec372c8
offset:374*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x3ec372c8, 0x3fb39d4d,0x3ec372c8,0xbfb39d4d,x16, 370*SIGALIGN, x17,x1, x14)

inst_197:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x39d4d3ec372c8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x39d4d3ec372c8 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb39d4d3ec372c8; valaddr_reg:x16; op2:x26; op2val:0xbfb39d4d3ec372c8
offset:376*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x3ec372c8, 0x3fb39d4d,0x3ec372c8,0xbfb39d4d,x16, 372*SIGALIGN, x17,x1, x14)

inst_198:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x39d4d3ec372c8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x39d4d3ec372c8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb39d4d3ec372c8; valaddr_reg:x16; op2:x26; op2val:0xbfb39d4d3ec372c8
offset:378*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x3ec372c8, 0x3fb39d4d,0x3ec372c8,0xbfb39d4d,x16, 374*SIGALIGN, x17,x1, x14)

inst_199:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x39d4d3ec372c8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x39d4d3ec372c8 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb39d4d3ec372c8; valaddr_reg:x16; op2:x26; op2val:0xbfb39d4d3ec372c8
offset:380*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x3ec372c8, 0x3fb39d4d,0x3ec372c8,0xbfb39d4d,x16, 376*SIGALIGN, x17,x1, x14)

inst_200:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xa1153899f25d0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xa1153899f25d0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fba1153899f25d0; valaddr_reg:x16; op2:x26; op2val:0xbfba1153899f25d0
offset:382*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x899f25d0, 0x3fba1153,0x899f25d0,0xbfba1153,x16, 378*SIGALIGN, x17,x1, x14)

inst_201:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xa1153899f25d0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xa1153899f25d0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fba1153899f25d0; valaddr_reg:x16; op2:x26; op2val:0xbfba1153899f25d0
offset:384*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x899f25d0, 0x3fba1153,0x899f25d0,0xbfba1153,x16, 380*SIGALIGN, x17,x1, x14)

inst_202:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xa1153899f25d0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xa1153899f25d0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fba1153899f25d0; valaddr_reg:x16; op2:x26; op2val:0xbfba1153899f25d0
offset:386*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x899f25d0, 0x3fba1153,0x899f25d0,0xbfba1153,x16, 382*SIGALIGN, x17,x1, x14)

inst_203:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xa1153899f25d0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xa1153899f25d0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fba1153899f25d0; valaddr_reg:x16; op2:x26; op2val:0xbfba1153899f25d0
offset:388*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x899f25d0, 0x3fba1153,0x899f25d0,0xbfba1153,x16, 384*SIGALIGN, x17,x1, x14)

inst_204:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xa1153899f25d0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xa1153899f25d0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fba1153899f25d0; valaddr_reg:x16; op2:x26; op2val:0xbfba1153899f25d0
offset:390*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x899f25d0, 0x3fba1153,0x899f25d0,0xbfba1153,x16, 386*SIGALIGN, x17,x1, x14)

inst_205:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd66cf92883200 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd66cf92883200 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdd66cf92883200; valaddr_reg:x16; op2:x26; op2val:0xbfdd66cf92883200
offset:392*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x92883200, 0x3fdd66cf,0x92883200,0xbfdd66cf,x16, 388*SIGALIGN, x17,x1, x14)

inst_206:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd66cf92883200 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd66cf92883200 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdd66cf92883200; valaddr_reg:x16; op2:x26; op2val:0xbfdd66cf92883200
offset:394*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x92883200, 0x3fdd66cf,0x92883200,0xbfdd66cf,x16, 390*SIGALIGN, x17,x1, x14)

inst_207:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd66cf92883200 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd66cf92883200 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdd66cf92883200; valaddr_reg:x16; op2:x26; op2val:0xbfdd66cf92883200
offset:396*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x92883200, 0x3fdd66cf,0x92883200,0xbfdd66cf,x16, 392*SIGALIGN, x17,x1, x14)

inst_208:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd66cf92883200 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd66cf92883200 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdd66cf92883200; valaddr_reg:x16; op2:x26; op2val:0xbfdd66cf92883200
offset:398*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x92883200, 0x3fdd66cf,0x92883200,0xbfdd66cf,x16, 394*SIGALIGN, x17,x1, x14)

inst_209:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd66cf92883200 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd66cf92883200 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdd66cf92883200; valaddr_reg:x16; op2:x26; op2val:0xbfdd66cf92883200
offset:400*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x92883200, 0x3fdd66cf,0x92883200,0xbfdd66cf,x16, 396*SIGALIGN, x17,x1, x14)

inst_210:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2dca303cdac2e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2dca303cdac2e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd2dca303cdac2e; valaddr_reg:x16; op2:x26; op2val:0xbfd2dca303cdac2e
offset:402*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x03cdac2e, 0x3fd2dca3,0x03cdac2e,0xbfd2dca3,x16, 398*SIGALIGN, x17,x1, x14)

inst_211:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2dca303cdac2e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2dca303cdac2e and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd2dca303cdac2e; valaddr_reg:x16; op2:x26; op2val:0xbfd2dca303cdac2e
offset:404*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x03cdac2e, 0x3fd2dca3,0x03cdac2e,0xbfd2dca3,x16, 400*SIGALIGN, x17,x1, x14)

inst_212:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2dca303cdac2e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2dca303cdac2e and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd2dca303cdac2e; valaddr_reg:x16; op2:x26; op2val:0xbfd2dca303cdac2e
offset:406*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x03cdac2e, 0x3fd2dca3,0x03cdac2e,0xbfd2dca3,x16, 402*SIGALIGN, x17,x1, x14)

inst_213:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2dca303cdac2e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2dca303cdac2e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd2dca303cdac2e; valaddr_reg:x16; op2:x26; op2val:0xbfd2dca303cdac2e
offset:408*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x03cdac2e, 0x3fd2dca3,0x03cdac2e,0xbfd2dca3,x16, 404*SIGALIGN, x17,x1, x14)

inst_214:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2dca303cdac2e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2dca303cdac2e and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd2dca303cdac2e; valaddr_reg:x16; op2:x26; op2val:0xbfd2dca303cdac2e
offset:410*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x03cdac2e, 0x3fd2dca3,0x03cdac2e,0xbfd2dca3,x16, 406*SIGALIGN, x17,x1, x14)

inst_215:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x81c8cec3b628c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x81c8cec3b628c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc81c8cec3b628c; valaddr_reg:x16; op2:x26; op2val:0xbfc81c8cec3b628c
offset:412*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xec3b628c, 0x3fc81c8c,0xec3b628c,0xbfc81c8c,x16, 408*SIGALIGN, x17,x1, x14)

inst_216:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x81c8cec3b628c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x81c8cec3b628c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc81c8cec3b628c; valaddr_reg:x16; op2:x26; op2val:0xbfc81c8cec3b628c
offset:414*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xec3b628c, 0x3fc81c8c,0xec3b628c,0xbfc81c8c,x16, 410*SIGALIGN, x17,x1, x14)

inst_217:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x81c8cec3b628c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x81c8cec3b628c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc81c8cec3b628c; valaddr_reg:x16; op2:x26; op2val:0xbfc81c8cec3b628c
offset:416*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xec3b628c, 0x3fc81c8c,0xec3b628c,0xbfc81c8c,x16, 412*SIGALIGN, x17,x1, x14)

inst_218:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x81c8cec3b628c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x81c8cec3b628c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc81c8cec3b628c; valaddr_reg:x16; op2:x26; op2val:0xbfc81c8cec3b628c
offset:418*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xec3b628c, 0x3fc81c8c,0xec3b628c,0xbfc81c8c,x16, 414*SIGALIGN, x17,x1, x14)

inst_219:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x81c8cec3b628c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x81c8cec3b628c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc81c8cec3b628c; valaddr_reg:x16; op2:x26; op2val:0xbfc81c8cec3b628c
offset:420*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xec3b628c, 0x3fc81c8c,0xec3b628c,0xbfc81c8c,x16, 416*SIGALIGN, x17,x1, x14)

inst_220:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xadeb9ea41bf00 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xadeb9ea41bf00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbadeb9ea41bf00; valaddr_reg:x16; op2:x26; op2val:0xbfbadeb9ea41bf00
offset:422*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xea41bf00, 0x3fbadeb9,0xea41bf00,0xbfbadeb9,x16, 418*SIGALIGN, x17,x1, x14)

inst_221:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xadeb9ea41bf00 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xadeb9ea41bf00 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbadeb9ea41bf00; valaddr_reg:x16; op2:x26; op2val:0xbfbadeb9ea41bf00
offset:424*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xea41bf00, 0x3fbadeb9,0xea41bf00,0xbfbadeb9,x16, 420*SIGALIGN, x17,x1, x14)

inst_222:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xadeb9ea41bf00 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xadeb9ea41bf00 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbadeb9ea41bf00; valaddr_reg:x16; op2:x26; op2val:0xbfbadeb9ea41bf00
offset:426*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xea41bf00, 0x3fbadeb9,0xea41bf00,0xbfbadeb9,x16, 422*SIGALIGN, x17,x1, x14)

inst_223:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xadeb9ea41bf00 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xadeb9ea41bf00 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbadeb9ea41bf00; valaddr_reg:x16; op2:x26; op2val:0xbfbadeb9ea41bf00
offset:428*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xea41bf00, 0x3fbadeb9,0xea41bf00,0xbfbadeb9,x16, 424*SIGALIGN, x17,x1, x14)

inst_224:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xadeb9ea41bf00 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xadeb9ea41bf00 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbadeb9ea41bf00; valaddr_reg:x16; op2:x26; op2val:0xbfbadeb9ea41bf00
offset:430*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xea41bf00, 0x3fbadeb9,0xea41bf00,0xbfbadeb9,x16, 426*SIGALIGN, x17,x1, x14)

inst_225:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x9b86b25282b70 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x9b86b25282b70 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fa9b86b25282b70; valaddr_reg:x16; op2:x26; op2val:0xbfa9b86b25282b70
offset:432*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x25282b70, 0x3fa9b86b,0x25282b70,0xbfa9b86b,x16, 428*SIGALIGN, x17,x1, x14)

inst_226:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x9b86b25282b70 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x9b86b25282b70 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fa9b86b25282b70; valaddr_reg:x16; op2:x26; op2val:0xbfa9b86b25282b70
offset:434*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x25282b70, 0x3fa9b86b,0x25282b70,0xbfa9b86b,x16, 430*SIGALIGN, x17,x1, x14)

inst_227:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x9b86b25282b70 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x9b86b25282b70 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fa9b86b25282b70; valaddr_reg:x16; op2:x26; op2val:0xbfa9b86b25282b70
offset:436*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x25282b70, 0x3fa9b86b,0x25282b70,0xbfa9b86b,x16, 432*SIGALIGN, x17,x1, x14)

inst_228:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x9b86b25282b70 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x9b86b25282b70 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fa9b86b25282b70; valaddr_reg:x16; op2:x26; op2val:0xbfa9b86b25282b70
offset:438*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x25282b70, 0x3fa9b86b,0x25282b70,0xbfa9b86b,x16, 434*SIGALIGN, x17,x1, x14)

inst_229:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x9b86b25282b70 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x9b86b25282b70 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fa9b86b25282b70; valaddr_reg:x16; op2:x26; op2val:0xbfa9b86b25282b70
offset:440*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x25282b70, 0x3fa9b86b,0x25282b70,0xbfa9b86b,x16, 436*SIGALIGN, x17,x1, x14)

inst_230:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x194fcae078559 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x194fcae078559 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe194fcae078559; valaddr_reg:x16; op2:x26; op2val:0xbfe194fcae078559
offset:442*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xae078559, 0x3fe194fc,0xae078559,0xbfe194fc,x16, 438*SIGALIGN, x17,x1, x14)

inst_231:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x194fcae078559 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x194fcae078559 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe194fcae078559; valaddr_reg:x16; op2:x26; op2val:0xbfe194fcae078559
offset:444*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xae078559, 0x3fe194fc,0xae078559,0xbfe194fc,x16, 440*SIGALIGN, x17,x1, x14)

inst_232:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x194fcae078559 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x194fcae078559 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe194fcae078559; valaddr_reg:x16; op2:x26; op2val:0xbfe194fcae078559
offset:446*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xae078559, 0x3fe194fc,0xae078559,0xbfe194fc,x16, 442*SIGALIGN, x17,x1, x14)

inst_233:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x194fcae078559 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x194fcae078559 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe194fcae078559; valaddr_reg:x16; op2:x26; op2val:0xbfe194fcae078559
offset:448*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xae078559, 0x3fe194fc,0xae078559,0xbfe194fc,x16, 444*SIGALIGN, x17,x1, x14)

inst_234:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x194fcae078559 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x194fcae078559 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe194fcae078559; valaddr_reg:x16; op2:x26; op2val:0xbfe194fcae078559
offset:450*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xae078559, 0x3fe194fc,0xae078559,0xbfe194fc,x16, 446*SIGALIGN, x17,x1, x14)

inst_235:// fs1 == 0 and fe1 == 0x3f6 and fm1 == 0xea7e132f81500 and fs2 == 1 and fe2 == 0x3f6 and fm2 == 0xea7e132f81500 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f6ea7e132f81500; valaddr_reg:x16; op2:x26; op2val:0xbf6ea7e132f81500
offset:452*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x32f81500, 0x3f6ea7e1,0x32f81500,0xbf6ea7e1,x16, 448*SIGALIGN, x17,x1, x14)

inst_236:// fs1 == 0 and fe1 == 0x3f6 and fm1 == 0xea7e132f81500 and fs2 == 1 and fe2 == 0x3f6 and fm2 == 0xea7e132f81500 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f6ea7e132f81500; valaddr_reg:x16; op2:x26; op2val:0xbf6ea7e132f81500
offset:454*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x32f81500, 0x3f6ea7e1,0x32f81500,0xbf6ea7e1,x16, 450*SIGALIGN, x17,x1, x14)

inst_237:// fs1 == 0 and fe1 == 0x3f6 and fm1 == 0xea7e132f81500 and fs2 == 1 and fe2 == 0x3f6 and fm2 == 0xea7e132f81500 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f6ea7e132f81500; valaddr_reg:x16; op2:x26; op2val:0xbf6ea7e132f81500
offset:456*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x32f81500, 0x3f6ea7e1,0x32f81500,0xbf6ea7e1,x16, 452*SIGALIGN, x17,x1, x14)

inst_238:// fs1 == 0 and fe1 == 0x3f6 and fm1 == 0xea7e132f81500 and fs2 == 1 and fe2 == 0x3f6 and fm2 == 0xea7e132f81500 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f6ea7e132f81500; valaddr_reg:x16; op2:x26; op2val:0xbf6ea7e132f81500
offset:458*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x32f81500, 0x3f6ea7e1,0x32f81500,0xbf6ea7e1,x16, 454*SIGALIGN, x17,x1, x14)

inst_239:// fs1 == 0 and fe1 == 0x3f6 and fm1 == 0xea7e132f81500 and fs2 == 1 and fe2 == 0x3f6 and fm2 == 0xea7e132f81500 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f6ea7e132f81500; valaddr_reg:x16; op2:x26; op2val:0xbf6ea7e132f81500
offset:460*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x32f81500, 0x3f6ea7e1,0x32f81500,0xbf6ea7e1,x16, 456*SIGALIGN, x17,x1, x14)

inst_240:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa7452da4838f8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa7452da4838f8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fca7452da4838f8; valaddr_reg:x16; op2:x26; op2val:0xbfca7452da4838f8
offset:462*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xda4838f8, 0x3fca7452,0xda4838f8,0xbfca7452,x16, 458*SIGALIGN, x17,x1, x14)

inst_241:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa7452da4838f8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa7452da4838f8 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fca7452da4838f8; valaddr_reg:x16; op2:x26; op2val:0xbfca7452da4838f8
offset:464*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xda4838f8, 0x3fca7452,0xda4838f8,0xbfca7452,x16, 460*SIGALIGN, x17,x1, x14)

inst_242:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa7452da4838f8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa7452da4838f8 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fca7452da4838f8; valaddr_reg:x16; op2:x26; op2val:0xbfca7452da4838f8
offset:466*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xda4838f8, 0x3fca7452,0xda4838f8,0xbfca7452,x16, 462*SIGALIGN, x17,x1, x14)

inst_243:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa7452da4838f8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa7452da4838f8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fca7452da4838f8; valaddr_reg:x16; op2:x26; op2val:0xbfca7452da4838f8
offset:468*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xda4838f8, 0x3fca7452,0xda4838f8,0xbfca7452,x16, 464*SIGALIGN, x17,x1, x14)

inst_244:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa7452da4838f8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa7452da4838f8 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fca7452da4838f8; valaddr_reg:x16; op2:x26; op2val:0xbfca7452da4838f8
offset:470*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xda4838f8, 0x3fca7452,0xda4838f8,0xbfca7452,x16, 466*SIGALIGN, x17,x1, x14)

inst_245:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8c8295f13c384 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8c8295f13c384 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd8c8295f13c384; valaddr_reg:x16; op2:x26; op2val:0xbfd8c8295f13c384
offset:472*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x5f13c384, 0x3fd8c829,0x5f13c384,0xbfd8c829,x16, 468*SIGALIGN, x17,x1, x14)

inst_246:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8c8295f13c384 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8c8295f13c384 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd8c8295f13c384; valaddr_reg:x16; op2:x26; op2val:0xbfd8c8295f13c384
offset:474*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x5f13c384, 0x3fd8c829,0x5f13c384,0xbfd8c829,x16, 470*SIGALIGN, x17,x1, x14)

inst_247:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8c8295f13c384 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8c8295f13c384 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd8c8295f13c384; valaddr_reg:x16; op2:x26; op2val:0xbfd8c8295f13c384
offset:476*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x5f13c384, 0x3fd8c829,0x5f13c384,0xbfd8c829,x16, 472*SIGALIGN, x17,x1, x14)

inst_248:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8c8295f13c384 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8c8295f13c384 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd8c8295f13c384; valaddr_reg:x16; op2:x26; op2val:0xbfd8c8295f13c384
offset:478*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x5f13c384, 0x3fd8c829,0x5f13c384,0xbfd8c829,x16, 474*SIGALIGN, x17,x1, x14)

inst_249:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8c8295f13c384 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8c8295f13c384 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd8c8295f13c384; valaddr_reg:x16; op2:x26; op2val:0xbfd8c8295f13c384
offset:480*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x5f13c384, 0x3fd8c829,0x5f13c384,0xbfd8c829,x16, 476*SIGALIGN, x17,x1, x14)

inst_250:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7abaa7d515db8 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x7abaa7d515db8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd7abaa7d515db8; valaddr_reg:x16; op2:x26; op2val:0xbfd7abaa7d515db8
offset:482*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x7d515db8, 0x3fd7abaa,0x7d515db8,0xbfd7abaa,x16, 478*SIGALIGN, x17,x1, x14)

inst_251:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7abaa7d515db8 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x7abaa7d515db8 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd7abaa7d515db8; valaddr_reg:x16; op2:x26; op2val:0xbfd7abaa7d515db8
offset:484*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x7d515db8, 0x3fd7abaa,0x7d515db8,0xbfd7abaa,x16, 480*SIGALIGN, x17,x1, x14)

inst_252:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7abaa7d515db8 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x7abaa7d515db8 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd7abaa7d515db8; valaddr_reg:x16; op2:x26; op2val:0xbfd7abaa7d515db8
offset:486*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x7d515db8, 0x3fd7abaa,0x7d515db8,0xbfd7abaa,x16, 482*SIGALIGN, x17,x1, x14)

inst_253:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7abaa7d515db8 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x7abaa7d515db8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd7abaa7d515db8; valaddr_reg:x16; op2:x26; op2val:0xbfd7abaa7d515db8
offset:488*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x7d515db8, 0x3fd7abaa,0x7d515db8,0xbfd7abaa,x16, 484*SIGALIGN, x17,x1, x14)

inst_254:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7abaa7d515db8 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x7abaa7d515db8 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd7abaa7d515db8; valaddr_reg:x16; op2:x26; op2val:0xbfd7abaa7d515db8
offset:490*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x7d515db8, 0x3fd7abaa,0x7d515db8,0xbfd7abaa,x16, 486*SIGALIGN, x17,x1, x14)

inst_255:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8390d5bef66e7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8390d5bef66e7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe8390d5bef66e7; valaddr_reg:x16; op2:x26; op2val:0xbfe8390d5bef66e7
offset:492*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x5bef66e7, 0x3fe8390d,0x5bef66e7,0xbfe8390d,x16, 488*SIGALIGN, x17,x1, x14)

inst_256:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8390d5bef66e7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8390d5bef66e7 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe8390d5bef66e7; valaddr_reg:x16; op2:x26; op2val:0xbfe8390d5bef66e7
offset:494*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x5bef66e7, 0x3fe8390d,0x5bef66e7,0xbfe8390d,x16, 490*SIGALIGN, x17,x1, x14)

inst_257:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8390d5bef66e7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8390d5bef66e7 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe8390d5bef66e7; valaddr_reg:x16; op2:x26; op2val:0xbfe8390d5bef66e7
offset:496*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x5bef66e7, 0x3fe8390d,0x5bef66e7,0xbfe8390d,x16, 492*SIGALIGN, x17,x1, x14)

inst_258:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8390d5bef66e7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8390d5bef66e7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe8390d5bef66e7; valaddr_reg:x16; op2:x26; op2val:0xbfe8390d5bef66e7
offset:498*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x5bef66e7, 0x3fe8390d,0x5bef66e7,0xbfe8390d,x16, 494*SIGALIGN, x17,x1, x14)

inst_259:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8390d5bef66e7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8390d5bef66e7 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe8390d5bef66e7; valaddr_reg:x16; op2:x26; op2val:0xbfe8390d5bef66e7
offset:500*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x5bef66e7, 0x3fe8390d,0x5bef66e7,0xbfe8390d,x16, 496*SIGALIGN, x17,x1, x14)

inst_260:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc406f952dbd28 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc406f952dbd28 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fec406f952dbd28; valaddr_reg:x16; op2:x26; op2val:0xbfec406f952dbd28
offset:502*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x952dbd28, 0x3fec406f,0x952dbd28,0xbfec406f,x16, 498*SIGALIGN, x17,x1, x14)

inst_261:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc406f952dbd28 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc406f952dbd28 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fec406f952dbd28; valaddr_reg:x16; op2:x26; op2val:0xbfec406f952dbd28
offset:504*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x952dbd28, 0x3fec406f,0x952dbd28,0xbfec406f,x16, 500*SIGALIGN, x17,x1, x14)

inst_262:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc406f952dbd28 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc406f952dbd28 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fec406f952dbd28; valaddr_reg:x16; op2:x26; op2val:0xbfec406f952dbd28
offset:506*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x952dbd28, 0x3fec406f,0x952dbd28,0xbfec406f,x16, 502*SIGALIGN, x17,x1, x14)

inst_263:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc406f952dbd28 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc406f952dbd28 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fec406f952dbd28; valaddr_reg:x16; op2:x26; op2val:0xbfec406f952dbd28
offset:508*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x952dbd28, 0x3fec406f,0x952dbd28,0xbfec406f,x16, 504*SIGALIGN, x17,x1, x14)

inst_264:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc406f952dbd28 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc406f952dbd28 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fec406f952dbd28; valaddr_reg:x16; op2:x26; op2val:0xbfec406f952dbd28
offset:510*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x952dbd28, 0x3fec406f,0x952dbd28,0xbfec406f,x16, 506*SIGALIGN, x17,x1, x14)

inst_265:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa4b1aed45b4e8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa4b1aed45b4e8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fca4b1aed45b4e8; valaddr_reg:x16; op2:x26; op2val:0xbfca4b1aed45b4e8
offset:512*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xed45b4e8, 0x3fca4b1a,0xed45b4e8,0xbfca4b1a,x16, 508*SIGALIGN, x17,x1, x14)

inst_266:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa4b1aed45b4e8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa4b1aed45b4e8 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fca4b1aed45b4e8; valaddr_reg:x16; op2:x26; op2val:0xbfca4b1aed45b4e8
offset:514*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xed45b4e8, 0x3fca4b1a,0xed45b4e8,0xbfca4b1a,x16, 510*SIGALIGN, x17,x1, x14)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_267:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa4b1aed45b4e8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa4b1aed45b4e8 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fca4b1aed45b4e8; valaddr_reg:x16; op2:x26; op2val:0xbfca4b1aed45b4e8
offset:516*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xed45b4e8, 0x3fca4b1a,0xed45b4e8,0xbfca4b1a,x16, 0*SIGALIGN, x17,x1, x14)

inst_268:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa4b1aed45b4e8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa4b1aed45b4e8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fca4b1aed45b4e8; valaddr_reg:x16; op2:x26; op2val:0xbfca4b1aed45b4e8
offset:518*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xed45b4e8, 0x3fca4b1a,0xed45b4e8,0xbfca4b1a,x16, 2*SIGALIGN, x17,x1, x14)

inst_269:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa4b1aed45b4e8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa4b1aed45b4e8 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fca4b1aed45b4e8; valaddr_reg:x16; op2:x26; op2val:0xbfca4b1aed45b4e8
offset:520*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xed45b4e8, 0x3fca4b1a,0xed45b4e8,0xbfca4b1a,x16, 4*SIGALIGN, x17,x1, x14)

inst_270:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x79028df01427c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x79028df01427c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc79028df01427c; valaddr_reg:x16; op2:x26; op2val:0xbfc79028df01427c
offset:522*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xdf01427c, 0x3fc79028,0xdf01427c,0xbfc79028,x16, 6*SIGALIGN, x17,x1, x14)

inst_271:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x79028df01427c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x79028df01427c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc79028df01427c; valaddr_reg:x16; op2:x26; op2val:0xbfc79028df01427c
offset:524*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xdf01427c, 0x3fc79028,0xdf01427c,0xbfc79028,x16, 8*SIGALIGN, x17,x1, x14)

inst_272:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x79028df01427c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x79028df01427c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc79028df01427c; valaddr_reg:x16; op2:x26; op2val:0xbfc79028df01427c
offset:526*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xdf01427c, 0x3fc79028,0xdf01427c,0xbfc79028,x16, 10*SIGALIGN, x17,x1, x14)

inst_273:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x79028df01427c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x79028df01427c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc79028df01427c; valaddr_reg:x16; op2:x26; op2val:0xbfc79028df01427c
offset:528*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xdf01427c, 0x3fc79028,0xdf01427c,0xbfc79028,x16, 12*SIGALIGN, x17,x1, x14)

inst_274:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x79028df01427c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x79028df01427c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc79028df01427c; valaddr_reg:x16; op2:x26; op2val:0xbfc79028df01427c
offset:530*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xdf01427c, 0x3fc79028,0xdf01427c,0xbfc79028,x16, 14*SIGALIGN, x17,x1, x14)

inst_275:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb51080094264f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb51080094264f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb51080094264f; valaddr_reg:x16; op2:x26; op2val:0xbfeb51080094264f
offset:532*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0094264f, 0x3feb5108,0x0094264f,0xbfeb5108,x16, 16*SIGALIGN, x17,x1, x14)

inst_276:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb51080094264f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb51080094264f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb51080094264f; valaddr_reg:x16; op2:x26; op2val:0xbfeb51080094264f
offset:534*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x0094264f, 0x3feb5108,0x0094264f,0xbfeb5108,x16, 18*SIGALIGN, x17,x1, x14)

inst_277:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb51080094264f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb51080094264f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb51080094264f; valaddr_reg:x16; op2:x26; op2val:0xbfeb51080094264f
offset:536*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x0094264f, 0x3feb5108,0x0094264f,0xbfeb5108,x16, 20*SIGALIGN, x17,x1, x14)

inst_278:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb51080094264f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb51080094264f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb51080094264f; valaddr_reg:x16; op2:x26; op2val:0xbfeb51080094264f
offset:538*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x0094264f, 0x3feb5108,0x0094264f,0xbfeb5108,x16, 22*SIGALIGN, x17,x1, x14)

inst_279:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb51080094264f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb51080094264f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb51080094264f; valaddr_reg:x16; op2:x26; op2val:0xbfeb51080094264f
offset:540*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x0094264f, 0x3feb5108,0x0094264f,0xbfeb5108,x16, 24*SIGALIGN, x17,x1, x14)

inst_280:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe8d7148bb44d1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe8d7148bb44d1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee8d7148bb44d1; valaddr_reg:x16; op2:x26; op2val:0xbfee8d7148bb44d1
offset:542*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x48bb44d1, 0x3fee8d71,0x48bb44d1,0xbfee8d71,x16, 26*SIGALIGN, x17,x1, x14)

inst_281:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe8d7148bb44d1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe8d7148bb44d1 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee8d7148bb44d1; valaddr_reg:x16; op2:x26; op2val:0xbfee8d7148bb44d1
offset:544*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x48bb44d1, 0x3fee8d71,0x48bb44d1,0xbfee8d71,x16, 28*SIGALIGN, x17,x1, x14)

inst_282:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe8d7148bb44d1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe8d7148bb44d1 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee8d7148bb44d1; valaddr_reg:x16; op2:x26; op2val:0xbfee8d7148bb44d1
offset:546*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x48bb44d1, 0x3fee8d71,0x48bb44d1,0xbfee8d71,x16, 30*SIGALIGN, x17,x1, x14)

inst_283:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe8d7148bb44d1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe8d7148bb44d1 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee8d7148bb44d1; valaddr_reg:x16; op2:x26; op2val:0xbfee8d7148bb44d1
offset:548*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x48bb44d1, 0x3fee8d71,0x48bb44d1,0xbfee8d71,x16, 32*SIGALIGN, x17,x1, x14)

inst_284:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe8d7148bb44d1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe8d7148bb44d1 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee8d7148bb44d1; valaddr_reg:x16; op2:x26; op2val:0xbfee8d7148bb44d1
offset:550*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x48bb44d1, 0x3fee8d71,0x48bb44d1,0xbfee8d71,x16, 34*SIGALIGN, x17,x1, x14)

inst_285:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x70930c20807d0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x70930c20807d0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb70930c20807d0; valaddr_reg:x16; op2:x26; op2val:0xbfb70930c20807d0
offset:552*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xc20807d0, 0x3fb70930,0xc20807d0,0xbfb70930,x16, 36*SIGALIGN, x17,x1, x14)

inst_286:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x70930c20807d0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x70930c20807d0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb70930c20807d0; valaddr_reg:x16; op2:x26; op2val:0xbfb70930c20807d0
offset:554*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xc20807d0, 0x3fb70930,0xc20807d0,0xbfb70930,x16, 38*SIGALIGN, x17,x1, x14)

inst_287:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x70930c20807d0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x70930c20807d0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb70930c20807d0; valaddr_reg:x16; op2:x26; op2val:0xbfb70930c20807d0
offset:556*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xc20807d0, 0x3fb70930,0xc20807d0,0xbfb70930,x16, 40*SIGALIGN, x17,x1, x14)

inst_288:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x70930c20807d0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x70930c20807d0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb70930c20807d0; valaddr_reg:x16; op2:x26; op2val:0xbfb70930c20807d0
offset:558*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xc20807d0, 0x3fb70930,0xc20807d0,0xbfb70930,x16, 42*SIGALIGN, x17,x1, x14)

inst_289:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x70930c20807d0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x70930c20807d0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb70930c20807d0; valaddr_reg:x16; op2:x26; op2val:0xbfb70930c20807d0
offset:560*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xc20807d0, 0x3fb70930,0xc20807d0,0xbfb70930,x16, 44*SIGALIGN, x17,x1, x14)

inst_290:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4713a47687452 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x4713a47687452 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd4713a47687452; valaddr_reg:x16; op2:x26; op2val:0xbfd4713a47687452
offset:562*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x47687452, 0x3fd4713a,0x47687452,0xbfd4713a,x16, 46*SIGALIGN, x17,x1, x14)

inst_291:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4713a47687452 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x4713a47687452 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd4713a47687452; valaddr_reg:x16; op2:x26; op2val:0xbfd4713a47687452
offset:564*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x47687452, 0x3fd4713a,0x47687452,0xbfd4713a,x16, 48*SIGALIGN, x17,x1, x14)

inst_292:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4713a47687452 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x4713a47687452 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd4713a47687452; valaddr_reg:x16; op2:x26; op2val:0xbfd4713a47687452
offset:566*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x47687452, 0x3fd4713a,0x47687452,0xbfd4713a,x16, 50*SIGALIGN, x17,x1, x14)

inst_293:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4713a47687452 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x4713a47687452 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd4713a47687452; valaddr_reg:x16; op2:x26; op2val:0xbfd4713a47687452
offset:568*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x47687452, 0x3fd4713a,0x47687452,0xbfd4713a,x16, 52*SIGALIGN, x17,x1, x14)

inst_294:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4713a47687452 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x4713a47687452 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd4713a47687452; valaddr_reg:x16; op2:x26; op2val:0xbfd4713a47687452
offset:570*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x47687452, 0x3fd4713a,0x47687452,0xbfd4713a,x16, 54*SIGALIGN, x17,x1, x14)

inst_295:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x75c29567de8e8 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x75c29567de8e8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd75c29567de8e8; valaddr_reg:x16; op2:x26; op2val:0xbfd75c29567de8e8
offset:572*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x567de8e8, 0x3fd75c29,0x567de8e8,0xbfd75c29,x16, 56*SIGALIGN, x17,x1, x14)

inst_296:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x75c29567de8e8 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x75c29567de8e8 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd75c29567de8e8; valaddr_reg:x16; op2:x26; op2val:0xbfd75c29567de8e8
offset:574*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x567de8e8, 0x3fd75c29,0x567de8e8,0xbfd75c29,x16, 58*SIGALIGN, x17,x1, x14)

inst_297:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x75c29567de8e8 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x75c29567de8e8 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd75c29567de8e8; valaddr_reg:x16; op2:x26; op2val:0xbfd75c29567de8e8
offset:576*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x567de8e8, 0x3fd75c29,0x567de8e8,0xbfd75c29,x16, 60*SIGALIGN, x17,x1, x14)

inst_298:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x75c29567de8e8 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x75c29567de8e8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd75c29567de8e8; valaddr_reg:x16; op2:x26; op2val:0xbfd75c29567de8e8
offset:578*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x567de8e8, 0x3fd75c29,0x567de8e8,0xbfd75c29,x16, 62*SIGALIGN, x17,x1, x14)

inst_299:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x75c29567de8e8 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x75c29567de8e8 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd75c29567de8e8; valaddr_reg:x16; op2:x26; op2val:0xbfd75c29567de8e8
offset:580*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x567de8e8, 0x3fd75c29,0x567de8e8,0xbfd75c29,x16, 64*SIGALIGN, x17,x1, x14)

inst_300:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb23963f0add1a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb23963f0add1a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdb23963f0add1a; valaddr_reg:x16; op2:x26; op2val:0xbfdb23963f0add1a
offset:582*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x3f0add1a, 0x3fdb2396,0x3f0add1a,0xbfdb2396,x16, 66*SIGALIGN, x17,x1, x14)

inst_301:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb23963f0add1a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb23963f0add1a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdb23963f0add1a; valaddr_reg:x16; op2:x26; op2val:0xbfdb23963f0add1a
offset:584*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x3f0add1a, 0x3fdb2396,0x3f0add1a,0xbfdb2396,x16, 68*SIGALIGN, x17,x1, x14)

inst_302:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb23963f0add1a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb23963f0add1a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdb23963f0add1a; valaddr_reg:x16; op2:x26; op2val:0xbfdb23963f0add1a
offset:586*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x3f0add1a, 0x3fdb2396,0x3f0add1a,0xbfdb2396,x16, 70*SIGALIGN, x17,x1, x14)

inst_303:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb23963f0add1a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb23963f0add1a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdb23963f0add1a; valaddr_reg:x16; op2:x26; op2val:0xbfdb23963f0add1a
offset:588*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x3f0add1a, 0x3fdb2396,0x3f0add1a,0xbfdb2396,x16, 72*SIGALIGN, x17,x1, x14)

inst_304:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb23963f0add1a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb23963f0add1a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdb23963f0add1a; valaddr_reg:x16; op2:x26; op2val:0xbfdb23963f0add1a
offset:590*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x3f0add1a, 0x3fdb2396,0x3f0add1a,0xbfdb2396,x16, 74*SIGALIGN, x17,x1, x14)

inst_305:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x427d048aa24b0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x427d048aa24b0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe427d048aa24b0; valaddr_reg:x16; op2:x26; op2val:0xbfe427d048aa24b0
offset:592*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x48aa24b0, 0x3fe427d0,0x48aa24b0,0xbfe427d0,x16, 76*SIGALIGN, x17,x1, x14)

inst_306:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x427d048aa24b0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x427d048aa24b0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe427d048aa24b0; valaddr_reg:x16; op2:x26; op2val:0xbfe427d048aa24b0
offset:594*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x48aa24b0, 0x3fe427d0,0x48aa24b0,0xbfe427d0,x16, 78*SIGALIGN, x17,x1, x14)

inst_307:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x427d048aa24b0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x427d048aa24b0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe427d048aa24b0; valaddr_reg:x16; op2:x26; op2val:0xbfe427d048aa24b0
offset:596*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x48aa24b0, 0x3fe427d0,0x48aa24b0,0xbfe427d0,x16, 80*SIGALIGN, x17,x1, x14)

inst_308:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x427d048aa24b0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x427d048aa24b0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe427d048aa24b0; valaddr_reg:x16; op2:x26; op2val:0xbfe427d048aa24b0
offset:598*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x48aa24b0, 0x3fe427d0,0x48aa24b0,0xbfe427d0,x16, 82*SIGALIGN, x17,x1, x14)

inst_309:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x427d048aa24b0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x427d048aa24b0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe427d048aa24b0; valaddr_reg:x16; op2:x26; op2val:0xbfe427d048aa24b0
offset:600*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x48aa24b0, 0x3fe427d0,0x48aa24b0,0xbfe427d0,x16, 84*SIGALIGN, x17,x1, x14)

inst_310:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xed5e05d93f6b7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xed5e05d93f6b7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feed5e05d93f6b7; valaddr_reg:x16; op2:x26; op2val:0xbfeed5e05d93f6b7
offset:602*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x5d93f6b7, 0x3feed5e0,0x5d93f6b7,0xbfeed5e0,x16, 86*SIGALIGN, x17,x1, x14)

inst_311:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xed5e05d93f6b7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xed5e05d93f6b7 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feed5e05d93f6b7; valaddr_reg:x16; op2:x26; op2val:0xbfeed5e05d93f6b7
offset:604*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x5d93f6b7, 0x3feed5e0,0x5d93f6b7,0xbfeed5e0,x16, 88*SIGALIGN, x17,x1, x14)

inst_312:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xed5e05d93f6b7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xed5e05d93f6b7 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feed5e05d93f6b7; valaddr_reg:x16; op2:x26; op2val:0xbfeed5e05d93f6b7
offset:606*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x5d93f6b7, 0x3feed5e0,0x5d93f6b7,0xbfeed5e0,x16, 90*SIGALIGN, x17,x1, x14)

inst_313:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xed5e05d93f6b7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xed5e05d93f6b7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feed5e05d93f6b7; valaddr_reg:x16; op2:x26; op2val:0xbfeed5e05d93f6b7
offset:608*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x5d93f6b7, 0x3feed5e0,0x5d93f6b7,0xbfeed5e0,x16, 92*SIGALIGN, x17,x1, x14)

inst_314:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xed5e05d93f6b7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xed5e05d93f6b7 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feed5e05d93f6b7; valaddr_reg:x16; op2:x26; op2val:0xbfeed5e05d93f6b7
offset:610*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x5d93f6b7, 0x3feed5e0,0x5d93f6b7,0xbfeed5e0,x16, 94*SIGALIGN, x17,x1, x14)

inst_315:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x3f3b541e02f10 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x3f3b541e02f10 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fa3f3b541e02f10; valaddr_reg:x16; op2:x26; op2val:0xbfa3f3b541e02f10
offset:612*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x41e02f10, 0x3fa3f3b5,0x41e02f10,0xbfa3f3b5,x16, 96*SIGALIGN, x17,x1, x14)

inst_316:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x3f3b541e02f10 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x3f3b541e02f10 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fa3f3b541e02f10; valaddr_reg:x16; op2:x26; op2val:0xbfa3f3b541e02f10
offset:614*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x41e02f10, 0x3fa3f3b5,0x41e02f10,0xbfa3f3b5,x16, 98*SIGALIGN, x17,x1, x14)

inst_317:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x3f3b541e02f10 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x3f3b541e02f10 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fa3f3b541e02f10; valaddr_reg:x16; op2:x26; op2val:0xbfa3f3b541e02f10
offset:616*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x41e02f10, 0x3fa3f3b5,0x41e02f10,0xbfa3f3b5,x16, 100*SIGALIGN, x17,x1, x14)

inst_318:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x3f3b541e02f10 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x3f3b541e02f10 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fa3f3b541e02f10; valaddr_reg:x16; op2:x26; op2val:0xbfa3f3b541e02f10
offset:618*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x41e02f10, 0x3fa3f3b5,0x41e02f10,0xbfa3f3b5,x16, 102*SIGALIGN, x17,x1, x14)

inst_319:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x3f3b541e02f10 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x3f3b541e02f10 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fa3f3b541e02f10; valaddr_reg:x16; op2:x26; op2val:0xbfa3f3b541e02f10
offset:620*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x41e02f10, 0x3fa3f3b5,0x41e02f10,0xbfa3f3b5,x16, 104*SIGALIGN, x17,x1, x14)

inst_320:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc090d021543c6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc090d021543c6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fec090d021543c6; valaddr_reg:x16; op2:x26; op2val:0xbfec090d021543c6
offset:622*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x021543c6, 0x3fec090d,0x021543c6,0xbfec090d,x16, 106*SIGALIGN, x17,x1, x14)

inst_321:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc090d021543c6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc090d021543c6 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fec090d021543c6; valaddr_reg:x16; op2:x26; op2val:0xbfec090d021543c6
offset:624*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x021543c6, 0x3fec090d,0x021543c6,0xbfec090d,x16, 108*SIGALIGN, x17,x1, x14)

inst_322:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc090d021543c6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc090d021543c6 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fec090d021543c6; valaddr_reg:x16; op2:x26; op2val:0xbfec090d021543c6
offset:626*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x021543c6, 0x3fec090d,0x021543c6,0xbfec090d,x16, 110*SIGALIGN, x17,x1, x14)

inst_323:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc090d021543c6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc090d021543c6 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fec090d021543c6; valaddr_reg:x16; op2:x26; op2val:0xbfec090d021543c6
offset:628*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x021543c6, 0x3fec090d,0x021543c6,0xbfec090d,x16, 112*SIGALIGN, x17,x1, x14)

inst_324:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc090d021543c6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc090d021543c6 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fec090d021543c6; valaddr_reg:x16; op2:x26; op2val:0xbfec090d021543c6
offset:630*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x021543c6, 0x3fec090d,0x021543c6,0xbfec090d,x16, 114*SIGALIGN, x17,x1, x14)

inst_325:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x98122bf05cbdc and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x98122bf05cbdc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc98122bf05cbdc; valaddr_reg:x16; op2:x26; op2val:0xbfc98122bf05cbdc
offset:632*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xbf05cbdc, 0x3fc98122,0xbf05cbdc,0xbfc98122,x16, 116*SIGALIGN, x17,x1, x14)

inst_326:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x98122bf05cbdc and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x98122bf05cbdc and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc98122bf05cbdc; valaddr_reg:x16; op2:x26; op2val:0xbfc98122bf05cbdc
offset:634*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xbf05cbdc, 0x3fc98122,0xbf05cbdc,0xbfc98122,x16, 118*SIGALIGN, x17,x1, x14)

inst_327:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x98122bf05cbdc and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x98122bf05cbdc and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc98122bf05cbdc; valaddr_reg:x16; op2:x26; op2val:0xbfc98122bf05cbdc
offset:636*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xbf05cbdc, 0x3fc98122,0xbf05cbdc,0xbfc98122,x16, 120*SIGALIGN, x17,x1, x14)

inst_328:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x98122bf05cbdc and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x98122bf05cbdc and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc98122bf05cbdc; valaddr_reg:x16; op2:x26; op2val:0xbfc98122bf05cbdc
offset:638*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xbf05cbdc, 0x3fc98122,0xbf05cbdc,0xbfc98122,x16, 122*SIGALIGN, x17,x1, x14)

inst_329:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x98122bf05cbdc and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x98122bf05cbdc and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc98122bf05cbdc; valaddr_reg:x16; op2:x26; op2val:0xbfc98122bf05cbdc
offset:640*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xbf05cbdc, 0x3fc98122,0xbf05cbdc,0xbfc98122,x16, 124*SIGALIGN, x17,x1, x14)

inst_330:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf455d79d2b3f4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf455d79d2b3f4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef455d79d2b3f4; valaddr_reg:x16; op2:x26; op2val:0xbfef455d79d2b3f4
offset:642*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x79d2b3f4, 0x3fef455d,0x79d2b3f4,0xbfef455d,x16, 126*SIGALIGN, x17,x1, x14)

inst_331:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf455d79d2b3f4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf455d79d2b3f4 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef455d79d2b3f4; valaddr_reg:x16; op2:x26; op2val:0xbfef455d79d2b3f4
offset:644*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x79d2b3f4, 0x3fef455d,0x79d2b3f4,0xbfef455d,x16, 128*SIGALIGN, x17,x1, x14)

inst_332:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf455d79d2b3f4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf455d79d2b3f4 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef455d79d2b3f4; valaddr_reg:x16; op2:x26; op2val:0xbfef455d79d2b3f4
offset:646*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x79d2b3f4, 0x3fef455d,0x79d2b3f4,0xbfef455d,x16, 130*SIGALIGN, x17,x1, x14)

inst_333:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf455d79d2b3f4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf455d79d2b3f4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef455d79d2b3f4; valaddr_reg:x16; op2:x26; op2val:0xbfef455d79d2b3f4
offset:648*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x79d2b3f4, 0x3fef455d,0x79d2b3f4,0xbfef455d,x16, 132*SIGALIGN, x17,x1, x14)

inst_334:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf455d79d2b3f4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf455d79d2b3f4 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef455d79d2b3f4; valaddr_reg:x16; op2:x26; op2val:0xbfef455d79d2b3f4
offset:650*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x79d2b3f4, 0x3fef455d,0x79d2b3f4,0xbfef455d,x16, 134*SIGALIGN, x17,x1, x14)

inst_335:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcc0829ca80923 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcc0829ca80923 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fecc0829ca80923; valaddr_reg:x16; op2:x26; op2val:0xbfecc0829ca80923
offset:652*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x9ca80923, 0x3fecc082,0x9ca80923,0xbfecc082,x16, 136*SIGALIGN, x17,x1, x14)

inst_336:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcc0829ca80923 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcc0829ca80923 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fecc0829ca80923; valaddr_reg:x16; op2:x26; op2val:0xbfecc0829ca80923
offset:654*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x9ca80923, 0x3fecc082,0x9ca80923,0xbfecc082,x16, 138*SIGALIGN, x17,x1, x14)

inst_337:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcc0829ca80923 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcc0829ca80923 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fecc0829ca80923; valaddr_reg:x16; op2:x26; op2val:0xbfecc0829ca80923
offset:656*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x9ca80923, 0x3fecc082,0x9ca80923,0xbfecc082,x16, 140*SIGALIGN, x17,x1, x14)

inst_338:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcc0829ca80923 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcc0829ca80923 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fecc0829ca80923; valaddr_reg:x16; op2:x26; op2val:0xbfecc0829ca80923
offset:658*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x9ca80923, 0x3fecc082,0x9ca80923,0xbfecc082,x16, 142*SIGALIGN, x17,x1, x14)

inst_339:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcc0829ca80923 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcc0829ca80923 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fecc0829ca80923; valaddr_reg:x16; op2:x26; op2val:0xbfecc0829ca80923
offset:660*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x9ca80923, 0x3fecc082,0x9ca80923,0xbfecc082,x16, 144*SIGALIGN, x17,x1, x14)

inst_340:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8eef773b64d0e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8eef773b64d0e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe8eef773b64d0e; valaddr_reg:x16; op2:x26; op2val:0xbfe8eef773b64d0e
offset:662*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x73b64d0e, 0x3fe8eef7,0x73b64d0e,0xbfe8eef7,x16, 146*SIGALIGN, x17,x1, x14)

inst_341:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8eef773b64d0e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8eef773b64d0e and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe8eef773b64d0e; valaddr_reg:x16; op2:x26; op2val:0xbfe8eef773b64d0e
offset:664*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x73b64d0e, 0x3fe8eef7,0x73b64d0e,0xbfe8eef7,x16, 148*SIGALIGN, x17,x1, x14)

inst_342:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8eef773b64d0e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8eef773b64d0e and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe8eef773b64d0e; valaddr_reg:x16; op2:x26; op2val:0xbfe8eef773b64d0e
offset:666*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x73b64d0e, 0x3fe8eef7,0x73b64d0e,0xbfe8eef7,x16, 150*SIGALIGN, x17,x1, x14)

inst_343:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8eef773b64d0e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8eef773b64d0e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe8eef773b64d0e; valaddr_reg:x16; op2:x26; op2val:0xbfe8eef773b64d0e
offset:668*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x73b64d0e, 0x3fe8eef7,0x73b64d0e,0xbfe8eef7,x16, 152*SIGALIGN, x17,x1, x14)

inst_344:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8eef773b64d0e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8eef773b64d0e and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe8eef773b64d0e; valaddr_reg:x16; op2:x26; op2val:0xbfe8eef773b64d0e
offset:670*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x73b64d0e, 0x3fe8eef7,0x73b64d0e,0xbfe8eef7,x16, 154*SIGALIGN, x17,x1, x14)

inst_345:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4ca644e417739 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4ca644e417739 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe4ca644e417739; valaddr_reg:x16; op2:x26; op2val:0xbfe4ca644e417739
offset:672*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x4e417739, 0x3fe4ca64,0x4e417739,0xbfe4ca64,x16, 156*SIGALIGN, x17,x1, x14)

inst_346:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4ca644e417739 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4ca644e417739 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe4ca644e417739; valaddr_reg:x16; op2:x26; op2val:0xbfe4ca644e417739
offset:674*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x4e417739, 0x3fe4ca64,0x4e417739,0xbfe4ca64,x16, 158*SIGALIGN, x17,x1, x14)

inst_347:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4ca644e417739 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4ca644e417739 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe4ca644e417739; valaddr_reg:x16; op2:x26; op2val:0xbfe4ca644e417739
offset:676*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x4e417739, 0x3fe4ca64,0x4e417739,0xbfe4ca64,x16, 160*SIGALIGN, x17,x1, x14)

inst_348:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4ca644e417739 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4ca644e417739 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe4ca644e417739; valaddr_reg:x16; op2:x26; op2val:0xbfe4ca644e417739
offset:678*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x4e417739, 0x3fe4ca64,0x4e417739,0xbfe4ca64,x16, 162*SIGALIGN, x17,x1, x14)

inst_349:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4ca644e417739 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4ca644e417739 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe4ca644e417739; valaddr_reg:x16; op2:x26; op2val:0xbfe4ca644e417739
offset:680*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x4e417739, 0x3fe4ca64,0x4e417739,0xbfe4ca64,x16, 164*SIGALIGN, x17,x1, x14)

inst_350:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfc46b644350b4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xfc46b644350b4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdfc46b644350b4; valaddr_reg:x16; op2:x26; op2val:0xbfdfc46b644350b4
offset:682*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x644350b4, 0x3fdfc46b,0x644350b4,0xbfdfc46b,x16, 166*SIGALIGN, x17,x1, x14)

inst_351:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfc46b644350b4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xfc46b644350b4 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdfc46b644350b4; valaddr_reg:x16; op2:x26; op2val:0xbfdfc46b644350b4
offset:684*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x644350b4, 0x3fdfc46b,0x644350b4,0xbfdfc46b,x16, 168*SIGALIGN, x17,x1, x14)

inst_352:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfc46b644350b4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xfc46b644350b4 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdfc46b644350b4; valaddr_reg:x16; op2:x26; op2val:0xbfdfc46b644350b4
offset:686*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x644350b4, 0x3fdfc46b,0x644350b4,0xbfdfc46b,x16, 170*SIGALIGN, x17,x1, x14)

inst_353:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfc46b644350b4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xfc46b644350b4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdfc46b644350b4; valaddr_reg:x16; op2:x26; op2val:0xbfdfc46b644350b4
offset:688*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x644350b4, 0x3fdfc46b,0x644350b4,0xbfdfc46b,x16, 172*SIGALIGN, x17,x1, x14)

inst_354:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfc46b644350b4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xfc46b644350b4 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdfc46b644350b4; valaddr_reg:x16; op2:x26; op2val:0xbfdfc46b644350b4
offset:690*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x644350b4, 0x3fdfc46b,0x644350b4,0xbfdfc46b,x16, 174*SIGALIGN, x17,x1, x14)

inst_355:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcc540d133e4a4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcc540d133e4a4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fecc540d133e4a4; valaddr_reg:x16; op2:x26; op2val:0xbfecc540d133e4a4
offset:692*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xd133e4a4, 0x3fecc540,0xd133e4a4,0xbfecc540,x16, 176*SIGALIGN, x17,x1, x14)

inst_356:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcc540d133e4a4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcc540d133e4a4 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fecc540d133e4a4; valaddr_reg:x16; op2:x26; op2val:0xbfecc540d133e4a4
offset:694*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xd133e4a4, 0x3fecc540,0xd133e4a4,0xbfecc540,x16, 178*SIGALIGN, x17,x1, x14)

inst_357:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcc540d133e4a4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcc540d133e4a4 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fecc540d133e4a4; valaddr_reg:x16; op2:x26; op2val:0xbfecc540d133e4a4
offset:696*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xd133e4a4, 0x3fecc540,0xd133e4a4,0xbfecc540,x16, 180*SIGALIGN, x17,x1, x14)

inst_358:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcc540d133e4a4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcc540d133e4a4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fecc540d133e4a4; valaddr_reg:x16; op2:x26; op2val:0xbfecc540d133e4a4
offset:698*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd133e4a4, 0x3fecc540,0xd133e4a4,0xbfecc540,x16, 182*SIGALIGN, x17,x1, x14)

inst_359:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcc540d133e4a4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcc540d133e4a4 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fecc540d133e4a4; valaddr_reg:x16; op2:x26; op2val:0xbfecc540d133e4a4
offset:700*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xd133e4a4, 0x3fecc540,0xd133e4a4,0xbfecc540,x16, 184*SIGALIGN, x17,x1, x14)

inst_360:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x99ee09af59fa1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x99ee09af59fa1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe99ee09af59fa1; valaddr_reg:x16; op2:x26; op2val:0xbfe99ee09af59fa1
offset:702*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x9af59fa1, 0x3fe99ee0,0x9af59fa1,0xbfe99ee0,x16, 186*SIGALIGN, x17,x1, x14)

inst_361:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x99ee09af59fa1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x99ee09af59fa1 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe99ee09af59fa1; valaddr_reg:x16; op2:x26; op2val:0xbfe99ee09af59fa1
offset:704*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x9af59fa1, 0x3fe99ee0,0x9af59fa1,0xbfe99ee0,x16, 188*SIGALIGN, x17,x1, x14)

inst_362:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x99ee09af59fa1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x99ee09af59fa1 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe99ee09af59fa1; valaddr_reg:x16; op2:x26; op2val:0xbfe99ee09af59fa1
offset:706*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x9af59fa1, 0x3fe99ee0,0x9af59fa1,0xbfe99ee0,x16, 190*SIGALIGN, x17,x1, x14)

inst_363:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x99ee09af59fa1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x99ee09af59fa1 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe99ee09af59fa1; valaddr_reg:x16; op2:x26; op2val:0xbfe99ee09af59fa1
offset:708*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x9af59fa1, 0x3fe99ee0,0x9af59fa1,0xbfe99ee0,x16, 192*SIGALIGN, x17,x1, x14)

inst_364:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x99ee09af59fa1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x99ee09af59fa1 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe99ee09af59fa1; valaddr_reg:x16; op2:x26; op2val:0xbfe99ee09af59fa1
offset:710*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x9af59fa1, 0x3fe99ee0,0x9af59fa1,0xbfe99ee0,x16, 194*SIGALIGN, x17,x1, x14)

inst_365:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x12d7e4c3cff50 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x12d7e4c3cff50 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd12d7e4c3cff50; valaddr_reg:x16; op2:x26; op2val:0xbfd12d7e4c3cff50
offset:712*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x4c3cff50, 0x3fd12d7e,0x4c3cff50,0xbfd12d7e,x16, 196*SIGALIGN, x17,x1, x14)

inst_366:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x12d7e4c3cff50 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x12d7e4c3cff50 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd12d7e4c3cff50; valaddr_reg:x16; op2:x26; op2val:0xbfd12d7e4c3cff50
offset:714*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x4c3cff50, 0x3fd12d7e,0x4c3cff50,0xbfd12d7e,x16, 198*SIGALIGN, x17,x1, x14)

inst_367:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x12d7e4c3cff50 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x12d7e4c3cff50 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd12d7e4c3cff50; valaddr_reg:x16; op2:x26; op2val:0xbfd12d7e4c3cff50
offset:716*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x4c3cff50, 0x3fd12d7e,0x4c3cff50,0xbfd12d7e,x16, 200*SIGALIGN, x17,x1, x14)

inst_368:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x12d7e4c3cff50 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x12d7e4c3cff50 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd12d7e4c3cff50; valaddr_reg:x16; op2:x26; op2val:0xbfd12d7e4c3cff50
offset:718*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x4c3cff50, 0x3fd12d7e,0x4c3cff50,0xbfd12d7e,x16, 202*SIGALIGN, x17,x1, x14)

inst_369:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x12d7e4c3cff50 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x12d7e4c3cff50 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd12d7e4c3cff50; valaddr_reg:x16; op2:x26; op2val:0xbfd12d7e4c3cff50
offset:720*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x4c3cff50, 0x3fd12d7e,0x4c3cff50,0xbfd12d7e,x16, 204*SIGALIGN, x17,x1, x14)

inst_370:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x4de5c0dc474c8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x4de5c0dc474c8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb4de5c0dc474c8; valaddr_reg:x16; op2:x26; op2val:0xbfb4de5c0dc474c8
offset:722*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0dc474c8, 0x3fb4de5c,0x0dc474c8,0xbfb4de5c,x16, 206*SIGALIGN, x17,x1, x14)

inst_371:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x4de5c0dc474c8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x4de5c0dc474c8 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb4de5c0dc474c8; valaddr_reg:x16; op2:x26; op2val:0xbfb4de5c0dc474c8
offset:724*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x0dc474c8, 0x3fb4de5c,0x0dc474c8,0xbfb4de5c,x16, 208*SIGALIGN, x17,x1, x14)

inst_372:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x4de5c0dc474c8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x4de5c0dc474c8 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb4de5c0dc474c8; valaddr_reg:x16; op2:x26; op2val:0xbfb4de5c0dc474c8
offset:726*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x0dc474c8, 0x3fb4de5c,0x0dc474c8,0xbfb4de5c,x16, 210*SIGALIGN, x17,x1, x14)

inst_373:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x4de5c0dc474c8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x4de5c0dc474c8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb4de5c0dc474c8; valaddr_reg:x16; op2:x26; op2val:0xbfb4de5c0dc474c8
offset:728*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x0dc474c8, 0x3fb4de5c,0x0dc474c8,0xbfb4de5c,x16, 212*SIGALIGN, x17,x1, x14)

inst_374:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x4de5c0dc474c8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x4de5c0dc474c8 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb4de5c0dc474c8; valaddr_reg:x16; op2:x26; op2val:0xbfb4de5c0dc474c8
offset:730*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x0dc474c8, 0x3fb4de5c,0x0dc474c8,0xbfb4de5c,x16, 214*SIGALIGN, x17,x1, x14)

inst_375:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4f374fe5f6820 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x4f374fe5f6820 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd4f374fe5f6820; valaddr_reg:x16; op2:x26; op2val:0xbfd4f374fe5f6820
offset:732*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xfe5f6820, 0x3fd4f374,0xfe5f6820,0xbfd4f374,x16, 216*SIGALIGN, x17,x1, x14)

inst_376:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4f374fe5f6820 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x4f374fe5f6820 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd4f374fe5f6820; valaddr_reg:x16; op2:x26; op2val:0xbfd4f374fe5f6820
offset:734*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xfe5f6820, 0x3fd4f374,0xfe5f6820,0xbfd4f374,x16, 218*SIGALIGN, x17,x1, x14)

inst_377:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4f374fe5f6820 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x4f374fe5f6820 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd4f374fe5f6820; valaddr_reg:x16; op2:x26; op2val:0xbfd4f374fe5f6820
offset:736*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xfe5f6820, 0x3fd4f374,0xfe5f6820,0xbfd4f374,x16, 220*SIGALIGN, x17,x1, x14)

inst_378:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4f374fe5f6820 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x4f374fe5f6820 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd4f374fe5f6820; valaddr_reg:x16; op2:x26; op2val:0xbfd4f374fe5f6820
offset:738*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xfe5f6820, 0x3fd4f374,0xfe5f6820,0xbfd4f374,x16, 222*SIGALIGN, x17,x1, x14)

inst_379:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4f374fe5f6820 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x4f374fe5f6820 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd4f374fe5f6820; valaddr_reg:x16; op2:x26; op2val:0xbfd4f374fe5f6820
offset:740*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xfe5f6820, 0x3fd4f374,0xfe5f6820,0xbfd4f374,x16, 224*SIGALIGN, x17,x1, x14)

inst_380:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe247258d86c96 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe247258d86c96 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee247258d86c96; valaddr_reg:x16; op2:x26; op2val:0xbfee247258d86c96
offset:742*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x58d86c96, 0x3fee2472,0x58d86c96,0xbfee2472,x16, 226*SIGALIGN, x17,x1, x14)

inst_381:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe247258d86c96 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe247258d86c96 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee247258d86c96; valaddr_reg:x16; op2:x26; op2val:0xbfee247258d86c96
offset:744*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x58d86c96, 0x3fee2472,0x58d86c96,0xbfee2472,x16, 228*SIGALIGN, x17,x1, x14)

inst_382:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe247258d86c96 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe247258d86c96 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee247258d86c96; valaddr_reg:x16; op2:x26; op2val:0xbfee247258d86c96
offset:746*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x58d86c96, 0x3fee2472,0x58d86c96,0xbfee2472,x16, 230*SIGALIGN, x17,x1, x14)

inst_383:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe247258d86c96 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe247258d86c96 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee247258d86c96; valaddr_reg:x16; op2:x26; op2val:0xbfee247258d86c96
offset:748*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x58d86c96, 0x3fee2472,0x58d86c96,0xbfee2472,x16, 232*SIGALIGN, x17,x1, x14)

inst_384:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe247258d86c96 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe247258d86c96 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee247258d86c96; valaddr_reg:x16; op2:x26; op2val:0xbfee247258d86c96
offset:750*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x58d86c96, 0x3fee2472,0x58d86c96,0xbfee2472,x16, 234*SIGALIGN, x17,x1, x14)

inst_385:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x3c9207d68a2dc and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x3c9207d68a2dc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc3c9207d68a2dc; valaddr_reg:x16; op2:x26; op2val:0xbfc3c9207d68a2dc
offset:752*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x7d68a2dc, 0x3fc3c920,0x7d68a2dc,0xbfc3c920,x16, 236*SIGALIGN, x17,x1, x14)

inst_386:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x3c9207d68a2dc and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x3c9207d68a2dc and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc3c9207d68a2dc; valaddr_reg:x16; op2:x26; op2val:0xbfc3c9207d68a2dc
offset:754*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x7d68a2dc, 0x3fc3c920,0x7d68a2dc,0xbfc3c920,x16, 238*SIGALIGN, x17,x1, x14)

inst_387:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x3c9207d68a2dc and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x3c9207d68a2dc and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc3c9207d68a2dc; valaddr_reg:x16; op2:x26; op2val:0xbfc3c9207d68a2dc
offset:756*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x7d68a2dc, 0x3fc3c920,0x7d68a2dc,0xbfc3c920,x16, 240*SIGALIGN, x17,x1, x14)

inst_388:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x3c9207d68a2dc and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x3c9207d68a2dc and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc3c9207d68a2dc; valaddr_reg:x16; op2:x26; op2val:0xbfc3c9207d68a2dc
offset:758*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x7d68a2dc, 0x3fc3c920,0x7d68a2dc,0xbfc3c920,x16, 242*SIGALIGN, x17,x1, x14)

inst_389:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x3c9207d68a2dc and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x3c9207d68a2dc and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc3c9207d68a2dc; valaddr_reg:x16; op2:x26; op2val:0xbfc3c9207d68a2dc
offset:760*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x7d68a2dc, 0x3fc3c920,0x7d68a2dc,0xbfc3c920,x16, 244*SIGALIGN, x17,x1, x14)

inst_390:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7fa5e8b87f95c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7fa5e8b87f95c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe7fa5e8b87f95c; valaddr_reg:x16; op2:x26; op2val:0xbfe7fa5e8b87f95c
offset:762*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x8b87f95c, 0x3fe7fa5e,0x8b87f95c,0xbfe7fa5e,x16, 246*SIGALIGN, x17,x1, x14)

inst_391:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7fa5e8b87f95c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7fa5e8b87f95c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe7fa5e8b87f95c; valaddr_reg:x16; op2:x26; op2val:0xbfe7fa5e8b87f95c
offset:764*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x8b87f95c, 0x3fe7fa5e,0x8b87f95c,0xbfe7fa5e,x16, 248*SIGALIGN, x17,x1, x14)

inst_392:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7fa5e8b87f95c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7fa5e8b87f95c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe7fa5e8b87f95c; valaddr_reg:x16; op2:x26; op2val:0xbfe7fa5e8b87f95c
offset:766*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x8b87f95c, 0x3fe7fa5e,0x8b87f95c,0xbfe7fa5e,x16, 250*SIGALIGN, x17,x1, x14)

inst_393:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7fa5e8b87f95c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7fa5e8b87f95c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe7fa5e8b87f95c; valaddr_reg:x16; op2:x26; op2val:0xbfe7fa5e8b87f95c
offset:768*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x8b87f95c, 0x3fe7fa5e,0x8b87f95c,0xbfe7fa5e,x16, 252*SIGALIGN, x17,x1, x14)

inst_394:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7fa5e8b87f95c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7fa5e8b87f95c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe7fa5e8b87f95c; valaddr_reg:x16; op2:x26; op2val:0xbfe7fa5e8b87f95c
offset:770*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x8b87f95c, 0x3fe7fa5e,0x8b87f95c,0xbfe7fa5e,x16, 254*SIGALIGN, x17,x1, x14)

inst_395:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1d8903d566b6e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1d8903d566b6e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe1d8903d566b6e; valaddr_reg:x16; op2:x26; op2val:0xbfe1d8903d566b6e
offset:772*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x3d566b6e, 0x3fe1d890,0x3d566b6e,0xbfe1d890,x16, 256*SIGALIGN, x17,x1, x14)

inst_396:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1d8903d566b6e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1d8903d566b6e and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe1d8903d566b6e; valaddr_reg:x16; op2:x26; op2val:0xbfe1d8903d566b6e
offset:774*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x3d566b6e, 0x3fe1d890,0x3d566b6e,0xbfe1d890,x16, 258*SIGALIGN, x17,x1, x14)

inst_397:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1d8903d566b6e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1d8903d566b6e and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe1d8903d566b6e; valaddr_reg:x16; op2:x26; op2val:0xbfe1d8903d566b6e
offset:776*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x3d566b6e, 0x3fe1d890,0x3d566b6e,0xbfe1d890,x16, 260*SIGALIGN, x17,x1, x14)

inst_398:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1d8903d566b6e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1d8903d566b6e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe1d8903d566b6e; valaddr_reg:x16; op2:x26; op2val:0xbfe1d8903d566b6e
offset:778*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x3d566b6e, 0x3fe1d890,0x3d566b6e,0xbfe1d890,x16, 262*SIGALIGN, x17,x1, x14)

inst_399:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1d8903d566b6e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1d8903d566b6e and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe1d8903d566b6e; valaddr_reg:x16; op2:x26; op2val:0xbfe1d8903d566b6e
offset:780*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x3d566b6e, 0x3fe1d890,0x3d566b6e,0xbfe1d890,x16, 264*SIGALIGN, x17,x1, x14)

inst_400:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0e871d1465e5c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0e871d1465e5c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0e871d1465e5c; valaddr_reg:x16; op2:x26; op2val:0xbfe0e871d1465e5c
offset:782*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xd1465e5c, 0x3fe0e871,0xd1465e5c,0xbfe0e871,x16, 266*SIGALIGN, x17,x1, x14)

inst_401:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0e871d1465e5c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0e871d1465e5c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0e871d1465e5c; valaddr_reg:x16; op2:x26; op2val:0xbfe0e871d1465e5c
offset:784*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xd1465e5c, 0x3fe0e871,0xd1465e5c,0xbfe0e871,x16, 268*SIGALIGN, x17,x1, x14)

inst_402:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0e871d1465e5c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0e871d1465e5c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0e871d1465e5c; valaddr_reg:x16; op2:x26; op2val:0xbfe0e871d1465e5c
offset:786*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xd1465e5c, 0x3fe0e871,0xd1465e5c,0xbfe0e871,x16, 270*SIGALIGN, x17,x1, x14)

inst_403:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0e871d1465e5c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0e871d1465e5c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0e871d1465e5c; valaddr_reg:x16; op2:x26; op2val:0xbfe0e871d1465e5c
offset:788*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd1465e5c, 0x3fe0e871,0xd1465e5c,0xbfe0e871,x16, 272*SIGALIGN, x17,x1, x14)

inst_404:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0e871d1465e5c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0e871d1465e5c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0e871d1465e5c; valaddr_reg:x16; op2:x26; op2val:0xbfe0e871d1465e5c
offset:790*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xd1465e5c, 0x3fe0e871,0xd1465e5c,0xbfe0e871,x16, 274*SIGALIGN, x17,x1, x14)

inst_405:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb93a829006666 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb93a829006666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdb93a829006666; valaddr_reg:x16; op2:x26; op2val:0xbfdb93a829006666
offset:792*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x29006666, 0x3fdb93a8,0x29006666,0xbfdb93a8,x16, 276*SIGALIGN, x17,x1, x14)

inst_406:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb93a829006666 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb93a829006666 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdb93a829006666; valaddr_reg:x16; op2:x26; op2val:0xbfdb93a829006666
offset:794*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x29006666, 0x3fdb93a8,0x29006666,0xbfdb93a8,x16, 278*SIGALIGN, x17,x1, x14)

inst_407:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb93a829006666 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb93a829006666 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdb93a829006666; valaddr_reg:x16; op2:x26; op2val:0xbfdb93a829006666
offset:796*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x29006666, 0x3fdb93a8,0x29006666,0xbfdb93a8,x16, 280*SIGALIGN, x17,x1, x14)

inst_408:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb93a829006666 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb93a829006666 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdb93a829006666; valaddr_reg:x16; op2:x26; op2val:0xbfdb93a829006666
offset:798*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x29006666, 0x3fdb93a8,0x29006666,0xbfdb93a8,x16, 282*SIGALIGN, x17,x1, x14)

inst_409:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb93a829006666 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb93a829006666 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdb93a829006666; valaddr_reg:x16; op2:x26; op2val:0xbfdb93a829006666
offset:800*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x29006666, 0x3fdb93a8,0x29006666,0xbfdb93a8,x16, 284*SIGALIGN, x17,x1, x14)

inst_410:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x608a265677dfb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x608a265677dfb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe608a265677dfb; valaddr_reg:x16; op2:x26; op2val:0xbfe608a265677dfb
offset:802*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x65677dfb, 0x3fe608a2,0x65677dfb,0xbfe608a2,x16, 286*SIGALIGN, x17,x1, x14)

inst_411:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x608a265677dfb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x608a265677dfb and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe608a265677dfb; valaddr_reg:x16; op2:x26; op2val:0xbfe608a265677dfb
offset:804*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x65677dfb, 0x3fe608a2,0x65677dfb,0xbfe608a2,x16, 288*SIGALIGN, x17,x1, x14)

inst_412:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x608a265677dfb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x608a265677dfb and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe608a265677dfb; valaddr_reg:x16; op2:x26; op2val:0xbfe608a265677dfb
offset:806*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x65677dfb, 0x3fe608a2,0x65677dfb,0xbfe608a2,x16, 290*SIGALIGN, x17,x1, x14)

inst_413:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x608a265677dfb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x608a265677dfb and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe608a265677dfb; valaddr_reg:x16; op2:x26; op2val:0xbfe608a265677dfb
offset:808*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x65677dfb, 0x3fe608a2,0x65677dfb,0xbfe608a2,x16, 292*SIGALIGN, x17,x1, x14)

inst_414:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x608a265677dfb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x608a265677dfb and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe608a265677dfb; valaddr_reg:x16; op2:x26; op2val:0xbfe608a265677dfb
offset:810*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x65677dfb, 0x3fe608a2,0x65677dfb,0xbfe608a2,x16, 294*SIGALIGN, x17,x1, x14)

inst_415:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4c784c57a6770 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x4c784c57a6770 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc4c784c57a6770; valaddr_reg:x16; op2:x26; op2val:0xbfc4c784c57a6770
offset:812*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xc57a6770, 0x3fc4c784,0xc57a6770,0xbfc4c784,x16, 296*SIGALIGN, x17,x1, x14)

inst_416:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4c784c57a6770 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x4c784c57a6770 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc4c784c57a6770; valaddr_reg:x16; op2:x26; op2val:0xbfc4c784c57a6770
offset:814*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xc57a6770, 0x3fc4c784,0xc57a6770,0xbfc4c784,x16, 298*SIGALIGN, x17,x1, x14)

inst_417:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4c784c57a6770 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x4c784c57a6770 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc4c784c57a6770; valaddr_reg:x16; op2:x26; op2val:0xbfc4c784c57a6770
offset:816*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xc57a6770, 0x3fc4c784,0xc57a6770,0xbfc4c784,x16, 300*SIGALIGN, x17,x1, x14)

inst_418:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4c784c57a6770 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x4c784c57a6770 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc4c784c57a6770; valaddr_reg:x16; op2:x26; op2val:0xbfc4c784c57a6770
offset:818*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xc57a6770, 0x3fc4c784,0xc57a6770,0xbfc4c784,x16, 302*SIGALIGN, x17,x1, x14)

inst_419:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4c784c57a6770 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x4c784c57a6770 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc4c784c57a6770; valaddr_reg:x16; op2:x26; op2val:0xbfc4c784c57a6770
offset:820*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xc57a6770, 0x3fc4c784,0xc57a6770,0xbfc4c784,x16, 304*SIGALIGN, x17,x1, x14)

inst_420:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc1f20427931ec and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc1f20427931ec and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdc1f20427931ec; valaddr_reg:x16; op2:x26; op2val:0xbfdc1f20427931ec
offset:822*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x427931ec, 0x3fdc1f20,0x427931ec,0xbfdc1f20,x16, 306*SIGALIGN, x17,x1, x14)

inst_421:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc1f20427931ec and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc1f20427931ec and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdc1f20427931ec; valaddr_reg:x16; op2:x26; op2val:0xbfdc1f20427931ec
offset:824*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x427931ec, 0x3fdc1f20,0x427931ec,0xbfdc1f20,x16, 308*SIGALIGN, x17,x1, x14)

inst_422:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc1f20427931ec and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc1f20427931ec and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdc1f20427931ec; valaddr_reg:x16; op2:x26; op2val:0xbfdc1f20427931ec
offset:826*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x427931ec, 0x3fdc1f20,0x427931ec,0xbfdc1f20,x16, 310*SIGALIGN, x17,x1, x14)

inst_423:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc1f20427931ec and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc1f20427931ec and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdc1f20427931ec; valaddr_reg:x16; op2:x26; op2val:0xbfdc1f20427931ec
offset:828*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x427931ec, 0x3fdc1f20,0x427931ec,0xbfdc1f20,x16, 312*SIGALIGN, x17,x1, x14)

inst_424:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc1f20427931ec and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc1f20427931ec and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdc1f20427931ec; valaddr_reg:x16; op2:x26; op2val:0xbfdc1f20427931ec
offset:830*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x427931ec, 0x3fdc1f20,0x427931ec,0xbfdc1f20,x16, 314*SIGALIGN, x17,x1, x14)

inst_425:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x08a0b9f5e0e90 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x08a0b9f5e0e90 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd08a0b9f5e0e90; valaddr_reg:x16; op2:x26; op2val:0xbfd08a0b9f5e0e90
offset:832*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x9f5e0e90, 0x3fd08a0b,0x9f5e0e90,0xbfd08a0b,x16, 316*SIGALIGN, x17,x1, x14)

inst_426:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x08a0b9f5e0e90 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x08a0b9f5e0e90 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd08a0b9f5e0e90; valaddr_reg:x16; op2:x26; op2val:0xbfd08a0b9f5e0e90
offset:834*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x9f5e0e90, 0x3fd08a0b,0x9f5e0e90,0xbfd08a0b,x16, 318*SIGALIGN, x17,x1, x14)

inst_427:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x08a0b9f5e0e90 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x08a0b9f5e0e90 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd08a0b9f5e0e90; valaddr_reg:x16; op2:x26; op2val:0xbfd08a0b9f5e0e90
offset:836*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x9f5e0e90, 0x3fd08a0b,0x9f5e0e90,0xbfd08a0b,x16, 320*SIGALIGN, x17,x1, x14)

inst_428:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x08a0b9f5e0e90 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x08a0b9f5e0e90 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd08a0b9f5e0e90; valaddr_reg:x16; op2:x26; op2val:0xbfd08a0b9f5e0e90
offset:838*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x9f5e0e90, 0x3fd08a0b,0x9f5e0e90,0xbfd08a0b,x16, 322*SIGALIGN, x17,x1, x14)

inst_429:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x08a0b9f5e0e90 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x08a0b9f5e0e90 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd08a0b9f5e0e90; valaddr_reg:x16; op2:x26; op2val:0xbfd08a0b9f5e0e90
offset:840*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x9f5e0e90, 0x3fd08a0b,0x9f5e0e90,0xbfd08a0b,x16, 324*SIGALIGN, x17,x1, x14)

inst_430:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe89a781d29de9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe89a781d29de9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee89a781d29de9; valaddr_reg:x16; op2:x26; op2val:0xbfee89a781d29de9
offset:842*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x81d29de9, 0x3fee89a7,0x81d29de9,0xbfee89a7,x16, 326*SIGALIGN, x17,x1, x14)

inst_431:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe89a781d29de9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe89a781d29de9 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee89a781d29de9; valaddr_reg:x16; op2:x26; op2val:0xbfee89a781d29de9
offset:844*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x81d29de9, 0x3fee89a7,0x81d29de9,0xbfee89a7,x16, 328*SIGALIGN, x17,x1, x14)

inst_432:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe89a781d29de9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe89a781d29de9 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee89a781d29de9; valaddr_reg:x16; op2:x26; op2val:0xbfee89a781d29de9
offset:846*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x81d29de9, 0x3fee89a7,0x81d29de9,0xbfee89a7,x16, 330*SIGALIGN, x17,x1, x14)

inst_433:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe89a781d29de9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe89a781d29de9 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee89a781d29de9; valaddr_reg:x16; op2:x26; op2val:0xbfee89a781d29de9
offset:848*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x81d29de9, 0x3fee89a7,0x81d29de9,0xbfee89a7,x16, 332*SIGALIGN, x17,x1, x14)

inst_434:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe89a781d29de9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe89a781d29de9 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee89a781d29de9; valaddr_reg:x16; op2:x26; op2val:0xbfee89a781d29de9
offset:850*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x81d29de9, 0x3fee89a7,0x81d29de9,0xbfee89a7,x16, 334*SIGALIGN, x17,x1, x14)

inst_435:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x850da08f38a96 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x850da08f38a96 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe850da08f38a96; valaddr_reg:x16; op2:x26; op2val:0xbfe850da08f38a96
offset:852*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x08f38a96, 0x3fe850da,0x08f38a96,0xbfe850da,x16, 336*SIGALIGN, x17,x1, x14)

inst_436:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x850da08f38a96 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x850da08f38a96 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe850da08f38a96; valaddr_reg:x16; op2:x26; op2val:0xbfe850da08f38a96
offset:854*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x08f38a96, 0x3fe850da,0x08f38a96,0xbfe850da,x16, 338*SIGALIGN, x17,x1, x14)

inst_437:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x850da08f38a96 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x850da08f38a96 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe850da08f38a96; valaddr_reg:x16; op2:x26; op2val:0xbfe850da08f38a96
offset:856*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x08f38a96, 0x3fe850da,0x08f38a96,0xbfe850da,x16, 340*SIGALIGN, x17,x1, x14)

inst_438:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x850da08f38a96 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x850da08f38a96 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe850da08f38a96; valaddr_reg:x16; op2:x26; op2val:0xbfe850da08f38a96
offset:858*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x08f38a96, 0x3fe850da,0x08f38a96,0xbfe850da,x16, 342*SIGALIGN, x17,x1, x14)

inst_439:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x850da08f38a96 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x850da08f38a96 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe850da08f38a96; valaddr_reg:x16; op2:x26; op2val:0xbfe850da08f38a96
offset:860*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x08f38a96, 0x3fe850da,0x08f38a96,0xbfe850da,x16, 344*SIGALIGN, x17,x1, x14)

inst_440:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4ba91758f389a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4ba91758f389a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe4ba91758f389a; valaddr_reg:x16; op2:x26; op2val:0xbfe4ba91758f389a
offset:862*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x758f389a, 0x3fe4ba91,0x758f389a,0xbfe4ba91,x16, 346*SIGALIGN, x17,x1, x14)

inst_441:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4ba91758f389a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4ba91758f389a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe4ba91758f389a; valaddr_reg:x16; op2:x26; op2val:0xbfe4ba91758f389a
offset:864*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x758f389a, 0x3fe4ba91,0x758f389a,0xbfe4ba91,x16, 348*SIGALIGN, x17,x1, x14)

inst_442:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4ba91758f389a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4ba91758f389a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe4ba91758f389a; valaddr_reg:x16; op2:x26; op2val:0xbfe4ba91758f389a
offset:866*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x758f389a, 0x3fe4ba91,0x758f389a,0xbfe4ba91,x16, 350*SIGALIGN, x17,x1, x14)

inst_443:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4ba91758f389a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4ba91758f389a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe4ba91758f389a; valaddr_reg:x16; op2:x26; op2val:0xbfe4ba91758f389a
offset:868*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x758f389a, 0x3fe4ba91,0x758f389a,0xbfe4ba91,x16, 352*SIGALIGN, x17,x1, x14)

inst_444:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4ba91758f389a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4ba91758f389a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe4ba91758f389a; valaddr_reg:x16; op2:x26; op2val:0xbfe4ba91758f389a
offset:870*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x758f389a, 0x3fe4ba91,0x758f389a,0xbfe4ba91,x16, 354*SIGALIGN, x17,x1, x14)

inst_445:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4816c7da38e40 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4816c7da38e40 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe4816c7da38e40; valaddr_reg:x16; op2:x26; op2val:0xbfe4816c7da38e40
offset:872*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x7da38e40, 0x3fe4816c,0x7da38e40,0xbfe4816c,x16, 356*SIGALIGN, x17,x1, x14)

inst_446:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4816c7da38e40 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4816c7da38e40 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe4816c7da38e40; valaddr_reg:x16; op2:x26; op2val:0xbfe4816c7da38e40
offset:874*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x7da38e40, 0x3fe4816c,0x7da38e40,0xbfe4816c,x16, 358*SIGALIGN, x17,x1, x14)

inst_447:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4816c7da38e40 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4816c7da38e40 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe4816c7da38e40; valaddr_reg:x16; op2:x26; op2val:0xbfe4816c7da38e40
offset:876*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x7da38e40, 0x3fe4816c,0x7da38e40,0xbfe4816c,x16, 360*SIGALIGN, x17,x1, x14)

inst_448:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4816c7da38e40 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4816c7da38e40 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe4816c7da38e40; valaddr_reg:x16; op2:x26; op2val:0xbfe4816c7da38e40
offset:878*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x7da38e40, 0x3fe4816c,0x7da38e40,0xbfe4816c,x16, 362*SIGALIGN, x17,x1, x14)

inst_449:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4816c7da38e40 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4816c7da38e40 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe4816c7da38e40; valaddr_reg:x16; op2:x26; op2val:0xbfe4816c7da38e40
offset:880*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x7da38e40, 0x3fe4816c,0x7da38e40,0xbfe4816c,x16, 364*SIGALIGN, x17,x1, x14)

inst_450:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x770acd92b7858 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x770acd92b7858 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd770acd92b7858; valaddr_reg:x16; op2:x26; op2val:0xbfd770acd92b7858
offset:882*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xd92b7858, 0x3fd770ac,0xd92b7858,0xbfd770ac,x16, 366*SIGALIGN, x17,x1, x14)

inst_451:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x770acd92b7858 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x770acd92b7858 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd770acd92b7858; valaddr_reg:x16; op2:x26; op2val:0xbfd770acd92b7858
offset:884*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xd92b7858, 0x3fd770ac,0xd92b7858,0xbfd770ac,x16, 368*SIGALIGN, x17,x1, x14)

inst_452:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x770acd92b7858 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x770acd92b7858 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd770acd92b7858; valaddr_reg:x16; op2:x26; op2val:0xbfd770acd92b7858
offset:886*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xd92b7858, 0x3fd770ac,0xd92b7858,0xbfd770ac,x16, 370*SIGALIGN, x17,x1, x14)

inst_453:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x770acd92b7858 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x770acd92b7858 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd770acd92b7858; valaddr_reg:x16; op2:x26; op2val:0xbfd770acd92b7858
offset:888*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd92b7858, 0x3fd770ac,0xd92b7858,0xbfd770ac,x16, 372*SIGALIGN, x17,x1, x14)

inst_454:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x770acd92b7858 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x770acd92b7858 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd770acd92b7858; valaddr_reg:x16; op2:x26; op2val:0xbfd770acd92b7858
offset:890*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xd92b7858, 0x3fd770ac,0xd92b7858,0xbfd770ac,x16, 374*SIGALIGN, x17,x1, x14)

inst_455:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2334ae58482b4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2334ae58482b4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd2334ae58482b4; valaddr_reg:x16; op2:x26; op2val:0xbfd2334ae58482b4
offset:892*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe58482b4, 0x3fd2334a,0xe58482b4,0xbfd2334a,x16, 376*SIGALIGN, x17,x1, x14)

inst_456:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2334ae58482b4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2334ae58482b4 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd2334ae58482b4; valaddr_reg:x16; op2:x26; op2val:0xbfd2334ae58482b4
offset:894*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xe58482b4, 0x3fd2334a,0xe58482b4,0xbfd2334a,x16, 378*SIGALIGN, x17,x1, x14)

inst_457:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2334ae58482b4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2334ae58482b4 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd2334ae58482b4; valaddr_reg:x16; op2:x26; op2val:0xbfd2334ae58482b4
offset:896*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xe58482b4, 0x3fd2334a,0xe58482b4,0xbfd2334a,x16, 380*SIGALIGN, x17,x1, x14)

inst_458:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2334ae58482b4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2334ae58482b4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd2334ae58482b4; valaddr_reg:x16; op2:x26; op2val:0xbfd2334ae58482b4
offset:898*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe58482b4, 0x3fd2334a,0xe58482b4,0xbfd2334a,x16, 382*SIGALIGN, x17,x1, x14)

inst_459:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2334ae58482b4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2334ae58482b4 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd2334ae58482b4; valaddr_reg:x16; op2:x26; op2val:0xbfd2334ae58482b4
offset:900*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xe58482b4, 0x3fd2334a,0xe58482b4,0xbfd2334a,x16, 384*SIGALIGN, x17,x1, x14)

inst_460:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2bd167caf341d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2bd167caf341d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2bd167caf341d; valaddr_reg:x16; op2:x26; op2val:0xbfe2bd167caf341d
offset:902*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x7caf341d, 0x3fe2bd16,0x7caf341d,0xbfe2bd16,x16, 386*SIGALIGN, x17,x1, x14)

inst_461:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2bd167caf341d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2bd167caf341d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2bd167caf341d; valaddr_reg:x16; op2:x26; op2val:0xbfe2bd167caf341d
offset:904*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x7caf341d, 0x3fe2bd16,0x7caf341d,0xbfe2bd16,x16, 388*SIGALIGN, x17,x1, x14)

inst_462:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2bd167caf341d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2bd167caf341d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2bd167caf341d; valaddr_reg:x16; op2:x26; op2val:0xbfe2bd167caf341d
offset:906*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x7caf341d, 0x3fe2bd16,0x7caf341d,0xbfe2bd16,x16, 390*SIGALIGN, x17,x1, x14)

inst_463:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2bd167caf341d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2bd167caf341d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2bd167caf341d; valaddr_reg:x16; op2:x26; op2val:0xbfe2bd167caf341d
offset:908*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x7caf341d, 0x3fe2bd16,0x7caf341d,0xbfe2bd16,x16, 392*SIGALIGN, x17,x1, x14)

inst_464:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2bd167caf341d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2bd167caf341d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2bd167caf341d; valaddr_reg:x16; op2:x26; op2val:0xbfe2bd167caf341d
offset:910*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x7caf341d, 0x3fe2bd16,0x7caf341d,0xbfe2bd16,x16, 394*SIGALIGN, x17,x1, x14)

inst_465:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xff383799f273a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xff383799f273a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feff383799f273a; valaddr_reg:x16; op2:x26; op2val:0xbfeff383799f273a
offset:912*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x799f273a, 0x3feff383,0x799f273a,0xbfeff383,x16, 396*SIGALIGN, x17,x1, x14)

inst_466:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xff383799f273a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xff383799f273a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feff383799f273a; valaddr_reg:x16; op2:x26; op2val:0xbfeff383799f273a
offset:914*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x799f273a, 0x3feff383,0x799f273a,0xbfeff383,x16, 398*SIGALIGN, x17,x1, x14)

inst_467:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xff383799f273a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xff383799f273a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feff383799f273a; valaddr_reg:x16; op2:x26; op2val:0xbfeff383799f273a
offset:916*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x799f273a, 0x3feff383,0x799f273a,0xbfeff383,x16, 400*SIGALIGN, x17,x1, x14)

inst_468:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xff383799f273a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xff383799f273a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feff383799f273a; valaddr_reg:x16; op2:x26; op2val:0xbfeff383799f273a
offset:918*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x799f273a, 0x3feff383,0x799f273a,0xbfeff383,x16, 402*SIGALIGN, x17,x1, x14)

inst_469:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xff383799f273a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xff383799f273a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feff383799f273a; valaddr_reg:x16; op2:x26; op2val:0xbfeff383799f273a
offset:920*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x799f273a, 0x3feff383,0x799f273a,0xbfeff383,x16, 404*SIGALIGN, x17,x1, x14)

inst_470:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x54c94d35c140c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x54c94d35c140c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe54c94d35c140c; valaddr_reg:x16; op2:x26; op2val:0xbfe54c94d35c140c
offset:922*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xd35c140c, 0x3fe54c94,0xd35c140c,0xbfe54c94,x16, 406*SIGALIGN, x17,x1, x14)

inst_471:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x54c94d35c140c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x54c94d35c140c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe54c94d35c140c; valaddr_reg:x16; op2:x26; op2val:0xbfe54c94d35c140c
offset:924*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xd35c140c, 0x3fe54c94,0xd35c140c,0xbfe54c94,x16, 408*SIGALIGN, x17,x1, x14)

inst_472:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x54c94d35c140c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x54c94d35c140c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe54c94d35c140c; valaddr_reg:x16; op2:x26; op2val:0xbfe54c94d35c140c
offset:926*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xd35c140c, 0x3fe54c94,0xd35c140c,0xbfe54c94,x16, 410*SIGALIGN, x17,x1, x14)

inst_473:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x54c94d35c140c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x54c94d35c140c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe54c94d35c140c; valaddr_reg:x16; op2:x26; op2val:0xbfe54c94d35c140c
offset:928*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd35c140c, 0x3fe54c94,0xd35c140c,0xbfe54c94,x16, 412*SIGALIGN, x17,x1, x14)

inst_474:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x54c94d35c140c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x54c94d35c140c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe54c94d35c140c; valaddr_reg:x16; op2:x26; op2val:0xbfe54c94d35c140c
offset:930*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xd35c140c, 0x3fe54c94,0xd35c140c,0xbfe54c94,x16, 414*SIGALIGN, x17,x1, x14)

inst_475:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x734d9246a3808 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x734d9246a3808 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd734d9246a3808; valaddr_reg:x16; op2:x26; op2val:0xbfd734d9246a3808
offset:932*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x246a3808, 0x3fd734d9,0x246a3808,0xbfd734d9,x16, 416*SIGALIGN, x17,x1, x14)

inst_476:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x734d9246a3808 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x734d9246a3808 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd734d9246a3808; valaddr_reg:x16; op2:x26; op2val:0xbfd734d9246a3808
offset:934*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x246a3808, 0x3fd734d9,0x246a3808,0xbfd734d9,x16, 418*SIGALIGN, x17,x1, x14)

inst_477:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x734d9246a3808 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x734d9246a3808 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd734d9246a3808; valaddr_reg:x16; op2:x26; op2val:0xbfd734d9246a3808
offset:936*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x246a3808, 0x3fd734d9,0x246a3808,0xbfd734d9,x16, 420*SIGALIGN, x17,x1, x14)

inst_478:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x734d9246a3808 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x734d9246a3808 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd734d9246a3808; valaddr_reg:x16; op2:x26; op2val:0xbfd734d9246a3808
offset:938*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x246a3808, 0x3fd734d9,0x246a3808,0xbfd734d9,x16, 422*SIGALIGN, x17,x1, x14)

inst_479:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x734d9246a3808 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x734d9246a3808 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd734d9246a3808; valaddr_reg:x16; op2:x26; op2val:0xbfd734d9246a3808
offset:940*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x246a3808, 0x3fd734d9,0x246a3808,0xbfd734d9,x16, 424*SIGALIGN, x17,x1, x14)

inst_480:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xfe440aa706f00 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xfe440aa706f00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbfe440aa706f00; valaddr_reg:x16; op2:x26; op2val:0xbfbfe440aa706f00
offset:942*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xaa706f00, 0x3fbfe440,0xaa706f00,0xbfbfe440,x16, 426*SIGALIGN, x17,x1, x14)

inst_481:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xfe440aa706f00 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xfe440aa706f00 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbfe440aa706f00; valaddr_reg:x16; op2:x26; op2val:0xbfbfe440aa706f00
offset:944*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xaa706f00, 0x3fbfe440,0xaa706f00,0xbfbfe440,x16, 428*SIGALIGN, x17,x1, x14)

inst_482:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xfe440aa706f00 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xfe440aa706f00 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbfe440aa706f00; valaddr_reg:x16; op2:x26; op2val:0xbfbfe440aa706f00
offset:946*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xaa706f00, 0x3fbfe440,0xaa706f00,0xbfbfe440,x16, 430*SIGALIGN, x17,x1, x14)

inst_483:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xfe440aa706f00 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xfe440aa706f00 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbfe440aa706f00; valaddr_reg:x16; op2:x26; op2val:0xbfbfe440aa706f00
offset:948*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xaa706f00, 0x3fbfe440,0xaa706f00,0xbfbfe440,x16, 432*SIGALIGN, x17,x1, x14)

inst_484:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xfe440aa706f00 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xfe440aa706f00 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbfe440aa706f00; valaddr_reg:x16; op2:x26; op2val:0xbfbfe440aa706f00
offset:950*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xaa706f00, 0x3fbfe440,0xaa706f00,0xbfbfe440,x16, 434*SIGALIGN, x17,x1, x14)

inst_485:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2bd2ecbdfb28b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2bd2ecbdfb28b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2bd2ecbdfb28b; valaddr_reg:x16; op2:x26; op2val:0xbfe2bd2ecbdfb28b
offset:952*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xcbdfb28b, 0x3fe2bd2e,0xcbdfb28b,0xbfe2bd2e,x16, 436*SIGALIGN, x17,x1, x14)

inst_486:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2bd2ecbdfb28b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2bd2ecbdfb28b and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2bd2ecbdfb28b; valaddr_reg:x16; op2:x26; op2val:0xbfe2bd2ecbdfb28b
offset:954*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xcbdfb28b, 0x3fe2bd2e,0xcbdfb28b,0xbfe2bd2e,x16, 438*SIGALIGN, x17,x1, x14)

inst_487:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2bd2ecbdfb28b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2bd2ecbdfb28b and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2bd2ecbdfb28b; valaddr_reg:x16; op2:x26; op2val:0xbfe2bd2ecbdfb28b
offset:956*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xcbdfb28b, 0x3fe2bd2e,0xcbdfb28b,0xbfe2bd2e,x16, 440*SIGALIGN, x17,x1, x14)

inst_488:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2bd2ecbdfb28b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2bd2ecbdfb28b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2bd2ecbdfb28b; valaddr_reg:x16; op2:x26; op2val:0xbfe2bd2ecbdfb28b
offset:958*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xcbdfb28b, 0x3fe2bd2e,0xcbdfb28b,0xbfe2bd2e,x16, 442*SIGALIGN, x17,x1, x14)

inst_489:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2bd2ecbdfb28b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2bd2ecbdfb28b and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2bd2ecbdfb28b; valaddr_reg:x16; op2:x26; op2val:0xbfe2bd2ecbdfb28b
offset:960*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xcbdfb28b, 0x3fe2bd2e,0xcbdfb28b,0xbfe2bd2e,x16, 444*SIGALIGN, x17,x1, x14)

inst_490:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x315393375d110 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x315393375d110 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd315393375d110; valaddr_reg:x16; op2:x26; op2val:0xbfd315393375d110
offset:962*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x3375d110, 0x3fd31539,0x3375d110,0xbfd31539,x16, 446*SIGALIGN, x17,x1, x14)

inst_491:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x315393375d110 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x315393375d110 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd315393375d110; valaddr_reg:x16; op2:x26; op2val:0xbfd315393375d110
offset:964*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x3375d110, 0x3fd31539,0x3375d110,0xbfd31539,x16, 448*SIGALIGN, x17,x1, x14)

inst_492:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x315393375d110 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x315393375d110 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd315393375d110; valaddr_reg:x16; op2:x26; op2val:0xbfd315393375d110
offset:966*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x3375d110, 0x3fd31539,0x3375d110,0xbfd31539,x16, 450*SIGALIGN, x17,x1, x14)

inst_493:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x315393375d110 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x315393375d110 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd315393375d110; valaddr_reg:x16; op2:x26; op2val:0xbfd315393375d110
offset:968*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x3375d110, 0x3fd31539,0x3375d110,0xbfd31539,x16, 452*SIGALIGN, x17,x1, x14)

inst_494:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x315393375d110 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x315393375d110 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd315393375d110; valaddr_reg:x16; op2:x26; op2val:0xbfd315393375d110
offset:970*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x3375d110, 0x3fd31539,0x3375d110,0xbfd31539,x16, 454*SIGALIGN, x17,x1, x14)

inst_495:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x59e952253f4a6 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x59e952253f4a6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd59e952253f4a6; valaddr_reg:x16; op2:x26; op2val:0xbfd59e952253f4a6
offset:972*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x2253f4a6, 0x3fd59e95,0x2253f4a6,0xbfd59e95,x16, 456*SIGALIGN, x17,x1, x14)

inst_496:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x59e952253f4a6 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x59e952253f4a6 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd59e952253f4a6; valaddr_reg:x16; op2:x26; op2val:0xbfd59e952253f4a6
offset:974*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x2253f4a6, 0x3fd59e95,0x2253f4a6,0xbfd59e95,x16, 458*SIGALIGN, x17,x1, x14)

inst_497:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x59e952253f4a6 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x59e952253f4a6 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd59e952253f4a6; valaddr_reg:x16; op2:x26; op2val:0xbfd59e952253f4a6
offset:976*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x2253f4a6, 0x3fd59e95,0x2253f4a6,0xbfd59e95,x16, 460*SIGALIGN, x17,x1, x14)

inst_498:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x59e952253f4a6 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x59e952253f4a6 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd59e952253f4a6; valaddr_reg:x16; op2:x26; op2val:0xbfd59e952253f4a6
offset:978*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x2253f4a6, 0x3fd59e95,0x2253f4a6,0xbfd59e95,x16, 462*SIGALIGN, x17,x1, x14)

inst_499:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x59e952253f4a6 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x59e952253f4a6 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd59e952253f4a6; valaddr_reg:x16; op2:x26; op2val:0xbfd59e952253f4a6
offset:980*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x2253f4a6, 0x3fd59e95,0x2253f4a6,0xbfd59e95,x16, 464*SIGALIGN, x17,x1, x14)

inst_500:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1bfacc3be9497 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1bfacc3be9497 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe1bfacc3be9497; valaddr_reg:x16; op2:x26; op2val:0xbfe1bfacc3be9497
offset:982*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xc3be9497, 0x3fe1bfac,0xc3be9497,0xbfe1bfac,x16, 466*SIGALIGN, x17,x1, x14)

inst_501:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1bfacc3be9497 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1bfacc3be9497 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe1bfacc3be9497; valaddr_reg:x16; op2:x26; op2val:0xbfe1bfacc3be9497
offset:984*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xc3be9497, 0x3fe1bfac,0xc3be9497,0xbfe1bfac,x16, 468*SIGALIGN, x17,x1, x14)

inst_502:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1bfacc3be9497 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1bfacc3be9497 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe1bfacc3be9497; valaddr_reg:x16; op2:x26; op2val:0xbfe1bfacc3be9497
offset:986*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xc3be9497, 0x3fe1bfac,0xc3be9497,0xbfe1bfac,x16, 470*SIGALIGN, x17,x1, x14)

inst_503:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1bfacc3be9497 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1bfacc3be9497 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe1bfacc3be9497; valaddr_reg:x16; op2:x26; op2val:0xbfe1bfacc3be9497
offset:988*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xc3be9497, 0x3fe1bfac,0xc3be9497,0xbfe1bfac,x16, 472*SIGALIGN, x17,x1, x14)

inst_504:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1bfacc3be9497 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1bfacc3be9497 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe1bfacc3be9497; valaddr_reg:x16; op2:x26; op2val:0xbfe1bfacc3be9497
offset:990*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xc3be9497, 0x3fe1bfac,0xc3be9497,0xbfe1bfac,x16, 474*SIGALIGN, x17,x1, x14)

inst_505:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xaf43b4a36ec2c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xaf43b4a36ec2c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feaf43b4a36ec2c; valaddr_reg:x16; op2:x26; op2val:0xbfeaf43b4a36ec2c
offset:992*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x4a36ec2c, 0x3feaf43b,0x4a36ec2c,0xbfeaf43b,x16, 476*SIGALIGN, x17,x1, x14)

inst_506:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xaf43b4a36ec2c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xaf43b4a36ec2c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feaf43b4a36ec2c; valaddr_reg:x16; op2:x26; op2val:0xbfeaf43b4a36ec2c
offset:994*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x4a36ec2c, 0x3feaf43b,0x4a36ec2c,0xbfeaf43b,x16, 478*SIGALIGN, x17,x1, x14)

inst_507:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xaf43b4a36ec2c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xaf43b4a36ec2c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feaf43b4a36ec2c; valaddr_reg:x16; op2:x26; op2val:0xbfeaf43b4a36ec2c
offset:996*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x4a36ec2c, 0x3feaf43b,0x4a36ec2c,0xbfeaf43b,x16, 480*SIGALIGN, x17,x1, x14)

inst_508:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xaf43b4a36ec2c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xaf43b4a36ec2c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feaf43b4a36ec2c; valaddr_reg:x16; op2:x26; op2val:0xbfeaf43b4a36ec2c
offset:998*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x4a36ec2c, 0x3feaf43b,0x4a36ec2c,0xbfeaf43b,x16, 482*SIGALIGN, x17,x1, x14)

inst_509:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xaf43b4a36ec2c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xaf43b4a36ec2c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feaf43b4a36ec2c; valaddr_reg:x16; op2:x26; op2val:0xbfeaf43b4a36ec2c
offset:1000*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x4a36ec2c, 0x3feaf43b,0x4a36ec2c,0xbfeaf43b,x16, 484*SIGALIGN, x17,x1, x14)

inst_510:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x06851f85e2acd and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x06851f85e2acd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe06851f85e2acd; valaddr_reg:x16; op2:x26; op2val:0xbfe06851f85e2acd
offset:1002*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf85e2acd, 0x3fe06851,0xf85e2acd,0xbfe06851,x16, 486*SIGALIGN, x17,x1, x14)

inst_511:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x06851f85e2acd and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x06851f85e2acd and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe06851f85e2acd; valaddr_reg:x16; op2:x26; op2val:0xbfe06851f85e2acd
offset:1004*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xf85e2acd, 0x3fe06851,0xf85e2acd,0xbfe06851,x16, 488*SIGALIGN, x17,x1, x14)

inst_512:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x06851f85e2acd and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x06851f85e2acd and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe06851f85e2acd; valaddr_reg:x16; op2:x26; op2val:0xbfe06851f85e2acd
offset:1006*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xf85e2acd, 0x3fe06851,0xf85e2acd,0xbfe06851,x16, 490*SIGALIGN, x17,x1, x14)

inst_513:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x06851f85e2acd and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x06851f85e2acd and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe06851f85e2acd; valaddr_reg:x16; op2:x26; op2val:0xbfe06851f85e2acd
offset:1008*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf85e2acd, 0x3fe06851,0xf85e2acd,0xbfe06851,x16, 492*SIGALIGN, x17,x1, x14)

inst_514:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x06851f85e2acd and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x06851f85e2acd and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe06851f85e2acd; valaddr_reg:x16; op2:x26; op2val:0xbfe06851f85e2acd
offset:1010*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xf85e2acd, 0x3fe06851,0xf85e2acd,0xbfe06851,x16, 494*SIGALIGN, x17,x1, x14)

inst_515:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xf4c466fffb77c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xf4c466fffb77c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcf4c466fffb77c; valaddr_reg:x16; op2:x26; op2val:0xbfcf4c466fffb77c
offset:1012*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x6fffb77c, 0x3fcf4c46,0x6fffb77c,0xbfcf4c46,x16, 496*SIGALIGN, x17,x1, x14)

inst_516:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xf4c466fffb77c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xf4c466fffb77c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcf4c466fffb77c; valaddr_reg:x16; op2:x26; op2val:0xbfcf4c466fffb77c
offset:1014*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x6fffb77c, 0x3fcf4c46,0x6fffb77c,0xbfcf4c46,x16, 498*SIGALIGN, x17,x1, x14)

inst_517:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xf4c466fffb77c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xf4c466fffb77c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcf4c466fffb77c; valaddr_reg:x16; op2:x26; op2val:0xbfcf4c466fffb77c
offset:1016*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x6fffb77c, 0x3fcf4c46,0x6fffb77c,0xbfcf4c46,x16, 500*SIGALIGN, x17,x1, x14)

inst_518:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xf4c466fffb77c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xf4c466fffb77c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcf4c466fffb77c; valaddr_reg:x16; op2:x26; op2val:0xbfcf4c466fffb77c
offset:1018*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x6fffb77c, 0x3fcf4c46,0x6fffb77c,0xbfcf4c46,x16, 502*SIGALIGN, x17,x1, x14)

inst_519:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xf4c466fffb77c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xf4c466fffb77c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcf4c466fffb77c; valaddr_reg:x16; op2:x26; op2val:0xbfcf4c466fffb77c
offset:1020*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x6fffb77c, 0x3fcf4c46,0x6fffb77c,0xbfcf4c46,x16, 504*SIGALIGN, x17,x1, x14)

inst_520:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x02c60f6b23bc3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x02c60f6b23bc3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe02c60f6b23bc3; valaddr_reg:x16; op2:x26; op2val:0xbfe02c60f6b23bc3
offset:1022*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf6b23bc3, 0x3fe02c60,0xf6b23bc3,0xbfe02c60,x16, 506*SIGALIGN, x17,x1, x14)

inst_521:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x02c60f6b23bc3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x02c60f6b23bc3 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe02c60f6b23bc3; valaddr_reg:x16; op2:x26; op2val:0xbfe02c60f6b23bc3
offset:1024*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xf6b23bc3, 0x3fe02c60,0xf6b23bc3,0xbfe02c60,x16, 508*SIGALIGN, x17,x1, x14)

inst_522:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x02c60f6b23bc3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x02c60f6b23bc3 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe02c60f6b23bc3; valaddr_reg:x16; op2:x26; op2val:0xbfe02c60f6b23bc3
offset:1026*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xf6b23bc3, 0x3fe02c60,0xf6b23bc3,0xbfe02c60,x16, 510*SIGALIGN, x17,x1, x14)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_523:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x02c60f6b23bc3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x02c60f6b23bc3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe02c60f6b23bc3; valaddr_reg:x16; op2:x26; op2val:0xbfe02c60f6b23bc3
offset:1028*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf6b23bc3, 0x3fe02c60,0xf6b23bc3,0xbfe02c60,x16, 0*SIGALIGN, x17,x1, x14)

inst_524:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x02c60f6b23bc3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x02c60f6b23bc3 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe02c60f6b23bc3; valaddr_reg:x16; op2:x26; op2val:0xbfe02c60f6b23bc3
offset:1030*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xf6b23bc3, 0x3fe02c60,0xf6b23bc3,0xbfe02c60,x16, 2*SIGALIGN, x17,x1, x14)

inst_525:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x10f3803ccf24a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x10f3803ccf24a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe10f3803ccf24a; valaddr_reg:x16; op2:x26; op2val:0xbfe10f3803ccf24a
offset:1032*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x03ccf24a, 0x3fe10f38,0x03ccf24a,0xbfe10f38,x16, 4*SIGALIGN, x17,x1, x14)

inst_526:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x10f3803ccf24a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x10f3803ccf24a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe10f3803ccf24a; valaddr_reg:x16; op2:x26; op2val:0xbfe10f3803ccf24a
offset:1034*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x03ccf24a, 0x3fe10f38,0x03ccf24a,0xbfe10f38,x16, 6*SIGALIGN, x17,x1, x14)

inst_527:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x10f3803ccf24a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x10f3803ccf24a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe10f3803ccf24a; valaddr_reg:x16; op2:x26; op2val:0xbfe10f3803ccf24a
offset:1036*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x03ccf24a, 0x3fe10f38,0x03ccf24a,0xbfe10f38,x16, 8*SIGALIGN, x17,x1, x14)

inst_528:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x10f3803ccf24a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x10f3803ccf24a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe10f3803ccf24a; valaddr_reg:x16; op2:x26; op2val:0xbfe10f3803ccf24a
offset:1038*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x03ccf24a, 0x3fe10f38,0x03ccf24a,0xbfe10f38,x16, 10*SIGALIGN, x17,x1, x14)

inst_529:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x10f3803ccf24a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x10f3803ccf24a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe10f3803ccf24a; valaddr_reg:x16; op2:x26; op2val:0xbfe10f3803ccf24a
offset:1040*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x03ccf24a, 0x3fe10f38,0x03ccf24a,0xbfe10f38,x16, 12*SIGALIGN, x17,x1, x14)

inst_530:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xffeee00d38b08 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xffeee00d38b08 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbffeee00d38b08; valaddr_reg:x16; op2:x26; op2val:0xbfbffeee00d38b08
offset:1042*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00d38b08, 0x3fbffeee,0x00d38b08,0xbfbffeee,x16, 14*SIGALIGN, x17,x1, x14)

inst_531:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xffeee00d38b08 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xffeee00d38b08 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbffeee00d38b08; valaddr_reg:x16; op2:x26; op2val:0xbfbffeee00d38b08
offset:1044*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x00d38b08, 0x3fbffeee,0x00d38b08,0xbfbffeee,x16, 16*SIGALIGN, x17,x1, x14)

inst_532:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xffeee00d38b08 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xffeee00d38b08 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbffeee00d38b08; valaddr_reg:x16; op2:x26; op2val:0xbfbffeee00d38b08
offset:1046*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x00d38b08, 0x3fbffeee,0x00d38b08,0xbfbffeee,x16, 18*SIGALIGN, x17,x1, x14)

inst_533:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xffeee00d38b08 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xffeee00d38b08 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbffeee00d38b08; valaddr_reg:x16; op2:x26; op2val:0xbfbffeee00d38b08
offset:1048*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x00d38b08, 0x3fbffeee,0x00d38b08,0xbfbffeee,x16, 20*SIGALIGN, x17,x1, x14)

inst_534:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xffeee00d38b08 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xffeee00d38b08 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbffeee00d38b08; valaddr_reg:x16; op2:x26; op2val:0xbfbffeee00d38b08
offset:1050*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x00d38b08, 0x3fbffeee,0x00d38b08,0xbfbffeee,x16, 22*SIGALIGN, x17,x1, x14)

inst_535:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9fbe4b5ce45c0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9fbe4b5ce45c0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe9fbe4b5ce45c0; valaddr_reg:x16; op2:x26; op2val:0xbfe9fbe4b5ce45c0
offset:1052*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xb5ce45c0, 0x3fe9fbe4,0xb5ce45c0,0xbfe9fbe4,x16, 24*SIGALIGN, x17,x1, x14)

inst_536:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9fbe4b5ce45c0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9fbe4b5ce45c0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe9fbe4b5ce45c0; valaddr_reg:x16; op2:x26; op2val:0xbfe9fbe4b5ce45c0
offset:1054*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xb5ce45c0, 0x3fe9fbe4,0xb5ce45c0,0xbfe9fbe4,x16, 26*SIGALIGN, x17,x1, x14)

inst_537:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9fbe4b5ce45c0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9fbe4b5ce45c0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe9fbe4b5ce45c0; valaddr_reg:x16; op2:x26; op2val:0xbfe9fbe4b5ce45c0
offset:1056*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xb5ce45c0, 0x3fe9fbe4,0xb5ce45c0,0xbfe9fbe4,x16, 28*SIGALIGN, x17,x1, x14)

inst_538:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9fbe4b5ce45c0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9fbe4b5ce45c0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe9fbe4b5ce45c0; valaddr_reg:x16; op2:x26; op2val:0xbfe9fbe4b5ce45c0
offset:1058*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xb5ce45c0, 0x3fe9fbe4,0xb5ce45c0,0xbfe9fbe4,x16, 30*SIGALIGN, x17,x1, x14)

inst_539:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9fbe4b5ce45c0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9fbe4b5ce45c0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe9fbe4b5ce45c0; valaddr_reg:x16; op2:x26; op2val:0xbfe9fbe4b5ce45c0
offset:1060*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xb5ce45c0, 0x3fe9fbe4,0xb5ce45c0,0xbfe9fbe4,x16, 32*SIGALIGN, x17,x1, x14)

inst_540:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x77b79482be294 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x77b79482be294 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd77b79482be294; valaddr_reg:x16; op2:x26; op2val:0xbfd77b79482be294
offset:1062*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x482be294, 0x3fd77b79,0x482be294,0xbfd77b79,x16, 34*SIGALIGN, x17,x1, x14)

inst_541:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x77b79482be294 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x77b79482be294 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd77b79482be294; valaddr_reg:x16; op2:x26; op2val:0xbfd77b79482be294
offset:1064*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x482be294, 0x3fd77b79,0x482be294,0xbfd77b79,x16, 36*SIGALIGN, x17,x1, x14)

inst_542:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x77b79482be294 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x77b79482be294 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd77b79482be294; valaddr_reg:x16; op2:x26; op2val:0xbfd77b79482be294
offset:1066*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x482be294, 0x3fd77b79,0x482be294,0xbfd77b79,x16, 38*SIGALIGN, x17,x1, x14)

inst_543:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x77b79482be294 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x77b79482be294 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd77b79482be294; valaddr_reg:x16; op2:x26; op2val:0xbfd77b79482be294
offset:1068*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x482be294, 0x3fd77b79,0x482be294,0xbfd77b79,x16, 40*SIGALIGN, x17,x1, x14)

inst_544:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x77b79482be294 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x77b79482be294 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd77b79482be294; valaddr_reg:x16; op2:x26; op2val:0xbfd77b79482be294
offset:1070*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x482be294, 0x3fd77b79,0x482be294,0xbfd77b79,x16, 42*SIGALIGN, x17,x1, x14)

inst_545:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1908476f4b104 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x1908476f4b104 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd1908476f4b104; valaddr_reg:x16; op2:x26; op2val:0xbfd1908476f4b104
offset:1072*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x76f4b104, 0x3fd19084,0x76f4b104,0xbfd19084,x16, 44*SIGALIGN, x17,x1, x14)

inst_546:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1908476f4b104 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x1908476f4b104 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd1908476f4b104; valaddr_reg:x16; op2:x26; op2val:0xbfd1908476f4b104
offset:1074*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x76f4b104, 0x3fd19084,0x76f4b104,0xbfd19084,x16, 46*SIGALIGN, x17,x1, x14)

inst_547:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1908476f4b104 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x1908476f4b104 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd1908476f4b104; valaddr_reg:x16; op2:x26; op2val:0xbfd1908476f4b104
offset:1076*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x76f4b104, 0x3fd19084,0x76f4b104,0xbfd19084,x16, 48*SIGALIGN, x17,x1, x14)

inst_548:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1908476f4b104 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x1908476f4b104 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd1908476f4b104; valaddr_reg:x16; op2:x26; op2val:0xbfd1908476f4b104
offset:1078*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x76f4b104, 0x3fd19084,0x76f4b104,0xbfd19084,x16, 50*SIGALIGN, x17,x1, x14)

inst_549:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1908476f4b104 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x1908476f4b104 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd1908476f4b104; valaddr_reg:x16; op2:x26; op2val:0xbfd1908476f4b104
offset:1080*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x76f4b104, 0x3fd19084,0x76f4b104,0xbfd19084,x16, 52*SIGALIGN, x17,x1, x14)

inst_550:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x324510c33a9d0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x324510c33a9d0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe324510c33a9d0; valaddr_reg:x16; op2:x26; op2val:0xbfe324510c33a9d0
offset:1082*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0c33a9d0, 0x3fe32451,0x0c33a9d0,0xbfe32451,x16, 54*SIGALIGN, x17,x1, x14)

inst_551:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x324510c33a9d0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x324510c33a9d0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe324510c33a9d0; valaddr_reg:x16; op2:x26; op2val:0xbfe324510c33a9d0
offset:1084*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x0c33a9d0, 0x3fe32451,0x0c33a9d0,0xbfe32451,x16, 56*SIGALIGN, x17,x1, x14)

inst_552:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x324510c33a9d0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x324510c33a9d0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe324510c33a9d0; valaddr_reg:x16; op2:x26; op2val:0xbfe324510c33a9d0
offset:1086*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x0c33a9d0, 0x3fe32451,0x0c33a9d0,0xbfe32451,x16, 58*SIGALIGN, x17,x1, x14)

inst_553:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x324510c33a9d0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x324510c33a9d0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe324510c33a9d0; valaddr_reg:x16; op2:x26; op2val:0xbfe324510c33a9d0
offset:1088*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x0c33a9d0, 0x3fe32451,0x0c33a9d0,0xbfe32451,x16, 60*SIGALIGN, x17,x1, x14)

inst_554:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x324510c33a9d0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x324510c33a9d0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe324510c33a9d0; valaddr_reg:x16; op2:x26; op2val:0xbfe324510c33a9d0
offset:1090*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x0c33a9d0, 0x3fe32451,0x0c33a9d0,0xbfe32451,x16, 62*SIGALIGN, x17,x1, x14)

inst_555:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5e1e07bfc8699 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5e1e07bfc8699 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe5e1e07bfc8699; valaddr_reg:x16; op2:x26; op2val:0xbfe5e1e07bfc8699
offset:1092*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x7bfc8699, 0x3fe5e1e0,0x7bfc8699,0xbfe5e1e0,x16, 64*SIGALIGN, x17,x1, x14)

inst_556:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5e1e07bfc8699 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5e1e07bfc8699 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe5e1e07bfc8699; valaddr_reg:x16; op2:x26; op2val:0xbfe5e1e07bfc8699
offset:1094*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x7bfc8699, 0x3fe5e1e0,0x7bfc8699,0xbfe5e1e0,x16, 66*SIGALIGN, x17,x1, x14)

inst_557:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5e1e07bfc8699 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5e1e07bfc8699 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe5e1e07bfc8699; valaddr_reg:x16; op2:x26; op2val:0xbfe5e1e07bfc8699
offset:1096*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x7bfc8699, 0x3fe5e1e0,0x7bfc8699,0xbfe5e1e0,x16, 68*SIGALIGN, x17,x1, x14)

inst_558:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5e1e07bfc8699 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5e1e07bfc8699 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe5e1e07bfc8699; valaddr_reg:x16; op2:x26; op2val:0xbfe5e1e07bfc8699
offset:1098*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x7bfc8699, 0x3fe5e1e0,0x7bfc8699,0xbfe5e1e0,x16, 70*SIGALIGN, x17,x1, x14)

inst_559:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5e1e07bfc8699 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5e1e07bfc8699 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe5e1e07bfc8699; valaddr_reg:x16; op2:x26; op2val:0xbfe5e1e07bfc8699
offset:1100*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x7bfc8699, 0x3fe5e1e0,0x7bfc8699,0xbfe5e1e0,x16, 72*SIGALIGN, x17,x1, x14)

inst_560:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2175c79f643a2 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2175c79f643a2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd2175c79f643a2; valaddr_reg:x16; op2:x26; op2val:0xbfd2175c79f643a2
offset:1102*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x79f643a2, 0x3fd2175c,0x79f643a2,0xbfd2175c,x16, 74*SIGALIGN, x17,x1, x14)

inst_561:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2175c79f643a2 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2175c79f643a2 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd2175c79f643a2; valaddr_reg:x16; op2:x26; op2val:0xbfd2175c79f643a2
offset:1104*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x79f643a2, 0x3fd2175c,0x79f643a2,0xbfd2175c,x16, 76*SIGALIGN, x17,x1, x14)

inst_562:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2175c79f643a2 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2175c79f643a2 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd2175c79f643a2; valaddr_reg:x16; op2:x26; op2val:0xbfd2175c79f643a2
offset:1106*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x79f643a2, 0x3fd2175c,0x79f643a2,0xbfd2175c,x16, 78*SIGALIGN, x17,x1, x14)

inst_563:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2175c79f643a2 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2175c79f643a2 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd2175c79f643a2; valaddr_reg:x16; op2:x26; op2val:0xbfd2175c79f643a2
offset:1108*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x79f643a2, 0x3fd2175c,0x79f643a2,0xbfd2175c,x16, 80*SIGALIGN, x17,x1, x14)

inst_564:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2175c79f643a2 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2175c79f643a2 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd2175c79f643a2; valaddr_reg:x16; op2:x26; op2val:0xbfd2175c79f643a2
offset:1110*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x79f643a2, 0x3fd2175c,0x79f643a2,0xbfd2175c,x16, 82*SIGALIGN, x17,x1, x14)

inst_565:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x6b0bcb530144c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x6b0bcb530144c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc6b0bcb530144c; valaddr_reg:x16; op2:x26; op2val:0xbfc6b0bcb530144c
offset:1112*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xb530144c, 0x3fc6b0bc,0xb530144c,0xbfc6b0bc,x16, 84*SIGALIGN, x17,x1, x14)

inst_566:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x6b0bcb530144c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x6b0bcb530144c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc6b0bcb530144c; valaddr_reg:x16; op2:x26; op2val:0xbfc6b0bcb530144c
offset:1114*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xb530144c, 0x3fc6b0bc,0xb530144c,0xbfc6b0bc,x16, 86*SIGALIGN, x17,x1, x14)

inst_567:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x6b0bcb530144c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x6b0bcb530144c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc6b0bcb530144c; valaddr_reg:x16; op2:x26; op2val:0xbfc6b0bcb530144c
offset:1116*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xb530144c, 0x3fc6b0bc,0xb530144c,0xbfc6b0bc,x16, 88*SIGALIGN, x17,x1, x14)

inst_568:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x6b0bcb530144c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x6b0bcb530144c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc6b0bcb530144c; valaddr_reg:x16; op2:x26; op2val:0xbfc6b0bcb530144c
offset:1118*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xb530144c, 0x3fc6b0bc,0xb530144c,0xbfc6b0bc,x16, 90*SIGALIGN, x17,x1, x14)

inst_569:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x6b0bcb530144c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x6b0bcb530144c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc6b0bcb530144c; valaddr_reg:x16; op2:x26; op2val:0xbfc6b0bcb530144c
offset:1120*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xb530144c, 0x3fc6b0bc,0xb530144c,0xbfc6b0bc,x16, 92*SIGALIGN, x17,x1, x14)

inst_570:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcdef35f3cf813 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcdef35f3cf813 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fecdef35f3cf813; valaddr_reg:x16; op2:x26; op2val:0xbfecdef35f3cf813
offset:1122*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x5f3cf813, 0x3fecdef3,0x5f3cf813,0xbfecdef3,x16, 94*SIGALIGN, x17,x1, x14)

inst_571:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcdef35f3cf813 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcdef35f3cf813 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fecdef35f3cf813; valaddr_reg:x16; op2:x26; op2val:0xbfecdef35f3cf813
offset:1124*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x5f3cf813, 0x3fecdef3,0x5f3cf813,0xbfecdef3,x16, 96*SIGALIGN, x17,x1, x14)

inst_572:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcdef35f3cf813 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcdef35f3cf813 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fecdef35f3cf813; valaddr_reg:x16; op2:x26; op2val:0xbfecdef35f3cf813
offset:1126*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x5f3cf813, 0x3fecdef3,0x5f3cf813,0xbfecdef3,x16, 98*SIGALIGN, x17,x1, x14)

inst_573:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcdef35f3cf813 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcdef35f3cf813 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fecdef35f3cf813; valaddr_reg:x16; op2:x26; op2val:0xbfecdef35f3cf813
offset:1128*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x5f3cf813, 0x3fecdef3,0x5f3cf813,0xbfecdef3,x16, 100*SIGALIGN, x17,x1, x14)

inst_574:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcdef35f3cf813 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcdef35f3cf813 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fecdef35f3cf813; valaddr_reg:x16; op2:x26; op2val:0xbfecdef35f3cf813
offset:1130*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x5f3cf813, 0x3fecdef3,0x5f3cf813,0xbfecdef3,x16, 102*SIGALIGN, x17,x1, x14)

inst_575:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6726f6e697040 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x6726f6e697040 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd6726f6e697040; valaddr_reg:x16; op2:x26; op2val:0xbfd6726f6e697040
offset:1132*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x6e697040, 0x3fd6726f,0x6e697040,0xbfd6726f,x16, 104*SIGALIGN, x17,x1, x14)

inst_576:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6726f6e697040 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x6726f6e697040 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd6726f6e697040; valaddr_reg:x16; op2:x26; op2val:0xbfd6726f6e697040
offset:1134*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x6e697040, 0x3fd6726f,0x6e697040,0xbfd6726f,x16, 106*SIGALIGN, x17,x1, x14)

inst_577:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6726f6e697040 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x6726f6e697040 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd6726f6e697040; valaddr_reg:x16; op2:x26; op2val:0xbfd6726f6e697040
offset:1136*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x6e697040, 0x3fd6726f,0x6e697040,0xbfd6726f,x16, 108*SIGALIGN, x17,x1, x14)

inst_578:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6726f6e697040 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x6726f6e697040 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd6726f6e697040; valaddr_reg:x16; op2:x26; op2val:0xbfd6726f6e697040
offset:1138*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x6e697040, 0x3fd6726f,0x6e697040,0xbfd6726f,x16, 110*SIGALIGN, x17,x1, x14)

inst_579:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6726f6e697040 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x6726f6e697040 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd6726f6e697040; valaddr_reg:x16; op2:x26; op2val:0xbfd6726f6e697040
offset:1140*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x6e697040, 0x3fd6726f,0x6e697040,0xbfd6726f,x16, 112*SIGALIGN, x17,x1, x14)

inst_580:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x70a61a13eef5f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x70a61a13eef5f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe70a61a13eef5f; valaddr_reg:x16; op2:x26; op2val:0xbfe70a61a13eef5f
offset:1142*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xa13eef5f, 0x3fe70a61,0xa13eef5f,0xbfe70a61,x16, 114*SIGALIGN, x17,x1, x14)

inst_581:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x70a61a13eef5f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x70a61a13eef5f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe70a61a13eef5f; valaddr_reg:x16; op2:x26; op2val:0xbfe70a61a13eef5f
offset:1144*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xa13eef5f, 0x3fe70a61,0xa13eef5f,0xbfe70a61,x16, 116*SIGALIGN, x17,x1, x14)

inst_582:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x70a61a13eef5f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x70a61a13eef5f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe70a61a13eef5f; valaddr_reg:x16; op2:x26; op2val:0xbfe70a61a13eef5f
offset:1146*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xa13eef5f, 0x3fe70a61,0xa13eef5f,0xbfe70a61,x16, 118*SIGALIGN, x17,x1, x14)

inst_583:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x70a61a13eef5f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x70a61a13eef5f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe70a61a13eef5f; valaddr_reg:x16; op2:x26; op2val:0xbfe70a61a13eef5f
offset:1148*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xa13eef5f, 0x3fe70a61,0xa13eef5f,0xbfe70a61,x16, 120*SIGALIGN, x17,x1, x14)

inst_584:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x70a61a13eef5f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x70a61a13eef5f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe70a61a13eef5f; valaddr_reg:x16; op2:x26; op2val:0xbfe70a61a13eef5f
offset:1150*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xa13eef5f, 0x3fe70a61,0xa13eef5f,0xbfe70a61,x16, 122*SIGALIGN, x17,x1, x14)

inst_585:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xccb51de18fae1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xccb51de18fae1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feccb51de18fae1; valaddr_reg:x16; op2:x26; op2val:0xbfeccb51de18fae1
offset:1152*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xde18fae1, 0x3feccb51,0xde18fae1,0xbfeccb51,x16, 124*SIGALIGN, x17,x1, x14)

inst_586:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xccb51de18fae1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xccb51de18fae1 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feccb51de18fae1; valaddr_reg:x16; op2:x26; op2val:0xbfeccb51de18fae1
offset:1154*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xde18fae1, 0x3feccb51,0xde18fae1,0xbfeccb51,x16, 126*SIGALIGN, x17,x1, x14)

inst_587:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xccb51de18fae1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xccb51de18fae1 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feccb51de18fae1; valaddr_reg:x16; op2:x26; op2val:0xbfeccb51de18fae1
offset:1156*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xde18fae1, 0x3feccb51,0xde18fae1,0xbfeccb51,x16, 128*SIGALIGN, x17,x1, x14)

inst_588:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xccb51de18fae1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xccb51de18fae1 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feccb51de18fae1; valaddr_reg:x16; op2:x26; op2val:0xbfeccb51de18fae1
offset:1158*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xde18fae1, 0x3feccb51,0xde18fae1,0xbfeccb51,x16, 130*SIGALIGN, x17,x1, x14)

inst_589:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xccb51de18fae1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xccb51de18fae1 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feccb51de18fae1; valaddr_reg:x16; op2:x26; op2val:0xbfeccb51de18fae1
offset:1160*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xde18fae1, 0x3feccb51,0xde18fae1,0xbfeccb51,x16, 132*SIGALIGN, x17,x1, x14)

inst_590:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x34e43d17d4c2d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x34e43d17d4c2d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe34e43d17d4c2d; valaddr_reg:x16; op2:x26; op2val:0xbfe34e43d17d4c2d
offset:1162*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xd17d4c2d, 0x3fe34e43,0xd17d4c2d,0xbfe34e43,x16, 134*SIGALIGN, x17,x1, x14)

inst_591:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x34e43d17d4c2d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x34e43d17d4c2d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe34e43d17d4c2d; valaddr_reg:x16; op2:x26; op2val:0xbfe34e43d17d4c2d
offset:1164*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xd17d4c2d, 0x3fe34e43,0xd17d4c2d,0xbfe34e43,x16, 136*SIGALIGN, x17,x1, x14)

inst_592:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x34e43d17d4c2d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x34e43d17d4c2d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe34e43d17d4c2d; valaddr_reg:x16; op2:x26; op2val:0xbfe34e43d17d4c2d
offset:1166*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xd17d4c2d, 0x3fe34e43,0xd17d4c2d,0xbfe34e43,x16, 138*SIGALIGN, x17,x1, x14)

inst_593:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x34e43d17d4c2d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x34e43d17d4c2d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe34e43d17d4c2d; valaddr_reg:x16; op2:x26; op2val:0xbfe34e43d17d4c2d
offset:1168*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd17d4c2d, 0x3fe34e43,0xd17d4c2d,0xbfe34e43,x16, 140*SIGALIGN, x17,x1, x14)

inst_594:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x34e43d17d4c2d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x34e43d17d4c2d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe34e43d17d4c2d; valaddr_reg:x16; op2:x26; op2val:0xbfe34e43d17d4c2d
offset:1170*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xd17d4c2d, 0x3fe34e43,0xd17d4c2d,0xbfe34e43,x16, 142*SIGALIGN, x17,x1, x14)

inst_595:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7358b50582f8d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7358b50582f8d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe7358b50582f8d; valaddr_reg:x16; op2:x26; op2val:0xbfe7358b50582f8d
offset:1172*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x50582f8d, 0x3fe7358b,0x50582f8d,0xbfe7358b,x16, 144*SIGALIGN, x17,x1, x14)

inst_596:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7358b50582f8d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7358b50582f8d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe7358b50582f8d; valaddr_reg:x16; op2:x26; op2val:0xbfe7358b50582f8d
offset:1174*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x50582f8d, 0x3fe7358b,0x50582f8d,0xbfe7358b,x16, 146*SIGALIGN, x17,x1, x14)

inst_597:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7358b50582f8d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7358b50582f8d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe7358b50582f8d; valaddr_reg:x16; op2:x26; op2val:0xbfe7358b50582f8d
offset:1176*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x50582f8d, 0x3fe7358b,0x50582f8d,0xbfe7358b,x16, 148*SIGALIGN, x17,x1, x14)

inst_598:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7358b50582f8d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7358b50582f8d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe7358b50582f8d; valaddr_reg:x16; op2:x26; op2val:0xbfe7358b50582f8d
offset:1178*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x50582f8d, 0x3fe7358b,0x50582f8d,0xbfe7358b,x16, 150*SIGALIGN, x17,x1, x14)

inst_599:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7358b50582f8d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7358b50582f8d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe7358b50582f8d; valaddr_reg:x16; op2:x26; op2val:0xbfe7358b50582f8d
offset:1180*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x50582f8d, 0x3fe7358b,0x50582f8d,0xbfe7358b,x16, 152*SIGALIGN, x17,x1, x14)

inst_600:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa948d7e25c484 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa948d7e25c484 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fca948d7e25c484; valaddr_reg:x16; op2:x26; op2val:0xbfca948d7e25c484
offset:1182*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x7e25c484, 0x3fca948d,0x7e25c484,0xbfca948d,x16, 154*SIGALIGN, x17,x1, x14)

inst_601:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa948d7e25c484 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa948d7e25c484 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fca948d7e25c484; valaddr_reg:x16; op2:x26; op2val:0xbfca948d7e25c484
offset:1184*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x7e25c484, 0x3fca948d,0x7e25c484,0xbfca948d,x16, 156*SIGALIGN, x17,x1, x14)

inst_602:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa948d7e25c484 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa948d7e25c484 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fca948d7e25c484; valaddr_reg:x16; op2:x26; op2val:0xbfca948d7e25c484
offset:1186*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x7e25c484, 0x3fca948d,0x7e25c484,0xbfca948d,x16, 158*SIGALIGN, x17,x1, x14)

inst_603:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa948d7e25c484 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa948d7e25c484 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fca948d7e25c484; valaddr_reg:x16; op2:x26; op2val:0xbfca948d7e25c484
offset:1188*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x7e25c484, 0x3fca948d,0x7e25c484,0xbfca948d,x16, 160*SIGALIGN, x17,x1, x14)

inst_604:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa948d7e25c484 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa948d7e25c484 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fca948d7e25c484; valaddr_reg:x16; op2:x26; op2val:0xbfca948d7e25c484
offset:1190*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x7e25c484, 0x3fca948d,0x7e25c484,0xbfca948d,x16, 162*SIGALIGN, x17,x1, x14)

inst_605:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbbb04d162bf56 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xbbb04d162bf56 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3febbb04d162bf56; valaddr_reg:x16; op2:x26; op2val:0xbfebbb04d162bf56
offset:1192*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xd162bf56, 0x3febbb04,0xd162bf56,0xbfebbb04,x16, 164*SIGALIGN, x17,x1, x14)

inst_606:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbbb04d162bf56 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xbbb04d162bf56 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3febbb04d162bf56; valaddr_reg:x16; op2:x26; op2val:0xbfebbb04d162bf56
offset:1194*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xd162bf56, 0x3febbb04,0xd162bf56,0xbfebbb04,x16, 166*SIGALIGN, x17,x1, x14)

inst_607:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbbb04d162bf56 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xbbb04d162bf56 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3febbb04d162bf56; valaddr_reg:x16; op2:x26; op2val:0xbfebbb04d162bf56
offset:1196*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xd162bf56, 0x3febbb04,0xd162bf56,0xbfebbb04,x16, 168*SIGALIGN, x17,x1, x14)

inst_608:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbbb04d162bf56 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xbbb04d162bf56 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3febbb04d162bf56; valaddr_reg:x16; op2:x26; op2val:0xbfebbb04d162bf56
offset:1198*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd162bf56, 0x3febbb04,0xd162bf56,0xbfebbb04,x16, 170*SIGALIGN, x17,x1, x14)

inst_609:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbbb04d162bf56 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xbbb04d162bf56 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3febbb04d162bf56; valaddr_reg:x16; op2:x26; op2val:0xbfebbb04d162bf56
offset:1200*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xd162bf56, 0x3febbb04,0xd162bf56,0xbfebbb04,x16, 172*SIGALIGN, x17,x1, x14)

inst_610:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6599142d7295a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x6599142d7295a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd6599142d7295a; valaddr_reg:x16; op2:x26; op2val:0xbfd6599142d7295a
offset:1202*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x42d7295a, 0x3fd65991,0x42d7295a,0xbfd65991,x16, 174*SIGALIGN, x17,x1, x14)

inst_611:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6599142d7295a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x6599142d7295a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd6599142d7295a; valaddr_reg:x16; op2:x26; op2val:0xbfd6599142d7295a
offset:1204*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x42d7295a, 0x3fd65991,0x42d7295a,0xbfd65991,x16, 176*SIGALIGN, x17,x1, x14)

inst_612:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6599142d7295a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x6599142d7295a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd6599142d7295a; valaddr_reg:x16; op2:x26; op2val:0xbfd6599142d7295a
offset:1206*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x42d7295a, 0x3fd65991,0x42d7295a,0xbfd65991,x16, 178*SIGALIGN, x17,x1, x14)

inst_613:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6599142d7295a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x6599142d7295a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd6599142d7295a; valaddr_reg:x16; op2:x26; op2val:0xbfd6599142d7295a
offset:1208*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x42d7295a, 0x3fd65991,0x42d7295a,0xbfd65991,x16, 180*SIGALIGN, x17,x1, x14)

inst_614:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6599142d7295a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x6599142d7295a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd6599142d7295a; valaddr_reg:x16; op2:x26; op2val:0xbfd6599142d7295a
offset:1210*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x42d7295a, 0x3fd65991,0x42d7295a,0xbfd65991,x16, 182*SIGALIGN, x17,x1, x14)

inst_615:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x066c40d8769c8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x066c40d8769c8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc066c40d8769c8; valaddr_reg:x16; op2:x26; op2val:0xbfc066c40d8769c8
offset:1212*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0d8769c8, 0x3fc066c4,0x0d8769c8,0xbfc066c4,x16, 184*SIGALIGN, x17,x1, x14)

inst_616:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x066c40d8769c8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x066c40d8769c8 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc066c40d8769c8; valaddr_reg:x16; op2:x26; op2val:0xbfc066c40d8769c8
offset:1214*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x0d8769c8, 0x3fc066c4,0x0d8769c8,0xbfc066c4,x16, 186*SIGALIGN, x17,x1, x14)

inst_617:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x066c40d8769c8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x066c40d8769c8 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc066c40d8769c8; valaddr_reg:x16; op2:x26; op2val:0xbfc066c40d8769c8
offset:1216*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x0d8769c8, 0x3fc066c4,0x0d8769c8,0xbfc066c4,x16, 188*SIGALIGN, x17,x1, x14)

inst_618:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x066c40d8769c8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x066c40d8769c8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc066c40d8769c8; valaddr_reg:x16; op2:x26; op2val:0xbfc066c40d8769c8
offset:1218*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x0d8769c8, 0x3fc066c4,0x0d8769c8,0xbfc066c4,x16, 190*SIGALIGN, x17,x1, x14)

inst_619:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x066c40d8769c8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x066c40d8769c8 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc066c40d8769c8; valaddr_reg:x16; op2:x26; op2val:0xbfc066c40d8769c8
offset:1220*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x0d8769c8, 0x3fc066c4,0x0d8769c8,0xbfc066c4,x16, 192*SIGALIGN, x17,x1, x14)

inst_620:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf67d6cfd4aff0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf67d6cfd4aff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef67d6cfd4aff0; valaddr_reg:x16; op2:x26; op2val:0xbfef67d6cfd4aff0
offset:1222*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xcfd4aff0, 0x3fef67d6,0xcfd4aff0,0xbfef67d6,x16, 194*SIGALIGN, x17,x1, x14)

inst_621:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf67d6cfd4aff0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf67d6cfd4aff0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef67d6cfd4aff0; valaddr_reg:x16; op2:x26; op2val:0xbfef67d6cfd4aff0
offset:1224*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xcfd4aff0, 0x3fef67d6,0xcfd4aff0,0xbfef67d6,x16, 196*SIGALIGN, x17,x1, x14)

inst_622:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf67d6cfd4aff0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf67d6cfd4aff0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef67d6cfd4aff0; valaddr_reg:x16; op2:x26; op2val:0xbfef67d6cfd4aff0
offset:1226*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xcfd4aff0, 0x3fef67d6,0xcfd4aff0,0xbfef67d6,x16, 198*SIGALIGN, x17,x1, x14)

inst_623:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf67d6cfd4aff0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf67d6cfd4aff0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef67d6cfd4aff0; valaddr_reg:x16; op2:x26; op2val:0xbfef67d6cfd4aff0
offset:1228*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xcfd4aff0, 0x3fef67d6,0xcfd4aff0,0xbfef67d6,x16, 200*SIGALIGN, x17,x1, x14)

inst_624:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf67d6cfd4aff0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf67d6cfd4aff0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef67d6cfd4aff0; valaddr_reg:x16; op2:x26; op2val:0xbfef67d6cfd4aff0
offset:1230*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xcfd4aff0, 0x3fef67d6,0xcfd4aff0,0xbfef67d6,x16, 202*SIGALIGN, x17,x1, x14)

inst_625:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x46a8c85ec3276 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x46a8c85ec3276 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd46a8c85ec3276; valaddr_reg:x16; op2:x26; op2val:0xbfd46a8c85ec3276
offset:1232*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x85ec3276, 0x3fd46a8c,0x85ec3276,0xbfd46a8c,x16, 204*SIGALIGN, x17,x1, x14)

inst_626:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x46a8c85ec3276 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x46a8c85ec3276 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd46a8c85ec3276; valaddr_reg:x16; op2:x26; op2val:0xbfd46a8c85ec3276
offset:1234*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x85ec3276, 0x3fd46a8c,0x85ec3276,0xbfd46a8c,x16, 206*SIGALIGN, x17,x1, x14)

inst_627:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x46a8c85ec3276 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x46a8c85ec3276 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd46a8c85ec3276; valaddr_reg:x16; op2:x26; op2val:0xbfd46a8c85ec3276
offset:1236*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x85ec3276, 0x3fd46a8c,0x85ec3276,0xbfd46a8c,x16, 208*SIGALIGN, x17,x1, x14)

inst_628:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x46a8c85ec3276 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x46a8c85ec3276 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd46a8c85ec3276; valaddr_reg:x16; op2:x26; op2val:0xbfd46a8c85ec3276
offset:1238*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x85ec3276, 0x3fd46a8c,0x85ec3276,0xbfd46a8c,x16, 210*SIGALIGN, x17,x1, x14)

inst_629:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x46a8c85ec3276 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x46a8c85ec3276 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd46a8c85ec3276; valaddr_reg:x16; op2:x26; op2val:0xbfd46a8c85ec3276
offset:1240*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x85ec3276, 0x3fd46a8c,0x85ec3276,0xbfd46a8c,x16, 212*SIGALIGN, x17,x1, x14)

inst_630:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xb64046884cff0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xb64046884cff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fab64046884cff0; valaddr_reg:x16; op2:x26; op2val:0xbfab64046884cff0
offset:1242*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x6884cff0, 0x3fab6404,0x6884cff0,0xbfab6404,x16, 214*SIGALIGN, x17,x1, x14)

inst_631:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xb64046884cff0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xb64046884cff0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fab64046884cff0; valaddr_reg:x16; op2:x26; op2val:0xbfab64046884cff0
offset:1244*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x6884cff0, 0x3fab6404,0x6884cff0,0xbfab6404,x16, 216*SIGALIGN, x17,x1, x14)

inst_632:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xb64046884cff0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xb64046884cff0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fab64046884cff0; valaddr_reg:x16; op2:x26; op2val:0xbfab64046884cff0
offset:1246*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x6884cff0, 0x3fab6404,0x6884cff0,0xbfab6404,x16, 218*SIGALIGN, x17,x1, x14)

inst_633:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xb64046884cff0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xb64046884cff0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fab64046884cff0; valaddr_reg:x16; op2:x26; op2val:0xbfab64046884cff0
offset:1248*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x6884cff0, 0x3fab6404,0x6884cff0,0xbfab6404,x16, 220*SIGALIGN, x17,x1, x14)

inst_634:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xb64046884cff0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xb64046884cff0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fab64046884cff0; valaddr_reg:x16; op2:x26; op2val:0xbfab64046884cff0
offset:1250*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x6884cff0, 0x3fab6404,0x6884cff0,0xbfab6404,x16, 222*SIGALIGN, x17,x1, x14)

inst_635:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x713fe44d167d8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x713fe44d167d8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb713fe44d167d8; valaddr_reg:x16; op2:x26; op2val:0xbfb713fe44d167d8
offset:1252*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x44d167d8, 0x3fb713fe,0x44d167d8,0xbfb713fe,x16, 224*SIGALIGN, x17,x1, x14)

inst_636:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x713fe44d167d8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x713fe44d167d8 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb713fe44d167d8; valaddr_reg:x16; op2:x26; op2val:0xbfb713fe44d167d8
offset:1254*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x44d167d8, 0x3fb713fe,0x44d167d8,0xbfb713fe,x16, 226*SIGALIGN, x17,x1, x14)

inst_637:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x713fe44d167d8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x713fe44d167d8 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb713fe44d167d8; valaddr_reg:x16; op2:x26; op2val:0xbfb713fe44d167d8
offset:1256*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x44d167d8, 0x3fb713fe,0x44d167d8,0xbfb713fe,x16, 228*SIGALIGN, x17,x1, x14)

inst_638:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x713fe44d167d8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x713fe44d167d8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb713fe44d167d8; valaddr_reg:x16; op2:x26; op2val:0xbfb713fe44d167d8
offset:1258*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x44d167d8, 0x3fb713fe,0x44d167d8,0xbfb713fe,x16, 230*SIGALIGN, x17,x1, x14)

inst_639:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x713fe44d167d8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x713fe44d167d8 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb713fe44d167d8; valaddr_reg:x16; op2:x26; op2val:0xbfb713fe44d167d8
offset:1260*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x44d167d8, 0x3fb713fe,0x44d167d8,0xbfb713fe,x16, 232*SIGALIGN, x17,x1, x14)

inst_640:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x00e2cd04f74da and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x00e2cd04f74da and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd00e2cd04f74da; valaddr_reg:x16; op2:x26; op2val:0xbfd00e2cd04f74da
offset:1262*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xd04f74da, 0x3fd00e2c,0xd04f74da,0xbfd00e2c,x16, 234*SIGALIGN, x17,x1, x14)

inst_641:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x00e2cd04f74da and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x00e2cd04f74da and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd00e2cd04f74da; valaddr_reg:x16; op2:x26; op2val:0xbfd00e2cd04f74da
offset:1264*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xd04f74da, 0x3fd00e2c,0xd04f74da,0xbfd00e2c,x16, 236*SIGALIGN, x17,x1, x14)

inst_642:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x00e2cd04f74da and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x00e2cd04f74da and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd00e2cd04f74da; valaddr_reg:x16; op2:x26; op2val:0xbfd00e2cd04f74da
offset:1266*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xd04f74da, 0x3fd00e2c,0xd04f74da,0xbfd00e2c,x16, 238*SIGALIGN, x17,x1, x14)

inst_643:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x00e2cd04f74da and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x00e2cd04f74da and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd00e2cd04f74da; valaddr_reg:x16; op2:x26; op2val:0xbfd00e2cd04f74da
offset:1268*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd04f74da, 0x3fd00e2c,0xd04f74da,0xbfd00e2c,x16, 240*SIGALIGN, x17,x1, x14)

inst_644:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x00e2cd04f74da and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x00e2cd04f74da and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd00e2cd04f74da; valaddr_reg:x16; op2:x26; op2val:0xbfd00e2cd04f74da
offset:1270*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xd04f74da, 0x3fd00e2c,0xd04f74da,0xbfd00e2c,x16, 242*SIGALIGN, x17,x1, x14)

inst_645:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x60e8d1c0b4b1a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x60e8d1c0b4b1a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd60e8d1c0b4b1a; valaddr_reg:x16; op2:x26; op2val:0xbfd60e8d1c0b4b1a
offset:1272*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x1c0b4b1a, 0x3fd60e8d,0x1c0b4b1a,0xbfd60e8d,x16, 244*SIGALIGN, x17,x1, x14)

inst_646:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x60e8d1c0b4b1a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x60e8d1c0b4b1a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd60e8d1c0b4b1a; valaddr_reg:x16; op2:x26; op2val:0xbfd60e8d1c0b4b1a
offset:1274*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x1c0b4b1a, 0x3fd60e8d,0x1c0b4b1a,0xbfd60e8d,x16, 246*SIGALIGN, x17,x1, x14)

inst_647:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x60e8d1c0b4b1a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x60e8d1c0b4b1a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd60e8d1c0b4b1a; valaddr_reg:x16; op2:x26; op2val:0xbfd60e8d1c0b4b1a
offset:1276*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x1c0b4b1a, 0x3fd60e8d,0x1c0b4b1a,0xbfd60e8d,x16, 248*SIGALIGN, x17,x1, x14)

inst_648:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x60e8d1c0b4b1a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x60e8d1c0b4b1a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd60e8d1c0b4b1a; valaddr_reg:x16; op2:x26; op2val:0xbfd60e8d1c0b4b1a
offset:1278*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x1c0b4b1a, 0x3fd60e8d,0x1c0b4b1a,0xbfd60e8d,x16, 250*SIGALIGN, x17,x1, x14)

inst_649:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x60e8d1c0b4b1a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x60e8d1c0b4b1a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd60e8d1c0b4b1a; valaddr_reg:x16; op2:x26; op2val:0xbfd60e8d1c0b4b1a
offset:1280*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x1c0b4b1a, 0x3fd60e8d,0x1c0b4b1a,0xbfd60e8d,x16, 252*SIGALIGN, x17,x1, x14)

inst_650:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x8e7fcd1529f20 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x8e7fcd1529f20 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb8e7fcd1529f20; valaddr_reg:x16; op2:x26; op2val:0xbfb8e7fcd1529f20
offset:1282*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xd1529f20, 0x3fb8e7fc,0xd1529f20,0xbfb8e7fc,x16, 254*SIGALIGN, x17,x1, x14)

inst_651:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x8e7fcd1529f20 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x8e7fcd1529f20 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb8e7fcd1529f20; valaddr_reg:x16; op2:x26; op2val:0xbfb8e7fcd1529f20
offset:1284*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xd1529f20, 0x3fb8e7fc,0xd1529f20,0xbfb8e7fc,x16, 256*SIGALIGN, x17,x1, x14)

inst_652:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x8e7fcd1529f20 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x8e7fcd1529f20 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb8e7fcd1529f20; valaddr_reg:x16; op2:x26; op2val:0xbfb8e7fcd1529f20
offset:1286*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xd1529f20, 0x3fb8e7fc,0xd1529f20,0xbfb8e7fc,x16, 258*SIGALIGN, x17,x1, x14)

inst_653:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x8e7fcd1529f20 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x8e7fcd1529f20 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb8e7fcd1529f20; valaddr_reg:x16; op2:x26; op2val:0xbfb8e7fcd1529f20
offset:1288*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd1529f20, 0x3fb8e7fc,0xd1529f20,0xbfb8e7fc,x16, 260*SIGALIGN, x17,x1, x14)

inst_654:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x8e7fcd1529f20 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x8e7fcd1529f20 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb8e7fcd1529f20; valaddr_reg:x16; op2:x26; op2val:0xbfb8e7fcd1529f20
offset:1290*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xd1529f20, 0x3fb8e7fc,0xd1529f20,0xbfb8e7fc,x16, 262*SIGALIGN, x17,x1, x14)

inst_655:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x414e54883ace8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x414e54883ace8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe414e54883ace8; valaddr_reg:x16; op2:x26; op2val:0xbfe414e54883ace8
offset:1292*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x4883ace8, 0x3fe414e5,0x4883ace8,0xbfe414e5,x16, 264*SIGALIGN, x17,x1, x14)

inst_656:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x414e54883ace8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x414e54883ace8 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe414e54883ace8; valaddr_reg:x16; op2:x26; op2val:0xbfe414e54883ace8
offset:1294*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x4883ace8, 0x3fe414e5,0x4883ace8,0xbfe414e5,x16, 266*SIGALIGN, x17,x1, x14)

inst_657:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x414e54883ace8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x414e54883ace8 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe414e54883ace8; valaddr_reg:x16; op2:x26; op2val:0xbfe414e54883ace8
offset:1296*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x4883ace8, 0x3fe414e5,0x4883ace8,0xbfe414e5,x16, 268*SIGALIGN, x17,x1, x14)

inst_658:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x414e54883ace8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x414e54883ace8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe414e54883ace8; valaddr_reg:x16; op2:x26; op2val:0xbfe414e54883ace8
offset:1298*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x4883ace8, 0x3fe414e5,0x4883ace8,0xbfe414e5,x16, 270*SIGALIGN, x17,x1, x14)

inst_659:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x414e54883ace8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x414e54883ace8 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe414e54883ace8; valaddr_reg:x16; op2:x26; op2val:0xbfe414e54883ace8
offset:1300*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x4883ace8, 0x3fe414e5,0x4883ace8,0xbfe414e5,x16, 272*SIGALIGN, x17,x1, x14)

inst_660:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x95957527f683e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x95957527f683e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe95957527f683e; valaddr_reg:x16; op2:x26; op2val:0xbfe95957527f683e
offset:1302*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x527f683e, 0x3fe95957,0x527f683e,0xbfe95957,x16, 274*SIGALIGN, x17,x1, x14)

inst_661:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x95957527f683e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x95957527f683e and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe95957527f683e; valaddr_reg:x16; op2:x26; op2val:0xbfe95957527f683e
offset:1304*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x527f683e, 0x3fe95957,0x527f683e,0xbfe95957,x16, 276*SIGALIGN, x17,x1, x14)

inst_662:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x95957527f683e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x95957527f683e and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe95957527f683e; valaddr_reg:x16; op2:x26; op2val:0xbfe95957527f683e
offset:1306*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x527f683e, 0x3fe95957,0x527f683e,0xbfe95957,x16, 278*SIGALIGN, x17,x1, x14)

inst_663:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x95957527f683e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x95957527f683e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe95957527f683e; valaddr_reg:x16; op2:x26; op2val:0xbfe95957527f683e
offset:1308*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x527f683e, 0x3fe95957,0x527f683e,0xbfe95957,x16, 280*SIGALIGN, x17,x1, x14)

inst_664:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x95957527f683e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x95957527f683e and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe95957527f683e; valaddr_reg:x16; op2:x26; op2val:0xbfe95957527f683e
offset:1310*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x527f683e, 0x3fe95957,0x527f683e,0xbfe95957,x16, 282*SIGALIGN, x17,x1, x14)

inst_665:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfb71d77723858 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfb71d77723858 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fefb71d77723858; valaddr_reg:x16; op2:x26; op2val:0xbfefb71d77723858
offset:1312*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x77723858, 0x3fefb71d,0x77723858,0xbfefb71d,x16, 284*SIGALIGN, x17,x1, x14)

inst_666:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfb71d77723858 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfb71d77723858 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fefb71d77723858; valaddr_reg:x16; op2:x26; op2val:0xbfefb71d77723858
offset:1314*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x77723858, 0x3fefb71d,0x77723858,0xbfefb71d,x16, 286*SIGALIGN, x17,x1, x14)

inst_667:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfb71d77723858 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfb71d77723858 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fefb71d77723858; valaddr_reg:x16; op2:x26; op2val:0xbfefb71d77723858
offset:1316*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x77723858, 0x3fefb71d,0x77723858,0xbfefb71d,x16, 288*SIGALIGN, x17,x1, x14)

inst_668:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfb71d77723858 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfb71d77723858 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fefb71d77723858; valaddr_reg:x16; op2:x26; op2val:0xbfefb71d77723858
offset:1318*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x77723858, 0x3fefb71d,0x77723858,0xbfefb71d,x16, 290*SIGALIGN, x17,x1, x14)

inst_669:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfb71d77723858 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfb71d77723858 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fefb71d77723858; valaddr_reg:x16; op2:x26; op2val:0xbfefb71d77723858
offset:1320*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x77723858, 0x3fefb71d,0x77723858,0xbfefb71d,x16, 292*SIGALIGN, x17,x1, x14)

inst_670:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x554b7eea66380 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x554b7eea66380 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe554b7eea66380; valaddr_reg:x16; op2:x26; op2val:0xbfe554b7eea66380
offset:1322*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xeea66380, 0x3fe554b7,0xeea66380,0xbfe554b7,x16, 294*SIGALIGN, x17,x1, x14)

inst_671:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x554b7eea66380 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x554b7eea66380 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe554b7eea66380; valaddr_reg:x16; op2:x26; op2val:0xbfe554b7eea66380
offset:1324*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xeea66380, 0x3fe554b7,0xeea66380,0xbfe554b7,x16, 296*SIGALIGN, x17,x1, x14)

inst_672:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x554b7eea66380 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x554b7eea66380 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe554b7eea66380; valaddr_reg:x16; op2:x26; op2val:0xbfe554b7eea66380
offset:1326*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xeea66380, 0x3fe554b7,0xeea66380,0xbfe554b7,x16, 298*SIGALIGN, x17,x1, x14)

inst_673:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x554b7eea66380 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x554b7eea66380 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe554b7eea66380; valaddr_reg:x16; op2:x26; op2val:0xbfe554b7eea66380
offset:1328*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xeea66380, 0x3fe554b7,0xeea66380,0xbfe554b7,x16, 300*SIGALIGN, x17,x1, x14)

inst_674:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x554b7eea66380 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x554b7eea66380 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe554b7eea66380; valaddr_reg:x16; op2:x26; op2val:0xbfe554b7eea66380
offset:1330*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xeea66380, 0x3fe554b7,0xeea66380,0xbfe554b7,x16, 302*SIGALIGN, x17,x1, x14)

inst_675:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2041aff401648 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2041aff401648 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd2041aff401648; valaddr_reg:x16; op2:x26; op2val:0xbfd2041aff401648
offset:1332*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xff401648, 0x3fd2041a,0xff401648,0xbfd2041a,x16, 304*SIGALIGN, x17,x1, x14)

inst_676:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2041aff401648 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2041aff401648 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd2041aff401648; valaddr_reg:x16; op2:x26; op2val:0xbfd2041aff401648
offset:1334*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xff401648, 0x3fd2041a,0xff401648,0xbfd2041a,x16, 306*SIGALIGN, x17,x1, x14)

inst_677:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2041aff401648 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2041aff401648 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd2041aff401648; valaddr_reg:x16; op2:x26; op2val:0xbfd2041aff401648
offset:1336*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xff401648, 0x3fd2041a,0xff401648,0xbfd2041a,x16, 308*SIGALIGN, x17,x1, x14)

inst_678:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2041aff401648 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2041aff401648 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd2041aff401648; valaddr_reg:x16; op2:x26; op2val:0xbfd2041aff401648
offset:1338*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xff401648, 0x3fd2041a,0xff401648,0xbfd2041a,x16, 310*SIGALIGN, x17,x1, x14)

inst_679:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2041aff401648 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2041aff401648 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd2041aff401648; valaddr_reg:x16; op2:x26; op2val:0xbfd2041aff401648
offset:1340*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xff401648, 0x3fd2041a,0xff401648,0xbfd2041a,x16, 312*SIGALIGN, x17,x1, x14)

inst_680:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8491a87b6f506 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8491a87b6f506 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd8491a87b6f506; valaddr_reg:x16; op2:x26; op2val:0xbfd8491a87b6f506
offset:1342*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x87b6f506, 0x3fd8491a,0x87b6f506,0xbfd8491a,x16, 314*SIGALIGN, x17,x1, x14)

inst_681:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8491a87b6f506 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8491a87b6f506 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd8491a87b6f506; valaddr_reg:x16; op2:x26; op2val:0xbfd8491a87b6f506
offset:1344*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x87b6f506, 0x3fd8491a,0x87b6f506,0xbfd8491a,x16, 316*SIGALIGN, x17,x1, x14)

inst_682:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8491a87b6f506 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8491a87b6f506 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd8491a87b6f506; valaddr_reg:x16; op2:x26; op2val:0xbfd8491a87b6f506
offset:1346*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x87b6f506, 0x3fd8491a,0x87b6f506,0xbfd8491a,x16, 318*SIGALIGN, x17,x1, x14)

inst_683:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8491a87b6f506 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8491a87b6f506 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd8491a87b6f506; valaddr_reg:x16; op2:x26; op2val:0xbfd8491a87b6f506
offset:1348*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x87b6f506, 0x3fd8491a,0x87b6f506,0xbfd8491a,x16, 320*SIGALIGN, x17,x1, x14)

inst_684:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8491a87b6f506 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8491a87b6f506 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd8491a87b6f506; valaddr_reg:x16; op2:x26; op2val:0xbfd8491a87b6f506
offset:1350*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x87b6f506, 0x3fd8491a,0x87b6f506,0xbfd8491a,x16, 322*SIGALIGN, x17,x1, x14)

inst_685:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xac1a78766ff7c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xac1a78766ff7c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feac1a78766ff7c; valaddr_reg:x16; op2:x26; op2val:0xbfeac1a78766ff7c
offset:1352*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x8766ff7c, 0x3feac1a7,0x8766ff7c,0xbfeac1a7,x16, 324*SIGALIGN, x17,x1, x14)

inst_686:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xac1a78766ff7c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xac1a78766ff7c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feac1a78766ff7c; valaddr_reg:x16; op2:x26; op2val:0xbfeac1a78766ff7c
offset:1354*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x8766ff7c, 0x3feac1a7,0x8766ff7c,0xbfeac1a7,x16, 326*SIGALIGN, x17,x1, x14)

inst_687:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xac1a78766ff7c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xac1a78766ff7c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feac1a78766ff7c; valaddr_reg:x16; op2:x26; op2val:0xbfeac1a78766ff7c
offset:1356*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x8766ff7c, 0x3feac1a7,0x8766ff7c,0xbfeac1a7,x16, 328*SIGALIGN, x17,x1, x14)

inst_688:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xac1a78766ff7c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xac1a78766ff7c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feac1a78766ff7c; valaddr_reg:x16; op2:x26; op2val:0xbfeac1a78766ff7c
offset:1358*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x8766ff7c, 0x3feac1a7,0x8766ff7c,0xbfeac1a7,x16, 330*SIGALIGN, x17,x1, x14)

inst_689:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xac1a78766ff7c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xac1a78766ff7c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feac1a78766ff7c; valaddr_reg:x16; op2:x26; op2val:0xbfeac1a78766ff7c
offset:1360*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x8766ff7c, 0x3feac1a7,0x8766ff7c,0xbfeac1a7,x16, 332*SIGALIGN, x17,x1, x14)

inst_690:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6bc29ca8e6e80 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6bc29ca8e6e80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe6bc29ca8e6e80; valaddr_reg:x16; op2:x26; op2val:0xbfe6bc29ca8e6e80
offset:1362*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xca8e6e80, 0x3fe6bc29,0xca8e6e80,0xbfe6bc29,x16, 334*SIGALIGN, x17,x1, x14)

inst_691:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6bc29ca8e6e80 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6bc29ca8e6e80 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe6bc29ca8e6e80; valaddr_reg:x16; op2:x26; op2val:0xbfe6bc29ca8e6e80
offset:1364*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xca8e6e80, 0x3fe6bc29,0xca8e6e80,0xbfe6bc29,x16, 336*SIGALIGN, x17,x1, x14)

inst_692:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6bc29ca8e6e80 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6bc29ca8e6e80 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe6bc29ca8e6e80; valaddr_reg:x16; op2:x26; op2val:0xbfe6bc29ca8e6e80
offset:1366*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xca8e6e80, 0x3fe6bc29,0xca8e6e80,0xbfe6bc29,x16, 338*SIGALIGN, x17,x1, x14)

inst_693:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6bc29ca8e6e80 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6bc29ca8e6e80 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe6bc29ca8e6e80; valaddr_reg:x16; op2:x26; op2val:0xbfe6bc29ca8e6e80
offset:1368*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xca8e6e80, 0x3fe6bc29,0xca8e6e80,0xbfe6bc29,x16, 340*SIGALIGN, x17,x1, x14)

inst_694:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6bc29ca8e6e80 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6bc29ca8e6e80 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe6bc29ca8e6e80; valaddr_reg:x16; op2:x26; op2val:0xbfe6bc29ca8e6e80
offset:1370*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xca8e6e80, 0x3fe6bc29,0xca8e6e80,0xbfe6bc29,x16, 342*SIGALIGN, x17,x1, x14)

inst_695:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xce5a21ef67ed0 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xce5a21ef67ed0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdce5a21ef67ed0; valaddr_reg:x16; op2:x26; op2val:0xbfdce5a21ef67ed0
offset:1372*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x1ef67ed0, 0x3fdce5a2,0x1ef67ed0,0xbfdce5a2,x16, 344*SIGALIGN, x17,x1, x14)

inst_696:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xce5a21ef67ed0 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xce5a21ef67ed0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdce5a21ef67ed0; valaddr_reg:x16; op2:x26; op2val:0xbfdce5a21ef67ed0
offset:1374*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x1ef67ed0, 0x3fdce5a2,0x1ef67ed0,0xbfdce5a2,x16, 346*SIGALIGN, x17,x1, x14)

inst_697:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xce5a21ef67ed0 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xce5a21ef67ed0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdce5a21ef67ed0; valaddr_reg:x16; op2:x26; op2val:0xbfdce5a21ef67ed0
offset:1376*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x1ef67ed0, 0x3fdce5a2,0x1ef67ed0,0xbfdce5a2,x16, 348*SIGALIGN, x17,x1, x14)

inst_698:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xce5a21ef67ed0 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xce5a21ef67ed0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdce5a21ef67ed0; valaddr_reg:x16; op2:x26; op2val:0xbfdce5a21ef67ed0
offset:1378*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x1ef67ed0, 0x3fdce5a2,0x1ef67ed0,0xbfdce5a2,x16, 350*SIGALIGN, x17,x1, x14)

inst_699:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xce5a21ef67ed0 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xce5a21ef67ed0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdce5a21ef67ed0; valaddr_reg:x16; op2:x26; op2val:0xbfdce5a21ef67ed0
offset:1380*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x1ef67ed0, 0x3fdce5a2,0x1ef67ed0,0xbfdce5a2,x16, 352*SIGALIGN, x17,x1, x14)

inst_700:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0b3b1b913f21d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0b3b1b913f21d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0b3b1b913f21d; valaddr_reg:x16; op2:x26; op2val:0xbfe0b3b1b913f21d
offset:1382*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xb913f21d, 0x3fe0b3b1,0xb913f21d,0xbfe0b3b1,x16, 354*SIGALIGN, x17,x1, x14)

inst_701:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0b3b1b913f21d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0b3b1b913f21d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0b3b1b913f21d; valaddr_reg:x16; op2:x26; op2val:0xbfe0b3b1b913f21d
offset:1384*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xb913f21d, 0x3fe0b3b1,0xb913f21d,0xbfe0b3b1,x16, 356*SIGALIGN, x17,x1, x14)

inst_702:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0b3b1b913f21d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0b3b1b913f21d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0b3b1b913f21d; valaddr_reg:x16; op2:x26; op2val:0xbfe0b3b1b913f21d
offset:1386*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xb913f21d, 0x3fe0b3b1,0xb913f21d,0xbfe0b3b1,x16, 358*SIGALIGN, x17,x1, x14)

inst_703:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0b3b1b913f21d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0b3b1b913f21d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0b3b1b913f21d; valaddr_reg:x16; op2:x26; op2val:0xbfe0b3b1b913f21d
offset:1388*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xb913f21d, 0x3fe0b3b1,0xb913f21d,0xbfe0b3b1,x16, 360*SIGALIGN, x17,x1, x14)

inst_704:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0b3b1b913f21d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0b3b1b913f21d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0b3b1b913f21d; valaddr_reg:x16; op2:x26; op2val:0xbfe0b3b1b913f21d
offset:1390*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xb913f21d, 0x3fe0b3b1,0xb913f21d,0xbfe0b3b1,x16, 362*SIGALIGN, x17,x1, x14)

inst_705:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe74af12c4bb2b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe74af12c4bb2b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee74af12c4bb2b; valaddr_reg:x16; op2:x26; op2val:0xbfee74af12c4bb2b
offset:1392*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x12c4bb2b, 0x3fee74af,0x12c4bb2b,0xbfee74af,x16, 364*SIGALIGN, x17,x1, x14)

inst_706:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe74af12c4bb2b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe74af12c4bb2b and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee74af12c4bb2b; valaddr_reg:x16; op2:x26; op2val:0xbfee74af12c4bb2b
offset:1394*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x12c4bb2b, 0x3fee74af,0x12c4bb2b,0xbfee74af,x16, 366*SIGALIGN, x17,x1, x14)

inst_707:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe74af12c4bb2b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe74af12c4bb2b and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee74af12c4bb2b; valaddr_reg:x16; op2:x26; op2val:0xbfee74af12c4bb2b
offset:1396*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x12c4bb2b, 0x3fee74af,0x12c4bb2b,0xbfee74af,x16, 368*SIGALIGN, x17,x1, x14)

inst_708:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe74af12c4bb2b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe74af12c4bb2b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee74af12c4bb2b; valaddr_reg:x16; op2:x26; op2val:0xbfee74af12c4bb2b
offset:1398*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x12c4bb2b, 0x3fee74af,0x12c4bb2b,0xbfee74af,x16, 370*SIGALIGN, x17,x1, x14)

inst_709:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe74af12c4bb2b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe74af12c4bb2b and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee74af12c4bb2b; valaddr_reg:x16; op2:x26; op2val:0xbfee74af12c4bb2b
offset:1400*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x12c4bb2b, 0x3fee74af,0x12c4bb2b,0xbfee74af,x16, 372*SIGALIGN, x17,x1, x14)

inst_710:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe8658522bb3ea and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xe8658522bb3ea and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fde8658522bb3ea; valaddr_reg:x16; op2:x26; op2val:0xbfde8658522bb3ea
offset:1402*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x522bb3ea, 0x3fde8658,0x522bb3ea,0xbfde8658,x16, 374*SIGALIGN, x17,x1, x14)

inst_711:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe8658522bb3ea and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xe8658522bb3ea and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fde8658522bb3ea; valaddr_reg:x16; op2:x26; op2val:0xbfde8658522bb3ea
offset:1404*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x522bb3ea, 0x3fde8658,0x522bb3ea,0xbfde8658,x16, 376*SIGALIGN, x17,x1, x14)

inst_712:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe8658522bb3ea and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xe8658522bb3ea and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fde8658522bb3ea; valaddr_reg:x16; op2:x26; op2val:0xbfde8658522bb3ea
offset:1406*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x522bb3ea, 0x3fde8658,0x522bb3ea,0xbfde8658,x16, 378*SIGALIGN, x17,x1, x14)

inst_713:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe8658522bb3ea and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xe8658522bb3ea and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fde8658522bb3ea; valaddr_reg:x16; op2:x26; op2val:0xbfde8658522bb3ea
offset:1408*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x522bb3ea, 0x3fde8658,0x522bb3ea,0xbfde8658,x16, 380*SIGALIGN, x17,x1, x14)

inst_714:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe8658522bb3ea and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xe8658522bb3ea and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fde8658522bb3ea; valaddr_reg:x16; op2:x26; op2val:0xbfde8658522bb3ea
offset:1410*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x522bb3ea, 0x3fde8658,0x522bb3ea,0xbfde8658,x16, 382*SIGALIGN, x17,x1, x14)

inst_715:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3193d04a86308 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3193d04a86308 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe3193d04a86308; valaddr_reg:x16; op2:x26; op2val:0xbfe3193d04a86308
offset:1412*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x04a86308, 0x3fe3193d,0x04a86308,0xbfe3193d,x16, 384*SIGALIGN, x17,x1, x14)

inst_716:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3193d04a86308 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3193d04a86308 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe3193d04a86308; valaddr_reg:x16; op2:x26; op2val:0xbfe3193d04a86308
offset:1414*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x04a86308, 0x3fe3193d,0x04a86308,0xbfe3193d,x16, 386*SIGALIGN, x17,x1, x14)

inst_717:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3193d04a86308 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3193d04a86308 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe3193d04a86308; valaddr_reg:x16; op2:x26; op2val:0xbfe3193d04a86308
offset:1416*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x04a86308, 0x3fe3193d,0x04a86308,0xbfe3193d,x16, 388*SIGALIGN, x17,x1, x14)

inst_718:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3193d04a86308 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3193d04a86308 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe3193d04a86308; valaddr_reg:x16; op2:x26; op2val:0xbfe3193d04a86308
offset:1418*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x04a86308, 0x3fe3193d,0x04a86308,0xbfe3193d,x16, 390*SIGALIGN, x17,x1, x14)

inst_719:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3193d04a86308 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3193d04a86308 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe3193d04a86308; valaddr_reg:x16; op2:x26; op2val:0xbfe3193d04a86308
offset:1420*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x04a86308, 0x3fe3193d,0x04a86308,0xbfe3193d,x16, 392*SIGALIGN, x17,x1, x14)

inst_720:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2ba99bf90bdaf and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2ba99bf90bdaf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2ba99bf90bdaf; valaddr_reg:x16; op2:x26; op2val:0xbfe2ba99bf90bdaf
offset:1422*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xbf90bdaf, 0x3fe2ba99,0xbf90bdaf,0xbfe2ba99,x16, 394*SIGALIGN, x17,x1, x14)

inst_721:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2ba99bf90bdaf and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2ba99bf90bdaf and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2ba99bf90bdaf; valaddr_reg:x16; op2:x26; op2val:0xbfe2ba99bf90bdaf
offset:1424*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xbf90bdaf, 0x3fe2ba99,0xbf90bdaf,0xbfe2ba99,x16, 396*SIGALIGN, x17,x1, x14)

inst_722:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2ba99bf90bdaf and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2ba99bf90bdaf and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2ba99bf90bdaf; valaddr_reg:x16; op2:x26; op2val:0xbfe2ba99bf90bdaf
offset:1426*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xbf90bdaf, 0x3fe2ba99,0xbf90bdaf,0xbfe2ba99,x16, 398*SIGALIGN, x17,x1, x14)

inst_723:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2ba99bf90bdaf and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2ba99bf90bdaf and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2ba99bf90bdaf; valaddr_reg:x16; op2:x26; op2val:0xbfe2ba99bf90bdaf
offset:1428*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xbf90bdaf, 0x3fe2ba99,0xbf90bdaf,0xbfe2ba99,x16, 400*SIGALIGN, x17,x1, x14)

inst_724:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2ba99bf90bdaf and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2ba99bf90bdaf and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2ba99bf90bdaf; valaddr_reg:x16; op2:x26; op2val:0xbfe2ba99bf90bdaf
offset:1430*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xbf90bdaf, 0x3fe2ba99,0xbf90bdaf,0xbfe2ba99,x16, 402*SIGALIGN, x17,x1, x14)

inst_725:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x76237f09a3c90 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x76237f09a3c90 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb76237f09a3c90; valaddr_reg:x16; op2:x26; op2val:0xbfb76237f09a3c90
offset:1432*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf09a3c90, 0x3fb76237,0xf09a3c90,0xbfb76237,x16, 404*SIGALIGN, x17,x1, x14)

inst_726:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x76237f09a3c90 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x76237f09a3c90 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb76237f09a3c90; valaddr_reg:x16; op2:x26; op2val:0xbfb76237f09a3c90
offset:1434*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xf09a3c90, 0x3fb76237,0xf09a3c90,0xbfb76237,x16, 406*SIGALIGN, x17,x1, x14)

inst_727:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x76237f09a3c90 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x76237f09a3c90 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb76237f09a3c90; valaddr_reg:x16; op2:x26; op2val:0xbfb76237f09a3c90
offset:1436*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xf09a3c90, 0x3fb76237,0xf09a3c90,0xbfb76237,x16, 408*SIGALIGN, x17,x1, x14)

inst_728:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x76237f09a3c90 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x76237f09a3c90 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb76237f09a3c90; valaddr_reg:x16; op2:x26; op2val:0xbfb76237f09a3c90
offset:1438*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf09a3c90, 0x3fb76237,0xf09a3c90,0xbfb76237,x16, 410*SIGALIGN, x17,x1, x14)

inst_729:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x76237f09a3c90 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x76237f09a3c90 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb76237f09a3c90; valaddr_reg:x16; op2:x26; op2val:0xbfb76237f09a3c90
offset:1440*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xf09a3c90, 0x3fb76237,0xf09a3c90,0xbfb76237,x16, 412*SIGALIGN, x17,x1, x14)

inst_730:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x45f14f33be81c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x45f14f33be81c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc45f14f33be81c; valaddr_reg:x16; op2:x26; op2val:0xbfc45f14f33be81c
offset:1442*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf33be81c, 0x3fc45f14,0xf33be81c,0xbfc45f14,x16, 414*SIGALIGN, x17,x1, x14)

inst_731:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x45f14f33be81c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x45f14f33be81c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc45f14f33be81c; valaddr_reg:x16; op2:x26; op2val:0xbfc45f14f33be81c
offset:1444*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xf33be81c, 0x3fc45f14,0xf33be81c,0xbfc45f14,x16, 416*SIGALIGN, x17,x1, x14)

inst_732:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x45f14f33be81c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x45f14f33be81c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc45f14f33be81c; valaddr_reg:x16; op2:x26; op2val:0xbfc45f14f33be81c
offset:1446*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xf33be81c, 0x3fc45f14,0xf33be81c,0xbfc45f14,x16, 418*SIGALIGN, x17,x1, x14)

inst_733:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x45f14f33be81c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x45f14f33be81c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc45f14f33be81c; valaddr_reg:x16; op2:x26; op2val:0xbfc45f14f33be81c
offset:1448*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf33be81c, 0x3fc45f14,0xf33be81c,0xbfc45f14,x16, 420*SIGALIGN, x17,x1, x14)

inst_734:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x45f14f33be81c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x45f14f33be81c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc45f14f33be81c; valaddr_reg:x16; op2:x26; op2val:0xbfc45f14f33be81c
offset:1450*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xf33be81c, 0x3fc45f14,0xf33be81c,0xbfc45f14,x16, 422*SIGALIGN, x17,x1, x14)

inst_735:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x500ce5f80b100 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x500ce5f80b100 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe500ce5f80b100; valaddr_reg:x16; op2:x26; op2val:0xbfe500ce5f80b100
offset:1452*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x5f80b100, 0x3fe500ce,0x5f80b100,0xbfe500ce,x16, 424*SIGALIGN, x17,x1, x14)

inst_736:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x500ce5f80b100 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x500ce5f80b100 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe500ce5f80b100; valaddr_reg:x16; op2:x26; op2val:0xbfe500ce5f80b100
offset:1454*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x5f80b100, 0x3fe500ce,0x5f80b100,0xbfe500ce,x16, 426*SIGALIGN, x17,x1, x14)

inst_737:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x500ce5f80b100 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x500ce5f80b100 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe500ce5f80b100; valaddr_reg:x16; op2:x26; op2val:0xbfe500ce5f80b100
offset:1456*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x5f80b100, 0x3fe500ce,0x5f80b100,0xbfe500ce,x16, 428*SIGALIGN, x17,x1, x14)

inst_738:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x500ce5f80b100 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x500ce5f80b100 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe500ce5f80b100; valaddr_reg:x16; op2:x26; op2val:0xbfe500ce5f80b100
offset:1458*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x5f80b100, 0x3fe500ce,0x5f80b100,0xbfe500ce,x16, 430*SIGALIGN, x17,x1, x14)

inst_739:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x500ce5f80b100 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x500ce5f80b100 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe500ce5f80b100; valaddr_reg:x16; op2:x26; op2val:0xbfe500ce5f80b100
offset:1460*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x5f80b100, 0x3fe500ce,0x5f80b100,0xbfe500ce,x16, 432*SIGALIGN, x17,x1, x14)

inst_740:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x339d4ac04a3c4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x339d4ac04a3c4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd339d4ac04a3c4; valaddr_reg:x16; op2:x26; op2val:0xbfd339d4ac04a3c4
offset:1462*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xac04a3c4, 0x3fd339d4,0xac04a3c4,0xbfd339d4,x16, 434*SIGALIGN, x17,x1, x14)

inst_741:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x339d4ac04a3c4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x339d4ac04a3c4 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd339d4ac04a3c4; valaddr_reg:x16; op2:x26; op2val:0xbfd339d4ac04a3c4
offset:1464*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xac04a3c4, 0x3fd339d4,0xac04a3c4,0xbfd339d4,x16, 436*SIGALIGN, x17,x1, x14)

inst_742:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x339d4ac04a3c4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x339d4ac04a3c4 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd339d4ac04a3c4; valaddr_reg:x16; op2:x26; op2val:0xbfd339d4ac04a3c4
offset:1466*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xac04a3c4, 0x3fd339d4,0xac04a3c4,0xbfd339d4,x16, 438*SIGALIGN, x17,x1, x14)

inst_743:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x339d4ac04a3c4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x339d4ac04a3c4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd339d4ac04a3c4; valaddr_reg:x16; op2:x26; op2val:0xbfd339d4ac04a3c4
offset:1468*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xac04a3c4, 0x3fd339d4,0xac04a3c4,0xbfd339d4,x16, 440*SIGALIGN, x17,x1, x14)

inst_744:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x339d4ac04a3c4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x339d4ac04a3c4 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd339d4ac04a3c4; valaddr_reg:x16; op2:x26; op2val:0xbfd339d4ac04a3c4
offset:1470*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xac04a3c4, 0x3fd339d4,0xac04a3c4,0xbfd339d4,x16, 442*SIGALIGN, x17,x1, x14)

inst_745:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x656cf46a8e04a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x656cf46a8e04a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe656cf46a8e04a; valaddr_reg:x16; op2:x26; op2val:0xbfe656cf46a8e04a
offset:1472*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x46a8e04a, 0x3fe656cf,0x46a8e04a,0xbfe656cf,x16, 444*SIGALIGN, x17,x1, x14)

inst_746:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x656cf46a8e04a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x656cf46a8e04a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe656cf46a8e04a; valaddr_reg:x16; op2:x26; op2val:0xbfe656cf46a8e04a
offset:1474*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x46a8e04a, 0x3fe656cf,0x46a8e04a,0xbfe656cf,x16, 446*SIGALIGN, x17,x1, x14)

inst_747:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x656cf46a8e04a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x656cf46a8e04a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe656cf46a8e04a; valaddr_reg:x16; op2:x26; op2val:0xbfe656cf46a8e04a
offset:1476*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x46a8e04a, 0x3fe656cf,0x46a8e04a,0xbfe656cf,x16, 448*SIGALIGN, x17,x1, x14)

inst_748:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x656cf46a8e04a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x656cf46a8e04a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe656cf46a8e04a; valaddr_reg:x16; op2:x26; op2val:0xbfe656cf46a8e04a
offset:1478*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x46a8e04a, 0x3fe656cf,0x46a8e04a,0xbfe656cf,x16, 450*SIGALIGN, x17,x1, x14)

inst_749:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x656cf46a8e04a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x656cf46a8e04a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe656cf46a8e04a; valaddr_reg:x16; op2:x26; op2val:0xbfe656cf46a8e04a
offset:1480*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x46a8e04a, 0x3fe656cf,0x46a8e04a,0xbfe656cf,x16, 452*SIGALIGN, x17,x1, x14)

inst_750:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb089dbb04ccc0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xb089dbb04ccc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbb089dbb04ccc0; valaddr_reg:x16; op2:x26; op2val:0xbfbb089dbb04ccc0
offset:1482*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xbb04ccc0, 0x3fbb089d,0xbb04ccc0,0xbfbb089d,x16, 454*SIGALIGN, x17,x1, x14)

inst_751:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb089dbb04ccc0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xb089dbb04ccc0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbb089dbb04ccc0; valaddr_reg:x16; op2:x26; op2val:0xbfbb089dbb04ccc0
offset:1484*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xbb04ccc0, 0x3fbb089d,0xbb04ccc0,0xbfbb089d,x16, 456*SIGALIGN, x17,x1, x14)

inst_752:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb089dbb04ccc0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xb089dbb04ccc0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbb089dbb04ccc0; valaddr_reg:x16; op2:x26; op2val:0xbfbb089dbb04ccc0
offset:1486*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xbb04ccc0, 0x3fbb089d,0xbb04ccc0,0xbfbb089d,x16, 458*SIGALIGN, x17,x1, x14)

inst_753:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb089dbb04ccc0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xb089dbb04ccc0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbb089dbb04ccc0; valaddr_reg:x16; op2:x26; op2val:0xbfbb089dbb04ccc0
offset:1488*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xbb04ccc0, 0x3fbb089d,0xbb04ccc0,0xbfbb089d,x16, 460*SIGALIGN, x17,x1, x14)

inst_754:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb089dbb04ccc0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xb089dbb04ccc0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbb089dbb04ccc0; valaddr_reg:x16; op2:x26; op2val:0xbfbb089dbb04ccc0
offset:1490*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xbb04ccc0, 0x3fbb089d,0xbb04ccc0,0xbfbb089d,x16, 462*SIGALIGN, x17,x1, x14)

inst_755:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7e375537bee0a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x7e375537bee0a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd7e375537bee0a; valaddr_reg:x16; op2:x26; op2val:0xbfd7e375537bee0a
offset:1492*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x537bee0a, 0x3fd7e375,0x537bee0a,0xbfd7e375,x16, 464*SIGALIGN, x17,x1, x14)

inst_756:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7e375537bee0a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x7e375537bee0a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd7e375537bee0a; valaddr_reg:x16; op2:x26; op2val:0xbfd7e375537bee0a
offset:1494*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x537bee0a, 0x3fd7e375,0x537bee0a,0xbfd7e375,x16, 466*SIGALIGN, x17,x1, x14)

inst_757:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7e375537bee0a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x7e375537bee0a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd7e375537bee0a; valaddr_reg:x16; op2:x26; op2val:0xbfd7e375537bee0a
offset:1496*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x537bee0a, 0x3fd7e375,0x537bee0a,0xbfd7e375,x16, 468*SIGALIGN, x17,x1, x14)

inst_758:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7e375537bee0a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x7e375537bee0a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd7e375537bee0a; valaddr_reg:x16; op2:x26; op2val:0xbfd7e375537bee0a
offset:1498*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x537bee0a, 0x3fd7e375,0x537bee0a,0xbfd7e375,x16, 470*SIGALIGN, x17,x1, x14)

inst_759:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7e375537bee0a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x7e375537bee0a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd7e375537bee0a; valaddr_reg:x16; op2:x26; op2val:0xbfd7e375537bee0a
offset:1500*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x537bee0a, 0x3fd7e375,0x537bee0a,0xbfd7e375,x16, 472*SIGALIGN, x17,x1, x14)

inst_760:// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xa0cce81168960 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0xa0cce81168960 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f9a0cce81168960; valaddr_reg:x16; op2:x26; op2val:0xbf9a0cce81168960
offset:1502*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x81168960, 0x3f9a0cce,0x81168960,0xbf9a0cce,x16, 474*SIGALIGN, x17,x1, x14)

inst_761:// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xa0cce81168960 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0xa0cce81168960 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f9a0cce81168960; valaddr_reg:x16; op2:x26; op2val:0xbf9a0cce81168960
offset:1504*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x81168960, 0x3f9a0cce,0x81168960,0xbf9a0cce,x16, 476*SIGALIGN, x17,x1, x14)

inst_762:// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xa0cce81168960 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0xa0cce81168960 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f9a0cce81168960; valaddr_reg:x16; op2:x26; op2val:0xbf9a0cce81168960
offset:1506*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x81168960, 0x3f9a0cce,0x81168960,0xbf9a0cce,x16, 478*SIGALIGN, x17,x1, x14)

inst_763:// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xa0cce81168960 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0xa0cce81168960 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f9a0cce81168960; valaddr_reg:x16; op2:x26; op2val:0xbf9a0cce81168960
offset:1508*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x81168960, 0x3f9a0cce,0x81168960,0xbf9a0cce,x16, 480*SIGALIGN, x17,x1, x14)

inst_764:// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xa0cce81168960 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0xa0cce81168960 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f9a0cce81168960; valaddr_reg:x16; op2:x26; op2val:0xbf9a0cce81168960
offset:1510*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x81168960, 0x3f9a0cce,0x81168960,0xbf9a0cce,x16, 482*SIGALIGN, x17,x1, x14)

inst_765:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xde4aeacc4d745 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xde4aeacc4d745 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fede4aeacc4d745; valaddr_reg:x16; op2:x26; op2val:0xbfede4aeacc4d745
offset:1512*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xacc4d745, 0x3fede4ae,0xacc4d745,0xbfede4ae,x16, 484*SIGALIGN, x17,x1, x14)

inst_766:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xde4aeacc4d745 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xde4aeacc4d745 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fede4aeacc4d745; valaddr_reg:x16; op2:x26; op2val:0xbfede4aeacc4d745
offset:1514*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xacc4d745, 0x3fede4ae,0xacc4d745,0xbfede4ae,x16, 486*SIGALIGN, x17,x1, x14)

inst_767:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xde4aeacc4d745 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xde4aeacc4d745 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fede4aeacc4d745; valaddr_reg:x16; op2:x26; op2val:0xbfede4aeacc4d745
offset:1516*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xacc4d745, 0x3fede4ae,0xacc4d745,0xbfede4ae,x16, 488*SIGALIGN, x17,x1, x14)

inst_768:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xde4aeacc4d745 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xde4aeacc4d745 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fede4aeacc4d745; valaddr_reg:x16; op2:x26; op2val:0xbfede4aeacc4d745
offset:1518*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xacc4d745, 0x3fede4ae,0xacc4d745,0xbfede4ae,x16, 490*SIGALIGN, x17,x1, x14)

inst_769:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xde4aeacc4d745 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xde4aeacc4d745 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fede4aeacc4d745; valaddr_reg:x16; op2:x26; op2val:0xbfede4aeacc4d745
offset:1520*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xacc4d745, 0x3fede4ae,0xacc4d745,0xbfede4ae,x16, 492*SIGALIGN, x17,x1, x14)

inst_770:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x002230e3b4592 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x002230e3b4592 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd002230e3b4592; valaddr_reg:x16; op2:x26; op2val:0xbfd002230e3b4592
offset:1522*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0e3b4592, 0x3fd00223,0x0e3b4592,0xbfd00223,x16, 494*SIGALIGN, x17,x1, x14)

inst_771:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x002230e3b4592 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x002230e3b4592 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd002230e3b4592; valaddr_reg:x16; op2:x26; op2val:0xbfd002230e3b4592
offset:1524*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x0e3b4592, 0x3fd00223,0x0e3b4592,0xbfd00223,x16, 496*SIGALIGN, x17,x1, x14)

inst_772:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x002230e3b4592 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x002230e3b4592 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd002230e3b4592; valaddr_reg:x16; op2:x26; op2val:0xbfd002230e3b4592
offset:1526*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x0e3b4592, 0x3fd00223,0x0e3b4592,0xbfd00223,x16, 498*SIGALIGN, x17,x1, x14)

inst_773:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x002230e3b4592 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x002230e3b4592 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd002230e3b4592; valaddr_reg:x16; op2:x26; op2val:0xbfd002230e3b4592
offset:1528*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x0e3b4592, 0x3fd00223,0x0e3b4592,0xbfd00223,x16, 500*SIGALIGN, x17,x1, x14)

inst_774:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x002230e3b4592 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x002230e3b4592 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd002230e3b4592; valaddr_reg:x16; op2:x26; op2val:0xbfd002230e3b4592
offset:1530*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x0e3b4592, 0x3fd00223,0x0e3b4592,0xbfd00223,x16, 502*SIGALIGN, x17,x1, x14)

inst_775:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfbfaf3f9b91d5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfbfaf3f9b91d5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fefbfaf3f9b91d5; valaddr_reg:x16; op2:x26; op2val:0xbfefbfaf3f9b91d5
offset:1532*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x3f9b91d5, 0x3fefbfaf,0x3f9b91d5,0xbfefbfaf,x16, 504*SIGALIGN, x17,x1, x14)

inst_776:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfbfaf3f9b91d5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfbfaf3f9b91d5 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fefbfaf3f9b91d5; valaddr_reg:x16; op2:x26; op2val:0xbfefbfaf3f9b91d5
offset:1534*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x3f9b91d5, 0x3fefbfaf,0x3f9b91d5,0xbfefbfaf,x16, 506*SIGALIGN, x17,x1, x14)

inst_777:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfbfaf3f9b91d5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfbfaf3f9b91d5 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fefbfaf3f9b91d5; valaddr_reg:x16; op2:x26; op2val:0xbfefbfaf3f9b91d5
offset:1536*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x3f9b91d5, 0x3fefbfaf,0x3f9b91d5,0xbfefbfaf,x16, 508*SIGALIGN, x17,x1, x14)

inst_778:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfbfaf3f9b91d5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfbfaf3f9b91d5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fefbfaf3f9b91d5; valaddr_reg:x16; op2:x26; op2val:0xbfefbfaf3f9b91d5
offset:1538*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x3f9b91d5, 0x3fefbfaf,0x3f9b91d5,0xbfefbfaf,x16, 510*SIGALIGN, x17,x1, x14)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_779:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfbfaf3f9b91d5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfbfaf3f9b91d5 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fefbfaf3f9b91d5; valaddr_reg:x16; op2:x26; op2val:0xbfefbfaf3f9b91d5
offset:1540*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x3f9b91d5, 0x3fefbfaf,0x3f9b91d5,0xbfefbfaf,x16, 0*SIGALIGN, x17,x1, x14)

inst_780:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xec8a495ae726e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xec8a495ae726e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdec8a495ae726e; valaddr_reg:x16; op2:x26; op2val:0xbfdec8a495ae726e
offset:1542*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x95ae726e, 0x3fdec8a4,0x95ae726e,0xbfdec8a4,x16, 2*SIGALIGN, x17,x1, x14)

inst_781:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xec8a495ae726e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xec8a495ae726e and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdec8a495ae726e; valaddr_reg:x16; op2:x26; op2val:0xbfdec8a495ae726e
offset:1544*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x95ae726e, 0x3fdec8a4,0x95ae726e,0xbfdec8a4,x16, 4*SIGALIGN, x17,x1, x14)

inst_782:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xec8a495ae726e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xec8a495ae726e and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdec8a495ae726e; valaddr_reg:x16; op2:x26; op2val:0xbfdec8a495ae726e
offset:1546*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x95ae726e, 0x3fdec8a4,0x95ae726e,0xbfdec8a4,x16, 6*SIGALIGN, x17,x1, x14)

inst_783:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xec8a495ae726e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xec8a495ae726e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdec8a495ae726e; valaddr_reg:x16; op2:x26; op2val:0xbfdec8a495ae726e
offset:1548*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x95ae726e, 0x3fdec8a4,0x95ae726e,0xbfdec8a4,x16, 8*SIGALIGN, x17,x1, x14)

inst_784:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xec8a495ae726e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xec8a495ae726e and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdec8a495ae726e; valaddr_reg:x16; op2:x26; op2val:0xbfdec8a495ae726e
offset:1550*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x95ae726e, 0x3fdec8a4,0x95ae726e,0xbfdec8a4,x16, 10*SIGALIGN, x17,x1, x14)

inst_785:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x05d3c18d8cad5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x05d3c18d8cad5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe05d3c18d8cad5; valaddr_reg:x16; op2:x26; op2val:0xbfe05d3c18d8cad5
offset:1552*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x18d8cad5, 0x3fe05d3c,0x18d8cad5,0xbfe05d3c,x16, 12*SIGALIGN, x17,x1, x14)

inst_786:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x05d3c18d8cad5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x05d3c18d8cad5 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe05d3c18d8cad5; valaddr_reg:x16; op2:x26; op2val:0xbfe05d3c18d8cad5
offset:1554*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x18d8cad5, 0x3fe05d3c,0x18d8cad5,0xbfe05d3c,x16, 14*SIGALIGN, x17,x1, x14)

inst_787:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x05d3c18d8cad5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x05d3c18d8cad5 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe05d3c18d8cad5; valaddr_reg:x16; op2:x26; op2val:0xbfe05d3c18d8cad5
offset:1556*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x18d8cad5, 0x3fe05d3c,0x18d8cad5,0xbfe05d3c,x16, 16*SIGALIGN, x17,x1, x14)

inst_788:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x05d3c18d8cad5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x05d3c18d8cad5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe05d3c18d8cad5; valaddr_reg:x16; op2:x26; op2val:0xbfe05d3c18d8cad5
offset:1558*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x18d8cad5, 0x3fe05d3c,0x18d8cad5,0xbfe05d3c,x16, 18*SIGALIGN, x17,x1, x14)

inst_789:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x05d3c18d8cad5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x05d3c18d8cad5 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe05d3c18d8cad5; valaddr_reg:x16; op2:x26; op2val:0xbfe05d3c18d8cad5
offset:1560*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x18d8cad5, 0x3fe05d3c,0x18d8cad5,0xbfe05d3c,x16, 20*SIGALIGN, x17,x1, x14)

inst_790:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4864e86431094 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x4864e86431094 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd4864e86431094; valaddr_reg:x16; op2:x26; op2val:0xbfd4864e86431094
offset:1562*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x86431094, 0x3fd4864e,0x86431094,0xbfd4864e,x16, 22*SIGALIGN, x17,x1, x14)

inst_791:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4864e86431094 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x4864e86431094 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd4864e86431094; valaddr_reg:x16; op2:x26; op2val:0xbfd4864e86431094
offset:1564*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x86431094, 0x3fd4864e,0x86431094,0xbfd4864e,x16, 24*SIGALIGN, x17,x1, x14)

inst_792:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4864e86431094 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x4864e86431094 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd4864e86431094; valaddr_reg:x16; op2:x26; op2val:0xbfd4864e86431094
offset:1566*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x86431094, 0x3fd4864e,0x86431094,0xbfd4864e,x16, 26*SIGALIGN, x17,x1, x14)

inst_793:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4864e86431094 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x4864e86431094 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd4864e86431094; valaddr_reg:x16; op2:x26; op2val:0xbfd4864e86431094
offset:1568*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x86431094, 0x3fd4864e,0x86431094,0xbfd4864e,x16, 28*SIGALIGN, x17,x1, x14)

inst_794:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4864e86431094 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x4864e86431094 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd4864e86431094; valaddr_reg:x16; op2:x26; op2val:0xbfd4864e86431094
offset:1570*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x86431094, 0x3fd4864e,0x86431094,0xbfd4864e,x16, 30*SIGALIGN, x17,x1, x14)

inst_795:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x436a0f31e942f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x436a0f31e942f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe436a0f31e942f; valaddr_reg:x16; op2:x26; op2val:0xbfe436a0f31e942f
offset:1572*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf31e942f, 0x3fe436a0,0xf31e942f,0xbfe436a0,x16, 32*SIGALIGN, x17,x1, x14)

inst_796:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x436a0f31e942f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x436a0f31e942f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe436a0f31e942f; valaddr_reg:x16; op2:x26; op2val:0xbfe436a0f31e942f
offset:1574*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xf31e942f, 0x3fe436a0,0xf31e942f,0xbfe436a0,x16, 34*SIGALIGN, x17,x1, x14)

inst_797:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x436a0f31e942f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x436a0f31e942f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe436a0f31e942f; valaddr_reg:x16; op2:x26; op2val:0xbfe436a0f31e942f
offset:1576*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xf31e942f, 0x3fe436a0,0xf31e942f,0xbfe436a0,x16, 36*SIGALIGN, x17,x1, x14)

inst_798:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x436a0f31e942f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x436a0f31e942f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe436a0f31e942f; valaddr_reg:x16; op2:x26; op2val:0xbfe436a0f31e942f
offset:1578*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf31e942f, 0x3fe436a0,0xf31e942f,0xbfe436a0,x16, 38*SIGALIGN, x17,x1, x14)

inst_799:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x436a0f31e942f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x436a0f31e942f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe436a0f31e942f; valaddr_reg:x16; op2:x26; op2val:0xbfe436a0f31e942f
offset:1580*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xf31e942f, 0x3fe436a0,0xf31e942f,0xbfe436a0,x16, 40*SIGALIGN, x17,x1, x14)

inst_800:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7a6925da8b9ff and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7a6925da8b9ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe7a6925da8b9ff; valaddr_reg:x16; op2:x26; op2val:0xbfe7a6925da8b9ff
offset:1582*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x5da8b9ff, 0x3fe7a692,0x5da8b9ff,0xbfe7a692,x16, 42*SIGALIGN, x17,x1, x14)

inst_801:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7a6925da8b9ff and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7a6925da8b9ff and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe7a6925da8b9ff; valaddr_reg:x16; op2:x26; op2val:0xbfe7a6925da8b9ff
offset:1584*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x5da8b9ff, 0x3fe7a692,0x5da8b9ff,0xbfe7a692,x16, 44*SIGALIGN, x17,x1, x14)

inst_802:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7a6925da8b9ff and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7a6925da8b9ff and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe7a6925da8b9ff; valaddr_reg:x16; op2:x26; op2val:0xbfe7a6925da8b9ff
offset:1586*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x5da8b9ff, 0x3fe7a692,0x5da8b9ff,0xbfe7a692,x16, 46*SIGALIGN, x17,x1, x14)

inst_803:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7a6925da8b9ff and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7a6925da8b9ff and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe7a6925da8b9ff; valaddr_reg:x16; op2:x26; op2val:0xbfe7a6925da8b9ff
offset:1588*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x5da8b9ff, 0x3fe7a692,0x5da8b9ff,0xbfe7a692,x16, 48*SIGALIGN, x17,x1, x14)

inst_804:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7a6925da8b9ff and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7a6925da8b9ff and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe7a6925da8b9ff; valaddr_reg:x16; op2:x26; op2val:0xbfe7a6925da8b9ff
offset:1590*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x5da8b9ff, 0x3fe7a692,0x5da8b9ff,0xbfe7a692,x16, 50*SIGALIGN, x17,x1, x14)

inst_805:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2336ff73b72c5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2336ff73b72c5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2336ff73b72c5; valaddr_reg:x16; op2:x26; op2val:0xbfe2336ff73b72c5
offset:1592*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf73b72c5, 0x3fe2336f,0xf73b72c5,0xbfe2336f,x16, 52*SIGALIGN, x17,x1, x14)

inst_806:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2336ff73b72c5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2336ff73b72c5 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2336ff73b72c5; valaddr_reg:x16; op2:x26; op2val:0xbfe2336ff73b72c5
offset:1594*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xf73b72c5, 0x3fe2336f,0xf73b72c5,0xbfe2336f,x16, 54*SIGALIGN, x17,x1, x14)

inst_807:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2336ff73b72c5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2336ff73b72c5 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2336ff73b72c5; valaddr_reg:x16; op2:x26; op2val:0xbfe2336ff73b72c5
offset:1596*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xf73b72c5, 0x3fe2336f,0xf73b72c5,0xbfe2336f,x16, 56*SIGALIGN, x17,x1, x14)

inst_808:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2336ff73b72c5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2336ff73b72c5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2336ff73b72c5; valaddr_reg:x16; op2:x26; op2val:0xbfe2336ff73b72c5
offset:1598*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf73b72c5, 0x3fe2336f,0xf73b72c5,0xbfe2336f,x16, 58*SIGALIGN, x17,x1, x14)

inst_809:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2336ff73b72c5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2336ff73b72c5 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2336ff73b72c5; valaddr_reg:x16; op2:x26; op2val:0xbfe2336ff73b72c5
offset:1600*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xf73b72c5, 0x3fe2336f,0xf73b72c5,0xbfe2336f,x16, 60*SIGALIGN, x17,x1, x14)

inst_810:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdf4e02cb64ab2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xdf4e02cb64ab2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fedf4e02cb64ab2; valaddr_reg:x16; op2:x26; op2val:0xbfedf4e02cb64ab2
offset:1602*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x2cb64ab2, 0x3fedf4e0,0x2cb64ab2,0xbfedf4e0,x16, 62*SIGALIGN, x17,x1, x14)

inst_811:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdf4e02cb64ab2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xdf4e02cb64ab2 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fedf4e02cb64ab2; valaddr_reg:x16; op2:x26; op2val:0xbfedf4e02cb64ab2
offset:1604*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x2cb64ab2, 0x3fedf4e0,0x2cb64ab2,0xbfedf4e0,x16, 64*SIGALIGN, x17,x1, x14)

inst_812:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdf4e02cb64ab2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xdf4e02cb64ab2 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fedf4e02cb64ab2; valaddr_reg:x16; op2:x26; op2val:0xbfedf4e02cb64ab2
offset:1606*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x2cb64ab2, 0x3fedf4e0,0x2cb64ab2,0xbfedf4e0,x16, 66*SIGALIGN, x17,x1, x14)

inst_813:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdf4e02cb64ab2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xdf4e02cb64ab2 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fedf4e02cb64ab2; valaddr_reg:x16; op2:x26; op2val:0xbfedf4e02cb64ab2
offset:1608*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x2cb64ab2, 0x3fedf4e0,0x2cb64ab2,0xbfedf4e0,x16, 68*SIGALIGN, x17,x1, x14)

inst_814:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdf4e02cb64ab2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xdf4e02cb64ab2 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fedf4e02cb64ab2; valaddr_reg:x16; op2:x26; op2val:0xbfedf4e02cb64ab2
offset:1610*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x2cb64ab2, 0x3fedf4e0,0x2cb64ab2,0xbfedf4e0,x16, 70*SIGALIGN, x17,x1, x14)

inst_815:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3125d2fc76fb8 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x3125d2fc76fb8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd3125d2fc76fb8; valaddr_reg:x16; op2:x26; op2val:0xbfd3125d2fc76fb8
offset:1612*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x2fc76fb8, 0x3fd3125d,0x2fc76fb8,0xbfd3125d,x16, 72*SIGALIGN, x17,x1, x14)

inst_816:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3125d2fc76fb8 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x3125d2fc76fb8 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd3125d2fc76fb8; valaddr_reg:x16; op2:x26; op2val:0xbfd3125d2fc76fb8
offset:1614*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x2fc76fb8, 0x3fd3125d,0x2fc76fb8,0xbfd3125d,x16, 74*SIGALIGN, x17,x1, x14)

inst_817:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3125d2fc76fb8 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x3125d2fc76fb8 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd3125d2fc76fb8; valaddr_reg:x16; op2:x26; op2val:0xbfd3125d2fc76fb8
offset:1616*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x2fc76fb8, 0x3fd3125d,0x2fc76fb8,0xbfd3125d,x16, 76*SIGALIGN, x17,x1, x14)

inst_818:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3125d2fc76fb8 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x3125d2fc76fb8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd3125d2fc76fb8; valaddr_reg:x16; op2:x26; op2val:0xbfd3125d2fc76fb8
offset:1618*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x2fc76fb8, 0x3fd3125d,0x2fc76fb8,0xbfd3125d,x16, 78*SIGALIGN, x17,x1, x14)

inst_819:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3125d2fc76fb8 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x3125d2fc76fb8 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd3125d2fc76fb8; valaddr_reg:x16; op2:x26; op2val:0xbfd3125d2fc76fb8
offset:1620*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x2fc76fb8, 0x3fd3125d,0x2fc76fb8,0xbfd3125d,x16, 80*SIGALIGN, x17,x1, x14)

inst_820:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x18c656cfd80ca and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x18c656cfd80ca and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe18c656cfd80ca; valaddr_reg:x16; op2:x26; op2val:0xbfe18c656cfd80ca
offset:1622*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x6cfd80ca, 0x3fe18c65,0x6cfd80ca,0xbfe18c65,x16, 82*SIGALIGN, x17,x1, x14)

inst_821:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x18c656cfd80ca and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x18c656cfd80ca and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe18c656cfd80ca; valaddr_reg:x16; op2:x26; op2val:0xbfe18c656cfd80ca
offset:1624*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x6cfd80ca, 0x3fe18c65,0x6cfd80ca,0xbfe18c65,x16, 84*SIGALIGN, x17,x1, x14)

inst_822:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x18c656cfd80ca and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x18c656cfd80ca and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe18c656cfd80ca; valaddr_reg:x16; op2:x26; op2val:0xbfe18c656cfd80ca
offset:1626*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x6cfd80ca, 0x3fe18c65,0x6cfd80ca,0xbfe18c65,x16, 86*SIGALIGN, x17,x1, x14)

inst_823:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x18c656cfd80ca and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x18c656cfd80ca and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe18c656cfd80ca; valaddr_reg:x16; op2:x26; op2val:0xbfe18c656cfd80ca
offset:1628*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x6cfd80ca, 0x3fe18c65,0x6cfd80ca,0xbfe18c65,x16, 88*SIGALIGN, x17,x1, x14)

inst_824:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x18c656cfd80ca and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x18c656cfd80ca and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe18c656cfd80ca; valaddr_reg:x16; op2:x26; op2val:0xbfe18c656cfd80ca
offset:1630*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x6cfd80ca, 0x3fe18c65,0x6cfd80ca,0xbfe18c65,x16, 90*SIGALIGN, x17,x1, x14)

inst_825:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc31e30e02fb81 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc31e30e02fb81 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fec31e30e02fb81; valaddr_reg:x16; op2:x26; op2val:0xbfec31e30e02fb81
offset:1632*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0e02fb81, 0x3fec31e3,0x0e02fb81,0xbfec31e3,x16, 92*SIGALIGN, x17,x1, x14)

inst_826:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc31e30e02fb81 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc31e30e02fb81 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fec31e30e02fb81; valaddr_reg:x16; op2:x26; op2val:0xbfec31e30e02fb81
offset:1634*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x0e02fb81, 0x3fec31e3,0x0e02fb81,0xbfec31e3,x16, 94*SIGALIGN, x17,x1, x14)

inst_827:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc31e30e02fb81 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc31e30e02fb81 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fec31e30e02fb81; valaddr_reg:x16; op2:x26; op2val:0xbfec31e30e02fb81
offset:1636*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x0e02fb81, 0x3fec31e3,0x0e02fb81,0xbfec31e3,x16, 96*SIGALIGN, x17,x1, x14)

inst_828:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc31e30e02fb81 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc31e30e02fb81 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fec31e30e02fb81; valaddr_reg:x16; op2:x26; op2val:0xbfec31e30e02fb81
offset:1638*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x0e02fb81, 0x3fec31e3,0x0e02fb81,0xbfec31e3,x16, 98*SIGALIGN, x17,x1, x14)

inst_829:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc31e30e02fb81 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc31e30e02fb81 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fec31e30e02fb81; valaddr_reg:x16; op2:x26; op2val:0xbfec31e30e02fb81
offset:1640*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x0e02fb81, 0x3fec31e3,0x0e02fb81,0xbfec31e3,x16, 100*SIGALIGN, x17,x1, x14)

inst_830:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x95e5b0d6f9e6a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x95e5b0d6f9e6a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe95e5b0d6f9e6a; valaddr_reg:x16; op2:x26; op2val:0xbfe95e5b0d6f9e6a
offset:1642*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0d6f9e6a, 0x3fe95e5b,0x0d6f9e6a,0xbfe95e5b,x16, 102*SIGALIGN, x17,x1, x14)

inst_831:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x95e5b0d6f9e6a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x95e5b0d6f9e6a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe95e5b0d6f9e6a; valaddr_reg:x16; op2:x26; op2val:0xbfe95e5b0d6f9e6a
offset:1644*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x0d6f9e6a, 0x3fe95e5b,0x0d6f9e6a,0xbfe95e5b,x16, 104*SIGALIGN, x17,x1, x14)

inst_832:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x95e5b0d6f9e6a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x95e5b0d6f9e6a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe95e5b0d6f9e6a; valaddr_reg:x16; op2:x26; op2val:0xbfe95e5b0d6f9e6a
offset:1646*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x0d6f9e6a, 0x3fe95e5b,0x0d6f9e6a,0xbfe95e5b,x16, 106*SIGALIGN, x17,x1, x14)

inst_833:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x95e5b0d6f9e6a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x95e5b0d6f9e6a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe95e5b0d6f9e6a; valaddr_reg:x16; op2:x26; op2val:0xbfe95e5b0d6f9e6a
offset:1648*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x0d6f9e6a, 0x3fe95e5b,0x0d6f9e6a,0xbfe95e5b,x16, 108*SIGALIGN, x17,x1, x14)

inst_834:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x95e5b0d6f9e6a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x95e5b0d6f9e6a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe95e5b0d6f9e6a; valaddr_reg:x16; op2:x26; op2val:0xbfe95e5b0d6f9e6a
offset:1650*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x0d6f9e6a, 0x3fe95e5b,0x0d6f9e6a,0xbfe95e5b,x16, 110*SIGALIGN, x17,x1, x14)

inst_835:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xaa4cf4cf6dab0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xaa4cf4cf6dab0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3faaa4cf4cf6dab0; valaddr_reg:x16; op2:x26; op2val:0xbfaaa4cf4cf6dab0
offset:1652*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x4cf6dab0, 0x3faaa4cf,0x4cf6dab0,0xbfaaa4cf,x16, 112*SIGALIGN, x17,x1, x14)

inst_836:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xaa4cf4cf6dab0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xaa4cf4cf6dab0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3faaa4cf4cf6dab0; valaddr_reg:x16; op2:x26; op2val:0xbfaaa4cf4cf6dab0
offset:1654*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x4cf6dab0, 0x3faaa4cf,0x4cf6dab0,0xbfaaa4cf,x16, 114*SIGALIGN, x17,x1, x14)

inst_837:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xaa4cf4cf6dab0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xaa4cf4cf6dab0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3faaa4cf4cf6dab0; valaddr_reg:x16; op2:x26; op2val:0xbfaaa4cf4cf6dab0
offset:1656*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x4cf6dab0, 0x3faaa4cf,0x4cf6dab0,0xbfaaa4cf,x16, 116*SIGALIGN, x17,x1, x14)

inst_838:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xaa4cf4cf6dab0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xaa4cf4cf6dab0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3faaa4cf4cf6dab0; valaddr_reg:x16; op2:x26; op2val:0xbfaaa4cf4cf6dab0
offset:1658*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x4cf6dab0, 0x3faaa4cf,0x4cf6dab0,0xbfaaa4cf,x16, 118*SIGALIGN, x17,x1, x14)

inst_839:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xaa4cf4cf6dab0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xaa4cf4cf6dab0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3faaa4cf4cf6dab0; valaddr_reg:x16; op2:x26; op2val:0xbfaaa4cf4cf6dab0
offset:1660*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x4cf6dab0, 0x3faaa4cf,0x4cf6dab0,0xbfaaa4cf,x16, 120*SIGALIGN, x17,x1, x14)

inst_840:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb51106394dbf5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb51106394dbf5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb51106394dbf5; valaddr_reg:x16; op2:x26; op2val:0xbfeb51106394dbf5
offset:1662*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x6394dbf5, 0x3feb5110,0x6394dbf5,0xbfeb5110,x16, 122*SIGALIGN, x17,x1, x14)

inst_841:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb51106394dbf5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb51106394dbf5 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb51106394dbf5; valaddr_reg:x16; op2:x26; op2val:0xbfeb51106394dbf5
offset:1664*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x6394dbf5, 0x3feb5110,0x6394dbf5,0xbfeb5110,x16, 124*SIGALIGN, x17,x1, x14)

inst_842:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb51106394dbf5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb51106394dbf5 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb51106394dbf5; valaddr_reg:x16; op2:x26; op2val:0xbfeb51106394dbf5
offset:1666*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x6394dbf5, 0x3feb5110,0x6394dbf5,0xbfeb5110,x16, 126*SIGALIGN, x17,x1, x14)

inst_843:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb51106394dbf5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb51106394dbf5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb51106394dbf5; valaddr_reg:x16; op2:x26; op2val:0xbfeb51106394dbf5
offset:1668*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x6394dbf5, 0x3feb5110,0x6394dbf5,0xbfeb5110,x16, 128*SIGALIGN, x17,x1, x14)

inst_844:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb51106394dbf5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb51106394dbf5 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb51106394dbf5; valaddr_reg:x16; op2:x26; op2val:0xbfeb51106394dbf5
offset:1670*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x6394dbf5, 0x3feb5110,0x6394dbf5,0xbfeb5110,x16, 130*SIGALIGN, x17,x1, x14)

inst_845:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3e729828dadb2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3e729828dadb2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe3e729828dadb2; valaddr_reg:x16; op2:x26; op2val:0xbfe3e729828dadb2
offset:1672*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x828dadb2, 0x3fe3e729,0x828dadb2,0xbfe3e729,x16, 132*SIGALIGN, x17,x1, x14)

inst_846:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3e729828dadb2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3e729828dadb2 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe3e729828dadb2; valaddr_reg:x16; op2:x26; op2val:0xbfe3e729828dadb2
offset:1674*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x828dadb2, 0x3fe3e729,0x828dadb2,0xbfe3e729,x16, 134*SIGALIGN, x17,x1, x14)

inst_847:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3e729828dadb2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3e729828dadb2 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe3e729828dadb2; valaddr_reg:x16; op2:x26; op2val:0xbfe3e729828dadb2
offset:1676*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x828dadb2, 0x3fe3e729,0x828dadb2,0xbfe3e729,x16, 136*SIGALIGN, x17,x1, x14)

inst_848:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3e729828dadb2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3e729828dadb2 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe3e729828dadb2; valaddr_reg:x16; op2:x26; op2val:0xbfe3e729828dadb2
offset:1678*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x828dadb2, 0x3fe3e729,0x828dadb2,0xbfe3e729,x16, 138*SIGALIGN, x17,x1, x14)

inst_849:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3e729828dadb2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3e729828dadb2 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe3e729828dadb2; valaddr_reg:x16; op2:x26; op2val:0xbfe3e729828dadb2
offset:1680*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x828dadb2, 0x3fe3e729,0x828dadb2,0xbfe3e729,x16, 140*SIGALIGN, x17,x1, x14)

inst_850:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb2844d394bd65 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb2844d394bd65 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb2844d394bd65; valaddr_reg:x16; op2:x26; op2val:0xbfeb2844d394bd65
offset:1682*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xd394bd65, 0x3feb2844,0xd394bd65,0xbfeb2844,x16, 142*SIGALIGN, x17,x1, x14)

inst_851:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb2844d394bd65 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb2844d394bd65 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb2844d394bd65; valaddr_reg:x16; op2:x26; op2val:0xbfeb2844d394bd65
offset:1684*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xd394bd65, 0x3feb2844,0xd394bd65,0xbfeb2844,x16, 144*SIGALIGN, x17,x1, x14)

inst_852:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb2844d394bd65 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb2844d394bd65 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb2844d394bd65; valaddr_reg:x16; op2:x26; op2val:0xbfeb2844d394bd65
offset:1686*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xd394bd65, 0x3feb2844,0xd394bd65,0xbfeb2844,x16, 146*SIGALIGN, x17,x1, x14)

inst_853:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb2844d394bd65 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb2844d394bd65 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb2844d394bd65; valaddr_reg:x16; op2:x26; op2val:0xbfeb2844d394bd65
offset:1688*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd394bd65, 0x3feb2844,0xd394bd65,0xbfeb2844,x16, 148*SIGALIGN, x17,x1, x14)

inst_854:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb2844d394bd65 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb2844d394bd65 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb2844d394bd65; valaddr_reg:x16; op2:x26; op2val:0xbfeb2844d394bd65
offset:1690*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xd394bd65, 0x3feb2844,0xd394bd65,0xbfeb2844,x16, 150*SIGALIGN, x17,x1, x14)

inst_855:// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x16b46c18c7260 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x16b46c18c7260 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f916b46c18c7260; valaddr_reg:x16; op2:x26; op2val:0xbf916b46c18c7260
offset:1692*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xc18c7260, 0x3f916b46,0xc18c7260,0xbf916b46,x16, 152*SIGALIGN, x17,x1, x14)

inst_856:// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x16b46c18c7260 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x16b46c18c7260 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f916b46c18c7260; valaddr_reg:x16; op2:x26; op2val:0xbf916b46c18c7260
offset:1694*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xc18c7260, 0x3f916b46,0xc18c7260,0xbf916b46,x16, 154*SIGALIGN, x17,x1, x14)

inst_857:// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x16b46c18c7260 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x16b46c18c7260 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f916b46c18c7260; valaddr_reg:x16; op2:x26; op2val:0xbf916b46c18c7260
offset:1696*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xc18c7260, 0x3f916b46,0xc18c7260,0xbf916b46,x16, 156*SIGALIGN, x17,x1, x14)

inst_858:// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x16b46c18c7260 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x16b46c18c7260 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f916b46c18c7260; valaddr_reg:x16; op2:x26; op2val:0xbf916b46c18c7260
offset:1698*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xc18c7260, 0x3f916b46,0xc18c7260,0xbf916b46,x16, 158*SIGALIGN, x17,x1, x14)

inst_859:// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x16b46c18c7260 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x16b46c18c7260 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f916b46c18c7260; valaddr_reg:x16; op2:x26; op2val:0xbf916b46c18c7260
offset:1700*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xc18c7260, 0x3f916b46,0xc18c7260,0xbf916b46,x16, 160*SIGALIGN, x17,x1, x14)

inst_860:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x302cf917250d4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x302cf917250d4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe302cf917250d4; valaddr_reg:x16; op2:x26; op2val:0xbfe302cf917250d4
offset:1702*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x917250d4, 0x3fe302cf,0x917250d4,0xbfe302cf,x16, 162*SIGALIGN, x17,x1, x14)

inst_861:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x302cf917250d4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x302cf917250d4 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe302cf917250d4; valaddr_reg:x16; op2:x26; op2val:0xbfe302cf917250d4
offset:1704*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x917250d4, 0x3fe302cf,0x917250d4,0xbfe302cf,x16, 164*SIGALIGN, x17,x1, x14)

inst_862:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x302cf917250d4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x302cf917250d4 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe302cf917250d4; valaddr_reg:x16; op2:x26; op2val:0xbfe302cf917250d4
offset:1706*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x917250d4, 0x3fe302cf,0x917250d4,0xbfe302cf,x16, 166*SIGALIGN, x17,x1, x14)

inst_863:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x302cf917250d4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x302cf917250d4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe302cf917250d4; valaddr_reg:x16; op2:x26; op2val:0xbfe302cf917250d4
offset:1708*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x917250d4, 0x3fe302cf,0x917250d4,0xbfe302cf,x16, 168*SIGALIGN, x17,x1, x14)

inst_864:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x302cf917250d4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x302cf917250d4 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe302cf917250d4; valaddr_reg:x16; op2:x26; op2val:0xbfe302cf917250d4
offset:1710*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x917250d4, 0x3fe302cf,0x917250d4,0xbfe302cf,x16, 170*SIGALIGN, x17,x1, x14)

inst_865:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xf51e5ef521850 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xf51e5ef521850 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbf51e5ef521850; valaddr_reg:x16; op2:x26; op2val:0xbfbf51e5ef521850
offset:1712*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xef521850, 0x3fbf51e5,0xef521850,0xbfbf51e5,x16, 172*SIGALIGN, x17,x1, x14)

inst_866:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xf51e5ef521850 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xf51e5ef521850 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbf51e5ef521850; valaddr_reg:x16; op2:x26; op2val:0xbfbf51e5ef521850
offset:1714*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xef521850, 0x3fbf51e5,0xef521850,0xbfbf51e5,x16, 174*SIGALIGN, x17,x1, x14)

inst_867:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xf51e5ef521850 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xf51e5ef521850 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbf51e5ef521850; valaddr_reg:x16; op2:x26; op2val:0xbfbf51e5ef521850
offset:1716*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xef521850, 0x3fbf51e5,0xef521850,0xbfbf51e5,x16, 176*SIGALIGN, x17,x1, x14)

inst_868:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xf51e5ef521850 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xf51e5ef521850 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbf51e5ef521850; valaddr_reg:x16; op2:x26; op2val:0xbfbf51e5ef521850
offset:1718*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xef521850, 0x3fbf51e5,0xef521850,0xbfbf51e5,x16, 178*SIGALIGN, x17,x1, x14)

inst_869:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xf51e5ef521850 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xf51e5ef521850 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbf51e5ef521850; valaddr_reg:x16; op2:x26; op2val:0xbfbf51e5ef521850
offset:1720*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xef521850, 0x3fbf51e5,0xef521850,0xbfbf51e5,x16, 180*SIGALIGN, x17,x1, x14)

inst_870:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x53c6de3974a78 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x53c6de3974a78 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb53c6de3974a78; valaddr_reg:x16; op2:x26; op2val:0xbfb53c6de3974a78
offset:1722*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe3974a78, 0x3fb53c6d,0xe3974a78,0xbfb53c6d,x16, 182*SIGALIGN, x17,x1, x14)

inst_871:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x53c6de3974a78 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x53c6de3974a78 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb53c6de3974a78; valaddr_reg:x16; op2:x26; op2val:0xbfb53c6de3974a78
offset:1724*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xe3974a78, 0x3fb53c6d,0xe3974a78,0xbfb53c6d,x16, 184*SIGALIGN, x17,x1, x14)

inst_872:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x53c6de3974a78 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x53c6de3974a78 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb53c6de3974a78; valaddr_reg:x16; op2:x26; op2val:0xbfb53c6de3974a78
offset:1726*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xe3974a78, 0x3fb53c6d,0xe3974a78,0xbfb53c6d,x16, 186*SIGALIGN, x17,x1, x14)

inst_873:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x53c6de3974a78 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x53c6de3974a78 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb53c6de3974a78; valaddr_reg:x16; op2:x26; op2val:0xbfb53c6de3974a78
offset:1728*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe3974a78, 0x3fb53c6d,0xe3974a78,0xbfb53c6d,x16, 188*SIGALIGN, x17,x1, x14)

inst_874:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x53c6de3974a78 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x53c6de3974a78 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb53c6de3974a78; valaddr_reg:x16; op2:x26; op2val:0xbfb53c6de3974a78
offset:1730*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xe3974a78, 0x3fb53c6d,0xe3974a78,0xbfb53c6d,x16, 190*SIGALIGN, x17,x1, x14)

inst_875:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x00cc5b001dc4e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x00cc5b001dc4e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe00cc5b001dc4e; valaddr_reg:x16; op2:x26; op2val:0xbfe00cc5b001dc4e
offset:1732*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xb001dc4e, 0x3fe00cc5,0xb001dc4e,0xbfe00cc5,x16, 192*SIGALIGN, x17,x1, x14)

inst_876:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x00cc5b001dc4e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x00cc5b001dc4e and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe00cc5b001dc4e; valaddr_reg:x16; op2:x26; op2val:0xbfe00cc5b001dc4e
offset:1734*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xb001dc4e, 0x3fe00cc5,0xb001dc4e,0xbfe00cc5,x16, 194*SIGALIGN, x17,x1, x14)

inst_877:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x00cc5b001dc4e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x00cc5b001dc4e and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe00cc5b001dc4e; valaddr_reg:x16; op2:x26; op2val:0xbfe00cc5b001dc4e
offset:1736*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xb001dc4e, 0x3fe00cc5,0xb001dc4e,0xbfe00cc5,x16, 196*SIGALIGN, x17,x1, x14)

inst_878:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x00cc5b001dc4e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x00cc5b001dc4e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe00cc5b001dc4e; valaddr_reg:x16; op2:x26; op2val:0xbfe00cc5b001dc4e
offset:1738*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xb001dc4e, 0x3fe00cc5,0xb001dc4e,0xbfe00cc5,x16, 198*SIGALIGN, x17,x1, x14)

inst_879:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x00cc5b001dc4e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x00cc5b001dc4e and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe00cc5b001dc4e; valaddr_reg:x16; op2:x26; op2val:0xbfe00cc5b001dc4e
offset:1740*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xb001dc4e, 0x3fe00cc5,0xb001dc4e,0xbfe00cc5,x16, 200*SIGALIGN, x17,x1, x14)

inst_880:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x51d9a79009dd0 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x51d9a79009dd0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd51d9a79009dd0; valaddr_reg:x16; op2:x26; op2val:0xbfd51d9a79009dd0
offset:1742*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x79009dd0, 0x3fd51d9a,0x79009dd0,0xbfd51d9a,x16, 202*SIGALIGN, x17,x1, x14)

inst_881:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x51d9a79009dd0 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x51d9a79009dd0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd51d9a79009dd0; valaddr_reg:x16; op2:x26; op2val:0xbfd51d9a79009dd0
offset:1744*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x79009dd0, 0x3fd51d9a,0x79009dd0,0xbfd51d9a,x16, 204*SIGALIGN, x17,x1, x14)

inst_882:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x51d9a79009dd0 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x51d9a79009dd0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd51d9a79009dd0; valaddr_reg:x16; op2:x26; op2val:0xbfd51d9a79009dd0
offset:1746*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x79009dd0, 0x3fd51d9a,0x79009dd0,0xbfd51d9a,x16, 206*SIGALIGN, x17,x1, x14)

inst_883:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x51d9a79009dd0 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x51d9a79009dd0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd51d9a79009dd0; valaddr_reg:x16; op2:x26; op2val:0xbfd51d9a79009dd0
offset:1748*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x79009dd0, 0x3fd51d9a,0x79009dd0,0xbfd51d9a,x16, 208*SIGALIGN, x17,x1, x14)

inst_884:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x51d9a79009dd0 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x51d9a79009dd0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd51d9a79009dd0; valaddr_reg:x16; op2:x26; op2val:0xbfd51d9a79009dd0
offset:1750*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x79009dd0, 0x3fd51d9a,0x79009dd0,0xbfd51d9a,x16, 210*SIGALIGN, x17,x1, x14)

inst_885:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8f984b08cab90 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8f984b08cab90 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd8f984b08cab90; valaddr_reg:x16; op2:x26; op2val:0xbfd8f984b08cab90
offset:1752*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xb08cab90, 0x3fd8f984,0xb08cab90,0xbfd8f984,x16, 212*SIGALIGN, x17,x1, x14)

inst_886:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8f984b08cab90 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8f984b08cab90 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd8f984b08cab90; valaddr_reg:x16; op2:x26; op2val:0xbfd8f984b08cab90
offset:1754*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xb08cab90, 0x3fd8f984,0xb08cab90,0xbfd8f984,x16, 214*SIGALIGN, x17,x1, x14)

inst_887:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8f984b08cab90 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8f984b08cab90 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd8f984b08cab90; valaddr_reg:x16; op2:x26; op2val:0xbfd8f984b08cab90
offset:1756*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xb08cab90, 0x3fd8f984,0xb08cab90,0xbfd8f984,x16, 216*SIGALIGN, x17,x1, x14)

inst_888:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8f984b08cab90 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8f984b08cab90 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd8f984b08cab90; valaddr_reg:x16; op2:x26; op2val:0xbfd8f984b08cab90
offset:1758*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xb08cab90, 0x3fd8f984,0xb08cab90,0xbfd8f984,x16, 218*SIGALIGN, x17,x1, x14)

inst_889:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8f984b08cab90 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8f984b08cab90 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd8f984b08cab90; valaddr_reg:x16; op2:x26; op2val:0xbfd8f984b08cab90
offset:1760*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xb08cab90, 0x3fd8f984,0xb08cab90,0xbfd8f984,x16, 220*SIGALIGN, x17,x1, x14)

inst_890:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x51cea492d78d7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x51cea492d78d7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe51cea492d78d7; valaddr_reg:x16; op2:x26; op2val:0xbfe51cea492d78d7
offset:1762*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x492d78d7, 0x3fe51cea,0x492d78d7,0xbfe51cea,x16, 222*SIGALIGN, x17,x1, x14)

inst_891:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x51cea492d78d7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x51cea492d78d7 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe51cea492d78d7; valaddr_reg:x16; op2:x26; op2val:0xbfe51cea492d78d7
offset:1764*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x492d78d7, 0x3fe51cea,0x492d78d7,0xbfe51cea,x16, 224*SIGALIGN, x17,x1, x14)

inst_892:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x51cea492d78d7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x51cea492d78d7 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe51cea492d78d7; valaddr_reg:x16; op2:x26; op2val:0xbfe51cea492d78d7
offset:1766*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x492d78d7, 0x3fe51cea,0x492d78d7,0xbfe51cea,x16, 226*SIGALIGN, x17,x1, x14)

inst_893:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x51cea492d78d7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x51cea492d78d7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe51cea492d78d7; valaddr_reg:x16; op2:x26; op2val:0xbfe51cea492d78d7
offset:1768*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x492d78d7, 0x3fe51cea,0x492d78d7,0xbfe51cea,x16, 228*SIGALIGN, x17,x1, x14)

inst_894:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x51cea492d78d7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x51cea492d78d7 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe51cea492d78d7; valaddr_reg:x16; op2:x26; op2val:0xbfe51cea492d78d7
offset:1770*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x492d78d7, 0x3fe51cea,0x492d78d7,0xbfe51cea,x16, 230*SIGALIGN, x17,x1, x14)

inst_895:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x9da9bf5d0d198 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x9da9bf5d0d198 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb9da9bf5d0d198; valaddr_reg:x16; op2:x26; op2val:0xbfb9da9bf5d0d198
offset:1772*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf5d0d198, 0x3fb9da9b,0xf5d0d198,0xbfb9da9b,x16, 232*SIGALIGN, x17,x1, x14)

inst_896:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x9da9bf5d0d198 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x9da9bf5d0d198 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb9da9bf5d0d198; valaddr_reg:x16; op2:x26; op2val:0xbfb9da9bf5d0d198
offset:1774*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xf5d0d198, 0x3fb9da9b,0xf5d0d198,0xbfb9da9b,x16, 234*SIGALIGN, x17,x1, x14)

inst_897:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x9da9bf5d0d198 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x9da9bf5d0d198 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb9da9bf5d0d198; valaddr_reg:x16; op2:x26; op2val:0xbfb9da9bf5d0d198
offset:1776*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xf5d0d198, 0x3fb9da9b,0xf5d0d198,0xbfb9da9b,x16, 236*SIGALIGN, x17,x1, x14)

inst_898:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x9da9bf5d0d198 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x9da9bf5d0d198 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb9da9bf5d0d198; valaddr_reg:x16; op2:x26; op2val:0xbfb9da9bf5d0d198
offset:1778*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf5d0d198, 0x3fb9da9b,0xf5d0d198,0xbfb9da9b,x16, 238*SIGALIGN, x17,x1, x14)

inst_899:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x9da9bf5d0d198 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x9da9bf5d0d198 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb9da9bf5d0d198; valaddr_reg:x16; op2:x26; op2val:0xbfb9da9bf5d0d198
offset:1780*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xf5d0d198, 0x3fb9da9b,0xf5d0d198,0xbfb9da9b,x16, 240*SIGALIGN, x17,x1, x14)

inst_900:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xedd71a9e64a40 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xedd71a9e64a40 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feedd71a9e64a40; valaddr_reg:x16; op2:x26; op2val:0xbfeedd71a9e64a40
offset:1782*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xa9e64a40, 0x3feedd71,0xa9e64a40,0xbfeedd71,x16, 242*SIGALIGN, x17,x1, x14)

inst_901:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xedd71a9e64a40 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xedd71a9e64a40 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feedd71a9e64a40; valaddr_reg:x16; op2:x26; op2val:0xbfeedd71a9e64a40
offset:1784*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xa9e64a40, 0x3feedd71,0xa9e64a40,0xbfeedd71,x16, 244*SIGALIGN, x17,x1, x14)

inst_902:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xedd71a9e64a40 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xedd71a9e64a40 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feedd71a9e64a40; valaddr_reg:x16; op2:x26; op2val:0xbfeedd71a9e64a40
offset:1786*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xa9e64a40, 0x3feedd71,0xa9e64a40,0xbfeedd71,x16, 246*SIGALIGN, x17,x1, x14)

inst_903:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xedd71a9e64a40 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xedd71a9e64a40 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feedd71a9e64a40; valaddr_reg:x16; op2:x26; op2val:0xbfeedd71a9e64a40
offset:1788*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xa9e64a40, 0x3feedd71,0xa9e64a40,0xbfeedd71,x16, 248*SIGALIGN, x17,x1, x14)

inst_904:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xedd71a9e64a40 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xedd71a9e64a40 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feedd71a9e64a40; valaddr_reg:x16; op2:x26; op2val:0xbfeedd71a9e64a40
offset:1790*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xa9e64a40, 0x3feedd71,0xa9e64a40,0xbfeedd71,x16, 250*SIGALIGN, x17,x1, x14)

inst_905:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7c79f9596f383 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7c79f9596f383 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe7c79f9596f383; valaddr_reg:x16; op2:x26; op2val:0xbfe7c79f9596f383
offset:1792*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x9596f383, 0x3fe7c79f,0x9596f383,0xbfe7c79f,x16, 252*SIGALIGN, x17,x1, x14)

inst_906:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7c79f9596f383 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7c79f9596f383 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe7c79f9596f383; valaddr_reg:x16; op2:x26; op2val:0xbfe7c79f9596f383
offset:1794*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x9596f383, 0x3fe7c79f,0x9596f383,0xbfe7c79f,x16, 254*SIGALIGN, x17,x1, x14)

inst_907:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7c79f9596f383 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7c79f9596f383 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe7c79f9596f383; valaddr_reg:x16; op2:x26; op2val:0xbfe7c79f9596f383
offset:1796*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x9596f383, 0x3fe7c79f,0x9596f383,0xbfe7c79f,x16, 256*SIGALIGN, x17,x1, x14)

inst_908:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7c79f9596f383 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7c79f9596f383 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe7c79f9596f383; valaddr_reg:x16; op2:x26; op2val:0xbfe7c79f9596f383
offset:1798*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x9596f383, 0x3fe7c79f,0x9596f383,0xbfe7c79f,x16, 258*SIGALIGN, x17,x1, x14)

inst_909:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7c79f9596f383 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7c79f9596f383 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe7c79f9596f383; valaddr_reg:x16; op2:x26; op2val:0xbfe7c79f9596f383
offset:1800*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x9596f383, 0x3fe7c79f,0x9596f383,0xbfe7c79f,x16, 260*SIGALIGN, x17,x1, x14)

inst_910:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x42e6be9ef9858 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x42e6be9ef9858 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc42e6be9ef9858; valaddr_reg:x16; op2:x26; op2val:0xbfc42e6be9ef9858
offset:1802*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe9ef9858, 0x3fc42e6b,0xe9ef9858,0xbfc42e6b,x16, 262*SIGALIGN, x17,x1, x14)

inst_911:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x42e6be9ef9858 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x42e6be9ef9858 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc42e6be9ef9858; valaddr_reg:x16; op2:x26; op2val:0xbfc42e6be9ef9858
offset:1804*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xe9ef9858, 0x3fc42e6b,0xe9ef9858,0xbfc42e6b,x16, 264*SIGALIGN, x17,x1, x14)

inst_912:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x42e6be9ef9858 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x42e6be9ef9858 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc42e6be9ef9858; valaddr_reg:x16; op2:x26; op2val:0xbfc42e6be9ef9858
offset:1806*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xe9ef9858, 0x3fc42e6b,0xe9ef9858,0xbfc42e6b,x16, 266*SIGALIGN, x17,x1, x14)

inst_913:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x42e6be9ef9858 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x42e6be9ef9858 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc42e6be9ef9858; valaddr_reg:x16; op2:x26; op2val:0xbfc42e6be9ef9858
offset:1808*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe9ef9858, 0x3fc42e6b,0xe9ef9858,0xbfc42e6b,x16, 268*SIGALIGN, x17,x1, x14)

inst_914:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x42e6be9ef9858 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x42e6be9ef9858 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc42e6be9ef9858; valaddr_reg:x16; op2:x26; op2val:0xbfc42e6be9ef9858
offset:1810*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xe9ef9858, 0x3fc42e6b,0xe9ef9858,0xbfc42e6b,x16, 270*SIGALIGN, x17,x1, x14)

inst_915:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x20a218a595902 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x20a218a595902 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd20a218a595902; valaddr_reg:x16; op2:x26; op2val:0xbfd20a218a595902
offset:1812*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x8a595902, 0x3fd20a21,0x8a595902,0xbfd20a21,x16, 272*SIGALIGN, x17,x1, x14)

inst_916:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x20a218a595902 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x20a218a595902 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd20a218a595902; valaddr_reg:x16; op2:x26; op2val:0xbfd20a218a595902
offset:1814*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x8a595902, 0x3fd20a21,0x8a595902,0xbfd20a21,x16, 274*SIGALIGN, x17,x1, x14)

inst_917:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x20a218a595902 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x20a218a595902 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd20a218a595902; valaddr_reg:x16; op2:x26; op2val:0xbfd20a218a595902
offset:1816*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x8a595902, 0x3fd20a21,0x8a595902,0xbfd20a21,x16, 276*SIGALIGN, x17,x1, x14)

inst_918:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x20a218a595902 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x20a218a595902 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd20a218a595902; valaddr_reg:x16; op2:x26; op2val:0xbfd20a218a595902
offset:1818*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x8a595902, 0x3fd20a21,0x8a595902,0xbfd20a21,x16, 278*SIGALIGN, x17,x1, x14)

inst_919:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x20a218a595902 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x20a218a595902 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd20a218a595902; valaddr_reg:x16; op2:x26; op2val:0xbfd20a218a595902
offset:1820*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x8a595902, 0x3fd20a21,0x8a595902,0xbfd20a21,x16, 280*SIGALIGN, x17,x1, x14)

inst_920:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xde062d0ccdb01 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xde062d0ccdb01 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fede062d0ccdb01; valaddr_reg:x16; op2:x26; op2val:0xbfede062d0ccdb01
offset:1822*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xd0ccdb01, 0x3fede062,0xd0ccdb01,0xbfede062,x16, 282*SIGALIGN, x17,x1, x14)

inst_921:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xde062d0ccdb01 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xde062d0ccdb01 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fede062d0ccdb01; valaddr_reg:x16; op2:x26; op2val:0xbfede062d0ccdb01
offset:1824*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xd0ccdb01, 0x3fede062,0xd0ccdb01,0xbfede062,x16, 284*SIGALIGN, x17,x1, x14)

inst_922:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xde062d0ccdb01 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xde062d0ccdb01 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fede062d0ccdb01; valaddr_reg:x16; op2:x26; op2val:0xbfede062d0ccdb01
offset:1826*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xd0ccdb01, 0x3fede062,0xd0ccdb01,0xbfede062,x16, 286*SIGALIGN, x17,x1, x14)

inst_923:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xde062d0ccdb01 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xde062d0ccdb01 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fede062d0ccdb01; valaddr_reg:x16; op2:x26; op2val:0xbfede062d0ccdb01
offset:1828*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd0ccdb01, 0x3fede062,0xd0ccdb01,0xbfede062,x16, 288*SIGALIGN, x17,x1, x14)

inst_924:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xde062d0ccdb01 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xde062d0ccdb01 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fede062d0ccdb01; valaddr_reg:x16; op2:x26; op2val:0xbfede062d0ccdb01
offset:1830*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xd0ccdb01, 0x3fede062,0xd0ccdb01,0xbfede062,x16, 290*SIGALIGN, x17,x1, x14)

inst_925:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x0c809d15a0db8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x0c809d15a0db8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc0c809d15a0db8; valaddr_reg:x16; op2:x26; op2val:0xbfc0c809d15a0db8
offset:1832*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xd15a0db8, 0x3fc0c809,0xd15a0db8,0xbfc0c809,x16, 292*SIGALIGN, x17,x1, x14)

inst_926:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x0c809d15a0db8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x0c809d15a0db8 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc0c809d15a0db8; valaddr_reg:x16; op2:x26; op2val:0xbfc0c809d15a0db8
offset:1834*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xd15a0db8, 0x3fc0c809,0xd15a0db8,0xbfc0c809,x16, 294*SIGALIGN, x17,x1, x14)

inst_927:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x0c809d15a0db8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x0c809d15a0db8 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc0c809d15a0db8; valaddr_reg:x16; op2:x26; op2val:0xbfc0c809d15a0db8
offset:1836*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xd15a0db8, 0x3fc0c809,0xd15a0db8,0xbfc0c809,x16, 296*SIGALIGN, x17,x1, x14)

inst_928:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x0c809d15a0db8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x0c809d15a0db8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc0c809d15a0db8; valaddr_reg:x16; op2:x26; op2val:0xbfc0c809d15a0db8
offset:1838*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd15a0db8, 0x3fc0c809,0xd15a0db8,0xbfc0c809,x16, 298*SIGALIGN, x17,x1, x14)

inst_929:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x0c809d15a0db8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x0c809d15a0db8 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc0c809d15a0db8; valaddr_reg:x16; op2:x26; op2val:0xbfc0c809d15a0db8
offset:1840*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xd15a0db8, 0x3fc0c809,0xd15a0db8,0xbfc0c809,x16, 300*SIGALIGN, x17,x1, x14)

inst_930:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8cc0eaf7a5fbe and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8cc0eaf7a5fbe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe8cc0eaf7a5fbe; valaddr_reg:x16; op2:x26; op2val:0xbfe8cc0eaf7a5fbe
offset:1842*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xaf7a5fbe, 0x3fe8cc0e,0xaf7a5fbe,0xbfe8cc0e,x16, 302*SIGALIGN, x17,x1, x14)

inst_931:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8cc0eaf7a5fbe and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8cc0eaf7a5fbe and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe8cc0eaf7a5fbe; valaddr_reg:x16; op2:x26; op2val:0xbfe8cc0eaf7a5fbe
offset:1844*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xaf7a5fbe, 0x3fe8cc0e,0xaf7a5fbe,0xbfe8cc0e,x16, 304*SIGALIGN, x17,x1, x14)

inst_932:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8cc0eaf7a5fbe and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8cc0eaf7a5fbe and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe8cc0eaf7a5fbe; valaddr_reg:x16; op2:x26; op2val:0xbfe8cc0eaf7a5fbe
offset:1846*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xaf7a5fbe, 0x3fe8cc0e,0xaf7a5fbe,0xbfe8cc0e,x16, 306*SIGALIGN, x17,x1, x14)

inst_933:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8cc0eaf7a5fbe and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8cc0eaf7a5fbe and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe8cc0eaf7a5fbe; valaddr_reg:x16; op2:x26; op2val:0xbfe8cc0eaf7a5fbe
offset:1848*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xaf7a5fbe, 0x3fe8cc0e,0xaf7a5fbe,0xbfe8cc0e,x16, 308*SIGALIGN, x17,x1, x14)

inst_934:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8cc0eaf7a5fbe and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8cc0eaf7a5fbe and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe8cc0eaf7a5fbe; valaddr_reg:x16; op2:x26; op2val:0xbfe8cc0eaf7a5fbe
offset:1850*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xaf7a5fbe, 0x3fe8cc0e,0xaf7a5fbe,0xbfe8cc0e,x16, 310*SIGALIGN, x17,x1, x14)

inst_935:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf82c8bcf6e341 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf82c8bcf6e341 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef82c8bcf6e341; valaddr_reg:x16; op2:x26; op2val:0xbfef82c8bcf6e341
offset:1852*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xbcf6e341, 0x3fef82c8,0xbcf6e341,0xbfef82c8,x16, 312*SIGALIGN, x17,x1, x14)

inst_936:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf82c8bcf6e341 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf82c8bcf6e341 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef82c8bcf6e341; valaddr_reg:x16; op2:x26; op2val:0xbfef82c8bcf6e341
offset:1854*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xbcf6e341, 0x3fef82c8,0xbcf6e341,0xbfef82c8,x16, 314*SIGALIGN, x17,x1, x14)

inst_937:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf82c8bcf6e341 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf82c8bcf6e341 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef82c8bcf6e341; valaddr_reg:x16; op2:x26; op2val:0xbfef82c8bcf6e341
offset:1856*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xbcf6e341, 0x3fef82c8,0xbcf6e341,0xbfef82c8,x16, 316*SIGALIGN, x17,x1, x14)

inst_938:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf82c8bcf6e341 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf82c8bcf6e341 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef82c8bcf6e341; valaddr_reg:x16; op2:x26; op2val:0xbfef82c8bcf6e341
offset:1858*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xbcf6e341, 0x3fef82c8,0xbcf6e341,0xbfef82c8,x16, 318*SIGALIGN, x17,x1, x14)

inst_939:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf82c8bcf6e341 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf82c8bcf6e341 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef82c8bcf6e341; valaddr_reg:x16; op2:x26; op2val:0xbfef82c8bcf6e341
offset:1860*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xbcf6e341, 0x3fef82c8,0xbcf6e341,0xbfef82c8,x16, 320*SIGALIGN, x17,x1, x14)

inst_940:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x56bc55c8d6933 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x56bc55c8d6933 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe56bc55c8d6933; valaddr_reg:x16; op2:x26; op2val:0xbfe56bc55c8d6933
offset:1862*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x5c8d6933, 0x3fe56bc5,0x5c8d6933,0xbfe56bc5,x16, 322*SIGALIGN, x17,x1, x14)

inst_941:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x56bc55c8d6933 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x56bc55c8d6933 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe56bc55c8d6933; valaddr_reg:x16; op2:x26; op2val:0xbfe56bc55c8d6933
offset:1864*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x5c8d6933, 0x3fe56bc5,0x5c8d6933,0xbfe56bc5,x16, 324*SIGALIGN, x17,x1, x14)

inst_942:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x56bc55c8d6933 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x56bc55c8d6933 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe56bc55c8d6933; valaddr_reg:x16; op2:x26; op2val:0xbfe56bc55c8d6933
offset:1866*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x5c8d6933, 0x3fe56bc5,0x5c8d6933,0xbfe56bc5,x16, 326*SIGALIGN, x17,x1, x14)

inst_943:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x56bc55c8d6933 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x56bc55c8d6933 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe56bc55c8d6933; valaddr_reg:x16; op2:x26; op2val:0xbfe56bc55c8d6933
offset:1868*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x5c8d6933, 0x3fe56bc5,0x5c8d6933,0xbfe56bc5,x16, 328*SIGALIGN, x17,x1, x14)

inst_944:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x56bc55c8d6933 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x56bc55c8d6933 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe56bc55c8d6933; valaddr_reg:x16; op2:x26; op2val:0xbfe56bc55c8d6933
offset:1870*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x5c8d6933, 0x3fe56bc5,0x5c8d6933,0xbfe56bc5,x16, 330*SIGALIGN, x17,x1, x14)

inst_945:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb3cdee88674b0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb3cdee88674b0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb3cdee88674b0; valaddr_reg:x16; op2:x26; op2val:0xbfeb3cdee88674b0
offset:1872*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe88674b0, 0x3feb3cde,0xe88674b0,0xbfeb3cde,x16, 332*SIGALIGN, x17,x1, x14)

inst_946:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb3cdee88674b0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb3cdee88674b0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb3cdee88674b0; valaddr_reg:x16; op2:x26; op2val:0xbfeb3cdee88674b0
offset:1874*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xe88674b0, 0x3feb3cde,0xe88674b0,0xbfeb3cde,x16, 334*SIGALIGN, x17,x1, x14)

inst_947:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb3cdee88674b0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb3cdee88674b0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb3cdee88674b0; valaddr_reg:x16; op2:x26; op2val:0xbfeb3cdee88674b0
offset:1876*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xe88674b0, 0x3feb3cde,0xe88674b0,0xbfeb3cde,x16, 336*SIGALIGN, x17,x1, x14)

inst_948:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb3cdee88674b0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb3cdee88674b0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb3cdee88674b0; valaddr_reg:x16; op2:x26; op2val:0xbfeb3cdee88674b0
offset:1878*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe88674b0, 0x3feb3cde,0xe88674b0,0xbfeb3cde,x16, 338*SIGALIGN, x17,x1, x14)

inst_949:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb3cdee88674b0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb3cdee88674b0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb3cdee88674b0; valaddr_reg:x16; op2:x26; op2val:0xbfeb3cdee88674b0
offset:1880*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xe88674b0, 0x3feb3cde,0xe88674b0,0xbfeb3cde,x16, 340*SIGALIGN, x17,x1, x14)

inst_950:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x013e3283c4340 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x013e3283c4340 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fa013e3283c4340; valaddr_reg:x16; op2:x26; op2val:0xbfa013e3283c4340
offset:1882*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x283c4340, 0x3fa013e3,0x283c4340,0xbfa013e3,x16, 342*SIGALIGN, x17,x1, x14)

inst_951:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x013e3283c4340 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x013e3283c4340 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fa013e3283c4340; valaddr_reg:x16; op2:x26; op2val:0xbfa013e3283c4340
offset:1884*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x283c4340, 0x3fa013e3,0x283c4340,0xbfa013e3,x16, 344*SIGALIGN, x17,x1, x14)

inst_952:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x013e3283c4340 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x013e3283c4340 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fa013e3283c4340; valaddr_reg:x16; op2:x26; op2val:0xbfa013e3283c4340
offset:1886*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x283c4340, 0x3fa013e3,0x283c4340,0xbfa013e3,x16, 346*SIGALIGN, x17,x1, x14)

inst_953:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x013e3283c4340 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x013e3283c4340 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fa013e3283c4340; valaddr_reg:x16; op2:x26; op2val:0xbfa013e3283c4340
offset:1888*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x283c4340, 0x3fa013e3,0x283c4340,0xbfa013e3,x16, 348*SIGALIGN, x17,x1, x14)

inst_954:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x013e3283c4340 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x013e3283c4340 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fa013e3283c4340; valaddr_reg:x16; op2:x26; op2val:0xbfa013e3283c4340
offset:1890*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x283c4340, 0x3fa013e3,0x283c4340,0xbfa013e3,x16, 350*SIGALIGN, x17,x1, x14)

inst_955:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x952226f0bd0d0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x952226f0bd0d0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb952226f0bd0d0; valaddr_reg:x16; op2:x26; op2val:0xbfb952226f0bd0d0
offset:1892*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x6f0bd0d0, 0x3fb95222,0x6f0bd0d0,0xbfb95222,x16, 352*SIGALIGN, x17,x1, x14)

inst_956:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x952226f0bd0d0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x952226f0bd0d0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb952226f0bd0d0; valaddr_reg:x16; op2:x26; op2val:0xbfb952226f0bd0d0
offset:1894*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x6f0bd0d0, 0x3fb95222,0x6f0bd0d0,0xbfb95222,x16, 354*SIGALIGN, x17,x1, x14)

inst_957:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x952226f0bd0d0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x952226f0bd0d0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb952226f0bd0d0; valaddr_reg:x16; op2:x26; op2val:0xbfb952226f0bd0d0
offset:1896*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x6f0bd0d0, 0x3fb95222,0x6f0bd0d0,0xbfb95222,x16, 356*SIGALIGN, x17,x1, x14)

inst_958:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x952226f0bd0d0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x952226f0bd0d0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb952226f0bd0d0; valaddr_reg:x16; op2:x26; op2val:0xbfb952226f0bd0d0
offset:1898*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x6f0bd0d0, 0x3fb95222,0x6f0bd0d0,0xbfb95222,x16, 358*SIGALIGN, x17,x1, x14)

inst_959:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x952226f0bd0d0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x952226f0bd0d0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb952226f0bd0d0; valaddr_reg:x16; op2:x26; op2val:0xbfb952226f0bd0d0
offset:1900*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x6f0bd0d0, 0x3fb95222,0x6f0bd0d0,0xbfb95222,x16, 360*SIGALIGN, x17,x1, x14)

inst_960:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb45ac5f465aee and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb45ac5f465aee and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdb45ac5f465aee; valaddr_reg:x16; op2:x26; op2val:0xbfdb45ac5f465aee
offset:1902*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x5f465aee, 0x3fdb45ac,0x5f465aee,0xbfdb45ac,x16, 362*SIGALIGN, x17,x1, x14)

inst_961:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb45ac5f465aee and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb45ac5f465aee and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdb45ac5f465aee; valaddr_reg:x16; op2:x26; op2val:0xbfdb45ac5f465aee
offset:1904*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x5f465aee, 0x3fdb45ac,0x5f465aee,0xbfdb45ac,x16, 364*SIGALIGN, x17,x1, x14)

inst_962:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb45ac5f465aee and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb45ac5f465aee and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdb45ac5f465aee; valaddr_reg:x16; op2:x26; op2val:0xbfdb45ac5f465aee
offset:1906*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x5f465aee, 0x3fdb45ac,0x5f465aee,0xbfdb45ac,x16, 366*SIGALIGN, x17,x1, x14)

inst_963:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb45ac5f465aee and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb45ac5f465aee and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdb45ac5f465aee; valaddr_reg:x16; op2:x26; op2val:0xbfdb45ac5f465aee
offset:1908*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x5f465aee, 0x3fdb45ac,0x5f465aee,0xbfdb45ac,x16, 368*SIGALIGN, x17,x1, x14)

inst_964:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb45ac5f465aee and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb45ac5f465aee and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdb45ac5f465aee; valaddr_reg:x16; op2:x26; op2val:0xbfdb45ac5f465aee
offset:1910*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x5f465aee, 0x3fdb45ac,0x5f465aee,0xbfdb45ac,x16, 370*SIGALIGN, x17,x1, x14)

inst_965:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8f227e7b6475c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x8f227e7b6475c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc8f227e7b6475c; valaddr_reg:x16; op2:x26; op2val:0xbfc8f227e7b6475c
offset:1912*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe7b6475c, 0x3fc8f227,0xe7b6475c,0xbfc8f227,x16, 372*SIGALIGN, x17,x1, x14)

inst_966:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8f227e7b6475c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x8f227e7b6475c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc8f227e7b6475c; valaddr_reg:x16; op2:x26; op2val:0xbfc8f227e7b6475c
offset:1914*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xe7b6475c, 0x3fc8f227,0xe7b6475c,0xbfc8f227,x16, 374*SIGALIGN, x17,x1, x14)

inst_967:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8f227e7b6475c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x8f227e7b6475c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc8f227e7b6475c; valaddr_reg:x16; op2:x26; op2val:0xbfc8f227e7b6475c
offset:1916*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xe7b6475c, 0x3fc8f227,0xe7b6475c,0xbfc8f227,x16, 376*SIGALIGN, x17,x1, x14)

inst_968:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8f227e7b6475c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x8f227e7b6475c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc8f227e7b6475c; valaddr_reg:x16; op2:x26; op2val:0xbfc8f227e7b6475c
offset:1918*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe7b6475c, 0x3fc8f227,0xe7b6475c,0xbfc8f227,x16, 378*SIGALIGN, x17,x1, x14)

inst_969:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8f227e7b6475c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x8f227e7b6475c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc8f227e7b6475c; valaddr_reg:x16; op2:x26; op2val:0xbfc8f227e7b6475c
offset:1920*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xe7b6475c, 0x3fc8f227,0xe7b6475c,0xbfc8f227,x16, 380*SIGALIGN, x17,x1, x14)

inst_970:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x363a9ec73cbc0 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x363a9ec73cbc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f8363a9ec73cbc0; valaddr_reg:x16; op2:x26; op2val:0xbf8363a9ec73cbc0
offset:1922*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xec73cbc0, 0x3f8363a9,0xec73cbc0,0xbf8363a9,x16, 382*SIGALIGN, x17,x1, x14)

inst_971:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x363a9ec73cbc0 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x363a9ec73cbc0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f8363a9ec73cbc0; valaddr_reg:x16; op2:x26; op2val:0xbf8363a9ec73cbc0
offset:1924*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xec73cbc0, 0x3f8363a9,0xec73cbc0,0xbf8363a9,x16, 384*SIGALIGN, x17,x1, x14)

inst_972:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x363a9ec73cbc0 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x363a9ec73cbc0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f8363a9ec73cbc0; valaddr_reg:x16; op2:x26; op2val:0xbf8363a9ec73cbc0
offset:1926*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xec73cbc0, 0x3f8363a9,0xec73cbc0,0xbf8363a9,x16, 386*SIGALIGN, x17,x1, x14)

inst_973:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x363a9ec73cbc0 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x363a9ec73cbc0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f8363a9ec73cbc0; valaddr_reg:x16; op2:x26; op2val:0xbf8363a9ec73cbc0
offset:1928*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xec73cbc0, 0x3f8363a9,0xec73cbc0,0xbf8363a9,x16, 388*SIGALIGN, x17,x1, x14)

inst_974:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x363a9ec73cbc0 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x363a9ec73cbc0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f8363a9ec73cbc0; valaddr_reg:x16; op2:x26; op2val:0xbf8363a9ec73cbc0
offset:1930*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xec73cbc0, 0x3f8363a9,0xec73cbc0,0xbf8363a9,x16, 390*SIGALIGN, x17,x1, x14)

inst_975:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x81ec127da2ad0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x81ec127da2ad0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb81ec127da2ad0; valaddr_reg:x16; op2:x26; op2val:0xbfb81ec127da2ad0
offset:1932*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x27da2ad0, 0x3fb81ec1,0x27da2ad0,0xbfb81ec1,x16, 392*SIGALIGN, x17,x1, x14)

inst_976:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x81ec127da2ad0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x81ec127da2ad0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb81ec127da2ad0; valaddr_reg:x16; op2:x26; op2val:0xbfb81ec127da2ad0
offset:1934*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x27da2ad0, 0x3fb81ec1,0x27da2ad0,0xbfb81ec1,x16, 394*SIGALIGN, x17,x1, x14)

inst_977:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x81ec127da2ad0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x81ec127da2ad0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb81ec127da2ad0; valaddr_reg:x16; op2:x26; op2val:0xbfb81ec127da2ad0
offset:1936*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x27da2ad0, 0x3fb81ec1,0x27da2ad0,0xbfb81ec1,x16, 396*SIGALIGN, x17,x1, x14)

inst_978:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x81ec127da2ad0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x81ec127da2ad0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb81ec127da2ad0; valaddr_reg:x16; op2:x26; op2val:0xbfb81ec127da2ad0
offset:1938*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x27da2ad0, 0x3fb81ec1,0x27da2ad0,0xbfb81ec1,x16, 398*SIGALIGN, x17,x1, x14)

inst_979:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x81ec127da2ad0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x81ec127da2ad0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb81ec127da2ad0; valaddr_reg:x16; op2:x26; op2val:0xbfb81ec127da2ad0
offset:1940*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x27da2ad0, 0x3fb81ec1,0x27da2ad0,0xbfb81ec1,x16, 400*SIGALIGN, x17,x1, x14)

inst_980:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xdbbbd40ca77ca and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xdbbbd40ca77ca and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fddbbbd40ca77ca; valaddr_reg:x16; op2:x26; op2val:0xbfddbbbd40ca77ca
offset:1942*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x40ca77ca, 0x3fddbbbd,0x40ca77ca,0xbfddbbbd,x16, 402*SIGALIGN, x17,x1, x14)

inst_981:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xdbbbd40ca77ca and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xdbbbd40ca77ca and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fddbbbd40ca77ca; valaddr_reg:x16; op2:x26; op2val:0xbfddbbbd40ca77ca
offset:1944*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x40ca77ca, 0x3fddbbbd,0x40ca77ca,0xbfddbbbd,x16, 404*SIGALIGN, x17,x1, x14)

inst_982:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xdbbbd40ca77ca and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xdbbbd40ca77ca and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fddbbbd40ca77ca; valaddr_reg:x16; op2:x26; op2val:0xbfddbbbd40ca77ca
offset:1946*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x40ca77ca, 0x3fddbbbd,0x40ca77ca,0xbfddbbbd,x16, 406*SIGALIGN, x17,x1, x14)

inst_983:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xdbbbd40ca77ca and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xdbbbd40ca77ca and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fddbbbd40ca77ca; valaddr_reg:x16; op2:x26; op2val:0xbfddbbbd40ca77ca
offset:1948*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x40ca77ca, 0x3fddbbbd,0x40ca77ca,0xbfddbbbd,x16, 408*SIGALIGN, x17,x1, x14)

inst_984:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xdbbbd40ca77ca and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xdbbbd40ca77ca and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fddbbbd40ca77ca; valaddr_reg:x16; op2:x26; op2val:0xbfddbbbd40ca77ca
offset:1950*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x40ca77ca, 0x3fddbbbd,0x40ca77ca,0xbfddbbbd,x16, 410*SIGALIGN, x17,x1, x14)

inst_985:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x64f92c07070fc and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x64f92c07070fc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc64f92c07070fc; valaddr_reg:x16; op2:x26; op2val:0xbfc64f92c07070fc
offset:1952*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xc07070fc, 0x3fc64f92,0xc07070fc,0xbfc64f92,x16, 412*SIGALIGN, x17,x1, x14)

inst_986:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x64f92c07070fc and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x64f92c07070fc and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc64f92c07070fc; valaddr_reg:x16; op2:x26; op2val:0xbfc64f92c07070fc
offset:1954*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xc07070fc, 0x3fc64f92,0xc07070fc,0xbfc64f92,x16, 414*SIGALIGN, x17,x1, x14)

inst_987:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x64f92c07070fc and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x64f92c07070fc and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc64f92c07070fc; valaddr_reg:x16; op2:x26; op2val:0xbfc64f92c07070fc
offset:1956*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xc07070fc, 0x3fc64f92,0xc07070fc,0xbfc64f92,x16, 416*SIGALIGN, x17,x1, x14)

inst_988:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x64f92c07070fc and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x64f92c07070fc and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc64f92c07070fc; valaddr_reg:x16; op2:x26; op2val:0xbfc64f92c07070fc
offset:1958*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xc07070fc, 0x3fc64f92,0xc07070fc,0xbfc64f92,x16, 418*SIGALIGN, x17,x1, x14)

inst_989:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x64f92c07070fc and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x64f92c07070fc and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc64f92c07070fc; valaddr_reg:x16; op2:x26; op2val:0xbfc64f92c07070fc
offset:1960*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xc07070fc, 0x3fc64f92,0xc07070fc,0xbfc64f92,x16, 420*SIGALIGN, x17,x1, x14)

inst_990:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xabf31c071baf8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xabf31c071baf8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcabf31c071baf8; valaddr_reg:x16; op2:x26; op2val:0xbfcabf31c071baf8
offset:1962*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xc071baf8, 0x3fcabf31,0xc071baf8,0xbfcabf31,x16, 422*SIGALIGN, x17,x1, x14)

inst_991:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xabf31c071baf8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xabf31c071baf8 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcabf31c071baf8; valaddr_reg:x16; op2:x26; op2val:0xbfcabf31c071baf8
offset:1964*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xc071baf8, 0x3fcabf31,0xc071baf8,0xbfcabf31,x16, 424*SIGALIGN, x17,x1, x14)

inst_992:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xabf31c071baf8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xabf31c071baf8 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcabf31c071baf8; valaddr_reg:x16; op2:x26; op2val:0xbfcabf31c071baf8
offset:1966*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xc071baf8, 0x3fcabf31,0xc071baf8,0xbfcabf31,x16, 426*SIGALIGN, x17,x1, x14)

inst_993:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xabf31c071baf8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xabf31c071baf8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcabf31c071baf8; valaddr_reg:x16; op2:x26; op2val:0xbfcabf31c071baf8
offset:1968*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xc071baf8, 0x3fcabf31,0xc071baf8,0xbfcabf31,x16, 428*SIGALIGN, x17,x1, x14)

inst_994:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xabf31c071baf8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xabf31c071baf8 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcabf31c071baf8; valaddr_reg:x16; op2:x26; op2val:0xbfcabf31c071baf8
offset:1970*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xc071baf8, 0x3fcabf31,0xc071baf8,0xbfcabf31,x16, 430*SIGALIGN, x17,x1, x14)

inst_995:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa789c8e21a57c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xa789c8e21a57c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fda789c8e21a57c; valaddr_reg:x16; op2:x26; op2val:0xbfda789c8e21a57c
offset:1972*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x8e21a57c, 0x3fda789c,0x8e21a57c,0xbfda789c,x16, 432*SIGALIGN, x17,x1, x14)

inst_996:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa789c8e21a57c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xa789c8e21a57c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fda789c8e21a57c; valaddr_reg:x16; op2:x26; op2val:0xbfda789c8e21a57c
offset:1974*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x8e21a57c, 0x3fda789c,0x8e21a57c,0xbfda789c,x16, 434*SIGALIGN, x17,x1, x14)

inst_997:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa789c8e21a57c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xa789c8e21a57c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fda789c8e21a57c; valaddr_reg:x16; op2:x26; op2val:0xbfda789c8e21a57c
offset:1976*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x8e21a57c, 0x3fda789c,0x8e21a57c,0xbfda789c,x16, 436*SIGALIGN, x17,x1, x14)

inst_998:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa789c8e21a57c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xa789c8e21a57c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fda789c8e21a57c; valaddr_reg:x16; op2:x26; op2val:0xbfda789c8e21a57c
offset:1978*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x8e21a57c, 0x3fda789c,0x8e21a57c,0xbfda789c,x16, 438*SIGALIGN, x17,x1, x14)

inst_999:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa789c8e21a57c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xa789c8e21a57c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fda789c8e21a57c; valaddr_reg:x16; op2:x26; op2val:0xbfda789c8e21a57c
offset:1980*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x8e21a57c, 0x3fda789c,0x8e21a57c,0xbfda789c,x16, 440*SIGALIGN, x17,x1, x14)

inst_1000:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9d92fefac1b4c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x9d92fefac1b4c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc9d92fefac1b4c; valaddr_reg:x16; op2:x26; op2val:0xbfc9d92fefac1b4c
offset:1982*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xefac1b4c, 0x3fc9d92f,0xefac1b4c,0xbfc9d92f,x16, 442*SIGALIGN, x17,x1, x14)

inst_1001:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9d92fefac1b4c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x9d92fefac1b4c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc9d92fefac1b4c; valaddr_reg:x16; op2:x26; op2val:0xbfc9d92fefac1b4c
offset:1984*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xefac1b4c, 0x3fc9d92f,0xefac1b4c,0xbfc9d92f,x16, 444*SIGALIGN, x17,x1, x14)

inst_1002:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9d92fefac1b4c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x9d92fefac1b4c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc9d92fefac1b4c; valaddr_reg:x16; op2:x26; op2val:0xbfc9d92fefac1b4c
offset:1986*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xefac1b4c, 0x3fc9d92f,0xefac1b4c,0xbfc9d92f,x16, 446*SIGALIGN, x17,x1, x14)

inst_1003:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9d92fefac1b4c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x9d92fefac1b4c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc9d92fefac1b4c; valaddr_reg:x16; op2:x26; op2val:0xbfc9d92fefac1b4c
offset:1988*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xefac1b4c, 0x3fc9d92f,0xefac1b4c,0xbfc9d92f,x16, 448*SIGALIGN, x17,x1, x14)

inst_1004:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9d92fefac1b4c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x9d92fefac1b4c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc9d92fefac1b4c; valaddr_reg:x16; op2:x26; op2val:0xbfc9d92fefac1b4c
offset:1990*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xefac1b4c, 0x3fc9d92f,0xefac1b4c,0xbfc9d92f,x16, 450*SIGALIGN, x17,x1, x14)

inst_1005:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xffe0739097a0a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xffe0739097a0a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feffe0739097a0a; valaddr_reg:x16; op2:x26; op2val:0xbfeffe0739097a0a
offset:1992*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x39097a0a, 0x3feffe07,0x39097a0a,0xbfeffe07,x16, 452*SIGALIGN, x17,x1, x14)

inst_1006:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xffe0739097a0a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xffe0739097a0a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feffe0739097a0a; valaddr_reg:x16; op2:x26; op2val:0xbfeffe0739097a0a
offset:1994*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x39097a0a, 0x3feffe07,0x39097a0a,0xbfeffe07,x16, 454*SIGALIGN, x17,x1, x14)

inst_1007:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xffe0739097a0a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xffe0739097a0a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feffe0739097a0a; valaddr_reg:x16; op2:x26; op2val:0xbfeffe0739097a0a
offset:1996*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x39097a0a, 0x3feffe07,0x39097a0a,0xbfeffe07,x16, 456*SIGALIGN, x17,x1, x14)

inst_1008:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xffe0739097a0a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xffe0739097a0a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feffe0739097a0a; valaddr_reg:x16; op2:x26; op2val:0xbfeffe0739097a0a
offset:1998*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x39097a0a, 0x3feffe07,0x39097a0a,0xbfeffe07,x16, 458*SIGALIGN, x17,x1, x14)

inst_1009:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xffe0739097a0a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xffe0739097a0a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feffe0739097a0a; valaddr_reg:x16; op2:x26; op2val:0xbfeffe0739097a0a
offset:2000*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x39097a0a, 0x3feffe07,0x39097a0a,0xbfeffe07,x16, 460*SIGALIGN, x17,x1, x14)

inst_1010:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf8fa45b70180c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf8fa45b70180c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdf8fa45b70180c; valaddr_reg:x16; op2:x26; op2val:0xbfdf8fa45b70180c
offset:2002*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x5b70180c, 0x3fdf8fa4,0x5b70180c,0xbfdf8fa4,x16, 462*SIGALIGN, x17,x1, x14)

inst_1011:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf8fa45b70180c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf8fa45b70180c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdf8fa45b70180c; valaddr_reg:x16; op2:x26; op2val:0xbfdf8fa45b70180c
offset:2004*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x5b70180c, 0x3fdf8fa4,0x5b70180c,0xbfdf8fa4,x16, 464*SIGALIGN, x17,x1, x14)

inst_1012:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf8fa45b70180c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf8fa45b70180c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdf8fa45b70180c; valaddr_reg:x16; op2:x26; op2val:0xbfdf8fa45b70180c
offset:2006*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x5b70180c, 0x3fdf8fa4,0x5b70180c,0xbfdf8fa4,x16, 466*SIGALIGN, x17,x1, x14)

inst_1013:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf8fa45b70180c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf8fa45b70180c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdf8fa45b70180c; valaddr_reg:x16; op2:x26; op2val:0xbfdf8fa45b70180c
offset:2008*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x5b70180c, 0x3fdf8fa4,0x5b70180c,0xbfdf8fa4,x16, 468*SIGALIGN, x17,x1, x14)

inst_1014:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xf8fa45b70180c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf8fa45b70180c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdf8fa45b70180c; valaddr_reg:x16; op2:x26; op2val:0xbfdf8fa45b70180c
offset:2010*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x5b70180c, 0x3fdf8fa4,0x5b70180c,0xbfdf8fa4,x16, 470*SIGALIGN, x17,x1, x14)

inst_1015:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xde66f1e06a550 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xde66f1e06a550 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fede66f1e06a550; valaddr_reg:x16; op2:x26; op2val:0xbfede66f1e06a550
offset:2012*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x1e06a550, 0x3fede66f,0x1e06a550,0xbfede66f,x16, 472*SIGALIGN, x17,x1, x14)

inst_1016:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xde66f1e06a550 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xde66f1e06a550 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fede66f1e06a550; valaddr_reg:x16; op2:x26; op2val:0xbfede66f1e06a550
offset:2014*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x1e06a550, 0x3fede66f,0x1e06a550,0xbfede66f,x16, 474*SIGALIGN, x17,x1, x14)

inst_1017:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xde66f1e06a550 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xde66f1e06a550 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fede66f1e06a550; valaddr_reg:x16; op2:x26; op2val:0xbfede66f1e06a550
offset:2016*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x1e06a550, 0x3fede66f,0x1e06a550,0xbfede66f,x16, 476*SIGALIGN, x17,x1, x14)

inst_1018:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xde66f1e06a550 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xde66f1e06a550 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fede66f1e06a550; valaddr_reg:x16; op2:x26; op2val:0xbfede66f1e06a550
offset:2018*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x1e06a550, 0x3fede66f,0x1e06a550,0xbfede66f,x16, 478*SIGALIGN, x17,x1, x14)

inst_1019:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xde66f1e06a550 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xde66f1e06a550 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fede66f1e06a550; valaddr_reg:x16; op2:x26; op2val:0xbfede66f1e06a550
offset:2020*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x1e06a550, 0x3fede66f,0x1e06a550,0xbfede66f,x16, 480*SIGALIGN, x17,x1, x14)

inst_1020:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xd360c4b32ddf0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xd360c4b32ddf0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fad360c4b32ddf0; valaddr_reg:x16; op2:x26; op2val:0xbfad360c4b32ddf0
offset:2022*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x4b32ddf0, 0x3fad360c,0x4b32ddf0,0xbfad360c,x16, 482*SIGALIGN, x17,x1, x14)

inst_1021:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xd360c4b32ddf0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xd360c4b32ddf0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fad360c4b32ddf0; valaddr_reg:x16; op2:x26; op2val:0xbfad360c4b32ddf0
offset:2024*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x4b32ddf0, 0x3fad360c,0x4b32ddf0,0xbfad360c,x16, 484*SIGALIGN, x17,x1, x14)

inst_1022:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xd360c4b32ddf0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xd360c4b32ddf0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fad360c4b32ddf0; valaddr_reg:x16; op2:x26; op2val:0xbfad360c4b32ddf0
offset:2026*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x4b32ddf0, 0x3fad360c,0x4b32ddf0,0xbfad360c,x16, 486*SIGALIGN, x17,x1, x14)

inst_1023:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xd360c4b32ddf0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xd360c4b32ddf0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fad360c4b32ddf0; valaddr_reg:x16; op2:x26; op2val:0xbfad360c4b32ddf0
offset:2028*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x4b32ddf0, 0x3fad360c,0x4b32ddf0,0xbfad360c,x16, 488*SIGALIGN, x17,x1, x14)

inst_1024:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xd360c4b32ddf0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xd360c4b32ddf0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fad360c4b32ddf0; valaddr_reg:x16; op2:x26; op2val:0xbfad360c4b32ddf0
offset:2030*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x4b32ddf0, 0x3fad360c,0x4b32ddf0,0xbfad360c,x16, 490*SIGALIGN, x17,x1, x14)

inst_1025:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2f1108a769ed6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2f1108a769ed6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2f1108a769ed6; valaddr_reg:x16; op2:x26; op2val:0xbfe2f1108a769ed6
offset:2032*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x8a769ed6, 0x3fe2f110,0x8a769ed6,0xbfe2f110,x16, 492*SIGALIGN, x17,x1, x14)

inst_1026:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2f1108a769ed6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2f1108a769ed6 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2f1108a769ed6; valaddr_reg:x16; op2:x26; op2val:0xbfe2f1108a769ed6
offset:2034*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x8a769ed6, 0x3fe2f110,0x8a769ed6,0xbfe2f110,x16, 494*SIGALIGN, x17,x1, x14)

inst_1027:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2f1108a769ed6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2f1108a769ed6 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2f1108a769ed6; valaddr_reg:x16; op2:x26; op2val:0xbfe2f1108a769ed6
offset:2036*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x8a769ed6, 0x3fe2f110,0x8a769ed6,0xbfe2f110,x16, 496*SIGALIGN, x17,x1, x14)

inst_1028:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2f1108a769ed6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2f1108a769ed6 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2f1108a769ed6; valaddr_reg:x16; op2:x26; op2val:0xbfe2f1108a769ed6
offset:2038*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x8a769ed6, 0x3fe2f110,0x8a769ed6,0xbfe2f110,x16, 498*SIGALIGN, x17,x1, x14)

inst_1029:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2f1108a769ed6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2f1108a769ed6 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2f1108a769ed6; valaddr_reg:x16; op2:x26; op2val:0xbfe2f1108a769ed6
offset:2040*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x8a769ed6, 0x3fe2f110,0x8a769ed6,0xbfe2f110,x16, 500*SIGALIGN, x17,x1, x14)

inst_1030:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe01f9eb584604 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe01f9eb584604 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee01f9eb584604; valaddr_reg:x16; op2:x26; op2val:0xbfee01f9eb584604
offset:2042*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xeb584604, 0x3fee01f9,0xeb584604,0xbfee01f9,x16, 502*SIGALIGN, x17,x1, x14)

inst_1031:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe01f9eb584604 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe01f9eb584604 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee01f9eb584604; valaddr_reg:x16; op2:x26; op2val:0xbfee01f9eb584604
offset:2044*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xeb584604, 0x3fee01f9,0xeb584604,0xbfee01f9,x16, 504*SIGALIGN, x17,x1, x14)

inst_1032:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe01f9eb584604 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe01f9eb584604 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee01f9eb584604; valaddr_reg:x16; op2:x26; op2val:0xbfee01f9eb584604
offset:2046*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xeb584604, 0x3fee01f9,0xeb584604,0xbfee01f9,x16, 506*SIGALIGN, x17,x1, x14)

inst_1033:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe01f9eb584604 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe01f9eb584604 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee01f9eb584604; valaddr_reg:x16; op2:x26; op2val:0xbfee01f9eb584604
offset:2048*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xeb584604, 0x3fee01f9,0xeb584604,0xbfee01f9,x16, 508*SIGALIGN, x17,x1, x14)

inst_1034:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe01f9eb584604 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe01f9eb584604 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee01f9eb584604; valaddr_reg:x16; op2:x26; op2val:0xbfee01f9eb584604
offset:2050*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xeb584604, 0x3fee01f9,0xeb584604,0xbfee01f9,x16, 510*SIGALIGN, x17,x1, x14)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_1035:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbecfce70b503f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xbecfce70b503f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3febecfce70b503f; valaddr_reg:x16; op2:x26; op2val:0xbfebecfce70b503f
offset:2052*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe70b503f, 0x3febecfc,0xe70b503f,0xbfebecfc,x16, 0*SIGALIGN, x17,x1, x14)

inst_1036:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbecfce70b503f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xbecfce70b503f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3febecfce70b503f; valaddr_reg:x16; op2:x26; op2val:0xbfebecfce70b503f
offset:2054*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xe70b503f, 0x3febecfc,0xe70b503f,0xbfebecfc,x16, 2*SIGALIGN, x17,x1, x14)

inst_1037:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbecfce70b503f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xbecfce70b503f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3febecfce70b503f; valaddr_reg:x16; op2:x26; op2val:0xbfebecfce70b503f
offset:2056*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xe70b503f, 0x3febecfc,0xe70b503f,0xbfebecfc,x16, 4*SIGALIGN, x17,x1, x14)

inst_1038:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbecfce70b503f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xbecfce70b503f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3febecfce70b503f; valaddr_reg:x16; op2:x26; op2val:0xbfebecfce70b503f
offset:2058*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe70b503f, 0x3febecfc,0xe70b503f,0xbfebecfc,x16, 6*SIGALIGN, x17,x1, x14)

inst_1039:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbecfce70b503f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xbecfce70b503f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3febecfce70b503f; valaddr_reg:x16; op2:x26; op2val:0xbfebecfce70b503f
offset:2060*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xe70b503f, 0x3febecfc,0xe70b503f,0xbfebecfc,x16, 8*SIGALIGN, x17,x1, x14)

inst_1040:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x5c480eaa7d5c8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x5c480eaa7d5c8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc5c480eaa7d5c8; valaddr_reg:x16; op2:x26; op2val:0xbfc5c480eaa7d5c8
offset:2062*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xeaa7d5c8, 0x3fc5c480,0xeaa7d5c8,0xbfc5c480,x16, 10*SIGALIGN, x17,x1, x14)

inst_1041:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x5c480eaa7d5c8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x5c480eaa7d5c8 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc5c480eaa7d5c8; valaddr_reg:x16; op2:x26; op2val:0xbfc5c480eaa7d5c8
offset:2064*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xeaa7d5c8, 0x3fc5c480,0xeaa7d5c8,0xbfc5c480,x16, 12*SIGALIGN, x17,x1, x14)

inst_1042:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x5c480eaa7d5c8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x5c480eaa7d5c8 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc5c480eaa7d5c8; valaddr_reg:x16; op2:x26; op2val:0xbfc5c480eaa7d5c8
offset:2066*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xeaa7d5c8, 0x3fc5c480,0xeaa7d5c8,0xbfc5c480,x16, 14*SIGALIGN, x17,x1, x14)

inst_1043:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x5c480eaa7d5c8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x5c480eaa7d5c8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc5c480eaa7d5c8; valaddr_reg:x16; op2:x26; op2val:0xbfc5c480eaa7d5c8
offset:2068*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xeaa7d5c8, 0x3fc5c480,0xeaa7d5c8,0xbfc5c480,x16, 16*SIGALIGN, x17,x1, x14)

inst_1044:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x5c480eaa7d5c8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x5c480eaa7d5c8 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc5c480eaa7d5c8; valaddr_reg:x16; op2:x26; op2val:0xbfc5c480eaa7d5c8
offset:2070*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xeaa7d5c8, 0x3fc5c480,0xeaa7d5c8,0xbfc5c480,x16, 18*SIGALIGN, x17,x1, x14)

inst_1045:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xed9a14a131e1f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xed9a14a131e1f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feed9a14a131e1f; valaddr_reg:x16; op2:x26; op2val:0xbfeed9a14a131e1f
offset:2072*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x4a131e1f, 0x3feed9a1,0x4a131e1f,0xbfeed9a1,x16, 20*SIGALIGN, x17,x1, x14)

inst_1046:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xed9a14a131e1f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xed9a14a131e1f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feed9a14a131e1f; valaddr_reg:x16; op2:x26; op2val:0xbfeed9a14a131e1f
offset:2074*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x4a131e1f, 0x3feed9a1,0x4a131e1f,0xbfeed9a1,x16, 22*SIGALIGN, x17,x1, x14)

inst_1047:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xed9a14a131e1f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xed9a14a131e1f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feed9a14a131e1f; valaddr_reg:x16; op2:x26; op2val:0xbfeed9a14a131e1f
offset:2076*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x4a131e1f, 0x3feed9a1,0x4a131e1f,0xbfeed9a1,x16, 24*SIGALIGN, x17,x1, x14)

inst_1048:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xed9a14a131e1f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xed9a14a131e1f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feed9a14a131e1f; valaddr_reg:x16; op2:x26; op2val:0xbfeed9a14a131e1f
offset:2078*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x4a131e1f, 0x3feed9a1,0x4a131e1f,0xbfeed9a1,x16, 26*SIGALIGN, x17,x1, x14)

inst_1049:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xed9a14a131e1f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xed9a14a131e1f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feed9a14a131e1f; valaddr_reg:x16; op2:x26; op2val:0xbfeed9a14a131e1f
offset:2080*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x4a131e1f, 0x3feed9a1,0x4a131e1f,0xbfeed9a1,x16, 28*SIGALIGN, x17,x1, x14)

inst_1050:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x042ebb870adf0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x042ebb870adf0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe042ebb870adf0; valaddr_reg:x16; op2:x26; op2val:0xbfe042ebb870adf0
offset:2082*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xb870adf0, 0x3fe042eb,0xb870adf0,0xbfe042eb,x16, 30*SIGALIGN, x17,x1, x14)

inst_1051:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x042ebb870adf0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x042ebb870adf0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe042ebb870adf0; valaddr_reg:x16; op2:x26; op2val:0xbfe042ebb870adf0
offset:2084*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xb870adf0, 0x3fe042eb,0xb870adf0,0xbfe042eb,x16, 32*SIGALIGN, x17,x1, x14)

inst_1052:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x042ebb870adf0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x042ebb870adf0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe042ebb870adf0; valaddr_reg:x16; op2:x26; op2val:0xbfe042ebb870adf0
offset:2086*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xb870adf0, 0x3fe042eb,0xb870adf0,0xbfe042eb,x16, 34*SIGALIGN, x17,x1, x14)

inst_1053:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x042ebb870adf0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x042ebb870adf0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe042ebb870adf0; valaddr_reg:x16; op2:x26; op2val:0xbfe042ebb870adf0
offset:2088*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xb870adf0, 0x3fe042eb,0xb870adf0,0xbfe042eb,x16, 36*SIGALIGN, x17,x1, x14)

inst_1054:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x042ebb870adf0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x042ebb870adf0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe042ebb870adf0; valaddr_reg:x16; op2:x26; op2val:0xbfe042ebb870adf0
offset:2090*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xb870adf0, 0x3fe042eb,0xb870adf0,0xbfe042eb,x16, 38*SIGALIGN, x17,x1, x14)

inst_1055:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x219945f58d7ce and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x219945f58d7ce and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd219945f58d7ce; valaddr_reg:x16; op2:x26; op2val:0xbfd219945f58d7ce
offset:2092*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x5f58d7ce, 0x3fd21994,0x5f58d7ce,0xbfd21994,x16, 40*SIGALIGN, x17,x1, x14)

inst_1056:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x219945f58d7ce and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x219945f58d7ce and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd219945f58d7ce; valaddr_reg:x16; op2:x26; op2val:0xbfd219945f58d7ce
offset:2094*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x5f58d7ce, 0x3fd21994,0x5f58d7ce,0xbfd21994,x16, 42*SIGALIGN, x17,x1, x14)

inst_1057:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x219945f58d7ce and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x219945f58d7ce and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd219945f58d7ce; valaddr_reg:x16; op2:x26; op2val:0xbfd219945f58d7ce
offset:2096*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x5f58d7ce, 0x3fd21994,0x5f58d7ce,0xbfd21994,x16, 44*SIGALIGN, x17,x1, x14)

inst_1058:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x219945f58d7ce and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x219945f58d7ce and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd219945f58d7ce; valaddr_reg:x16; op2:x26; op2val:0xbfd219945f58d7ce
offset:2098*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x5f58d7ce, 0x3fd21994,0x5f58d7ce,0xbfd21994,x16, 46*SIGALIGN, x17,x1, x14)

inst_1059:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x219945f58d7ce and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x219945f58d7ce and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd219945f58d7ce; valaddr_reg:x16; op2:x26; op2val:0xbfd219945f58d7ce
offset:2100*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x5f58d7ce, 0x3fd21994,0x5f58d7ce,0xbfd21994,x16, 48*SIGALIGN, x17,x1, x14)

inst_1060:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb27f230c243bc and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb27f230c243bc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb27f230c243bc; valaddr_reg:x16; op2:x26; op2val:0xbfeb27f230c243bc
offset:2102*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x30c243bc, 0x3feb27f2,0x30c243bc,0xbfeb27f2,x16, 50*SIGALIGN, x17,x1, x14)

inst_1061:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb27f230c243bc and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb27f230c243bc and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb27f230c243bc; valaddr_reg:x16; op2:x26; op2val:0xbfeb27f230c243bc
offset:2104*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x30c243bc, 0x3feb27f2,0x30c243bc,0xbfeb27f2,x16, 52*SIGALIGN, x17,x1, x14)

inst_1062:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb27f230c243bc and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb27f230c243bc and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb27f230c243bc; valaddr_reg:x16; op2:x26; op2val:0xbfeb27f230c243bc
offset:2106*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x30c243bc, 0x3feb27f2,0x30c243bc,0xbfeb27f2,x16, 54*SIGALIGN, x17,x1, x14)

inst_1063:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb27f230c243bc and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb27f230c243bc and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb27f230c243bc; valaddr_reg:x16; op2:x26; op2val:0xbfeb27f230c243bc
offset:2108*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x30c243bc, 0x3feb27f2,0x30c243bc,0xbfeb27f2,x16, 56*SIGALIGN, x17,x1, x14)

inst_1064:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb27f230c243bc and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb27f230c243bc and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb27f230c243bc; valaddr_reg:x16; op2:x26; op2val:0xbfeb27f230c243bc
offset:2110*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x30c243bc, 0x3feb27f2,0x30c243bc,0xbfeb27f2,x16, 58*SIGALIGN, x17,x1, x14)

inst_1065:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2d7f083dbf9d5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2d7f083dbf9d5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2d7f083dbf9d5; valaddr_reg:x16; op2:x26; op2val:0xbfe2d7f083dbf9d5
offset:2112*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x83dbf9d5, 0x3fe2d7f0,0x83dbf9d5,0xbfe2d7f0,x16, 60*SIGALIGN, x17,x1, x14)

inst_1066:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2d7f083dbf9d5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2d7f083dbf9d5 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2d7f083dbf9d5; valaddr_reg:x16; op2:x26; op2val:0xbfe2d7f083dbf9d5
offset:2114*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x83dbf9d5, 0x3fe2d7f0,0x83dbf9d5,0xbfe2d7f0,x16, 62*SIGALIGN, x17,x1, x14)

inst_1067:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2d7f083dbf9d5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2d7f083dbf9d5 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2d7f083dbf9d5; valaddr_reg:x16; op2:x26; op2val:0xbfe2d7f083dbf9d5
offset:2116*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x83dbf9d5, 0x3fe2d7f0,0x83dbf9d5,0xbfe2d7f0,x16, 64*SIGALIGN, x17,x1, x14)

inst_1068:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2d7f083dbf9d5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2d7f083dbf9d5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2d7f083dbf9d5; valaddr_reg:x16; op2:x26; op2val:0xbfe2d7f083dbf9d5
offset:2118*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x83dbf9d5, 0x3fe2d7f0,0x83dbf9d5,0xbfe2d7f0,x16, 66*SIGALIGN, x17,x1, x14)

inst_1069:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2d7f083dbf9d5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2d7f083dbf9d5 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2d7f083dbf9d5; valaddr_reg:x16; op2:x26; op2val:0xbfe2d7f083dbf9d5
offset:2120*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x83dbf9d5, 0x3fe2d7f0,0x83dbf9d5,0xbfe2d7f0,x16, 68*SIGALIGN, x17,x1, x14)

inst_1070:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3a04af62a1ac0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3a04af62a1ac0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe3a04af62a1ac0; valaddr_reg:x16; op2:x26; op2val:0xbfe3a04af62a1ac0
offset:2122*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf62a1ac0, 0x3fe3a04a,0xf62a1ac0,0xbfe3a04a,x16, 70*SIGALIGN, x17,x1, x14)

inst_1071:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3a04af62a1ac0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3a04af62a1ac0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe3a04af62a1ac0; valaddr_reg:x16; op2:x26; op2val:0xbfe3a04af62a1ac0
offset:2124*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xf62a1ac0, 0x3fe3a04a,0xf62a1ac0,0xbfe3a04a,x16, 72*SIGALIGN, x17,x1, x14)

inst_1072:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3a04af62a1ac0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3a04af62a1ac0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe3a04af62a1ac0; valaddr_reg:x16; op2:x26; op2val:0xbfe3a04af62a1ac0
offset:2126*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xf62a1ac0, 0x3fe3a04a,0xf62a1ac0,0xbfe3a04a,x16, 74*SIGALIGN, x17,x1, x14)

inst_1073:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3a04af62a1ac0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3a04af62a1ac0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe3a04af62a1ac0; valaddr_reg:x16; op2:x26; op2val:0xbfe3a04af62a1ac0
offset:2128*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf62a1ac0, 0x3fe3a04a,0xf62a1ac0,0xbfe3a04a,x16, 76*SIGALIGN, x17,x1, x14)

inst_1074:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3a04af62a1ac0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3a04af62a1ac0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe3a04af62a1ac0; valaddr_reg:x16; op2:x26; op2val:0xbfe3a04af62a1ac0
offset:2130*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xf62a1ac0, 0x3fe3a04a,0xf62a1ac0,0xbfe3a04a,x16, 78*SIGALIGN, x17,x1, x14)

inst_1075:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0ee79c0e32d14 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0ee79c0e32d14 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0ee79c0e32d14; valaddr_reg:x16; op2:x26; op2val:0xbfe0ee79c0e32d14
offset:2132*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xc0e32d14, 0x3fe0ee79,0xc0e32d14,0xbfe0ee79,x16, 80*SIGALIGN, x17,x1, x14)

inst_1076:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0ee79c0e32d14 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0ee79c0e32d14 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0ee79c0e32d14; valaddr_reg:x16; op2:x26; op2val:0xbfe0ee79c0e32d14
offset:2134*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xc0e32d14, 0x3fe0ee79,0xc0e32d14,0xbfe0ee79,x16, 82*SIGALIGN, x17,x1, x14)

inst_1077:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0ee79c0e32d14 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0ee79c0e32d14 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0ee79c0e32d14; valaddr_reg:x16; op2:x26; op2val:0xbfe0ee79c0e32d14
offset:2136*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xc0e32d14, 0x3fe0ee79,0xc0e32d14,0xbfe0ee79,x16, 84*SIGALIGN, x17,x1, x14)

inst_1078:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0ee79c0e32d14 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0ee79c0e32d14 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0ee79c0e32d14; valaddr_reg:x16; op2:x26; op2val:0xbfe0ee79c0e32d14
offset:2138*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xc0e32d14, 0x3fe0ee79,0xc0e32d14,0xbfe0ee79,x16, 86*SIGALIGN, x17,x1, x14)

inst_1079:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0ee79c0e32d14 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0ee79c0e32d14 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0ee79c0e32d14; valaddr_reg:x16; op2:x26; op2val:0xbfe0ee79c0e32d14
offset:2140*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xc0e32d14, 0x3fe0ee79,0xc0e32d14,0xbfe0ee79,x16, 88*SIGALIGN, x17,x1, x14)

inst_1080:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef60afd9b572e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xef60afd9b572e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feef60afd9b572e; valaddr_reg:x16; op2:x26; op2val:0xbfeef60afd9b572e
offset:2142*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xfd9b572e, 0x3feef60a,0xfd9b572e,0xbfeef60a,x16, 90*SIGALIGN, x17,x1, x14)

inst_1081:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef60afd9b572e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xef60afd9b572e and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feef60afd9b572e; valaddr_reg:x16; op2:x26; op2val:0xbfeef60afd9b572e
offset:2144*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xfd9b572e, 0x3feef60a,0xfd9b572e,0xbfeef60a,x16, 92*SIGALIGN, x17,x1, x14)

inst_1082:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef60afd9b572e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xef60afd9b572e and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feef60afd9b572e; valaddr_reg:x16; op2:x26; op2val:0xbfeef60afd9b572e
offset:2146*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xfd9b572e, 0x3feef60a,0xfd9b572e,0xbfeef60a,x16, 94*SIGALIGN, x17,x1, x14)

inst_1083:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef60afd9b572e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xef60afd9b572e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feef60afd9b572e; valaddr_reg:x16; op2:x26; op2val:0xbfeef60afd9b572e
offset:2148*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xfd9b572e, 0x3feef60a,0xfd9b572e,0xbfeef60a,x16, 96*SIGALIGN, x17,x1, x14)

inst_1084:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef60afd9b572e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xef60afd9b572e and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feef60afd9b572e; valaddr_reg:x16; op2:x26; op2val:0xbfeef60afd9b572e
offset:2150*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xfd9b572e, 0x3feef60a,0xfd9b572e,0xbfeef60a,x16, 98*SIGALIGN, x17,x1, x14)

inst_1085:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7aea1dd68a12a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x7aea1dd68a12a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd7aea1dd68a12a; valaddr_reg:x16; op2:x26; op2val:0xbfd7aea1dd68a12a
offset:2152*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xdd68a12a, 0x3fd7aea1,0xdd68a12a,0xbfd7aea1,x16, 100*SIGALIGN, x17,x1, x14)

inst_1086:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7aea1dd68a12a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x7aea1dd68a12a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd7aea1dd68a12a; valaddr_reg:x16; op2:x26; op2val:0xbfd7aea1dd68a12a
offset:2154*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xdd68a12a, 0x3fd7aea1,0xdd68a12a,0xbfd7aea1,x16, 102*SIGALIGN, x17,x1, x14)

inst_1087:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7aea1dd68a12a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x7aea1dd68a12a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd7aea1dd68a12a; valaddr_reg:x16; op2:x26; op2val:0xbfd7aea1dd68a12a
offset:2156*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xdd68a12a, 0x3fd7aea1,0xdd68a12a,0xbfd7aea1,x16, 104*SIGALIGN, x17,x1, x14)

inst_1088:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7aea1dd68a12a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x7aea1dd68a12a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd7aea1dd68a12a; valaddr_reg:x16; op2:x26; op2val:0xbfd7aea1dd68a12a
offset:2158*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xdd68a12a, 0x3fd7aea1,0xdd68a12a,0xbfd7aea1,x16, 106*SIGALIGN, x17,x1, x14)

inst_1089:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7aea1dd68a12a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x7aea1dd68a12a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd7aea1dd68a12a; valaddr_reg:x16; op2:x26; op2val:0xbfd7aea1dd68a12a
offset:2160*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xdd68a12a, 0x3fd7aea1,0xdd68a12a,0xbfd7aea1,x16, 108*SIGALIGN, x17,x1, x14)

inst_1090:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcdad41acedd26 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xcdad41acedd26 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdcdad41acedd26; valaddr_reg:x16; op2:x26; op2val:0xbfdcdad41acedd26
offset:2162*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x1acedd26, 0x3fdcdad4,0x1acedd26,0xbfdcdad4,x16, 110*SIGALIGN, x17,x1, x14)

inst_1091:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcdad41acedd26 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xcdad41acedd26 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdcdad41acedd26; valaddr_reg:x16; op2:x26; op2val:0xbfdcdad41acedd26
offset:2164*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x1acedd26, 0x3fdcdad4,0x1acedd26,0xbfdcdad4,x16, 112*SIGALIGN, x17,x1, x14)

inst_1092:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcdad41acedd26 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xcdad41acedd26 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdcdad41acedd26; valaddr_reg:x16; op2:x26; op2val:0xbfdcdad41acedd26
offset:2166*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x1acedd26, 0x3fdcdad4,0x1acedd26,0xbfdcdad4,x16, 114*SIGALIGN, x17,x1, x14)

inst_1093:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcdad41acedd26 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xcdad41acedd26 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdcdad41acedd26; valaddr_reg:x16; op2:x26; op2val:0xbfdcdad41acedd26
offset:2168*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x1acedd26, 0x3fdcdad4,0x1acedd26,0xbfdcdad4,x16, 116*SIGALIGN, x17,x1, x14)

inst_1094:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcdad41acedd26 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xcdad41acedd26 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdcdad41acedd26; valaddr_reg:x16; op2:x26; op2val:0xbfdcdad41acedd26
offset:2170*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x1acedd26, 0x3fdcdad4,0x1acedd26,0xbfdcdad4,x16, 118*SIGALIGN, x17,x1, x14)

inst_1095:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3bb1268ddc7f2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3bb1268ddc7f2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe3bb1268ddc7f2; valaddr_reg:x16; op2:x26; op2val:0xbfe3bb1268ddc7f2
offset:2172*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x68ddc7f2, 0x3fe3bb12,0x68ddc7f2,0xbfe3bb12,x16, 120*SIGALIGN, x17,x1, x14)

inst_1096:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3bb1268ddc7f2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3bb1268ddc7f2 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe3bb1268ddc7f2; valaddr_reg:x16; op2:x26; op2val:0xbfe3bb1268ddc7f2
offset:2174*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x68ddc7f2, 0x3fe3bb12,0x68ddc7f2,0xbfe3bb12,x16, 122*SIGALIGN, x17,x1, x14)

inst_1097:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3bb1268ddc7f2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3bb1268ddc7f2 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe3bb1268ddc7f2; valaddr_reg:x16; op2:x26; op2val:0xbfe3bb1268ddc7f2
offset:2176*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x68ddc7f2, 0x3fe3bb12,0x68ddc7f2,0xbfe3bb12,x16, 124*SIGALIGN, x17,x1, x14)

inst_1098:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3bb1268ddc7f2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3bb1268ddc7f2 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe3bb1268ddc7f2; valaddr_reg:x16; op2:x26; op2val:0xbfe3bb1268ddc7f2
offset:2178*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x68ddc7f2, 0x3fe3bb12,0x68ddc7f2,0xbfe3bb12,x16, 126*SIGALIGN, x17,x1, x14)

inst_1099:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3bb1268ddc7f2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3bb1268ddc7f2 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe3bb1268ddc7f2; valaddr_reg:x16; op2:x26; op2val:0xbfe3bb1268ddc7f2
offset:2180*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x68ddc7f2, 0x3fe3bb12,0x68ddc7f2,0xbfe3bb12,x16, 128*SIGALIGN, x17,x1, x14)

inst_1100:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x04f4d1b8e56d3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x04f4d1b8e56d3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe04f4d1b8e56d3; valaddr_reg:x16; op2:x26; op2val:0xbfe04f4d1b8e56d3
offset:2182*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x1b8e56d3, 0x3fe04f4d,0x1b8e56d3,0xbfe04f4d,x16, 130*SIGALIGN, x17,x1, x14)

inst_1101:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x04f4d1b8e56d3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x04f4d1b8e56d3 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe04f4d1b8e56d3; valaddr_reg:x16; op2:x26; op2val:0xbfe04f4d1b8e56d3
offset:2184*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x1b8e56d3, 0x3fe04f4d,0x1b8e56d3,0xbfe04f4d,x16, 132*SIGALIGN, x17,x1, x14)

inst_1102:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x04f4d1b8e56d3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x04f4d1b8e56d3 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe04f4d1b8e56d3; valaddr_reg:x16; op2:x26; op2val:0xbfe04f4d1b8e56d3
offset:2186*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x1b8e56d3, 0x3fe04f4d,0x1b8e56d3,0xbfe04f4d,x16, 134*SIGALIGN, x17,x1, x14)

inst_1103:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x04f4d1b8e56d3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x04f4d1b8e56d3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe04f4d1b8e56d3; valaddr_reg:x16; op2:x26; op2val:0xbfe04f4d1b8e56d3
offset:2188*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x1b8e56d3, 0x3fe04f4d,0x1b8e56d3,0xbfe04f4d,x16, 136*SIGALIGN, x17,x1, x14)

inst_1104:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x04f4d1b8e56d3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x04f4d1b8e56d3 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe04f4d1b8e56d3; valaddr_reg:x16; op2:x26; op2val:0xbfe04f4d1b8e56d3
offset:2190*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x1b8e56d3, 0x3fe04f4d,0x1b8e56d3,0xbfe04f4d,x16, 138*SIGALIGN, x17,x1, x14)

inst_1105:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8f3cc5264b9d6 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8f3cc5264b9d6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd8f3cc5264b9d6; valaddr_reg:x16; op2:x26; op2val:0xbfd8f3cc5264b9d6
offset:2192*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x5264b9d6, 0x3fd8f3cc,0x5264b9d6,0xbfd8f3cc,x16, 140*SIGALIGN, x17,x1, x14)

inst_1106:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8f3cc5264b9d6 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8f3cc5264b9d6 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd8f3cc5264b9d6; valaddr_reg:x16; op2:x26; op2val:0xbfd8f3cc5264b9d6
offset:2194*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x5264b9d6, 0x3fd8f3cc,0x5264b9d6,0xbfd8f3cc,x16, 142*SIGALIGN, x17,x1, x14)

inst_1107:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8f3cc5264b9d6 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8f3cc5264b9d6 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd8f3cc5264b9d6; valaddr_reg:x16; op2:x26; op2val:0xbfd8f3cc5264b9d6
offset:2196*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x5264b9d6, 0x3fd8f3cc,0x5264b9d6,0xbfd8f3cc,x16, 144*SIGALIGN, x17,x1, x14)

inst_1108:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8f3cc5264b9d6 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8f3cc5264b9d6 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd8f3cc5264b9d6; valaddr_reg:x16; op2:x26; op2val:0xbfd8f3cc5264b9d6
offset:2198*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x5264b9d6, 0x3fd8f3cc,0x5264b9d6,0xbfd8f3cc,x16, 146*SIGALIGN, x17,x1, x14)

inst_1109:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8f3cc5264b9d6 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8f3cc5264b9d6 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd8f3cc5264b9d6; valaddr_reg:x16; op2:x26; op2val:0xbfd8f3cc5264b9d6
offset:2200*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x5264b9d6, 0x3fd8f3cc,0x5264b9d6,0xbfd8f3cc,x16, 148*SIGALIGN, x17,x1, x14)

inst_1110:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x788309087574e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x788309087574e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd788309087574e; valaddr_reg:x16; op2:x26; op2val:0xbfd788309087574e
offset:2202*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x9087574e, 0x3fd78830,0x9087574e,0xbfd78830,x16, 150*SIGALIGN, x17,x1, x14)

inst_1111:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x788309087574e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x788309087574e and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd788309087574e; valaddr_reg:x16; op2:x26; op2val:0xbfd788309087574e
offset:2204*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x9087574e, 0x3fd78830,0x9087574e,0xbfd78830,x16, 152*SIGALIGN, x17,x1, x14)

inst_1112:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x788309087574e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x788309087574e and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd788309087574e; valaddr_reg:x16; op2:x26; op2val:0xbfd788309087574e
offset:2206*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x9087574e, 0x3fd78830,0x9087574e,0xbfd78830,x16, 154*SIGALIGN, x17,x1, x14)

inst_1113:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x788309087574e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x788309087574e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd788309087574e; valaddr_reg:x16; op2:x26; op2val:0xbfd788309087574e
offset:2208*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x9087574e, 0x3fd78830,0x9087574e,0xbfd78830,x16, 156*SIGALIGN, x17,x1, x14)

inst_1114:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x788309087574e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x788309087574e and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd788309087574e; valaddr_reg:x16; op2:x26; op2val:0xbfd788309087574e
offset:2210*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x9087574e, 0x3fd78830,0x9087574e,0xbfd78830,x16, 158*SIGALIGN, x17,x1, x14)

inst_1115:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc058a1c1f3f37 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc058a1c1f3f37 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fec058a1c1f3f37; valaddr_reg:x16; op2:x26; op2val:0xbfec058a1c1f3f37
offset:2212*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x1c1f3f37, 0x3fec058a,0x1c1f3f37,0xbfec058a,x16, 160*SIGALIGN, x17,x1, x14)

inst_1116:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc058a1c1f3f37 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc058a1c1f3f37 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fec058a1c1f3f37; valaddr_reg:x16; op2:x26; op2val:0xbfec058a1c1f3f37
offset:2214*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x1c1f3f37, 0x3fec058a,0x1c1f3f37,0xbfec058a,x16, 162*SIGALIGN, x17,x1, x14)

inst_1117:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc058a1c1f3f37 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc058a1c1f3f37 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fec058a1c1f3f37; valaddr_reg:x16; op2:x26; op2val:0xbfec058a1c1f3f37
offset:2216*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x1c1f3f37, 0x3fec058a,0x1c1f3f37,0xbfec058a,x16, 164*SIGALIGN, x17,x1, x14)

inst_1118:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc058a1c1f3f37 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc058a1c1f3f37 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fec058a1c1f3f37; valaddr_reg:x16; op2:x26; op2val:0xbfec058a1c1f3f37
offset:2218*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x1c1f3f37, 0x3fec058a,0x1c1f3f37,0xbfec058a,x16, 166*SIGALIGN, x17,x1, x14)

inst_1119:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc058a1c1f3f37 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc058a1c1f3f37 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fec058a1c1f3f37; valaddr_reg:x16; op2:x26; op2val:0xbfec058a1c1f3f37
offset:2220*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x1c1f3f37, 0x3fec058a,0x1c1f3f37,0xbfec058a,x16, 168*SIGALIGN, x17,x1, x14)

inst_1120:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x83089dda1002e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x83089dda1002e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd83089dda1002e; valaddr_reg:x16; op2:x26; op2val:0xbfd83089dda1002e
offset:2222*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xdda1002e, 0x3fd83089,0xdda1002e,0xbfd83089,x16, 170*SIGALIGN, x17,x1, x14)

inst_1121:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x83089dda1002e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x83089dda1002e and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd83089dda1002e; valaddr_reg:x16; op2:x26; op2val:0xbfd83089dda1002e
offset:2224*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xdda1002e, 0x3fd83089,0xdda1002e,0xbfd83089,x16, 172*SIGALIGN, x17,x1, x14)

inst_1122:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x83089dda1002e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x83089dda1002e and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd83089dda1002e; valaddr_reg:x16; op2:x26; op2val:0xbfd83089dda1002e
offset:2226*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xdda1002e, 0x3fd83089,0xdda1002e,0xbfd83089,x16, 174*SIGALIGN, x17,x1, x14)

inst_1123:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x83089dda1002e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x83089dda1002e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd83089dda1002e; valaddr_reg:x16; op2:x26; op2val:0xbfd83089dda1002e
offset:2228*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xdda1002e, 0x3fd83089,0xdda1002e,0xbfd83089,x16, 176*SIGALIGN, x17,x1, x14)

inst_1124:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x83089dda1002e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x83089dda1002e and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd83089dda1002e; valaddr_reg:x16; op2:x26; op2val:0xbfd83089dda1002e
offset:2230*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xdda1002e, 0x3fd83089,0xdda1002e,0xbfd83089,x16, 178*SIGALIGN, x17,x1, x14)

inst_1125:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbeeb8d82a8716 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xbeeb8d82a8716 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3febeeb8d82a8716; valaddr_reg:x16; op2:x26; op2val:0xbfebeeb8d82a8716
offset:2232*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xd82a8716, 0x3febeeb8,0xd82a8716,0xbfebeeb8,x16, 180*SIGALIGN, x17,x1, x14)

inst_1126:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbeeb8d82a8716 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xbeeb8d82a8716 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3febeeb8d82a8716; valaddr_reg:x16; op2:x26; op2val:0xbfebeeb8d82a8716
offset:2234*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xd82a8716, 0x3febeeb8,0xd82a8716,0xbfebeeb8,x16, 182*SIGALIGN, x17,x1, x14)

inst_1127:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbeeb8d82a8716 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xbeeb8d82a8716 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3febeeb8d82a8716; valaddr_reg:x16; op2:x26; op2val:0xbfebeeb8d82a8716
offset:2236*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xd82a8716, 0x3febeeb8,0xd82a8716,0xbfebeeb8,x16, 184*SIGALIGN, x17,x1, x14)

inst_1128:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbeeb8d82a8716 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xbeeb8d82a8716 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3febeeb8d82a8716; valaddr_reg:x16; op2:x26; op2val:0xbfebeeb8d82a8716
offset:2238*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd82a8716, 0x3febeeb8,0xd82a8716,0xbfebeeb8,x16, 186*SIGALIGN, x17,x1, x14)

inst_1129:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbeeb8d82a8716 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xbeeb8d82a8716 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3febeeb8d82a8716; valaddr_reg:x16; op2:x26; op2val:0xbfebeeb8d82a8716
offset:2240*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xd82a8716, 0x3febeeb8,0xd82a8716,0xbfebeeb8,x16, 188*SIGALIGN, x17,x1, x14)

inst_1130:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9af2feb4c94ac and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x9af2feb4c94ac and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc9af2feb4c94ac; valaddr_reg:x16; op2:x26; op2val:0xbfc9af2feb4c94ac
offset:2242*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xeb4c94ac, 0x3fc9af2f,0xeb4c94ac,0xbfc9af2f,x16, 190*SIGALIGN, x17,x1, x14)

inst_1131:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9af2feb4c94ac and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x9af2feb4c94ac and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc9af2feb4c94ac; valaddr_reg:x16; op2:x26; op2val:0xbfc9af2feb4c94ac
offset:2244*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xeb4c94ac, 0x3fc9af2f,0xeb4c94ac,0xbfc9af2f,x16, 192*SIGALIGN, x17,x1, x14)

inst_1132:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9af2feb4c94ac and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x9af2feb4c94ac and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc9af2feb4c94ac; valaddr_reg:x16; op2:x26; op2val:0xbfc9af2feb4c94ac
offset:2246*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xeb4c94ac, 0x3fc9af2f,0xeb4c94ac,0xbfc9af2f,x16, 194*SIGALIGN, x17,x1, x14)

inst_1133:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9af2feb4c94ac and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x9af2feb4c94ac and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc9af2feb4c94ac; valaddr_reg:x16; op2:x26; op2val:0xbfc9af2feb4c94ac
offset:2248*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xeb4c94ac, 0x3fc9af2f,0xeb4c94ac,0xbfc9af2f,x16, 196*SIGALIGN, x17,x1, x14)

inst_1134:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9af2feb4c94ac and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x9af2feb4c94ac and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc9af2feb4c94ac; valaddr_reg:x16; op2:x26; op2val:0xbfc9af2feb4c94ac
offset:2250*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xeb4c94ac, 0x3fc9af2f,0xeb4c94ac,0xbfc9af2f,x16, 198*SIGALIGN, x17,x1, x14)

inst_1135:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x050c840ade358 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x050c840ade358 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc050c840ade358; valaddr_reg:x16; op2:x26; op2val:0xbfc050c840ade358
offset:2252*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x40ade358, 0x3fc050c8,0x40ade358,0xbfc050c8,x16, 200*SIGALIGN, x17,x1, x14)

inst_1136:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x050c840ade358 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x050c840ade358 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc050c840ade358; valaddr_reg:x16; op2:x26; op2val:0xbfc050c840ade358
offset:2254*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x40ade358, 0x3fc050c8,0x40ade358,0xbfc050c8,x16, 202*SIGALIGN, x17,x1, x14)

inst_1137:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x050c840ade358 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x050c840ade358 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc050c840ade358; valaddr_reg:x16; op2:x26; op2val:0xbfc050c840ade358
offset:2256*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x40ade358, 0x3fc050c8,0x40ade358,0xbfc050c8,x16, 204*SIGALIGN, x17,x1, x14)

inst_1138:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x050c840ade358 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x050c840ade358 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc050c840ade358; valaddr_reg:x16; op2:x26; op2val:0xbfc050c840ade358
offset:2258*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x40ade358, 0x3fc050c8,0x40ade358,0xbfc050c8,x16, 206*SIGALIGN, x17,x1, x14)

inst_1139:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x050c840ade358 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x050c840ade358 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc050c840ade358; valaddr_reg:x16; op2:x26; op2val:0xbfc050c840ade358
offset:2260*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x40ade358, 0x3fc050c8,0x40ade358,0xbfc050c8,x16, 208*SIGALIGN, x17,x1, x14)

inst_1140:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x849b33e0e1f14 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x849b33e0e1f14 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc849b33e0e1f14; valaddr_reg:x16; op2:x26; op2val:0xbfc849b33e0e1f14
offset:2262*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x3e0e1f14, 0x3fc849b3,0x3e0e1f14,0xbfc849b3,x16, 210*SIGALIGN, x17,x1, x14)

inst_1141:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x849b33e0e1f14 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x849b33e0e1f14 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc849b33e0e1f14; valaddr_reg:x16; op2:x26; op2val:0xbfc849b33e0e1f14
offset:2264*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x3e0e1f14, 0x3fc849b3,0x3e0e1f14,0xbfc849b3,x16, 212*SIGALIGN, x17,x1, x14)

inst_1142:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x849b33e0e1f14 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x849b33e0e1f14 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc849b33e0e1f14; valaddr_reg:x16; op2:x26; op2val:0xbfc849b33e0e1f14
offset:2266*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x3e0e1f14, 0x3fc849b3,0x3e0e1f14,0xbfc849b3,x16, 214*SIGALIGN, x17,x1, x14)

inst_1143:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x849b33e0e1f14 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x849b33e0e1f14 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc849b33e0e1f14; valaddr_reg:x16; op2:x26; op2val:0xbfc849b33e0e1f14
offset:2268*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x3e0e1f14, 0x3fc849b3,0x3e0e1f14,0xbfc849b3,x16, 216*SIGALIGN, x17,x1, x14)

inst_1144:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x849b33e0e1f14 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x849b33e0e1f14 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc849b33e0e1f14; valaddr_reg:x16; op2:x26; op2val:0xbfc849b33e0e1f14
offset:2270*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x3e0e1f14, 0x3fc849b3,0x3e0e1f14,0xbfc849b3,x16, 218*SIGALIGN, x17,x1, x14)

inst_1145:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xb7517701108e4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xb7517701108e4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcb7517701108e4; valaddr_reg:x16; op2:x26; op2val:0xbfcb7517701108e4
offset:2272*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x701108e4, 0x3fcb7517,0x701108e4,0xbfcb7517,x16, 220*SIGALIGN, x17,x1, x14)

inst_1146:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xb7517701108e4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xb7517701108e4 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcb7517701108e4; valaddr_reg:x16; op2:x26; op2val:0xbfcb7517701108e4
offset:2274*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x701108e4, 0x3fcb7517,0x701108e4,0xbfcb7517,x16, 222*SIGALIGN, x17,x1, x14)

inst_1147:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xb7517701108e4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xb7517701108e4 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcb7517701108e4; valaddr_reg:x16; op2:x26; op2val:0xbfcb7517701108e4
offset:2276*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x701108e4, 0x3fcb7517,0x701108e4,0xbfcb7517,x16, 224*SIGALIGN, x17,x1, x14)

inst_1148:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xb7517701108e4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xb7517701108e4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcb7517701108e4; valaddr_reg:x16; op2:x26; op2val:0xbfcb7517701108e4
offset:2278*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x701108e4, 0x3fcb7517,0x701108e4,0xbfcb7517,x16, 226*SIGALIGN, x17,x1, x14)

inst_1149:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xb7517701108e4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xb7517701108e4 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcb7517701108e4; valaddr_reg:x16; op2:x26; op2val:0xbfcb7517701108e4
offset:2280*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x701108e4, 0x3fcb7517,0x701108e4,0xbfcb7517,x16, 228*SIGALIGN, x17,x1, x14)

inst_1150:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbe3af59ba428c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xbe3af59ba428c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcbe3af59ba428c; valaddr_reg:x16; op2:x26; op2val:0xbfcbe3af59ba428c
offset:2282*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x59ba428c, 0x3fcbe3af,0x59ba428c,0xbfcbe3af,x16, 230*SIGALIGN, x17,x1, x14)

inst_1151:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbe3af59ba428c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xbe3af59ba428c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcbe3af59ba428c; valaddr_reg:x16; op2:x26; op2val:0xbfcbe3af59ba428c
offset:2284*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x59ba428c, 0x3fcbe3af,0x59ba428c,0xbfcbe3af,x16, 232*SIGALIGN, x17,x1, x14)

inst_1152:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbe3af59ba428c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xbe3af59ba428c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcbe3af59ba428c; valaddr_reg:x16; op2:x26; op2val:0xbfcbe3af59ba428c
offset:2286*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x59ba428c, 0x3fcbe3af,0x59ba428c,0xbfcbe3af,x16, 234*SIGALIGN, x17,x1, x14)

inst_1153:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbe3af59ba428c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xbe3af59ba428c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcbe3af59ba428c; valaddr_reg:x16; op2:x26; op2val:0xbfcbe3af59ba428c
offset:2288*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x59ba428c, 0x3fcbe3af,0x59ba428c,0xbfcbe3af,x16, 236*SIGALIGN, x17,x1, x14)

inst_1154:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbe3af59ba428c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xbe3af59ba428c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcbe3af59ba428c; valaddr_reg:x16; op2:x26; op2val:0xbfcbe3af59ba428c
offset:2290*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x59ba428c, 0x3fcbe3af,0x59ba428c,0xbfcbe3af,x16, 238*SIGALIGN, x17,x1, x14)

inst_1155:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xf27331cf3cdd0 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xf27331cf3cdd0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcf27331cf3cdd0; valaddr_reg:x16; op2:x26; op2val:0xbfcf27331cf3cdd0
offset:2292*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x1cf3cdd0, 0x3fcf2733,0x1cf3cdd0,0xbfcf2733,x16, 240*SIGALIGN, x17,x1, x14)

inst_1156:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xf27331cf3cdd0 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xf27331cf3cdd0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcf27331cf3cdd0; valaddr_reg:x16; op2:x26; op2val:0xbfcf27331cf3cdd0
offset:2294*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x1cf3cdd0, 0x3fcf2733,0x1cf3cdd0,0xbfcf2733,x16, 242*SIGALIGN, x17,x1, x14)

inst_1157:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xf27331cf3cdd0 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xf27331cf3cdd0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcf27331cf3cdd0; valaddr_reg:x16; op2:x26; op2val:0xbfcf27331cf3cdd0
offset:2296*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x1cf3cdd0, 0x3fcf2733,0x1cf3cdd0,0xbfcf2733,x16, 244*SIGALIGN, x17,x1, x14)

inst_1158:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xf27331cf3cdd0 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xf27331cf3cdd0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcf27331cf3cdd0; valaddr_reg:x16; op2:x26; op2val:0xbfcf27331cf3cdd0
offset:2298*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x1cf3cdd0, 0x3fcf2733,0x1cf3cdd0,0xbfcf2733,x16, 246*SIGALIGN, x17,x1, x14)

inst_1159:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xf27331cf3cdd0 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xf27331cf3cdd0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcf27331cf3cdd0; valaddr_reg:x16; op2:x26; op2val:0xbfcf27331cf3cdd0
offset:2300*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x1cf3cdd0, 0x3fcf2733,0x1cf3cdd0,0xbfcf2733,x16, 248*SIGALIGN, x17,x1, x14)

inst_1160:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xaefbd55e345e8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xaefbd55e345e8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcaefbd55e345e8; valaddr_reg:x16; op2:x26; op2val:0xbfcaefbd55e345e8
offset:2302*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x55e345e8, 0x3fcaefbd,0x55e345e8,0xbfcaefbd,x16, 250*SIGALIGN, x17,x1, x14)

inst_1161:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xaefbd55e345e8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xaefbd55e345e8 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcaefbd55e345e8; valaddr_reg:x16; op2:x26; op2val:0xbfcaefbd55e345e8
offset:2304*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x55e345e8, 0x3fcaefbd,0x55e345e8,0xbfcaefbd,x16, 252*SIGALIGN, x17,x1, x14)

inst_1162:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xaefbd55e345e8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xaefbd55e345e8 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcaefbd55e345e8; valaddr_reg:x16; op2:x26; op2val:0xbfcaefbd55e345e8
offset:2306*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x55e345e8, 0x3fcaefbd,0x55e345e8,0xbfcaefbd,x16, 254*SIGALIGN, x17,x1, x14)

inst_1163:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xaefbd55e345e8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xaefbd55e345e8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcaefbd55e345e8; valaddr_reg:x16; op2:x26; op2val:0xbfcaefbd55e345e8
offset:2308*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x55e345e8, 0x3fcaefbd,0x55e345e8,0xbfcaefbd,x16, 256*SIGALIGN, x17,x1, x14)

inst_1164:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xaefbd55e345e8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xaefbd55e345e8 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fcaefbd55e345e8; valaddr_reg:x16; op2:x26; op2val:0xbfcaefbd55e345e8
offset:2310*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x55e345e8, 0x3fcaefbd,0x55e345e8,0xbfcaefbd,x16, 258*SIGALIGN, x17,x1, x14)

inst_1165:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe924d3c646d1d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe924d3c646d1d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee924d3c646d1d; valaddr_reg:x16; op2:x26; op2val:0xbfee924d3c646d1d
offset:2312*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x3c646d1d, 0x3fee924d,0x3c646d1d,0xbfee924d,x16, 260*SIGALIGN, x17,x1, x14)

inst_1166:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe924d3c646d1d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe924d3c646d1d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee924d3c646d1d; valaddr_reg:x16; op2:x26; op2val:0xbfee924d3c646d1d
offset:2314*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x3c646d1d, 0x3fee924d,0x3c646d1d,0xbfee924d,x16, 262*SIGALIGN, x17,x1, x14)

inst_1167:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe924d3c646d1d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe924d3c646d1d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee924d3c646d1d; valaddr_reg:x16; op2:x26; op2val:0xbfee924d3c646d1d
offset:2316*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x3c646d1d, 0x3fee924d,0x3c646d1d,0xbfee924d,x16, 264*SIGALIGN, x17,x1, x14)

inst_1168:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe924d3c646d1d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe924d3c646d1d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee924d3c646d1d; valaddr_reg:x16; op2:x26; op2val:0xbfee924d3c646d1d
offset:2318*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x3c646d1d, 0x3fee924d,0x3c646d1d,0xbfee924d,x16, 266*SIGALIGN, x17,x1, x14)

inst_1169:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe924d3c646d1d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe924d3c646d1d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee924d3c646d1d; valaddr_reg:x16; op2:x26; op2val:0xbfee924d3c646d1d
offset:2320*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x3c646d1d, 0x3fee924d,0x3c646d1d,0xbfee924d,x16, 268*SIGALIGN, x17,x1, x14)

inst_1170:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x07155e2fa7c02 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x07155e2fa7c02 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe07155e2fa7c02; valaddr_reg:x16; op2:x26; op2val:0xbfe07155e2fa7c02
offset:2322*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe2fa7c02, 0x3fe07155,0xe2fa7c02,0xbfe07155,x16, 270*SIGALIGN, x17,x1, x14)

inst_1171:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x07155e2fa7c02 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x07155e2fa7c02 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe07155e2fa7c02; valaddr_reg:x16; op2:x26; op2val:0xbfe07155e2fa7c02
offset:2324*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xe2fa7c02, 0x3fe07155,0xe2fa7c02,0xbfe07155,x16, 272*SIGALIGN, x17,x1, x14)

inst_1172:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x07155e2fa7c02 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x07155e2fa7c02 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe07155e2fa7c02; valaddr_reg:x16; op2:x26; op2val:0xbfe07155e2fa7c02
offset:2326*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xe2fa7c02, 0x3fe07155,0xe2fa7c02,0xbfe07155,x16, 274*SIGALIGN, x17,x1, x14)

inst_1173:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x07155e2fa7c02 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x07155e2fa7c02 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe07155e2fa7c02; valaddr_reg:x16; op2:x26; op2val:0xbfe07155e2fa7c02
offset:2328*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe2fa7c02, 0x3fe07155,0xe2fa7c02,0xbfe07155,x16, 276*SIGALIGN, x17,x1, x14)

inst_1174:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x07155e2fa7c02 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x07155e2fa7c02 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe07155e2fa7c02; valaddr_reg:x16; op2:x26; op2val:0xbfe07155e2fa7c02
offset:2330*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xe2fa7c02, 0x3fe07155,0xe2fa7c02,0xbfe07155,x16, 278*SIGALIGN, x17,x1, x14)

inst_1175:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xc455e9eb748f0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xc455e9eb748f0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fac455e9eb748f0; valaddr_reg:x16; op2:x26; op2val:0xbfac455e9eb748f0
offset:2332*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x9eb748f0, 0x3fac455e,0x9eb748f0,0xbfac455e,x16, 280*SIGALIGN, x17,x1, x14)

inst_1176:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xc455e9eb748f0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xc455e9eb748f0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fac455e9eb748f0; valaddr_reg:x16; op2:x26; op2val:0xbfac455e9eb748f0
offset:2334*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x9eb748f0, 0x3fac455e,0x9eb748f0,0xbfac455e,x16, 282*SIGALIGN, x17,x1, x14)

inst_1177:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xc455e9eb748f0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xc455e9eb748f0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fac455e9eb748f0; valaddr_reg:x16; op2:x26; op2val:0xbfac455e9eb748f0
offset:2336*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x9eb748f0, 0x3fac455e,0x9eb748f0,0xbfac455e,x16, 284*SIGALIGN, x17,x1, x14)

inst_1178:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xc455e9eb748f0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xc455e9eb748f0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fac455e9eb748f0; valaddr_reg:x16; op2:x26; op2val:0xbfac455e9eb748f0
offset:2338*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x9eb748f0, 0x3fac455e,0x9eb748f0,0xbfac455e,x16, 286*SIGALIGN, x17,x1, x14)

inst_1179:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xc455e9eb748f0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xc455e9eb748f0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fac455e9eb748f0; valaddr_reg:x16; op2:x26; op2val:0xbfac455e9eb748f0
offset:2340*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x9eb748f0, 0x3fac455e,0x9eb748f0,0xbfac455e,x16, 288*SIGALIGN, x17,x1, x14)

inst_1180:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb67ae48fe340e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb67ae48fe340e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdb67ae48fe340e; valaddr_reg:x16; op2:x26; op2val:0xbfdb67ae48fe340e
offset:2342*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x48fe340e, 0x3fdb67ae,0x48fe340e,0xbfdb67ae,x16, 290*SIGALIGN, x17,x1, x14)

inst_1181:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb67ae48fe340e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb67ae48fe340e and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdb67ae48fe340e; valaddr_reg:x16; op2:x26; op2val:0xbfdb67ae48fe340e
offset:2344*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x48fe340e, 0x3fdb67ae,0x48fe340e,0xbfdb67ae,x16, 292*SIGALIGN, x17,x1, x14)

inst_1182:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb67ae48fe340e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb67ae48fe340e and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdb67ae48fe340e; valaddr_reg:x16; op2:x26; op2val:0xbfdb67ae48fe340e
offset:2346*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x48fe340e, 0x3fdb67ae,0x48fe340e,0xbfdb67ae,x16, 294*SIGALIGN, x17,x1, x14)

inst_1183:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb67ae48fe340e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb67ae48fe340e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdb67ae48fe340e; valaddr_reg:x16; op2:x26; op2val:0xbfdb67ae48fe340e
offset:2348*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x48fe340e, 0x3fdb67ae,0x48fe340e,0xbfdb67ae,x16, 296*SIGALIGN, x17,x1, x14)

inst_1184:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb67ae48fe340e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb67ae48fe340e and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdb67ae48fe340e; valaddr_reg:x16; op2:x26; op2val:0xbfdb67ae48fe340e
offset:2350*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x48fe340e, 0x3fdb67ae,0x48fe340e,0xbfdb67ae,x16, 298*SIGALIGN, x17,x1, x14)

inst_1185:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd023e28e50670 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd023e28e50670 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fed023e28e50670; valaddr_reg:x16; op2:x26; op2val:0xbfed023e28e50670
offset:2352*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x28e50670, 0x3fed023e,0x28e50670,0xbfed023e,x16, 300*SIGALIGN, x17,x1, x14)

inst_1186:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd023e28e50670 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd023e28e50670 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fed023e28e50670; valaddr_reg:x16; op2:x26; op2val:0xbfed023e28e50670
offset:2354*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x28e50670, 0x3fed023e,0x28e50670,0xbfed023e,x16, 302*SIGALIGN, x17,x1, x14)

inst_1187:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd023e28e50670 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd023e28e50670 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fed023e28e50670; valaddr_reg:x16; op2:x26; op2val:0xbfed023e28e50670
offset:2356*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x28e50670, 0x3fed023e,0x28e50670,0xbfed023e,x16, 304*SIGALIGN, x17,x1, x14)

inst_1188:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd023e28e50670 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd023e28e50670 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fed023e28e50670; valaddr_reg:x16; op2:x26; op2val:0xbfed023e28e50670
offset:2358*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x28e50670, 0x3fed023e,0x28e50670,0xbfed023e,x16, 306*SIGALIGN, x17,x1, x14)

inst_1189:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd023e28e50670 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd023e28e50670 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fed023e28e50670; valaddr_reg:x16; op2:x26; op2val:0xbfed023e28e50670
offset:2360*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x28e50670, 0x3fed023e,0x28e50670,0xbfed023e,x16, 308*SIGALIGN, x17,x1, x14)

inst_1190:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xc796f0bec1ca8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xc796f0bec1ca8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbc796f0bec1ca8; valaddr_reg:x16; op2:x26; op2val:0xbfbc796f0bec1ca8
offset:2362*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0bec1ca8, 0x3fbc796f,0x0bec1ca8,0xbfbc796f,x16, 310*SIGALIGN, x17,x1, x14)

inst_1191:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xc796f0bec1ca8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xc796f0bec1ca8 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbc796f0bec1ca8; valaddr_reg:x16; op2:x26; op2val:0xbfbc796f0bec1ca8
offset:2364*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x0bec1ca8, 0x3fbc796f,0x0bec1ca8,0xbfbc796f,x16, 312*SIGALIGN, x17,x1, x14)

inst_1192:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xc796f0bec1ca8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xc796f0bec1ca8 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbc796f0bec1ca8; valaddr_reg:x16; op2:x26; op2val:0xbfbc796f0bec1ca8
offset:2366*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x0bec1ca8, 0x3fbc796f,0x0bec1ca8,0xbfbc796f,x16, 314*SIGALIGN, x17,x1, x14)

inst_1193:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xc796f0bec1ca8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xc796f0bec1ca8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbc796f0bec1ca8; valaddr_reg:x16; op2:x26; op2val:0xbfbc796f0bec1ca8
offset:2368*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x0bec1ca8, 0x3fbc796f,0x0bec1ca8,0xbfbc796f,x16, 316*SIGALIGN, x17,x1, x14)

inst_1194:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xc796f0bec1ca8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xc796f0bec1ca8 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbc796f0bec1ca8; valaddr_reg:x16; op2:x26; op2val:0xbfbc796f0bec1ca8
offset:2370*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x0bec1ca8, 0x3fbc796f,0x0bec1ca8,0xbfbc796f,x16, 318*SIGALIGN, x17,x1, x14)

inst_1195:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x34bbc73cf7054 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x34bbc73cf7054 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd34bbc73cf7054; valaddr_reg:x16; op2:x26; op2val:0xbfd34bbc73cf7054
offset:2372*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x73cf7054, 0x3fd34bbc,0x73cf7054,0xbfd34bbc,x16, 320*SIGALIGN, x17,x1, x14)

inst_1196:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x34bbc73cf7054 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x34bbc73cf7054 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd34bbc73cf7054; valaddr_reg:x16; op2:x26; op2val:0xbfd34bbc73cf7054
offset:2374*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x73cf7054, 0x3fd34bbc,0x73cf7054,0xbfd34bbc,x16, 322*SIGALIGN, x17,x1, x14)

inst_1197:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x34bbc73cf7054 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x34bbc73cf7054 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd34bbc73cf7054; valaddr_reg:x16; op2:x26; op2val:0xbfd34bbc73cf7054
offset:2376*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x73cf7054, 0x3fd34bbc,0x73cf7054,0xbfd34bbc,x16, 324*SIGALIGN, x17,x1, x14)

inst_1198:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x34bbc73cf7054 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x34bbc73cf7054 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd34bbc73cf7054; valaddr_reg:x16; op2:x26; op2val:0xbfd34bbc73cf7054
offset:2378*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x73cf7054, 0x3fd34bbc,0x73cf7054,0xbfd34bbc,x16, 326*SIGALIGN, x17,x1, x14)

inst_1199:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x34bbc73cf7054 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x34bbc73cf7054 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd34bbc73cf7054; valaddr_reg:x16; op2:x26; op2val:0xbfd34bbc73cf7054
offset:2380*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x73cf7054, 0x3fd34bbc,0x73cf7054,0xbfd34bbc,x16, 328*SIGALIGN, x17,x1, x14)

inst_1200:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x63ae33037d2a3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x63ae33037d2a3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe63ae33037d2a3; valaddr_reg:x16; op2:x26; op2val:0xbfe63ae33037d2a3
offset:2382*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x3037d2a3, 0x3fe63ae3,0x3037d2a3,0xbfe63ae3,x16, 330*SIGALIGN, x17,x1, x14)

inst_1201:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x63ae33037d2a3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x63ae33037d2a3 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe63ae33037d2a3; valaddr_reg:x16; op2:x26; op2val:0xbfe63ae33037d2a3
offset:2384*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x3037d2a3, 0x3fe63ae3,0x3037d2a3,0xbfe63ae3,x16, 332*SIGALIGN, x17,x1, x14)

inst_1202:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x63ae33037d2a3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x63ae33037d2a3 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe63ae33037d2a3; valaddr_reg:x16; op2:x26; op2val:0xbfe63ae33037d2a3
offset:2386*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x3037d2a3, 0x3fe63ae3,0x3037d2a3,0xbfe63ae3,x16, 334*SIGALIGN, x17,x1, x14)

inst_1203:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x63ae33037d2a3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x63ae33037d2a3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe63ae33037d2a3; valaddr_reg:x16; op2:x26; op2val:0xbfe63ae33037d2a3
offset:2388*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x3037d2a3, 0x3fe63ae3,0x3037d2a3,0xbfe63ae3,x16, 336*SIGALIGN, x17,x1, x14)

inst_1204:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x63ae33037d2a3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x63ae33037d2a3 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe63ae33037d2a3; valaddr_reg:x16; op2:x26; op2val:0xbfe63ae33037d2a3
offset:2390*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x3037d2a3, 0x3fe63ae3,0x3037d2a3,0xbfe63ae3,x16, 338*SIGALIGN, x17,x1, x14)

inst_1205:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x25e73a46ec0f2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x25e73a46ec0f2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe25e73a46ec0f2; valaddr_reg:x16; op2:x26; op2val:0xbfe25e73a46ec0f2
offset:2392*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xa46ec0f2, 0x3fe25e73,0xa46ec0f2,0xbfe25e73,x16, 340*SIGALIGN, x17,x1, x14)

inst_1206:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x25e73a46ec0f2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x25e73a46ec0f2 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe25e73a46ec0f2; valaddr_reg:x16; op2:x26; op2val:0xbfe25e73a46ec0f2
offset:2394*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xa46ec0f2, 0x3fe25e73,0xa46ec0f2,0xbfe25e73,x16, 342*SIGALIGN, x17,x1, x14)

inst_1207:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x25e73a46ec0f2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x25e73a46ec0f2 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe25e73a46ec0f2; valaddr_reg:x16; op2:x26; op2val:0xbfe25e73a46ec0f2
offset:2396*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xa46ec0f2, 0x3fe25e73,0xa46ec0f2,0xbfe25e73,x16, 344*SIGALIGN, x17,x1, x14)

inst_1208:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x25e73a46ec0f2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x25e73a46ec0f2 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe25e73a46ec0f2; valaddr_reg:x16; op2:x26; op2val:0xbfe25e73a46ec0f2
offset:2398*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xa46ec0f2, 0x3fe25e73,0xa46ec0f2,0xbfe25e73,x16, 346*SIGALIGN, x17,x1, x14)

inst_1209:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x25e73a46ec0f2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x25e73a46ec0f2 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe25e73a46ec0f2; valaddr_reg:x16; op2:x26; op2val:0xbfe25e73a46ec0f2
offset:2400*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xa46ec0f2, 0x3fe25e73,0xa46ec0f2,0xbfe25e73,x16, 348*SIGALIGN, x17,x1, x14)

inst_1210:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x3be191d4f9c08 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x3be191d4f9c08 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb3be191d4f9c08; valaddr_reg:x16; op2:x26; op2val:0xbfb3be191d4f9c08
offset:2402*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x1d4f9c08, 0x3fb3be19,0x1d4f9c08,0xbfb3be19,x16, 350*SIGALIGN, x17,x1, x14)

inst_1211:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x3be191d4f9c08 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x3be191d4f9c08 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb3be191d4f9c08; valaddr_reg:x16; op2:x26; op2val:0xbfb3be191d4f9c08
offset:2404*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x1d4f9c08, 0x3fb3be19,0x1d4f9c08,0xbfb3be19,x16, 352*SIGALIGN, x17,x1, x14)

inst_1212:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x3be191d4f9c08 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x3be191d4f9c08 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb3be191d4f9c08; valaddr_reg:x16; op2:x26; op2val:0xbfb3be191d4f9c08
offset:2406*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x1d4f9c08, 0x3fb3be19,0x1d4f9c08,0xbfb3be19,x16, 354*SIGALIGN, x17,x1, x14)

inst_1213:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x3be191d4f9c08 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x3be191d4f9c08 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb3be191d4f9c08; valaddr_reg:x16; op2:x26; op2val:0xbfb3be191d4f9c08
offset:2408*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x1d4f9c08, 0x3fb3be19,0x1d4f9c08,0xbfb3be19,x16, 356*SIGALIGN, x17,x1, x14)

inst_1214:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x3be191d4f9c08 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x3be191d4f9c08 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb3be191d4f9c08; valaddr_reg:x16; op2:x26; op2val:0xbfb3be191d4f9c08
offset:2410*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x1d4f9c08, 0x3fb3be19,0x1d4f9c08,0xbfb3be19,x16, 358*SIGALIGN, x17,x1, x14)

inst_1215:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2b3113bbf9129 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2b3113bbf9129 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2b3113bbf9129; valaddr_reg:x16; op2:x26; op2val:0xbfe2b3113bbf9129
offset:2412*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x3bbf9129, 0x3fe2b311,0x3bbf9129,0xbfe2b311,x16, 360*SIGALIGN, x17,x1, x14)

inst_1216:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2b3113bbf9129 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2b3113bbf9129 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2b3113bbf9129; valaddr_reg:x16; op2:x26; op2val:0xbfe2b3113bbf9129
offset:2414*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x3bbf9129, 0x3fe2b311,0x3bbf9129,0xbfe2b311,x16, 362*SIGALIGN, x17,x1, x14)

inst_1217:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2b3113bbf9129 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2b3113bbf9129 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2b3113bbf9129; valaddr_reg:x16; op2:x26; op2val:0xbfe2b3113bbf9129
offset:2416*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x3bbf9129, 0x3fe2b311,0x3bbf9129,0xbfe2b311,x16, 364*SIGALIGN, x17,x1, x14)

inst_1218:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2b3113bbf9129 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2b3113bbf9129 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2b3113bbf9129; valaddr_reg:x16; op2:x26; op2val:0xbfe2b3113bbf9129
offset:2418*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x3bbf9129, 0x3fe2b311,0x3bbf9129,0xbfe2b311,x16, 366*SIGALIGN, x17,x1, x14)

inst_1219:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2b3113bbf9129 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2b3113bbf9129 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2b3113bbf9129; valaddr_reg:x16; op2:x26; op2val:0xbfe2b3113bbf9129
offset:2420*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x3bbf9129, 0x3fe2b311,0x3bbf9129,0xbfe2b311,x16, 368*SIGALIGN, x17,x1, x14)

inst_1220:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xcf381fd806190 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xcf381fd806190 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fccf381fd806190; valaddr_reg:x16; op2:x26; op2val:0xbfccf381fd806190
offset:2422*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xfd806190, 0x3fccf381,0xfd806190,0xbfccf381,x16, 370*SIGALIGN, x17,x1, x14)

inst_1221:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xcf381fd806190 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xcf381fd806190 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fccf381fd806190; valaddr_reg:x16; op2:x26; op2val:0xbfccf381fd806190
offset:2424*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xfd806190, 0x3fccf381,0xfd806190,0xbfccf381,x16, 372*SIGALIGN, x17,x1, x14)

inst_1222:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xcf381fd806190 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xcf381fd806190 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fccf381fd806190; valaddr_reg:x16; op2:x26; op2val:0xbfccf381fd806190
offset:2426*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xfd806190, 0x3fccf381,0xfd806190,0xbfccf381,x16, 374*SIGALIGN, x17,x1, x14)

inst_1223:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xcf381fd806190 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xcf381fd806190 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fccf381fd806190; valaddr_reg:x16; op2:x26; op2val:0xbfccf381fd806190
offset:2428*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xfd806190, 0x3fccf381,0xfd806190,0xbfccf381,x16, 376*SIGALIGN, x17,x1, x14)

inst_1224:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xcf381fd806190 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xcf381fd806190 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fccf381fd806190; valaddr_reg:x16; op2:x26; op2val:0xbfccf381fd806190
offset:2430*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xfd806190, 0x3fccf381,0xfd806190,0xbfccf381,x16, 378*SIGALIGN, x17,x1, x14)

inst_1225:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf047fa8d5aa39 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf047fa8d5aa39 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef047fa8d5aa39; valaddr_reg:x16; op2:x26; op2val:0xbfef047fa8d5aa39
offset:2432*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xa8d5aa39, 0x3fef047f,0xa8d5aa39,0xbfef047f,x16, 380*SIGALIGN, x17,x1, x14)

inst_1226:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf047fa8d5aa39 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf047fa8d5aa39 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef047fa8d5aa39; valaddr_reg:x16; op2:x26; op2val:0xbfef047fa8d5aa39
offset:2434*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xa8d5aa39, 0x3fef047f,0xa8d5aa39,0xbfef047f,x16, 382*SIGALIGN, x17,x1, x14)

inst_1227:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf047fa8d5aa39 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf047fa8d5aa39 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef047fa8d5aa39; valaddr_reg:x16; op2:x26; op2val:0xbfef047fa8d5aa39
offset:2436*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xa8d5aa39, 0x3fef047f,0xa8d5aa39,0xbfef047f,x16, 384*SIGALIGN, x17,x1, x14)

inst_1228:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf047fa8d5aa39 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf047fa8d5aa39 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef047fa8d5aa39; valaddr_reg:x16; op2:x26; op2val:0xbfef047fa8d5aa39
offset:2438*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xa8d5aa39, 0x3fef047f,0xa8d5aa39,0xbfef047f,x16, 386*SIGALIGN, x17,x1, x14)

inst_1229:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf047fa8d5aa39 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf047fa8d5aa39 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef047fa8d5aa39; valaddr_reg:x16; op2:x26; op2val:0xbfef047fa8d5aa39
offset:2440*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xa8d5aa39, 0x3fef047f,0xa8d5aa39,0xbfef047f,x16, 388*SIGALIGN, x17,x1, x14)

inst_1230:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x411b9cca9f1ae and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x411b9cca9f1ae and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd411b9cca9f1ae; valaddr_reg:x16; op2:x26; op2val:0xbfd411b9cca9f1ae
offset:2442*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xcca9f1ae, 0x3fd411b9,0xcca9f1ae,0xbfd411b9,x16, 390*SIGALIGN, x17,x1, x14)

inst_1231:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x411b9cca9f1ae and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x411b9cca9f1ae and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd411b9cca9f1ae; valaddr_reg:x16; op2:x26; op2val:0xbfd411b9cca9f1ae
offset:2444*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xcca9f1ae, 0x3fd411b9,0xcca9f1ae,0xbfd411b9,x16, 392*SIGALIGN, x17,x1, x14)

inst_1232:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x411b9cca9f1ae and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x411b9cca9f1ae and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd411b9cca9f1ae; valaddr_reg:x16; op2:x26; op2val:0xbfd411b9cca9f1ae
offset:2446*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xcca9f1ae, 0x3fd411b9,0xcca9f1ae,0xbfd411b9,x16, 394*SIGALIGN, x17,x1, x14)

inst_1233:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x411b9cca9f1ae and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x411b9cca9f1ae and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd411b9cca9f1ae; valaddr_reg:x16; op2:x26; op2val:0xbfd411b9cca9f1ae
offset:2448*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xcca9f1ae, 0x3fd411b9,0xcca9f1ae,0xbfd411b9,x16, 396*SIGALIGN, x17,x1, x14)

inst_1234:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x411b9cca9f1ae and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x411b9cca9f1ae and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd411b9cca9f1ae; valaddr_reg:x16; op2:x26; op2val:0xbfd411b9cca9f1ae
offset:2450*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xcca9f1ae, 0x3fd411b9,0xcca9f1ae,0xbfd411b9,x16, 398*SIGALIGN, x17,x1, x14)

inst_1235:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x4a9e96459a3c0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x4a9e96459a3c0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb4a9e96459a3c0; valaddr_reg:x16; op2:x26; op2val:0xbfb4a9e96459a3c0
offset:2452*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x6459a3c0, 0x3fb4a9e9,0x6459a3c0,0xbfb4a9e9,x16, 400*SIGALIGN, x17,x1, x14)

inst_1236:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x4a9e96459a3c0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x4a9e96459a3c0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb4a9e96459a3c0; valaddr_reg:x16; op2:x26; op2val:0xbfb4a9e96459a3c0
offset:2454*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x6459a3c0, 0x3fb4a9e9,0x6459a3c0,0xbfb4a9e9,x16, 402*SIGALIGN, x17,x1, x14)

inst_1237:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x4a9e96459a3c0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x4a9e96459a3c0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb4a9e96459a3c0; valaddr_reg:x16; op2:x26; op2val:0xbfb4a9e96459a3c0
offset:2456*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x6459a3c0, 0x3fb4a9e9,0x6459a3c0,0xbfb4a9e9,x16, 404*SIGALIGN, x17,x1, x14)

inst_1238:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x4a9e96459a3c0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x4a9e96459a3c0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb4a9e96459a3c0; valaddr_reg:x16; op2:x26; op2val:0xbfb4a9e96459a3c0
offset:2458*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x6459a3c0, 0x3fb4a9e9,0x6459a3c0,0xbfb4a9e9,x16, 406*SIGALIGN, x17,x1, x14)

inst_1239:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x4a9e96459a3c0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x4a9e96459a3c0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb4a9e96459a3c0; valaddr_reg:x16; op2:x26; op2val:0xbfb4a9e96459a3c0
offset:2460*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x6459a3c0, 0x3fb4a9e9,0x6459a3c0,0xbfb4a9e9,x16, 408*SIGALIGN, x17,x1, x14)

inst_1240:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1c1dbf5fab43c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x1c1dbf5fab43c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd1c1dbf5fab43c; valaddr_reg:x16; op2:x26; op2val:0xbfd1c1dbf5fab43c
offset:2462*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf5fab43c, 0x3fd1c1db,0xf5fab43c,0xbfd1c1db,x16, 410*SIGALIGN, x17,x1, x14)

inst_1241:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1c1dbf5fab43c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x1c1dbf5fab43c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd1c1dbf5fab43c; valaddr_reg:x16; op2:x26; op2val:0xbfd1c1dbf5fab43c
offset:2464*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xf5fab43c, 0x3fd1c1db,0xf5fab43c,0xbfd1c1db,x16, 412*SIGALIGN, x17,x1, x14)

inst_1242:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1c1dbf5fab43c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x1c1dbf5fab43c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd1c1dbf5fab43c; valaddr_reg:x16; op2:x26; op2val:0xbfd1c1dbf5fab43c
offset:2466*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xf5fab43c, 0x3fd1c1db,0xf5fab43c,0xbfd1c1db,x16, 414*SIGALIGN, x17,x1, x14)

inst_1243:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1c1dbf5fab43c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x1c1dbf5fab43c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd1c1dbf5fab43c; valaddr_reg:x16; op2:x26; op2val:0xbfd1c1dbf5fab43c
offset:2468*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf5fab43c, 0x3fd1c1db,0xf5fab43c,0xbfd1c1db,x16, 416*SIGALIGN, x17,x1, x14)

inst_1244:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1c1dbf5fab43c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x1c1dbf5fab43c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd1c1dbf5fab43c; valaddr_reg:x16; op2:x26; op2val:0xbfd1c1dbf5fab43c
offset:2470*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xf5fab43c, 0x3fd1c1db,0xf5fab43c,0xbfd1c1db,x16, 418*SIGALIGN, x17,x1, x14)

inst_1245:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdbfdc6b83b57d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xdbfdc6b83b57d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fedbfdc6b83b57d; valaddr_reg:x16; op2:x26; op2val:0xbfedbfdc6b83b57d
offset:2472*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x6b83b57d, 0x3fedbfdc,0x6b83b57d,0xbfedbfdc,x16, 420*SIGALIGN, x17,x1, x14)

inst_1246:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdbfdc6b83b57d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xdbfdc6b83b57d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fedbfdc6b83b57d; valaddr_reg:x16; op2:x26; op2val:0xbfedbfdc6b83b57d
offset:2474*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x6b83b57d, 0x3fedbfdc,0x6b83b57d,0xbfedbfdc,x16, 422*SIGALIGN, x17,x1, x14)

inst_1247:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdbfdc6b83b57d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xdbfdc6b83b57d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fedbfdc6b83b57d; valaddr_reg:x16; op2:x26; op2val:0xbfedbfdc6b83b57d
offset:2476*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x6b83b57d, 0x3fedbfdc,0x6b83b57d,0xbfedbfdc,x16, 424*SIGALIGN, x17,x1, x14)

inst_1248:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdbfdc6b83b57d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xdbfdc6b83b57d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fedbfdc6b83b57d; valaddr_reg:x16; op2:x26; op2val:0xbfedbfdc6b83b57d
offset:2478*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x6b83b57d, 0x3fedbfdc,0x6b83b57d,0xbfedbfdc,x16, 426*SIGALIGN, x17,x1, x14)

inst_1249:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdbfdc6b83b57d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xdbfdc6b83b57d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fedbfdc6b83b57d; valaddr_reg:x16; op2:x26; op2val:0xbfedbfdc6b83b57d
offset:2480*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x6b83b57d, 0x3fedbfdc,0x6b83b57d,0xbfedbfdc,x16, 428*SIGALIGN, x17,x1, x14)

inst_1250:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf0f56e69e43a4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf0f56e69e43a4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef0f56e69e43a4; valaddr_reg:x16; op2:x26; op2val:0xbfef0f56e69e43a4
offset:2482*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe69e43a4, 0x3fef0f56,0xe69e43a4,0xbfef0f56,x16, 430*SIGALIGN, x17,x1, x14)

inst_1251:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf0f56e69e43a4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf0f56e69e43a4 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef0f56e69e43a4; valaddr_reg:x16; op2:x26; op2val:0xbfef0f56e69e43a4
offset:2484*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xe69e43a4, 0x3fef0f56,0xe69e43a4,0xbfef0f56,x16, 432*SIGALIGN, x17,x1, x14)

inst_1252:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf0f56e69e43a4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf0f56e69e43a4 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef0f56e69e43a4; valaddr_reg:x16; op2:x26; op2val:0xbfef0f56e69e43a4
offset:2486*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xe69e43a4, 0x3fef0f56,0xe69e43a4,0xbfef0f56,x16, 434*SIGALIGN, x17,x1, x14)

inst_1253:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf0f56e69e43a4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf0f56e69e43a4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef0f56e69e43a4; valaddr_reg:x16; op2:x26; op2val:0xbfef0f56e69e43a4
offset:2488*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe69e43a4, 0x3fef0f56,0xe69e43a4,0xbfef0f56,x16, 436*SIGALIGN, x17,x1, x14)

inst_1254:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf0f56e69e43a4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf0f56e69e43a4 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef0f56e69e43a4; valaddr_reg:x16; op2:x26; op2val:0xbfef0f56e69e43a4
offset:2490*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xe69e43a4, 0x3fef0f56,0xe69e43a4,0xbfef0f56,x16, 438*SIGALIGN, x17,x1, x14)

inst_1255:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfae5f78adcdb1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfae5f78adcdb1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fefae5f78adcdb1; valaddr_reg:x16; op2:x26; op2val:0xbfefae5f78adcdb1
offset:2492*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x78adcdb1, 0x3fefae5f,0x78adcdb1,0xbfefae5f,x16, 440*SIGALIGN, x17,x1, x14)

inst_1256:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfae5f78adcdb1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfae5f78adcdb1 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fefae5f78adcdb1; valaddr_reg:x16; op2:x26; op2val:0xbfefae5f78adcdb1
offset:2494*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x78adcdb1, 0x3fefae5f,0x78adcdb1,0xbfefae5f,x16, 442*SIGALIGN, x17,x1, x14)

inst_1257:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfae5f78adcdb1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfae5f78adcdb1 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fefae5f78adcdb1; valaddr_reg:x16; op2:x26; op2val:0xbfefae5f78adcdb1
offset:2496*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x78adcdb1, 0x3fefae5f,0x78adcdb1,0xbfefae5f,x16, 444*SIGALIGN, x17,x1, x14)

inst_1258:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfae5f78adcdb1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfae5f78adcdb1 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fefae5f78adcdb1; valaddr_reg:x16; op2:x26; op2val:0xbfefae5f78adcdb1
offset:2498*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x78adcdb1, 0x3fefae5f,0x78adcdb1,0xbfefae5f,x16, 446*SIGALIGN, x17,x1, x14)

inst_1259:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfae5f78adcdb1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfae5f78adcdb1 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fefae5f78adcdb1; valaddr_reg:x16; op2:x26; op2val:0xbfefae5f78adcdb1
offset:2500*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x78adcdb1, 0x3fefae5f,0x78adcdb1,0xbfefae5f,x16, 448*SIGALIGN, x17,x1, x14)

inst_1260:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x72ac9da25ac50 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x72ac9da25ac50 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc72ac9da25ac50; valaddr_reg:x16; op2:x26; op2val:0xbfc72ac9da25ac50
offset:2502*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xda25ac50, 0x3fc72ac9,0xda25ac50,0xbfc72ac9,x16, 450*SIGALIGN, x17,x1, x14)

inst_1261:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x72ac9da25ac50 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x72ac9da25ac50 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc72ac9da25ac50; valaddr_reg:x16; op2:x26; op2val:0xbfc72ac9da25ac50
offset:2504*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xda25ac50, 0x3fc72ac9,0xda25ac50,0xbfc72ac9,x16, 452*SIGALIGN, x17,x1, x14)

inst_1262:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x72ac9da25ac50 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x72ac9da25ac50 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc72ac9da25ac50; valaddr_reg:x16; op2:x26; op2val:0xbfc72ac9da25ac50
offset:2506*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xda25ac50, 0x3fc72ac9,0xda25ac50,0xbfc72ac9,x16, 454*SIGALIGN, x17,x1, x14)

inst_1263:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x72ac9da25ac50 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x72ac9da25ac50 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc72ac9da25ac50; valaddr_reg:x16; op2:x26; op2val:0xbfc72ac9da25ac50
offset:2508*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xda25ac50, 0x3fc72ac9,0xda25ac50,0xbfc72ac9,x16, 456*SIGALIGN, x17,x1, x14)

inst_1264:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x72ac9da25ac50 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x72ac9da25ac50 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc72ac9da25ac50; valaddr_reg:x16; op2:x26; op2val:0xbfc72ac9da25ac50
offset:2510*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xda25ac50, 0x3fc72ac9,0xda25ac50,0xbfc72ac9,x16, 458*SIGALIGN, x17,x1, x14)

inst_1265:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb47d67b6a28b8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xb47d67b6a28b8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbb47d67b6a28b8; valaddr_reg:x16; op2:x26; op2val:0xbfbb47d67b6a28b8
offset:2512*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x7b6a28b8, 0x3fbb47d6,0x7b6a28b8,0xbfbb47d6,x16, 460*SIGALIGN, x17,x1, x14)

inst_1266:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb47d67b6a28b8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xb47d67b6a28b8 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbb47d67b6a28b8; valaddr_reg:x16; op2:x26; op2val:0xbfbb47d67b6a28b8
offset:2514*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x7b6a28b8, 0x3fbb47d6,0x7b6a28b8,0xbfbb47d6,x16, 462*SIGALIGN, x17,x1, x14)

inst_1267:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb47d67b6a28b8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xb47d67b6a28b8 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbb47d67b6a28b8; valaddr_reg:x16; op2:x26; op2val:0xbfbb47d67b6a28b8
offset:2516*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x7b6a28b8, 0x3fbb47d6,0x7b6a28b8,0xbfbb47d6,x16, 464*SIGALIGN, x17,x1, x14)

inst_1268:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb47d67b6a28b8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xb47d67b6a28b8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbb47d67b6a28b8; valaddr_reg:x16; op2:x26; op2val:0xbfbb47d67b6a28b8
offset:2518*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x7b6a28b8, 0x3fbb47d6,0x7b6a28b8,0xbfbb47d6,x16, 466*SIGALIGN, x17,x1, x14)

inst_1269:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb47d67b6a28b8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xb47d67b6a28b8 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fbb47d67b6a28b8; valaddr_reg:x16; op2:x26; op2val:0xbfbb47d67b6a28b8
offset:2520*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x7b6a28b8, 0x3fbb47d6,0x7b6a28b8,0xbfbb47d6,x16, 468*SIGALIGN, x17,x1, x14)

inst_1270:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9725a915d2a42 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9725a915d2a42 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe9725a915d2a42; valaddr_reg:x16; op2:x26; op2val:0xbfe9725a915d2a42
offset:2522*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x915d2a42, 0x3fe9725a,0x915d2a42,0xbfe9725a,x16, 470*SIGALIGN, x17,x1, x14)

inst_1271:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9725a915d2a42 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9725a915d2a42 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe9725a915d2a42; valaddr_reg:x16; op2:x26; op2val:0xbfe9725a915d2a42
offset:2524*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x915d2a42, 0x3fe9725a,0x915d2a42,0xbfe9725a,x16, 472*SIGALIGN, x17,x1, x14)

inst_1272:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9725a915d2a42 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9725a915d2a42 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe9725a915d2a42; valaddr_reg:x16; op2:x26; op2val:0xbfe9725a915d2a42
offset:2526*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x915d2a42, 0x3fe9725a,0x915d2a42,0xbfe9725a,x16, 474*SIGALIGN, x17,x1, x14)

inst_1273:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9725a915d2a42 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9725a915d2a42 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe9725a915d2a42; valaddr_reg:x16; op2:x26; op2val:0xbfe9725a915d2a42
offset:2528*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x915d2a42, 0x3fe9725a,0x915d2a42,0xbfe9725a,x16, 476*SIGALIGN, x17,x1, x14)

inst_1274:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9725a915d2a42 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9725a915d2a42 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe9725a915d2a42; valaddr_reg:x16; op2:x26; op2val:0xbfe9725a915d2a42
offset:2530*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x915d2a42, 0x3fe9725a,0x915d2a42,0xbfe9725a,x16, 478*SIGALIGN, x17,x1, x14)

inst_1275:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xf9c1686579700 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xf9c1686579700 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3faf9c1686579700; valaddr_reg:x16; op2:x26; op2val:0xbfaf9c1686579700
offset:2532*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x86579700, 0x3faf9c16,0x86579700,0xbfaf9c16,x16, 480*SIGALIGN, x17,x1, x14)

inst_1276:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xf9c1686579700 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xf9c1686579700 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3faf9c1686579700; valaddr_reg:x16; op2:x26; op2val:0xbfaf9c1686579700
offset:2534*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x86579700, 0x3faf9c16,0x86579700,0xbfaf9c16,x16, 482*SIGALIGN, x17,x1, x14)

inst_1277:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xf9c1686579700 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xf9c1686579700 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3faf9c1686579700; valaddr_reg:x16; op2:x26; op2val:0xbfaf9c1686579700
offset:2536*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x86579700, 0x3faf9c16,0x86579700,0xbfaf9c16,x16, 484*SIGALIGN, x17,x1, x14)

inst_1278:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xf9c1686579700 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xf9c1686579700 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3faf9c1686579700; valaddr_reg:x16; op2:x26; op2val:0xbfaf9c1686579700
offset:2538*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x86579700, 0x3faf9c16,0x86579700,0xbfaf9c16,x16, 486*SIGALIGN, x17,x1, x14)

inst_1279:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xf9c1686579700 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xf9c1686579700 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3faf9c1686579700; valaddr_reg:x16; op2:x26; op2val:0xbfaf9c1686579700
offset:2540*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x86579700, 0x3faf9c16,0x86579700,0xbfaf9c16,x16, 488*SIGALIGN, x17,x1, x14)

inst_1280:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfc524ded3b2e1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfc524ded3b2e1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fefc524ded3b2e1; valaddr_reg:x16; op2:x26; op2val:0xbfefc524ded3b2e1
offset:2542*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xded3b2e1, 0x3fefc524,0xded3b2e1,0xbfefc524,x16, 490*SIGALIGN, x17,x1, x14)

inst_1281:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfc524ded3b2e1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfc524ded3b2e1 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fefc524ded3b2e1; valaddr_reg:x16; op2:x26; op2val:0xbfefc524ded3b2e1
offset:2544*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xded3b2e1, 0x3fefc524,0xded3b2e1,0xbfefc524,x16, 492*SIGALIGN, x17,x1, x14)

inst_1282:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfc524ded3b2e1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfc524ded3b2e1 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fefc524ded3b2e1; valaddr_reg:x16; op2:x26; op2val:0xbfefc524ded3b2e1
offset:2546*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xded3b2e1, 0x3fefc524,0xded3b2e1,0xbfefc524,x16, 494*SIGALIGN, x17,x1, x14)

inst_1283:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfc524ded3b2e1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfc524ded3b2e1 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fefc524ded3b2e1; valaddr_reg:x16; op2:x26; op2val:0xbfefc524ded3b2e1
offset:2548*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xded3b2e1, 0x3fefc524,0xded3b2e1,0xbfefc524,x16, 496*SIGALIGN, x17,x1, x14)

inst_1284:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfc524ded3b2e1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfc524ded3b2e1 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fefc524ded3b2e1; valaddr_reg:x16; op2:x26; op2val:0xbfefc524ded3b2e1
offset:2550*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xded3b2e1, 0x3fefc524,0xded3b2e1,0xbfefc524,x16, 498*SIGALIGN, x17,x1, x14)

inst_1285:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf36112c44d337 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf36112c44d337 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef36112c44d337; valaddr_reg:x16; op2:x26; op2val:0xbfef36112c44d337
offset:2552*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x2c44d337, 0x3fef3611,0x2c44d337,0xbfef3611,x16, 500*SIGALIGN, x17,x1, x14)

inst_1286:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf36112c44d337 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf36112c44d337 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef36112c44d337; valaddr_reg:x16; op2:x26; op2val:0xbfef36112c44d337
offset:2554*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x2c44d337, 0x3fef3611,0x2c44d337,0xbfef3611,x16, 502*SIGALIGN, x17,x1, x14)

inst_1287:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf36112c44d337 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf36112c44d337 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef36112c44d337; valaddr_reg:x16; op2:x26; op2val:0xbfef36112c44d337
offset:2556*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x2c44d337, 0x3fef3611,0x2c44d337,0xbfef3611,x16, 504*SIGALIGN, x17,x1, x14)

inst_1288:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf36112c44d337 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf36112c44d337 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef36112c44d337; valaddr_reg:x16; op2:x26; op2val:0xbfef36112c44d337
offset:2558*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x2c44d337, 0x3fef3611,0x2c44d337,0xbfef3611,x16, 506*SIGALIGN, x17,x1, x14)

inst_1289:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf36112c44d337 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf36112c44d337 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef36112c44d337; valaddr_reg:x16; op2:x26; op2val:0xbfef36112c44d337
offset:2560*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x2c44d337, 0x3fef3611,0x2c44d337,0xbfef3611,x16, 508*SIGALIGN, x17,x1, x14)

inst_1290:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x206889dbad440 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x206889dbad440 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc206889dbad440; valaddr_reg:x16; op2:x26; op2val:0xbfc206889dbad440
offset:2562*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x9dbad440, 0x3fc20688,0x9dbad440,0xbfc20688,x16, 510*SIGALIGN, x17,x1, x14)
RVTEST_SIGBASE(x1,signature_x1_7)

inst_1291:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x206889dbad440 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x206889dbad440 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc206889dbad440; valaddr_reg:x16; op2:x26; op2val:0xbfc206889dbad440
offset:2564*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x9dbad440, 0x3fc20688,0x9dbad440,0xbfc20688,x16, 0*SIGALIGN, x17,x1, x14)

inst_1292:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x206889dbad440 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x206889dbad440 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc206889dbad440; valaddr_reg:x16; op2:x26; op2val:0xbfc206889dbad440
offset:2566*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x9dbad440, 0x3fc20688,0x9dbad440,0xbfc20688,x16, 2*SIGALIGN, x17,x1, x14)

inst_1293:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x206889dbad440 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x206889dbad440 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc206889dbad440; valaddr_reg:x16; op2:x26; op2val:0xbfc206889dbad440
offset:2568*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x9dbad440, 0x3fc20688,0x9dbad440,0xbfc20688,x16, 4*SIGALIGN, x17,x1, x14)

inst_1294:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x206889dbad440 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x206889dbad440 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc206889dbad440; valaddr_reg:x16; op2:x26; op2val:0xbfc206889dbad440
offset:2570*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x9dbad440, 0x3fc20688,0x9dbad440,0xbfc20688,x16, 6*SIGALIGN, x17,x1, x14)

inst_1295:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc674aea17dd8e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc674aea17dd8e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fec674aea17dd8e; valaddr_reg:x16; op2:x26; op2val:0xbfec674aea17dd8e
offset:2572*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xea17dd8e, 0x3fec674a,0xea17dd8e,0xbfec674a,x16, 8*SIGALIGN, x17,x1, x14)

inst_1296:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc674aea17dd8e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc674aea17dd8e and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fec674aea17dd8e; valaddr_reg:x16; op2:x26; op2val:0xbfec674aea17dd8e
offset:2574*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xea17dd8e, 0x3fec674a,0xea17dd8e,0xbfec674a,x16, 10*SIGALIGN, x17,x1, x14)

inst_1297:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc674aea17dd8e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc674aea17dd8e and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fec674aea17dd8e; valaddr_reg:x16; op2:x26; op2val:0xbfec674aea17dd8e
offset:2576*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xea17dd8e, 0x3fec674a,0xea17dd8e,0xbfec674a,x16, 12*SIGALIGN, x17,x1, x14)

inst_1298:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc674aea17dd8e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc674aea17dd8e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fec674aea17dd8e; valaddr_reg:x16; op2:x26; op2val:0xbfec674aea17dd8e
offset:2578*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xea17dd8e, 0x3fec674a,0xea17dd8e,0xbfec674a,x16, 14*SIGALIGN, x17,x1, x14)

inst_1299:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc674aea17dd8e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc674aea17dd8e and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fec674aea17dd8e; valaddr_reg:x16; op2:x26; op2val:0xbfec674aea17dd8e
offset:2580*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xea17dd8e, 0x3fec674a,0xea17dd8e,0xbfec674a,x16, 16*SIGALIGN, x17,x1, x14)

inst_1300:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x4e7786f7957b0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x4e7786f7957b0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fa4e7786f7957b0; valaddr_reg:x16; op2:x26; op2val:0xbfa4e7786f7957b0
offset:2582*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x6f7957b0, 0x3fa4e778,0x6f7957b0,0xbfa4e778,x16, 18*SIGALIGN, x17,x1, x14)

inst_1301:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x4e7786f7957b0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x4e7786f7957b0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fa4e7786f7957b0; valaddr_reg:x16; op2:x26; op2val:0xbfa4e7786f7957b0
offset:2584*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x6f7957b0, 0x3fa4e778,0x6f7957b0,0xbfa4e778,x16, 20*SIGALIGN, x17,x1, x14)

inst_1302:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x4e7786f7957b0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x4e7786f7957b0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fa4e7786f7957b0; valaddr_reg:x16; op2:x26; op2val:0xbfa4e7786f7957b0
offset:2586*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x6f7957b0, 0x3fa4e778,0x6f7957b0,0xbfa4e778,x16, 22*SIGALIGN, x17,x1, x14)

inst_1303:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x4e7786f7957b0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x4e7786f7957b0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fa4e7786f7957b0; valaddr_reg:x16; op2:x26; op2val:0xbfa4e7786f7957b0
offset:2588*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x6f7957b0, 0x3fa4e778,0x6f7957b0,0xbfa4e778,x16, 24*SIGALIGN, x17,x1, x14)

inst_1304:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x4e7786f7957b0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x4e7786f7957b0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fa4e7786f7957b0; valaddr_reg:x16; op2:x26; op2val:0xbfa4e7786f7957b0
offset:2590*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x6f7957b0, 0x3fa4e778,0x6f7957b0,0xbfa4e778,x16, 26*SIGALIGN, x17,x1, x14)

inst_1305:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x1246332ae28f0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x1246332ae28f0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fa1246332ae28f0; valaddr_reg:x16; op2:x26; op2val:0xbfa1246332ae28f0
offset:2592*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x32ae28f0, 0x3fa12463,0x32ae28f0,0xbfa12463,x16, 28*SIGALIGN, x17,x1, x14)

inst_1306:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x1246332ae28f0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x1246332ae28f0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fa1246332ae28f0; valaddr_reg:x16; op2:x26; op2val:0xbfa1246332ae28f0
offset:2594*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x32ae28f0, 0x3fa12463,0x32ae28f0,0xbfa12463,x16, 30*SIGALIGN, x17,x1, x14)

inst_1307:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x1246332ae28f0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x1246332ae28f0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fa1246332ae28f0; valaddr_reg:x16; op2:x26; op2val:0xbfa1246332ae28f0
offset:2596*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x32ae28f0, 0x3fa12463,0x32ae28f0,0xbfa12463,x16, 32*SIGALIGN, x17,x1, x14)

inst_1308:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x1246332ae28f0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x1246332ae28f0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fa1246332ae28f0; valaddr_reg:x16; op2:x26; op2val:0xbfa1246332ae28f0
offset:2598*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x32ae28f0, 0x3fa12463,0x32ae28f0,0xbfa12463,x16, 34*SIGALIGN, x17,x1, x14)

inst_1309:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x1246332ae28f0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x1246332ae28f0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fa1246332ae28f0; valaddr_reg:x16; op2:x26; op2val:0xbfa1246332ae28f0
offset:2600*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x32ae28f0, 0x3fa12463,0x32ae28f0,0xbfa12463,x16, 36*SIGALIGN, x17,x1, x14)

inst_1310:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0da26502807f8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0da26502807f8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0da26502807f8; valaddr_reg:x16; op2:x26; op2val:0xbfe0da26502807f8
offset:2602*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x502807f8, 0x3fe0da26,0x502807f8,0xbfe0da26,x16, 38*SIGALIGN, x17,x1, x14)

inst_1311:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0da26502807f8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0da26502807f8 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0da26502807f8; valaddr_reg:x16; op2:x26; op2val:0xbfe0da26502807f8
offset:2604*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x502807f8, 0x3fe0da26,0x502807f8,0xbfe0da26,x16, 40*SIGALIGN, x17,x1, x14)

inst_1312:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0da26502807f8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0da26502807f8 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0da26502807f8; valaddr_reg:x16; op2:x26; op2val:0xbfe0da26502807f8
offset:2606*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x502807f8, 0x3fe0da26,0x502807f8,0xbfe0da26,x16, 42*SIGALIGN, x17,x1, x14)

inst_1313:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0da26502807f8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0da26502807f8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0da26502807f8; valaddr_reg:x16; op2:x26; op2val:0xbfe0da26502807f8
offset:2608*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x502807f8, 0x3fe0da26,0x502807f8,0xbfe0da26,x16, 44*SIGALIGN, x17,x1, x14)

inst_1314:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0da26502807f8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0da26502807f8 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0da26502807f8; valaddr_reg:x16; op2:x26; op2val:0xbfe0da26502807f8
offset:2610*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x502807f8, 0x3fe0da26,0x502807f8,0xbfe0da26,x16, 46*SIGALIGN, x17,x1, x14)

inst_1315:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x0187483e41018 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x0187483e41018 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb0187483e41018; valaddr_reg:x16; op2:x26; op2val:0xbfb0187483e41018
offset:2612*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x83e41018, 0x3fb01874,0x83e41018,0xbfb01874,x16, 48*SIGALIGN, x17,x1, x14)

inst_1316:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x0187483e41018 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x0187483e41018 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb0187483e41018; valaddr_reg:x16; op2:x26; op2val:0xbfb0187483e41018
offset:2614*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x83e41018, 0x3fb01874,0x83e41018,0xbfb01874,x16, 50*SIGALIGN, x17,x1, x14)

inst_1317:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x0187483e41018 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x0187483e41018 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb0187483e41018; valaddr_reg:x16; op2:x26; op2val:0xbfb0187483e41018
offset:2616*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x83e41018, 0x3fb01874,0x83e41018,0xbfb01874,x16, 52*SIGALIGN, x17,x1, x14)

inst_1318:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x0187483e41018 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x0187483e41018 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb0187483e41018; valaddr_reg:x16; op2:x26; op2val:0xbfb0187483e41018
offset:2618*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x83e41018, 0x3fb01874,0x83e41018,0xbfb01874,x16, 54*SIGALIGN, x17,x1, x14)

inst_1319:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x0187483e41018 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x0187483e41018 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fb0187483e41018; valaddr_reg:x16; op2:x26; op2val:0xbfb0187483e41018
offset:2620*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x83e41018, 0x3fb01874,0x83e41018,0xbfb01874,x16, 56*SIGALIGN, x17,x1, x14)

inst_1320:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x74d2835625624 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x74d2835625624 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd74d2835625624; valaddr_reg:x16; op2:x26; op2val:0xbfd74d2835625624
offset:2622*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x35625624, 0x3fd74d28,0x35625624,0xbfd74d28,x16, 58*SIGALIGN, x17,x1, x14)

inst_1321:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x74d2835625624 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x74d2835625624 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd74d2835625624; valaddr_reg:x16; op2:x26; op2val:0xbfd74d2835625624
offset:2624*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x35625624, 0x3fd74d28,0x35625624,0xbfd74d28,x16, 60*SIGALIGN, x17,x1, x14)

inst_1322:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x74d2835625624 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x74d2835625624 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd74d2835625624; valaddr_reg:x16; op2:x26; op2val:0xbfd74d2835625624
offset:2626*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x35625624, 0x3fd74d28,0x35625624,0xbfd74d28,x16, 62*SIGALIGN, x17,x1, x14)

inst_1323:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x74d2835625624 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x74d2835625624 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd74d2835625624; valaddr_reg:x16; op2:x26; op2val:0xbfd74d2835625624
offset:2628*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x35625624, 0x3fd74d28,0x35625624,0xbfd74d28,x16, 64*SIGALIGN, x17,x1, x14)

inst_1324:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x74d2835625624 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x74d2835625624 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd74d2835625624; valaddr_reg:x16; op2:x26; op2val:0xbfd74d2835625624
offset:2630*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x35625624, 0x3fd74d28,0x35625624,0xbfd74d28,x16, 66*SIGALIGN, x17,x1, x14)

inst_1325:// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0xcde95d6a03380 and fs2 == 1 and fe2 == 0x3f7 and fm2 == 0xcde95d6a03380 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f7cde95d6a03380; valaddr_reg:x16; op2:x26; op2val:0xbf7cde95d6a03380
offset:2632*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xd6a03380, 0x3f7cde95,0xd6a03380,0xbf7cde95,x16, 68*SIGALIGN, x17,x1, x14)

inst_1326:// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0xcde95d6a03380 and fs2 == 1 and fe2 == 0x3f7 and fm2 == 0xcde95d6a03380 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f7cde95d6a03380; valaddr_reg:x16; op2:x26; op2val:0xbf7cde95d6a03380
offset:2634*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xd6a03380, 0x3f7cde95,0xd6a03380,0xbf7cde95,x16, 70*SIGALIGN, x17,x1, x14)

inst_1327:// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0xcde95d6a03380 and fs2 == 1 and fe2 == 0x3f7 and fm2 == 0xcde95d6a03380 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f7cde95d6a03380; valaddr_reg:x16; op2:x26; op2val:0xbf7cde95d6a03380
offset:2636*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xd6a03380, 0x3f7cde95,0xd6a03380,0xbf7cde95,x16, 72*SIGALIGN, x17,x1, x14)

inst_1328:// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0xcde95d6a03380 and fs2 == 1 and fe2 == 0x3f7 and fm2 == 0xcde95d6a03380 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f7cde95d6a03380; valaddr_reg:x16; op2:x26; op2val:0xbf7cde95d6a03380
offset:2638*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd6a03380, 0x3f7cde95,0xd6a03380,0xbf7cde95,x16, 74*SIGALIGN, x17,x1, x14)

inst_1329:// fs1 == 0 and fe1 == 0x3f7 and fm1 == 0xcde95d6a03380 and fs2 == 1 and fe2 == 0x3f7 and fm2 == 0xcde95d6a03380 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f7cde95d6a03380; valaddr_reg:x16; op2:x26; op2val:0xbf7cde95d6a03380
offset:2640*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xd6a03380, 0x3f7cde95,0xd6a03380,0xbf7cde95,x16, 76*SIGALIGN, x17,x1, x14)

inst_1330:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xad35d1d89b3d2 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xad35d1d89b3d2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdad35d1d89b3d2; valaddr_reg:x16; op2:x26; op2val:0xbfdad35d1d89b3d2
offset:2642*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x1d89b3d2, 0x3fdad35d,0x1d89b3d2,0xbfdad35d,x16, 78*SIGALIGN, x17,x1, x14)

inst_1331:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xad35d1d89b3d2 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xad35d1d89b3d2 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdad35d1d89b3d2; valaddr_reg:x16; op2:x26; op2val:0xbfdad35d1d89b3d2
offset:2644*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x1d89b3d2, 0x3fdad35d,0x1d89b3d2,0xbfdad35d,x16, 80*SIGALIGN, x17,x1, x14)

inst_1332:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xad35d1d89b3d2 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xad35d1d89b3d2 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdad35d1d89b3d2; valaddr_reg:x16; op2:x26; op2val:0xbfdad35d1d89b3d2
offset:2646*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x1d89b3d2, 0x3fdad35d,0x1d89b3d2,0xbfdad35d,x16, 82*SIGALIGN, x17,x1, x14)

inst_1333:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xad35d1d89b3d2 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xad35d1d89b3d2 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdad35d1d89b3d2; valaddr_reg:x16; op2:x26; op2val:0xbfdad35d1d89b3d2
offset:2648*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x1d89b3d2, 0x3fdad35d,0x1d89b3d2,0xbfdad35d,x16, 84*SIGALIGN, x17,x1, x14)

inst_1334:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xad35d1d89b3d2 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xad35d1d89b3d2 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdad35d1d89b3d2; valaddr_reg:x16; op2:x26; op2val:0xbfdad35d1d89b3d2
offset:2650*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x1d89b3d2, 0x3fdad35d,0x1d89b3d2,0xbfdad35d,x16, 86*SIGALIGN, x17,x1, x14)

inst_1335:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xa31f35b4c6010 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xa31f35b4c6010 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fba31f35b4c6010; valaddr_reg:x16; op2:x26; op2val:0xbfba31f35b4c6010
offset:2652*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x5b4c6010, 0x3fba31f3,0x5b4c6010,0xbfba31f3,x16, 88*SIGALIGN, x17,x1, x14)

inst_1336:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xa31f35b4c6010 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xa31f35b4c6010 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fba31f35b4c6010; valaddr_reg:x16; op2:x26; op2val:0xbfba31f35b4c6010
offset:2654*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x5b4c6010, 0x3fba31f3,0x5b4c6010,0xbfba31f3,x16, 90*SIGALIGN, x17,x1, x14)

inst_1337:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xa31f35b4c6010 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xa31f35b4c6010 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fba31f35b4c6010; valaddr_reg:x16; op2:x26; op2val:0xbfba31f35b4c6010
offset:2656*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x5b4c6010, 0x3fba31f3,0x5b4c6010,0xbfba31f3,x16, 92*SIGALIGN, x17,x1, x14)

inst_1338:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xa31f35b4c6010 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xa31f35b4c6010 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fba31f35b4c6010; valaddr_reg:x16; op2:x26; op2val:0xbfba31f35b4c6010
offset:2658*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x5b4c6010, 0x3fba31f3,0x5b4c6010,0xbfba31f3,x16, 94*SIGALIGN, x17,x1, x14)

inst_1339:// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xa31f35b4c6010 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xa31f35b4c6010 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fba31f35b4c6010; valaddr_reg:x16; op2:x26; op2val:0xbfba31f35b4c6010
offset:2660*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x5b4c6010, 0x3fba31f3,0x5b4c6010,0xbfba31f3,x16, 96*SIGALIGN, x17,x1, x14)

inst_1340:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x909bd1c6f5700 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x909bd1c6f5700 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc909bd1c6f5700; valaddr_reg:x16; op2:x26; op2val:0xbfc909bd1c6f5700
offset:2662*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x1c6f5700, 0x3fc909bd,0x1c6f5700,0xbfc909bd,x16, 98*SIGALIGN, x17,x1, x14)

inst_1341:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x909bd1c6f5700 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x909bd1c6f5700 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc909bd1c6f5700; valaddr_reg:x16; op2:x26; op2val:0xbfc909bd1c6f5700
offset:2664*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x1c6f5700, 0x3fc909bd,0x1c6f5700,0xbfc909bd,x16, 100*SIGALIGN, x17,x1, x14)

inst_1342:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x909bd1c6f5700 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x909bd1c6f5700 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc909bd1c6f5700; valaddr_reg:x16; op2:x26; op2val:0xbfc909bd1c6f5700
offset:2666*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x1c6f5700, 0x3fc909bd,0x1c6f5700,0xbfc909bd,x16, 102*SIGALIGN, x17,x1, x14)

inst_1343:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x909bd1c6f5700 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x909bd1c6f5700 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc909bd1c6f5700; valaddr_reg:x16; op2:x26; op2val:0xbfc909bd1c6f5700
offset:2668*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x1c6f5700, 0x3fc909bd,0x1c6f5700,0xbfc909bd,x16, 104*SIGALIGN, x17,x1, x14)

inst_1344:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x909bd1c6f5700 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x909bd1c6f5700 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc909bd1c6f5700; valaddr_reg:x16; op2:x26; op2val:0xbfc909bd1c6f5700
offset:2670*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x1c6f5700, 0x3fc909bd,0x1c6f5700,0xbfc909bd,x16, 106*SIGALIGN, x17,x1, x14)

inst_1345:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x83aaa5b0da9bd and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x83aaa5b0da9bd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe83aaa5b0da9bd; valaddr_reg:x16; op2:x26; op2val:0xbfe83aaa5b0da9bd
offset:2672*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x5b0da9bd, 0x3fe83aaa,0x5b0da9bd,0xbfe83aaa,x16, 108*SIGALIGN, x17,x1, x14)

inst_1346:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x83aaa5b0da9bd and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x83aaa5b0da9bd and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe83aaa5b0da9bd; valaddr_reg:x16; op2:x26; op2val:0xbfe83aaa5b0da9bd
offset:2674*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x5b0da9bd, 0x3fe83aaa,0x5b0da9bd,0xbfe83aaa,x16, 110*SIGALIGN, x17,x1, x14)

inst_1347:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x83aaa5b0da9bd and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x83aaa5b0da9bd and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe83aaa5b0da9bd; valaddr_reg:x16; op2:x26; op2val:0xbfe83aaa5b0da9bd
offset:2676*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x5b0da9bd, 0x3fe83aaa,0x5b0da9bd,0xbfe83aaa,x16, 112*SIGALIGN, x17,x1, x14)

inst_1348:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x83aaa5b0da9bd and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x83aaa5b0da9bd and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe83aaa5b0da9bd; valaddr_reg:x16; op2:x26; op2val:0xbfe83aaa5b0da9bd
offset:2678*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x5b0da9bd, 0x3fe83aaa,0x5b0da9bd,0xbfe83aaa,x16, 114*SIGALIGN, x17,x1, x14)

inst_1349:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x83aaa5b0da9bd and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x83aaa5b0da9bd and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe83aaa5b0da9bd; valaddr_reg:x16; op2:x26; op2val:0xbfe83aaa5b0da9bd
offset:2680*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x5b0da9bd, 0x3fe83aaa,0x5b0da9bd,0xbfe83aaa,x16, 116*SIGALIGN, x17,x1, x14)

inst_1350:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6afa3f2829958 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6afa3f2829958 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe6afa3f2829958; valaddr_reg:x16; op2:x26; op2val:0xbfe6afa3f2829958
offset:2682*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf2829958, 0x3fe6afa3,0xf2829958,0xbfe6afa3,x16, 118*SIGALIGN, x17,x1, x14)

inst_1351:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6afa3f2829958 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6afa3f2829958 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe6afa3f2829958; valaddr_reg:x16; op2:x26; op2val:0xbfe6afa3f2829958
offset:2684*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xf2829958, 0x3fe6afa3,0xf2829958,0xbfe6afa3,x16, 120*SIGALIGN, x17,x1, x14)

inst_1352:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6afa3f2829958 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6afa3f2829958 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe6afa3f2829958; valaddr_reg:x16; op2:x26; op2val:0xbfe6afa3f2829958
offset:2686*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xf2829958, 0x3fe6afa3,0xf2829958,0xbfe6afa3,x16, 122*SIGALIGN, x17,x1, x14)

inst_1353:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6afa3f2829958 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6afa3f2829958 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe6afa3f2829958; valaddr_reg:x16; op2:x26; op2val:0xbfe6afa3f2829958
offset:2688*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf2829958, 0x3fe6afa3,0xf2829958,0xbfe6afa3,x16, 124*SIGALIGN, x17,x1, x14)

inst_1354:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6afa3f2829958 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6afa3f2829958 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe6afa3f2829958; valaddr_reg:x16; op2:x26; op2val:0xbfe6afa3f2829958
offset:2690*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xf2829958, 0x3fe6afa3,0xf2829958,0xbfe6afa3,x16, 126*SIGALIGN, x17,x1, x14)

inst_1355:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe8512d08e5cad and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe8512d08e5cad and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee8512d08e5cad; valaddr_reg:x16; op2:x26; op2val:0xbfee8512d08e5cad
offset:2692*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xd08e5cad, 0x3fee8512,0xd08e5cad,0xbfee8512,x16, 128*SIGALIGN, x17,x1, x14)

inst_1356:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe8512d08e5cad and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe8512d08e5cad and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee8512d08e5cad; valaddr_reg:x16; op2:x26; op2val:0xbfee8512d08e5cad
offset:2694*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xd08e5cad, 0x3fee8512,0xd08e5cad,0xbfee8512,x16, 130*SIGALIGN, x17,x1, x14)

inst_1357:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe8512d08e5cad and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe8512d08e5cad and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee8512d08e5cad; valaddr_reg:x16; op2:x26; op2val:0xbfee8512d08e5cad
offset:2696*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xd08e5cad, 0x3fee8512,0xd08e5cad,0xbfee8512,x16, 132*SIGALIGN, x17,x1, x14)

inst_1358:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe8512d08e5cad and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe8512d08e5cad and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee8512d08e5cad; valaddr_reg:x16; op2:x26; op2val:0xbfee8512d08e5cad
offset:2698*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd08e5cad, 0x3fee8512,0xd08e5cad,0xbfee8512,x16, 134*SIGALIGN, x17,x1, x14)

inst_1359:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe8512d08e5cad and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe8512d08e5cad and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fee8512d08e5cad; valaddr_reg:x16; op2:x26; op2val:0xbfee8512d08e5cad
offset:2700*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xd08e5cad, 0x3fee8512,0xd08e5cad,0xbfee8512,x16, 136*SIGALIGN, x17,x1, x14)

inst_1360:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf57a8526cbf63 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf57a8526cbf63 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef57a8526cbf63; valaddr_reg:x16; op2:x26; op2val:0xbfef57a8526cbf63
offset:2702*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x526cbf63, 0x3fef57a8,0x526cbf63,0xbfef57a8,x16, 138*SIGALIGN, x17,x1, x14)

inst_1361:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf57a8526cbf63 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf57a8526cbf63 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef57a8526cbf63; valaddr_reg:x16; op2:x26; op2val:0xbfef57a8526cbf63
offset:2704*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x526cbf63, 0x3fef57a8,0x526cbf63,0xbfef57a8,x16, 140*SIGALIGN, x17,x1, x14)

inst_1362:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf57a8526cbf63 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf57a8526cbf63 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef57a8526cbf63; valaddr_reg:x16; op2:x26; op2val:0xbfef57a8526cbf63
offset:2706*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x526cbf63, 0x3fef57a8,0x526cbf63,0xbfef57a8,x16, 142*SIGALIGN, x17,x1, x14)

inst_1363:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf57a8526cbf63 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf57a8526cbf63 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef57a8526cbf63; valaddr_reg:x16; op2:x26; op2val:0xbfef57a8526cbf63
offset:2708*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x526cbf63, 0x3fef57a8,0x526cbf63,0xbfef57a8,x16, 144*SIGALIGN, x17,x1, x14)

inst_1364:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf57a8526cbf63 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf57a8526cbf63 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fef57a8526cbf63; valaddr_reg:x16; op2:x26; op2val:0xbfef57a8526cbf63
offset:2710*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x526cbf63, 0x3fef57a8,0x526cbf63,0xbfef57a8,x16, 146*SIGALIGN, x17,x1, x14)

inst_1365:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xda8411778cfae and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xda8411778cfae and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feda8411778cfae; valaddr_reg:x16; op2:x26; op2val:0xbfeda8411778cfae
offset:2712*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x1778cfae, 0x3feda841,0x1778cfae,0xbfeda841,x16, 148*SIGALIGN, x17,x1, x14)

inst_1366:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xda8411778cfae and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xda8411778cfae and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feda8411778cfae; valaddr_reg:x16; op2:x26; op2val:0xbfeda8411778cfae
offset:2714*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x1778cfae, 0x3feda841,0x1778cfae,0xbfeda841,x16, 150*SIGALIGN, x17,x1, x14)

inst_1367:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xda8411778cfae and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xda8411778cfae and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feda8411778cfae; valaddr_reg:x16; op2:x26; op2val:0xbfeda8411778cfae
offset:2716*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x1778cfae, 0x3feda841,0x1778cfae,0xbfeda841,x16, 152*SIGALIGN, x17,x1, x14)

inst_1368:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xda8411778cfae and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xda8411778cfae and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feda8411778cfae; valaddr_reg:x16; op2:x26; op2val:0xbfeda8411778cfae
offset:2718*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x1778cfae, 0x3feda841,0x1778cfae,0xbfeda841,x16, 154*SIGALIGN, x17,x1, x14)

inst_1369:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xda8411778cfae and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xda8411778cfae and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feda8411778cfae; valaddr_reg:x16; op2:x26; op2val:0xbfeda8411778cfae
offset:2720*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x1778cfae, 0x3feda841,0x1778cfae,0xbfeda841,x16, 156*SIGALIGN, x17,x1, x14)

inst_1370:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcc01114aa7f56 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xcc01114aa7f56 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdcc01114aa7f56; valaddr_reg:x16; op2:x26; op2val:0xbfdcc01114aa7f56
offset:2722*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x14aa7f56, 0x3fdcc011,0x14aa7f56,0xbfdcc011,x16, 158*SIGALIGN, x17,x1, x14)

inst_1371:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcc01114aa7f56 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xcc01114aa7f56 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdcc01114aa7f56; valaddr_reg:x16; op2:x26; op2val:0xbfdcc01114aa7f56
offset:2724*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x14aa7f56, 0x3fdcc011,0x14aa7f56,0xbfdcc011,x16, 160*SIGALIGN, x17,x1, x14)

inst_1372:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcc01114aa7f56 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xcc01114aa7f56 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdcc01114aa7f56; valaddr_reg:x16; op2:x26; op2val:0xbfdcc01114aa7f56
offset:2726*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x14aa7f56, 0x3fdcc011,0x14aa7f56,0xbfdcc011,x16, 162*SIGALIGN, x17,x1, x14)

inst_1373:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcc01114aa7f56 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xcc01114aa7f56 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdcc01114aa7f56; valaddr_reg:x16; op2:x26; op2val:0xbfdcc01114aa7f56
offset:2728*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x14aa7f56, 0x3fdcc011,0x14aa7f56,0xbfdcc011,x16, 164*SIGALIGN, x17,x1, x14)

inst_1374:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xcc01114aa7f56 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xcc01114aa7f56 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdcc01114aa7f56; valaddr_reg:x16; op2:x26; op2val:0xbfdcc01114aa7f56
offset:2730*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x14aa7f56, 0x3fdcc011,0x14aa7f56,0xbfdcc011,x16, 166*SIGALIGN, x17,x1, x14)

inst_1375:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb7269eda2bcd7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb7269eda2bcd7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb7269eda2bcd7; valaddr_reg:x16; op2:x26; op2val:0xbfeb7269eda2bcd7
offset:2732*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xeda2bcd7, 0x3feb7269,0xeda2bcd7,0xbfeb7269,x16, 168*SIGALIGN, x17,x1, x14)

inst_1376:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb7269eda2bcd7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb7269eda2bcd7 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb7269eda2bcd7; valaddr_reg:x16; op2:x26; op2val:0xbfeb7269eda2bcd7
offset:2734*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xeda2bcd7, 0x3feb7269,0xeda2bcd7,0xbfeb7269,x16, 170*SIGALIGN, x17,x1, x14)

inst_1377:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb7269eda2bcd7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb7269eda2bcd7 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb7269eda2bcd7; valaddr_reg:x16; op2:x26; op2val:0xbfeb7269eda2bcd7
offset:2736*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xeda2bcd7, 0x3feb7269,0xeda2bcd7,0xbfeb7269,x16, 172*SIGALIGN, x17,x1, x14)

inst_1378:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb7269eda2bcd7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb7269eda2bcd7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb7269eda2bcd7; valaddr_reg:x16; op2:x26; op2val:0xbfeb7269eda2bcd7
offset:2738*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xeda2bcd7, 0x3feb7269,0xeda2bcd7,0xbfeb7269,x16, 174*SIGALIGN, x17,x1, x14)

inst_1379:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb7269eda2bcd7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb7269eda2bcd7 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb7269eda2bcd7; valaddr_reg:x16; op2:x26; op2val:0xbfeb7269eda2bcd7
offset:2740*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xeda2bcd7, 0x3feb7269,0xeda2bcd7,0xbfeb7269,x16, 176*SIGALIGN, x17,x1, x14)

inst_1380:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x73bf2cd29da4a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x73bf2cd29da4a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd73bf2cd29da4a; valaddr_reg:x16; op2:x26; op2val:0xbfd73bf2cd29da4a
offset:2742*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xcd29da4a, 0x3fd73bf2,0xcd29da4a,0xbfd73bf2,x16, 178*SIGALIGN, x17,x1, x14)

inst_1381:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x73bf2cd29da4a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x73bf2cd29da4a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd73bf2cd29da4a; valaddr_reg:x16; op2:x26; op2val:0xbfd73bf2cd29da4a
offset:2744*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xcd29da4a, 0x3fd73bf2,0xcd29da4a,0xbfd73bf2,x16, 180*SIGALIGN, x17,x1, x14)

inst_1382:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x73bf2cd29da4a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x73bf2cd29da4a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd73bf2cd29da4a; valaddr_reg:x16; op2:x26; op2val:0xbfd73bf2cd29da4a
offset:2746*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xcd29da4a, 0x3fd73bf2,0xcd29da4a,0xbfd73bf2,x16, 182*SIGALIGN, x17,x1, x14)

inst_1383:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x73bf2cd29da4a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x73bf2cd29da4a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd73bf2cd29da4a; valaddr_reg:x16; op2:x26; op2val:0xbfd73bf2cd29da4a
offset:2748*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xcd29da4a, 0x3fd73bf2,0xcd29da4a,0xbfd73bf2,x16, 184*SIGALIGN, x17,x1, x14)

inst_1384:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x73bf2cd29da4a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x73bf2cd29da4a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd73bf2cd29da4a; valaddr_reg:x16; op2:x26; op2val:0xbfd73bf2cd29da4a
offset:2750*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xcd29da4a, 0x3fd73bf2,0xcd29da4a,0xbfd73bf2,x16, 186*SIGALIGN, x17,x1, x14)

inst_1385:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1c41b657808c9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1c41b657808c9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe1c41b657808c9; valaddr_reg:x16; op2:x26; op2val:0xbfe1c41b657808c9
offset:2752*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x657808c9, 0x3fe1c41b,0x657808c9,0xbfe1c41b,x16, 188*SIGALIGN, x17,x1, x14)

inst_1386:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1c41b657808c9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1c41b657808c9 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe1c41b657808c9; valaddr_reg:x16; op2:x26; op2val:0xbfe1c41b657808c9
offset:2754*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x657808c9, 0x3fe1c41b,0x657808c9,0xbfe1c41b,x16, 190*SIGALIGN, x17,x1, x14)

inst_1387:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1c41b657808c9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1c41b657808c9 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe1c41b657808c9; valaddr_reg:x16; op2:x26; op2val:0xbfe1c41b657808c9
offset:2756*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x657808c9, 0x3fe1c41b,0x657808c9,0xbfe1c41b,x16, 192*SIGALIGN, x17,x1, x14)

inst_1388:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1c41b657808c9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1c41b657808c9 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe1c41b657808c9; valaddr_reg:x16; op2:x26; op2val:0xbfe1c41b657808c9
offset:2758*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x657808c9, 0x3fe1c41b,0x657808c9,0xbfe1c41b,x16, 194*SIGALIGN, x17,x1, x14)

inst_1389:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1c41b657808c9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1c41b657808c9 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe1c41b657808c9; valaddr_reg:x16; op2:x26; op2val:0xbfe1c41b657808c9
offset:2760*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x657808c9, 0x3fe1c41b,0x657808c9,0xbfe1c41b,x16, 196*SIGALIGN, x17,x1, x14)

inst_1390:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xa25981e2177c0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xa25981e2177c0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3faa25981e2177c0; valaddr_reg:x16; op2:x26; op2val:0xbfaa25981e2177c0
offset:2762*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x1e2177c0, 0x3faa2598,0x1e2177c0,0xbfaa2598,x16, 198*SIGALIGN, x17,x1, x14)

inst_1391:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xa25981e2177c0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xa25981e2177c0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3faa25981e2177c0; valaddr_reg:x16; op2:x26; op2val:0xbfaa25981e2177c0
offset:2764*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x1e2177c0, 0x3faa2598,0x1e2177c0,0xbfaa2598,x16, 200*SIGALIGN, x17,x1, x14)

inst_1392:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xa25981e2177c0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xa25981e2177c0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3faa25981e2177c0; valaddr_reg:x16; op2:x26; op2val:0xbfaa25981e2177c0
offset:2766*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x1e2177c0, 0x3faa2598,0x1e2177c0,0xbfaa2598,x16, 202*SIGALIGN, x17,x1, x14)

inst_1393:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xa25981e2177c0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xa25981e2177c0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3faa25981e2177c0; valaddr_reg:x16; op2:x26; op2val:0xbfaa25981e2177c0
offset:2768*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x1e2177c0, 0x3faa2598,0x1e2177c0,0xbfaa2598,x16, 204*SIGALIGN, x17,x1, x14)

inst_1394:// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xa25981e2177c0 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xa25981e2177c0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3faa25981e2177c0; valaddr_reg:x16; op2:x26; op2val:0xbfaa25981e2177c0
offset:2770*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x1e2177c0, 0x3faa2598,0x1e2177c0,0xbfaa2598,x16, 206*SIGALIGN, x17,x1, x14)

inst_1395:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2ec88b3f75ec1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2ec88b3f75ec1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2ec88b3f75ec1; valaddr_reg:x16; op2:x26; op2val:0xbfe2ec88b3f75ec1
offset:2772*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xb3f75ec1, 0x3fe2ec88,0xb3f75ec1,0xbfe2ec88,x16, 208*SIGALIGN, x17,x1, x14)

inst_1396:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2ec88b3f75ec1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2ec88b3f75ec1 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2ec88b3f75ec1; valaddr_reg:x16; op2:x26; op2val:0xbfe2ec88b3f75ec1
offset:2774*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xb3f75ec1, 0x3fe2ec88,0xb3f75ec1,0xbfe2ec88,x16, 210*SIGALIGN, x17,x1, x14)

inst_1397:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2ec88b3f75ec1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2ec88b3f75ec1 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2ec88b3f75ec1; valaddr_reg:x16; op2:x26; op2val:0xbfe2ec88b3f75ec1
offset:2776*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xb3f75ec1, 0x3fe2ec88,0xb3f75ec1,0xbfe2ec88,x16, 212*SIGALIGN, x17,x1, x14)

inst_1398:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2ec88b3f75ec1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2ec88b3f75ec1 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2ec88b3f75ec1; valaddr_reg:x16; op2:x26; op2val:0xbfe2ec88b3f75ec1
offset:2778*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xb3f75ec1, 0x3fe2ec88,0xb3f75ec1,0xbfe2ec88,x16, 214*SIGALIGN, x17,x1, x14)

inst_1399:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2ec88b3f75ec1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2ec88b3f75ec1 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe2ec88b3f75ec1; valaddr_reg:x16; op2:x26; op2val:0xbfe2ec88b3f75ec1
offset:2780*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xb3f75ec1, 0x3fe2ec88,0xb3f75ec1,0xbfe2ec88,x16, 216*SIGALIGN, x17,x1, x14)

inst_1400:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1657d98ca36fa and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x1657d98ca36fa and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd1657d98ca36fa; valaddr_reg:x16; op2:x26; op2val:0xbfd1657d98ca36fa
offset:2782*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x98ca36fa, 0x3fd1657d,0x98ca36fa,0xbfd1657d,x16, 218*SIGALIGN, x17,x1, x14)

inst_1401:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1657d98ca36fa and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x1657d98ca36fa and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd1657d98ca36fa; valaddr_reg:x16; op2:x26; op2val:0xbfd1657d98ca36fa
offset:2784*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x98ca36fa, 0x3fd1657d,0x98ca36fa,0xbfd1657d,x16, 220*SIGALIGN, x17,x1, x14)

inst_1402:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1657d98ca36fa and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x1657d98ca36fa and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd1657d98ca36fa; valaddr_reg:x16; op2:x26; op2val:0xbfd1657d98ca36fa
offset:2786*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x98ca36fa, 0x3fd1657d,0x98ca36fa,0xbfd1657d,x16, 222*SIGALIGN, x17,x1, x14)

inst_1403:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1657d98ca36fa and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x1657d98ca36fa and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd1657d98ca36fa; valaddr_reg:x16; op2:x26; op2val:0xbfd1657d98ca36fa
offset:2788*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x98ca36fa, 0x3fd1657d,0x98ca36fa,0xbfd1657d,x16, 224*SIGALIGN, x17,x1, x14)

inst_1404:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1657d98ca36fa and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x1657d98ca36fa and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd1657d98ca36fa; valaddr_reg:x16; op2:x26; op2val:0xbfd1657d98ca36fa
offset:2790*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x98ca36fa, 0x3fd1657d,0x98ca36fa,0xbfd1657d,x16, 226*SIGALIGN, x17,x1, x14)

inst_1405:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x978e962837c30 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x978e962837c30 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe978e962837c30; valaddr_reg:x16; op2:x26; op2val:0xbfe978e962837c30
offset:2792*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x62837c30, 0x3fe978e9,0x62837c30,0xbfe978e9,x16, 228*SIGALIGN, x17,x1, x14)

inst_1406:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x978e962837c30 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x978e962837c30 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe978e962837c30; valaddr_reg:x16; op2:x26; op2val:0xbfe978e962837c30
offset:2794*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x62837c30, 0x3fe978e9,0x62837c30,0xbfe978e9,x16, 230*SIGALIGN, x17,x1, x14)

inst_1407:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x978e962837c30 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x978e962837c30 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe978e962837c30; valaddr_reg:x16; op2:x26; op2val:0xbfe978e962837c30
offset:2796*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x62837c30, 0x3fe978e9,0x62837c30,0xbfe978e9,x16, 232*SIGALIGN, x17,x1, x14)

inst_1408:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x978e962837c30 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x978e962837c30 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe978e962837c30; valaddr_reg:x16; op2:x26; op2val:0xbfe978e962837c30
offset:2798*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x62837c30, 0x3fe978e9,0x62837c30,0xbfe978e9,x16, 234*SIGALIGN, x17,x1, x14)

inst_1409:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x978e962837c30 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x978e962837c30 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe978e962837c30; valaddr_reg:x16; op2:x26; op2val:0xbfe978e962837c30
offset:2800*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x62837c30, 0x3fe978e9,0x62837c30,0xbfe978e9,x16, 236*SIGALIGN, x17,x1, x14)

inst_1410:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0ee7d3fa2c217 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0ee7d3fa2c217 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0ee7d3fa2c217; valaddr_reg:x16; op2:x26; op2val:0xbfe0ee7d3fa2c217
offset:2802*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x3fa2c217, 0x3fe0ee7d,0x3fa2c217,0xbfe0ee7d,x16, 238*SIGALIGN, x17,x1, x14)

inst_1411:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0ee7d3fa2c217 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0ee7d3fa2c217 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0ee7d3fa2c217; valaddr_reg:x16; op2:x26; op2val:0xbfe0ee7d3fa2c217
offset:2804*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x3fa2c217, 0x3fe0ee7d,0x3fa2c217,0xbfe0ee7d,x16, 240*SIGALIGN, x17,x1, x14)

inst_1412:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0ee7d3fa2c217 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0ee7d3fa2c217 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0ee7d3fa2c217; valaddr_reg:x16; op2:x26; op2val:0xbfe0ee7d3fa2c217
offset:2806*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x3fa2c217, 0x3fe0ee7d,0x3fa2c217,0xbfe0ee7d,x16, 242*SIGALIGN, x17,x1, x14)

inst_1413:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0ee7d3fa2c217 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0ee7d3fa2c217 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0ee7d3fa2c217; valaddr_reg:x16; op2:x26; op2val:0xbfe0ee7d3fa2c217
offset:2808*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x3fa2c217, 0x3fe0ee7d,0x3fa2c217,0xbfe0ee7d,x16, 244*SIGALIGN, x17,x1, x14)

inst_1414:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0ee7d3fa2c217 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0ee7d3fa2c217 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe0ee7d3fa2c217; valaddr_reg:x16; op2:x26; op2val:0xbfe0ee7d3fa2c217
offset:2810*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x3fa2c217, 0x3fe0ee7d,0x3fa2c217,0xbfe0ee7d,x16, 246*SIGALIGN, x17,x1, x14)

inst_1415:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa0bbaee431ca4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa0bbaee431ca4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fca0bbaee431ca4; valaddr_reg:x16; op2:x26; op2val:0xbfca0bbaee431ca4
offset:2812*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xee431ca4, 0x3fca0bba,0xee431ca4,0xbfca0bba,x16, 248*SIGALIGN, x17,x1, x14)

inst_1416:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa0bbaee431ca4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa0bbaee431ca4 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fca0bbaee431ca4; valaddr_reg:x16; op2:x26; op2val:0xbfca0bbaee431ca4
offset:2814*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xee431ca4, 0x3fca0bba,0xee431ca4,0xbfca0bba,x16, 250*SIGALIGN, x17,x1, x14)

inst_1417:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa0bbaee431ca4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa0bbaee431ca4 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fca0bbaee431ca4; valaddr_reg:x16; op2:x26; op2val:0xbfca0bbaee431ca4
offset:2816*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xee431ca4, 0x3fca0bba,0xee431ca4,0xbfca0bba,x16, 252*SIGALIGN, x17,x1, x14)

inst_1418:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa0bbaee431ca4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa0bbaee431ca4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fca0bbaee431ca4; valaddr_reg:x16; op2:x26; op2val:0xbfca0bbaee431ca4
offset:2818*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xee431ca4, 0x3fca0bba,0xee431ca4,0xbfca0bba,x16, 254*SIGALIGN, x17,x1, x14)

inst_1419:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa0bbaee431ca4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa0bbaee431ca4 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fca0bbaee431ca4; valaddr_reg:x16; op2:x26; op2val:0xbfca0bbaee431ca4
offset:2820*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xee431ca4, 0x3fca0bba,0xee431ca4,0xbfca0bba,x16, 256*SIGALIGN, x17,x1, x14)

inst_1420:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc46c0bb27d794 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc46c0bb27d794 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdc46c0bb27d794; valaddr_reg:x16; op2:x26; op2val:0xbfdc46c0bb27d794
offset:2822*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xbb27d794, 0x3fdc46c0,0xbb27d794,0xbfdc46c0,x16, 258*SIGALIGN, x17,x1, x14)

inst_1421:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc46c0bb27d794 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc46c0bb27d794 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdc46c0bb27d794; valaddr_reg:x16; op2:x26; op2val:0xbfdc46c0bb27d794
offset:2824*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xbb27d794, 0x3fdc46c0,0xbb27d794,0xbfdc46c0,x16, 260*SIGALIGN, x17,x1, x14)

inst_1422:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc46c0bb27d794 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc46c0bb27d794 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdc46c0bb27d794; valaddr_reg:x16; op2:x26; op2val:0xbfdc46c0bb27d794
offset:2826*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xbb27d794, 0x3fdc46c0,0xbb27d794,0xbfdc46c0,x16, 262*SIGALIGN, x17,x1, x14)

inst_1423:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc46c0bb27d794 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc46c0bb27d794 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdc46c0bb27d794; valaddr_reg:x16; op2:x26; op2val:0xbfdc46c0bb27d794
offset:2828*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xbb27d794, 0x3fdc46c0,0xbb27d794,0xbfdc46c0,x16, 264*SIGALIGN, x17,x1, x14)

inst_1424:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc46c0bb27d794 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc46c0bb27d794 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fdc46c0bb27d794; valaddr_reg:x16; op2:x26; op2val:0xbfdc46c0bb27d794
offset:2830*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xbb27d794, 0x3fdc46c0,0xbb27d794,0xbfdc46c0,x16, 266*SIGALIGN, x17,x1, x14)

inst_1425:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa27e804c22884 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa27e804c22884 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fca27e804c22884; valaddr_reg:x16; op2:x26; op2val:0xbfca27e804c22884
offset:2832*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x04c22884, 0x3fca27e8,0x04c22884,0xbfca27e8,x16, 268*SIGALIGN, x17,x1, x14)

inst_1426:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa27e804c22884 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa27e804c22884 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fca27e804c22884; valaddr_reg:x16; op2:x26; op2val:0xbfca27e804c22884
offset:2834*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x04c22884, 0x3fca27e8,0x04c22884,0xbfca27e8,x16, 270*SIGALIGN, x17,x1, x14)

inst_1427:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa27e804c22884 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa27e804c22884 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fca27e804c22884; valaddr_reg:x16; op2:x26; op2val:0xbfca27e804c22884
offset:2836*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x04c22884, 0x3fca27e8,0x04c22884,0xbfca27e8,x16, 272*SIGALIGN, x17,x1, x14)

inst_1428:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa27e804c22884 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa27e804c22884 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fca27e804c22884; valaddr_reg:x16; op2:x26; op2val:0xbfca27e804c22884
offset:2838*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x04c22884, 0x3fca27e8,0x04c22884,0xbfca27e8,x16, 274*SIGALIGN, x17,x1, x14)

inst_1429:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa27e804c22884 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa27e804c22884 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fca27e804c22884; valaddr_reg:x16; op2:x26; op2val:0xbfca27e804c22884
offset:2840*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x04c22884, 0x3fca27e8,0x04c22884,0xbfca27e8,x16, 276*SIGALIGN, x17,x1, x14)

inst_1430:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x33d3837422b91 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x33d3837422b91 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe33d3837422b91; valaddr_reg:x16; op2:x26; op2val:0xbfe33d3837422b91
offset:2842*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x37422b91, 0x3fe33d38,0x37422b91,0xbfe33d38,x16, 278*SIGALIGN, x17,x1, x14)

inst_1431:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x33d3837422b91 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x33d3837422b91 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe33d3837422b91; valaddr_reg:x16; op2:x26; op2val:0xbfe33d3837422b91
offset:2844*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x37422b91, 0x3fe33d38,0x37422b91,0xbfe33d38,x16, 280*SIGALIGN, x17,x1, x14)

inst_1432:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x33d3837422b91 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x33d3837422b91 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe33d3837422b91; valaddr_reg:x16; op2:x26; op2val:0xbfe33d3837422b91
offset:2846*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x37422b91, 0x3fe33d38,0x37422b91,0xbfe33d38,x16, 282*SIGALIGN, x17,x1, x14)

inst_1433:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x33d3837422b91 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x33d3837422b91 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe33d3837422b91; valaddr_reg:x16; op2:x26; op2val:0xbfe33d3837422b91
offset:2848*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x37422b91, 0x3fe33d38,0x37422b91,0xbfe33d38,x16, 284*SIGALIGN, x17,x1, x14)

inst_1434:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x33d3837422b91 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x33d3837422b91 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe33d3837422b91; valaddr_reg:x16; op2:x26; op2val:0xbfe33d3837422b91
offset:2850*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x37422b91, 0x3fe33d38,0x37422b91,0xbfe33d38,x16, 286*SIGALIGN, x17,x1, x14)

inst_1435:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x22f60e34d11b1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x22f60e34d11b1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe22f60e34d11b1; valaddr_reg:x16; op2:x26; op2val:0xbfe22f60e34d11b1
offset:2852*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe34d11b1, 0x3fe22f60,0xe34d11b1,0xbfe22f60,x16, 288*SIGALIGN, x17,x1, x14)

inst_1436:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x22f60e34d11b1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x22f60e34d11b1 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe22f60e34d11b1; valaddr_reg:x16; op2:x26; op2val:0xbfe22f60e34d11b1
offset:2854*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xe34d11b1, 0x3fe22f60,0xe34d11b1,0xbfe22f60,x16, 290*SIGALIGN, x17,x1, x14)

inst_1437:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x22f60e34d11b1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x22f60e34d11b1 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe22f60e34d11b1; valaddr_reg:x16; op2:x26; op2val:0xbfe22f60e34d11b1
offset:2856*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xe34d11b1, 0x3fe22f60,0xe34d11b1,0xbfe22f60,x16, 292*SIGALIGN, x17,x1, x14)

inst_1438:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x22f60e34d11b1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x22f60e34d11b1 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe22f60e34d11b1; valaddr_reg:x16; op2:x26; op2val:0xbfe22f60e34d11b1
offset:2858*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe34d11b1, 0x3fe22f60,0xe34d11b1,0xbfe22f60,x16, 294*SIGALIGN, x17,x1, x14)

inst_1439:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x22f60e34d11b1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x22f60e34d11b1 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe22f60e34d11b1; valaddr_reg:x16; op2:x26; op2val:0xbfe22f60e34d11b1
offset:2860*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xe34d11b1, 0x3fe22f60,0xe34d11b1,0xbfe22f60,x16, 296*SIGALIGN, x17,x1, x14)

inst_1440:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x17d5ca6a3715b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x17d5ca6a3715b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe17d5ca6a3715b; valaddr_reg:x16; op2:x26; op2val:0xbfe17d5ca6a3715b
offset:2862*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xa6a3715b, 0x3fe17d5c,0xa6a3715b,0xbfe17d5c,x16, 298*SIGALIGN, x17,x1, x14)

inst_1441:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x17d5ca6a3715b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x17d5ca6a3715b and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe17d5ca6a3715b; valaddr_reg:x16; op2:x26; op2val:0xbfe17d5ca6a3715b
offset:2864*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xa6a3715b, 0x3fe17d5c,0xa6a3715b,0xbfe17d5c,x16, 300*SIGALIGN, x17,x1, x14)

inst_1442:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x17d5ca6a3715b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x17d5ca6a3715b and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe17d5ca6a3715b; valaddr_reg:x16; op2:x26; op2val:0xbfe17d5ca6a3715b
offset:2866*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xa6a3715b, 0x3fe17d5c,0xa6a3715b,0xbfe17d5c,x16, 302*SIGALIGN, x17,x1, x14)

inst_1443:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x17d5ca6a3715b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x17d5ca6a3715b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe17d5ca6a3715b; valaddr_reg:x16; op2:x26; op2val:0xbfe17d5ca6a3715b
offset:2868*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xa6a3715b, 0x3fe17d5c,0xa6a3715b,0xbfe17d5c,x16, 304*SIGALIGN, x17,x1, x14)

inst_1444:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x17d5ca6a3715b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x17d5ca6a3715b and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe17d5ca6a3715b; valaddr_reg:x16; op2:x26; op2val:0xbfe17d5ca6a3715b
offset:2870*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xa6a3715b, 0x3fe17d5c,0xa6a3715b,0xbfe17d5c,x16, 306*SIGALIGN, x17,x1, x14)

inst_1445:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb70164e941a8f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb70164e941a8f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb70164e941a8f; valaddr_reg:x16; op2:x26; op2val:0xbfeb70164e941a8f
offset:2872*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x4e941a8f, 0x3feb7016,0x4e941a8f,0xbfeb7016,x16, 308*SIGALIGN, x17,x1, x14)

inst_1446:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb70164e941a8f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb70164e941a8f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb70164e941a8f; valaddr_reg:x16; op2:x26; op2val:0xbfeb70164e941a8f
offset:2874*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x4e941a8f, 0x3feb7016,0x4e941a8f,0xbfeb7016,x16, 310*SIGALIGN, x17,x1, x14)

inst_1447:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb70164e941a8f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb70164e941a8f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb70164e941a8f; valaddr_reg:x16; op2:x26; op2val:0xbfeb70164e941a8f
offset:2876*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x4e941a8f, 0x3feb7016,0x4e941a8f,0xbfeb7016,x16, 312*SIGALIGN, x17,x1, x14)

inst_1448:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb70164e941a8f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb70164e941a8f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb70164e941a8f; valaddr_reg:x16; op2:x26; op2val:0xbfeb70164e941a8f
offset:2878*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x4e941a8f, 0x3feb7016,0x4e941a8f,0xbfeb7016,x16, 314*SIGALIGN, x17,x1, x14)

inst_1449:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb70164e941a8f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb70164e941a8f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3feb70164e941a8f; valaddr_reg:x16; op2:x26; op2val:0xbfeb70164e941a8f
offset:2880*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x4e941a8f, 0x3feb7016,0x4e941a8f,0xbfeb7016,x16, 316*SIGALIGN, x17,x1, x14)

inst_1450:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7366b474ed968 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x7366b474ed968 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd7366b474ed968; valaddr_reg:x16; op2:x26; op2val:0xbfd7366b474ed968
offset:2882*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x474ed968, 0x3fd7366b,0x474ed968,0xbfd7366b,x16, 318*SIGALIGN, x17,x1, x14)

inst_1451:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7366b474ed968 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x7366b474ed968 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd7366b474ed968; valaddr_reg:x16; op2:x26; op2val:0xbfd7366b474ed968
offset:2884*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x474ed968, 0x3fd7366b,0x474ed968,0xbfd7366b,x16, 320*SIGALIGN, x17,x1, x14)

inst_1452:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7366b474ed968 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x7366b474ed968 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd7366b474ed968; valaddr_reg:x16; op2:x26; op2val:0xbfd7366b474ed968
offset:2886*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x474ed968, 0x3fd7366b,0x474ed968,0xbfd7366b,x16, 322*SIGALIGN, x17,x1, x14)

inst_1453:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7366b474ed968 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x7366b474ed968 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd7366b474ed968; valaddr_reg:x16; op2:x26; op2val:0xbfd7366b474ed968
offset:2888*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x474ed968, 0x3fd7366b,0x474ed968,0xbfd7366b,x16, 324*SIGALIGN, x17,x1, x14)

inst_1454:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7366b474ed968 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x7366b474ed968 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd7366b474ed968; valaddr_reg:x16; op2:x26; op2val:0xbfd7366b474ed968
offset:2890*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x474ed968, 0x3fd7366b,0x474ed968,0xbfd7366b,x16, 326*SIGALIGN, x17,x1, x14)

inst_1455:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x97bc82ad232bd and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x97bc82ad232bd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe97bc82ad232bd; valaddr_reg:x16; op2:x26; op2val:0xbfe97bc82ad232bd
offset:2892*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x2ad232bd, 0x3fe97bc8,0x2ad232bd,0xbfe97bc8,x16, 328*SIGALIGN, x17,x1, x14)

inst_1456:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x97bc82ad232bd and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x97bc82ad232bd and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe97bc82ad232bd; valaddr_reg:x16; op2:x26; op2val:0xbfe97bc82ad232bd
offset:2894*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x2ad232bd, 0x3fe97bc8,0x2ad232bd,0xbfe97bc8,x16, 330*SIGALIGN, x17,x1, x14)

inst_1457:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x97bc82ad232bd and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x97bc82ad232bd and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe97bc82ad232bd; valaddr_reg:x16; op2:x26; op2val:0xbfe97bc82ad232bd
offset:2896*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x2ad232bd, 0x3fe97bc8,0x2ad232bd,0xbfe97bc8,x16, 332*SIGALIGN, x17,x1, x14)

inst_1458:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x97bc82ad232bd and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x97bc82ad232bd and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe97bc82ad232bd; valaddr_reg:x16; op2:x26; op2val:0xbfe97bc82ad232bd
offset:2898*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x2ad232bd, 0x3fe97bc8,0x2ad232bd,0xbfe97bc8,x16, 334*SIGALIGN, x17,x1, x14)

inst_1459:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x97bc82ad232bd and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x97bc82ad232bd and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fe97bc82ad232bd; valaddr_reg:x16; op2:x26; op2val:0xbfe97bc82ad232bd
offset:2900*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x2ad232bd, 0x3fe97bc8,0x2ad232bd,0xbfe97bc8,x16, 336*SIGALIGN, x17,x1, x14)

inst_1460:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x343b84468445c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x343b84468445c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd343b84468445c; valaddr_reg:x16; op2:x26; op2val:0xbfd343b84468445c
offset:2902*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x4468445c, 0x3fd343b8,0x4468445c,0xbfd343b8,x16, 338*SIGALIGN, x17,x1, x14)

inst_1461:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x343b84468445c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x343b84468445c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd343b84468445c; valaddr_reg:x16; op2:x26; op2val:0xbfd343b84468445c
offset:2904*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x4468445c, 0x3fd343b8,0x4468445c,0xbfd343b8,x16, 340*SIGALIGN, x17,x1, x14)

inst_1462:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x343b84468445c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x343b84468445c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd343b84468445c; valaddr_reg:x16; op2:x26; op2val:0xbfd343b84468445c
offset:2906*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x4468445c, 0x3fd343b8,0x4468445c,0xbfd343b8,x16, 342*SIGALIGN, x17,x1, x14)

inst_1463:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x343b84468445c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x343b84468445c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd343b84468445c; valaddr_reg:x16; op2:x26; op2val:0xbfd343b84468445c
offset:2908*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x4468445c, 0x3fd343b8,0x4468445c,0xbfd343b8,x16, 344*SIGALIGN, x17,x1, x14)

inst_1464:// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x343b84468445c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x343b84468445c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fd343b84468445c; valaddr_reg:x16; op2:x26; op2val:0xbfd343b84468445c
offset:2910*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x4468445c, 0x3fd343b8,0x4468445c,0xbfd343b8,x16, 346*SIGALIGN, x17,x1, x14)

inst_1465:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfc04b2f200426 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfc04b2f200426 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fefc04b2f200426; valaddr_reg:x16; op2:x26; op2val:0xbfefc04b2f200426
offset:2912*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x2f200426, 0x3fefc04b,0x2f200426,0xbfefc04b,x16, 348*SIGALIGN, x17,x1, x14)

inst_1466:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfc04b2f200426 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfc04b2f200426 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fefc04b2f200426; valaddr_reg:x16; op2:x26; op2val:0xbfefc04b2f200426
offset:2914*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x2f200426, 0x3fefc04b,0x2f200426,0xbfefc04b,x16, 350*SIGALIGN, x17,x1, x14)

inst_1467:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfc04b2f200426 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfc04b2f200426 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fefc04b2f200426; valaddr_reg:x16; op2:x26; op2val:0xbfefc04b2f200426
offset:2916*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x2f200426, 0x3fefc04b,0x2f200426,0xbfefc04b,x16, 352*SIGALIGN, x17,x1, x14)

inst_1468:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfc04b2f200426 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfc04b2f200426 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fefc04b2f200426; valaddr_reg:x16; op2:x26; op2val:0xbfefc04b2f200426
offset:2918*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x2f200426, 0x3fefc04b,0x2f200426,0xbfefc04b,x16, 354*SIGALIGN, x17,x1, x14)

inst_1469:// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfc04b2f200426 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfc04b2f200426 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fefc04b2f200426; valaddr_reg:x16; op2:x26; op2val:0xbfefc04b2f200426
offset:2920*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x2f200426, 0x3fefc04b,0x2f200426,0xbfefc04b,x16, 356*SIGALIGN, x17,x1, x14)

inst_1470:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x3e9fc19d60908 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x3e9fc19d60908 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc3e9fc19d60908; valaddr_reg:x16; op2:x26; op2val:0xbfc3e9fc19d60908
offset:2922*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x19d60908, 0x3fc3e9fc,0x19d60908,0xbfc3e9fc,x16, 358*SIGALIGN, x17,x1, x14)

inst_1471:// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x3e9fc19d60908 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x3e9fc19d60908 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3fc3e9fc19d60908; valaddr_reg:x16; op2:x26; op2val:0xbfc3e9fc19d60908
offset:2924*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x19d60908, 0x3fc3e9fc,0x19d60908,0xbfc3e9fc,x16, 360*SIGALIGN, x17,x1, x14)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0x19d60908,64,FLEN)
NAN_BOXED(0x19d60908,64,FLEN)
NAN_BOXED(0x19d60908,64,FLEN)
NAN_BOXED(0x19d60908,64,FLEN)
NAN_BOXED(0x19d60908,64,FLEN)
NAN_BOXED(0x19d60908,64,FLEN)
NAN_BOXED(0x19d60908,64,FLEN)
NAN_BOXED(0x19d60908,64,FLEN)
NAN_BOXED(0x19d60908,64,FLEN)
NAN_BOXED(0x19d60908,64,FLEN)
NAN_BOXED(0x77d68b44,64,FLEN)
NAN_BOXED(0x77d68b44,64,FLEN)
NAN_BOXED(0x77d68b44,64,FLEN)
NAN_BOXED(0x77d68b44,64,FLEN)
NAN_BOXED(0x77d68b44,64,FLEN)
NAN_BOXED(0x77d68b44,64,FLEN)
NAN_BOXED(0x77d68b44,64,FLEN)
NAN_BOXED(0x77d68b44,64,FLEN)
test_dataset_1:
NAN_BOXED(0x77d68b44,64,FLEN)
NAN_BOXED(0x77d68b44,64,FLEN)
NAN_BOXED(0x641cd1f2,64,FLEN)
NAN_BOXED(0x641cd1f2,64,FLEN)
NAN_BOXED(0x641cd1f2,64,FLEN)
NAN_BOXED(0x641cd1f2,64,FLEN)
NAN_BOXED(0x641cd1f2,64,FLEN)
NAN_BOXED(0x641cd1f2,64,FLEN)
NAN_BOXED(0x641cd1f2,64,FLEN)
NAN_BOXED(0x641cd1f2,64,FLEN)
NAN_BOXED(0x641cd1f2,64,FLEN)
NAN_BOXED(0x641cd1f2,64,FLEN)
NAN_BOXED(0xe2b8ec2c,64,FLEN)
NAN_BOXED(0xe2b8ec2c,64,FLEN)
NAN_BOXED(0xe2b8ec2c,64,FLEN)
NAN_BOXED(0xe2b8ec2c,64,FLEN)
NAN_BOXED(0xe2b8ec2c,64,FLEN)
NAN_BOXED(0xe2b8ec2c,64,FLEN)
NAN_BOXED(0xe2b8ec2c,64,FLEN)
NAN_BOXED(0xe2b8ec2c,64,FLEN)
NAN_BOXED(0xe2b8ec2c,64,FLEN)
NAN_BOXED(0xe2b8ec2c,64,FLEN)
NAN_BOXED(0xbe915b82,64,FLEN)
NAN_BOXED(0xbe915b82,64,FLEN)
NAN_BOXED(0xbe915b82,64,FLEN)
NAN_BOXED(0xbe915b82,64,FLEN)
NAN_BOXED(0xbe915b82,64,FLEN)
NAN_BOXED(0xbe915b82,64,FLEN)
NAN_BOXED(0xbe915b82,64,FLEN)
NAN_BOXED(0xbe915b82,64,FLEN)
NAN_BOXED(0xbe915b82,64,FLEN)
NAN_BOXED(0xbe915b82,64,FLEN)
NAN_BOXED(0xf9028468,64,FLEN)
NAN_BOXED(0xf9028468,64,FLEN)
NAN_BOXED(0xf9028468,64,FLEN)
NAN_BOXED(0xf9028468,64,FLEN)
NAN_BOXED(0xf9028468,64,FLEN)
NAN_BOXED(0xf9028468,64,FLEN)
NAN_BOXED(0xf9028468,64,FLEN)
NAN_BOXED(0xf9028468,64,FLEN)
NAN_BOXED(0xf9028468,64,FLEN)
NAN_BOXED(0xf9028468,64,FLEN)
NAN_BOXED(0x3370e67c,64,FLEN)
NAN_BOXED(0x3370e67c,64,FLEN)
NAN_BOXED(0x3370e67c,64,FLEN)
NAN_BOXED(0x3370e67c,64,FLEN)
NAN_BOXED(0x3370e67c,64,FLEN)
NAN_BOXED(0x3370e67c,64,FLEN)
NAN_BOXED(0x3370e67c,64,FLEN)
NAN_BOXED(0x3370e67c,64,FLEN)
NAN_BOXED(0x3370e67c,64,FLEN)
NAN_BOXED(0x3370e67c,64,FLEN)
NAN_BOXED(0x719ad2d4,64,FLEN)
NAN_BOXED(0x719ad2d4,64,FLEN)
NAN_BOXED(0x719ad2d4,64,FLEN)
NAN_BOXED(0x719ad2d4,64,FLEN)
NAN_BOXED(0x719ad2d4,64,FLEN)
NAN_BOXED(0x719ad2d4,64,FLEN)
NAN_BOXED(0x719ad2d4,64,FLEN)
NAN_BOXED(0x719ad2d4,64,FLEN)
NAN_BOXED(0x719ad2d4,64,FLEN)
NAN_BOXED(0x719ad2d4,64,FLEN)
NAN_BOXED(0x8ef53d20,64,FLEN)
NAN_BOXED(0x8ef53d20,64,FLEN)
NAN_BOXED(0x8ef53d20,64,FLEN)
NAN_BOXED(0x8ef53d20,64,FLEN)
NAN_BOXED(0x8ef53d20,64,FLEN)
NAN_BOXED(0x8ef53d20,64,FLEN)
NAN_BOXED(0x8ef53d20,64,FLEN)
NAN_BOXED(0x8ef53d20,64,FLEN)
NAN_BOXED(0x8ef53d20,64,FLEN)
NAN_BOXED(0x8ef53d20,64,FLEN)
NAN_BOXED(0x365e9bf0,64,FLEN)
NAN_BOXED(0x365e9bf0,64,FLEN)
NAN_BOXED(0x365e9bf0,64,FLEN)
NAN_BOXED(0x365e9bf0,64,FLEN)
NAN_BOXED(0x365e9bf0,64,FLEN)
NAN_BOXED(0x365e9bf0,64,FLEN)
NAN_BOXED(0x365e9bf0,64,FLEN)
NAN_BOXED(0x365e9bf0,64,FLEN)
NAN_BOXED(0x365e9bf0,64,FLEN)
NAN_BOXED(0x365e9bf0,64,FLEN)
NAN_BOXED(0x679addc9,64,FLEN)
NAN_BOXED(0x679addc9,64,FLEN)
NAN_BOXED(0x679addc9,64,FLEN)
NAN_BOXED(0x679addc9,64,FLEN)
NAN_BOXED(0x679addc9,64,FLEN)
NAN_BOXED(0x679addc9,64,FLEN)
NAN_BOXED(0x679addc9,64,FLEN)
NAN_BOXED(0x679addc9,64,FLEN)
NAN_BOXED(0x679addc9,64,FLEN)
NAN_BOXED(0x679addc9,64,FLEN)
NAN_BOXED(0xe4c8eb20,64,FLEN)
NAN_BOXED(0xe4c8eb20,64,FLEN)
NAN_BOXED(0xe4c8eb20,64,FLEN)
NAN_BOXED(0xe4c8eb20,64,FLEN)
NAN_BOXED(0xe4c8eb20,64,FLEN)
NAN_BOXED(0xe4c8eb20,64,FLEN)
NAN_BOXED(0xe4c8eb20,64,FLEN)
NAN_BOXED(0xe4c8eb20,64,FLEN)
NAN_BOXED(0xe4c8eb20,64,FLEN)
NAN_BOXED(0xe4c8eb20,64,FLEN)
NAN_BOXED(0xf5c2c034,64,FLEN)
NAN_BOXED(0xf5c2c034,64,FLEN)
NAN_BOXED(0xf5c2c034,64,FLEN)
NAN_BOXED(0xf5c2c034,64,FLEN)
NAN_BOXED(0xf5c2c034,64,FLEN)
NAN_BOXED(0xf5c2c034,64,FLEN)
NAN_BOXED(0xf5c2c034,64,FLEN)
NAN_BOXED(0xf5c2c034,64,FLEN)
NAN_BOXED(0xf5c2c034,64,FLEN)
NAN_BOXED(0xf5c2c034,64,FLEN)
NAN_BOXED(0xaabc36ef,64,FLEN)
NAN_BOXED(0xaabc36ef,64,FLEN)
NAN_BOXED(0xaabc36ef,64,FLEN)
NAN_BOXED(0xaabc36ef,64,FLEN)
NAN_BOXED(0xaabc36ef,64,FLEN)
NAN_BOXED(0xaabc36ef,64,FLEN)
NAN_BOXED(0xaabc36ef,64,FLEN)
NAN_BOXED(0xaabc36ef,64,FLEN)
NAN_BOXED(0xaabc36ef,64,FLEN)
NAN_BOXED(0xaabc36ef,64,FLEN)
NAN_BOXED(0x5974eb18,64,FLEN)
NAN_BOXED(0x5974eb18,64,FLEN)
NAN_BOXED(0x5974eb18,64,FLEN)
NAN_BOXED(0x5974eb18,64,FLEN)
NAN_BOXED(0x5974eb18,64,FLEN)
NAN_BOXED(0x5974eb18,64,FLEN)
NAN_BOXED(0x5974eb18,64,FLEN)
NAN_BOXED(0x5974eb18,64,FLEN)
NAN_BOXED(0x5974eb18,64,FLEN)
NAN_BOXED(0x5974eb18,64,FLEN)
NAN_BOXED(0xfe3aae98,64,FLEN)
NAN_BOXED(0xfe3aae98,64,FLEN)
NAN_BOXED(0xfe3aae98,64,FLEN)
NAN_BOXED(0xfe3aae98,64,FLEN)
NAN_BOXED(0xfe3aae98,64,FLEN)
NAN_BOXED(0xfe3aae98,64,FLEN)
NAN_BOXED(0xfe3aae98,64,FLEN)
NAN_BOXED(0xfe3aae98,64,FLEN)
NAN_BOXED(0xfe3aae98,64,FLEN)
NAN_BOXED(0xfe3aae98,64,FLEN)
NAN_BOXED(0x07c039c8,64,FLEN)
NAN_BOXED(0x07c039c8,64,FLEN)
NAN_BOXED(0x07c039c8,64,FLEN)
NAN_BOXED(0x07c039c8,64,FLEN)
NAN_BOXED(0x07c039c8,64,FLEN)
NAN_BOXED(0x07c039c8,64,FLEN)
NAN_BOXED(0x07c039c8,64,FLEN)
NAN_BOXED(0x07c039c8,64,FLEN)
NAN_BOXED(0x07c039c8,64,FLEN)
NAN_BOXED(0x07c039c8,64,FLEN)
NAN_BOXED(0x50ac0b16,64,FLEN)
NAN_BOXED(0x50ac0b16,64,FLEN)
NAN_BOXED(0x50ac0b16,64,FLEN)
NAN_BOXED(0x50ac0b16,64,FLEN)
NAN_BOXED(0x50ac0b16,64,FLEN)
NAN_BOXED(0x50ac0b16,64,FLEN)
NAN_BOXED(0x50ac0b16,64,FLEN)
NAN_BOXED(0x50ac0b16,64,FLEN)
NAN_BOXED(0x50ac0b16,64,FLEN)
NAN_BOXED(0x50ac0b16,64,FLEN)
NAN_BOXED(0xc1477e42,64,FLEN)
NAN_BOXED(0xc1477e42,64,FLEN)
NAN_BOXED(0xc1477e42,64,FLEN)
NAN_BOXED(0xc1477e42,64,FLEN)
NAN_BOXED(0xc1477e42,64,FLEN)
NAN_BOXED(0xc1477e42,64,FLEN)
NAN_BOXED(0xc1477e42,64,FLEN)
NAN_BOXED(0xc1477e42,64,FLEN)
NAN_BOXED(0xc1477e42,64,FLEN)
NAN_BOXED(0xc1477e42,64,FLEN)
NAN_BOXED(0xd37071c4,64,FLEN)
NAN_BOXED(0xd37071c4,64,FLEN)
NAN_BOXED(0xd37071c4,64,FLEN)
NAN_BOXED(0xd37071c4,64,FLEN)
NAN_BOXED(0xd37071c4,64,FLEN)
NAN_BOXED(0xd37071c4,64,FLEN)
NAN_BOXED(0xd37071c4,64,FLEN)
NAN_BOXED(0xd37071c4,64,FLEN)
NAN_BOXED(0xd37071c4,64,FLEN)
NAN_BOXED(0xd37071c4,64,FLEN)
NAN_BOXED(0x558d6ada,64,FLEN)
NAN_BOXED(0x558d6ada,64,FLEN)
NAN_BOXED(0x558d6ada,64,FLEN)
NAN_BOXED(0x558d6ada,64,FLEN)
NAN_BOXED(0x558d6ada,64,FLEN)
NAN_BOXED(0x558d6ada,64,FLEN)
NAN_BOXED(0x558d6ada,64,FLEN)
NAN_BOXED(0x558d6ada,64,FLEN)
NAN_BOXED(0x558d6ada,64,FLEN)
NAN_BOXED(0x558d6ada,64,FLEN)
NAN_BOXED(0x6aab7a80,64,FLEN)
NAN_BOXED(0x6aab7a80,64,FLEN)
NAN_BOXED(0x6aab7a80,64,FLEN)
NAN_BOXED(0x6aab7a80,64,FLEN)
NAN_BOXED(0x6aab7a80,64,FLEN)
NAN_BOXED(0x6aab7a80,64,FLEN)
NAN_BOXED(0x6aab7a80,64,FLEN)
NAN_BOXED(0x6aab7a80,64,FLEN)
NAN_BOXED(0x6aab7a80,64,FLEN)
NAN_BOXED(0x6aab7a80,64,FLEN)
NAN_BOXED(0x052f7855,64,FLEN)
NAN_BOXED(0x052f7855,64,FLEN)
NAN_BOXED(0x052f7855,64,FLEN)
NAN_BOXED(0x052f7855,64,FLEN)
NAN_BOXED(0x052f7855,64,FLEN)
NAN_BOXED(0x052f7855,64,FLEN)
NAN_BOXED(0x052f7855,64,FLEN)
NAN_BOXED(0x052f7855,64,FLEN)
NAN_BOXED(0x052f7855,64,FLEN)
NAN_BOXED(0x052f7855,64,FLEN)
NAN_BOXED(0x4454f8fb,64,FLEN)
NAN_BOXED(0x4454f8fb,64,FLEN)
NAN_BOXED(0x4454f8fb,64,FLEN)
NAN_BOXED(0x4454f8fb,64,FLEN)
NAN_BOXED(0x4454f8fb,64,FLEN)
NAN_BOXED(0x4454f8fb,64,FLEN)
NAN_BOXED(0x4454f8fb,64,FLEN)
NAN_BOXED(0x4454f8fb,64,FLEN)
NAN_BOXED(0x4454f8fb,64,FLEN)
NAN_BOXED(0x4454f8fb,64,FLEN)
NAN_BOXED(0x20c95feb,64,FLEN)
NAN_BOXED(0x20c95feb,64,FLEN)
NAN_BOXED(0x20c95feb,64,FLEN)
NAN_BOXED(0x20c95feb,64,FLEN)
NAN_BOXED(0x20c95feb,64,FLEN)
NAN_BOXED(0x20c95feb,64,FLEN)
NAN_BOXED(0x20c95feb,64,FLEN)
NAN_BOXED(0x20c95feb,64,FLEN)
NAN_BOXED(0x20c95feb,64,FLEN)
NAN_BOXED(0x20c95feb,64,FLEN)
NAN_BOXED(0x474fe9c4,64,FLEN)
NAN_BOXED(0x474fe9c4,64,FLEN)
NAN_BOXED(0x474fe9c4,64,FLEN)
NAN_BOXED(0x474fe9c4,64,FLEN)
NAN_BOXED(0x474fe9c4,64,FLEN)
NAN_BOXED(0x474fe9c4,64,FLEN)
NAN_BOXED(0x474fe9c4,64,FLEN)
NAN_BOXED(0x474fe9c4,64,FLEN)
NAN_BOXED(0x474fe9c4,64,FLEN)
NAN_BOXED(0x474fe9c4,64,FLEN)
NAN_BOXED(0xe406f0ee,64,FLEN)
NAN_BOXED(0xe406f0ee,64,FLEN)
NAN_BOXED(0xe406f0ee,64,FLEN)
NAN_BOXED(0xe406f0ee,64,FLEN)
NAN_BOXED(0xe406f0ee,64,FLEN)
NAN_BOXED(0xe406f0ee,64,FLEN)
NAN_BOXED(0xe406f0ee,64,FLEN)
NAN_BOXED(0xe406f0ee,64,FLEN)
NAN_BOXED(0xe406f0ee,64,FLEN)
NAN_BOXED(0xe406f0ee,64,FLEN)
NAN_BOXED(0x88042774,64,FLEN)
NAN_BOXED(0x88042774,64,FLEN)
NAN_BOXED(0x88042774,64,FLEN)
NAN_BOXED(0x88042774,64,FLEN)
NAN_BOXED(0x88042774,64,FLEN)
NAN_BOXED(0x88042774,64,FLEN)
NAN_BOXED(0x88042774,64,FLEN)
NAN_BOXED(0x88042774,64,FLEN)
NAN_BOXED(0x88042774,64,FLEN)
NAN_BOXED(0x88042774,64,FLEN)
NAN_BOXED(0x1ecb5189,64,FLEN)
NAN_BOXED(0x1ecb5189,64,FLEN)
NAN_BOXED(0x1ecb5189,64,FLEN)
NAN_BOXED(0x1ecb5189,64,FLEN)
NAN_BOXED(0x1ecb5189,64,FLEN)
NAN_BOXED(0x1ecb5189,64,FLEN)
NAN_BOXED(0x1ecb5189,64,FLEN)
NAN_BOXED(0x1ecb5189,64,FLEN)
NAN_BOXED(0x1ecb5189,64,FLEN)
NAN_BOXED(0x1ecb5189,64,FLEN)
NAN_BOXED(0xa700633e,64,FLEN)
NAN_BOXED(0xa700633e,64,FLEN)
NAN_BOXED(0xa700633e,64,FLEN)
NAN_BOXED(0xa700633e,64,FLEN)
NAN_BOXED(0xa700633e,64,FLEN)
NAN_BOXED(0xa700633e,64,FLEN)
NAN_BOXED(0xa700633e,64,FLEN)
NAN_BOXED(0xa700633e,64,FLEN)
NAN_BOXED(0xa700633e,64,FLEN)
NAN_BOXED(0xa700633e,64,FLEN)
NAN_BOXED(0xc13e7714,64,FLEN)
NAN_BOXED(0xc13e7714,64,FLEN)
NAN_BOXED(0xc13e7714,64,FLEN)
NAN_BOXED(0xc13e7714,64,FLEN)
NAN_BOXED(0xc13e7714,64,FLEN)
NAN_BOXED(0xc13e7714,64,FLEN)
NAN_BOXED(0xc13e7714,64,FLEN)
NAN_BOXED(0xc13e7714,64,FLEN)
NAN_BOXED(0xc13e7714,64,FLEN)
NAN_BOXED(0xc13e7714,64,FLEN)
NAN_BOXED(0x0cd62fb0,64,FLEN)
NAN_BOXED(0x0cd62fb0,64,FLEN)
NAN_BOXED(0x0cd62fb0,64,FLEN)
NAN_BOXED(0x0cd62fb0,64,FLEN)
NAN_BOXED(0x0cd62fb0,64,FLEN)
NAN_BOXED(0x0cd62fb0,64,FLEN)
NAN_BOXED(0x0cd62fb0,64,FLEN)
NAN_BOXED(0x0cd62fb0,64,FLEN)
NAN_BOXED(0x0cd62fb0,64,FLEN)
NAN_BOXED(0x0cd62fb0,64,FLEN)
NAN_BOXED(0x65b2e0c0,64,FLEN)
NAN_BOXED(0x65b2e0c0,64,FLEN)
NAN_BOXED(0x65b2e0c0,64,FLEN)
NAN_BOXED(0x65b2e0c0,64,FLEN)
NAN_BOXED(0x65b2e0c0,64,FLEN)
NAN_BOXED(0x65b2e0c0,64,FLEN)
NAN_BOXED(0x65b2e0c0,64,FLEN)
NAN_BOXED(0x65b2e0c0,64,FLEN)
NAN_BOXED(0x65b2e0c0,64,FLEN)
NAN_BOXED(0x65b2e0c0,64,FLEN)
NAN_BOXED(0xa19dd440,64,FLEN)
NAN_BOXED(0xa19dd440,64,FLEN)
NAN_BOXED(0xa19dd440,64,FLEN)
NAN_BOXED(0xa19dd440,64,FLEN)
NAN_BOXED(0xa19dd440,64,FLEN)
NAN_BOXED(0xa19dd440,64,FLEN)
NAN_BOXED(0xa19dd440,64,FLEN)
NAN_BOXED(0xa19dd440,64,FLEN)
NAN_BOXED(0xa19dd440,64,FLEN)
NAN_BOXED(0xa19dd440,64,FLEN)
NAN_BOXED(0xa6102a20,64,FLEN)
NAN_BOXED(0xa6102a20,64,FLEN)
NAN_BOXED(0xa6102a20,64,FLEN)
NAN_BOXED(0xa6102a20,64,FLEN)
NAN_BOXED(0xa6102a20,64,FLEN)
NAN_BOXED(0xa6102a20,64,FLEN)
NAN_BOXED(0xa6102a20,64,FLEN)
NAN_BOXED(0xa6102a20,64,FLEN)
NAN_BOXED(0xa6102a20,64,FLEN)
NAN_BOXED(0xa6102a20,64,FLEN)
NAN_BOXED(0x98b6d14d,64,FLEN)
NAN_BOXED(0x98b6d14d,64,FLEN)
NAN_BOXED(0x98b6d14d,64,FLEN)
NAN_BOXED(0x98b6d14d,64,FLEN)
NAN_BOXED(0x98b6d14d,64,FLEN)
NAN_BOXED(0x98b6d14d,64,FLEN)
NAN_BOXED(0x98b6d14d,64,FLEN)
NAN_BOXED(0x98b6d14d,64,FLEN)
NAN_BOXED(0x98b6d14d,64,FLEN)
NAN_BOXED(0x98b6d14d,64,FLEN)
NAN_BOXED(0x00264c54,64,FLEN)
NAN_BOXED(0x00264c54,64,FLEN)
NAN_BOXED(0x00264c54,64,FLEN)
NAN_BOXED(0x00264c54,64,FLEN)
NAN_BOXED(0x00264c54,64,FLEN)
NAN_BOXED(0x00264c54,64,FLEN)
NAN_BOXED(0x00264c54,64,FLEN)
NAN_BOXED(0x00264c54,64,FLEN)
NAN_BOXED(0x00264c54,64,FLEN)
NAN_BOXED(0x00264c54,64,FLEN)
NAN_BOXED(0x13b941b8,64,FLEN)
NAN_BOXED(0x13b941b8,64,FLEN)
NAN_BOXED(0x13b941b8,64,FLEN)
NAN_BOXED(0x13b941b8,64,FLEN)
NAN_BOXED(0x13b941b8,64,FLEN)
NAN_BOXED(0x13b941b8,64,FLEN)
NAN_BOXED(0x13b941b8,64,FLEN)
NAN_BOXED(0x13b941b8,64,FLEN)
NAN_BOXED(0x13b941b8,64,FLEN)
NAN_BOXED(0x13b941b8,64,FLEN)
NAN_BOXED(0xadea99c8,64,FLEN)
NAN_BOXED(0xadea99c8,64,FLEN)
NAN_BOXED(0xadea99c8,64,FLEN)
NAN_BOXED(0xadea99c8,64,FLEN)
NAN_BOXED(0xadea99c8,64,FLEN)
NAN_BOXED(0xadea99c8,64,FLEN)
NAN_BOXED(0xadea99c8,64,FLEN)
NAN_BOXED(0xadea99c8,64,FLEN)
NAN_BOXED(0xadea99c8,64,FLEN)
NAN_BOXED(0xadea99c8,64,FLEN)
NAN_BOXED(0x3ec372c8,64,FLEN)
NAN_BOXED(0x3ec372c8,64,FLEN)
NAN_BOXED(0x3ec372c8,64,FLEN)
NAN_BOXED(0x3ec372c8,64,FLEN)
NAN_BOXED(0x3ec372c8,64,FLEN)
NAN_BOXED(0x3ec372c8,64,FLEN)
NAN_BOXED(0x3ec372c8,64,FLEN)
NAN_BOXED(0x3ec372c8,64,FLEN)
NAN_BOXED(0x3ec372c8,64,FLEN)
NAN_BOXED(0x3ec372c8,64,FLEN)
NAN_BOXED(0x899f25d0,64,FLEN)
NAN_BOXED(0x899f25d0,64,FLEN)
NAN_BOXED(0x899f25d0,64,FLEN)
NAN_BOXED(0x899f25d0,64,FLEN)
NAN_BOXED(0x899f25d0,64,FLEN)
NAN_BOXED(0x899f25d0,64,FLEN)
NAN_BOXED(0x899f25d0,64,FLEN)
NAN_BOXED(0x899f25d0,64,FLEN)
NAN_BOXED(0x899f25d0,64,FLEN)
NAN_BOXED(0x899f25d0,64,FLEN)
NAN_BOXED(0x92883200,64,FLEN)
NAN_BOXED(0x92883200,64,FLEN)
NAN_BOXED(0x92883200,64,FLEN)
NAN_BOXED(0x92883200,64,FLEN)
NAN_BOXED(0x92883200,64,FLEN)
NAN_BOXED(0x92883200,64,FLEN)
NAN_BOXED(0x92883200,64,FLEN)
NAN_BOXED(0x92883200,64,FLEN)
NAN_BOXED(0x92883200,64,FLEN)
NAN_BOXED(0x92883200,64,FLEN)
NAN_BOXED(0x03cdac2e,64,FLEN)
NAN_BOXED(0x03cdac2e,64,FLEN)
NAN_BOXED(0x03cdac2e,64,FLEN)
NAN_BOXED(0x03cdac2e,64,FLEN)
NAN_BOXED(0x03cdac2e,64,FLEN)
NAN_BOXED(0x03cdac2e,64,FLEN)
NAN_BOXED(0x03cdac2e,64,FLEN)
NAN_BOXED(0x03cdac2e,64,FLEN)
NAN_BOXED(0x03cdac2e,64,FLEN)
NAN_BOXED(0x03cdac2e,64,FLEN)
NAN_BOXED(0xec3b628c,64,FLEN)
NAN_BOXED(0xec3b628c,64,FLEN)
NAN_BOXED(0xec3b628c,64,FLEN)
NAN_BOXED(0xec3b628c,64,FLEN)
NAN_BOXED(0xec3b628c,64,FLEN)
NAN_BOXED(0xec3b628c,64,FLEN)
NAN_BOXED(0xec3b628c,64,FLEN)
NAN_BOXED(0xec3b628c,64,FLEN)
NAN_BOXED(0xec3b628c,64,FLEN)
NAN_BOXED(0xec3b628c,64,FLEN)
NAN_BOXED(0xea41bf00,64,FLEN)
NAN_BOXED(0xea41bf00,64,FLEN)
NAN_BOXED(0xea41bf00,64,FLEN)
NAN_BOXED(0xea41bf00,64,FLEN)
NAN_BOXED(0xea41bf00,64,FLEN)
NAN_BOXED(0xea41bf00,64,FLEN)
NAN_BOXED(0xea41bf00,64,FLEN)
NAN_BOXED(0xea41bf00,64,FLEN)
NAN_BOXED(0xea41bf00,64,FLEN)
NAN_BOXED(0xea41bf00,64,FLEN)
NAN_BOXED(0x25282b70,64,FLEN)
NAN_BOXED(0x25282b70,64,FLEN)
NAN_BOXED(0x25282b70,64,FLEN)
NAN_BOXED(0x25282b70,64,FLEN)
NAN_BOXED(0x25282b70,64,FLEN)
NAN_BOXED(0x25282b70,64,FLEN)
NAN_BOXED(0x25282b70,64,FLEN)
NAN_BOXED(0x25282b70,64,FLEN)
NAN_BOXED(0x25282b70,64,FLEN)
NAN_BOXED(0x25282b70,64,FLEN)
NAN_BOXED(0xae078559,64,FLEN)
NAN_BOXED(0xae078559,64,FLEN)
NAN_BOXED(0xae078559,64,FLEN)
NAN_BOXED(0xae078559,64,FLEN)
NAN_BOXED(0xae078559,64,FLEN)
NAN_BOXED(0xae078559,64,FLEN)
NAN_BOXED(0xae078559,64,FLEN)
NAN_BOXED(0xae078559,64,FLEN)
NAN_BOXED(0xae078559,64,FLEN)
NAN_BOXED(0xae078559,64,FLEN)
NAN_BOXED(0x32f81500,64,FLEN)
NAN_BOXED(0x32f81500,64,FLEN)
NAN_BOXED(0x32f81500,64,FLEN)
NAN_BOXED(0x32f81500,64,FLEN)
NAN_BOXED(0x32f81500,64,FLEN)
NAN_BOXED(0x32f81500,64,FLEN)
NAN_BOXED(0x32f81500,64,FLEN)
NAN_BOXED(0x32f81500,64,FLEN)
NAN_BOXED(0x32f81500,64,FLEN)
NAN_BOXED(0x32f81500,64,FLEN)
NAN_BOXED(0xda4838f8,64,FLEN)
NAN_BOXED(0xda4838f8,64,FLEN)
NAN_BOXED(0xda4838f8,64,FLEN)
NAN_BOXED(0xda4838f8,64,FLEN)
NAN_BOXED(0xda4838f8,64,FLEN)
NAN_BOXED(0xda4838f8,64,FLEN)
NAN_BOXED(0xda4838f8,64,FLEN)
NAN_BOXED(0xda4838f8,64,FLEN)
NAN_BOXED(0xda4838f8,64,FLEN)
NAN_BOXED(0xda4838f8,64,FLEN)
NAN_BOXED(0x5f13c384,64,FLEN)
NAN_BOXED(0x5f13c384,64,FLEN)
NAN_BOXED(0x5f13c384,64,FLEN)
NAN_BOXED(0x5f13c384,64,FLEN)
NAN_BOXED(0x5f13c384,64,FLEN)
NAN_BOXED(0x5f13c384,64,FLEN)
NAN_BOXED(0x5f13c384,64,FLEN)
NAN_BOXED(0x5f13c384,64,FLEN)
NAN_BOXED(0x5f13c384,64,FLEN)
NAN_BOXED(0x5f13c384,64,FLEN)
NAN_BOXED(0x7d515db8,64,FLEN)
NAN_BOXED(0x7d515db8,64,FLEN)
NAN_BOXED(0x7d515db8,64,FLEN)
NAN_BOXED(0x7d515db8,64,FLEN)
NAN_BOXED(0x7d515db8,64,FLEN)
NAN_BOXED(0x7d515db8,64,FLEN)
NAN_BOXED(0x7d515db8,64,FLEN)
NAN_BOXED(0x7d515db8,64,FLEN)
NAN_BOXED(0x7d515db8,64,FLEN)
NAN_BOXED(0x7d515db8,64,FLEN)
NAN_BOXED(0x5bef66e7,64,FLEN)
NAN_BOXED(0x5bef66e7,64,FLEN)
NAN_BOXED(0x5bef66e7,64,FLEN)
NAN_BOXED(0x5bef66e7,64,FLEN)
NAN_BOXED(0x5bef66e7,64,FLEN)
NAN_BOXED(0x5bef66e7,64,FLEN)
NAN_BOXED(0x5bef66e7,64,FLEN)
NAN_BOXED(0x5bef66e7,64,FLEN)
NAN_BOXED(0x5bef66e7,64,FLEN)
NAN_BOXED(0x5bef66e7,64,FLEN)
NAN_BOXED(0x952dbd28,64,FLEN)
NAN_BOXED(0x952dbd28,64,FLEN)
NAN_BOXED(0x952dbd28,64,FLEN)
NAN_BOXED(0x952dbd28,64,FLEN)
NAN_BOXED(0x952dbd28,64,FLEN)
NAN_BOXED(0x952dbd28,64,FLEN)
NAN_BOXED(0x952dbd28,64,FLEN)
NAN_BOXED(0x952dbd28,64,FLEN)
NAN_BOXED(0x952dbd28,64,FLEN)
NAN_BOXED(0x952dbd28,64,FLEN)
NAN_BOXED(0xed45b4e8,64,FLEN)
NAN_BOXED(0xed45b4e8,64,FLEN)
NAN_BOXED(0xed45b4e8,64,FLEN)
NAN_BOXED(0xed45b4e8,64,FLEN)
NAN_BOXED(0xed45b4e8,64,FLEN)
NAN_BOXED(0xed45b4e8,64,FLEN)
NAN_BOXED(0xed45b4e8,64,FLEN)
NAN_BOXED(0xed45b4e8,64,FLEN)
NAN_BOXED(0xed45b4e8,64,FLEN)
NAN_BOXED(0xed45b4e8,64,FLEN)
NAN_BOXED(0xdf01427c,64,FLEN)
NAN_BOXED(0xdf01427c,64,FLEN)
NAN_BOXED(0xdf01427c,64,FLEN)
NAN_BOXED(0xdf01427c,64,FLEN)
NAN_BOXED(0xdf01427c,64,FLEN)
NAN_BOXED(0xdf01427c,64,FLEN)
NAN_BOXED(0xdf01427c,64,FLEN)
NAN_BOXED(0xdf01427c,64,FLEN)
NAN_BOXED(0xdf01427c,64,FLEN)
NAN_BOXED(0xdf01427c,64,FLEN)
NAN_BOXED(0x0094264f,64,FLEN)
NAN_BOXED(0x0094264f,64,FLEN)
NAN_BOXED(0x0094264f,64,FLEN)
NAN_BOXED(0x0094264f,64,FLEN)
NAN_BOXED(0x0094264f,64,FLEN)
NAN_BOXED(0x0094264f,64,FLEN)
NAN_BOXED(0x0094264f,64,FLEN)
NAN_BOXED(0x0094264f,64,FLEN)
NAN_BOXED(0x0094264f,64,FLEN)
NAN_BOXED(0x0094264f,64,FLEN)
NAN_BOXED(0x48bb44d1,64,FLEN)
NAN_BOXED(0x48bb44d1,64,FLEN)
NAN_BOXED(0x48bb44d1,64,FLEN)
NAN_BOXED(0x48bb44d1,64,FLEN)
NAN_BOXED(0x48bb44d1,64,FLEN)
NAN_BOXED(0x48bb44d1,64,FLEN)
NAN_BOXED(0x48bb44d1,64,FLEN)
NAN_BOXED(0x48bb44d1,64,FLEN)
NAN_BOXED(0x48bb44d1,64,FLEN)
NAN_BOXED(0x48bb44d1,64,FLEN)
NAN_BOXED(0xc20807d0,64,FLEN)
NAN_BOXED(0xc20807d0,64,FLEN)
NAN_BOXED(0xc20807d0,64,FLEN)
NAN_BOXED(0xc20807d0,64,FLEN)
NAN_BOXED(0xc20807d0,64,FLEN)
NAN_BOXED(0xc20807d0,64,FLEN)
NAN_BOXED(0xc20807d0,64,FLEN)
NAN_BOXED(0xc20807d0,64,FLEN)
NAN_BOXED(0xc20807d0,64,FLEN)
NAN_BOXED(0xc20807d0,64,FLEN)
NAN_BOXED(0x47687452,64,FLEN)
NAN_BOXED(0x47687452,64,FLEN)
NAN_BOXED(0x47687452,64,FLEN)
NAN_BOXED(0x47687452,64,FLEN)
NAN_BOXED(0x47687452,64,FLEN)
NAN_BOXED(0x47687452,64,FLEN)
NAN_BOXED(0x47687452,64,FLEN)
NAN_BOXED(0x47687452,64,FLEN)
NAN_BOXED(0x47687452,64,FLEN)
NAN_BOXED(0x47687452,64,FLEN)
NAN_BOXED(0x567de8e8,64,FLEN)
NAN_BOXED(0x567de8e8,64,FLEN)
NAN_BOXED(0x567de8e8,64,FLEN)
NAN_BOXED(0x567de8e8,64,FLEN)
NAN_BOXED(0x567de8e8,64,FLEN)
NAN_BOXED(0x567de8e8,64,FLEN)
NAN_BOXED(0x567de8e8,64,FLEN)
NAN_BOXED(0x567de8e8,64,FLEN)
NAN_BOXED(0x567de8e8,64,FLEN)
NAN_BOXED(0x567de8e8,64,FLEN)
NAN_BOXED(0x3f0add1a,64,FLEN)
NAN_BOXED(0x3f0add1a,64,FLEN)
NAN_BOXED(0x3f0add1a,64,FLEN)
NAN_BOXED(0x3f0add1a,64,FLEN)
NAN_BOXED(0x3f0add1a,64,FLEN)
NAN_BOXED(0x3f0add1a,64,FLEN)
NAN_BOXED(0x3f0add1a,64,FLEN)
NAN_BOXED(0x3f0add1a,64,FLEN)
NAN_BOXED(0x3f0add1a,64,FLEN)
NAN_BOXED(0x3f0add1a,64,FLEN)
NAN_BOXED(0x48aa24b0,64,FLEN)
NAN_BOXED(0x48aa24b0,64,FLEN)
NAN_BOXED(0x48aa24b0,64,FLEN)
NAN_BOXED(0x48aa24b0,64,FLEN)
NAN_BOXED(0x48aa24b0,64,FLEN)
NAN_BOXED(0x48aa24b0,64,FLEN)
NAN_BOXED(0x48aa24b0,64,FLEN)
NAN_BOXED(0x48aa24b0,64,FLEN)
NAN_BOXED(0x48aa24b0,64,FLEN)
NAN_BOXED(0x48aa24b0,64,FLEN)
NAN_BOXED(0x5d93f6b7,64,FLEN)
NAN_BOXED(0x5d93f6b7,64,FLEN)
NAN_BOXED(0x5d93f6b7,64,FLEN)
NAN_BOXED(0x5d93f6b7,64,FLEN)
NAN_BOXED(0x5d93f6b7,64,FLEN)
NAN_BOXED(0x5d93f6b7,64,FLEN)
NAN_BOXED(0x5d93f6b7,64,FLEN)
NAN_BOXED(0x5d93f6b7,64,FLEN)
NAN_BOXED(0x5d93f6b7,64,FLEN)
NAN_BOXED(0x5d93f6b7,64,FLEN)
NAN_BOXED(0x41e02f10,64,FLEN)
NAN_BOXED(0x41e02f10,64,FLEN)
NAN_BOXED(0x41e02f10,64,FLEN)
NAN_BOXED(0x41e02f10,64,FLEN)
NAN_BOXED(0x41e02f10,64,FLEN)
NAN_BOXED(0x41e02f10,64,FLEN)
NAN_BOXED(0x41e02f10,64,FLEN)
NAN_BOXED(0x41e02f10,64,FLEN)
NAN_BOXED(0x41e02f10,64,FLEN)
NAN_BOXED(0x41e02f10,64,FLEN)
NAN_BOXED(0x021543c6,64,FLEN)
NAN_BOXED(0x021543c6,64,FLEN)
NAN_BOXED(0x021543c6,64,FLEN)
NAN_BOXED(0x021543c6,64,FLEN)
NAN_BOXED(0x021543c6,64,FLEN)
NAN_BOXED(0x021543c6,64,FLEN)
NAN_BOXED(0x021543c6,64,FLEN)
NAN_BOXED(0x021543c6,64,FLEN)
NAN_BOXED(0x021543c6,64,FLEN)
NAN_BOXED(0x021543c6,64,FLEN)
NAN_BOXED(0xbf05cbdc,64,FLEN)
NAN_BOXED(0xbf05cbdc,64,FLEN)
NAN_BOXED(0xbf05cbdc,64,FLEN)
NAN_BOXED(0xbf05cbdc,64,FLEN)
NAN_BOXED(0xbf05cbdc,64,FLEN)
NAN_BOXED(0xbf05cbdc,64,FLEN)
NAN_BOXED(0xbf05cbdc,64,FLEN)
NAN_BOXED(0xbf05cbdc,64,FLEN)
NAN_BOXED(0xbf05cbdc,64,FLEN)
NAN_BOXED(0xbf05cbdc,64,FLEN)
NAN_BOXED(0x79d2b3f4,64,FLEN)
NAN_BOXED(0x79d2b3f4,64,FLEN)
NAN_BOXED(0x79d2b3f4,64,FLEN)
NAN_BOXED(0x79d2b3f4,64,FLEN)
NAN_BOXED(0x79d2b3f4,64,FLEN)
NAN_BOXED(0x79d2b3f4,64,FLEN)
NAN_BOXED(0x79d2b3f4,64,FLEN)
NAN_BOXED(0x79d2b3f4,64,FLEN)
NAN_BOXED(0x79d2b3f4,64,FLEN)
NAN_BOXED(0x79d2b3f4,64,FLEN)
NAN_BOXED(0x9ca80923,64,FLEN)
NAN_BOXED(0x9ca80923,64,FLEN)
NAN_BOXED(0x9ca80923,64,FLEN)
NAN_BOXED(0x9ca80923,64,FLEN)
NAN_BOXED(0x9ca80923,64,FLEN)
NAN_BOXED(0x9ca80923,64,FLEN)
NAN_BOXED(0x9ca80923,64,FLEN)
NAN_BOXED(0x9ca80923,64,FLEN)
NAN_BOXED(0x9ca80923,64,FLEN)
NAN_BOXED(0x9ca80923,64,FLEN)
NAN_BOXED(0x73b64d0e,64,FLEN)
NAN_BOXED(0x73b64d0e,64,FLEN)
NAN_BOXED(0x73b64d0e,64,FLEN)
NAN_BOXED(0x73b64d0e,64,FLEN)
NAN_BOXED(0x73b64d0e,64,FLEN)
NAN_BOXED(0x73b64d0e,64,FLEN)
NAN_BOXED(0x73b64d0e,64,FLEN)
NAN_BOXED(0x73b64d0e,64,FLEN)
NAN_BOXED(0x73b64d0e,64,FLEN)
NAN_BOXED(0x73b64d0e,64,FLEN)
NAN_BOXED(0x4e417739,64,FLEN)
NAN_BOXED(0x4e417739,64,FLEN)
NAN_BOXED(0x4e417739,64,FLEN)
NAN_BOXED(0x4e417739,64,FLEN)
NAN_BOXED(0x4e417739,64,FLEN)
NAN_BOXED(0x4e417739,64,FLEN)
NAN_BOXED(0x4e417739,64,FLEN)
NAN_BOXED(0x4e417739,64,FLEN)
NAN_BOXED(0x4e417739,64,FLEN)
NAN_BOXED(0x4e417739,64,FLEN)
NAN_BOXED(0x644350b4,64,FLEN)
NAN_BOXED(0x644350b4,64,FLEN)
NAN_BOXED(0x644350b4,64,FLEN)
NAN_BOXED(0x644350b4,64,FLEN)
NAN_BOXED(0x644350b4,64,FLEN)
NAN_BOXED(0x644350b4,64,FLEN)
NAN_BOXED(0x644350b4,64,FLEN)
NAN_BOXED(0x644350b4,64,FLEN)
NAN_BOXED(0x644350b4,64,FLEN)
NAN_BOXED(0x644350b4,64,FLEN)
NAN_BOXED(0xd133e4a4,64,FLEN)
NAN_BOXED(0xd133e4a4,64,FLEN)
NAN_BOXED(0xd133e4a4,64,FLEN)
NAN_BOXED(0xd133e4a4,64,FLEN)
NAN_BOXED(0xd133e4a4,64,FLEN)
NAN_BOXED(0xd133e4a4,64,FLEN)
NAN_BOXED(0xd133e4a4,64,FLEN)
NAN_BOXED(0xd133e4a4,64,FLEN)
NAN_BOXED(0xd133e4a4,64,FLEN)
NAN_BOXED(0xd133e4a4,64,FLEN)
NAN_BOXED(0x9af59fa1,64,FLEN)
NAN_BOXED(0x9af59fa1,64,FLEN)
NAN_BOXED(0x9af59fa1,64,FLEN)
NAN_BOXED(0x9af59fa1,64,FLEN)
NAN_BOXED(0x9af59fa1,64,FLEN)
NAN_BOXED(0x9af59fa1,64,FLEN)
NAN_BOXED(0x9af59fa1,64,FLEN)
NAN_BOXED(0x9af59fa1,64,FLEN)
NAN_BOXED(0x9af59fa1,64,FLEN)
NAN_BOXED(0x9af59fa1,64,FLEN)
NAN_BOXED(0x4c3cff50,64,FLEN)
NAN_BOXED(0x4c3cff50,64,FLEN)
NAN_BOXED(0x4c3cff50,64,FLEN)
NAN_BOXED(0x4c3cff50,64,FLEN)
NAN_BOXED(0x4c3cff50,64,FLEN)
NAN_BOXED(0x4c3cff50,64,FLEN)
NAN_BOXED(0x4c3cff50,64,FLEN)
NAN_BOXED(0x4c3cff50,64,FLEN)
NAN_BOXED(0x4c3cff50,64,FLEN)
NAN_BOXED(0x4c3cff50,64,FLEN)
NAN_BOXED(0x0dc474c8,64,FLEN)
NAN_BOXED(0x0dc474c8,64,FLEN)
NAN_BOXED(0x0dc474c8,64,FLEN)
NAN_BOXED(0x0dc474c8,64,FLEN)
NAN_BOXED(0x0dc474c8,64,FLEN)
NAN_BOXED(0x0dc474c8,64,FLEN)
NAN_BOXED(0x0dc474c8,64,FLEN)
NAN_BOXED(0x0dc474c8,64,FLEN)
NAN_BOXED(0x0dc474c8,64,FLEN)
NAN_BOXED(0x0dc474c8,64,FLEN)
NAN_BOXED(0xfe5f6820,64,FLEN)
NAN_BOXED(0xfe5f6820,64,FLEN)
NAN_BOXED(0xfe5f6820,64,FLEN)
NAN_BOXED(0xfe5f6820,64,FLEN)
NAN_BOXED(0xfe5f6820,64,FLEN)
NAN_BOXED(0xfe5f6820,64,FLEN)
NAN_BOXED(0xfe5f6820,64,FLEN)
NAN_BOXED(0xfe5f6820,64,FLEN)
NAN_BOXED(0xfe5f6820,64,FLEN)
NAN_BOXED(0xfe5f6820,64,FLEN)
NAN_BOXED(0x58d86c96,64,FLEN)
NAN_BOXED(0x58d86c96,64,FLEN)
NAN_BOXED(0x58d86c96,64,FLEN)
NAN_BOXED(0x58d86c96,64,FLEN)
NAN_BOXED(0x58d86c96,64,FLEN)
NAN_BOXED(0x58d86c96,64,FLEN)
NAN_BOXED(0x58d86c96,64,FLEN)
NAN_BOXED(0x58d86c96,64,FLEN)
NAN_BOXED(0x58d86c96,64,FLEN)
NAN_BOXED(0x58d86c96,64,FLEN)
NAN_BOXED(0x7d68a2dc,64,FLEN)
NAN_BOXED(0x7d68a2dc,64,FLEN)
NAN_BOXED(0x7d68a2dc,64,FLEN)
NAN_BOXED(0x7d68a2dc,64,FLEN)
NAN_BOXED(0x7d68a2dc,64,FLEN)
NAN_BOXED(0x7d68a2dc,64,FLEN)
NAN_BOXED(0x7d68a2dc,64,FLEN)
NAN_BOXED(0x7d68a2dc,64,FLEN)
NAN_BOXED(0x7d68a2dc,64,FLEN)
NAN_BOXED(0x7d68a2dc,64,FLEN)
NAN_BOXED(0x8b87f95c,64,FLEN)
NAN_BOXED(0x8b87f95c,64,FLEN)
NAN_BOXED(0x8b87f95c,64,FLEN)
NAN_BOXED(0x8b87f95c,64,FLEN)
NAN_BOXED(0x8b87f95c,64,FLEN)
NAN_BOXED(0x8b87f95c,64,FLEN)
NAN_BOXED(0x8b87f95c,64,FLEN)
NAN_BOXED(0x8b87f95c,64,FLEN)
NAN_BOXED(0x8b87f95c,64,FLEN)
NAN_BOXED(0x8b87f95c,64,FLEN)
NAN_BOXED(0x3d566b6e,64,FLEN)
NAN_BOXED(0x3d566b6e,64,FLEN)
NAN_BOXED(0x3d566b6e,64,FLEN)
NAN_BOXED(0x3d566b6e,64,FLEN)
NAN_BOXED(0x3d566b6e,64,FLEN)
NAN_BOXED(0x3d566b6e,64,FLEN)
NAN_BOXED(0x3d566b6e,64,FLEN)
NAN_BOXED(0x3d566b6e,64,FLEN)
NAN_BOXED(0x3d566b6e,64,FLEN)
NAN_BOXED(0x3d566b6e,64,FLEN)
NAN_BOXED(0xd1465e5c,64,FLEN)
NAN_BOXED(0xd1465e5c,64,FLEN)
NAN_BOXED(0xd1465e5c,64,FLEN)
NAN_BOXED(0xd1465e5c,64,FLEN)
NAN_BOXED(0xd1465e5c,64,FLEN)
NAN_BOXED(0xd1465e5c,64,FLEN)
NAN_BOXED(0xd1465e5c,64,FLEN)
NAN_BOXED(0xd1465e5c,64,FLEN)
NAN_BOXED(0xd1465e5c,64,FLEN)
NAN_BOXED(0xd1465e5c,64,FLEN)
NAN_BOXED(0x29006666,64,FLEN)
NAN_BOXED(0x29006666,64,FLEN)
NAN_BOXED(0x29006666,64,FLEN)
NAN_BOXED(0x29006666,64,FLEN)
NAN_BOXED(0x29006666,64,FLEN)
NAN_BOXED(0x29006666,64,FLEN)
NAN_BOXED(0x29006666,64,FLEN)
NAN_BOXED(0x29006666,64,FLEN)
NAN_BOXED(0x29006666,64,FLEN)
NAN_BOXED(0x29006666,64,FLEN)
NAN_BOXED(0x65677dfb,64,FLEN)
NAN_BOXED(0x65677dfb,64,FLEN)
NAN_BOXED(0x65677dfb,64,FLEN)
NAN_BOXED(0x65677dfb,64,FLEN)
NAN_BOXED(0x65677dfb,64,FLEN)
NAN_BOXED(0x65677dfb,64,FLEN)
NAN_BOXED(0x65677dfb,64,FLEN)
NAN_BOXED(0x65677dfb,64,FLEN)
NAN_BOXED(0x65677dfb,64,FLEN)
NAN_BOXED(0x65677dfb,64,FLEN)
NAN_BOXED(0xc57a6770,64,FLEN)
NAN_BOXED(0xc57a6770,64,FLEN)
NAN_BOXED(0xc57a6770,64,FLEN)
NAN_BOXED(0xc57a6770,64,FLEN)
NAN_BOXED(0xc57a6770,64,FLEN)
NAN_BOXED(0xc57a6770,64,FLEN)
NAN_BOXED(0xc57a6770,64,FLEN)
NAN_BOXED(0xc57a6770,64,FLEN)
NAN_BOXED(0xc57a6770,64,FLEN)
NAN_BOXED(0xc57a6770,64,FLEN)
NAN_BOXED(0x427931ec,64,FLEN)
NAN_BOXED(0x427931ec,64,FLEN)
NAN_BOXED(0x427931ec,64,FLEN)
NAN_BOXED(0x427931ec,64,FLEN)
NAN_BOXED(0x427931ec,64,FLEN)
NAN_BOXED(0x427931ec,64,FLEN)
NAN_BOXED(0x427931ec,64,FLEN)
NAN_BOXED(0x427931ec,64,FLEN)
NAN_BOXED(0x427931ec,64,FLEN)
NAN_BOXED(0x427931ec,64,FLEN)
NAN_BOXED(0x9f5e0e90,64,FLEN)
NAN_BOXED(0x9f5e0e90,64,FLEN)
NAN_BOXED(0x9f5e0e90,64,FLEN)
NAN_BOXED(0x9f5e0e90,64,FLEN)
NAN_BOXED(0x9f5e0e90,64,FLEN)
NAN_BOXED(0x9f5e0e90,64,FLEN)
NAN_BOXED(0x9f5e0e90,64,FLEN)
NAN_BOXED(0x9f5e0e90,64,FLEN)
NAN_BOXED(0x9f5e0e90,64,FLEN)
NAN_BOXED(0x9f5e0e90,64,FLEN)
NAN_BOXED(0x81d29de9,64,FLEN)
NAN_BOXED(0x81d29de9,64,FLEN)
NAN_BOXED(0x81d29de9,64,FLEN)
NAN_BOXED(0x81d29de9,64,FLEN)
NAN_BOXED(0x81d29de9,64,FLEN)
NAN_BOXED(0x81d29de9,64,FLEN)
NAN_BOXED(0x81d29de9,64,FLEN)
NAN_BOXED(0x81d29de9,64,FLEN)
NAN_BOXED(0x81d29de9,64,FLEN)
NAN_BOXED(0x81d29de9,64,FLEN)
NAN_BOXED(0x08f38a96,64,FLEN)
NAN_BOXED(0x08f38a96,64,FLEN)
NAN_BOXED(0x08f38a96,64,FLEN)
NAN_BOXED(0x08f38a96,64,FLEN)
NAN_BOXED(0x08f38a96,64,FLEN)
NAN_BOXED(0x08f38a96,64,FLEN)
NAN_BOXED(0x08f38a96,64,FLEN)
NAN_BOXED(0x08f38a96,64,FLEN)
NAN_BOXED(0x08f38a96,64,FLEN)
NAN_BOXED(0x08f38a96,64,FLEN)
NAN_BOXED(0x758f389a,64,FLEN)
NAN_BOXED(0x758f389a,64,FLEN)
NAN_BOXED(0x758f389a,64,FLEN)
NAN_BOXED(0x758f389a,64,FLEN)
NAN_BOXED(0x758f389a,64,FLEN)
NAN_BOXED(0x758f389a,64,FLEN)
NAN_BOXED(0x758f389a,64,FLEN)
NAN_BOXED(0x758f389a,64,FLEN)
NAN_BOXED(0x758f389a,64,FLEN)
NAN_BOXED(0x758f389a,64,FLEN)
NAN_BOXED(0x7da38e40,64,FLEN)
NAN_BOXED(0x7da38e40,64,FLEN)
NAN_BOXED(0x7da38e40,64,FLEN)
NAN_BOXED(0x7da38e40,64,FLEN)
NAN_BOXED(0x7da38e40,64,FLEN)
NAN_BOXED(0x7da38e40,64,FLEN)
NAN_BOXED(0x7da38e40,64,FLEN)
NAN_BOXED(0x7da38e40,64,FLEN)
NAN_BOXED(0x7da38e40,64,FLEN)
NAN_BOXED(0x7da38e40,64,FLEN)
NAN_BOXED(0xd92b7858,64,FLEN)
NAN_BOXED(0xd92b7858,64,FLEN)
NAN_BOXED(0xd92b7858,64,FLEN)
NAN_BOXED(0xd92b7858,64,FLEN)
NAN_BOXED(0xd92b7858,64,FLEN)
NAN_BOXED(0xd92b7858,64,FLEN)
NAN_BOXED(0xd92b7858,64,FLEN)
NAN_BOXED(0xd92b7858,64,FLEN)
NAN_BOXED(0xd92b7858,64,FLEN)
NAN_BOXED(0xd92b7858,64,FLEN)
NAN_BOXED(0xe58482b4,64,FLEN)
NAN_BOXED(0xe58482b4,64,FLEN)
NAN_BOXED(0xe58482b4,64,FLEN)
NAN_BOXED(0xe58482b4,64,FLEN)
NAN_BOXED(0xe58482b4,64,FLEN)
NAN_BOXED(0xe58482b4,64,FLEN)
NAN_BOXED(0xe58482b4,64,FLEN)
NAN_BOXED(0xe58482b4,64,FLEN)
NAN_BOXED(0xe58482b4,64,FLEN)
NAN_BOXED(0xe58482b4,64,FLEN)
NAN_BOXED(0x7caf341d,64,FLEN)
NAN_BOXED(0x7caf341d,64,FLEN)
NAN_BOXED(0x7caf341d,64,FLEN)
NAN_BOXED(0x7caf341d,64,FLEN)
NAN_BOXED(0x7caf341d,64,FLEN)
NAN_BOXED(0x7caf341d,64,FLEN)
NAN_BOXED(0x7caf341d,64,FLEN)
NAN_BOXED(0x7caf341d,64,FLEN)
NAN_BOXED(0x7caf341d,64,FLEN)
NAN_BOXED(0x7caf341d,64,FLEN)
NAN_BOXED(0x799f273a,64,FLEN)
NAN_BOXED(0x799f273a,64,FLEN)
NAN_BOXED(0x799f273a,64,FLEN)
NAN_BOXED(0x799f273a,64,FLEN)
NAN_BOXED(0x799f273a,64,FLEN)
NAN_BOXED(0x799f273a,64,FLEN)
NAN_BOXED(0x799f273a,64,FLEN)
NAN_BOXED(0x799f273a,64,FLEN)
NAN_BOXED(0x799f273a,64,FLEN)
NAN_BOXED(0x799f273a,64,FLEN)
NAN_BOXED(0xd35c140c,64,FLEN)
NAN_BOXED(0xd35c140c,64,FLEN)
NAN_BOXED(0xd35c140c,64,FLEN)
NAN_BOXED(0xd35c140c,64,FLEN)
NAN_BOXED(0xd35c140c,64,FLEN)
NAN_BOXED(0xd35c140c,64,FLEN)
NAN_BOXED(0xd35c140c,64,FLEN)
NAN_BOXED(0xd35c140c,64,FLEN)
NAN_BOXED(0xd35c140c,64,FLEN)
NAN_BOXED(0xd35c140c,64,FLEN)
NAN_BOXED(0x246a3808,64,FLEN)
NAN_BOXED(0x246a3808,64,FLEN)
NAN_BOXED(0x246a3808,64,FLEN)
NAN_BOXED(0x246a3808,64,FLEN)
NAN_BOXED(0x246a3808,64,FLEN)
NAN_BOXED(0x246a3808,64,FLEN)
NAN_BOXED(0x246a3808,64,FLEN)
NAN_BOXED(0x246a3808,64,FLEN)
NAN_BOXED(0x246a3808,64,FLEN)
NAN_BOXED(0x246a3808,64,FLEN)
NAN_BOXED(0xaa706f00,64,FLEN)
NAN_BOXED(0xaa706f00,64,FLEN)
NAN_BOXED(0xaa706f00,64,FLEN)
NAN_BOXED(0xaa706f00,64,FLEN)
NAN_BOXED(0xaa706f00,64,FLEN)
NAN_BOXED(0xaa706f00,64,FLEN)
NAN_BOXED(0xaa706f00,64,FLEN)
NAN_BOXED(0xaa706f00,64,FLEN)
NAN_BOXED(0xaa706f00,64,FLEN)
NAN_BOXED(0xaa706f00,64,FLEN)
NAN_BOXED(0xcbdfb28b,64,FLEN)
NAN_BOXED(0xcbdfb28b,64,FLEN)
NAN_BOXED(0xcbdfb28b,64,FLEN)
NAN_BOXED(0xcbdfb28b,64,FLEN)
NAN_BOXED(0xcbdfb28b,64,FLEN)
NAN_BOXED(0xcbdfb28b,64,FLEN)
NAN_BOXED(0xcbdfb28b,64,FLEN)
NAN_BOXED(0xcbdfb28b,64,FLEN)
NAN_BOXED(0xcbdfb28b,64,FLEN)
NAN_BOXED(0xcbdfb28b,64,FLEN)
NAN_BOXED(0x3375d110,64,FLEN)
NAN_BOXED(0x3375d110,64,FLEN)
NAN_BOXED(0x3375d110,64,FLEN)
NAN_BOXED(0x3375d110,64,FLEN)
NAN_BOXED(0x3375d110,64,FLEN)
NAN_BOXED(0x3375d110,64,FLEN)
NAN_BOXED(0x3375d110,64,FLEN)
NAN_BOXED(0x3375d110,64,FLEN)
NAN_BOXED(0x3375d110,64,FLEN)
NAN_BOXED(0x3375d110,64,FLEN)
NAN_BOXED(0x2253f4a6,64,FLEN)
NAN_BOXED(0x2253f4a6,64,FLEN)
NAN_BOXED(0x2253f4a6,64,FLEN)
NAN_BOXED(0x2253f4a6,64,FLEN)
NAN_BOXED(0x2253f4a6,64,FLEN)
NAN_BOXED(0x2253f4a6,64,FLEN)
NAN_BOXED(0x2253f4a6,64,FLEN)
NAN_BOXED(0x2253f4a6,64,FLEN)
NAN_BOXED(0x2253f4a6,64,FLEN)
NAN_BOXED(0x2253f4a6,64,FLEN)
NAN_BOXED(0xc3be9497,64,FLEN)
NAN_BOXED(0xc3be9497,64,FLEN)
NAN_BOXED(0xc3be9497,64,FLEN)
NAN_BOXED(0xc3be9497,64,FLEN)
NAN_BOXED(0xc3be9497,64,FLEN)
NAN_BOXED(0xc3be9497,64,FLEN)
NAN_BOXED(0xc3be9497,64,FLEN)
NAN_BOXED(0xc3be9497,64,FLEN)
NAN_BOXED(0xc3be9497,64,FLEN)
NAN_BOXED(0xc3be9497,64,FLEN)
NAN_BOXED(0x4a36ec2c,64,FLEN)
NAN_BOXED(0x4a36ec2c,64,FLEN)
NAN_BOXED(0x4a36ec2c,64,FLEN)
NAN_BOXED(0x4a36ec2c,64,FLEN)
NAN_BOXED(0x4a36ec2c,64,FLEN)
NAN_BOXED(0x4a36ec2c,64,FLEN)
NAN_BOXED(0x4a36ec2c,64,FLEN)
NAN_BOXED(0x4a36ec2c,64,FLEN)
NAN_BOXED(0x4a36ec2c,64,FLEN)
NAN_BOXED(0x4a36ec2c,64,FLEN)
NAN_BOXED(0xf85e2acd,64,FLEN)
NAN_BOXED(0xf85e2acd,64,FLEN)
NAN_BOXED(0xf85e2acd,64,FLEN)
NAN_BOXED(0xf85e2acd,64,FLEN)
NAN_BOXED(0xf85e2acd,64,FLEN)
NAN_BOXED(0xf85e2acd,64,FLEN)
NAN_BOXED(0xf85e2acd,64,FLEN)
NAN_BOXED(0xf85e2acd,64,FLEN)
NAN_BOXED(0xf85e2acd,64,FLEN)
NAN_BOXED(0xf85e2acd,64,FLEN)
NAN_BOXED(0x6fffb77c,64,FLEN)
NAN_BOXED(0x6fffb77c,64,FLEN)
NAN_BOXED(0x6fffb77c,64,FLEN)
NAN_BOXED(0x6fffb77c,64,FLEN)
NAN_BOXED(0x6fffb77c,64,FLEN)
NAN_BOXED(0x6fffb77c,64,FLEN)
NAN_BOXED(0x6fffb77c,64,FLEN)
NAN_BOXED(0x6fffb77c,64,FLEN)
NAN_BOXED(0x6fffb77c,64,FLEN)
NAN_BOXED(0x6fffb77c,64,FLEN)
NAN_BOXED(0xf6b23bc3,64,FLEN)
NAN_BOXED(0xf6b23bc3,64,FLEN)
NAN_BOXED(0xf6b23bc3,64,FLEN)
NAN_BOXED(0xf6b23bc3,64,FLEN)
NAN_BOXED(0xf6b23bc3,64,FLEN)
NAN_BOXED(0xf6b23bc3,64,FLEN)
NAN_BOXED(0xf6b23bc3,64,FLEN)
NAN_BOXED(0xf6b23bc3,64,FLEN)
NAN_BOXED(0xf6b23bc3,64,FLEN)
NAN_BOXED(0xf6b23bc3,64,FLEN)
NAN_BOXED(0x03ccf24a,64,FLEN)
NAN_BOXED(0x03ccf24a,64,FLEN)
NAN_BOXED(0x03ccf24a,64,FLEN)
NAN_BOXED(0x03ccf24a,64,FLEN)
NAN_BOXED(0x03ccf24a,64,FLEN)
NAN_BOXED(0x03ccf24a,64,FLEN)
NAN_BOXED(0x03ccf24a,64,FLEN)
NAN_BOXED(0x03ccf24a,64,FLEN)
NAN_BOXED(0x03ccf24a,64,FLEN)
NAN_BOXED(0x03ccf24a,64,FLEN)
NAN_BOXED(0x00d38b08,64,FLEN)
NAN_BOXED(0x00d38b08,64,FLEN)
NAN_BOXED(0x00d38b08,64,FLEN)
NAN_BOXED(0x00d38b08,64,FLEN)
NAN_BOXED(0x00d38b08,64,FLEN)
NAN_BOXED(0x00d38b08,64,FLEN)
NAN_BOXED(0x00d38b08,64,FLEN)
NAN_BOXED(0x00d38b08,64,FLEN)
NAN_BOXED(0x00d38b08,64,FLEN)
NAN_BOXED(0x00d38b08,64,FLEN)
NAN_BOXED(0xb5ce45c0,64,FLEN)
NAN_BOXED(0xb5ce45c0,64,FLEN)
NAN_BOXED(0xb5ce45c0,64,FLEN)
NAN_BOXED(0xb5ce45c0,64,FLEN)
NAN_BOXED(0xb5ce45c0,64,FLEN)
NAN_BOXED(0xb5ce45c0,64,FLEN)
NAN_BOXED(0xb5ce45c0,64,FLEN)
NAN_BOXED(0xb5ce45c0,64,FLEN)
NAN_BOXED(0xb5ce45c0,64,FLEN)
NAN_BOXED(0xb5ce45c0,64,FLEN)
NAN_BOXED(0x482be294,64,FLEN)
NAN_BOXED(0x482be294,64,FLEN)
NAN_BOXED(0x482be294,64,FLEN)
NAN_BOXED(0x482be294,64,FLEN)
NAN_BOXED(0x482be294,64,FLEN)
NAN_BOXED(0x482be294,64,FLEN)
NAN_BOXED(0x482be294,64,FLEN)
NAN_BOXED(0x482be294,64,FLEN)
NAN_BOXED(0x482be294,64,FLEN)
NAN_BOXED(0x482be294,64,FLEN)
NAN_BOXED(0x76f4b104,64,FLEN)
NAN_BOXED(0x76f4b104,64,FLEN)
NAN_BOXED(0x76f4b104,64,FLEN)
NAN_BOXED(0x76f4b104,64,FLEN)
NAN_BOXED(0x76f4b104,64,FLEN)
NAN_BOXED(0x76f4b104,64,FLEN)
NAN_BOXED(0x76f4b104,64,FLEN)
NAN_BOXED(0x76f4b104,64,FLEN)
NAN_BOXED(0x76f4b104,64,FLEN)
NAN_BOXED(0x76f4b104,64,FLEN)
NAN_BOXED(0x0c33a9d0,64,FLEN)
NAN_BOXED(0x0c33a9d0,64,FLEN)
NAN_BOXED(0x0c33a9d0,64,FLEN)
NAN_BOXED(0x0c33a9d0,64,FLEN)
NAN_BOXED(0x0c33a9d0,64,FLEN)
NAN_BOXED(0x0c33a9d0,64,FLEN)
NAN_BOXED(0x0c33a9d0,64,FLEN)
NAN_BOXED(0x0c33a9d0,64,FLEN)
NAN_BOXED(0x0c33a9d0,64,FLEN)
NAN_BOXED(0x0c33a9d0,64,FLEN)
NAN_BOXED(0x7bfc8699,64,FLEN)
NAN_BOXED(0x7bfc8699,64,FLEN)
NAN_BOXED(0x7bfc8699,64,FLEN)
NAN_BOXED(0x7bfc8699,64,FLEN)
NAN_BOXED(0x7bfc8699,64,FLEN)
NAN_BOXED(0x7bfc8699,64,FLEN)
NAN_BOXED(0x7bfc8699,64,FLEN)
NAN_BOXED(0x7bfc8699,64,FLEN)
NAN_BOXED(0x7bfc8699,64,FLEN)
NAN_BOXED(0x7bfc8699,64,FLEN)
NAN_BOXED(0x79f643a2,64,FLEN)
NAN_BOXED(0x79f643a2,64,FLEN)
NAN_BOXED(0x79f643a2,64,FLEN)
NAN_BOXED(0x79f643a2,64,FLEN)
NAN_BOXED(0x79f643a2,64,FLEN)
NAN_BOXED(0x79f643a2,64,FLEN)
NAN_BOXED(0x79f643a2,64,FLEN)
NAN_BOXED(0x79f643a2,64,FLEN)
NAN_BOXED(0x79f643a2,64,FLEN)
NAN_BOXED(0x79f643a2,64,FLEN)
NAN_BOXED(0xb530144c,64,FLEN)
NAN_BOXED(0xb530144c,64,FLEN)
NAN_BOXED(0xb530144c,64,FLEN)
NAN_BOXED(0xb530144c,64,FLEN)
NAN_BOXED(0xb530144c,64,FLEN)
NAN_BOXED(0xb530144c,64,FLEN)
NAN_BOXED(0xb530144c,64,FLEN)
NAN_BOXED(0xb530144c,64,FLEN)
NAN_BOXED(0xb530144c,64,FLEN)
NAN_BOXED(0xb530144c,64,FLEN)
NAN_BOXED(0x5f3cf813,64,FLEN)
NAN_BOXED(0x5f3cf813,64,FLEN)
NAN_BOXED(0x5f3cf813,64,FLEN)
NAN_BOXED(0x5f3cf813,64,FLEN)
NAN_BOXED(0x5f3cf813,64,FLEN)
NAN_BOXED(0x5f3cf813,64,FLEN)
NAN_BOXED(0x5f3cf813,64,FLEN)
NAN_BOXED(0x5f3cf813,64,FLEN)
NAN_BOXED(0x5f3cf813,64,FLEN)
NAN_BOXED(0x5f3cf813,64,FLEN)
NAN_BOXED(0x6e697040,64,FLEN)
NAN_BOXED(0x6e697040,64,FLEN)
NAN_BOXED(0x6e697040,64,FLEN)
NAN_BOXED(0x6e697040,64,FLEN)
NAN_BOXED(0x6e697040,64,FLEN)
NAN_BOXED(0x6e697040,64,FLEN)
NAN_BOXED(0x6e697040,64,FLEN)
NAN_BOXED(0x6e697040,64,FLEN)
NAN_BOXED(0x6e697040,64,FLEN)
NAN_BOXED(0x6e697040,64,FLEN)
NAN_BOXED(0xa13eef5f,64,FLEN)
NAN_BOXED(0xa13eef5f,64,FLEN)
NAN_BOXED(0xa13eef5f,64,FLEN)
NAN_BOXED(0xa13eef5f,64,FLEN)
NAN_BOXED(0xa13eef5f,64,FLEN)
NAN_BOXED(0xa13eef5f,64,FLEN)
NAN_BOXED(0xa13eef5f,64,FLEN)
NAN_BOXED(0xa13eef5f,64,FLEN)
NAN_BOXED(0xa13eef5f,64,FLEN)
NAN_BOXED(0xa13eef5f,64,FLEN)
NAN_BOXED(0xde18fae1,64,FLEN)
NAN_BOXED(0xde18fae1,64,FLEN)
NAN_BOXED(0xde18fae1,64,FLEN)
NAN_BOXED(0xde18fae1,64,FLEN)
NAN_BOXED(0xde18fae1,64,FLEN)
NAN_BOXED(0xde18fae1,64,FLEN)
NAN_BOXED(0xde18fae1,64,FLEN)
NAN_BOXED(0xde18fae1,64,FLEN)
NAN_BOXED(0xde18fae1,64,FLEN)
NAN_BOXED(0xde18fae1,64,FLEN)
NAN_BOXED(0xd17d4c2d,64,FLEN)
NAN_BOXED(0xd17d4c2d,64,FLEN)
NAN_BOXED(0xd17d4c2d,64,FLEN)
NAN_BOXED(0xd17d4c2d,64,FLEN)
NAN_BOXED(0xd17d4c2d,64,FLEN)
NAN_BOXED(0xd17d4c2d,64,FLEN)
NAN_BOXED(0xd17d4c2d,64,FLEN)
NAN_BOXED(0xd17d4c2d,64,FLEN)
NAN_BOXED(0xd17d4c2d,64,FLEN)
NAN_BOXED(0xd17d4c2d,64,FLEN)
NAN_BOXED(0x50582f8d,64,FLEN)
NAN_BOXED(0x50582f8d,64,FLEN)
NAN_BOXED(0x50582f8d,64,FLEN)
NAN_BOXED(0x50582f8d,64,FLEN)
NAN_BOXED(0x50582f8d,64,FLEN)
NAN_BOXED(0x50582f8d,64,FLEN)
NAN_BOXED(0x50582f8d,64,FLEN)
NAN_BOXED(0x50582f8d,64,FLEN)
NAN_BOXED(0x50582f8d,64,FLEN)
NAN_BOXED(0x50582f8d,64,FLEN)
NAN_BOXED(0x7e25c484,64,FLEN)
NAN_BOXED(0x7e25c484,64,FLEN)
NAN_BOXED(0x7e25c484,64,FLEN)
NAN_BOXED(0x7e25c484,64,FLEN)
NAN_BOXED(0x7e25c484,64,FLEN)
NAN_BOXED(0x7e25c484,64,FLEN)
NAN_BOXED(0x7e25c484,64,FLEN)
NAN_BOXED(0x7e25c484,64,FLEN)
NAN_BOXED(0x7e25c484,64,FLEN)
NAN_BOXED(0x7e25c484,64,FLEN)
NAN_BOXED(0xd162bf56,64,FLEN)
NAN_BOXED(0xd162bf56,64,FLEN)
NAN_BOXED(0xd162bf56,64,FLEN)
NAN_BOXED(0xd162bf56,64,FLEN)
NAN_BOXED(0xd162bf56,64,FLEN)
NAN_BOXED(0xd162bf56,64,FLEN)
NAN_BOXED(0xd162bf56,64,FLEN)
NAN_BOXED(0xd162bf56,64,FLEN)
NAN_BOXED(0xd162bf56,64,FLEN)
NAN_BOXED(0xd162bf56,64,FLEN)
NAN_BOXED(0x42d7295a,64,FLEN)
NAN_BOXED(0x42d7295a,64,FLEN)
NAN_BOXED(0x42d7295a,64,FLEN)
NAN_BOXED(0x42d7295a,64,FLEN)
NAN_BOXED(0x42d7295a,64,FLEN)
NAN_BOXED(0x42d7295a,64,FLEN)
NAN_BOXED(0x42d7295a,64,FLEN)
NAN_BOXED(0x42d7295a,64,FLEN)
NAN_BOXED(0x42d7295a,64,FLEN)
NAN_BOXED(0x42d7295a,64,FLEN)
NAN_BOXED(0x0d8769c8,64,FLEN)
NAN_BOXED(0x0d8769c8,64,FLEN)
NAN_BOXED(0x0d8769c8,64,FLEN)
NAN_BOXED(0x0d8769c8,64,FLEN)
NAN_BOXED(0x0d8769c8,64,FLEN)
NAN_BOXED(0x0d8769c8,64,FLEN)
NAN_BOXED(0x0d8769c8,64,FLEN)
NAN_BOXED(0x0d8769c8,64,FLEN)
NAN_BOXED(0x0d8769c8,64,FLEN)
NAN_BOXED(0x0d8769c8,64,FLEN)
NAN_BOXED(0xcfd4aff0,64,FLEN)
NAN_BOXED(0xcfd4aff0,64,FLEN)
NAN_BOXED(0xcfd4aff0,64,FLEN)
NAN_BOXED(0xcfd4aff0,64,FLEN)
NAN_BOXED(0xcfd4aff0,64,FLEN)
NAN_BOXED(0xcfd4aff0,64,FLEN)
NAN_BOXED(0xcfd4aff0,64,FLEN)
NAN_BOXED(0xcfd4aff0,64,FLEN)
NAN_BOXED(0xcfd4aff0,64,FLEN)
NAN_BOXED(0xcfd4aff0,64,FLEN)
NAN_BOXED(0x85ec3276,64,FLEN)
NAN_BOXED(0x85ec3276,64,FLEN)
NAN_BOXED(0x85ec3276,64,FLEN)
NAN_BOXED(0x85ec3276,64,FLEN)
NAN_BOXED(0x85ec3276,64,FLEN)
NAN_BOXED(0x85ec3276,64,FLEN)
NAN_BOXED(0x85ec3276,64,FLEN)
NAN_BOXED(0x85ec3276,64,FLEN)
NAN_BOXED(0x85ec3276,64,FLEN)
NAN_BOXED(0x85ec3276,64,FLEN)
NAN_BOXED(0x6884cff0,64,FLEN)
NAN_BOXED(0x6884cff0,64,FLEN)
NAN_BOXED(0x6884cff0,64,FLEN)
NAN_BOXED(0x6884cff0,64,FLEN)
NAN_BOXED(0x6884cff0,64,FLEN)
NAN_BOXED(0x6884cff0,64,FLEN)
NAN_BOXED(0x6884cff0,64,FLEN)
NAN_BOXED(0x6884cff0,64,FLEN)
NAN_BOXED(0x6884cff0,64,FLEN)
NAN_BOXED(0x6884cff0,64,FLEN)
NAN_BOXED(0x44d167d8,64,FLEN)
NAN_BOXED(0x44d167d8,64,FLEN)
NAN_BOXED(0x44d167d8,64,FLEN)
NAN_BOXED(0x44d167d8,64,FLEN)
NAN_BOXED(0x44d167d8,64,FLEN)
NAN_BOXED(0x44d167d8,64,FLEN)
NAN_BOXED(0x44d167d8,64,FLEN)
NAN_BOXED(0x44d167d8,64,FLEN)
NAN_BOXED(0x44d167d8,64,FLEN)
NAN_BOXED(0x44d167d8,64,FLEN)
NAN_BOXED(0xd04f74da,64,FLEN)
NAN_BOXED(0xd04f74da,64,FLEN)
NAN_BOXED(0xd04f74da,64,FLEN)
NAN_BOXED(0xd04f74da,64,FLEN)
NAN_BOXED(0xd04f74da,64,FLEN)
NAN_BOXED(0xd04f74da,64,FLEN)
NAN_BOXED(0xd04f74da,64,FLEN)
NAN_BOXED(0xd04f74da,64,FLEN)
NAN_BOXED(0xd04f74da,64,FLEN)
NAN_BOXED(0xd04f74da,64,FLEN)
NAN_BOXED(0x1c0b4b1a,64,FLEN)
NAN_BOXED(0x1c0b4b1a,64,FLEN)
NAN_BOXED(0x1c0b4b1a,64,FLEN)
NAN_BOXED(0x1c0b4b1a,64,FLEN)
NAN_BOXED(0x1c0b4b1a,64,FLEN)
NAN_BOXED(0x1c0b4b1a,64,FLEN)
NAN_BOXED(0x1c0b4b1a,64,FLEN)
NAN_BOXED(0x1c0b4b1a,64,FLEN)
NAN_BOXED(0x1c0b4b1a,64,FLEN)
NAN_BOXED(0x1c0b4b1a,64,FLEN)
NAN_BOXED(0xd1529f20,64,FLEN)
NAN_BOXED(0xd1529f20,64,FLEN)
NAN_BOXED(0xd1529f20,64,FLEN)
NAN_BOXED(0xd1529f20,64,FLEN)
NAN_BOXED(0xd1529f20,64,FLEN)
NAN_BOXED(0xd1529f20,64,FLEN)
NAN_BOXED(0xd1529f20,64,FLEN)
NAN_BOXED(0xd1529f20,64,FLEN)
NAN_BOXED(0xd1529f20,64,FLEN)
NAN_BOXED(0xd1529f20,64,FLEN)
NAN_BOXED(0x4883ace8,64,FLEN)
NAN_BOXED(0x4883ace8,64,FLEN)
NAN_BOXED(0x4883ace8,64,FLEN)
NAN_BOXED(0x4883ace8,64,FLEN)
NAN_BOXED(0x4883ace8,64,FLEN)
NAN_BOXED(0x4883ace8,64,FLEN)
NAN_BOXED(0x4883ace8,64,FLEN)
NAN_BOXED(0x4883ace8,64,FLEN)
NAN_BOXED(0x4883ace8,64,FLEN)
NAN_BOXED(0x4883ace8,64,FLEN)
NAN_BOXED(0x527f683e,64,FLEN)
NAN_BOXED(0x527f683e,64,FLEN)
NAN_BOXED(0x527f683e,64,FLEN)
NAN_BOXED(0x527f683e,64,FLEN)
NAN_BOXED(0x527f683e,64,FLEN)
NAN_BOXED(0x527f683e,64,FLEN)
NAN_BOXED(0x527f683e,64,FLEN)
NAN_BOXED(0x527f683e,64,FLEN)
NAN_BOXED(0x527f683e,64,FLEN)
NAN_BOXED(0x527f683e,64,FLEN)
NAN_BOXED(0x77723858,64,FLEN)
NAN_BOXED(0x77723858,64,FLEN)
NAN_BOXED(0x77723858,64,FLEN)
NAN_BOXED(0x77723858,64,FLEN)
NAN_BOXED(0x77723858,64,FLEN)
NAN_BOXED(0x77723858,64,FLEN)
NAN_BOXED(0x77723858,64,FLEN)
NAN_BOXED(0x77723858,64,FLEN)
NAN_BOXED(0x77723858,64,FLEN)
NAN_BOXED(0x77723858,64,FLEN)
NAN_BOXED(0xeea66380,64,FLEN)
NAN_BOXED(0xeea66380,64,FLEN)
NAN_BOXED(0xeea66380,64,FLEN)
NAN_BOXED(0xeea66380,64,FLEN)
NAN_BOXED(0xeea66380,64,FLEN)
NAN_BOXED(0xeea66380,64,FLEN)
NAN_BOXED(0xeea66380,64,FLEN)
NAN_BOXED(0xeea66380,64,FLEN)
NAN_BOXED(0xeea66380,64,FLEN)
NAN_BOXED(0xeea66380,64,FLEN)
NAN_BOXED(0xff401648,64,FLEN)
NAN_BOXED(0xff401648,64,FLEN)
NAN_BOXED(0xff401648,64,FLEN)
NAN_BOXED(0xff401648,64,FLEN)
NAN_BOXED(0xff401648,64,FLEN)
NAN_BOXED(0xff401648,64,FLEN)
NAN_BOXED(0xff401648,64,FLEN)
NAN_BOXED(0xff401648,64,FLEN)
NAN_BOXED(0xff401648,64,FLEN)
NAN_BOXED(0xff401648,64,FLEN)
NAN_BOXED(0x87b6f506,64,FLEN)
NAN_BOXED(0x87b6f506,64,FLEN)
NAN_BOXED(0x87b6f506,64,FLEN)
NAN_BOXED(0x87b6f506,64,FLEN)
NAN_BOXED(0x87b6f506,64,FLEN)
NAN_BOXED(0x87b6f506,64,FLEN)
NAN_BOXED(0x87b6f506,64,FLEN)
NAN_BOXED(0x87b6f506,64,FLEN)
NAN_BOXED(0x87b6f506,64,FLEN)
NAN_BOXED(0x87b6f506,64,FLEN)
NAN_BOXED(0x8766ff7c,64,FLEN)
NAN_BOXED(0x8766ff7c,64,FLEN)
NAN_BOXED(0x8766ff7c,64,FLEN)
NAN_BOXED(0x8766ff7c,64,FLEN)
NAN_BOXED(0x8766ff7c,64,FLEN)
NAN_BOXED(0x8766ff7c,64,FLEN)
NAN_BOXED(0x8766ff7c,64,FLEN)
NAN_BOXED(0x8766ff7c,64,FLEN)
NAN_BOXED(0x8766ff7c,64,FLEN)
NAN_BOXED(0x8766ff7c,64,FLEN)
NAN_BOXED(0xca8e6e80,64,FLEN)
NAN_BOXED(0xca8e6e80,64,FLEN)
NAN_BOXED(0xca8e6e80,64,FLEN)
NAN_BOXED(0xca8e6e80,64,FLEN)
NAN_BOXED(0xca8e6e80,64,FLEN)
NAN_BOXED(0xca8e6e80,64,FLEN)
NAN_BOXED(0xca8e6e80,64,FLEN)
NAN_BOXED(0xca8e6e80,64,FLEN)
NAN_BOXED(0xca8e6e80,64,FLEN)
NAN_BOXED(0xca8e6e80,64,FLEN)
NAN_BOXED(0x1ef67ed0,64,FLEN)
NAN_BOXED(0x1ef67ed0,64,FLEN)
NAN_BOXED(0x1ef67ed0,64,FLEN)
NAN_BOXED(0x1ef67ed0,64,FLEN)
NAN_BOXED(0x1ef67ed0,64,FLEN)
NAN_BOXED(0x1ef67ed0,64,FLEN)
NAN_BOXED(0x1ef67ed0,64,FLEN)
NAN_BOXED(0x1ef67ed0,64,FLEN)
NAN_BOXED(0x1ef67ed0,64,FLEN)
NAN_BOXED(0x1ef67ed0,64,FLEN)
NAN_BOXED(0xb913f21d,64,FLEN)
NAN_BOXED(0xb913f21d,64,FLEN)
NAN_BOXED(0xb913f21d,64,FLEN)
NAN_BOXED(0xb913f21d,64,FLEN)
NAN_BOXED(0xb913f21d,64,FLEN)
NAN_BOXED(0xb913f21d,64,FLEN)
NAN_BOXED(0xb913f21d,64,FLEN)
NAN_BOXED(0xb913f21d,64,FLEN)
NAN_BOXED(0xb913f21d,64,FLEN)
NAN_BOXED(0xb913f21d,64,FLEN)
NAN_BOXED(0x12c4bb2b,64,FLEN)
NAN_BOXED(0x12c4bb2b,64,FLEN)
NAN_BOXED(0x12c4bb2b,64,FLEN)
NAN_BOXED(0x12c4bb2b,64,FLEN)
NAN_BOXED(0x12c4bb2b,64,FLEN)
NAN_BOXED(0x12c4bb2b,64,FLEN)
NAN_BOXED(0x12c4bb2b,64,FLEN)
NAN_BOXED(0x12c4bb2b,64,FLEN)
NAN_BOXED(0x12c4bb2b,64,FLEN)
NAN_BOXED(0x12c4bb2b,64,FLEN)
NAN_BOXED(0x522bb3ea,64,FLEN)
NAN_BOXED(0x522bb3ea,64,FLEN)
NAN_BOXED(0x522bb3ea,64,FLEN)
NAN_BOXED(0x522bb3ea,64,FLEN)
NAN_BOXED(0x522bb3ea,64,FLEN)
NAN_BOXED(0x522bb3ea,64,FLEN)
NAN_BOXED(0x522bb3ea,64,FLEN)
NAN_BOXED(0x522bb3ea,64,FLEN)
NAN_BOXED(0x522bb3ea,64,FLEN)
NAN_BOXED(0x522bb3ea,64,FLEN)
NAN_BOXED(0x04a86308,64,FLEN)
NAN_BOXED(0x04a86308,64,FLEN)
NAN_BOXED(0x04a86308,64,FLEN)
NAN_BOXED(0x04a86308,64,FLEN)
NAN_BOXED(0x04a86308,64,FLEN)
NAN_BOXED(0x04a86308,64,FLEN)
NAN_BOXED(0x04a86308,64,FLEN)
NAN_BOXED(0x04a86308,64,FLEN)
NAN_BOXED(0x04a86308,64,FLEN)
NAN_BOXED(0x04a86308,64,FLEN)
NAN_BOXED(0xbf90bdaf,64,FLEN)
NAN_BOXED(0xbf90bdaf,64,FLEN)
NAN_BOXED(0xbf90bdaf,64,FLEN)
NAN_BOXED(0xbf90bdaf,64,FLEN)
NAN_BOXED(0xbf90bdaf,64,FLEN)
NAN_BOXED(0xbf90bdaf,64,FLEN)
NAN_BOXED(0xbf90bdaf,64,FLEN)
NAN_BOXED(0xbf90bdaf,64,FLEN)
NAN_BOXED(0xbf90bdaf,64,FLEN)
NAN_BOXED(0xbf90bdaf,64,FLEN)
NAN_BOXED(0xf09a3c90,64,FLEN)
NAN_BOXED(0xf09a3c90,64,FLEN)
NAN_BOXED(0xf09a3c90,64,FLEN)
NAN_BOXED(0xf09a3c90,64,FLEN)
NAN_BOXED(0xf09a3c90,64,FLEN)
NAN_BOXED(0xf09a3c90,64,FLEN)
NAN_BOXED(0xf09a3c90,64,FLEN)
NAN_BOXED(0xf09a3c90,64,FLEN)
NAN_BOXED(0xf09a3c90,64,FLEN)
NAN_BOXED(0xf09a3c90,64,FLEN)
NAN_BOXED(0xf33be81c,64,FLEN)
NAN_BOXED(0xf33be81c,64,FLEN)
NAN_BOXED(0xf33be81c,64,FLEN)
NAN_BOXED(0xf33be81c,64,FLEN)
NAN_BOXED(0xf33be81c,64,FLEN)
NAN_BOXED(0xf33be81c,64,FLEN)
NAN_BOXED(0xf33be81c,64,FLEN)
NAN_BOXED(0xf33be81c,64,FLEN)
NAN_BOXED(0xf33be81c,64,FLEN)
NAN_BOXED(0xf33be81c,64,FLEN)
NAN_BOXED(0x5f80b100,64,FLEN)
NAN_BOXED(0x5f80b100,64,FLEN)
NAN_BOXED(0x5f80b100,64,FLEN)
NAN_BOXED(0x5f80b100,64,FLEN)
NAN_BOXED(0x5f80b100,64,FLEN)
NAN_BOXED(0x5f80b100,64,FLEN)
NAN_BOXED(0x5f80b100,64,FLEN)
NAN_BOXED(0x5f80b100,64,FLEN)
NAN_BOXED(0x5f80b100,64,FLEN)
NAN_BOXED(0x5f80b100,64,FLEN)
NAN_BOXED(0xac04a3c4,64,FLEN)
NAN_BOXED(0xac04a3c4,64,FLEN)
NAN_BOXED(0xac04a3c4,64,FLEN)
NAN_BOXED(0xac04a3c4,64,FLEN)
NAN_BOXED(0xac04a3c4,64,FLEN)
NAN_BOXED(0xac04a3c4,64,FLEN)
NAN_BOXED(0xac04a3c4,64,FLEN)
NAN_BOXED(0xac04a3c4,64,FLEN)
NAN_BOXED(0xac04a3c4,64,FLEN)
NAN_BOXED(0xac04a3c4,64,FLEN)
NAN_BOXED(0x46a8e04a,64,FLEN)
NAN_BOXED(0x46a8e04a,64,FLEN)
NAN_BOXED(0x46a8e04a,64,FLEN)
NAN_BOXED(0x46a8e04a,64,FLEN)
NAN_BOXED(0x46a8e04a,64,FLEN)
NAN_BOXED(0x46a8e04a,64,FLEN)
NAN_BOXED(0x46a8e04a,64,FLEN)
NAN_BOXED(0x46a8e04a,64,FLEN)
NAN_BOXED(0x46a8e04a,64,FLEN)
NAN_BOXED(0x46a8e04a,64,FLEN)
NAN_BOXED(0xbb04ccc0,64,FLEN)
NAN_BOXED(0xbb04ccc0,64,FLEN)
NAN_BOXED(0xbb04ccc0,64,FLEN)
NAN_BOXED(0xbb04ccc0,64,FLEN)
NAN_BOXED(0xbb04ccc0,64,FLEN)
NAN_BOXED(0xbb04ccc0,64,FLEN)
NAN_BOXED(0xbb04ccc0,64,FLEN)
NAN_BOXED(0xbb04ccc0,64,FLEN)
NAN_BOXED(0xbb04ccc0,64,FLEN)
NAN_BOXED(0xbb04ccc0,64,FLEN)
NAN_BOXED(0x537bee0a,64,FLEN)
NAN_BOXED(0x537bee0a,64,FLEN)
NAN_BOXED(0x537bee0a,64,FLEN)
NAN_BOXED(0x537bee0a,64,FLEN)
NAN_BOXED(0x537bee0a,64,FLEN)
NAN_BOXED(0x537bee0a,64,FLEN)
NAN_BOXED(0x537bee0a,64,FLEN)
NAN_BOXED(0x537bee0a,64,FLEN)
NAN_BOXED(0x537bee0a,64,FLEN)
NAN_BOXED(0x537bee0a,64,FLEN)
NAN_BOXED(0x81168960,64,FLEN)
NAN_BOXED(0x81168960,64,FLEN)
NAN_BOXED(0x81168960,64,FLEN)
NAN_BOXED(0x81168960,64,FLEN)
NAN_BOXED(0x81168960,64,FLEN)
NAN_BOXED(0x81168960,64,FLEN)
NAN_BOXED(0x81168960,64,FLEN)
NAN_BOXED(0x81168960,64,FLEN)
NAN_BOXED(0x81168960,64,FLEN)
NAN_BOXED(0x81168960,64,FLEN)
NAN_BOXED(0xacc4d745,64,FLEN)
NAN_BOXED(0xacc4d745,64,FLEN)
NAN_BOXED(0xacc4d745,64,FLEN)
NAN_BOXED(0xacc4d745,64,FLEN)
NAN_BOXED(0xacc4d745,64,FLEN)
NAN_BOXED(0xacc4d745,64,FLEN)
NAN_BOXED(0xacc4d745,64,FLEN)
NAN_BOXED(0xacc4d745,64,FLEN)
NAN_BOXED(0xacc4d745,64,FLEN)
NAN_BOXED(0xacc4d745,64,FLEN)
NAN_BOXED(0x0e3b4592,64,FLEN)
NAN_BOXED(0x0e3b4592,64,FLEN)
NAN_BOXED(0x0e3b4592,64,FLEN)
NAN_BOXED(0x0e3b4592,64,FLEN)
NAN_BOXED(0x0e3b4592,64,FLEN)
NAN_BOXED(0x0e3b4592,64,FLEN)
NAN_BOXED(0x0e3b4592,64,FLEN)
NAN_BOXED(0x0e3b4592,64,FLEN)
NAN_BOXED(0x0e3b4592,64,FLEN)
NAN_BOXED(0x0e3b4592,64,FLEN)
NAN_BOXED(0x3f9b91d5,64,FLEN)
NAN_BOXED(0x3f9b91d5,64,FLEN)
NAN_BOXED(0x3f9b91d5,64,FLEN)
NAN_BOXED(0x3f9b91d5,64,FLEN)
NAN_BOXED(0x3f9b91d5,64,FLEN)
NAN_BOXED(0x3f9b91d5,64,FLEN)
NAN_BOXED(0x3f9b91d5,64,FLEN)
NAN_BOXED(0x3f9b91d5,64,FLEN)
NAN_BOXED(0x3f9b91d5,64,FLEN)
NAN_BOXED(0x3f9b91d5,64,FLEN)
NAN_BOXED(0x95ae726e,64,FLEN)
NAN_BOXED(0x95ae726e,64,FLEN)
NAN_BOXED(0x95ae726e,64,FLEN)
NAN_BOXED(0x95ae726e,64,FLEN)
NAN_BOXED(0x95ae726e,64,FLEN)
NAN_BOXED(0x95ae726e,64,FLEN)
NAN_BOXED(0x95ae726e,64,FLEN)
NAN_BOXED(0x95ae726e,64,FLEN)
NAN_BOXED(0x95ae726e,64,FLEN)
NAN_BOXED(0x95ae726e,64,FLEN)
NAN_BOXED(0x18d8cad5,64,FLEN)
NAN_BOXED(0x18d8cad5,64,FLEN)
NAN_BOXED(0x18d8cad5,64,FLEN)
NAN_BOXED(0x18d8cad5,64,FLEN)
NAN_BOXED(0x18d8cad5,64,FLEN)
NAN_BOXED(0x18d8cad5,64,FLEN)
NAN_BOXED(0x18d8cad5,64,FLEN)
NAN_BOXED(0x18d8cad5,64,FLEN)
NAN_BOXED(0x18d8cad5,64,FLEN)
NAN_BOXED(0x18d8cad5,64,FLEN)
NAN_BOXED(0x86431094,64,FLEN)
NAN_BOXED(0x86431094,64,FLEN)
NAN_BOXED(0x86431094,64,FLEN)
NAN_BOXED(0x86431094,64,FLEN)
NAN_BOXED(0x86431094,64,FLEN)
NAN_BOXED(0x86431094,64,FLEN)
NAN_BOXED(0x86431094,64,FLEN)
NAN_BOXED(0x86431094,64,FLEN)
NAN_BOXED(0x86431094,64,FLEN)
NAN_BOXED(0x86431094,64,FLEN)
NAN_BOXED(0xf31e942f,64,FLEN)
NAN_BOXED(0xf31e942f,64,FLEN)
NAN_BOXED(0xf31e942f,64,FLEN)
NAN_BOXED(0xf31e942f,64,FLEN)
NAN_BOXED(0xf31e942f,64,FLEN)
NAN_BOXED(0xf31e942f,64,FLEN)
NAN_BOXED(0xf31e942f,64,FLEN)
NAN_BOXED(0xf31e942f,64,FLEN)
NAN_BOXED(0xf31e942f,64,FLEN)
NAN_BOXED(0xf31e942f,64,FLEN)
NAN_BOXED(0x5da8b9ff,64,FLEN)
NAN_BOXED(0x5da8b9ff,64,FLEN)
NAN_BOXED(0x5da8b9ff,64,FLEN)
NAN_BOXED(0x5da8b9ff,64,FLEN)
NAN_BOXED(0x5da8b9ff,64,FLEN)
NAN_BOXED(0x5da8b9ff,64,FLEN)
NAN_BOXED(0x5da8b9ff,64,FLEN)
NAN_BOXED(0x5da8b9ff,64,FLEN)
NAN_BOXED(0x5da8b9ff,64,FLEN)
NAN_BOXED(0x5da8b9ff,64,FLEN)
NAN_BOXED(0xf73b72c5,64,FLEN)
NAN_BOXED(0xf73b72c5,64,FLEN)
NAN_BOXED(0xf73b72c5,64,FLEN)
NAN_BOXED(0xf73b72c5,64,FLEN)
NAN_BOXED(0xf73b72c5,64,FLEN)
NAN_BOXED(0xf73b72c5,64,FLEN)
NAN_BOXED(0xf73b72c5,64,FLEN)
NAN_BOXED(0xf73b72c5,64,FLEN)
NAN_BOXED(0xf73b72c5,64,FLEN)
NAN_BOXED(0xf73b72c5,64,FLEN)
NAN_BOXED(0x2cb64ab2,64,FLEN)
NAN_BOXED(0x2cb64ab2,64,FLEN)
NAN_BOXED(0x2cb64ab2,64,FLEN)
NAN_BOXED(0x2cb64ab2,64,FLEN)
NAN_BOXED(0x2cb64ab2,64,FLEN)
NAN_BOXED(0x2cb64ab2,64,FLEN)
NAN_BOXED(0x2cb64ab2,64,FLEN)
NAN_BOXED(0x2cb64ab2,64,FLEN)
NAN_BOXED(0x2cb64ab2,64,FLEN)
NAN_BOXED(0x2cb64ab2,64,FLEN)
NAN_BOXED(0x2fc76fb8,64,FLEN)
NAN_BOXED(0x2fc76fb8,64,FLEN)
NAN_BOXED(0x2fc76fb8,64,FLEN)
NAN_BOXED(0x2fc76fb8,64,FLEN)
NAN_BOXED(0x2fc76fb8,64,FLEN)
NAN_BOXED(0x2fc76fb8,64,FLEN)
NAN_BOXED(0x2fc76fb8,64,FLEN)
NAN_BOXED(0x2fc76fb8,64,FLEN)
NAN_BOXED(0x2fc76fb8,64,FLEN)
NAN_BOXED(0x2fc76fb8,64,FLEN)
NAN_BOXED(0x6cfd80ca,64,FLEN)
NAN_BOXED(0x6cfd80ca,64,FLEN)
NAN_BOXED(0x6cfd80ca,64,FLEN)
NAN_BOXED(0x6cfd80ca,64,FLEN)
NAN_BOXED(0x6cfd80ca,64,FLEN)
NAN_BOXED(0x6cfd80ca,64,FLEN)
NAN_BOXED(0x6cfd80ca,64,FLEN)
NAN_BOXED(0x6cfd80ca,64,FLEN)
NAN_BOXED(0x6cfd80ca,64,FLEN)
NAN_BOXED(0x6cfd80ca,64,FLEN)
NAN_BOXED(0x0e02fb81,64,FLEN)
NAN_BOXED(0x0e02fb81,64,FLEN)
NAN_BOXED(0x0e02fb81,64,FLEN)
NAN_BOXED(0x0e02fb81,64,FLEN)
NAN_BOXED(0x0e02fb81,64,FLEN)
NAN_BOXED(0x0e02fb81,64,FLEN)
NAN_BOXED(0x0e02fb81,64,FLEN)
NAN_BOXED(0x0e02fb81,64,FLEN)
NAN_BOXED(0x0e02fb81,64,FLEN)
NAN_BOXED(0x0e02fb81,64,FLEN)
NAN_BOXED(0x0d6f9e6a,64,FLEN)
NAN_BOXED(0x0d6f9e6a,64,FLEN)
NAN_BOXED(0x0d6f9e6a,64,FLEN)
NAN_BOXED(0x0d6f9e6a,64,FLEN)
NAN_BOXED(0x0d6f9e6a,64,FLEN)
NAN_BOXED(0x0d6f9e6a,64,FLEN)
NAN_BOXED(0x0d6f9e6a,64,FLEN)
NAN_BOXED(0x0d6f9e6a,64,FLEN)
NAN_BOXED(0x0d6f9e6a,64,FLEN)
NAN_BOXED(0x0d6f9e6a,64,FLEN)
NAN_BOXED(0x4cf6dab0,64,FLEN)
NAN_BOXED(0x4cf6dab0,64,FLEN)
NAN_BOXED(0x4cf6dab0,64,FLEN)
NAN_BOXED(0x4cf6dab0,64,FLEN)
NAN_BOXED(0x4cf6dab0,64,FLEN)
NAN_BOXED(0x4cf6dab0,64,FLEN)
NAN_BOXED(0x4cf6dab0,64,FLEN)
NAN_BOXED(0x4cf6dab0,64,FLEN)
NAN_BOXED(0x4cf6dab0,64,FLEN)
NAN_BOXED(0x4cf6dab0,64,FLEN)
NAN_BOXED(0x6394dbf5,64,FLEN)
NAN_BOXED(0x6394dbf5,64,FLEN)
NAN_BOXED(0x6394dbf5,64,FLEN)
NAN_BOXED(0x6394dbf5,64,FLEN)
NAN_BOXED(0x6394dbf5,64,FLEN)
NAN_BOXED(0x6394dbf5,64,FLEN)
NAN_BOXED(0x6394dbf5,64,FLEN)
NAN_BOXED(0x6394dbf5,64,FLEN)
NAN_BOXED(0x6394dbf5,64,FLEN)
NAN_BOXED(0x6394dbf5,64,FLEN)
NAN_BOXED(0x828dadb2,64,FLEN)
NAN_BOXED(0x828dadb2,64,FLEN)
NAN_BOXED(0x828dadb2,64,FLEN)
NAN_BOXED(0x828dadb2,64,FLEN)
NAN_BOXED(0x828dadb2,64,FLEN)
NAN_BOXED(0x828dadb2,64,FLEN)
NAN_BOXED(0x828dadb2,64,FLEN)
NAN_BOXED(0x828dadb2,64,FLEN)
NAN_BOXED(0x828dadb2,64,FLEN)
NAN_BOXED(0x828dadb2,64,FLEN)
NAN_BOXED(0xd394bd65,64,FLEN)
NAN_BOXED(0xd394bd65,64,FLEN)
NAN_BOXED(0xd394bd65,64,FLEN)
NAN_BOXED(0xd394bd65,64,FLEN)
NAN_BOXED(0xd394bd65,64,FLEN)
NAN_BOXED(0xd394bd65,64,FLEN)
NAN_BOXED(0xd394bd65,64,FLEN)
NAN_BOXED(0xd394bd65,64,FLEN)
NAN_BOXED(0xd394bd65,64,FLEN)
NAN_BOXED(0xd394bd65,64,FLEN)
NAN_BOXED(0xc18c7260,64,FLEN)
NAN_BOXED(0xc18c7260,64,FLEN)
NAN_BOXED(0xc18c7260,64,FLEN)
NAN_BOXED(0xc18c7260,64,FLEN)
NAN_BOXED(0xc18c7260,64,FLEN)
NAN_BOXED(0xc18c7260,64,FLEN)
NAN_BOXED(0xc18c7260,64,FLEN)
NAN_BOXED(0xc18c7260,64,FLEN)
NAN_BOXED(0xc18c7260,64,FLEN)
NAN_BOXED(0xc18c7260,64,FLEN)
NAN_BOXED(0x917250d4,64,FLEN)
NAN_BOXED(0x917250d4,64,FLEN)
NAN_BOXED(0x917250d4,64,FLEN)
NAN_BOXED(0x917250d4,64,FLEN)
NAN_BOXED(0x917250d4,64,FLEN)
NAN_BOXED(0x917250d4,64,FLEN)
NAN_BOXED(0x917250d4,64,FLEN)
NAN_BOXED(0x917250d4,64,FLEN)
NAN_BOXED(0x917250d4,64,FLEN)
NAN_BOXED(0x917250d4,64,FLEN)
NAN_BOXED(0xef521850,64,FLEN)
NAN_BOXED(0xef521850,64,FLEN)
NAN_BOXED(0xef521850,64,FLEN)
NAN_BOXED(0xef521850,64,FLEN)
NAN_BOXED(0xef521850,64,FLEN)
NAN_BOXED(0xef521850,64,FLEN)
NAN_BOXED(0xef521850,64,FLEN)
NAN_BOXED(0xef521850,64,FLEN)
NAN_BOXED(0xef521850,64,FLEN)
NAN_BOXED(0xef521850,64,FLEN)
NAN_BOXED(0xe3974a78,64,FLEN)
NAN_BOXED(0xe3974a78,64,FLEN)
NAN_BOXED(0xe3974a78,64,FLEN)
NAN_BOXED(0xe3974a78,64,FLEN)
NAN_BOXED(0xe3974a78,64,FLEN)
NAN_BOXED(0xe3974a78,64,FLEN)
NAN_BOXED(0xe3974a78,64,FLEN)
NAN_BOXED(0xe3974a78,64,FLEN)
NAN_BOXED(0xe3974a78,64,FLEN)
NAN_BOXED(0xe3974a78,64,FLEN)
NAN_BOXED(0xb001dc4e,64,FLEN)
NAN_BOXED(0xb001dc4e,64,FLEN)
NAN_BOXED(0xb001dc4e,64,FLEN)
NAN_BOXED(0xb001dc4e,64,FLEN)
NAN_BOXED(0xb001dc4e,64,FLEN)
NAN_BOXED(0xb001dc4e,64,FLEN)
NAN_BOXED(0xb001dc4e,64,FLEN)
NAN_BOXED(0xb001dc4e,64,FLEN)
NAN_BOXED(0xb001dc4e,64,FLEN)
NAN_BOXED(0xb001dc4e,64,FLEN)
NAN_BOXED(0x79009dd0,64,FLEN)
NAN_BOXED(0x79009dd0,64,FLEN)
NAN_BOXED(0x79009dd0,64,FLEN)
NAN_BOXED(0x79009dd0,64,FLEN)
NAN_BOXED(0x79009dd0,64,FLEN)
NAN_BOXED(0x79009dd0,64,FLEN)
NAN_BOXED(0x79009dd0,64,FLEN)
NAN_BOXED(0x79009dd0,64,FLEN)
NAN_BOXED(0x79009dd0,64,FLEN)
NAN_BOXED(0x79009dd0,64,FLEN)
NAN_BOXED(0xb08cab90,64,FLEN)
NAN_BOXED(0xb08cab90,64,FLEN)
NAN_BOXED(0xb08cab90,64,FLEN)
NAN_BOXED(0xb08cab90,64,FLEN)
NAN_BOXED(0xb08cab90,64,FLEN)
NAN_BOXED(0xb08cab90,64,FLEN)
NAN_BOXED(0xb08cab90,64,FLEN)
NAN_BOXED(0xb08cab90,64,FLEN)
NAN_BOXED(0xb08cab90,64,FLEN)
NAN_BOXED(0xb08cab90,64,FLEN)
NAN_BOXED(0x492d78d7,64,FLEN)
NAN_BOXED(0x492d78d7,64,FLEN)
NAN_BOXED(0x492d78d7,64,FLEN)
NAN_BOXED(0x492d78d7,64,FLEN)
NAN_BOXED(0x492d78d7,64,FLEN)
NAN_BOXED(0x492d78d7,64,FLEN)
NAN_BOXED(0x492d78d7,64,FLEN)
NAN_BOXED(0x492d78d7,64,FLEN)
NAN_BOXED(0x492d78d7,64,FLEN)
NAN_BOXED(0x492d78d7,64,FLEN)
NAN_BOXED(0xf5d0d198,64,FLEN)
NAN_BOXED(0xf5d0d198,64,FLEN)
NAN_BOXED(0xf5d0d198,64,FLEN)
NAN_BOXED(0xf5d0d198,64,FLEN)
NAN_BOXED(0xf5d0d198,64,FLEN)
NAN_BOXED(0xf5d0d198,64,FLEN)
NAN_BOXED(0xf5d0d198,64,FLEN)
NAN_BOXED(0xf5d0d198,64,FLEN)
NAN_BOXED(0xf5d0d198,64,FLEN)
NAN_BOXED(0xf5d0d198,64,FLEN)
NAN_BOXED(0xa9e64a40,64,FLEN)
NAN_BOXED(0xa9e64a40,64,FLEN)
NAN_BOXED(0xa9e64a40,64,FLEN)
NAN_BOXED(0xa9e64a40,64,FLEN)
NAN_BOXED(0xa9e64a40,64,FLEN)
NAN_BOXED(0xa9e64a40,64,FLEN)
NAN_BOXED(0xa9e64a40,64,FLEN)
NAN_BOXED(0xa9e64a40,64,FLEN)
NAN_BOXED(0xa9e64a40,64,FLEN)
NAN_BOXED(0xa9e64a40,64,FLEN)
NAN_BOXED(0x9596f383,64,FLEN)
NAN_BOXED(0x9596f383,64,FLEN)
NAN_BOXED(0x9596f383,64,FLEN)
NAN_BOXED(0x9596f383,64,FLEN)
NAN_BOXED(0x9596f383,64,FLEN)
NAN_BOXED(0x9596f383,64,FLEN)
NAN_BOXED(0x9596f383,64,FLEN)
NAN_BOXED(0x9596f383,64,FLEN)
NAN_BOXED(0x9596f383,64,FLEN)
NAN_BOXED(0x9596f383,64,FLEN)
NAN_BOXED(0xe9ef9858,64,FLEN)
NAN_BOXED(0xe9ef9858,64,FLEN)
NAN_BOXED(0xe9ef9858,64,FLEN)
NAN_BOXED(0xe9ef9858,64,FLEN)
NAN_BOXED(0xe9ef9858,64,FLEN)
NAN_BOXED(0xe9ef9858,64,FLEN)
NAN_BOXED(0xe9ef9858,64,FLEN)
NAN_BOXED(0xe9ef9858,64,FLEN)
NAN_BOXED(0xe9ef9858,64,FLEN)
NAN_BOXED(0xe9ef9858,64,FLEN)
NAN_BOXED(0x8a595902,64,FLEN)
NAN_BOXED(0x8a595902,64,FLEN)
NAN_BOXED(0x8a595902,64,FLEN)
NAN_BOXED(0x8a595902,64,FLEN)
NAN_BOXED(0x8a595902,64,FLEN)
NAN_BOXED(0x8a595902,64,FLEN)
NAN_BOXED(0x8a595902,64,FLEN)
NAN_BOXED(0x8a595902,64,FLEN)
NAN_BOXED(0x8a595902,64,FLEN)
NAN_BOXED(0x8a595902,64,FLEN)
NAN_BOXED(0xd0ccdb01,64,FLEN)
NAN_BOXED(0xd0ccdb01,64,FLEN)
NAN_BOXED(0xd0ccdb01,64,FLEN)
NAN_BOXED(0xd0ccdb01,64,FLEN)
NAN_BOXED(0xd0ccdb01,64,FLEN)
NAN_BOXED(0xd0ccdb01,64,FLEN)
NAN_BOXED(0xd0ccdb01,64,FLEN)
NAN_BOXED(0xd0ccdb01,64,FLEN)
NAN_BOXED(0xd0ccdb01,64,FLEN)
NAN_BOXED(0xd0ccdb01,64,FLEN)
NAN_BOXED(0xd15a0db8,64,FLEN)
NAN_BOXED(0xd15a0db8,64,FLEN)
NAN_BOXED(0xd15a0db8,64,FLEN)
NAN_BOXED(0xd15a0db8,64,FLEN)
NAN_BOXED(0xd15a0db8,64,FLEN)
NAN_BOXED(0xd15a0db8,64,FLEN)
NAN_BOXED(0xd15a0db8,64,FLEN)
NAN_BOXED(0xd15a0db8,64,FLEN)
NAN_BOXED(0xd15a0db8,64,FLEN)
NAN_BOXED(0xd15a0db8,64,FLEN)
NAN_BOXED(0xaf7a5fbe,64,FLEN)
NAN_BOXED(0xaf7a5fbe,64,FLEN)
NAN_BOXED(0xaf7a5fbe,64,FLEN)
NAN_BOXED(0xaf7a5fbe,64,FLEN)
NAN_BOXED(0xaf7a5fbe,64,FLEN)
NAN_BOXED(0xaf7a5fbe,64,FLEN)
NAN_BOXED(0xaf7a5fbe,64,FLEN)
NAN_BOXED(0xaf7a5fbe,64,FLEN)
NAN_BOXED(0xaf7a5fbe,64,FLEN)
NAN_BOXED(0xaf7a5fbe,64,FLEN)
NAN_BOXED(0xbcf6e341,64,FLEN)
NAN_BOXED(0xbcf6e341,64,FLEN)
NAN_BOXED(0xbcf6e341,64,FLEN)
NAN_BOXED(0xbcf6e341,64,FLEN)
NAN_BOXED(0xbcf6e341,64,FLEN)
NAN_BOXED(0xbcf6e341,64,FLEN)
NAN_BOXED(0xbcf6e341,64,FLEN)
NAN_BOXED(0xbcf6e341,64,FLEN)
NAN_BOXED(0xbcf6e341,64,FLEN)
NAN_BOXED(0xbcf6e341,64,FLEN)
NAN_BOXED(0x5c8d6933,64,FLEN)
NAN_BOXED(0x5c8d6933,64,FLEN)
NAN_BOXED(0x5c8d6933,64,FLEN)
NAN_BOXED(0x5c8d6933,64,FLEN)
NAN_BOXED(0x5c8d6933,64,FLEN)
NAN_BOXED(0x5c8d6933,64,FLEN)
NAN_BOXED(0x5c8d6933,64,FLEN)
NAN_BOXED(0x5c8d6933,64,FLEN)
NAN_BOXED(0x5c8d6933,64,FLEN)
NAN_BOXED(0x5c8d6933,64,FLEN)
NAN_BOXED(0xe88674b0,64,FLEN)
NAN_BOXED(0xe88674b0,64,FLEN)
NAN_BOXED(0xe88674b0,64,FLEN)
NAN_BOXED(0xe88674b0,64,FLEN)
NAN_BOXED(0xe88674b0,64,FLEN)
NAN_BOXED(0xe88674b0,64,FLEN)
NAN_BOXED(0xe88674b0,64,FLEN)
NAN_BOXED(0xe88674b0,64,FLEN)
NAN_BOXED(0xe88674b0,64,FLEN)
NAN_BOXED(0xe88674b0,64,FLEN)
NAN_BOXED(0x283c4340,64,FLEN)
NAN_BOXED(0x283c4340,64,FLEN)
NAN_BOXED(0x283c4340,64,FLEN)
NAN_BOXED(0x283c4340,64,FLEN)
NAN_BOXED(0x283c4340,64,FLEN)
NAN_BOXED(0x283c4340,64,FLEN)
NAN_BOXED(0x283c4340,64,FLEN)
NAN_BOXED(0x283c4340,64,FLEN)
NAN_BOXED(0x283c4340,64,FLEN)
NAN_BOXED(0x283c4340,64,FLEN)
NAN_BOXED(0x6f0bd0d0,64,FLEN)
NAN_BOXED(0x6f0bd0d0,64,FLEN)
NAN_BOXED(0x6f0bd0d0,64,FLEN)
NAN_BOXED(0x6f0bd0d0,64,FLEN)
NAN_BOXED(0x6f0bd0d0,64,FLEN)
NAN_BOXED(0x6f0bd0d0,64,FLEN)
NAN_BOXED(0x6f0bd0d0,64,FLEN)
NAN_BOXED(0x6f0bd0d0,64,FLEN)
NAN_BOXED(0x6f0bd0d0,64,FLEN)
NAN_BOXED(0x6f0bd0d0,64,FLEN)
NAN_BOXED(0x5f465aee,64,FLEN)
NAN_BOXED(0x5f465aee,64,FLEN)
NAN_BOXED(0x5f465aee,64,FLEN)
NAN_BOXED(0x5f465aee,64,FLEN)
NAN_BOXED(0x5f465aee,64,FLEN)
NAN_BOXED(0x5f465aee,64,FLEN)
NAN_BOXED(0x5f465aee,64,FLEN)
NAN_BOXED(0x5f465aee,64,FLEN)
NAN_BOXED(0x5f465aee,64,FLEN)
NAN_BOXED(0x5f465aee,64,FLEN)
NAN_BOXED(0xe7b6475c,64,FLEN)
NAN_BOXED(0xe7b6475c,64,FLEN)
NAN_BOXED(0xe7b6475c,64,FLEN)
NAN_BOXED(0xe7b6475c,64,FLEN)
NAN_BOXED(0xe7b6475c,64,FLEN)
NAN_BOXED(0xe7b6475c,64,FLEN)
NAN_BOXED(0xe7b6475c,64,FLEN)
NAN_BOXED(0xe7b6475c,64,FLEN)
NAN_BOXED(0xe7b6475c,64,FLEN)
NAN_BOXED(0xe7b6475c,64,FLEN)
NAN_BOXED(0xec73cbc0,64,FLEN)
NAN_BOXED(0xec73cbc0,64,FLEN)
NAN_BOXED(0xec73cbc0,64,FLEN)
NAN_BOXED(0xec73cbc0,64,FLEN)
NAN_BOXED(0xec73cbc0,64,FLEN)
NAN_BOXED(0xec73cbc0,64,FLEN)
NAN_BOXED(0xec73cbc0,64,FLEN)
NAN_BOXED(0xec73cbc0,64,FLEN)
NAN_BOXED(0xec73cbc0,64,FLEN)
NAN_BOXED(0xec73cbc0,64,FLEN)
NAN_BOXED(0x27da2ad0,64,FLEN)
NAN_BOXED(0x27da2ad0,64,FLEN)
NAN_BOXED(0x27da2ad0,64,FLEN)
NAN_BOXED(0x27da2ad0,64,FLEN)
NAN_BOXED(0x27da2ad0,64,FLEN)
NAN_BOXED(0x27da2ad0,64,FLEN)
NAN_BOXED(0x27da2ad0,64,FLEN)
NAN_BOXED(0x27da2ad0,64,FLEN)
NAN_BOXED(0x27da2ad0,64,FLEN)
NAN_BOXED(0x27da2ad0,64,FLEN)
NAN_BOXED(0x40ca77ca,64,FLEN)
NAN_BOXED(0x40ca77ca,64,FLEN)
NAN_BOXED(0x40ca77ca,64,FLEN)
NAN_BOXED(0x40ca77ca,64,FLEN)
NAN_BOXED(0x40ca77ca,64,FLEN)
NAN_BOXED(0x40ca77ca,64,FLEN)
NAN_BOXED(0x40ca77ca,64,FLEN)
NAN_BOXED(0x40ca77ca,64,FLEN)
NAN_BOXED(0x40ca77ca,64,FLEN)
NAN_BOXED(0x40ca77ca,64,FLEN)
NAN_BOXED(0xc07070fc,64,FLEN)
NAN_BOXED(0xc07070fc,64,FLEN)
NAN_BOXED(0xc07070fc,64,FLEN)
NAN_BOXED(0xc07070fc,64,FLEN)
NAN_BOXED(0xc07070fc,64,FLEN)
NAN_BOXED(0xc07070fc,64,FLEN)
NAN_BOXED(0xc07070fc,64,FLEN)
NAN_BOXED(0xc07070fc,64,FLEN)
NAN_BOXED(0xc07070fc,64,FLEN)
NAN_BOXED(0xc07070fc,64,FLEN)
NAN_BOXED(0xc071baf8,64,FLEN)
NAN_BOXED(0xc071baf8,64,FLEN)
NAN_BOXED(0xc071baf8,64,FLEN)
NAN_BOXED(0xc071baf8,64,FLEN)
NAN_BOXED(0xc071baf8,64,FLEN)
NAN_BOXED(0xc071baf8,64,FLEN)
NAN_BOXED(0xc071baf8,64,FLEN)
NAN_BOXED(0xc071baf8,64,FLEN)
NAN_BOXED(0xc071baf8,64,FLEN)
NAN_BOXED(0xc071baf8,64,FLEN)
NAN_BOXED(0x8e21a57c,64,FLEN)
NAN_BOXED(0x8e21a57c,64,FLEN)
NAN_BOXED(0x8e21a57c,64,FLEN)
NAN_BOXED(0x8e21a57c,64,FLEN)
NAN_BOXED(0x8e21a57c,64,FLEN)
NAN_BOXED(0x8e21a57c,64,FLEN)
NAN_BOXED(0x8e21a57c,64,FLEN)
NAN_BOXED(0x8e21a57c,64,FLEN)
NAN_BOXED(0x8e21a57c,64,FLEN)
NAN_BOXED(0x8e21a57c,64,FLEN)
NAN_BOXED(0xefac1b4c,64,FLEN)
NAN_BOXED(0xefac1b4c,64,FLEN)
NAN_BOXED(0xefac1b4c,64,FLEN)
NAN_BOXED(0xefac1b4c,64,FLEN)
NAN_BOXED(0xefac1b4c,64,FLEN)
NAN_BOXED(0xefac1b4c,64,FLEN)
NAN_BOXED(0xefac1b4c,64,FLEN)
NAN_BOXED(0xefac1b4c,64,FLEN)
NAN_BOXED(0xefac1b4c,64,FLEN)
NAN_BOXED(0xefac1b4c,64,FLEN)
NAN_BOXED(0x39097a0a,64,FLEN)
NAN_BOXED(0x39097a0a,64,FLEN)
NAN_BOXED(0x39097a0a,64,FLEN)
NAN_BOXED(0x39097a0a,64,FLEN)
NAN_BOXED(0x39097a0a,64,FLEN)
NAN_BOXED(0x39097a0a,64,FLEN)
NAN_BOXED(0x39097a0a,64,FLEN)
NAN_BOXED(0x39097a0a,64,FLEN)
NAN_BOXED(0x39097a0a,64,FLEN)
NAN_BOXED(0x39097a0a,64,FLEN)
NAN_BOXED(0x5b70180c,64,FLEN)
NAN_BOXED(0x5b70180c,64,FLEN)
NAN_BOXED(0x5b70180c,64,FLEN)
NAN_BOXED(0x5b70180c,64,FLEN)
NAN_BOXED(0x5b70180c,64,FLEN)
NAN_BOXED(0x5b70180c,64,FLEN)
NAN_BOXED(0x5b70180c,64,FLEN)
NAN_BOXED(0x5b70180c,64,FLEN)
NAN_BOXED(0x5b70180c,64,FLEN)
NAN_BOXED(0x5b70180c,64,FLEN)
NAN_BOXED(0x1e06a550,64,FLEN)
NAN_BOXED(0x1e06a550,64,FLEN)
NAN_BOXED(0x1e06a550,64,FLEN)
NAN_BOXED(0x1e06a550,64,FLEN)
NAN_BOXED(0x1e06a550,64,FLEN)
NAN_BOXED(0x1e06a550,64,FLEN)
NAN_BOXED(0x1e06a550,64,FLEN)
NAN_BOXED(0x1e06a550,64,FLEN)
NAN_BOXED(0x1e06a550,64,FLEN)
NAN_BOXED(0x1e06a550,64,FLEN)
NAN_BOXED(0x4b32ddf0,64,FLEN)
NAN_BOXED(0x4b32ddf0,64,FLEN)
NAN_BOXED(0x4b32ddf0,64,FLEN)
NAN_BOXED(0x4b32ddf0,64,FLEN)
NAN_BOXED(0x4b32ddf0,64,FLEN)
NAN_BOXED(0x4b32ddf0,64,FLEN)
NAN_BOXED(0x4b32ddf0,64,FLEN)
NAN_BOXED(0x4b32ddf0,64,FLEN)
NAN_BOXED(0x4b32ddf0,64,FLEN)
NAN_BOXED(0x4b32ddf0,64,FLEN)
NAN_BOXED(0x8a769ed6,64,FLEN)
NAN_BOXED(0x8a769ed6,64,FLEN)
NAN_BOXED(0x8a769ed6,64,FLEN)
NAN_BOXED(0x8a769ed6,64,FLEN)
NAN_BOXED(0x8a769ed6,64,FLEN)
NAN_BOXED(0x8a769ed6,64,FLEN)
NAN_BOXED(0x8a769ed6,64,FLEN)
NAN_BOXED(0x8a769ed6,64,FLEN)
NAN_BOXED(0x8a769ed6,64,FLEN)
NAN_BOXED(0x8a769ed6,64,FLEN)
NAN_BOXED(0xeb584604,64,FLEN)
NAN_BOXED(0xeb584604,64,FLEN)
NAN_BOXED(0xeb584604,64,FLEN)
NAN_BOXED(0xeb584604,64,FLEN)
NAN_BOXED(0xeb584604,64,FLEN)
NAN_BOXED(0xeb584604,64,FLEN)
NAN_BOXED(0xeb584604,64,FLEN)
NAN_BOXED(0xeb584604,64,FLEN)
NAN_BOXED(0xeb584604,64,FLEN)
NAN_BOXED(0xeb584604,64,FLEN)
NAN_BOXED(0xe70b503f,64,FLEN)
NAN_BOXED(0xe70b503f,64,FLEN)
NAN_BOXED(0xe70b503f,64,FLEN)
NAN_BOXED(0xe70b503f,64,FLEN)
NAN_BOXED(0xe70b503f,64,FLEN)
NAN_BOXED(0xe70b503f,64,FLEN)
NAN_BOXED(0xe70b503f,64,FLEN)
NAN_BOXED(0xe70b503f,64,FLEN)
NAN_BOXED(0xe70b503f,64,FLEN)
NAN_BOXED(0xe70b503f,64,FLEN)
NAN_BOXED(0xeaa7d5c8,64,FLEN)
NAN_BOXED(0xeaa7d5c8,64,FLEN)
NAN_BOXED(0xeaa7d5c8,64,FLEN)
NAN_BOXED(0xeaa7d5c8,64,FLEN)
NAN_BOXED(0xeaa7d5c8,64,FLEN)
NAN_BOXED(0xeaa7d5c8,64,FLEN)
NAN_BOXED(0xeaa7d5c8,64,FLEN)
NAN_BOXED(0xeaa7d5c8,64,FLEN)
NAN_BOXED(0xeaa7d5c8,64,FLEN)
NAN_BOXED(0xeaa7d5c8,64,FLEN)
NAN_BOXED(0x4a131e1f,64,FLEN)
NAN_BOXED(0x4a131e1f,64,FLEN)
NAN_BOXED(0x4a131e1f,64,FLEN)
NAN_BOXED(0x4a131e1f,64,FLEN)
NAN_BOXED(0x4a131e1f,64,FLEN)
NAN_BOXED(0x4a131e1f,64,FLEN)
NAN_BOXED(0x4a131e1f,64,FLEN)
NAN_BOXED(0x4a131e1f,64,FLEN)
NAN_BOXED(0x4a131e1f,64,FLEN)
NAN_BOXED(0x4a131e1f,64,FLEN)
NAN_BOXED(0xb870adf0,64,FLEN)
NAN_BOXED(0xb870adf0,64,FLEN)
NAN_BOXED(0xb870adf0,64,FLEN)
NAN_BOXED(0xb870adf0,64,FLEN)
NAN_BOXED(0xb870adf0,64,FLEN)
NAN_BOXED(0xb870adf0,64,FLEN)
NAN_BOXED(0xb870adf0,64,FLEN)
NAN_BOXED(0xb870adf0,64,FLEN)
NAN_BOXED(0xb870adf0,64,FLEN)
NAN_BOXED(0xb870adf0,64,FLEN)
NAN_BOXED(0x5f58d7ce,64,FLEN)
NAN_BOXED(0x5f58d7ce,64,FLEN)
NAN_BOXED(0x5f58d7ce,64,FLEN)
NAN_BOXED(0x5f58d7ce,64,FLEN)
NAN_BOXED(0x5f58d7ce,64,FLEN)
NAN_BOXED(0x5f58d7ce,64,FLEN)
NAN_BOXED(0x5f58d7ce,64,FLEN)
NAN_BOXED(0x5f58d7ce,64,FLEN)
NAN_BOXED(0x5f58d7ce,64,FLEN)
NAN_BOXED(0x5f58d7ce,64,FLEN)
NAN_BOXED(0x30c243bc,64,FLEN)
NAN_BOXED(0x30c243bc,64,FLEN)
NAN_BOXED(0x30c243bc,64,FLEN)
NAN_BOXED(0x30c243bc,64,FLEN)
NAN_BOXED(0x30c243bc,64,FLEN)
NAN_BOXED(0x30c243bc,64,FLEN)
NAN_BOXED(0x30c243bc,64,FLEN)
NAN_BOXED(0x30c243bc,64,FLEN)
NAN_BOXED(0x30c243bc,64,FLEN)
NAN_BOXED(0x30c243bc,64,FLEN)
NAN_BOXED(0x83dbf9d5,64,FLEN)
NAN_BOXED(0x83dbf9d5,64,FLEN)
NAN_BOXED(0x83dbf9d5,64,FLEN)
NAN_BOXED(0x83dbf9d5,64,FLEN)
NAN_BOXED(0x83dbf9d5,64,FLEN)
NAN_BOXED(0x83dbf9d5,64,FLEN)
NAN_BOXED(0x83dbf9d5,64,FLEN)
NAN_BOXED(0x83dbf9d5,64,FLEN)
NAN_BOXED(0x83dbf9d5,64,FLEN)
NAN_BOXED(0x83dbf9d5,64,FLEN)
NAN_BOXED(0xf62a1ac0,64,FLEN)
NAN_BOXED(0xf62a1ac0,64,FLEN)
NAN_BOXED(0xf62a1ac0,64,FLEN)
NAN_BOXED(0xf62a1ac0,64,FLEN)
NAN_BOXED(0xf62a1ac0,64,FLEN)
NAN_BOXED(0xf62a1ac0,64,FLEN)
NAN_BOXED(0xf62a1ac0,64,FLEN)
NAN_BOXED(0xf62a1ac0,64,FLEN)
NAN_BOXED(0xf62a1ac0,64,FLEN)
NAN_BOXED(0xf62a1ac0,64,FLEN)
NAN_BOXED(0xc0e32d14,64,FLEN)
NAN_BOXED(0xc0e32d14,64,FLEN)
NAN_BOXED(0xc0e32d14,64,FLEN)
NAN_BOXED(0xc0e32d14,64,FLEN)
NAN_BOXED(0xc0e32d14,64,FLEN)
NAN_BOXED(0xc0e32d14,64,FLEN)
NAN_BOXED(0xc0e32d14,64,FLEN)
NAN_BOXED(0xc0e32d14,64,FLEN)
NAN_BOXED(0xc0e32d14,64,FLEN)
NAN_BOXED(0xc0e32d14,64,FLEN)
NAN_BOXED(0xfd9b572e,64,FLEN)
NAN_BOXED(0xfd9b572e,64,FLEN)
NAN_BOXED(0xfd9b572e,64,FLEN)
NAN_BOXED(0xfd9b572e,64,FLEN)
NAN_BOXED(0xfd9b572e,64,FLEN)
NAN_BOXED(0xfd9b572e,64,FLEN)
NAN_BOXED(0xfd9b572e,64,FLEN)
NAN_BOXED(0xfd9b572e,64,FLEN)
NAN_BOXED(0xfd9b572e,64,FLEN)
NAN_BOXED(0xfd9b572e,64,FLEN)
NAN_BOXED(0xdd68a12a,64,FLEN)
NAN_BOXED(0xdd68a12a,64,FLEN)
NAN_BOXED(0xdd68a12a,64,FLEN)
NAN_BOXED(0xdd68a12a,64,FLEN)
NAN_BOXED(0xdd68a12a,64,FLEN)
NAN_BOXED(0xdd68a12a,64,FLEN)
NAN_BOXED(0xdd68a12a,64,FLEN)
NAN_BOXED(0xdd68a12a,64,FLEN)
NAN_BOXED(0xdd68a12a,64,FLEN)
NAN_BOXED(0xdd68a12a,64,FLEN)
NAN_BOXED(0x1acedd26,64,FLEN)
NAN_BOXED(0x1acedd26,64,FLEN)
NAN_BOXED(0x1acedd26,64,FLEN)
NAN_BOXED(0x1acedd26,64,FLEN)
NAN_BOXED(0x1acedd26,64,FLEN)
NAN_BOXED(0x1acedd26,64,FLEN)
NAN_BOXED(0x1acedd26,64,FLEN)
NAN_BOXED(0x1acedd26,64,FLEN)
NAN_BOXED(0x1acedd26,64,FLEN)
NAN_BOXED(0x1acedd26,64,FLEN)
NAN_BOXED(0x68ddc7f2,64,FLEN)
NAN_BOXED(0x68ddc7f2,64,FLEN)
NAN_BOXED(0x68ddc7f2,64,FLEN)
NAN_BOXED(0x68ddc7f2,64,FLEN)
NAN_BOXED(0x68ddc7f2,64,FLEN)
NAN_BOXED(0x68ddc7f2,64,FLEN)
NAN_BOXED(0x68ddc7f2,64,FLEN)
NAN_BOXED(0x68ddc7f2,64,FLEN)
NAN_BOXED(0x68ddc7f2,64,FLEN)
NAN_BOXED(0x68ddc7f2,64,FLEN)
NAN_BOXED(0x1b8e56d3,64,FLEN)
NAN_BOXED(0x1b8e56d3,64,FLEN)
NAN_BOXED(0x1b8e56d3,64,FLEN)
NAN_BOXED(0x1b8e56d3,64,FLEN)
NAN_BOXED(0x1b8e56d3,64,FLEN)
NAN_BOXED(0x1b8e56d3,64,FLEN)
NAN_BOXED(0x1b8e56d3,64,FLEN)
NAN_BOXED(0x1b8e56d3,64,FLEN)
NAN_BOXED(0x1b8e56d3,64,FLEN)
NAN_BOXED(0x1b8e56d3,64,FLEN)
NAN_BOXED(0x5264b9d6,64,FLEN)
NAN_BOXED(0x5264b9d6,64,FLEN)
NAN_BOXED(0x5264b9d6,64,FLEN)
NAN_BOXED(0x5264b9d6,64,FLEN)
NAN_BOXED(0x5264b9d6,64,FLEN)
NAN_BOXED(0x5264b9d6,64,FLEN)
NAN_BOXED(0x5264b9d6,64,FLEN)
NAN_BOXED(0x5264b9d6,64,FLEN)
NAN_BOXED(0x5264b9d6,64,FLEN)
NAN_BOXED(0x5264b9d6,64,FLEN)
NAN_BOXED(0x9087574e,64,FLEN)
NAN_BOXED(0x9087574e,64,FLEN)
NAN_BOXED(0x9087574e,64,FLEN)
NAN_BOXED(0x9087574e,64,FLEN)
NAN_BOXED(0x9087574e,64,FLEN)
NAN_BOXED(0x9087574e,64,FLEN)
NAN_BOXED(0x9087574e,64,FLEN)
NAN_BOXED(0x9087574e,64,FLEN)
NAN_BOXED(0x9087574e,64,FLEN)
NAN_BOXED(0x9087574e,64,FLEN)
NAN_BOXED(0x1c1f3f37,64,FLEN)
NAN_BOXED(0x1c1f3f37,64,FLEN)
NAN_BOXED(0x1c1f3f37,64,FLEN)
NAN_BOXED(0x1c1f3f37,64,FLEN)
NAN_BOXED(0x1c1f3f37,64,FLEN)
NAN_BOXED(0x1c1f3f37,64,FLEN)
NAN_BOXED(0x1c1f3f37,64,FLEN)
NAN_BOXED(0x1c1f3f37,64,FLEN)
NAN_BOXED(0x1c1f3f37,64,FLEN)
NAN_BOXED(0x1c1f3f37,64,FLEN)
NAN_BOXED(0xdda1002e,64,FLEN)
NAN_BOXED(0xdda1002e,64,FLEN)
NAN_BOXED(0xdda1002e,64,FLEN)
NAN_BOXED(0xdda1002e,64,FLEN)
NAN_BOXED(0xdda1002e,64,FLEN)
NAN_BOXED(0xdda1002e,64,FLEN)
NAN_BOXED(0xdda1002e,64,FLEN)
NAN_BOXED(0xdda1002e,64,FLEN)
NAN_BOXED(0xdda1002e,64,FLEN)
NAN_BOXED(0xdda1002e,64,FLEN)
NAN_BOXED(0xd82a8716,64,FLEN)
NAN_BOXED(0xd82a8716,64,FLEN)
NAN_BOXED(0xd82a8716,64,FLEN)
NAN_BOXED(0xd82a8716,64,FLEN)
NAN_BOXED(0xd82a8716,64,FLEN)
NAN_BOXED(0xd82a8716,64,FLEN)
NAN_BOXED(0xd82a8716,64,FLEN)
NAN_BOXED(0xd82a8716,64,FLEN)
NAN_BOXED(0xd82a8716,64,FLEN)
NAN_BOXED(0xd82a8716,64,FLEN)
NAN_BOXED(0xeb4c94ac,64,FLEN)
NAN_BOXED(0xeb4c94ac,64,FLEN)
NAN_BOXED(0xeb4c94ac,64,FLEN)
NAN_BOXED(0xeb4c94ac,64,FLEN)
NAN_BOXED(0xeb4c94ac,64,FLEN)
NAN_BOXED(0xeb4c94ac,64,FLEN)
NAN_BOXED(0xeb4c94ac,64,FLEN)
NAN_BOXED(0xeb4c94ac,64,FLEN)
NAN_BOXED(0xeb4c94ac,64,FLEN)
NAN_BOXED(0xeb4c94ac,64,FLEN)
NAN_BOXED(0x40ade358,64,FLEN)
NAN_BOXED(0x40ade358,64,FLEN)
NAN_BOXED(0x40ade358,64,FLEN)
NAN_BOXED(0x40ade358,64,FLEN)
NAN_BOXED(0x40ade358,64,FLEN)
NAN_BOXED(0x40ade358,64,FLEN)
NAN_BOXED(0x40ade358,64,FLEN)
NAN_BOXED(0x40ade358,64,FLEN)
NAN_BOXED(0x40ade358,64,FLEN)
NAN_BOXED(0x40ade358,64,FLEN)
NAN_BOXED(0x3e0e1f14,64,FLEN)
NAN_BOXED(0x3e0e1f14,64,FLEN)
NAN_BOXED(0x3e0e1f14,64,FLEN)
NAN_BOXED(0x3e0e1f14,64,FLEN)
NAN_BOXED(0x3e0e1f14,64,FLEN)
NAN_BOXED(0x3e0e1f14,64,FLEN)
NAN_BOXED(0x3e0e1f14,64,FLEN)
NAN_BOXED(0x3e0e1f14,64,FLEN)
NAN_BOXED(0x3e0e1f14,64,FLEN)
NAN_BOXED(0x3e0e1f14,64,FLEN)
NAN_BOXED(0x701108e4,64,FLEN)
NAN_BOXED(0x701108e4,64,FLEN)
NAN_BOXED(0x701108e4,64,FLEN)
NAN_BOXED(0x701108e4,64,FLEN)
NAN_BOXED(0x701108e4,64,FLEN)
NAN_BOXED(0x701108e4,64,FLEN)
NAN_BOXED(0x701108e4,64,FLEN)
NAN_BOXED(0x701108e4,64,FLEN)
NAN_BOXED(0x701108e4,64,FLEN)
NAN_BOXED(0x701108e4,64,FLEN)
NAN_BOXED(0x59ba428c,64,FLEN)
NAN_BOXED(0x59ba428c,64,FLEN)
NAN_BOXED(0x59ba428c,64,FLEN)
NAN_BOXED(0x59ba428c,64,FLEN)
NAN_BOXED(0x59ba428c,64,FLEN)
NAN_BOXED(0x59ba428c,64,FLEN)
NAN_BOXED(0x59ba428c,64,FLEN)
NAN_BOXED(0x59ba428c,64,FLEN)
NAN_BOXED(0x59ba428c,64,FLEN)
NAN_BOXED(0x59ba428c,64,FLEN)
NAN_BOXED(0x1cf3cdd0,64,FLEN)
NAN_BOXED(0x1cf3cdd0,64,FLEN)
NAN_BOXED(0x1cf3cdd0,64,FLEN)
NAN_BOXED(0x1cf3cdd0,64,FLEN)
NAN_BOXED(0x1cf3cdd0,64,FLEN)
NAN_BOXED(0x1cf3cdd0,64,FLEN)
NAN_BOXED(0x1cf3cdd0,64,FLEN)
NAN_BOXED(0x1cf3cdd0,64,FLEN)
NAN_BOXED(0x1cf3cdd0,64,FLEN)
NAN_BOXED(0x1cf3cdd0,64,FLEN)
NAN_BOXED(0x55e345e8,64,FLEN)
NAN_BOXED(0x55e345e8,64,FLEN)
NAN_BOXED(0x55e345e8,64,FLEN)
NAN_BOXED(0x55e345e8,64,FLEN)
NAN_BOXED(0x55e345e8,64,FLEN)
NAN_BOXED(0x55e345e8,64,FLEN)
NAN_BOXED(0x55e345e8,64,FLEN)
NAN_BOXED(0x55e345e8,64,FLEN)
NAN_BOXED(0x55e345e8,64,FLEN)
NAN_BOXED(0x55e345e8,64,FLEN)
NAN_BOXED(0x3c646d1d,64,FLEN)
NAN_BOXED(0x3c646d1d,64,FLEN)
NAN_BOXED(0x3c646d1d,64,FLEN)
NAN_BOXED(0x3c646d1d,64,FLEN)
NAN_BOXED(0x3c646d1d,64,FLEN)
NAN_BOXED(0x3c646d1d,64,FLEN)
NAN_BOXED(0x3c646d1d,64,FLEN)
NAN_BOXED(0x3c646d1d,64,FLEN)
NAN_BOXED(0x3c646d1d,64,FLEN)
NAN_BOXED(0x3c646d1d,64,FLEN)
NAN_BOXED(0xe2fa7c02,64,FLEN)
NAN_BOXED(0xe2fa7c02,64,FLEN)
NAN_BOXED(0xe2fa7c02,64,FLEN)
NAN_BOXED(0xe2fa7c02,64,FLEN)
NAN_BOXED(0xe2fa7c02,64,FLEN)
NAN_BOXED(0xe2fa7c02,64,FLEN)
NAN_BOXED(0xe2fa7c02,64,FLEN)
NAN_BOXED(0xe2fa7c02,64,FLEN)
NAN_BOXED(0xe2fa7c02,64,FLEN)
NAN_BOXED(0xe2fa7c02,64,FLEN)
NAN_BOXED(0x9eb748f0,64,FLEN)
NAN_BOXED(0x9eb748f0,64,FLEN)
NAN_BOXED(0x9eb748f0,64,FLEN)
NAN_BOXED(0x9eb748f0,64,FLEN)
NAN_BOXED(0x9eb748f0,64,FLEN)
NAN_BOXED(0x9eb748f0,64,FLEN)
NAN_BOXED(0x9eb748f0,64,FLEN)
NAN_BOXED(0x9eb748f0,64,FLEN)
NAN_BOXED(0x9eb748f0,64,FLEN)
NAN_BOXED(0x9eb748f0,64,FLEN)
NAN_BOXED(0x48fe340e,64,FLEN)
NAN_BOXED(0x48fe340e,64,FLEN)
NAN_BOXED(0x48fe340e,64,FLEN)
NAN_BOXED(0x48fe340e,64,FLEN)
NAN_BOXED(0x48fe340e,64,FLEN)
NAN_BOXED(0x48fe340e,64,FLEN)
NAN_BOXED(0x48fe340e,64,FLEN)
NAN_BOXED(0x48fe340e,64,FLEN)
NAN_BOXED(0x48fe340e,64,FLEN)
NAN_BOXED(0x48fe340e,64,FLEN)
NAN_BOXED(0x28e50670,64,FLEN)
NAN_BOXED(0x28e50670,64,FLEN)
NAN_BOXED(0x28e50670,64,FLEN)
NAN_BOXED(0x28e50670,64,FLEN)
NAN_BOXED(0x28e50670,64,FLEN)
NAN_BOXED(0x28e50670,64,FLEN)
NAN_BOXED(0x28e50670,64,FLEN)
NAN_BOXED(0x28e50670,64,FLEN)
NAN_BOXED(0x28e50670,64,FLEN)
NAN_BOXED(0x28e50670,64,FLEN)
NAN_BOXED(0x0bec1ca8,64,FLEN)
NAN_BOXED(0x0bec1ca8,64,FLEN)
NAN_BOXED(0x0bec1ca8,64,FLEN)
NAN_BOXED(0x0bec1ca8,64,FLEN)
NAN_BOXED(0x0bec1ca8,64,FLEN)
NAN_BOXED(0x0bec1ca8,64,FLEN)
NAN_BOXED(0x0bec1ca8,64,FLEN)
NAN_BOXED(0x0bec1ca8,64,FLEN)
NAN_BOXED(0x0bec1ca8,64,FLEN)
NAN_BOXED(0x0bec1ca8,64,FLEN)
NAN_BOXED(0x73cf7054,64,FLEN)
NAN_BOXED(0x73cf7054,64,FLEN)
NAN_BOXED(0x73cf7054,64,FLEN)
NAN_BOXED(0x73cf7054,64,FLEN)
NAN_BOXED(0x73cf7054,64,FLEN)
NAN_BOXED(0x73cf7054,64,FLEN)
NAN_BOXED(0x73cf7054,64,FLEN)
NAN_BOXED(0x73cf7054,64,FLEN)
NAN_BOXED(0x73cf7054,64,FLEN)
NAN_BOXED(0x73cf7054,64,FLEN)
NAN_BOXED(0x3037d2a3,64,FLEN)
NAN_BOXED(0x3037d2a3,64,FLEN)
NAN_BOXED(0x3037d2a3,64,FLEN)
NAN_BOXED(0x3037d2a3,64,FLEN)
NAN_BOXED(0x3037d2a3,64,FLEN)
NAN_BOXED(0x3037d2a3,64,FLEN)
NAN_BOXED(0x3037d2a3,64,FLEN)
NAN_BOXED(0x3037d2a3,64,FLEN)
NAN_BOXED(0x3037d2a3,64,FLEN)
NAN_BOXED(0x3037d2a3,64,FLEN)
NAN_BOXED(0xa46ec0f2,64,FLEN)
NAN_BOXED(0xa46ec0f2,64,FLEN)
NAN_BOXED(0xa46ec0f2,64,FLEN)
NAN_BOXED(0xa46ec0f2,64,FLEN)
NAN_BOXED(0xa46ec0f2,64,FLEN)
NAN_BOXED(0xa46ec0f2,64,FLEN)
NAN_BOXED(0xa46ec0f2,64,FLEN)
NAN_BOXED(0xa46ec0f2,64,FLEN)
NAN_BOXED(0xa46ec0f2,64,FLEN)
NAN_BOXED(0xa46ec0f2,64,FLEN)
NAN_BOXED(0x1d4f9c08,64,FLEN)
NAN_BOXED(0x1d4f9c08,64,FLEN)
NAN_BOXED(0x1d4f9c08,64,FLEN)
NAN_BOXED(0x1d4f9c08,64,FLEN)
NAN_BOXED(0x1d4f9c08,64,FLEN)
NAN_BOXED(0x1d4f9c08,64,FLEN)
NAN_BOXED(0x1d4f9c08,64,FLEN)
NAN_BOXED(0x1d4f9c08,64,FLEN)
NAN_BOXED(0x1d4f9c08,64,FLEN)
NAN_BOXED(0x1d4f9c08,64,FLEN)
NAN_BOXED(0x3bbf9129,64,FLEN)
NAN_BOXED(0x3bbf9129,64,FLEN)
NAN_BOXED(0x3bbf9129,64,FLEN)
NAN_BOXED(0x3bbf9129,64,FLEN)
NAN_BOXED(0x3bbf9129,64,FLEN)
NAN_BOXED(0x3bbf9129,64,FLEN)
NAN_BOXED(0x3bbf9129,64,FLEN)
NAN_BOXED(0x3bbf9129,64,FLEN)
NAN_BOXED(0x3bbf9129,64,FLEN)
NAN_BOXED(0x3bbf9129,64,FLEN)
NAN_BOXED(0xfd806190,64,FLEN)
NAN_BOXED(0xfd806190,64,FLEN)
NAN_BOXED(0xfd806190,64,FLEN)
NAN_BOXED(0xfd806190,64,FLEN)
NAN_BOXED(0xfd806190,64,FLEN)
NAN_BOXED(0xfd806190,64,FLEN)
NAN_BOXED(0xfd806190,64,FLEN)
NAN_BOXED(0xfd806190,64,FLEN)
NAN_BOXED(0xfd806190,64,FLEN)
NAN_BOXED(0xfd806190,64,FLEN)
NAN_BOXED(0xa8d5aa39,64,FLEN)
NAN_BOXED(0xa8d5aa39,64,FLEN)
NAN_BOXED(0xa8d5aa39,64,FLEN)
NAN_BOXED(0xa8d5aa39,64,FLEN)
NAN_BOXED(0xa8d5aa39,64,FLEN)
NAN_BOXED(0xa8d5aa39,64,FLEN)
NAN_BOXED(0xa8d5aa39,64,FLEN)
NAN_BOXED(0xa8d5aa39,64,FLEN)
NAN_BOXED(0xa8d5aa39,64,FLEN)
NAN_BOXED(0xa8d5aa39,64,FLEN)
NAN_BOXED(0xcca9f1ae,64,FLEN)
NAN_BOXED(0xcca9f1ae,64,FLEN)
NAN_BOXED(0xcca9f1ae,64,FLEN)
NAN_BOXED(0xcca9f1ae,64,FLEN)
NAN_BOXED(0xcca9f1ae,64,FLEN)
NAN_BOXED(0xcca9f1ae,64,FLEN)
NAN_BOXED(0xcca9f1ae,64,FLEN)
NAN_BOXED(0xcca9f1ae,64,FLEN)
NAN_BOXED(0xcca9f1ae,64,FLEN)
NAN_BOXED(0xcca9f1ae,64,FLEN)
NAN_BOXED(0x6459a3c0,64,FLEN)
NAN_BOXED(0x6459a3c0,64,FLEN)
NAN_BOXED(0x6459a3c0,64,FLEN)
NAN_BOXED(0x6459a3c0,64,FLEN)
NAN_BOXED(0x6459a3c0,64,FLEN)
NAN_BOXED(0x6459a3c0,64,FLEN)
NAN_BOXED(0x6459a3c0,64,FLEN)
NAN_BOXED(0x6459a3c0,64,FLEN)
NAN_BOXED(0x6459a3c0,64,FLEN)
NAN_BOXED(0x6459a3c0,64,FLEN)
NAN_BOXED(0xf5fab43c,64,FLEN)
NAN_BOXED(0xf5fab43c,64,FLEN)
NAN_BOXED(0xf5fab43c,64,FLEN)
NAN_BOXED(0xf5fab43c,64,FLEN)
NAN_BOXED(0xf5fab43c,64,FLEN)
NAN_BOXED(0xf5fab43c,64,FLEN)
NAN_BOXED(0xf5fab43c,64,FLEN)
NAN_BOXED(0xf5fab43c,64,FLEN)
NAN_BOXED(0xf5fab43c,64,FLEN)
NAN_BOXED(0xf5fab43c,64,FLEN)
NAN_BOXED(0x6b83b57d,64,FLEN)
NAN_BOXED(0x6b83b57d,64,FLEN)
NAN_BOXED(0x6b83b57d,64,FLEN)
NAN_BOXED(0x6b83b57d,64,FLEN)
NAN_BOXED(0x6b83b57d,64,FLEN)
NAN_BOXED(0x6b83b57d,64,FLEN)
NAN_BOXED(0x6b83b57d,64,FLEN)
NAN_BOXED(0x6b83b57d,64,FLEN)
NAN_BOXED(0x6b83b57d,64,FLEN)
NAN_BOXED(0x6b83b57d,64,FLEN)
NAN_BOXED(0xe69e43a4,64,FLEN)
NAN_BOXED(0xe69e43a4,64,FLEN)
NAN_BOXED(0xe69e43a4,64,FLEN)
NAN_BOXED(0xe69e43a4,64,FLEN)
NAN_BOXED(0xe69e43a4,64,FLEN)
NAN_BOXED(0xe69e43a4,64,FLEN)
NAN_BOXED(0xe69e43a4,64,FLEN)
NAN_BOXED(0xe69e43a4,64,FLEN)
NAN_BOXED(0xe69e43a4,64,FLEN)
NAN_BOXED(0xe69e43a4,64,FLEN)
NAN_BOXED(0x78adcdb1,64,FLEN)
NAN_BOXED(0x78adcdb1,64,FLEN)
NAN_BOXED(0x78adcdb1,64,FLEN)
NAN_BOXED(0x78adcdb1,64,FLEN)
NAN_BOXED(0x78adcdb1,64,FLEN)
NAN_BOXED(0x78adcdb1,64,FLEN)
NAN_BOXED(0x78adcdb1,64,FLEN)
NAN_BOXED(0x78adcdb1,64,FLEN)
NAN_BOXED(0x78adcdb1,64,FLEN)
NAN_BOXED(0x78adcdb1,64,FLEN)
NAN_BOXED(0xda25ac50,64,FLEN)
NAN_BOXED(0xda25ac50,64,FLEN)
NAN_BOXED(0xda25ac50,64,FLEN)
NAN_BOXED(0xda25ac50,64,FLEN)
NAN_BOXED(0xda25ac50,64,FLEN)
NAN_BOXED(0xda25ac50,64,FLEN)
NAN_BOXED(0xda25ac50,64,FLEN)
NAN_BOXED(0xda25ac50,64,FLEN)
NAN_BOXED(0xda25ac50,64,FLEN)
NAN_BOXED(0xda25ac50,64,FLEN)
NAN_BOXED(0x7b6a28b8,64,FLEN)
NAN_BOXED(0x7b6a28b8,64,FLEN)
NAN_BOXED(0x7b6a28b8,64,FLEN)
NAN_BOXED(0x7b6a28b8,64,FLEN)
NAN_BOXED(0x7b6a28b8,64,FLEN)
NAN_BOXED(0x7b6a28b8,64,FLEN)
NAN_BOXED(0x7b6a28b8,64,FLEN)
NAN_BOXED(0x7b6a28b8,64,FLEN)
NAN_BOXED(0x7b6a28b8,64,FLEN)
NAN_BOXED(0x7b6a28b8,64,FLEN)
NAN_BOXED(0x915d2a42,64,FLEN)
NAN_BOXED(0x915d2a42,64,FLEN)
NAN_BOXED(0x915d2a42,64,FLEN)
NAN_BOXED(0x915d2a42,64,FLEN)
NAN_BOXED(0x915d2a42,64,FLEN)
NAN_BOXED(0x915d2a42,64,FLEN)
NAN_BOXED(0x915d2a42,64,FLEN)
NAN_BOXED(0x915d2a42,64,FLEN)
NAN_BOXED(0x915d2a42,64,FLEN)
NAN_BOXED(0x915d2a42,64,FLEN)
NAN_BOXED(0x86579700,64,FLEN)
NAN_BOXED(0x86579700,64,FLEN)
NAN_BOXED(0x86579700,64,FLEN)
NAN_BOXED(0x86579700,64,FLEN)
NAN_BOXED(0x86579700,64,FLEN)
NAN_BOXED(0x86579700,64,FLEN)
NAN_BOXED(0x86579700,64,FLEN)
NAN_BOXED(0x86579700,64,FLEN)
NAN_BOXED(0x86579700,64,FLEN)
NAN_BOXED(0x86579700,64,FLEN)
NAN_BOXED(0xded3b2e1,64,FLEN)
NAN_BOXED(0xded3b2e1,64,FLEN)
NAN_BOXED(0xded3b2e1,64,FLEN)
NAN_BOXED(0xded3b2e1,64,FLEN)
NAN_BOXED(0xded3b2e1,64,FLEN)
NAN_BOXED(0xded3b2e1,64,FLEN)
NAN_BOXED(0xded3b2e1,64,FLEN)
NAN_BOXED(0xded3b2e1,64,FLEN)
NAN_BOXED(0xded3b2e1,64,FLEN)
NAN_BOXED(0xded3b2e1,64,FLEN)
NAN_BOXED(0x2c44d337,64,FLEN)
NAN_BOXED(0x2c44d337,64,FLEN)
NAN_BOXED(0x2c44d337,64,FLEN)
NAN_BOXED(0x2c44d337,64,FLEN)
NAN_BOXED(0x2c44d337,64,FLEN)
NAN_BOXED(0x2c44d337,64,FLEN)
NAN_BOXED(0x2c44d337,64,FLEN)
NAN_BOXED(0x2c44d337,64,FLEN)
NAN_BOXED(0x2c44d337,64,FLEN)
NAN_BOXED(0x2c44d337,64,FLEN)
NAN_BOXED(0x9dbad440,64,FLEN)
NAN_BOXED(0x9dbad440,64,FLEN)
NAN_BOXED(0x9dbad440,64,FLEN)
NAN_BOXED(0x9dbad440,64,FLEN)
NAN_BOXED(0x9dbad440,64,FLEN)
NAN_BOXED(0x9dbad440,64,FLEN)
NAN_BOXED(0x9dbad440,64,FLEN)
NAN_BOXED(0x9dbad440,64,FLEN)
NAN_BOXED(0x9dbad440,64,FLEN)
NAN_BOXED(0x9dbad440,64,FLEN)
NAN_BOXED(0xea17dd8e,64,FLEN)
NAN_BOXED(0xea17dd8e,64,FLEN)
NAN_BOXED(0xea17dd8e,64,FLEN)
NAN_BOXED(0xea17dd8e,64,FLEN)
NAN_BOXED(0xea17dd8e,64,FLEN)
NAN_BOXED(0xea17dd8e,64,FLEN)
NAN_BOXED(0xea17dd8e,64,FLEN)
NAN_BOXED(0xea17dd8e,64,FLEN)
NAN_BOXED(0xea17dd8e,64,FLEN)
NAN_BOXED(0xea17dd8e,64,FLEN)
NAN_BOXED(0x6f7957b0,64,FLEN)
NAN_BOXED(0x6f7957b0,64,FLEN)
NAN_BOXED(0x6f7957b0,64,FLEN)
NAN_BOXED(0x6f7957b0,64,FLEN)
NAN_BOXED(0x6f7957b0,64,FLEN)
NAN_BOXED(0x6f7957b0,64,FLEN)
NAN_BOXED(0x6f7957b0,64,FLEN)
NAN_BOXED(0x6f7957b0,64,FLEN)
NAN_BOXED(0x6f7957b0,64,FLEN)
NAN_BOXED(0x6f7957b0,64,FLEN)
NAN_BOXED(0x32ae28f0,64,FLEN)
NAN_BOXED(0x32ae28f0,64,FLEN)
NAN_BOXED(0x32ae28f0,64,FLEN)
NAN_BOXED(0x32ae28f0,64,FLEN)
NAN_BOXED(0x32ae28f0,64,FLEN)
NAN_BOXED(0x32ae28f0,64,FLEN)
NAN_BOXED(0x32ae28f0,64,FLEN)
NAN_BOXED(0x32ae28f0,64,FLEN)
NAN_BOXED(0x32ae28f0,64,FLEN)
NAN_BOXED(0x32ae28f0,64,FLEN)
NAN_BOXED(0x502807f8,64,FLEN)
NAN_BOXED(0x502807f8,64,FLEN)
NAN_BOXED(0x502807f8,64,FLEN)
NAN_BOXED(0x502807f8,64,FLEN)
NAN_BOXED(0x502807f8,64,FLEN)
NAN_BOXED(0x502807f8,64,FLEN)
NAN_BOXED(0x502807f8,64,FLEN)
NAN_BOXED(0x502807f8,64,FLEN)
NAN_BOXED(0x502807f8,64,FLEN)
NAN_BOXED(0x502807f8,64,FLEN)
NAN_BOXED(0x83e41018,64,FLEN)
NAN_BOXED(0x83e41018,64,FLEN)
NAN_BOXED(0x83e41018,64,FLEN)
NAN_BOXED(0x83e41018,64,FLEN)
NAN_BOXED(0x83e41018,64,FLEN)
NAN_BOXED(0x83e41018,64,FLEN)
NAN_BOXED(0x83e41018,64,FLEN)
NAN_BOXED(0x83e41018,64,FLEN)
NAN_BOXED(0x83e41018,64,FLEN)
NAN_BOXED(0x83e41018,64,FLEN)
NAN_BOXED(0x35625624,64,FLEN)
NAN_BOXED(0x35625624,64,FLEN)
NAN_BOXED(0x35625624,64,FLEN)
NAN_BOXED(0x35625624,64,FLEN)
NAN_BOXED(0x35625624,64,FLEN)
NAN_BOXED(0x35625624,64,FLEN)
NAN_BOXED(0x35625624,64,FLEN)
NAN_BOXED(0x35625624,64,FLEN)
NAN_BOXED(0x35625624,64,FLEN)
NAN_BOXED(0x35625624,64,FLEN)
NAN_BOXED(0xd6a03380,64,FLEN)
NAN_BOXED(0xd6a03380,64,FLEN)
NAN_BOXED(0xd6a03380,64,FLEN)
NAN_BOXED(0xd6a03380,64,FLEN)
NAN_BOXED(0xd6a03380,64,FLEN)
NAN_BOXED(0xd6a03380,64,FLEN)
NAN_BOXED(0xd6a03380,64,FLEN)
NAN_BOXED(0xd6a03380,64,FLEN)
NAN_BOXED(0xd6a03380,64,FLEN)
NAN_BOXED(0xd6a03380,64,FLEN)
NAN_BOXED(0x1d89b3d2,64,FLEN)
NAN_BOXED(0x1d89b3d2,64,FLEN)
NAN_BOXED(0x1d89b3d2,64,FLEN)
NAN_BOXED(0x1d89b3d2,64,FLEN)
NAN_BOXED(0x1d89b3d2,64,FLEN)
NAN_BOXED(0x1d89b3d2,64,FLEN)
NAN_BOXED(0x1d89b3d2,64,FLEN)
NAN_BOXED(0x1d89b3d2,64,FLEN)
NAN_BOXED(0x1d89b3d2,64,FLEN)
NAN_BOXED(0x1d89b3d2,64,FLEN)
NAN_BOXED(0x5b4c6010,64,FLEN)
NAN_BOXED(0x5b4c6010,64,FLEN)
NAN_BOXED(0x5b4c6010,64,FLEN)
NAN_BOXED(0x5b4c6010,64,FLEN)
NAN_BOXED(0x5b4c6010,64,FLEN)
NAN_BOXED(0x5b4c6010,64,FLEN)
NAN_BOXED(0x5b4c6010,64,FLEN)
NAN_BOXED(0x5b4c6010,64,FLEN)
NAN_BOXED(0x5b4c6010,64,FLEN)
NAN_BOXED(0x5b4c6010,64,FLEN)
NAN_BOXED(0x1c6f5700,64,FLEN)
NAN_BOXED(0x1c6f5700,64,FLEN)
NAN_BOXED(0x1c6f5700,64,FLEN)
NAN_BOXED(0x1c6f5700,64,FLEN)
NAN_BOXED(0x1c6f5700,64,FLEN)
NAN_BOXED(0x1c6f5700,64,FLEN)
NAN_BOXED(0x1c6f5700,64,FLEN)
NAN_BOXED(0x1c6f5700,64,FLEN)
NAN_BOXED(0x1c6f5700,64,FLEN)
NAN_BOXED(0x1c6f5700,64,FLEN)
NAN_BOXED(0x5b0da9bd,64,FLEN)
NAN_BOXED(0x5b0da9bd,64,FLEN)
NAN_BOXED(0x5b0da9bd,64,FLEN)
NAN_BOXED(0x5b0da9bd,64,FLEN)
NAN_BOXED(0x5b0da9bd,64,FLEN)
NAN_BOXED(0x5b0da9bd,64,FLEN)
NAN_BOXED(0x5b0da9bd,64,FLEN)
NAN_BOXED(0x5b0da9bd,64,FLEN)
NAN_BOXED(0x5b0da9bd,64,FLEN)
NAN_BOXED(0x5b0da9bd,64,FLEN)
NAN_BOXED(0xf2829958,64,FLEN)
NAN_BOXED(0xf2829958,64,FLEN)
NAN_BOXED(0xf2829958,64,FLEN)
NAN_BOXED(0xf2829958,64,FLEN)
NAN_BOXED(0xf2829958,64,FLEN)
NAN_BOXED(0xf2829958,64,FLEN)
NAN_BOXED(0xf2829958,64,FLEN)
NAN_BOXED(0xf2829958,64,FLEN)
NAN_BOXED(0xf2829958,64,FLEN)
NAN_BOXED(0xf2829958,64,FLEN)
NAN_BOXED(0xd08e5cad,64,FLEN)
NAN_BOXED(0xd08e5cad,64,FLEN)
NAN_BOXED(0xd08e5cad,64,FLEN)
NAN_BOXED(0xd08e5cad,64,FLEN)
NAN_BOXED(0xd08e5cad,64,FLEN)
NAN_BOXED(0xd08e5cad,64,FLEN)
NAN_BOXED(0xd08e5cad,64,FLEN)
NAN_BOXED(0xd08e5cad,64,FLEN)
NAN_BOXED(0xd08e5cad,64,FLEN)
NAN_BOXED(0xd08e5cad,64,FLEN)
NAN_BOXED(0x526cbf63,64,FLEN)
NAN_BOXED(0x526cbf63,64,FLEN)
NAN_BOXED(0x526cbf63,64,FLEN)
NAN_BOXED(0x526cbf63,64,FLEN)
NAN_BOXED(0x526cbf63,64,FLEN)
NAN_BOXED(0x526cbf63,64,FLEN)
NAN_BOXED(0x526cbf63,64,FLEN)
NAN_BOXED(0x526cbf63,64,FLEN)
NAN_BOXED(0x526cbf63,64,FLEN)
NAN_BOXED(0x526cbf63,64,FLEN)
NAN_BOXED(0x1778cfae,64,FLEN)
NAN_BOXED(0x1778cfae,64,FLEN)
NAN_BOXED(0x1778cfae,64,FLEN)
NAN_BOXED(0x1778cfae,64,FLEN)
NAN_BOXED(0x1778cfae,64,FLEN)
NAN_BOXED(0x1778cfae,64,FLEN)
NAN_BOXED(0x1778cfae,64,FLEN)
NAN_BOXED(0x1778cfae,64,FLEN)
NAN_BOXED(0x1778cfae,64,FLEN)
NAN_BOXED(0x1778cfae,64,FLEN)
NAN_BOXED(0x14aa7f56,64,FLEN)
NAN_BOXED(0x14aa7f56,64,FLEN)
NAN_BOXED(0x14aa7f56,64,FLEN)
NAN_BOXED(0x14aa7f56,64,FLEN)
NAN_BOXED(0x14aa7f56,64,FLEN)
NAN_BOXED(0x14aa7f56,64,FLEN)
NAN_BOXED(0x14aa7f56,64,FLEN)
NAN_BOXED(0x14aa7f56,64,FLEN)
NAN_BOXED(0x14aa7f56,64,FLEN)
NAN_BOXED(0x14aa7f56,64,FLEN)
NAN_BOXED(0xeda2bcd7,64,FLEN)
NAN_BOXED(0xeda2bcd7,64,FLEN)
NAN_BOXED(0xeda2bcd7,64,FLEN)
NAN_BOXED(0xeda2bcd7,64,FLEN)
NAN_BOXED(0xeda2bcd7,64,FLEN)
NAN_BOXED(0xeda2bcd7,64,FLEN)
NAN_BOXED(0xeda2bcd7,64,FLEN)
NAN_BOXED(0xeda2bcd7,64,FLEN)
NAN_BOXED(0xeda2bcd7,64,FLEN)
NAN_BOXED(0xeda2bcd7,64,FLEN)
NAN_BOXED(0xcd29da4a,64,FLEN)
NAN_BOXED(0xcd29da4a,64,FLEN)
NAN_BOXED(0xcd29da4a,64,FLEN)
NAN_BOXED(0xcd29da4a,64,FLEN)
NAN_BOXED(0xcd29da4a,64,FLEN)
NAN_BOXED(0xcd29da4a,64,FLEN)
NAN_BOXED(0xcd29da4a,64,FLEN)
NAN_BOXED(0xcd29da4a,64,FLEN)
NAN_BOXED(0xcd29da4a,64,FLEN)
NAN_BOXED(0xcd29da4a,64,FLEN)
NAN_BOXED(0x657808c9,64,FLEN)
NAN_BOXED(0x657808c9,64,FLEN)
NAN_BOXED(0x657808c9,64,FLEN)
NAN_BOXED(0x657808c9,64,FLEN)
NAN_BOXED(0x657808c9,64,FLEN)
NAN_BOXED(0x657808c9,64,FLEN)
NAN_BOXED(0x657808c9,64,FLEN)
NAN_BOXED(0x657808c9,64,FLEN)
NAN_BOXED(0x657808c9,64,FLEN)
NAN_BOXED(0x657808c9,64,FLEN)
NAN_BOXED(0x1e2177c0,64,FLEN)
NAN_BOXED(0x1e2177c0,64,FLEN)
NAN_BOXED(0x1e2177c0,64,FLEN)
NAN_BOXED(0x1e2177c0,64,FLEN)
NAN_BOXED(0x1e2177c0,64,FLEN)
NAN_BOXED(0x1e2177c0,64,FLEN)
NAN_BOXED(0x1e2177c0,64,FLEN)
NAN_BOXED(0x1e2177c0,64,FLEN)
NAN_BOXED(0x1e2177c0,64,FLEN)
NAN_BOXED(0x1e2177c0,64,FLEN)
NAN_BOXED(0xb3f75ec1,64,FLEN)
NAN_BOXED(0xb3f75ec1,64,FLEN)
NAN_BOXED(0xb3f75ec1,64,FLEN)
NAN_BOXED(0xb3f75ec1,64,FLEN)
NAN_BOXED(0xb3f75ec1,64,FLEN)
NAN_BOXED(0xb3f75ec1,64,FLEN)
NAN_BOXED(0xb3f75ec1,64,FLEN)
NAN_BOXED(0xb3f75ec1,64,FLEN)
NAN_BOXED(0xb3f75ec1,64,FLEN)
NAN_BOXED(0xb3f75ec1,64,FLEN)
NAN_BOXED(0x98ca36fa,64,FLEN)
NAN_BOXED(0x98ca36fa,64,FLEN)
NAN_BOXED(0x98ca36fa,64,FLEN)
NAN_BOXED(0x98ca36fa,64,FLEN)
NAN_BOXED(0x98ca36fa,64,FLEN)
NAN_BOXED(0x98ca36fa,64,FLEN)
NAN_BOXED(0x98ca36fa,64,FLEN)
NAN_BOXED(0x98ca36fa,64,FLEN)
NAN_BOXED(0x98ca36fa,64,FLEN)
NAN_BOXED(0x98ca36fa,64,FLEN)
NAN_BOXED(0x62837c30,64,FLEN)
NAN_BOXED(0x62837c30,64,FLEN)
NAN_BOXED(0x62837c30,64,FLEN)
NAN_BOXED(0x62837c30,64,FLEN)
NAN_BOXED(0x62837c30,64,FLEN)
NAN_BOXED(0x62837c30,64,FLEN)
NAN_BOXED(0x62837c30,64,FLEN)
NAN_BOXED(0x62837c30,64,FLEN)
NAN_BOXED(0x62837c30,64,FLEN)
NAN_BOXED(0x62837c30,64,FLEN)
NAN_BOXED(0x3fa2c217,64,FLEN)
NAN_BOXED(0x3fa2c217,64,FLEN)
NAN_BOXED(0x3fa2c217,64,FLEN)
NAN_BOXED(0x3fa2c217,64,FLEN)
NAN_BOXED(0x3fa2c217,64,FLEN)
NAN_BOXED(0x3fa2c217,64,FLEN)
NAN_BOXED(0x3fa2c217,64,FLEN)
NAN_BOXED(0x3fa2c217,64,FLEN)
NAN_BOXED(0x3fa2c217,64,FLEN)
NAN_BOXED(0x3fa2c217,64,FLEN)
NAN_BOXED(0xee431ca4,64,FLEN)
NAN_BOXED(0xee431ca4,64,FLEN)
NAN_BOXED(0xee431ca4,64,FLEN)
NAN_BOXED(0xee431ca4,64,FLEN)
NAN_BOXED(0xee431ca4,64,FLEN)
NAN_BOXED(0xee431ca4,64,FLEN)
NAN_BOXED(0xee431ca4,64,FLEN)
NAN_BOXED(0xee431ca4,64,FLEN)
NAN_BOXED(0xee431ca4,64,FLEN)
NAN_BOXED(0xee431ca4,64,FLEN)
NAN_BOXED(0xbb27d794,64,FLEN)
NAN_BOXED(0xbb27d794,64,FLEN)
NAN_BOXED(0xbb27d794,64,FLEN)
NAN_BOXED(0xbb27d794,64,FLEN)
NAN_BOXED(0xbb27d794,64,FLEN)
NAN_BOXED(0xbb27d794,64,FLEN)
NAN_BOXED(0xbb27d794,64,FLEN)
NAN_BOXED(0xbb27d794,64,FLEN)
NAN_BOXED(0xbb27d794,64,FLEN)
NAN_BOXED(0xbb27d794,64,FLEN)
NAN_BOXED(0x04c22884,64,FLEN)
NAN_BOXED(0x04c22884,64,FLEN)
NAN_BOXED(0x04c22884,64,FLEN)
NAN_BOXED(0x04c22884,64,FLEN)
NAN_BOXED(0x04c22884,64,FLEN)
NAN_BOXED(0x04c22884,64,FLEN)
NAN_BOXED(0x04c22884,64,FLEN)
NAN_BOXED(0x04c22884,64,FLEN)
NAN_BOXED(0x04c22884,64,FLEN)
NAN_BOXED(0x04c22884,64,FLEN)
NAN_BOXED(0x37422b91,64,FLEN)
NAN_BOXED(0x37422b91,64,FLEN)
NAN_BOXED(0x37422b91,64,FLEN)
NAN_BOXED(0x37422b91,64,FLEN)
NAN_BOXED(0x37422b91,64,FLEN)
NAN_BOXED(0x37422b91,64,FLEN)
NAN_BOXED(0x37422b91,64,FLEN)
NAN_BOXED(0x37422b91,64,FLEN)
NAN_BOXED(0x37422b91,64,FLEN)
NAN_BOXED(0x37422b91,64,FLEN)
NAN_BOXED(0xe34d11b1,64,FLEN)
NAN_BOXED(0xe34d11b1,64,FLEN)
NAN_BOXED(0xe34d11b1,64,FLEN)
NAN_BOXED(0xe34d11b1,64,FLEN)
NAN_BOXED(0xe34d11b1,64,FLEN)
NAN_BOXED(0xe34d11b1,64,FLEN)
NAN_BOXED(0xe34d11b1,64,FLEN)
NAN_BOXED(0xe34d11b1,64,FLEN)
NAN_BOXED(0xe34d11b1,64,FLEN)
NAN_BOXED(0xe34d11b1,64,FLEN)
NAN_BOXED(0xa6a3715b,64,FLEN)
NAN_BOXED(0xa6a3715b,64,FLEN)
NAN_BOXED(0xa6a3715b,64,FLEN)
NAN_BOXED(0xa6a3715b,64,FLEN)
NAN_BOXED(0xa6a3715b,64,FLEN)
NAN_BOXED(0xa6a3715b,64,FLEN)
NAN_BOXED(0xa6a3715b,64,FLEN)
NAN_BOXED(0xa6a3715b,64,FLEN)
NAN_BOXED(0xa6a3715b,64,FLEN)
NAN_BOXED(0xa6a3715b,64,FLEN)
NAN_BOXED(0x4e941a8f,64,FLEN)
NAN_BOXED(0x4e941a8f,64,FLEN)
NAN_BOXED(0x4e941a8f,64,FLEN)
NAN_BOXED(0x4e941a8f,64,FLEN)
NAN_BOXED(0x4e941a8f,64,FLEN)
NAN_BOXED(0x4e941a8f,64,FLEN)
NAN_BOXED(0x4e941a8f,64,FLEN)
NAN_BOXED(0x4e941a8f,64,FLEN)
NAN_BOXED(0x4e941a8f,64,FLEN)
NAN_BOXED(0x4e941a8f,64,FLEN)
NAN_BOXED(0x474ed968,64,FLEN)
NAN_BOXED(0x474ed968,64,FLEN)
NAN_BOXED(0x474ed968,64,FLEN)
NAN_BOXED(0x474ed968,64,FLEN)
NAN_BOXED(0x474ed968,64,FLEN)
NAN_BOXED(0x474ed968,64,FLEN)
NAN_BOXED(0x474ed968,64,FLEN)
NAN_BOXED(0x474ed968,64,FLEN)
NAN_BOXED(0x474ed968,64,FLEN)
NAN_BOXED(0x474ed968,64,FLEN)
NAN_BOXED(0x2ad232bd,64,FLEN)
NAN_BOXED(0x2ad232bd,64,FLEN)
NAN_BOXED(0x2ad232bd,64,FLEN)
NAN_BOXED(0x2ad232bd,64,FLEN)
NAN_BOXED(0x2ad232bd,64,FLEN)
NAN_BOXED(0x2ad232bd,64,FLEN)
NAN_BOXED(0x2ad232bd,64,FLEN)
NAN_BOXED(0x2ad232bd,64,FLEN)
NAN_BOXED(0x2ad232bd,64,FLEN)
NAN_BOXED(0x2ad232bd,64,FLEN)
NAN_BOXED(0x4468445c,64,FLEN)
NAN_BOXED(0x4468445c,64,FLEN)
NAN_BOXED(0x4468445c,64,FLEN)
NAN_BOXED(0x4468445c,64,FLEN)
NAN_BOXED(0x4468445c,64,FLEN)
NAN_BOXED(0x4468445c,64,FLEN)
NAN_BOXED(0x4468445c,64,FLEN)
NAN_BOXED(0x4468445c,64,FLEN)
NAN_BOXED(0x4468445c,64,FLEN)
NAN_BOXED(0x4468445c,64,FLEN)
NAN_BOXED(0x2f200426,64,FLEN)
NAN_BOXED(0x2f200426,64,FLEN)
NAN_BOXED(0x2f200426,64,FLEN)
NAN_BOXED(0x2f200426,64,FLEN)
NAN_BOXED(0x2f200426,64,FLEN)
NAN_BOXED(0x2f200426,64,FLEN)
NAN_BOXED(0x2f200426,64,FLEN)
NAN_BOXED(0x2f200426,64,FLEN)
NAN_BOXED(0x2f200426,64,FLEN)
NAN_BOXED(0x2f200426,64,FLEN)
NAN_BOXED(0x19d60908,64,FLEN)
NAN_BOXED(0x19d60908,64,FLEN)
NAN_BOXED(0x19d60908,64,FLEN)
NAN_BOXED(0x19d60908,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 22*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 512*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 512*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 512*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 512*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 512*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_7:
    .fill 362*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
