
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Thu Aug 24 09:13:10 2023 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV32Zdinx/feq.d.cgf \
 \
//                  -- xlen 32  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the feq.d instruction of the RISC-V RV32_Zfinx_Zdinx extension for the feq.d_b1 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32I_Zfinx_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*Zdinx.*);def TEST_CASE_1=True;",feq.d_b1)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:// rs1 == rs2, rs1==x30, rs2==x30, rd==x30,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x30; dest:x30; op1val:0x0000000000000000; valaddr_reg:x3; op2:x30; op2val:0x0000000000000000
offset:0*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x30, x31,x30,x31,0, 0, 0, 0x00000000, 0x00000000,0x00000000,0x00000000,x3, 0*SIGALIGN, x4,x1, x2)

inst_1:// rs1 != rs2, rs1==x28, rs2==x26, rd==x28,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x28; op1val:0x0000000000000000; valaddr_reg:x3; op2:x26; op2val:0x8000000000000000
offset:2*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x28, x29, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x00000000,0x00000000,0x80000000,x3, 2*SIGALIGN, x4,x1, x2)

inst_2:// rs1==x24, rs2==x28, rd==x26,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x24; dest:x26; op1val:0x0000000000000000; valaddr_reg:x3; op2:x28; op2val:0x0000000000000001
offset:4*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x26, x27, x24, x25,x28,x29,0, 0, 0, 0x00000000, 0x00000000,0x00000001,0x00000000,x3, 4*SIGALIGN, x4,x1, x2)

inst_3:// rs1==x26, rs2==x22, rd==x24,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x26; dest:x24; op1val:0x0000000000000000; valaddr_reg:x3; op2:x22; op2val:0x8000000000000001
offset:6*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x24, x25, x26, x27,x22,x23,0, 0, 0, 0x00000000, 0x00000000,0x00000001,0x80000000,x3, 6*SIGALIGN, x4,x1, x2)

inst_4:// rs1==x20, rs2==x24, rd==x22,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x20; dest:x22; op1val:0x0000000000000000; valaddr_reg:x3; op2:x24; op2val:0x0000000000000002
offset:8*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x22, x23, x20, x21,x24,x25,0, 0, 0, 0x00000000, 0x00000000,0x00000002,0x00000000,x3, 8*SIGALIGN, x4,x1, x2)

inst_5:// rs1==x22, rs2==x18, rd==x20,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x22; dest:x20; op1val:0x0000000000000000; valaddr_reg:x3; op2:x18; op2val:0x8000000000000002
offset:10*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x20, x21, x22, x23,x18,x19,0, 0, 0, 0x00000000, 0x00000000,0x00000002,0x80000000,x3, 10*SIGALIGN, x4,x1, x2)

inst_6:// rs1==x16, rs2==x20, rd==x18,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x16; dest:x18; op1val:0x0000000000000000; valaddr_reg:x3; op2:x20; op2val:0x000fffffffffffff
offset:12*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x18, x19, x16, x17,x20,x21,0, 0, 0, 0x00000000, 0x00000000,0xffffffff,0x000fffff,x3, 12*SIGALIGN, x4,x1, x2)

inst_7:// rs1==x18, rs2==x14, rd==x16,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x18; dest:x16; op1val:0x0000000000000000; valaddr_reg:x3; op2:x14; op2val:0x800fffffffffffff
offset:14*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x16, x17, x18, x19,x14,x15,0, 0, 0, 0x00000000, 0x00000000,0xffffffff,0x800fffff,x3, 14*SIGALIGN, x4,x1, x2)

inst_8:// rs1==x12, rs2==x16, rd==x14,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x12; dest:x14; op1val:0x0000000000000000; valaddr_reg:x3; op2:x16; op2val:0x0010000000000000
offset:16*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x14, x15, x12, x13,x16,x17,0, 0, 0, 0x00000000, 0x00000000,0x00000000,0x00100000,x3, 16*SIGALIGN, x4,x1, x2)
RVTEST_VALBASEUPD(x16,test_dataset_1)

inst_9:// rs1==x14, rs2==x10, rd==x12,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x14; dest:x12; op1val:0x0000000000000000; valaddr_reg:x16; op2:x10; op2val:0x8010000000000000
offset:0*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x12, x13, x14, x15,x10,x11,0, 0, 0, 0x00000000, 0x00000000,0x00000000,0x80100000,x16, 18*SIGALIGN, x17,x1, x2)

inst_10:// rs1==x8, rs2==x12, rd==x10,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x8; dest:x10; op1val:0x0000000000000000; valaddr_reg:x16; op2:x12; op2val:0x0010000000000002
offset:2*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x10, x11, x8, x9,x12,x13,0, 0, 0, 0x00000000, 0x00000000,0x00000002,0x00100000,x16, 20*SIGALIGN, x17,x1, x14)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_11:// rs1==x10, rs2==x6, rd==x8,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x10; dest:x8; op1val:0x0000000000000000; valaddr_reg:x16; op2:x6; op2val:0x8010000000000002
offset:4*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x8, x9, x10, x11,x6,x7,0, 0, 0, 0x00000000, 0x00000000,0x00000002,0x80100000,x16, 0*SIGALIGN, x17,x1, x14)

inst_12:// rs1==x4, rs2==x8, rd==x6,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x4; dest:x6; op1val:0x0000000000000000; valaddr_reg:x16; op2:x8; op2val:0x7fefffffffffffff
offset:6*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x6, x7, x4, x5,x8,x9,0, 0, 0, 0x00000000, 0x00000000,0xffffffff,0x7fefffff,x16, 2*SIGALIGN, x17,x1, x14)

inst_13:// rs1==x6, rs2==x2, rd==x4,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x6; dest:x4; op1val:0x0000000000000000; valaddr_reg:x16; op2:x2; op2val:0xffefffffffffffff
offset:8*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x4, x5, x6, x7,x2,x3,0, 0, 0, 0x00000000, 0x00000000,0xffffffff,0xffefffff,x16, 4*SIGALIGN, x17,x1, x14)

inst_14:// rs1==x2,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x2; dest:x30; op1val:0x0000000000000000; valaddr_reg:x16; op2:x28; op2val:0x7ff0000000000000
offset:10*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x2, x3,x28,x29,0, 0, 0, 0x00000000, 0x00000000,0x00000000,0x7ff00000,x16, 6*SIGALIGN, x17,x1, x14)

inst_15:// rs2==x4,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000000; valaddr_reg:x16; op2:x4; op2val:0xfff0000000000000
offset:12*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x4,x5,0, 0, 0, 0x00000000, 0x00000000,0x00000000,0xfff00000,x16, 8*SIGALIGN, x17,x1, x14)

inst_16:// rd==x2,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x30; dest:x2; op1val:0x0000000000000000; valaddr_reg:x16; op2:x28; op2val:0x7ff8000000000000
offset:14*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x2, x3, x30, x31,x28,x29,0, 0, 0, 0x00000000, 0x00000000,0x00000000,0x7ff80000,x16, 10*SIGALIGN, x17,x1, x14)

inst_17:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000000
offset:16*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x00000000,0x00000000,0xfff80000,x16, 12*SIGALIGN, x17,x1, x14)

inst_18:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000001
offset:18*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x00000000,0x00000001,0x7ff80000,x16, 14*SIGALIGN, x17,x1, x14)

inst_19:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000001
offset:20*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x00000000,0x00000001,0xfff80000,x16, 16*SIGALIGN, x17,x1, x14)

inst_20:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000001
offset:22*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x00000000,0x00000001,0x7ff00000,x16, 18*SIGALIGN, x17,x1, x14)

inst_21:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000001
offset:24*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x00000000,0x00000001,0xfff00000,x16, 20*SIGALIGN, x17,x1, x14)

inst_22:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000000; valaddr_reg:x16; op2:x26; op2val:0x3ff0000000000000
offset:26*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x00000000,0x00000000,0x3ff00000,x16, 22*SIGALIGN, x17,x1, x14)

inst_23:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000000; valaddr_reg:x16; op2:x26; op2val:0xbf80000000000000
offset:28*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x00000000,0x00000000,0xbf800000,x16, 24*SIGALIGN, x17,x1, x14)

inst_24:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000000; valaddr_reg:x16; op2:x26; op2val:0x0000000000000000
offset:30*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80000000,0x00000000,0x00000000,x16, 26*SIGALIGN, x17,x1, x14)

inst_25:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000000; valaddr_reg:x16; op2:x26; op2val:0x8000000000000000
offset:32*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80000000,0x00000000,0x80000000,x16, 28*SIGALIGN, x17,x1, x14)

inst_26:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000000; valaddr_reg:x16; op2:x26; op2val:0x0000000000000001
offset:34*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80000000,0x00000001,0x00000000,x16, 30*SIGALIGN, x17,x1, x14)

inst_27:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000000; valaddr_reg:x16; op2:x26; op2val:0x8000000000000001
offset:36*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80000000,0x00000001,0x80000000,x16, 32*SIGALIGN, x17,x1, x14)

inst_28:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000000; valaddr_reg:x16; op2:x26; op2val:0x0000000000000002
offset:38*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80000000,0x00000002,0x00000000,x16, 34*SIGALIGN, x17,x1, x14)

inst_29:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000000; valaddr_reg:x16; op2:x26; op2val:0x8000000000000002
offset:40*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80000000,0x00000002,0x80000000,x16, 36*SIGALIGN, x17,x1, x14)

inst_30:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000000; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffffff
offset:42*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80000000,0xffffffff,0x000fffff,x16, 38*SIGALIGN, x17,x1, x14)

inst_31:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000000; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffffff
offset:44*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80000000,0xffffffff,0x800fffff,x16, 40*SIGALIGN, x17,x1, x14)

inst_32:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000000; valaddr_reg:x16; op2:x26; op2val:0x0010000000000000
offset:46*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80000000,0x00000000,0x00100000,x16, 42*SIGALIGN, x17,x1, x14)

inst_33:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000000; valaddr_reg:x16; op2:x26; op2val:0x8010000000000000
offset:48*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80000000,0x00000000,0x80100000,x16, 44*SIGALIGN, x17,x1, x14)

inst_34:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000000; valaddr_reg:x16; op2:x26; op2val:0x0010000000000002
offset:50*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80000000,0x00000002,0x00100000,x16, 46*SIGALIGN, x17,x1, x14)

inst_35:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000000; valaddr_reg:x16; op2:x26; op2val:0x8010000000000002
offset:52*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80000000,0x00000002,0x80100000,x16, 48*SIGALIGN, x17,x1, x14)

inst_36:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000000; valaddr_reg:x16; op2:x26; op2val:0x7fefffffffffffff
offset:54*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80000000,0xffffffff,0x7fefffff,x16, 50*SIGALIGN, x17,x1, x14)

inst_37:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000000; valaddr_reg:x16; op2:x26; op2val:0xffefffffffffffff
offset:56*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80000000,0xffffffff,0xffefffff,x16, 52*SIGALIGN, x17,x1, x14)

inst_38:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:58*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80000000,0x00000000,0x7ff00000,x16, 54*SIGALIGN, x17,x1, x14)

inst_39:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:60*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80000000,0x00000000,0xfff00000,x16, 56*SIGALIGN, x17,x1, x14)

inst_40:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000000
offset:62*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80000000,0x00000000,0x7ff80000,x16, 58*SIGALIGN, x17,x1, x14)

inst_41:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000000
offset:64*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80000000,0x00000000,0xfff80000,x16, 60*SIGALIGN, x17,x1, x14)

inst_42:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000001
offset:66*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80000000,0x00000001,0x7ff80000,x16, 62*SIGALIGN, x17,x1, x14)

inst_43:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000001
offset:68*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80000000,0x00000001,0xfff80000,x16, 64*SIGALIGN, x17,x1, x14)

inst_44:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000001
offset:70*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80000000,0x00000001,0x7ff00000,x16, 66*SIGALIGN, x17,x1, x14)

inst_45:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000001
offset:72*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80000000,0x00000001,0xfff00000,x16, 68*SIGALIGN, x17,x1, x14)

inst_46:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000000; valaddr_reg:x16; op2:x26; op2val:0x3ff0000000000000
offset:74*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80000000,0x00000000,0x3ff00000,x16, 70*SIGALIGN, x17,x1, x14)

inst_47:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000000; valaddr_reg:x16; op2:x26; op2val:0xbf80000000000000
offset:76*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80000000,0x00000000,0xbf800000,x16, 72*SIGALIGN, x17,x1, x14)

inst_48:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000001; valaddr_reg:x16; op2:x26; op2val:0x0000000000000000
offset:78*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x00000000,0x00000000,0x00000000,x16, 74*SIGALIGN, x17,x1, x14)

inst_49:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000001; valaddr_reg:x16; op2:x26; op2val:0x8000000000000000
offset:80*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x00000000,0x00000000,0x80000000,x16, 76*SIGALIGN, x17,x1, x14)

inst_50:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000001; valaddr_reg:x16; op2:x26; op2val:0x0000000000000001
offset:82*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x00000000,0x00000001,0x00000000,x16, 78*SIGALIGN, x17,x1, x14)

inst_51:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000001; valaddr_reg:x16; op2:x26; op2val:0x8000000000000001
offset:84*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x00000000,0x00000001,0x80000000,x16, 80*SIGALIGN, x17,x1, x14)

inst_52:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000001; valaddr_reg:x16; op2:x26; op2val:0x0000000000000002
offset:86*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x00000000,0x00000002,0x00000000,x16, 82*SIGALIGN, x17,x1, x14)

inst_53:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000001; valaddr_reg:x16; op2:x26; op2val:0x8000000000000002
offset:88*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x00000000,0x00000002,0x80000000,x16, 84*SIGALIGN, x17,x1, x14)

inst_54:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000001; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffffff
offset:90*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x00000000,0xffffffff,0x000fffff,x16, 86*SIGALIGN, x17,x1, x14)

inst_55:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000001; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffffff
offset:92*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x00000000,0xffffffff,0x800fffff,x16, 88*SIGALIGN, x17,x1, x14)

inst_56:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000001; valaddr_reg:x16; op2:x26; op2val:0x0010000000000000
offset:94*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x00000000,0x00000000,0x00100000,x16, 90*SIGALIGN, x17,x1, x14)

inst_57:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000001; valaddr_reg:x16; op2:x26; op2val:0x8010000000000000
offset:96*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x00000000,0x00000000,0x80100000,x16, 92*SIGALIGN, x17,x1, x14)

inst_58:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000001; valaddr_reg:x16; op2:x26; op2val:0x0010000000000002
offset:98*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x00000000,0x00000002,0x00100000,x16, 94*SIGALIGN, x17,x1, x14)

inst_59:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000001; valaddr_reg:x16; op2:x26; op2val:0x8010000000000002
offset:100*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x00000000,0x00000002,0x80100000,x16, 96*SIGALIGN, x17,x1, x14)

inst_60:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000001; valaddr_reg:x16; op2:x26; op2val:0x7fefffffffffffff
offset:102*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x00000000,0xffffffff,0x7fefffff,x16, 98*SIGALIGN, x17,x1, x14)

inst_61:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000001; valaddr_reg:x16; op2:x26; op2val:0xffefffffffffffff
offset:104*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x00000000,0xffffffff,0xffefffff,x16, 100*SIGALIGN, x17,x1, x14)

inst_62:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000001; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:106*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x00000000,0x00000000,0x7ff00000,x16, 102*SIGALIGN, x17,x1, x14)

inst_63:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000001; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:108*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x00000000,0x00000000,0xfff00000,x16, 104*SIGALIGN, x17,x1, x14)

inst_64:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000001; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000000
offset:110*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x00000000,0x00000000,0x7ff80000,x16, 106*SIGALIGN, x17,x1, x14)

inst_65:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000001; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000000
offset:112*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x00000000,0x00000000,0xfff80000,x16, 108*SIGALIGN, x17,x1, x14)

inst_66:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000001; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000001
offset:114*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x00000000,0x00000001,0x7ff80000,x16, 110*SIGALIGN, x17,x1, x14)

inst_67:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000001; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000001
offset:116*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x00000000,0x00000001,0xfff80000,x16, 112*SIGALIGN, x17,x1, x14)

inst_68:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000001; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000001
offset:118*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x00000000,0x00000001,0x7ff00000,x16, 114*SIGALIGN, x17,x1, x14)

inst_69:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000001; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000001
offset:120*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x00000000,0x00000001,0xfff00000,x16, 116*SIGALIGN, x17,x1, x14)

inst_70:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000001; valaddr_reg:x16; op2:x26; op2val:0x3ff0000000000000
offset:122*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x00000000,0x00000000,0x3ff00000,x16, 118*SIGALIGN, x17,x1, x14)

inst_71:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000001; valaddr_reg:x16; op2:x26; op2val:0xbf80000000000000
offset:124*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x00000000,0x00000000,0xbf800000,x16, 120*SIGALIGN, x17,x1, x14)

inst_72:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000001; valaddr_reg:x16; op2:x26; op2val:0x0000000000000000
offset:126*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x80000000,0x00000000,0x00000000,x16, 122*SIGALIGN, x17,x1, x14)

inst_73:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000001; valaddr_reg:x16; op2:x26; op2val:0x8000000000000000
offset:128*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x80000000,0x00000000,0x80000000,x16, 124*SIGALIGN, x17,x1, x14)

inst_74:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000001; valaddr_reg:x16; op2:x26; op2val:0x0000000000000001
offset:130*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x80000000,0x00000001,0x00000000,x16, 126*SIGALIGN, x17,x1, x14)

inst_75:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000001; valaddr_reg:x16; op2:x26; op2val:0x8000000000000001
offset:132*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x80000000,0x00000001,0x80000000,x16, 128*SIGALIGN, x17,x1, x14)

inst_76:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000001; valaddr_reg:x16; op2:x26; op2val:0x0000000000000002
offset:134*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x80000000,0x00000002,0x00000000,x16, 130*SIGALIGN, x17,x1, x14)

inst_77:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000001; valaddr_reg:x16; op2:x26; op2val:0x8000000000000002
offset:136*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x80000000,0x00000002,0x80000000,x16, 132*SIGALIGN, x17,x1, x14)

inst_78:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000001; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffffff
offset:138*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x80000000,0xffffffff,0x000fffff,x16, 134*SIGALIGN, x17,x1, x14)

inst_79:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000001; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffffff
offset:140*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x80000000,0xffffffff,0x800fffff,x16, 136*SIGALIGN, x17,x1, x14)

inst_80:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000001; valaddr_reg:x16; op2:x26; op2val:0x0010000000000000
offset:142*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x80000000,0x00000000,0x00100000,x16, 138*SIGALIGN, x17,x1, x14)

inst_81:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000001; valaddr_reg:x16; op2:x26; op2val:0x8010000000000000
offset:144*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x80000000,0x00000000,0x80100000,x16, 140*SIGALIGN, x17,x1, x14)

inst_82:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000001; valaddr_reg:x16; op2:x26; op2val:0x0010000000000002
offset:146*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x80000000,0x00000002,0x00100000,x16, 142*SIGALIGN, x17,x1, x14)

inst_83:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000001; valaddr_reg:x16; op2:x26; op2val:0x8010000000000002
offset:148*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x80000000,0x00000002,0x80100000,x16, 144*SIGALIGN, x17,x1, x14)

inst_84:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000001; valaddr_reg:x16; op2:x26; op2val:0x7fefffffffffffff
offset:150*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x80000000,0xffffffff,0x7fefffff,x16, 146*SIGALIGN, x17,x1, x14)

inst_85:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000001; valaddr_reg:x16; op2:x26; op2val:0xffefffffffffffff
offset:152*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x80000000,0xffffffff,0xffefffff,x16, 148*SIGALIGN, x17,x1, x14)

inst_86:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000001; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:154*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x80000000,0x00000000,0x7ff00000,x16, 150*SIGALIGN, x17,x1, x14)

inst_87:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000001; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:156*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x80000000,0x00000000,0xfff00000,x16, 152*SIGALIGN, x17,x1, x14)

inst_88:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000001; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000000
offset:158*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x80000000,0x00000000,0x7ff80000,x16, 154*SIGALIGN, x17,x1, x14)

inst_89:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000001; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000000
offset:160*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x80000000,0x00000000,0xfff80000,x16, 156*SIGALIGN, x17,x1, x14)

inst_90:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000001; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000001
offset:162*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x80000000,0x00000001,0x7ff80000,x16, 158*SIGALIGN, x17,x1, x14)

inst_91:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000001; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000001
offset:164*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x80000000,0x00000001,0xfff80000,x16, 160*SIGALIGN, x17,x1, x14)

inst_92:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000001; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000001
offset:166*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x80000000,0x00000001,0x7ff00000,x16, 162*SIGALIGN, x17,x1, x14)

inst_93:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000001; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000001
offset:168*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x80000000,0x00000001,0xfff00000,x16, 164*SIGALIGN, x17,x1, x14)

inst_94:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000001; valaddr_reg:x16; op2:x26; op2val:0x3ff0000000000000
offset:170*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x80000000,0x00000000,0x3ff00000,x16, 166*SIGALIGN, x17,x1, x14)

inst_95:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000001; valaddr_reg:x16; op2:x26; op2val:0xbf80000000000000
offset:172*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x80000000,0x00000000,0xbf800000,x16, 168*SIGALIGN, x17,x1, x14)

inst_96:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000002; valaddr_reg:x16; op2:x26; op2val:0x0000000000000000
offset:174*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00000000,0x00000000,0x00000000,x16, 170*SIGALIGN, x17,x1, x14)

inst_97:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000002; valaddr_reg:x16; op2:x26; op2val:0x8000000000000000
offset:176*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00000000,0x00000000,0x80000000,x16, 172*SIGALIGN, x17,x1, x14)

inst_98:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000002; valaddr_reg:x16; op2:x26; op2val:0x0000000000000001
offset:178*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00000000,0x00000001,0x00000000,x16, 174*SIGALIGN, x17,x1, x14)

inst_99:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000002; valaddr_reg:x16; op2:x26; op2val:0x8000000000000001
offset:180*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00000000,0x00000001,0x80000000,x16, 176*SIGALIGN, x17,x1, x14)

inst_100:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000002; valaddr_reg:x16; op2:x26; op2val:0x0000000000000002
offset:182*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00000000,0x00000002,0x00000000,x16, 178*SIGALIGN, x17,x1, x14)

inst_101:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000002; valaddr_reg:x16; op2:x26; op2val:0x8000000000000002
offset:184*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00000000,0x00000002,0x80000000,x16, 180*SIGALIGN, x17,x1, x14)

inst_102:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000002; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffffff
offset:186*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00000000,0xffffffff,0x000fffff,x16, 182*SIGALIGN, x17,x1, x14)

inst_103:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000002; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffffff
offset:188*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00000000,0xffffffff,0x800fffff,x16, 184*SIGALIGN, x17,x1, x14)

inst_104:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000002; valaddr_reg:x16; op2:x26; op2val:0x0010000000000000
offset:190*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00000000,0x00000000,0x00100000,x16, 186*SIGALIGN, x17,x1, x14)

inst_105:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000002; valaddr_reg:x16; op2:x26; op2val:0x8010000000000000
offset:192*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00000000,0x00000000,0x80100000,x16, 188*SIGALIGN, x17,x1, x14)

inst_106:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000002; valaddr_reg:x16; op2:x26; op2val:0x0010000000000002
offset:194*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00000000,0x00000002,0x00100000,x16, 190*SIGALIGN, x17,x1, x14)

inst_107:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000002; valaddr_reg:x16; op2:x26; op2val:0x8010000000000002
offset:196*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00000000,0x00000002,0x80100000,x16, 192*SIGALIGN, x17,x1, x14)

inst_108:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000002; valaddr_reg:x16; op2:x26; op2val:0x7fefffffffffffff
offset:198*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00000000,0xffffffff,0x7fefffff,x16, 194*SIGALIGN, x17,x1, x14)

inst_109:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000002; valaddr_reg:x16; op2:x26; op2val:0xffefffffffffffff
offset:200*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00000000,0xffffffff,0xffefffff,x16, 196*SIGALIGN, x17,x1, x14)

inst_110:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000002; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:202*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00000000,0x00000000,0x7ff00000,x16, 198*SIGALIGN, x17,x1, x14)

inst_111:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000002; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:204*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00000000,0x00000000,0xfff00000,x16, 200*SIGALIGN, x17,x1, x14)

inst_112:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000002; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000000
offset:206*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00000000,0x00000000,0x7ff80000,x16, 202*SIGALIGN, x17,x1, x14)

inst_113:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000002; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000000
offset:208*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00000000,0x00000000,0xfff80000,x16, 204*SIGALIGN, x17,x1, x14)

inst_114:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000002; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000001
offset:210*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00000000,0x00000001,0x7ff80000,x16, 206*SIGALIGN, x17,x1, x14)

inst_115:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000002; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000001
offset:212*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00000000,0x00000001,0xfff80000,x16, 208*SIGALIGN, x17,x1, x14)

inst_116:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000002; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000001
offset:214*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00000000,0x00000001,0x7ff00000,x16, 210*SIGALIGN, x17,x1, x14)

inst_117:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000002; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000001
offset:216*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00000000,0x00000001,0xfff00000,x16, 212*SIGALIGN, x17,x1, x14)

inst_118:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000002; valaddr_reg:x16; op2:x26; op2val:0x3ff0000000000000
offset:218*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00000000,0x00000000,0x3ff00000,x16, 214*SIGALIGN, x17,x1, x14)

inst_119:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000002; valaddr_reg:x16; op2:x26; op2val:0xbf80000000000000
offset:220*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00000000,0x00000000,0xbf800000,x16, 216*SIGALIGN, x17,x1, x14)

inst_120:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000002; valaddr_reg:x16; op2:x26; op2val:0x0000000000000000
offset:222*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80000000,0x00000000,0x00000000,x16, 218*SIGALIGN, x17,x1, x14)

inst_121:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000002; valaddr_reg:x16; op2:x26; op2val:0x8000000000000000
offset:224*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80000000,0x00000000,0x80000000,x16, 220*SIGALIGN, x17,x1, x14)

inst_122:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000002; valaddr_reg:x16; op2:x26; op2val:0x0000000000000001
offset:226*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80000000,0x00000001,0x00000000,x16, 222*SIGALIGN, x17,x1, x14)

inst_123:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000002; valaddr_reg:x16; op2:x26; op2val:0x8000000000000001
offset:228*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80000000,0x00000001,0x80000000,x16, 224*SIGALIGN, x17,x1, x14)

inst_124:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000002; valaddr_reg:x16; op2:x26; op2val:0x0000000000000002
offset:230*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80000000,0x00000002,0x00000000,x16, 226*SIGALIGN, x17,x1, x14)

inst_125:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000002; valaddr_reg:x16; op2:x26; op2val:0x8000000000000002
offset:232*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80000000,0x00000002,0x80000000,x16, 228*SIGALIGN, x17,x1, x14)

inst_126:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000002; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffffff
offset:234*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80000000,0xffffffff,0x000fffff,x16, 230*SIGALIGN, x17,x1, x14)

inst_127:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000002; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffffff
offset:236*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80000000,0xffffffff,0x800fffff,x16, 232*SIGALIGN, x17,x1, x14)

inst_128:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000002; valaddr_reg:x16; op2:x26; op2val:0x0010000000000000
offset:238*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80000000,0x00000000,0x00100000,x16, 234*SIGALIGN, x17,x1, x14)

inst_129:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000002; valaddr_reg:x16; op2:x26; op2val:0x8010000000000000
offset:240*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80000000,0x00000000,0x80100000,x16, 236*SIGALIGN, x17,x1, x14)

inst_130:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000002; valaddr_reg:x16; op2:x26; op2val:0x0010000000000002
offset:242*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80000000,0x00000002,0x00100000,x16, 238*SIGALIGN, x17,x1, x14)

inst_131:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000002; valaddr_reg:x16; op2:x26; op2val:0x8010000000000002
offset:244*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80000000,0x00000002,0x80100000,x16, 240*SIGALIGN, x17,x1, x14)

inst_132:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000002; valaddr_reg:x16; op2:x26; op2val:0x7fefffffffffffff
offset:246*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80000000,0xffffffff,0x7fefffff,x16, 242*SIGALIGN, x17,x1, x14)

inst_133:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000002; valaddr_reg:x16; op2:x26; op2val:0xffefffffffffffff
offset:248*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80000000,0xffffffff,0xffefffff,x16, 244*SIGALIGN, x17,x1, x14)

inst_134:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000002; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:250*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80000000,0x00000000,0x7ff00000,x16, 246*SIGALIGN, x17,x1, x14)

inst_135:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000002; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:252*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80000000,0x00000000,0xfff00000,x16, 248*SIGALIGN, x17,x1, x14)

inst_136:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000002; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000000
offset:254*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80000000,0x00000000,0x7ff80000,x16, 250*SIGALIGN, x17,x1, x14)

inst_137:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000002; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000000
offset:256*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80000000,0x00000000,0xfff80000,x16, 252*SIGALIGN, x17,x1, x14)

inst_138:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000002; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000001
offset:258*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80000000,0x00000001,0x7ff80000,x16, 254*SIGALIGN, x17,x1, x14)

inst_139:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000002; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000001
offset:260*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80000000,0x00000001,0xfff80000,x16, 256*SIGALIGN, x17,x1, x14)

inst_140:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000002; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000001
offset:262*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80000000,0x00000001,0x7ff00000,x16, 258*SIGALIGN, x17,x1, x14)

inst_141:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000002; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000001
offset:264*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80000000,0x00000001,0xfff00000,x16, 260*SIGALIGN, x17,x1, x14)

inst_142:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000002; valaddr_reg:x16; op2:x26; op2val:0x3ff0000000000000
offset:266*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80000000,0x00000000,0x3ff00000,x16, 262*SIGALIGN, x17,x1, x14)

inst_143:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8000000000000002; valaddr_reg:x16; op2:x26; op2val:0xbf80000000000000
offset:268*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80000000,0x00000000,0xbf800000,x16, 264*SIGALIGN, x17,x1, x14)

inst_144:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x000fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x0000000000000000
offset:270*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x000fffff,0x00000000,0x00000000,x16, 266*SIGALIGN, x17,x1, x14)

inst_145:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x000fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x8000000000000000
offset:272*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x000fffff,0x00000000,0x80000000,x16, 268*SIGALIGN, x17,x1, x14)

inst_146:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x000fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x0000000000000001
offset:274*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x000fffff,0x00000001,0x00000000,x16, 270*SIGALIGN, x17,x1, x14)

inst_147:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x000fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x8000000000000001
offset:276*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x000fffff,0x00000001,0x80000000,x16, 272*SIGALIGN, x17,x1, x14)

inst_148:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x000fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x0000000000000002
offset:278*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x000fffff,0x00000002,0x00000000,x16, 274*SIGALIGN, x17,x1, x14)

inst_149:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x000fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x8000000000000002
offset:280*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x000fffff,0x00000002,0x80000000,x16, 276*SIGALIGN, x17,x1, x14)

inst_150:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x000fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffffff
offset:282*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x000fffff,0xffffffff,0x000fffff,x16, 278*SIGALIGN, x17,x1, x14)

inst_151:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x000fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffffff
offset:284*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x000fffff,0xffffffff,0x800fffff,x16, 280*SIGALIGN, x17,x1, x14)

inst_152:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x000fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x0010000000000000
offset:286*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x000fffff,0x00000000,0x00100000,x16, 282*SIGALIGN, x17,x1, x14)

inst_153:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x000fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x8010000000000000
offset:288*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x000fffff,0x00000000,0x80100000,x16, 284*SIGALIGN, x17,x1, x14)

inst_154:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x000fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x0010000000000002
offset:290*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x000fffff,0x00000002,0x00100000,x16, 286*SIGALIGN, x17,x1, x14)

inst_155:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x000fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x8010000000000002
offset:292*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x000fffff,0x00000002,0x80100000,x16, 288*SIGALIGN, x17,x1, x14)

inst_156:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x000fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x7fefffffffffffff
offset:294*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x000fffff,0xffffffff,0x7fefffff,x16, 290*SIGALIGN, x17,x1, x14)

inst_157:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x000fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0xffefffffffffffff
offset:296*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x000fffff,0xffffffff,0xffefffff,x16, 292*SIGALIGN, x17,x1, x14)

inst_158:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x000fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:298*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x000fffff,0x00000000,0x7ff00000,x16, 294*SIGALIGN, x17,x1, x14)

inst_159:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x000fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:300*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x000fffff,0x00000000,0xfff00000,x16, 296*SIGALIGN, x17,x1, x14)

inst_160:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x000fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000000
offset:302*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x000fffff,0x00000000,0x7ff80000,x16, 298*SIGALIGN, x17,x1, x14)

inst_161:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x000fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000000
offset:304*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x000fffff,0x00000000,0xfff80000,x16, 300*SIGALIGN, x17,x1, x14)

inst_162:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x000fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000001
offset:306*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x000fffff,0x00000001,0x7ff80000,x16, 302*SIGALIGN, x17,x1, x14)

inst_163:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x000fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000001
offset:308*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x000fffff,0x00000001,0xfff80000,x16, 304*SIGALIGN, x17,x1, x14)

inst_164:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x000fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000001
offset:310*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x000fffff,0x00000001,0x7ff00000,x16, 306*SIGALIGN, x17,x1, x14)

inst_165:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x000fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000001
offset:312*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x000fffff,0x00000001,0xfff00000,x16, 308*SIGALIGN, x17,x1, x14)

inst_166:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x000fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x3ff0000000000000
offset:314*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x000fffff,0x00000000,0x3ff00000,x16, 310*SIGALIGN, x17,x1, x14)

inst_167:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x000fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0xbf80000000000000
offset:316*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x000fffff,0x00000000,0xbf800000,x16, 312*SIGALIGN, x17,x1, x14)

inst_168:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x800fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x0000000000000000
offset:318*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x800fffff,0x00000000,0x00000000,x16, 314*SIGALIGN, x17,x1, x14)

inst_169:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x800fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x8000000000000000
offset:320*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x800fffff,0x00000000,0x80000000,x16, 316*SIGALIGN, x17,x1, x14)

inst_170:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x800fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x0000000000000001
offset:322*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x800fffff,0x00000001,0x00000000,x16, 318*SIGALIGN, x17,x1, x14)

inst_171:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x800fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x8000000000000001
offset:324*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x800fffff,0x00000001,0x80000000,x16, 320*SIGALIGN, x17,x1, x14)

inst_172:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x800fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x0000000000000002
offset:326*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x800fffff,0x00000002,0x00000000,x16, 322*SIGALIGN, x17,x1, x14)

inst_173:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x800fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x8000000000000002
offset:328*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x800fffff,0x00000002,0x80000000,x16, 324*SIGALIGN, x17,x1, x14)

inst_174:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x800fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffffff
offset:330*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x800fffff,0xffffffff,0x000fffff,x16, 326*SIGALIGN, x17,x1, x14)

inst_175:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x800fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffffff
offset:332*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x800fffff,0xffffffff,0x800fffff,x16, 328*SIGALIGN, x17,x1, x14)

inst_176:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x800fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x0010000000000000
offset:334*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x800fffff,0x00000000,0x00100000,x16, 330*SIGALIGN, x17,x1, x14)

inst_177:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x800fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x8010000000000000
offset:336*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x800fffff,0x00000000,0x80100000,x16, 332*SIGALIGN, x17,x1, x14)

inst_178:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x800fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x0010000000000002
offset:338*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x800fffff,0x00000002,0x00100000,x16, 334*SIGALIGN, x17,x1, x14)

inst_179:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x800fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x8010000000000002
offset:340*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x800fffff,0x00000002,0x80100000,x16, 336*SIGALIGN, x17,x1, x14)

inst_180:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x800fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x7fefffffffffffff
offset:342*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x800fffff,0xffffffff,0x7fefffff,x16, 338*SIGALIGN, x17,x1, x14)

inst_181:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x800fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0xffefffffffffffff
offset:344*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x800fffff,0xffffffff,0xffefffff,x16, 340*SIGALIGN, x17,x1, x14)

inst_182:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x800fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:346*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x800fffff,0x00000000,0x7ff00000,x16, 342*SIGALIGN, x17,x1, x14)

inst_183:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x800fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:348*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x800fffff,0x00000000,0xfff00000,x16, 344*SIGALIGN, x17,x1, x14)

inst_184:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x800fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000000
offset:350*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x800fffff,0x00000000,0x7ff80000,x16, 346*SIGALIGN, x17,x1, x14)

inst_185:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x800fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000000
offset:352*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x800fffff,0x00000000,0xfff80000,x16, 348*SIGALIGN, x17,x1, x14)

inst_186:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x800fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000001
offset:354*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x800fffff,0x00000001,0x7ff80000,x16, 350*SIGALIGN, x17,x1, x14)

inst_187:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x800fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000001
offset:356*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x800fffff,0x00000001,0xfff80000,x16, 352*SIGALIGN, x17,x1, x14)

inst_188:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x800fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000001
offset:358*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x800fffff,0x00000001,0x7ff00000,x16, 354*SIGALIGN, x17,x1, x14)

inst_189:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x800fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000001
offset:360*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x800fffff,0x00000001,0xfff00000,x16, 356*SIGALIGN, x17,x1, x14)

inst_190:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x800fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x3ff0000000000000
offset:362*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x800fffff,0x00000000,0x3ff00000,x16, 358*SIGALIGN, x17,x1, x14)

inst_191:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x800fffffffffffff; valaddr_reg:x16; op2:x26; op2val:0xbf80000000000000
offset:364*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x800fffff,0x00000000,0xbf800000,x16, 360*SIGALIGN, x17,x1, x14)

inst_192:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000000; valaddr_reg:x16; op2:x26; op2val:0x0000000000000000
offset:366*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x00100000,0x00000000,0x00000000,x16, 362*SIGALIGN, x17,x1, x14)

inst_193:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000000; valaddr_reg:x16; op2:x26; op2val:0x8000000000000000
offset:368*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x00100000,0x00000000,0x80000000,x16, 364*SIGALIGN, x17,x1, x14)

inst_194:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000000; valaddr_reg:x16; op2:x26; op2val:0x0000000000000001
offset:370*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x00100000,0x00000001,0x00000000,x16, 366*SIGALIGN, x17,x1, x14)

inst_195:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000000; valaddr_reg:x16; op2:x26; op2val:0x8000000000000001
offset:372*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x00100000,0x00000001,0x80000000,x16, 368*SIGALIGN, x17,x1, x14)

inst_196:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000000; valaddr_reg:x16; op2:x26; op2val:0x0000000000000002
offset:374*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x00100000,0x00000002,0x00000000,x16, 370*SIGALIGN, x17,x1, x14)

inst_197:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000000; valaddr_reg:x16; op2:x26; op2val:0x8000000000000002
offset:376*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x00100000,0x00000002,0x80000000,x16, 372*SIGALIGN, x17,x1, x14)

inst_198:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000000; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffffff
offset:378*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x00100000,0xffffffff,0x000fffff,x16, 374*SIGALIGN, x17,x1, x14)

inst_199:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000000; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffffff
offset:380*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x00100000,0xffffffff,0x800fffff,x16, 376*SIGALIGN, x17,x1, x14)

inst_200:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000000; valaddr_reg:x16; op2:x26; op2val:0x0010000000000000
offset:382*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x00100000,0x00000000,0x00100000,x16, 378*SIGALIGN, x17,x1, x14)

inst_201:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000000; valaddr_reg:x16; op2:x26; op2val:0x8010000000000000
offset:384*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x00100000,0x00000000,0x80100000,x16, 380*SIGALIGN, x17,x1, x14)

inst_202:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000000; valaddr_reg:x16; op2:x26; op2val:0x0010000000000002
offset:386*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x00100000,0x00000002,0x00100000,x16, 382*SIGALIGN, x17,x1, x14)

inst_203:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000000; valaddr_reg:x16; op2:x26; op2val:0x8010000000000002
offset:388*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x00100000,0x00000002,0x80100000,x16, 384*SIGALIGN, x17,x1, x14)

inst_204:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000000; valaddr_reg:x16; op2:x26; op2val:0x7fefffffffffffff
offset:390*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x00100000,0xffffffff,0x7fefffff,x16, 386*SIGALIGN, x17,x1, x14)

inst_205:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000000; valaddr_reg:x16; op2:x26; op2val:0xffefffffffffffff
offset:392*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x00100000,0xffffffff,0xffefffff,x16, 388*SIGALIGN, x17,x1, x14)

inst_206:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:394*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x00100000,0x00000000,0x7ff00000,x16, 390*SIGALIGN, x17,x1, x14)

inst_207:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:396*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x00100000,0x00000000,0xfff00000,x16, 392*SIGALIGN, x17,x1, x14)

inst_208:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000000
offset:398*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x00100000,0x00000000,0x7ff80000,x16, 394*SIGALIGN, x17,x1, x14)

inst_209:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000000
offset:400*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x00100000,0x00000000,0xfff80000,x16, 396*SIGALIGN, x17,x1, x14)

inst_210:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000001
offset:402*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x00100000,0x00000001,0x7ff80000,x16, 398*SIGALIGN, x17,x1, x14)

inst_211:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000001
offset:404*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x00100000,0x00000001,0xfff80000,x16, 400*SIGALIGN, x17,x1, x14)

inst_212:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000001
offset:406*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x00100000,0x00000001,0x7ff00000,x16, 402*SIGALIGN, x17,x1, x14)

inst_213:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000001
offset:408*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x00100000,0x00000001,0xfff00000,x16, 404*SIGALIGN, x17,x1, x14)

inst_214:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000000; valaddr_reg:x16; op2:x26; op2val:0x3ff0000000000000
offset:410*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x00100000,0x00000000,0x3ff00000,x16, 406*SIGALIGN, x17,x1, x14)

inst_215:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000000; valaddr_reg:x16; op2:x26; op2val:0xbf80000000000000
offset:412*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x00100000,0x00000000,0xbf800000,x16, 408*SIGALIGN, x17,x1, x14)

inst_216:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000000; valaddr_reg:x16; op2:x26; op2val:0x0000000000000000
offset:414*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80100000,0x00000000,0x00000000,x16, 410*SIGALIGN, x17,x1, x14)

inst_217:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000000; valaddr_reg:x16; op2:x26; op2val:0x8000000000000000
offset:416*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80100000,0x00000000,0x80000000,x16, 412*SIGALIGN, x17,x1, x14)

inst_218:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000000; valaddr_reg:x16; op2:x26; op2val:0x0000000000000001
offset:418*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80100000,0x00000001,0x00000000,x16, 414*SIGALIGN, x17,x1, x14)

inst_219:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000000; valaddr_reg:x16; op2:x26; op2val:0x8000000000000001
offset:420*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80100000,0x00000001,0x80000000,x16, 416*SIGALIGN, x17,x1, x14)

inst_220:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000000; valaddr_reg:x16; op2:x26; op2val:0x0000000000000002
offset:422*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80100000,0x00000002,0x00000000,x16, 418*SIGALIGN, x17,x1, x14)

inst_221:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000000; valaddr_reg:x16; op2:x26; op2val:0x8000000000000002
offset:424*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80100000,0x00000002,0x80000000,x16, 420*SIGALIGN, x17,x1, x14)

inst_222:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000000; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffffff
offset:426*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80100000,0xffffffff,0x000fffff,x16, 422*SIGALIGN, x17,x1, x14)

inst_223:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000000; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffffff
offset:428*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80100000,0xffffffff,0x800fffff,x16, 424*SIGALIGN, x17,x1, x14)

inst_224:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000000; valaddr_reg:x16; op2:x26; op2val:0x0010000000000000
offset:430*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80100000,0x00000000,0x00100000,x16, 426*SIGALIGN, x17,x1, x14)

inst_225:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000000; valaddr_reg:x16; op2:x26; op2val:0x8010000000000000
offset:432*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80100000,0x00000000,0x80100000,x16, 428*SIGALIGN, x17,x1, x14)

inst_226:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000000; valaddr_reg:x16; op2:x26; op2val:0x0010000000000002
offset:434*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80100000,0x00000002,0x00100000,x16, 430*SIGALIGN, x17,x1, x14)

inst_227:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000000; valaddr_reg:x16; op2:x26; op2val:0x8010000000000002
offset:436*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80100000,0x00000002,0x80100000,x16, 432*SIGALIGN, x17,x1, x14)

inst_228:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000000; valaddr_reg:x16; op2:x26; op2val:0x7fefffffffffffff
offset:438*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80100000,0xffffffff,0x7fefffff,x16, 434*SIGALIGN, x17,x1, x14)

inst_229:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000000; valaddr_reg:x16; op2:x26; op2val:0xffefffffffffffff
offset:440*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80100000,0xffffffff,0xffefffff,x16, 436*SIGALIGN, x17,x1, x14)

inst_230:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:442*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80100000,0x00000000,0x7ff00000,x16, 438*SIGALIGN, x17,x1, x14)

inst_231:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:444*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80100000,0x00000000,0xfff00000,x16, 440*SIGALIGN, x17,x1, x14)

inst_232:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000000
offset:446*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80100000,0x00000000,0x7ff80000,x16, 442*SIGALIGN, x17,x1, x14)

inst_233:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000000
offset:448*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80100000,0x00000000,0xfff80000,x16, 444*SIGALIGN, x17,x1, x14)

inst_234:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000001
offset:450*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80100000,0x00000001,0x7ff80000,x16, 446*SIGALIGN, x17,x1, x14)

inst_235:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000001
offset:452*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80100000,0x00000001,0xfff80000,x16, 448*SIGALIGN, x17,x1, x14)

inst_236:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000001
offset:454*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80100000,0x00000001,0x7ff00000,x16, 450*SIGALIGN, x17,x1, x14)

inst_237:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000001
offset:456*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80100000,0x00000001,0xfff00000,x16, 452*SIGALIGN, x17,x1, x14)

inst_238:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000000; valaddr_reg:x16; op2:x26; op2val:0x3ff0000000000000
offset:458*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80100000,0x00000000,0x3ff00000,x16, 454*SIGALIGN, x17,x1, x14)

inst_239:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000000; valaddr_reg:x16; op2:x26; op2val:0xbf80000000000000
offset:460*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x80100000,0x00000000,0xbf800000,x16, 456*SIGALIGN, x17,x1, x14)

inst_240:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000002; valaddr_reg:x16; op2:x26; op2val:0x0000000000000000
offset:462*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00100000,0x00000000,0x00000000,x16, 458*SIGALIGN, x17,x1, x14)

inst_241:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000002; valaddr_reg:x16; op2:x26; op2val:0x8000000000000000
offset:464*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00100000,0x00000000,0x80000000,x16, 460*SIGALIGN, x17,x1, x14)

inst_242:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000002; valaddr_reg:x16; op2:x26; op2val:0x0000000000000001
offset:466*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00100000,0x00000001,0x00000000,x16, 462*SIGALIGN, x17,x1, x14)

inst_243:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000002; valaddr_reg:x16; op2:x26; op2val:0x8000000000000001
offset:468*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00100000,0x00000001,0x80000000,x16, 464*SIGALIGN, x17,x1, x14)

inst_244:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000002; valaddr_reg:x16; op2:x26; op2val:0x0000000000000002
offset:470*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00100000,0x00000002,0x00000000,x16, 466*SIGALIGN, x17,x1, x14)

inst_245:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000002; valaddr_reg:x16; op2:x26; op2val:0x8000000000000002
offset:472*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00100000,0x00000002,0x80000000,x16, 468*SIGALIGN, x17,x1, x14)

inst_246:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000002; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffffff
offset:474*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00100000,0xffffffff,0x000fffff,x16, 470*SIGALIGN, x17,x1, x14)

inst_247:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000002; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffffff
offset:476*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00100000,0xffffffff,0x800fffff,x16, 472*SIGALIGN, x17,x1, x14)

inst_248:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000002; valaddr_reg:x16; op2:x26; op2val:0x0010000000000000
offset:478*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00100000,0x00000000,0x00100000,x16, 474*SIGALIGN, x17,x1, x14)

inst_249:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000002; valaddr_reg:x16; op2:x26; op2val:0x8010000000000000
offset:480*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00100000,0x00000000,0x80100000,x16, 476*SIGALIGN, x17,x1, x14)

inst_250:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000002; valaddr_reg:x16; op2:x26; op2val:0x0010000000000002
offset:482*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00100000,0x00000002,0x00100000,x16, 478*SIGALIGN, x17,x1, x14)

inst_251:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000002; valaddr_reg:x16; op2:x26; op2val:0x8010000000000002
offset:484*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00100000,0x00000002,0x80100000,x16, 480*SIGALIGN, x17,x1, x14)

inst_252:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000002; valaddr_reg:x16; op2:x26; op2val:0x7fefffffffffffff
offset:486*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00100000,0xffffffff,0x7fefffff,x16, 482*SIGALIGN, x17,x1, x14)

inst_253:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000002; valaddr_reg:x16; op2:x26; op2val:0xffefffffffffffff
offset:488*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00100000,0xffffffff,0xffefffff,x16, 484*SIGALIGN, x17,x1, x14)

inst_254:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000002; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:490*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00100000,0x00000000,0x7ff00000,x16, 486*SIGALIGN, x17,x1, x14)

inst_255:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000002; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:492*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00100000,0x00000000,0xfff00000,x16, 488*SIGALIGN, x17,x1, x14)

inst_256:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000002; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000000
offset:494*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00100000,0x00000000,0x7ff80000,x16, 490*SIGALIGN, x17,x1, x14)

inst_257:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000002; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000000
offset:496*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00100000,0x00000000,0xfff80000,x16, 492*SIGALIGN, x17,x1, x14)

inst_258:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000002; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000001
offset:498*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00100000,0x00000001,0x7ff80000,x16, 494*SIGALIGN, x17,x1, x14)

inst_259:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000002; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000001
offset:500*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00100000,0x00000001,0xfff80000,x16, 496*SIGALIGN, x17,x1, x14)

inst_260:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000002; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000001
offset:502*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00100000,0x00000001,0x7ff00000,x16, 498*SIGALIGN, x17,x1, x14)

inst_261:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000002; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000001
offset:504*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00100000,0x00000001,0xfff00000,x16, 500*SIGALIGN, x17,x1, x14)

inst_262:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000002; valaddr_reg:x16; op2:x26; op2val:0x3ff0000000000000
offset:506*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00100000,0x00000000,0x3ff00000,x16, 502*SIGALIGN, x17,x1, x14)

inst_263:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0010000000000002; valaddr_reg:x16; op2:x26; op2val:0xbf80000000000000
offset:508*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00100000,0x00000000,0xbf800000,x16, 504*SIGALIGN, x17,x1, x14)

inst_264:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000002; valaddr_reg:x16; op2:x26; op2val:0x0000000000000000
offset:510*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80100000,0x00000000,0x00000000,x16, 506*SIGALIGN, x17,x1, x14)

inst_265:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000002; valaddr_reg:x16; op2:x26; op2val:0x8000000000000000
offset:512*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80100000,0x00000000,0x80000000,x16, 508*SIGALIGN, x17,x1, x14)

inst_266:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000002; valaddr_reg:x16; op2:x26; op2val:0x0000000000000001
offset:514*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80100000,0x00000001,0x00000000,x16, 510*SIGALIGN, x17,x1, x14)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_267:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000002; valaddr_reg:x16; op2:x26; op2val:0x8000000000000001
offset:516*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80100000,0x00000001,0x80000000,x16, 0*SIGALIGN, x17,x1, x14)

inst_268:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000002; valaddr_reg:x16; op2:x26; op2val:0x0000000000000002
offset:518*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80100000,0x00000002,0x00000000,x16, 2*SIGALIGN, x17,x1, x14)

inst_269:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000002; valaddr_reg:x16; op2:x26; op2val:0x8000000000000002
offset:520*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80100000,0x00000002,0x80000000,x16, 4*SIGALIGN, x17,x1, x14)

inst_270:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000002; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffffff
offset:522*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80100000,0xffffffff,0x000fffff,x16, 6*SIGALIGN, x17,x1, x14)

inst_271:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000002; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffffff
offset:524*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80100000,0xffffffff,0x800fffff,x16, 8*SIGALIGN, x17,x1, x14)

inst_272:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000002; valaddr_reg:x16; op2:x26; op2val:0x0010000000000000
offset:526*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80100000,0x00000000,0x00100000,x16, 10*SIGALIGN, x17,x1, x14)

inst_273:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000002; valaddr_reg:x16; op2:x26; op2val:0x8010000000000000
offset:528*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80100000,0x00000000,0x80100000,x16, 12*SIGALIGN, x17,x1, x14)

inst_274:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000002; valaddr_reg:x16; op2:x26; op2val:0x0010000000000002
offset:530*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80100000,0x00000002,0x00100000,x16, 14*SIGALIGN, x17,x1, x14)

inst_275:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000002; valaddr_reg:x16; op2:x26; op2val:0x8010000000000002
offset:532*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80100000,0x00000002,0x80100000,x16, 16*SIGALIGN, x17,x1, x14)

inst_276:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000002; valaddr_reg:x16; op2:x26; op2val:0x7fefffffffffffff
offset:534*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80100000,0xffffffff,0x7fefffff,x16, 18*SIGALIGN, x17,x1, x14)

inst_277:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000002; valaddr_reg:x16; op2:x26; op2val:0xffefffffffffffff
offset:536*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80100000,0xffffffff,0xffefffff,x16, 20*SIGALIGN, x17,x1, x14)

inst_278:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000002; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:538*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80100000,0x00000000,0x7ff00000,x16, 22*SIGALIGN, x17,x1, x14)

inst_279:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000002; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:540*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80100000,0x00000000,0xfff00000,x16, 24*SIGALIGN, x17,x1, x14)

inst_280:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000002; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000000
offset:542*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80100000,0x00000000,0x7ff80000,x16, 26*SIGALIGN, x17,x1, x14)

inst_281:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000002; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000000
offset:544*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80100000,0x00000000,0xfff80000,x16, 28*SIGALIGN, x17,x1, x14)

inst_282:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000002; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000001
offset:546*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80100000,0x00000001,0x7ff80000,x16, 30*SIGALIGN, x17,x1, x14)

inst_283:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000002; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000001
offset:548*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80100000,0x00000001,0xfff80000,x16, 32*SIGALIGN, x17,x1, x14)

inst_284:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000002; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000001
offset:550*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80100000,0x00000001,0x7ff00000,x16, 34*SIGALIGN, x17,x1, x14)

inst_285:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000002; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000001
offset:552*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80100000,0x00000001,0xfff00000,x16, 36*SIGALIGN, x17,x1, x14)

inst_286:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000002; valaddr_reg:x16; op2:x26; op2val:0x3ff0000000000000
offset:554*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80100000,0x00000000,0x3ff00000,x16, 38*SIGALIGN, x17,x1, x14)

inst_287:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x8010000000000002; valaddr_reg:x16; op2:x26; op2val:0xbf80000000000000
offset:556*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x80100000,0x00000000,0xbf800000,x16, 40*SIGALIGN, x17,x1, x14)

inst_288:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7fefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x0000000000000000
offset:558*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x7fefffff,0x00000000,0x00000000,x16, 42*SIGALIGN, x17,x1, x14)

inst_289:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7fefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x8000000000000000
offset:560*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x7fefffff,0x00000000,0x80000000,x16, 44*SIGALIGN, x17,x1, x14)

inst_290:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7fefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x0000000000000001
offset:562*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x7fefffff,0x00000001,0x00000000,x16, 46*SIGALIGN, x17,x1, x14)

inst_291:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7fefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x8000000000000001
offset:564*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x7fefffff,0x00000001,0x80000000,x16, 48*SIGALIGN, x17,x1, x14)

inst_292:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7fefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x0000000000000002
offset:566*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x7fefffff,0x00000002,0x00000000,x16, 50*SIGALIGN, x17,x1, x14)

inst_293:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7fefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x8000000000000002
offset:568*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x7fefffff,0x00000002,0x80000000,x16, 52*SIGALIGN, x17,x1, x14)

inst_294:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7fefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffffff
offset:570*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x7fefffff,0xffffffff,0x000fffff,x16, 54*SIGALIGN, x17,x1, x14)

inst_295:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7fefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffffff
offset:572*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x7fefffff,0xffffffff,0x800fffff,x16, 56*SIGALIGN, x17,x1, x14)

inst_296:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7fefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x0010000000000000
offset:574*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x7fefffff,0x00000000,0x00100000,x16, 58*SIGALIGN, x17,x1, x14)

inst_297:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7fefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x8010000000000000
offset:576*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x7fefffff,0x00000000,0x80100000,x16, 60*SIGALIGN, x17,x1, x14)

inst_298:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7fefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x0010000000000002
offset:578*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x7fefffff,0x00000002,0x00100000,x16, 62*SIGALIGN, x17,x1, x14)

inst_299:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7fefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x8010000000000002
offset:580*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x7fefffff,0x00000002,0x80100000,x16, 64*SIGALIGN, x17,x1, x14)

inst_300:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7fefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x7fefffffffffffff
offset:582*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x7fefffff,0xffffffff,0x7fefffff,x16, 66*SIGALIGN, x17,x1, x14)

inst_301:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7fefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0xffefffffffffffff
offset:584*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x7fefffff,0xffffffff,0xffefffff,x16, 68*SIGALIGN, x17,x1, x14)

inst_302:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7fefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:586*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x7fefffff,0x00000000,0x7ff00000,x16, 70*SIGALIGN, x17,x1, x14)

inst_303:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7fefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:588*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x7fefffff,0x00000000,0xfff00000,x16, 72*SIGALIGN, x17,x1, x14)

inst_304:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7fefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000000
offset:590*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x7fefffff,0x00000000,0x7ff80000,x16, 74*SIGALIGN, x17,x1, x14)

inst_305:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7fefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000000
offset:592*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x7fefffff,0x00000000,0xfff80000,x16, 76*SIGALIGN, x17,x1, x14)

inst_306:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7fefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000001
offset:594*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x7fefffff,0x00000001,0x7ff80000,x16, 78*SIGALIGN, x17,x1, x14)

inst_307:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7fefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000001
offset:596*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x7fefffff,0x00000001,0xfff80000,x16, 80*SIGALIGN, x17,x1, x14)

inst_308:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7fefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000001
offset:598*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x7fefffff,0x00000001,0x7ff00000,x16, 82*SIGALIGN, x17,x1, x14)

inst_309:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7fefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000001
offset:600*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x7fefffff,0x00000001,0xfff00000,x16, 84*SIGALIGN, x17,x1, x14)

inst_310:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7fefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x3ff0000000000000
offset:602*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x7fefffff,0x00000000,0x3ff00000,x16, 86*SIGALIGN, x17,x1, x14)

inst_311:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7fefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0xbf80000000000000
offset:604*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0x7fefffff,0x00000000,0xbf800000,x16, 88*SIGALIGN, x17,x1, x14)

inst_312:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xffefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x0000000000000000
offset:606*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0xffefffff,0x00000000,0x00000000,x16, 90*SIGALIGN, x17,x1, x14)

inst_313:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xffefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x8000000000000000
offset:608*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0xffefffff,0x00000000,0x80000000,x16, 92*SIGALIGN, x17,x1, x14)

inst_314:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xffefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x0000000000000001
offset:610*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0xffefffff,0x00000001,0x00000000,x16, 94*SIGALIGN, x17,x1, x14)

inst_315:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xffefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x8000000000000001
offset:612*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0xffefffff,0x00000001,0x80000000,x16, 96*SIGALIGN, x17,x1, x14)

inst_316:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xffefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x0000000000000002
offset:614*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0xffefffff,0x00000002,0x00000000,x16, 98*SIGALIGN, x17,x1, x14)

inst_317:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xffefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x8000000000000002
offset:616*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0xffefffff,0x00000002,0x80000000,x16, 100*SIGALIGN, x17,x1, x14)

inst_318:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xffefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffffff
offset:618*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0xffefffff,0xffffffff,0x000fffff,x16, 102*SIGALIGN, x17,x1, x14)

inst_319:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xffefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffffff
offset:620*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0xffefffff,0xffffffff,0x800fffff,x16, 104*SIGALIGN, x17,x1, x14)

inst_320:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xffefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x0010000000000000
offset:622*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0xffefffff,0x00000000,0x00100000,x16, 106*SIGALIGN, x17,x1, x14)

inst_321:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xffefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x8010000000000000
offset:624*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0xffefffff,0x00000000,0x80100000,x16, 108*SIGALIGN, x17,x1, x14)

inst_322:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xffefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x0010000000000002
offset:626*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0xffefffff,0x00000002,0x00100000,x16, 110*SIGALIGN, x17,x1, x14)

inst_323:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xffefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x8010000000000002
offset:628*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0xffefffff,0x00000002,0x80100000,x16, 112*SIGALIGN, x17,x1, x14)

inst_324:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xffefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x7fefffffffffffff
offset:630*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0xffefffff,0xffffffff,0x7fefffff,x16, 114*SIGALIGN, x17,x1, x14)

inst_325:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xffefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0xffefffffffffffff
offset:632*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0xffefffff,0xffffffff,0xffefffff,x16, 116*SIGALIGN, x17,x1, x14)

inst_326:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xffefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:634*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0xffefffff,0x00000000,0x7ff00000,x16, 118*SIGALIGN, x17,x1, x14)

inst_327:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xffefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:636*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0xffefffff,0x00000000,0xfff00000,x16, 120*SIGALIGN, x17,x1, x14)

inst_328:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xffefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000000
offset:638*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0xffefffff,0x00000000,0x7ff80000,x16, 122*SIGALIGN, x17,x1, x14)

inst_329:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xffefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000000
offset:640*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0xffefffff,0x00000000,0xfff80000,x16, 124*SIGALIGN, x17,x1, x14)

inst_330:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xffefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000001
offset:642*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0xffefffff,0x00000001,0x7ff80000,x16, 126*SIGALIGN, x17,x1, x14)

inst_331:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xffefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000001
offset:644*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0xffefffff,0x00000001,0xfff80000,x16, 128*SIGALIGN, x17,x1, x14)

inst_332:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xffefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000001
offset:646*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0xffefffff,0x00000001,0x7ff00000,x16, 130*SIGALIGN, x17,x1, x14)

inst_333:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xffefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000001
offset:648*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0xffefffff,0x00000001,0xfff00000,x16, 132*SIGALIGN, x17,x1, x14)

inst_334:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xffefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0x3ff0000000000000
offset:650*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0xffefffff,0x00000000,0x3ff00000,x16, 134*SIGALIGN, x17,x1, x14)

inst_335:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xfffffffffffff and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xffefffffffffffff; valaddr_reg:x16; op2:x26; op2val:0xbf80000000000000
offset:652*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xffffffff, 0xffefffff,0x00000000,0xbf800000,x16, 136*SIGALIGN, x17,x1, x14)

inst_336:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x0000000000000000
offset:654*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff00000,0x00000000,0x00000000,x16, 138*SIGALIGN, x17,x1, x14)

inst_337:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x8000000000000000
offset:656*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff00000,0x00000000,0x80000000,x16, 140*SIGALIGN, x17,x1, x14)

inst_338:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x0000000000000001
offset:658*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff00000,0x00000001,0x00000000,x16, 142*SIGALIGN, x17,x1, x14)

inst_339:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x8000000000000001
offset:660*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff00000,0x00000001,0x80000000,x16, 144*SIGALIGN, x17,x1, x14)

inst_340:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x0000000000000002
offset:662*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff00000,0x00000002,0x00000000,x16, 146*SIGALIGN, x17,x1, x14)

inst_341:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x8000000000000002
offset:664*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff00000,0x00000002,0x80000000,x16, 148*SIGALIGN, x17,x1, x14)

inst_342:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffffff
offset:666*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff00000,0xffffffff,0x000fffff,x16, 150*SIGALIGN, x17,x1, x14)

inst_343:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffffff
offset:668*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff00000,0xffffffff,0x800fffff,x16, 152*SIGALIGN, x17,x1, x14)

inst_344:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x0010000000000000
offset:670*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff00000,0x00000000,0x00100000,x16, 154*SIGALIGN, x17,x1, x14)

inst_345:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x8010000000000000
offset:672*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff00000,0x00000000,0x80100000,x16, 156*SIGALIGN, x17,x1, x14)

inst_346:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x0010000000000002
offset:674*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff00000,0x00000002,0x00100000,x16, 158*SIGALIGN, x17,x1, x14)

inst_347:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x8010000000000002
offset:676*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff00000,0x00000002,0x80100000,x16, 160*SIGALIGN, x17,x1, x14)

inst_348:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x7fefffffffffffff
offset:678*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff00000,0xffffffff,0x7fefffff,x16, 162*SIGALIGN, x17,x1, x14)

inst_349:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0xffefffffffffffff
offset:680*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff00000,0xffffffff,0xffefffff,x16, 164*SIGALIGN, x17,x1, x14)

inst_350:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:682*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff00000,0x00000000,0x7ff00000,x16, 166*SIGALIGN, x17,x1, x14)

inst_351:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:684*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff00000,0x00000000,0xfff00000,x16, 168*SIGALIGN, x17,x1, x14)

inst_352:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000000
offset:686*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff00000,0x00000000,0x7ff80000,x16, 170*SIGALIGN, x17,x1, x14)

inst_353:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000000
offset:688*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff00000,0x00000000,0xfff80000,x16, 172*SIGALIGN, x17,x1, x14)

inst_354:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000001
offset:690*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff00000,0x00000001,0x7ff80000,x16, 174*SIGALIGN, x17,x1, x14)

inst_355:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000001
offset:692*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff00000,0x00000001,0xfff80000,x16, 176*SIGALIGN, x17,x1, x14)

inst_356:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000001
offset:694*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff00000,0x00000001,0x7ff00000,x16, 178*SIGALIGN, x17,x1, x14)

inst_357:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000001
offset:696*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff00000,0x00000001,0xfff00000,x16, 180*SIGALIGN, x17,x1, x14)

inst_358:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x3ff0000000000000
offset:698*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff00000,0x00000000,0x3ff00000,x16, 182*SIGALIGN, x17,x1, x14)

inst_359:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0xbf80000000000000
offset:700*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff00000,0x00000000,0xbf800000,x16, 184*SIGALIGN, x17,x1, x14)

inst_360:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x0000000000000000
offset:702*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff00000,0x00000000,0x00000000,x16, 186*SIGALIGN, x17,x1, x14)

inst_361:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x8000000000000000
offset:704*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff00000,0x00000000,0x80000000,x16, 188*SIGALIGN, x17,x1, x14)

inst_362:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x0000000000000001
offset:706*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff00000,0x00000001,0x00000000,x16, 190*SIGALIGN, x17,x1, x14)

inst_363:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x8000000000000001
offset:708*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff00000,0x00000001,0x80000000,x16, 192*SIGALIGN, x17,x1, x14)

inst_364:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x0000000000000002
offset:710*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff00000,0x00000002,0x00000000,x16, 194*SIGALIGN, x17,x1, x14)

inst_365:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x8000000000000002
offset:712*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff00000,0x00000002,0x80000000,x16, 196*SIGALIGN, x17,x1, x14)

inst_366:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffffff
offset:714*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff00000,0xffffffff,0x000fffff,x16, 198*SIGALIGN, x17,x1, x14)

inst_367:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffffff
offset:716*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff00000,0xffffffff,0x800fffff,x16, 200*SIGALIGN, x17,x1, x14)

inst_368:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x0010000000000000
offset:718*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff00000,0x00000000,0x00100000,x16, 202*SIGALIGN, x17,x1, x14)

inst_369:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x8010000000000000
offset:720*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff00000,0x00000000,0x80100000,x16, 204*SIGALIGN, x17,x1, x14)

inst_370:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x0010000000000002
offset:722*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff00000,0x00000002,0x00100000,x16, 206*SIGALIGN, x17,x1, x14)

inst_371:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x8010000000000002
offset:724*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff00000,0x00000002,0x80100000,x16, 208*SIGALIGN, x17,x1, x14)

inst_372:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x7fefffffffffffff
offset:726*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff00000,0xffffffff,0x7fefffff,x16, 210*SIGALIGN, x17,x1, x14)

inst_373:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000000; valaddr_reg:x16; op2:x26; op2val:0xffefffffffffffff
offset:728*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff00000,0xffffffff,0xffefffff,x16, 212*SIGALIGN, x17,x1, x14)

inst_374:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:730*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff00000,0x00000000,0x7ff00000,x16, 214*SIGALIGN, x17,x1, x14)

inst_375:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:732*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff00000,0x00000000,0xfff00000,x16, 216*SIGALIGN, x17,x1, x14)

inst_376:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000000
offset:734*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff00000,0x00000000,0x7ff80000,x16, 218*SIGALIGN, x17,x1, x14)

inst_377:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000000
offset:736*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff00000,0x00000000,0xfff80000,x16, 220*SIGALIGN, x17,x1, x14)

inst_378:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000001
offset:738*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff00000,0x00000001,0x7ff80000,x16, 222*SIGALIGN, x17,x1, x14)

inst_379:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000001
offset:740*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff00000,0x00000001,0xfff80000,x16, 224*SIGALIGN, x17,x1, x14)

inst_380:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000001
offset:742*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff00000,0x00000001,0x7ff00000,x16, 226*SIGALIGN, x17,x1, x14)

inst_381:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000001
offset:744*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff00000,0x00000001,0xfff00000,x16, 228*SIGALIGN, x17,x1, x14)

inst_382:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x3ff0000000000000
offset:746*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff00000,0x00000000,0x3ff00000,x16, 230*SIGALIGN, x17,x1, x14)

inst_383:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000000; valaddr_reg:x16; op2:x26; op2val:0xbf80000000000000
offset:748*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff00000,0x00000000,0xbf800000,x16, 232*SIGALIGN, x17,x1, x14)

inst_384:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x0000000000000000
offset:750*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff80000,0x00000000,0x00000000,x16, 234*SIGALIGN, x17,x1, x14)

inst_385:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x8000000000000000
offset:752*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff80000,0x00000000,0x80000000,x16, 236*SIGALIGN, x17,x1, x14)

inst_386:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x0000000000000001
offset:754*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff80000,0x00000001,0x00000000,x16, 238*SIGALIGN, x17,x1, x14)

inst_387:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x8000000000000001
offset:756*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff80000,0x00000001,0x80000000,x16, 240*SIGALIGN, x17,x1, x14)

inst_388:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x0000000000000002
offset:758*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff80000,0x00000002,0x00000000,x16, 242*SIGALIGN, x17,x1, x14)

inst_389:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x8000000000000002
offset:760*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff80000,0x00000002,0x80000000,x16, 244*SIGALIGN, x17,x1, x14)

inst_390:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffffff
offset:762*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff80000,0xffffffff,0x000fffff,x16, 246*SIGALIGN, x17,x1, x14)

inst_391:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffffff
offset:764*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff80000,0xffffffff,0x800fffff,x16, 248*SIGALIGN, x17,x1, x14)

inst_392:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x0010000000000000
offset:766*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff80000,0x00000000,0x00100000,x16, 250*SIGALIGN, x17,x1, x14)

inst_393:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x8010000000000000
offset:768*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff80000,0x00000000,0x80100000,x16, 252*SIGALIGN, x17,x1, x14)

inst_394:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x0010000000000002
offset:770*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff80000,0x00000002,0x00100000,x16, 254*SIGALIGN, x17,x1, x14)

inst_395:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x8010000000000002
offset:772*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff80000,0x00000002,0x80100000,x16, 256*SIGALIGN, x17,x1, x14)

inst_396:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x7fefffffffffffff
offset:774*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff80000,0xffffffff,0x7fefffff,x16, 258*SIGALIGN, x17,x1, x14)

inst_397:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000000; valaddr_reg:x16; op2:x26; op2val:0xffefffffffffffff
offset:776*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff80000,0xffffffff,0xffefffff,x16, 260*SIGALIGN, x17,x1, x14)

inst_398:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:778*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff80000,0x00000000,0x7ff00000,x16, 262*SIGALIGN, x17,x1, x14)

inst_399:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:780*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff80000,0x00000000,0xfff00000,x16, 264*SIGALIGN, x17,x1, x14)

inst_400:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000000
offset:782*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff80000,0x00000000,0x7ff80000,x16, 266*SIGALIGN, x17,x1, x14)

inst_401:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000000
offset:784*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff80000,0x00000000,0xfff80000,x16, 268*SIGALIGN, x17,x1, x14)

inst_402:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000001
offset:786*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff80000,0x00000001,0x7ff80000,x16, 270*SIGALIGN, x17,x1, x14)

inst_403:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000001
offset:788*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff80000,0x00000001,0xfff80000,x16, 272*SIGALIGN, x17,x1, x14)

inst_404:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000001
offset:790*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff80000,0x00000001,0x7ff00000,x16, 274*SIGALIGN, x17,x1, x14)

inst_405:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000001
offset:792*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff80000,0x00000001,0xfff00000,x16, 276*SIGALIGN, x17,x1, x14)

inst_406:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x3ff0000000000000
offset:794*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff80000,0x00000000,0x3ff00000,x16, 278*SIGALIGN, x17,x1, x14)

inst_407:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000000; valaddr_reg:x16; op2:x26; op2val:0xbf80000000000000
offset:796*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x7ff80000,0x00000000,0xbf800000,x16, 280*SIGALIGN, x17,x1, x14)

inst_408:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x0000000000000000
offset:798*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff80000,0x00000000,0x00000000,x16, 282*SIGALIGN, x17,x1, x14)

inst_409:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x8000000000000000
offset:800*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff80000,0x00000000,0x80000000,x16, 284*SIGALIGN, x17,x1, x14)

inst_410:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x0000000000000001
offset:802*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff80000,0x00000001,0x00000000,x16, 286*SIGALIGN, x17,x1, x14)

inst_411:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x8000000000000001
offset:804*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff80000,0x00000001,0x80000000,x16, 288*SIGALIGN, x17,x1, x14)

inst_412:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x0000000000000002
offset:806*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff80000,0x00000002,0x00000000,x16, 290*SIGALIGN, x17,x1, x14)

inst_413:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x8000000000000002
offset:808*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff80000,0x00000002,0x80000000,x16, 292*SIGALIGN, x17,x1, x14)

inst_414:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffffff
offset:810*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff80000,0xffffffff,0x000fffff,x16, 294*SIGALIGN, x17,x1, x14)

inst_415:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffffff
offset:812*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff80000,0xffffffff,0x800fffff,x16, 296*SIGALIGN, x17,x1, x14)

inst_416:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x0010000000000000
offset:814*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff80000,0x00000000,0x00100000,x16, 298*SIGALIGN, x17,x1, x14)

inst_417:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x8010000000000000
offset:816*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff80000,0x00000000,0x80100000,x16, 300*SIGALIGN, x17,x1, x14)

inst_418:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x0010000000000002
offset:818*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff80000,0x00000002,0x00100000,x16, 302*SIGALIGN, x17,x1, x14)

inst_419:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x8010000000000002
offset:820*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff80000,0x00000002,0x80100000,x16, 304*SIGALIGN, x17,x1, x14)

inst_420:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x7fefffffffffffff
offset:822*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff80000,0xffffffff,0x7fefffff,x16, 306*SIGALIGN, x17,x1, x14)

inst_421:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000000; valaddr_reg:x16; op2:x26; op2val:0xffefffffffffffff
offset:824*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff80000,0xffffffff,0xffefffff,x16, 308*SIGALIGN, x17,x1, x14)

inst_422:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:826*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff80000,0x00000000,0x7ff00000,x16, 310*SIGALIGN, x17,x1, x14)

inst_423:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:828*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff80000,0x00000000,0xfff00000,x16, 312*SIGALIGN, x17,x1, x14)

inst_424:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000000
offset:830*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff80000,0x00000000,0x7ff80000,x16, 314*SIGALIGN, x17,x1, x14)

inst_425:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000000
offset:832*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff80000,0x00000000,0xfff80000,x16, 316*SIGALIGN, x17,x1, x14)

inst_426:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000001
offset:834*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff80000,0x00000001,0x7ff80000,x16, 318*SIGALIGN, x17,x1, x14)

inst_427:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000001
offset:836*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff80000,0x00000001,0xfff80000,x16, 320*SIGALIGN, x17,x1, x14)

inst_428:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000001
offset:838*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff80000,0x00000001,0x7ff00000,x16, 322*SIGALIGN, x17,x1, x14)

inst_429:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000001
offset:840*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff80000,0x00000001,0xfff00000,x16, 324*SIGALIGN, x17,x1, x14)

inst_430:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000000; valaddr_reg:x16; op2:x26; op2val:0x3ff0000000000000
offset:842*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff80000,0x00000000,0x3ff00000,x16, 326*SIGALIGN, x17,x1, x14)

inst_431:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000000; valaddr_reg:x16; op2:x26; op2val:0xbf80000000000000
offset:844*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xfff80000,0x00000000,0xbf800000,x16, 328*SIGALIGN, x17,x1, x14)

inst_432:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x0000000000000000
offset:846*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff80000,0x00000000,0x00000000,x16, 330*SIGALIGN, x17,x1, x14)

inst_433:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x8000000000000000
offset:848*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff80000,0x00000000,0x80000000,x16, 332*SIGALIGN, x17,x1, x14)

inst_434:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x0000000000000001
offset:850*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff80000,0x00000001,0x00000000,x16, 334*SIGALIGN, x17,x1, x14)

inst_435:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x8000000000000001
offset:852*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff80000,0x00000001,0x80000000,x16, 336*SIGALIGN, x17,x1, x14)

inst_436:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x0000000000000002
offset:854*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff80000,0x00000002,0x00000000,x16, 338*SIGALIGN, x17,x1, x14)

inst_437:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x8000000000000002
offset:856*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff80000,0x00000002,0x80000000,x16, 340*SIGALIGN, x17,x1, x14)

inst_438:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffffff
offset:858*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff80000,0xffffffff,0x000fffff,x16, 342*SIGALIGN, x17,x1, x14)

inst_439:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffffff
offset:860*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff80000,0xffffffff,0x800fffff,x16, 344*SIGALIGN, x17,x1, x14)

inst_440:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x0010000000000000
offset:862*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff80000,0x00000000,0x00100000,x16, 346*SIGALIGN, x17,x1, x14)

inst_441:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x8010000000000000
offset:864*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff80000,0x00000000,0x80100000,x16, 348*SIGALIGN, x17,x1, x14)

inst_442:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x0010000000000002
offset:866*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff80000,0x00000002,0x00100000,x16, 350*SIGALIGN, x17,x1, x14)

inst_443:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x8010000000000002
offset:868*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff80000,0x00000002,0x80100000,x16, 352*SIGALIGN, x17,x1, x14)

inst_444:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x7fefffffffffffff
offset:870*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff80000,0xffffffff,0x7fefffff,x16, 354*SIGALIGN, x17,x1, x14)

inst_445:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000001; valaddr_reg:x16; op2:x26; op2val:0xffefffffffffffff
offset:872*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff80000,0xffffffff,0xffefffff,x16, 356*SIGALIGN, x17,x1, x14)

inst_446:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:874*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff80000,0x00000000,0x7ff00000,x16, 358*SIGALIGN, x17,x1, x14)

inst_447:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000001; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:876*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff80000,0x00000000,0xfff00000,x16, 360*SIGALIGN, x17,x1, x14)

inst_448:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000000
offset:878*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff80000,0x00000000,0x7ff80000,x16, 362*SIGALIGN, x17,x1, x14)

inst_449:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000001; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000000
offset:880*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff80000,0x00000000,0xfff80000,x16, 364*SIGALIGN, x17,x1, x14)

inst_450:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000001
offset:882*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff80000,0x00000001,0x7ff80000,x16, 366*SIGALIGN, x17,x1, x14)

inst_451:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000001; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000001
offset:884*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff80000,0x00000001,0xfff80000,x16, 368*SIGALIGN, x17,x1, x14)

inst_452:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000001
offset:886*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff80000,0x00000001,0x7ff00000,x16, 370*SIGALIGN, x17,x1, x14)

inst_453:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000001; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000001
offset:888*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff80000,0x00000001,0xfff00000,x16, 372*SIGALIGN, x17,x1, x14)

inst_454:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x3ff0000000000000
offset:890*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff80000,0x00000000,0x3ff00000,x16, 374*SIGALIGN, x17,x1, x14)

inst_455:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff8000000000001; valaddr_reg:x16; op2:x26; op2val:0xbf80000000000000
offset:892*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff80000,0x00000000,0xbf800000,x16, 376*SIGALIGN, x17,x1, x14)

inst_456:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x0000000000000000
offset:894*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff80000,0x00000000,0x00000000,x16, 378*SIGALIGN, x17,x1, x14)

inst_457:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x8000000000000000
offset:896*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff80000,0x00000000,0x80000000,x16, 380*SIGALIGN, x17,x1, x14)

inst_458:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x0000000000000001
offset:898*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff80000,0x00000001,0x00000000,x16, 382*SIGALIGN, x17,x1, x14)

inst_459:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x8000000000000001
offset:900*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff80000,0x00000001,0x80000000,x16, 384*SIGALIGN, x17,x1, x14)

inst_460:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x0000000000000002
offset:902*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff80000,0x00000002,0x00000000,x16, 386*SIGALIGN, x17,x1, x14)

inst_461:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x8000000000000002
offset:904*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff80000,0x00000002,0x80000000,x16, 388*SIGALIGN, x17,x1, x14)

inst_462:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffffff
offset:906*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff80000,0xffffffff,0x000fffff,x16, 390*SIGALIGN, x17,x1, x14)

inst_463:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffffff
offset:908*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff80000,0xffffffff,0x800fffff,x16, 392*SIGALIGN, x17,x1, x14)

inst_464:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x0010000000000000
offset:910*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff80000,0x00000000,0x00100000,x16, 394*SIGALIGN, x17,x1, x14)

inst_465:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x8010000000000000
offset:912*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff80000,0x00000000,0x80100000,x16, 396*SIGALIGN, x17,x1, x14)

inst_466:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x0010000000000002
offset:914*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff80000,0x00000002,0x00100000,x16, 398*SIGALIGN, x17,x1, x14)

inst_467:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x8010000000000002
offset:916*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff80000,0x00000002,0x80100000,x16, 400*SIGALIGN, x17,x1, x14)

inst_468:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x7fefffffffffffff
offset:918*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff80000,0xffffffff,0x7fefffff,x16, 402*SIGALIGN, x17,x1, x14)

inst_469:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000001; valaddr_reg:x16; op2:x26; op2val:0xffefffffffffffff
offset:920*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff80000,0xffffffff,0xffefffff,x16, 404*SIGALIGN, x17,x1, x14)

inst_470:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:922*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff80000,0x00000000,0x7ff00000,x16, 406*SIGALIGN, x17,x1, x14)

inst_471:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000001; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:924*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff80000,0x00000000,0xfff00000,x16, 408*SIGALIGN, x17,x1, x14)

inst_472:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000000
offset:926*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff80000,0x00000000,0x7ff80000,x16, 410*SIGALIGN, x17,x1, x14)

inst_473:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000001; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000000
offset:928*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff80000,0x00000000,0xfff80000,x16, 412*SIGALIGN, x17,x1, x14)

inst_474:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000001
offset:930*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff80000,0x00000001,0x7ff80000,x16, 414*SIGALIGN, x17,x1, x14)

inst_475:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000001; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000001
offset:932*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff80000,0x00000001,0xfff80000,x16, 416*SIGALIGN, x17,x1, x14)

inst_476:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000001
offset:934*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff80000,0x00000001,0x7ff00000,x16, 418*SIGALIGN, x17,x1, x14)

inst_477:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000001; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000001
offset:936*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff80000,0x00000001,0xfff00000,x16, 420*SIGALIGN, x17,x1, x14)

inst_478:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000001; valaddr_reg:x16; op2:x26; op2val:0x3ff0000000000000
offset:938*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff80000,0x00000000,0x3ff00000,x16, 422*SIGALIGN, x17,x1, x14)

inst_479:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x8000000000001 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff8000000000001; valaddr_reg:x16; op2:x26; op2val:0xbf80000000000000
offset:940*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff80000,0x00000000,0xbf800000,x16, 424*SIGALIGN, x17,x1, x14)

inst_480:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x0000000000000000
offset:942*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff00000,0x00000000,0x00000000,x16, 426*SIGALIGN, x17,x1, x14)

inst_481:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x8000000000000000
offset:944*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff00000,0x00000000,0x80000000,x16, 428*SIGALIGN, x17,x1, x14)

inst_482:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x0000000000000001
offset:946*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff00000,0x00000001,0x00000000,x16, 430*SIGALIGN, x17,x1, x14)

inst_483:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x8000000000000001
offset:948*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff00000,0x00000001,0x80000000,x16, 432*SIGALIGN, x17,x1, x14)

inst_484:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x0000000000000002
offset:950*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff00000,0x00000002,0x00000000,x16, 434*SIGALIGN, x17,x1, x14)

inst_485:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x8000000000000002
offset:952*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff00000,0x00000002,0x80000000,x16, 436*SIGALIGN, x17,x1, x14)

inst_486:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffffff
offset:954*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff00000,0xffffffff,0x000fffff,x16, 438*SIGALIGN, x17,x1, x14)

inst_487:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffffff
offset:956*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff00000,0xffffffff,0x800fffff,x16, 440*SIGALIGN, x17,x1, x14)

inst_488:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x0010000000000000
offset:958*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff00000,0x00000000,0x00100000,x16, 442*SIGALIGN, x17,x1, x14)

inst_489:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x8010000000000000
offset:960*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff00000,0x00000000,0x80100000,x16, 444*SIGALIGN, x17,x1, x14)

inst_490:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x0010000000000002
offset:962*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff00000,0x00000002,0x00100000,x16, 446*SIGALIGN, x17,x1, x14)

inst_491:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x8010000000000002
offset:964*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff00000,0x00000002,0x80100000,x16, 448*SIGALIGN, x17,x1, x14)

inst_492:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x7fefffffffffffff
offset:966*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff00000,0xffffffff,0x7fefffff,x16, 450*SIGALIGN, x17,x1, x14)

inst_493:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000001; valaddr_reg:x16; op2:x26; op2val:0xffefffffffffffff
offset:968*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff00000,0xffffffff,0xffefffff,x16, 452*SIGALIGN, x17,x1, x14)

inst_494:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:970*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff00000,0x00000000,0x7ff00000,x16, 454*SIGALIGN, x17,x1, x14)

inst_495:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000001; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:972*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff00000,0x00000000,0xfff00000,x16, 456*SIGALIGN, x17,x1, x14)

inst_496:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000000
offset:974*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff00000,0x00000000,0x7ff80000,x16, 458*SIGALIGN, x17,x1, x14)

inst_497:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000001; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000000
offset:976*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff00000,0x00000000,0xfff80000,x16, 460*SIGALIGN, x17,x1, x14)

inst_498:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000001
offset:978*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff00000,0x00000001,0x7ff80000,x16, 462*SIGALIGN, x17,x1, x14)

inst_499:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000001; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000001
offset:980*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff00000,0x00000001,0xfff80000,x16, 464*SIGALIGN, x17,x1, x14)

inst_500:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000001
offset:982*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff00000,0x00000001,0x7ff00000,x16, 466*SIGALIGN, x17,x1, x14)

inst_501:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000001; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000001
offset:984*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff00000,0x00000001,0xfff00000,x16, 468*SIGALIGN, x17,x1, x14)

inst_502:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x3ff0000000000000
offset:986*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff00000,0x00000000,0x3ff00000,x16, 470*SIGALIGN, x17,x1, x14)

inst_503:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x7ff0000000000001; valaddr_reg:x16; op2:x26; op2val:0xbf80000000000000
offset:988*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x7ff00000,0x00000000,0xbf800000,x16, 472*SIGALIGN, x17,x1, x14)

inst_504:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x0000000000000000
offset:990*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff00000,0x00000000,0x00000000,x16, 474*SIGALIGN, x17,x1, x14)

inst_505:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x8000000000000000
offset:992*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff00000,0x00000000,0x80000000,x16, 476*SIGALIGN, x17,x1, x14)

inst_506:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x0000000000000001
offset:994*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff00000,0x00000001,0x00000000,x16, 478*SIGALIGN, x17,x1, x14)

inst_507:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x8000000000000001
offset:996*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff00000,0x00000001,0x80000000,x16, 480*SIGALIGN, x17,x1, x14)

inst_508:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x0000000000000002
offset:998*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff00000,0x00000002,0x00000000,x16, 482*SIGALIGN, x17,x1, x14)

inst_509:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x8000000000000002
offset:1000*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff00000,0x00000002,0x80000000,x16, 484*SIGALIGN, x17,x1, x14)

inst_510:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffffff
offset:1002*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff00000,0xffffffff,0x000fffff,x16, 486*SIGALIGN, x17,x1, x14)

inst_511:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffffff
offset:1004*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff00000,0xffffffff,0x800fffff,x16, 488*SIGALIGN, x17,x1, x14)

inst_512:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x0010000000000000
offset:1006*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff00000,0x00000000,0x00100000,x16, 490*SIGALIGN, x17,x1, x14)

inst_513:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x8010000000000000
offset:1008*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff00000,0x00000000,0x80100000,x16, 492*SIGALIGN, x17,x1, x14)

inst_514:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x0010000000000002
offset:1010*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff00000,0x00000002,0x00100000,x16, 494*SIGALIGN, x17,x1, x14)

inst_515:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x8010000000000002
offset:1012*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff00000,0x00000002,0x80100000,x16, 496*SIGALIGN, x17,x1, x14)

inst_516:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x7fefffffffffffff
offset:1014*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff00000,0xffffffff,0x7fefffff,x16, 498*SIGALIGN, x17,x1, x14)

inst_517:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000001; valaddr_reg:x16; op2:x26; op2val:0xffefffffffffffff
offset:1016*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff00000,0xffffffff,0xffefffff,x16, 500*SIGALIGN, x17,x1, x14)

inst_518:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:1018*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff00000,0x00000000,0x7ff00000,x16, 502*SIGALIGN, x17,x1, x14)

inst_519:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000001; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:1020*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff00000,0x00000000,0xfff00000,x16, 504*SIGALIGN, x17,x1, x14)

inst_520:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000000
offset:1022*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff00000,0x00000000,0x7ff80000,x16, 506*SIGALIGN, x17,x1, x14)

inst_521:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000001; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000000
offset:1024*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff00000,0x00000000,0xfff80000,x16, 508*SIGALIGN, x17,x1, x14)

inst_522:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000001
offset:1026*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff00000,0x00000001,0x7ff80000,x16, 510*SIGALIGN, x17,x1, x14)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_523:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000001; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000001
offset:1028*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff00000,0x00000001,0xfff80000,x16, 0*SIGALIGN, x17,x1, x14)

inst_524:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000001
offset:1030*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff00000,0x00000001,0x7ff00000,x16, 2*SIGALIGN, x17,x1, x14)

inst_525:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000001; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000001
offset:1032*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff00000,0x00000001,0xfff00000,x16, 4*SIGALIGN, x17,x1, x14)

inst_526:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000001; valaddr_reg:x16; op2:x26; op2val:0x3ff0000000000000
offset:1034*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff00000,0x00000000,0x3ff00000,x16, 6*SIGALIGN, x17,x1, x14)

inst_527:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xfff0000000000001; valaddr_reg:x16; op2:x26; op2val:0xbf80000000000000
offset:1036*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0xfff00000,0x00000000,0xbf800000,x16, 8*SIGALIGN, x17,x1, x14)

inst_528:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x3ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x0000000000000000
offset:1038*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x3ff00000,0x00000000,0x00000000,x16, 10*SIGALIGN, x17,x1, x14)

inst_529:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x3ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x8000000000000000
offset:1040*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x3ff00000,0x00000000,0x80000000,x16, 12*SIGALIGN, x17,x1, x14)

inst_530:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x3ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x0000000000000001
offset:1042*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x3ff00000,0x00000001,0x00000000,x16, 14*SIGALIGN, x17,x1, x14)

inst_531:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x3ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x8000000000000001
offset:1044*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x3ff00000,0x00000001,0x80000000,x16, 16*SIGALIGN, x17,x1, x14)

inst_532:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x3ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x0000000000000002
offset:1046*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x3ff00000,0x00000002,0x00000000,x16, 18*SIGALIGN, x17,x1, x14)

inst_533:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x3ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x8000000000000002
offset:1048*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x3ff00000,0x00000002,0x80000000,x16, 20*SIGALIGN, x17,x1, x14)

inst_534:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x3ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffffff
offset:1050*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x3ff00000,0xffffffff,0x000fffff,x16, 22*SIGALIGN, x17,x1, x14)

inst_535:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x3ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffffff
offset:1052*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x3ff00000,0xffffffff,0x800fffff,x16, 24*SIGALIGN, x17,x1, x14)

inst_536:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x3ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x0010000000000000
offset:1054*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x3ff00000,0x00000000,0x00100000,x16, 26*SIGALIGN, x17,x1, x14)

inst_537:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x3ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x8010000000000000
offset:1056*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x3ff00000,0x00000000,0x80100000,x16, 28*SIGALIGN, x17,x1, x14)

inst_538:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x3ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x0010000000000002
offset:1058*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x3ff00000,0x00000002,0x00100000,x16, 30*SIGALIGN, x17,x1, x14)

inst_539:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x3ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x8010000000000002
offset:1060*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x3ff00000,0x00000002,0x80100000,x16, 32*SIGALIGN, x17,x1, x14)

inst_540:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x3ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x7fefffffffffffff
offset:1062*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x3ff00000,0xffffffff,0x7fefffff,x16, 34*SIGALIGN, x17,x1, x14)

inst_541:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x3ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0xffefffffffffffff
offset:1064*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x3ff00000,0xffffffff,0xffefffff,x16, 36*SIGALIGN, x17,x1, x14)

inst_542:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x3ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:1066*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x3ff00000,0x00000000,0x7ff00000,x16, 38*SIGALIGN, x17,x1, x14)

inst_543:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x3ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:1068*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x3ff00000,0x00000000,0xfff00000,x16, 40*SIGALIGN, x17,x1, x14)

inst_544:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x3ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000000
offset:1070*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x3ff00000,0x00000000,0x7ff80000,x16, 42*SIGALIGN, x17,x1, x14)

inst_545:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x3ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000000
offset:1072*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x3ff00000,0x00000000,0xfff80000,x16, 44*SIGALIGN, x17,x1, x14)

inst_546:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x3ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000001
offset:1074*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x3ff00000,0x00000001,0x7ff80000,x16, 46*SIGALIGN, x17,x1, x14)

inst_547:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x3ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000001
offset:1076*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x3ff00000,0x00000001,0xfff80000,x16, 48*SIGALIGN, x17,x1, x14)

inst_548:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x3ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000001
offset:1078*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x3ff00000,0x00000001,0x7ff00000,x16, 50*SIGALIGN, x17,x1, x14)

inst_549:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x3ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000001
offset:1080*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x3ff00000,0x00000001,0xfff00000,x16, 52*SIGALIGN, x17,x1, x14)

inst_550:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x3ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0x3ff0000000000000
offset:1082*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x3ff00000,0x00000000,0x3ff00000,x16, 54*SIGALIGN, x17,x1, x14)

inst_551:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x3ff0000000000000; valaddr_reg:x16; op2:x26; op2val:0xbf80000000000000
offset:1084*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x3ff00000,0x00000000,0xbf800000,x16, 56*SIGALIGN, x17,x1, x14)

inst_552:// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xbf80000000000000; valaddr_reg:x16; op2:x26; op2val:0x0000000000000000
offset:1086*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xbf800000,0x00000000,0x00000000,x16, 58*SIGALIGN, x17,x1, x14)

inst_553:// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xbf80000000000000; valaddr_reg:x16; op2:x26; op2val:0x8000000000000000
offset:1088*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xbf800000,0x00000000,0x80000000,x16, 60*SIGALIGN, x17,x1, x14)

inst_554:// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xbf80000000000000; valaddr_reg:x16; op2:x26; op2val:0x0000000000000001
offset:1090*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xbf800000,0x00000001,0x00000000,x16, 62*SIGALIGN, x17,x1, x14)

inst_555:// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xbf80000000000000; valaddr_reg:x16; op2:x26; op2val:0x8000000000000001
offset:1092*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xbf800000,0x00000001,0x80000000,x16, 64*SIGALIGN, x17,x1, x14)

inst_556:// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xbf80000000000000; valaddr_reg:x16; op2:x26; op2val:0x0000000000000002
offset:1094*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xbf800000,0x00000002,0x00000000,x16, 66*SIGALIGN, x17,x1, x14)

inst_557:// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xbf80000000000000; valaddr_reg:x16; op2:x26; op2val:0x8000000000000002
offset:1096*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xbf800000,0x00000002,0x80000000,x16, 68*SIGALIGN, x17,x1, x14)

inst_558:// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xbf80000000000000; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffffff
offset:1098*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xbf800000,0xffffffff,0x000fffff,x16, 70*SIGALIGN, x17,x1, x14)

inst_559:// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xbf80000000000000; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffffff
offset:1100*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xbf800000,0xffffffff,0x800fffff,x16, 72*SIGALIGN, x17,x1, x14)

inst_560:// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xbf80000000000000; valaddr_reg:x16; op2:x26; op2val:0x0010000000000000
offset:1102*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xbf800000,0x00000000,0x00100000,x16, 74*SIGALIGN, x17,x1, x14)

inst_561:// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xbf80000000000000; valaddr_reg:x16; op2:x26; op2val:0x8010000000000000
offset:1104*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xbf800000,0x00000000,0x80100000,x16, 76*SIGALIGN, x17,x1, x14)

inst_562:// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xbf80000000000000; valaddr_reg:x16; op2:x26; op2val:0x0010000000000002
offset:1106*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xbf800000,0x00000002,0x00100000,x16, 78*SIGALIGN, x17,x1, x14)

inst_563:// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000002 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xbf80000000000000; valaddr_reg:x16; op2:x26; op2val:0x8010000000000002
offset:1108*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xbf800000,0x00000002,0x80100000,x16, 80*SIGALIGN, x17,x1, x14)

inst_564:// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xbf80000000000000; valaddr_reg:x16; op2:x26; op2val:0x7fefffffffffffff
offset:1110*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xbf800000,0xffffffff,0x7fefffff,x16, 82*SIGALIGN, x17,x1, x14)

inst_565:// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfffffffffffff and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xbf80000000000000; valaddr_reg:x16; op2:x26; op2val:0xffefffffffffffff
offset:1112*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xbf800000,0xffffffff,0xffefffff,x16, 84*SIGALIGN, x17,x1, x14)

inst_566:// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xbf80000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:1114*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xbf800000,0x00000000,0x7ff00000,x16, 86*SIGALIGN, x17,x1, x14)

inst_567:// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xbf80000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:1116*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xbf800000,0x00000000,0xfff00000,x16, 88*SIGALIGN, x17,x1, x14)

inst_568:// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xbf80000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000000
offset:1118*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xbf800000,0x00000000,0x7ff80000,x16, 90*SIGALIGN, x17,x1, x14)

inst_569:// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xbf80000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000000
offset:1120*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xbf800000,0x00000000,0xfff80000,x16, 92*SIGALIGN, x17,x1, x14)

inst_570:// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xbf80000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff8000000000001
offset:1122*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xbf800000,0x00000001,0x7ff80000,x16, 94*SIGALIGN, x17,x1, x14)

inst_571:// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x8000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xbf80000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff8000000000001
offset:1124*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xbf800000,0x00000001,0xfff80000,x16, 96*SIGALIGN, x17,x1, x14)

inst_572:// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xbf80000000000000; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000001
offset:1126*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xbf800000,0x00000001,0x7ff00000,x16, 98*SIGALIGN, x17,x1, x14)

inst_573:// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000001 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xbf80000000000000; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000001
offset:1128*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xbf800000,0x00000001,0xfff00000,x16, 100*SIGALIGN, x17,x1, x14)

inst_574:// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xbf80000000000000; valaddr_reg:x16; op2:x26; op2val:0x3ff0000000000000
offset:1130*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xbf800000,0x00000000,0x3ff00000,x16, 102*SIGALIGN, x17,x1, x14)

inst_575:// fs1 == 1 and fe1 == 0x3f8 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0xbf80000000000000; valaddr_reg:x16; op2:x26; op2val:0xbf80000000000000
offset:1132*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0xbf800000,0x00000000,0xbf800000,x16, 104*SIGALIGN, x17,x1, x14)

inst_576:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0  
/* opcode: feq.d ; op1:x28; dest:x30; op1val:0x0000000000000000; valaddr_reg:x16; op2:x26; op2val:0x0000000000000000
offset:1134*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(feq.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000000, 0x00000000,0x00000000,0x00000000,x16, 106*SIGALIGN, x17,x1, x14)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
test_dataset_1:
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xffffffff,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 22*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 512*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 512*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 108*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
