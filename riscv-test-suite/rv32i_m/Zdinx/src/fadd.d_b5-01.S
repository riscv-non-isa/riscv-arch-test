
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Thu Aug 24 09:25:42 2023 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV32Zdinx/fadd.d.cgf \
 \
//                  -- xlen 32  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fadd.d instruction of the RISC-V RV32_Zfinx_Zdinx extension for the fadd.d_b5 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32I_Zfinx_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*Zdinx.*);def TEST_CASE_1=True;",fadd.d_b5)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:// rs1 == rs2 == rd, rs1==x30, rs2==x30, rd==x30,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x30; dest:x30; op1val:0x7feb0580f98a7dbd; valaddr_reg:x3; op2:x30; op2val:0x7feb0580f98a7dbd
offset:0*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x30, x31,x30,x31,0, 0, 0, 0xf98a7dbd, 0x7feb0580,0xf98a7dbd,0x7feb0580,x3, 0*SIGALIGN, x4,x1, x2)

inst_1:// rs1 == rs2 != rd, rs1==x26, rs2==x26, rd==x28,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x26; dest:x28; op1val:0x7feb0580f98a7dbd; valaddr_reg:x3; op2:x26; op2val:0x7feb0580f98a7dbd
offset:2*FLEN/8; correctval:??; testreg:x2;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x28, x29, x26, x27,x26,x27,32, 0, 0, 0xf98a7dbd, 0x7feb0580,0xf98a7dbd,0x7feb0580,x3, 2*SIGALIGN, x4,x1, x2)

inst_2:// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x28, rs2==x24, rd==x26,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x26; op1val:0x7feb0580f98a7dbd; valaddr_reg:x3; op2:x24; op2val:0xffeb0580f98a7dbd
offset:4*FLEN/8; correctval:??; testreg:x2;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x26, x27, x28, x29,x24,x25,64, 0, 0, 0xf98a7dbd, 0x7feb0580,0xf98a7dbd,0xffeb0580,x3, 4*SIGALIGN, x4,x1, x2)

inst_3:// rs1 == rd != rs2, rs1==x24, rs2==x28, rd==x24,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x24; dest:x24; op1val:0x7feb0580f98a7dbd; valaddr_reg:x3; op2:x28; op2val:0xffeb0580f98a7dbd
offset:6*FLEN/8; correctval:??; testreg:x2;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x24, x25, x24, x25,x28,x29,96, 0, 0, 0xf98a7dbd, 0x7feb0580,0xf98a7dbd,0xffeb0580,x3, 6*SIGALIGN, x4,x1, x2)

inst_4:// rs2 == rd != rs1, rs1==x20, rs2==x22, rd==x22,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x20; dest:x22; op1val:0x7feb0580f98a7dbd; valaddr_reg:x3; op2:x22; op2val:0xffeb0580f98a7dbd
offset:8*FLEN/8; correctval:??; testreg:x2;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x22, x23, x20, x21,x22,x23,128, 0, 0, 0xf98a7dbd, 0x7feb0580,0xf98a7dbd,0xffeb0580,x3, 8*SIGALIGN, x4,x1, x2)

inst_5:// rs1==x22, rs2==x18, rd==x20,fs1 == 0 and fe1 == 0x7fd and fm1 == 0xaeaa51052e977 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaeaa51052e977 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x22; dest:x20; op1val:0x7fdaeaa51052e977; valaddr_reg:x3; op2:x18; op2val:0xffdaeaa51052e977
offset:10*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x20, x21, x22, x23,x18,x19,0, 0, 0, 0x1052e977, 0x7fdaeaa5,0x1052e977,0xffdaeaa5,x3, 10*SIGALIGN, x4,x1, x2)

inst_6:// rs1==x16, rs2==x20, rd==x18,fs1 == 0 and fe1 == 0x7fd and fm1 == 0xaeaa51052e977 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaeaa51052e977 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x16; dest:x18; op1val:0x7fdaeaa51052e977; valaddr_reg:x3; op2:x20; op2val:0xffdaeaa51052e977
offset:12*FLEN/8; correctval:??; testreg:x2;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x18, x19, x16, x17,x20,x21,32, 0, 0, 0x1052e977, 0x7fdaeaa5,0x1052e977,0xffdaeaa5,x3, 12*SIGALIGN, x4,x1, x2)

inst_7:// rs1==x18, rs2==x14, rd==x16,fs1 == 0 and fe1 == 0x7fd and fm1 == 0xaeaa51052e977 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaeaa51052e977 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x18; dest:x16; op1val:0x7fdaeaa51052e977; valaddr_reg:x3; op2:x14; op2val:0xffdaeaa51052e977
offset:14*FLEN/8; correctval:??; testreg:x2;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x16, x17, x18, x19,x14,x15,64, 0, 0, 0x1052e977, 0x7fdaeaa5,0x1052e977,0xffdaeaa5,x3, 14*SIGALIGN, x4,x1, x2)

inst_8:// rs1==x12, rs2==x16, rd==x14,fs1 == 0 and fe1 == 0x7fd and fm1 == 0xaeaa51052e977 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaeaa51052e977 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x12; dest:x14; op1val:0x7fdaeaa51052e977; valaddr_reg:x3; op2:x16; op2val:0xffdaeaa51052e977
offset:16*FLEN/8; correctval:??; testreg:x2;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x14, x15, x12, x13,x16,x17,96, 0, 0, 0x1052e977, 0x7fdaeaa5,0x1052e977,0xffdaeaa5,x3, 16*SIGALIGN, x4,x1, x2)
RVTEST_VALBASEUPD(x16,test_dataset_1)

inst_9:// rs1==x14, rs2==x10, rd==x12,fs1 == 0 and fe1 == 0x7fd and fm1 == 0xaeaa51052e977 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaeaa51052e977 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x14; dest:x12; op1val:0x7fdaeaa51052e977; valaddr_reg:x16; op2:x10; op2val:0xffdaeaa51052e977
offset:0*FLEN/8; correctval:??; testreg:x2;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x12, x13, x14, x15,x10,x11,128, 0, 0, 0x1052e977, 0x7fdaeaa5,0x1052e977,0xffdaeaa5,x16, 18*SIGALIGN, x17,x1, x2)

inst_10:// rs1==x8, rs2==x12, rd==x10,fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05c5ccdf19706 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x8; dest:x10; op1val:0x7fe05c5ccdf19706; valaddr_reg:x16; op2:x12; op2val:0xffe05c5ccdf19706
offset:2*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x10, x11, x8, x9,x12,x13,0, 0, 0, 0xcdf19706, 0x7fe05c5c,0xcdf19706,0xffe05c5c,x16, 20*SIGALIGN, x17,x1, x14)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_11:// rs1==x10, rs2==x6, rd==x8,fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05c5ccdf19706 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x10; dest:x8; op1val:0x7fe05c5ccdf19706; valaddr_reg:x16; op2:x6; op2val:0xffe05c5ccdf19706
offset:4*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x8, x9, x10, x11,x6,x7,32, 0, 0, 0xcdf19706, 0x7fe05c5c,0xcdf19706,0xffe05c5c,x16, 0*SIGALIGN, x17,x1, x14)

inst_12:// rs1==x4, rs2==x8, rd==x6,fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05c5ccdf19706 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x4; dest:x6; op1val:0x7fe05c5ccdf19706; valaddr_reg:x16; op2:x8; op2val:0xffe05c5ccdf19706
offset:6*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x6, x7, x4, x5,x8,x9,64, 0, 0, 0xcdf19706, 0x7fe05c5c,0xcdf19706,0xffe05c5c,x16, 2*SIGALIGN, x17,x1, x14)

inst_13:// rs1==x6, rs2==x2, rd==x4,fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05c5ccdf19706 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x6; dest:x4; op1val:0x7fe05c5ccdf19706; valaddr_reg:x16; op2:x2; op2val:0xffe05c5ccdf19706
offset:8*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x4, x5, x6, x7,x2,x3,96, 0, 0, 0xcdf19706, 0x7fe05c5c,0xcdf19706,0xffe05c5c,x16, 4*SIGALIGN, x17,x1, x14)

inst_14:// rs1==x2,fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05c5ccdf19706 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x2; dest:x30; op1val:0x7fe05c5ccdf19706; valaddr_reg:x16; op2:x28; op2val:0xffe05c5ccdf19706
offset:10*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x2, x3,x28,x29,128, 0, 0, 0xcdf19706, 0x7fe05c5c,0xcdf19706,0xffe05c5c,x16, 6*SIGALIGN, x17,x1, x14)

inst_15:// rs2==x4,fs1 == 0 and fe1 == 0x7fe and fm1 == 0x914e0c751c4f4 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x914e0c751c4f4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe914e0c751c4f4; valaddr_reg:x16; op2:x4; op2val:0xffe914e0c751c4f4
offset:12*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x4,x5,0, 0, 0, 0xc751c4f4, 0x7fe914e0,0xc751c4f4,0xffe914e0,x16, 8*SIGALIGN, x17,x1, x14)

inst_16:// rd==x2,fs1 == 0 and fe1 == 0x7fe and fm1 == 0x914e0c751c4f4 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x914e0c751c4f4 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x30; dest:x2; op1val:0x7fe914e0c751c4f4; valaddr_reg:x16; op2:x28; op2val:0xffe914e0c751c4f4
offset:14*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x2, x3, x30, x31,x28,x29,32, 0, 0, 0xc751c4f4, 0x7fe914e0,0xc751c4f4,0xffe914e0,x16, 10*SIGALIGN, x17,x1, x14)

inst_17:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x914e0c751c4f4 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x914e0c751c4f4 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe914e0c751c4f4; valaddr_reg:x16; op2:x26; op2val:0xffe914e0c751c4f4
offset:16*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xc751c4f4, 0x7fe914e0,0xc751c4f4,0xffe914e0,x16, 12*SIGALIGN, x17,x1, x14)

inst_18:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x914e0c751c4f4 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x914e0c751c4f4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe914e0c751c4f4; valaddr_reg:x16; op2:x26; op2val:0xffe914e0c751c4f4
offset:18*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xc751c4f4, 0x7fe914e0,0xc751c4f4,0xffe914e0,x16, 14*SIGALIGN, x17,x1, x14)

inst_19:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x914e0c751c4f4 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x914e0c751c4f4 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe914e0c751c4f4; valaddr_reg:x16; op2:x26; op2val:0xffe914e0c751c4f4
offset:20*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xc751c4f4, 0x7fe914e0,0xc751c4f4,0xffe914e0,x16, 16*SIGALIGN, x17,x1, x14)

inst_20:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe809082dd48fb and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde809082dd48fb; valaddr_reg:x16; op2:x26; op2val:0xffde809082dd48fb
offset:22*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x82dd48fb, 0x7fde8090,0x82dd48fb,0xffde8090,x16, 18*SIGALIGN, x17,x1, x14)

inst_21:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe809082dd48fb and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde809082dd48fb; valaddr_reg:x16; op2:x26; op2val:0xffde809082dd48fb
offset:24*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x82dd48fb, 0x7fde8090,0x82dd48fb,0xffde8090,x16, 20*SIGALIGN, x17,x1, x14)

inst_22:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe809082dd48fb and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde809082dd48fb; valaddr_reg:x16; op2:x26; op2val:0xffde809082dd48fb
offset:26*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x82dd48fb, 0x7fde8090,0x82dd48fb,0xffde8090,x16, 22*SIGALIGN, x17,x1, x14)

inst_23:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe809082dd48fb and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde809082dd48fb; valaddr_reg:x16; op2:x26; op2val:0xffde809082dd48fb
offset:28*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x82dd48fb, 0x7fde8090,0x82dd48fb,0xffde8090,x16, 24*SIGALIGN, x17,x1, x14)

inst_24:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe809082dd48fb and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde809082dd48fb; valaddr_reg:x16; op2:x26; op2val:0xffde809082dd48fb
offset:30*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x82dd48fb, 0x7fde8090,0x82dd48fb,0xffde8090,x16, 26*SIGALIGN, x17,x1, x14)

inst_25:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd0f42c0dfaf72 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd0f42c0dfaf72 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fed0f42c0dfaf72; valaddr_reg:x16; op2:x26; op2val:0xffed0f42c0dfaf72
offset:32*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xc0dfaf72, 0x7fed0f42,0xc0dfaf72,0xffed0f42,x16, 28*SIGALIGN, x17,x1, x14)

inst_26:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd0f42c0dfaf72 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd0f42c0dfaf72 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fed0f42c0dfaf72; valaddr_reg:x16; op2:x26; op2val:0xffed0f42c0dfaf72
offset:34*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xc0dfaf72, 0x7fed0f42,0xc0dfaf72,0xffed0f42,x16, 30*SIGALIGN, x17,x1, x14)

inst_27:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd0f42c0dfaf72 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd0f42c0dfaf72 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fed0f42c0dfaf72; valaddr_reg:x16; op2:x26; op2val:0xffed0f42c0dfaf72
offset:36*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xc0dfaf72, 0x7fed0f42,0xc0dfaf72,0xffed0f42,x16, 32*SIGALIGN, x17,x1, x14)

inst_28:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd0f42c0dfaf72 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd0f42c0dfaf72 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fed0f42c0dfaf72; valaddr_reg:x16; op2:x26; op2val:0xffed0f42c0dfaf72
offset:38*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xc0dfaf72, 0x7fed0f42,0xc0dfaf72,0xffed0f42,x16, 34*SIGALIGN, x17,x1, x14)

inst_29:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd0f42c0dfaf72 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd0f42c0dfaf72 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fed0f42c0dfaf72; valaddr_reg:x16; op2:x26; op2val:0xffed0f42c0dfaf72
offset:40*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xc0dfaf72, 0x7fed0f42,0xc0dfaf72,0xffed0f42,x16, 36*SIGALIGN, x17,x1, x14)

inst_30:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x209a1991e3307 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd209a1991e3307; valaddr_reg:x16; op2:x26; op2val:0xffd209a1991e3307
offset:42*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x991e3307, 0x7fd209a1,0x991e3307,0xffd209a1,x16, 38*SIGALIGN, x17,x1, x14)

inst_31:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x209a1991e3307 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd209a1991e3307; valaddr_reg:x16; op2:x26; op2val:0xffd209a1991e3307
offset:44*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x991e3307, 0x7fd209a1,0x991e3307,0xffd209a1,x16, 40*SIGALIGN, x17,x1, x14)

inst_32:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x209a1991e3307 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd209a1991e3307; valaddr_reg:x16; op2:x26; op2val:0xffd209a1991e3307
offset:46*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x991e3307, 0x7fd209a1,0x991e3307,0xffd209a1,x16, 42*SIGALIGN, x17,x1, x14)

inst_33:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x209a1991e3307 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd209a1991e3307; valaddr_reg:x16; op2:x26; op2val:0xffd209a1991e3307
offset:48*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x991e3307, 0x7fd209a1,0x991e3307,0xffd209a1,x16, 44*SIGALIGN, x17,x1, x14)

inst_34:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x209a1991e3307 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd209a1991e3307; valaddr_reg:x16; op2:x26; op2val:0xffd209a1991e3307
offset:50*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x991e3307, 0x7fd209a1,0x991e3307,0xffd209a1,x16, 46*SIGALIGN, x17,x1, x14)

inst_35:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3c9adc7329695 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3c9adc7329695 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe3c9adc7329695; valaddr_reg:x16; op2:x26; op2val:0xffe3c9adc7329695
offset:52*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xc7329695, 0x7fe3c9ad,0xc7329695,0xffe3c9ad,x16, 48*SIGALIGN, x17,x1, x14)

inst_36:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3c9adc7329695 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3c9adc7329695 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe3c9adc7329695; valaddr_reg:x16; op2:x26; op2val:0xffe3c9adc7329695
offset:54*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xc7329695, 0x7fe3c9ad,0xc7329695,0xffe3c9ad,x16, 50*SIGALIGN, x17,x1, x14)

inst_37:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3c9adc7329695 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3c9adc7329695 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe3c9adc7329695; valaddr_reg:x16; op2:x26; op2val:0xffe3c9adc7329695
offset:56*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xc7329695, 0x7fe3c9ad,0xc7329695,0xffe3c9ad,x16, 52*SIGALIGN, x17,x1, x14)

inst_38:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3c9adc7329695 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3c9adc7329695 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe3c9adc7329695; valaddr_reg:x16; op2:x26; op2val:0xffe3c9adc7329695
offset:58*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xc7329695, 0x7fe3c9ad,0xc7329695,0xffe3c9ad,x16, 54*SIGALIGN, x17,x1, x14)

inst_39:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3c9adc7329695 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3c9adc7329695 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe3c9adc7329695; valaddr_reg:x16; op2:x26; op2val:0xffe3c9adc7329695
offset:60*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xc7329695, 0x7fe3c9ad,0xc7329695,0xffe3c9ad,x16, 56*SIGALIGN, x17,x1, x14)

inst_40:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fed1ca42e21585b; valaddr_reg:x16; op2:x26; op2val:0xffed1ca42e21585b
offset:62*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x2e21585b, 0x7fed1ca4,0x2e21585b,0xffed1ca4,x16, 58*SIGALIGN, x17,x1, x14)

inst_41:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fed1ca42e21585b; valaddr_reg:x16; op2:x26; op2val:0xffed1ca42e21585b
offset:64*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x2e21585b, 0x7fed1ca4,0x2e21585b,0xffed1ca4,x16, 60*SIGALIGN, x17,x1, x14)

inst_42:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fed1ca42e21585b; valaddr_reg:x16; op2:x26; op2val:0xffed1ca42e21585b
offset:66*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x2e21585b, 0x7fed1ca4,0x2e21585b,0xffed1ca4,x16, 62*SIGALIGN, x17,x1, x14)

inst_43:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fed1ca42e21585b; valaddr_reg:x16; op2:x26; op2val:0xffed1ca42e21585b
offset:68*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x2e21585b, 0x7fed1ca4,0x2e21585b,0xffed1ca4,x16, 64*SIGALIGN, x17,x1, x14)

inst_44:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fed1ca42e21585b; valaddr_reg:x16; op2:x26; op2val:0xffed1ca42e21585b
offset:70*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x2e21585b, 0x7fed1ca4,0x2e21585b,0xffed1ca4,x16, 66*SIGALIGN, x17,x1, x14)

inst_45:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9ed4cb2685903 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x9ed4cb2685903 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe9ed4cb2685903; valaddr_reg:x16; op2:x26; op2val:0xffe9ed4cb2685903
offset:72*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xb2685903, 0x7fe9ed4c,0xb2685903,0xffe9ed4c,x16, 68*SIGALIGN, x17,x1, x14)

inst_46:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9ed4cb2685903 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x9ed4cb2685903 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe9ed4cb2685903; valaddr_reg:x16; op2:x26; op2val:0xffe9ed4cb2685903
offset:74*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xb2685903, 0x7fe9ed4c,0xb2685903,0xffe9ed4c,x16, 70*SIGALIGN, x17,x1, x14)

inst_47:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9ed4cb2685903 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x9ed4cb2685903 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe9ed4cb2685903; valaddr_reg:x16; op2:x26; op2val:0xffe9ed4cb2685903
offset:76*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xb2685903, 0x7fe9ed4c,0xb2685903,0xffe9ed4c,x16, 72*SIGALIGN, x17,x1, x14)

inst_48:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9ed4cb2685903 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x9ed4cb2685903 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe9ed4cb2685903; valaddr_reg:x16; op2:x26; op2val:0xffe9ed4cb2685903
offset:78*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xb2685903, 0x7fe9ed4c,0xb2685903,0xffe9ed4c,x16, 74*SIGALIGN, x17,x1, x14)

inst_49:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9ed4cb2685903 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x9ed4cb2685903 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe9ed4cb2685903; valaddr_reg:x16; op2:x26; op2val:0xffe9ed4cb2685903
offset:80*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xb2685903, 0x7fe9ed4c,0xb2685903,0xffe9ed4c,x16, 76*SIGALIGN, x17,x1, x14)

inst_50:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3d97530ca446d and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x3d97530ca446d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd3d97530ca446d; valaddr_reg:x16; op2:x26; op2val:0xffd3d97530ca446d
offset:82*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x30ca446d, 0x7fd3d975,0x30ca446d,0xffd3d975,x16, 78*SIGALIGN, x17,x1, x14)

inst_51:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3d97530ca446d and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x3d97530ca446d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd3d97530ca446d; valaddr_reg:x16; op2:x26; op2val:0xffd3d97530ca446d
offset:84*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x30ca446d, 0x7fd3d975,0x30ca446d,0xffd3d975,x16, 80*SIGALIGN, x17,x1, x14)

inst_52:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3d97530ca446d and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x3d97530ca446d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd3d97530ca446d; valaddr_reg:x16; op2:x26; op2val:0xffd3d97530ca446d
offset:86*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x30ca446d, 0x7fd3d975,0x30ca446d,0xffd3d975,x16, 82*SIGALIGN, x17,x1, x14)

inst_53:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3d97530ca446d and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x3d97530ca446d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd3d97530ca446d; valaddr_reg:x16; op2:x26; op2val:0xffd3d97530ca446d
offset:88*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x30ca446d, 0x7fd3d975,0x30ca446d,0xffd3d975,x16, 84*SIGALIGN, x17,x1, x14)

inst_54:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3d97530ca446d and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x3d97530ca446d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd3d97530ca446d; valaddr_reg:x16; op2:x26; op2val:0xffd3d97530ca446d
offset:90*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x30ca446d, 0x7fd3d975,0x30ca446d,0xffd3d975,x16, 86*SIGALIGN, x17,x1, x14)

inst_55:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcc3488366e29b and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xcc3488366e29b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fecc3488366e29b; valaddr_reg:x16; op2:x26; op2val:0xffecc3488366e29b
offset:92*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x8366e29b, 0x7fecc348,0x8366e29b,0xffecc348,x16, 88*SIGALIGN, x17,x1, x14)

inst_56:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcc3488366e29b and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xcc3488366e29b and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fecc3488366e29b; valaddr_reg:x16; op2:x26; op2val:0xffecc3488366e29b
offset:94*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x8366e29b, 0x7fecc348,0x8366e29b,0xffecc348,x16, 90*SIGALIGN, x17,x1, x14)

inst_57:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcc3488366e29b and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xcc3488366e29b and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fecc3488366e29b; valaddr_reg:x16; op2:x26; op2val:0xffecc3488366e29b
offset:96*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x8366e29b, 0x7fecc348,0x8366e29b,0xffecc348,x16, 92*SIGALIGN, x17,x1, x14)

inst_58:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcc3488366e29b and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xcc3488366e29b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fecc3488366e29b; valaddr_reg:x16; op2:x26; op2val:0xffecc3488366e29b
offset:98*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x8366e29b, 0x7fecc348,0x8366e29b,0xffecc348,x16, 94*SIGALIGN, x17,x1, x14)

inst_59:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcc3488366e29b and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xcc3488366e29b and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fecc3488366e29b; valaddr_reg:x16; op2:x26; op2val:0xffecc3488366e29b
offset:100*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x8366e29b, 0x7fecc348,0x8366e29b,0xffecc348,x16, 96*SIGALIGN, x17,x1, x14)

inst_60:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe3796147a7f97 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xe3796147a7f97 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde3796147a7f97; valaddr_reg:x16; op2:x26; op2val:0xffde3796147a7f97
offset:102*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x147a7f97, 0x7fde3796,0x147a7f97,0xffde3796,x16, 98*SIGALIGN, x17,x1, x14)

inst_61:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe3796147a7f97 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xe3796147a7f97 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde3796147a7f97; valaddr_reg:x16; op2:x26; op2val:0xffde3796147a7f97
offset:104*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x147a7f97, 0x7fde3796,0x147a7f97,0xffde3796,x16, 100*SIGALIGN, x17,x1, x14)

inst_62:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe3796147a7f97 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xe3796147a7f97 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde3796147a7f97; valaddr_reg:x16; op2:x26; op2val:0xffde3796147a7f97
offset:106*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x147a7f97, 0x7fde3796,0x147a7f97,0xffde3796,x16, 102*SIGALIGN, x17,x1, x14)

inst_63:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe3796147a7f97 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xe3796147a7f97 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde3796147a7f97; valaddr_reg:x16; op2:x26; op2val:0xffde3796147a7f97
offset:108*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x147a7f97, 0x7fde3796,0x147a7f97,0xffde3796,x16, 104*SIGALIGN, x17,x1, x14)

inst_64:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe3796147a7f97 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xe3796147a7f97 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde3796147a7f97; valaddr_reg:x16; op2:x26; op2val:0xffde3796147a7f97
offset:110*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x147a7f97, 0x7fde3796,0x147a7f97,0xffde3796,x16, 106*SIGALIGN, x17,x1, x14)

inst_65:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xbc978aa879221 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xbc978aa879221 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fdbc978aa879221; valaddr_reg:x16; op2:x26; op2val:0xffdbc978aa879221
offset:112*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xaa879221, 0x7fdbc978,0xaa879221,0xffdbc978,x16, 108*SIGALIGN, x17,x1, x14)

inst_66:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xbc978aa879221 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xbc978aa879221 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fdbc978aa879221; valaddr_reg:x16; op2:x26; op2val:0xffdbc978aa879221
offset:114*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xaa879221, 0x7fdbc978,0xaa879221,0xffdbc978,x16, 110*SIGALIGN, x17,x1, x14)

inst_67:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xbc978aa879221 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xbc978aa879221 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fdbc978aa879221; valaddr_reg:x16; op2:x26; op2val:0xffdbc978aa879221
offset:116*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xaa879221, 0x7fdbc978,0xaa879221,0xffdbc978,x16, 112*SIGALIGN, x17,x1, x14)

inst_68:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xbc978aa879221 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xbc978aa879221 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fdbc978aa879221; valaddr_reg:x16; op2:x26; op2val:0xffdbc978aa879221
offset:118*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xaa879221, 0x7fdbc978,0xaa879221,0xffdbc978,x16, 114*SIGALIGN, x17,x1, x14)

inst_69:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xbc978aa879221 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xbc978aa879221 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fdbc978aa879221; valaddr_reg:x16; op2:x26; op2val:0xffdbc978aa879221
offset:120*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xaa879221, 0x7fdbc978,0xaa879221,0xffdbc978,x16, 116*SIGALIGN, x17,x1, x14)

inst_70:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd3762f4d1629c and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd3762f4d1629c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fed3762f4d1629c; valaddr_reg:x16; op2:x26; op2val:0xffed3762f4d1629c
offset:122*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf4d1629c, 0x7fed3762,0xf4d1629c,0xffed3762,x16, 118*SIGALIGN, x17,x1, x14)

inst_71:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd3762f4d1629c and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd3762f4d1629c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fed3762f4d1629c; valaddr_reg:x16; op2:x26; op2val:0xffed3762f4d1629c
offset:124*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xf4d1629c, 0x7fed3762,0xf4d1629c,0xffed3762,x16, 120*SIGALIGN, x17,x1, x14)

inst_72:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd3762f4d1629c and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd3762f4d1629c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fed3762f4d1629c; valaddr_reg:x16; op2:x26; op2val:0xffed3762f4d1629c
offset:126*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xf4d1629c, 0x7fed3762,0xf4d1629c,0xffed3762,x16, 122*SIGALIGN, x17,x1, x14)

inst_73:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd3762f4d1629c and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd3762f4d1629c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fed3762f4d1629c; valaddr_reg:x16; op2:x26; op2val:0xffed3762f4d1629c
offset:128*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf4d1629c, 0x7fed3762,0xf4d1629c,0xffed3762,x16, 124*SIGALIGN, x17,x1, x14)

inst_74:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd3762f4d1629c and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd3762f4d1629c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fed3762f4d1629c; valaddr_reg:x16; op2:x26; op2val:0xffed3762f4d1629c
offset:130*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xf4d1629c, 0x7fed3762,0xf4d1629c,0xffed3762,x16, 126*SIGALIGN, x17,x1, x14)

inst_75:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe8754038aa2cf and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xe8754038aa2cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde8754038aa2cf; valaddr_reg:x16; op2:x26; op2val:0xffde8754038aa2cf
offset:132*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x038aa2cf, 0x7fde8754,0x038aa2cf,0xffde8754,x16, 128*SIGALIGN, x17,x1, x14)

inst_76:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe8754038aa2cf and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xe8754038aa2cf and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde8754038aa2cf; valaddr_reg:x16; op2:x26; op2val:0xffde8754038aa2cf
offset:134*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x038aa2cf, 0x7fde8754,0x038aa2cf,0xffde8754,x16, 130*SIGALIGN, x17,x1, x14)

inst_77:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe8754038aa2cf and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xe8754038aa2cf and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde8754038aa2cf; valaddr_reg:x16; op2:x26; op2val:0xffde8754038aa2cf
offset:136*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x038aa2cf, 0x7fde8754,0x038aa2cf,0xffde8754,x16, 132*SIGALIGN, x17,x1, x14)

inst_78:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe8754038aa2cf and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xe8754038aa2cf and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde8754038aa2cf; valaddr_reg:x16; op2:x26; op2val:0xffde8754038aa2cf
offset:138*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x038aa2cf, 0x7fde8754,0x038aa2cf,0xffde8754,x16, 134*SIGALIGN, x17,x1, x14)

inst_79:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe8754038aa2cf and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xe8754038aa2cf and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde8754038aa2cf; valaddr_reg:x16; op2:x26; op2val:0xffde8754038aa2cf
offset:140*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x038aa2cf, 0x7fde8754,0x038aa2cf,0xffde8754,x16, 136*SIGALIGN, x17,x1, x14)

inst_80:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x0abe7f07f8c6f and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0abe7f07f8c6f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd0abe7f07f8c6f; valaddr_reg:x16; op2:x26; op2val:0xffd0abe7f07f8c6f
offset:142*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf07f8c6f, 0x7fd0abe7,0xf07f8c6f,0xffd0abe7,x16, 138*SIGALIGN, x17,x1, x14)

inst_81:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x0abe7f07f8c6f and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0abe7f07f8c6f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd0abe7f07f8c6f; valaddr_reg:x16; op2:x26; op2val:0xffd0abe7f07f8c6f
offset:144*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xf07f8c6f, 0x7fd0abe7,0xf07f8c6f,0xffd0abe7,x16, 140*SIGALIGN, x17,x1, x14)

inst_82:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x0abe7f07f8c6f and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0abe7f07f8c6f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd0abe7f07f8c6f; valaddr_reg:x16; op2:x26; op2val:0xffd0abe7f07f8c6f
offset:146*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xf07f8c6f, 0x7fd0abe7,0xf07f8c6f,0xffd0abe7,x16, 142*SIGALIGN, x17,x1, x14)

inst_83:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x0abe7f07f8c6f and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0abe7f07f8c6f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd0abe7f07f8c6f; valaddr_reg:x16; op2:x26; op2val:0xffd0abe7f07f8c6f
offset:148*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf07f8c6f, 0x7fd0abe7,0xf07f8c6f,0xffd0abe7,x16, 144*SIGALIGN, x17,x1, x14)

inst_84:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x0abe7f07f8c6f and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0abe7f07f8c6f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd0abe7f07f8c6f; valaddr_reg:x16; op2:x26; op2val:0xffd0abe7f07f8c6f
offset:150*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xf07f8c6f, 0x7fd0abe7,0xf07f8c6f,0xffd0abe7,x16, 146*SIGALIGN, x17,x1, x14)

inst_85:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x18ef1d7a9fa74 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x18ef1d7a9fa74 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe18ef1d7a9fa74; valaddr_reg:x16; op2:x26; op2val:0xffe18ef1d7a9fa74
offset:152*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xd7a9fa74, 0x7fe18ef1,0xd7a9fa74,0xffe18ef1,x16, 148*SIGALIGN, x17,x1, x14)

inst_86:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x18ef1d7a9fa74 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x18ef1d7a9fa74 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe18ef1d7a9fa74; valaddr_reg:x16; op2:x26; op2val:0xffe18ef1d7a9fa74
offset:154*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xd7a9fa74, 0x7fe18ef1,0xd7a9fa74,0xffe18ef1,x16, 150*SIGALIGN, x17,x1, x14)

inst_87:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x18ef1d7a9fa74 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x18ef1d7a9fa74 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe18ef1d7a9fa74; valaddr_reg:x16; op2:x26; op2val:0xffe18ef1d7a9fa74
offset:156*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xd7a9fa74, 0x7fe18ef1,0xd7a9fa74,0xffe18ef1,x16, 152*SIGALIGN, x17,x1, x14)

inst_88:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x18ef1d7a9fa74 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x18ef1d7a9fa74 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe18ef1d7a9fa74; valaddr_reg:x16; op2:x26; op2val:0xffe18ef1d7a9fa74
offset:158*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd7a9fa74, 0x7fe18ef1,0xd7a9fa74,0xffe18ef1,x16, 154*SIGALIGN, x17,x1, x14)

inst_89:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x18ef1d7a9fa74 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x18ef1d7a9fa74 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe18ef1d7a9fa74; valaddr_reg:x16; op2:x26; op2val:0xffe18ef1d7a9fa74
offset:160*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xd7a9fa74, 0x7fe18ef1,0xd7a9fa74,0xffe18ef1,x16, 156*SIGALIGN, x17,x1, x14)

inst_90:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x707d21f5c40de and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x707d21f5c40de and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe707d21f5c40de; valaddr_reg:x16; op2:x26; op2val:0xffe707d21f5c40de
offset:162*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x1f5c40de, 0x7fe707d2,0x1f5c40de,0xffe707d2,x16, 158*SIGALIGN, x17,x1, x14)

inst_91:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x707d21f5c40de and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x707d21f5c40de and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe707d21f5c40de; valaddr_reg:x16; op2:x26; op2val:0xffe707d21f5c40de
offset:164*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x1f5c40de, 0x7fe707d2,0x1f5c40de,0xffe707d2,x16, 160*SIGALIGN, x17,x1, x14)

inst_92:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x707d21f5c40de and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x707d21f5c40de and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe707d21f5c40de; valaddr_reg:x16; op2:x26; op2val:0xffe707d21f5c40de
offset:166*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x1f5c40de, 0x7fe707d2,0x1f5c40de,0xffe707d2,x16, 162*SIGALIGN, x17,x1, x14)

inst_93:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x707d21f5c40de and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x707d21f5c40de and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe707d21f5c40de; valaddr_reg:x16; op2:x26; op2val:0xffe707d21f5c40de
offset:168*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x1f5c40de, 0x7fe707d2,0x1f5c40de,0xffe707d2,x16, 164*SIGALIGN, x17,x1, x14)

inst_94:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x707d21f5c40de and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x707d21f5c40de and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe707d21f5c40de; valaddr_reg:x16; op2:x26; op2val:0xffe707d21f5c40de
offset:170*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x1f5c40de, 0x7fe707d2,0x1f5c40de,0xffe707d2,x16, 166*SIGALIGN, x17,x1, x14)

inst_95:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa65214b23e38e and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xa65214b23e38e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fea65214b23e38e; valaddr_reg:x16; op2:x26; op2val:0xffea65214b23e38e
offset:172*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x4b23e38e, 0x7fea6521,0x4b23e38e,0xffea6521,x16, 168*SIGALIGN, x17,x1, x14)

inst_96:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa65214b23e38e and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xa65214b23e38e and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fea65214b23e38e; valaddr_reg:x16; op2:x26; op2val:0xffea65214b23e38e
offset:174*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x4b23e38e, 0x7fea6521,0x4b23e38e,0xffea6521,x16, 170*SIGALIGN, x17,x1, x14)

inst_97:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa65214b23e38e and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xa65214b23e38e and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fea65214b23e38e; valaddr_reg:x16; op2:x26; op2val:0xffea65214b23e38e
offset:176*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x4b23e38e, 0x7fea6521,0x4b23e38e,0xffea6521,x16, 172*SIGALIGN, x17,x1, x14)

inst_98:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa65214b23e38e and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xa65214b23e38e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fea65214b23e38e; valaddr_reg:x16; op2:x26; op2val:0xffea65214b23e38e
offset:178*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x4b23e38e, 0x7fea6521,0x4b23e38e,0xffea6521,x16, 174*SIGALIGN, x17,x1, x14)

inst_99:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa65214b23e38e and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xa65214b23e38e and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fea65214b23e38e; valaddr_reg:x16; op2:x26; op2val:0xffea65214b23e38e
offset:180*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x4b23e38e, 0x7fea6521,0x4b23e38e,0xffea6521,x16, 176*SIGALIGN, x17,x1, x14)

inst_100:// fs1 == 0 and fe1 == 0x7f5 and fm1 == 0x2b954e52a4bff and fs2 == 1 and fe2 == 0x7f5 and fm2 == 0x2b954e52a4bff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7f52b954e52a4bff; valaddr_reg:x16; op2:x26; op2val:0xff52b954e52a4bff
offset:182*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe52a4bff, 0x7f52b954,0xe52a4bff,0xff52b954,x16, 178*SIGALIGN, x17,x1, x14)

inst_101:// fs1 == 0 and fe1 == 0x7f5 and fm1 == 0x2b954e52a4bff and fs2 == 1 and fe2 == 0x7f5 and fm2 == 0x2b954e52a4bff and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7f52b954e52a4bff; valaddr_reg:x16; op2:x26; op2val:0xff52b954e52a4bff
offset:184*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xe52a4bff, 0x7f52b954,0xe52a4bff,0xff52b954,x16, 180*SIGALIGN, x17,x1, x14)

inst_102:// fs1 == 0 and fe1 == 0x7f5 and fm1 == 0x2b954e52a4bff and fs2 == 1 and fe2 == 0x7f5 and fm2 == 0x2b954e52a4bff and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7f52b954e52a4bff; valaddr_reg:x16; op2:x26; op2val:0xff52b954e52a4bff
offset:186*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xe52a4bff, 0x7f52b954,0xe52a4bff,0xff52b954,x16, 182*SIGALIGN, x17,x1, x14)

inst_103:// fs1 == 0 and fe1 == 0x7f5 and fm1 == 0x2b954e52a4bff and fs2 == 1 and fe2 == 0x7f5 and fm2 == 0x2b954e52a4bff and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7f52b954e52a4bff; valaddr_reg:x16; op2:x26; op2val:0xff52b954e52a4bff
offset:188*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe52a4bff, 0x7f52b954,0xe52a4bff,0xff52b954,x16, 184*SIGALIGN, x17,x1, x14)

inst_104:// fs1 == 0 and fe1 == 0x7f5 and fm1 == 0x2b954e52a4bff and fs2 == 1 and fe2 == 0x7f5 and fm2 == 0x2b954e52a4bff and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7f52b954e52a4bff; valaddr_reg:x16; op2:x26; op2val:0xff52b954e52a4bff
offset:190*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xe52a4bff, 0x7f52b954,0xe52a4bff,0xff52b954,x16, 186*SIGALIGN, x17,x1, x14)

inst_105:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbc366e555215f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xbc366e555215f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7febc366e555215f; valaddr_reg:x16; op2:x26; op2val:0xffebc366e555215f
offset:192*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe555215f, 0x7febc366,0xe555215f,0xffebc366,x16, 188*SIGALIGN, x17,x1, x14)

inst_106:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbc366e555215f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xbc366e555215f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7febc366e555215f; valaddr_reg:x16; op2:x26; op2val:0xffebc366e555215f
offset:194*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xe555215f, 0x7febc366,0xe555215f,0xffebc366,x16, 190*SIGALIGN, x17,x1, x14)

inst_107:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbc366e555215f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xbc366e555215f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7febc366e555215f; valaddr_reg:x16; op2:x26; op2val:0xffebc366e555215f
offset:196*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xe555215f, 0x7febc366,0xe555215f,0xffebc366,x16, 192*SIGALIGN, x17,x1, x14)

inst_108:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbc366e555215f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xbc366e555215f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7febc366e555215f; valaddr_reg:x16; op2:x26; op2val:0xffebc366e555215f
offset:198*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe555215f, 0x7febc366,0xe555215f,0xffebc366,x16, 194*SIGALIGN, x17,x1, x14)

inst_109:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbc366e555215f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xbc366e555215f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7febc366e555215f; valaddr_reg:x16; op2:x26; op2val:0xffebc366e555215f
offset:200*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xe555215f, 0x7febc366,0xe555215f,0xffebc366,x16, 196*SIGALIGN, x17,x1, x14)

inst_110:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4d025f5a10f55 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x4d025f5a10f55 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd4d025f5a10f55; valaddr_reg:x16; op2:x26; op2val:0xffd4d025f5a10f55
offset:202*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf5a10f55, 0x7fd4d025,0xf5a10f55,0xffd4d025,x16, 198*SIGALIGN, x17,x1, x14)

inst_111:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4d025f5a10f55 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x4d025f5a10f55 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd4d025f5a10f55; valaddr_reg:x16; op2:x26; op2val:0xffd4d025f5a10f55
offset:204*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xf5a10f55, 0x7fd4d025,0xf5a10f55,0xffd4d025,x16, 200*SIGALIGN, x17,x1, x14)

inst_112:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4d025f5a10f55 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x4d025f5a10f55 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd4d025f5a10f55; valaddr_reg:x16; op2:x26; op2val:0xffd4d025f5a10f55
offset:206*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xf5a10f55, 0x7fd4d025,0xf5a10f55,0xffd4d025,x16, 202*SIGALIGN, x17,x1, x14)

inst_113:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4d025f5a10f55 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x4d025f5a10f55 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd4d025f5a10f55; valaddr_reg:x16; op2:x26; op2val:0xffd4d025f5a10f55
offset:208*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf5a10f55, 0x7fd4d025,0xf5a10f55,0xffd4d025,x16, 204*SIGALIGN, x17,x1, x14)

inst_114:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4d025f5a10f55 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x4d025f5a10f55 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd4d025f5a10f55; valaddr_reg:x16; op2:x26; op2val:0xffd4d025f5a10f55
offset:210*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xf5a10f55, 0x7fd4d025,0xf5a10f55,0xffd4d025,x16, 206*SIGALIGN, x17,x1, x14)

inst_115:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x874e2eeac1c13 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x874e2eeac1c13 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fc874e2eeac1c13; valaddr_reg:x16; op2:x26; op2val:0xffc874e2eeac1c13
offset:212*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xeeac1c13, 0x7fc874e2,0xeeac1c13,0xffc874e2,x16, 208*SIGALIGN, x17,x1, x14)

inst_116:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x874e2eeac1c13 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x874e2eeac1c13 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fc874e2eeac1c13; valaddr_reg:x16; op2:x26; op2val:0xffc874e2eeac1c13
offset:214*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xeeac1c13, 0x7fc874e2,0xeeac1c13,0xffc874e2,x16, 210*SIGALIGN, x17,x1, x14)

inst_117:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x874e2eeac1c13 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x874e2eeac1c13 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fc874e2eeac1c13; valaddr_reg:x16; op2:x26; op2val:0xffc874e2eeac1c13
offset:216*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xeeac1c13, 0x7fc874e2,0xeeac1c13,0xffc874e2,x16, 212*SIGALIGN, x17,x1, x14)

inst_118:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x874e2eeac1c13 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x874e2eeac1c13 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fc874e2eeac1c13; valaddr_reg:x16; op2:x26; op2val:0xffc874e2eeac1c13
offset:218*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xeeac1c13, 0x7fc874e2,0xeeac1c13,0xffc874e2,x16, 214*SIGALIGN, x17,x1, x14)

inst_119:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x874e2eeac1c13 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x874e2eeac1c13 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fc874e2eeac1c13; valaddr_reg:x16; op2:x26; op2val:0xffc874e2eeac1c13
offset:220*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xeeac1c13, 0x7fc874e2,0xeeac1c13,0xffc874e2,x16, 216*SIGALIGN, x17,x1, x14)

inst_120:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe8af77cda8053 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xe8af77cda8053 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fce8af77cda8053; valaddr_reg:x16; op2:x26; op2val:0xffce8af77cda8053
offset:222*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x7cda8053, 0x7fce8af7,0x7cda8053,0xffce8af7,x16, 218*SIGALIGN, x17,x1, x14)

inst_121:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe8af77cda8053 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xe8af77cda8053 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fce8af77cda8053; valaddr_reg:x16; op2:x26; op2val:0xffce8af77cda8053
offset:224*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x7cda8053, 0x7fce8af7,0x7cda8053,0xffce8af7,x16, 220*SIGALIGN, x17,x1, x14)

inst_122:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe8af77cda8053 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xe8af77cda8053 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fce8af77cda8053; valaddr_reg:x16; op2:x26; op2val:0xffce8af77cda8053
offset:226*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x7cda8053, 0x7fce8af7,0x7cda8053,0xffce8af7,x16, 222*SIGALIGN, x17,x1, x14)

inst_123:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe8af77cda8053 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xe8af77cda8053 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fce8af77cda8053; valaddr_reg:x16; op2:x26; op2val:0xffce8af77cda8053
offset:228*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x7cda8053, 0x7fce8af7,0x7cda8053,0xffce8af7,x16, 224*SIGALIGN, x17,x1, x14)

inst_124:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe8af77cda8053 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xe8af77cda8053 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fce8af77cda8053; valaddr_reg:x16; op2:x26; op2val:0xffce8af77cda8053
offset:230*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x7cda8053, 0x7fce8af7,0x7cda8053,0xffce8af7,x16, 226*SIGALIGN, x17,x1, x14)

inst_125:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9b3a56e2c058e and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x9b3a56e2c058e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe9b3a56e2c058e; valaddr_reg:x16; op2:x26; op2val:0xffe9b3a56e2c058e
offset:232*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x6e2c058e, 0x7fe9b3a5,0x6e2c058e,0xffe9b3a5,x16, 228*SIGALIGN, x17,x1, x14)

inst_126:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9b3a56e2c058e and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x9b3a56e2c058e and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe9b3a56e2c058e; valaddr_reg:x16; op2:x26; op2val:0xffe9b3a56e2c058e
offset:234*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x6e2c058e, 0x7fe9b3a5,0x6e2c058e,0xffe9b3a5,x16, 230*SIGALIGN, x17,x1, x14)

inst_127:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9b3a56e2c058e and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x9b3a56e2c058e and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe9b3a56e2c058e; valaddr_reg:x16; op2:x26; op2val:0xffe9b3a56e2c058e
offset:236*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x6e2c058e, 0x7fe9b3a5,0x6e2c058e,0xffe9b3a5,x16, 232*SIGALIGN, x17,x1, x14)

inst_128:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9b3a56e2c058e and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x9b3a56e2c058e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe9b3a56e2c058e; valaddr_reg:x16; op2:x26; op2val:0xffe9b3a56e2c058e
offset:238*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x6e2c058e, 0x7fe9b3a5,0x6e2c058e,0xffe9b3a5,x16, 234*SIGALIGN, x17,x1, x14)

inst_129:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9b3a56e2c058e and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x9b3a56e2c058e and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe9b3a56e2c058e; valaddr_reg:x16; op2:x26; op2val:0xffe9b3a56e2c058e
offset:240*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x6e2c058e, 0x7fe9b3a5,0x6e2c058e,0xffe9b3a5,x16, 236*SIGALIGN, x17,x1, x14)

inst_130:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x49818dfc8788f and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x49818dfc8788f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fb49818dfc8788f; valaddr_reg:x16; op2:x26; op2val:0xffb49818dfc8788f
offset:242*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xdfc8788f, 0x7fb49818,0xdfc8788f,0xffb49818,x16, 238*SIGALIGN, x17,x1, x14)

inst_131:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x49818dfc8788f and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x49818dfc8788f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fb49818dfc8788f; valaddr_reg:x16; op2:x26; op2val:0xffb49818dfc8788f
offset:244*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xdfc8788f, 0x7fb49818,0xdfc8788f,0xffb49818,x16, 240*SIGALIGN, x17,x1, x14)

inst_132:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x49818dfc8788f and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x49818dfc8788f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fb49818dfc8788f; valaddr_reg:x16; op2:x26; op2val:0xffb49818dfc8788f
offset:246*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xdfc8788f, 0x7fb49818,0xdfc8788f,0xffb49818,x16, 242*SIGALIGN, x17,x1, x14)

inst_133:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x49818dfc8788f and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x49818dfc8788f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fb49818dfc8788f; valaddr_reg:x16; op2:x26; op2val:0xffb49818dfc8788f
offset:248*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xdfc8788f, 0x7fb49818,0xdfc8788f,0xffb49818,x16, 244*SIGALIGN, x17,x1, x14)

inst_134:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x49818dfc8788f and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x49818dfc8788f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fb49818dfc8788f; valaddr_reg:x16; op2:x26; op2val:0xffb49818dfc8788f
offset:250*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xdfc8788f, 0x7fb49818,0xdfc8788f,0xffb49818,x16, 246*SIGALIGN, x17,x1, x14)

inst_135:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0410cbbfdec45 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0410cbbfdec45 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0410cbbfdec45; valaddr_reg:x16; op2:x26; op2val:0xffe0410cbbfdec45
offset:252*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xbbfdec45, 0x7fe0410c,0xbbfdec45,0xffe0410c,x16, 248*SIGALIGN, x17,x1, x14)

inst_136:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0410cbbfdec45 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0410cbbfdec45 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0410cbbfdec45; valaddr_reg:x16; op2:x26; op2val:0xffe0410cbbfdec45
offset:254*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xbbfdec45, 0x7fe0410c,0xbbfdec45,0xffe0410c,x16, 250*SIGALIGN, x17,x1, x14)

inst_137:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0410cbbfdec45 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0410cbbfdec45 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0410cbbfdec45; valaddr_reg:x16; op2:x26; op2val:0xffe0410cbbfdec45
offset:256*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xbbfdec45, 0x7fe0410c,0xbbfdec45,0xffe0410c,x16, 252*SIGALIGN, x17,x1, x14)

inst_138:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0410cbbfdec45 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0410cbbfdec45 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0410cbbfdec45; valaddr_reg:x16; op2:x26; op2val:0xffe0410cbbfdec45
offset:258*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xbbfdec45, 0x7fe0410c,0xbbfdec45,0xffe0410c,x16, 254*SIGALIGN, x17,x1, x14)

inst_139:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0410cbbfdec45 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0410cbbfdec45 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0410cbbfdec45; valaddr_reg:x16; op2:x26; op2val:0xffe0410cbbfdec45
offset:260*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xbbfdec45, 0x7fe0410c,0xbbfdec45,0xffe0410c,x16, 256*SIGALIGN, x17,x1, x14)

inst_140:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xbeb3709a573b7 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xbeb3709a573b7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fbbeb3709a573b7; valaddr_reg:x16; op2:x26; op2val:0xffbbeb3709a573b7
offset:262*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x09a573b7, 0x7fbbeb37,0x09a573b7,0xffbbeb37,x16, 258*SIGALIGN, x17,x1, x14)

inst_141:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xbeb3709a573b7 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xbeb3709a573b7 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fbbeb3709a573b7; valaddr_reg:x16; op2:x26; op2val:0xffbbeb3709a573b7
offset:264*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x09a573b7, 0x7fbbeb37,0x09a573b7,0xffbbeb37,x16, 260*SIGALIGN, x17,x1, x14)

inst_142:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xbeb3709a573b7 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xbeb3709a573b7 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fbbeb3709a573b7; valaddr_reg:x16; op2:x26; op2val:0xffbbeb3709a573b7
offset:266*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x09a573b7, 0x7fbbeb37,0x09a573b7,0xffbbeb37,x16, 262*SIGALIGN, x17,x1, x14)

inst_143:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xbeb3709a573b7 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xbeb3709a573b7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fbbeb3709a573b7; valaddr_reg:x16; op2:x26; op2val:0xffbbeb3709a573b7
offset:268*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x09a573b7, 0x7fbbeb37,0x09a573b7,0xffbbeb37,x16, 264*SIGALIGN, x17,x1, x14)

inst_144:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xbeb3709a573b7 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xbeb3709a573b7 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fbbeb3709a573b7; valaddr_reg:x16; op2:x26; op2val:0xffbbeb3709a573b7
offset:270*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x09a573b7, 0x7fbbeb37,0x09a573b7,0xffbbeb37,x16, 266*SIGALIGN, x17,x1, x14)

inst_145:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x69c26ac7fce60 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x69c26ac7fce60 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe69c26ac7fce60; valaddr_reg:x16; op2:x26; op2val:0xffe69c26ac7fce60
offset:272*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xac7fce60, 0x7fe69c26,0xac7fce60,0xffe69c26,x16, 268*SIGALIGN, x17,x1, x14)

inst_146:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x69c26ac7fce60 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x69c26ac7fce60 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe69c26ac7fce60; valaddr_reg:x16; op2:x26; op2val:0xffe69c26ac7fce60
offset:274*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xac7fce60, 0x7fe69c26,0xac7fce60,0xffe69c26,x16, 270*SIGALIGN, x17,x1, x14)

inst_147:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x69c26ac7fce60 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x69c26ac7fce60 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe69c26ac7fce60; valaddr_reg:x16; op2:x26; op2val:0xffe69c26ac7fce60
offset:276*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xac7fce60, 0x7fe69c26,0xac7fce60,0xffe69c26,x16, 272*SIGALIGN, x17,x1, x14)

inst_148:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x69c26ac7fce60 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x69c26ac7fce60 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe69c26ac7fce60; valaddr_reg:x16; op2:x26; op2val:0xffe69c26ac7fce60
offset:278*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xac7fce60, 0x7fe69c26,0xac7fce60,0xffe69c26,x16, 274*SIGALIGN, x17,x1, x14)

inst_149:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x69c26ac7fce60 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x69c26ac7fce60 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe69c26ac7fce60; valaddr_reg:x16; op2:x26; op2val:0xffe69c26ac7fce60
offset:280*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xac7fce60, 0x7fe69c26,0xac7fce60,0xffe69c26,x16, 276*SIGALIGN, x17,x1, x14)

inst_150:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa101ccfb0623a and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xa101ccfb0623a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fea101ccfb0623a; valaddr_reg:x16; op2:x26; op2val:0xffea101ccfb0623a
offset:282*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xcfb0623a, 0x7fea101c,0xcfb0623a,0xffea101c,x16, 278*SIGALIGN, x17,x1, x14)

inst_151:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa101ccfb0623a and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xa101ccfb0623a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fea101ccfb0623a; valaddr_reg:x16; op2:x26; op2val:0xffea101ccfb0623a
offset:284*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xcfb0623a, 0x7fea101c,0xcfb0623a,0xffea101c,x16, 280*SIGALIGN, x17,x1, x14)

inst_152:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa101ccfb0623a and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xa101ccfb0623a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fea101ccfb0623a; valaddr_reg:x16; op2:x26; op2val:0xffea101ccfb0623a
offset:286*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xcfb0623a, 0x7fea101c,0xcfb0623a,0xffea101c,x16, 282*SIGALIGN, x17,x1, x14)

inst_153:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa101ccfb0623a and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xa101ccfb0623a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fea101ccfb0623a; valaddr_reg:x16; op2:x26; op2val:0xffea101ccfb0623a
offset:288*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xcfb0623a, 0x7fea101c,0xcfb0623a,0xffea101c,x16, 284*SIGALIGN, x17,x1, x14)

inst_154:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa101ccfb0623a and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xa101ccfb0623a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fea101ccfb0623a; valaddr_reg:x16; op2:x26; op2val:0xffea101ccfb0623a
offset:290*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xcfb0623a, 0x7fea101c,0xcfb0623a,0xffea101c,x16, 286*SIGALIGN, x17,x1, x14)

inst_155:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xed7c3ef329d04 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xed7c3ef329d04 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7feed7c3ef329d04; valaddr_reg:x16; op2:x26; op2val:0xffeed7c3ef329d04
offset:292*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xef329d04, 0x7feed7c3,0xef329d04,0xffeed7c3,x16, 288*SIGALIGN, x17,x1, x14)

inst_156:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xed7c3ef329d04 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xed7c3ef329d04 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7feed7c3ef329d04; valaddr_reg:x16; op2:x26; op2val:0xffeed7c3ef329d04
offset:294*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xef329d04, 0x7feed7c3,0xef329d04,0xffeed7c3,x16, 290*SIGALIGN, x17,x1, x14)

inst_157:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xed7c3ef329d04 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xed7c3ef329d04 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7feed7c3ef329d04; valaddr_reg:x16; op2:x26; op2val:0xffeed7c3ef329d04
offset:296*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xef329d04, 0x7feed7c3,0xef329d04,0xffeed7c3,x16, 292*SIGALIGN, x17,x1, x14)

inst_158:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xed7c3ef329d04 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xed7c3ef329d04 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7feed7c3ef329d04; valaddr_reg:x16; op2:x26; op2val:0xffeed7c3ef329d04
offset:298*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xef329d04, 0x7feed7c3,0xef329d04,0xffeed7c3,x16, 294*SIGALIGN, x17,x1, x14)

inst_159:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xed7c3ef329d04 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xed7c3ef329d04 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7feed7c3ef329d04; valaddr_reg:x16; op2:x26; op2val:0xffeed7c3ef329d04
offset:300*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xef329d04, 0x7feed7c3,0xef329d04,0xffeed7c3,x16, 296*SIGALIGN, x17,x1, x14)

inst_160:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2cdc24d268f9f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x2cdc24d268f9f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe2cdc24d268f9f; valaddr_reg:x16; op2:x26; op2val:0xffe2cdc24d268f9f
offset:302*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x4d268f9f, 0x7fe2cdc2,0x4d268f9f,0xffe2cdc2,x16, 298*SIGALIGN, x17,x1, x14)

inst_161:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2cdc24d268f9f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x2cdc24d268f9f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe2cdc24d268f9f; valaddr_reg:x16; op2:x26; op2val:0xffe2cdc24d268f9f
offset:304*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x4d268f9f, 0x7fe2cdc2,0x4d268f9f,0xffe2cdc2,x16, 300*SIGALIGN, x17,x1, x14)

inst_162:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2cdc24d268f9f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x2cdc24d268f9f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe2cdc24d268f9f; valaddr_reg:x16; op2:x26; op2val:0xffe2cdc24d268f9f
offset:306*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x4d268f9f, 0x7fe2cdc2,0x4d268f9f,0xffe2cdc2,x16, 302*SIGALIGN, x17,x1, x14)

inst_163:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2cdc24d268f9f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x2cdc24d268f9f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe2cdc24d268f9f; valaddr_reg:x16; op2:x26; op2val:0xffe2cdc24d268f9f
offset:308*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x4d268f9f, 0x7fe2cdc2,0x4d268f9f,0xffe2cdc2,x16, 304*SIGALIGN, x17,x1, x14)

inst_164:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2cdc24d268f9f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x2cdc24d268f9f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe2cdc24d268f9f; valaddr_reg:x16; op2:x26; op2val:0xffe2cdc24d268f9f
offset:310*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x4d268f9f, 0x7fe2cdc2,0x4d268f9f,0xffe2cdc2,x16, 306*SIGALIGN, x17,x1, x14)

inst_165:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x314c82f3115df and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x314c82f3115df and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe314c82f3115df; valaddr_reg:x16; op2:x26; op2val:0xffe314c82f3115df
offset:312*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x2f3115df, 0x7fe314c8,0x2f3115df,0xffe314c8,x16, 308*SIGALIGN, x17,x1, x14)

inst_166:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x314c82f3115df and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x314c82f3115df and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe314c82f3115df; valaddr_reg:x16; op2:x26; op2val:0xffe314c82f3115df
offset:314*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x2f3115df, 0x7fe314c8,0x2f3115df,0xffe314c8,x16, 310*SIGALIGN, x17,x1, x14)

inst_167:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x314c82f3115df and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x314c82f3115df and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe314c82f3115df; valaddr_reg:x16; op2:x26; op2val:0xffe314c82f3115df
offset:316*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x2f3115df, 0x7fe314c8,0x2f3115df,0xffe314c8,x16, 312*SIGALIGN, x17,x1, x14)

inst_168:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x314c82f3115df and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x314c82f3115df and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe314c82f3115df; valaddr_reg:x16; op2:x26; op2val:0xffe314c82f3115df
offset:318*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x2f3115df, 0x7fe314c8,0x2f3115df,0xffe314c8,x16, 314*SIGALIGN, x17,x1, x14)

inst_169:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x314c82f3115df and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x314c82f3115df and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe314c82f3115df; valaddr_reg:x16; op2:x26; op2val:0xffe314c82f3115df
offset:320*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x2f3115df, 0x7fe314c8,0x2f3115df,0xffe314c8,x16, 316*SIGALIGN, x17,x1, x14)

inst_170:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x26bbbacf7eaef and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x26bbbacf7eaef and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe26bbbacf7eaef; valaddr_reg:x16; op2:x26; op2val:0xffe26bbbacf7eaef
offset:322*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xacf7eaef, 0x7fe26bbb,0xacf7eaef,0xffe26bbb,x16, 318*SIGALIGN, x17,x1, x14)

inst_171:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x26bbbacf7eaef and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x26bbbacf7eaef and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe26bbbacf7eaef; valaddr_reg:x16; op2:x26; op2val:0xffe26bbbacf7eaef
offset:324*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xacf7eaef, 0x7fe26bbb,0xacf7eaef,0xffe26bbb,x16, 320*SIGALIGN, x17,x1, x14)

inst_172:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x26bbbacf7eaef and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x26bbbacf7eaef and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe26bbbacf7eaef; valaddr_reg:x16; op2:x26; op2val:0xffe26bbbacf7eaef
offset:326*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xacf7eaef, 0x7fe26bbb,0xacf7eaef,0xffe26bbb,x16, 322*SIGALIGN, x17,x1, x14)

inst_173:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x26bbbacf7eaef and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x26bbbacf7eaef and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe26bbbacf7eaef; valaddr_reg:x16; op2:x26; op2val:0xffe26bbbacf7eaef
offset:328*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xacf7eaef, 0x7fe26bbb,0xacf7eaef,0xffe26bbb,x16, 324*SIGALIGN, x17,x1, x14)

inst_174:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x26bbbacf7eaef and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x26bbbacf7eaef and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe26bbbacf7eaef; valaddr_reg:x16; op2:x26; op2val:0xffe26bbbacf7eaef
offset:330*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xacf7eaef, 0x7fe26bbb,0xacf7eaef,0xffe26bbb,x16, 326*SIGALIGN, x17,x1, x14)

inst_175:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x83df99d24bacb and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x83df99d24bacb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fc83df99d24bacb; valaddr_reg:x16; op2:x26; op2val:0xffc83df99d24bacb
offset:332*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x9d24bacb, 0x7fc83df9,0x9d24bacb,0xffc83df9,x16, 328*SIGALIGN, x17,x1, x14)

inst_176:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x83df99d24bacb and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x83df99d24bacb and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fc83df99d24bacb; valaddr_reg:x16; op2:x26; op2val:0xffc83df99d24bacb
offset:334*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x9d24bacb, 0x7fc83df9,0x9d24bacb,0xffc83df9,x16, 330*SIGALIGN, x17,x1, x14)

inst_177:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x83df99d24bacb and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x83df99d24bacb and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fc83df99d24bacb; valaddr_reg:x16; op2:x26; op2val:0xffc83df99d24bacb
offset:336*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x9d24bacb, 0x7fc83df9,0x9d24bacb,0xffc83df9,x16, 332*SIGALIGN, x17,x1, x14)

inst_178:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x83df99d24bacb and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x83df99d24bacb and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fc83df99d24bacb; valaddr_reg:x16; op2:x26; op2val:0xffc83df99d24bacb
offset:338*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x9d24bacb, 0x7fc83df9,0x9d24bacb,0xffc83df9,x16, 334*SIGALIGN, x17,x1, x14)

inst_179:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x83df99d24bacb and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x83df99d24bacb and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fc83df99d24bacb; valaddr_reg:x16; op2:x26; op2val:0xffc83df99d24bacb
offset:340*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x9d24bacb, 0x7fc83df9,0x9d24bacb,0xffc83df9,x16, 336*SIGALIGN, x17,x1, x14)

inst_180:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x39bd67fecd9d5 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x39bd67fecd9d5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe39bd67fecd9d5; valaddr_reg:x16; op2:x26; op2val:0xffe39bd67fecd9d5
offset:342*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x7fecd9d5, 0x7fe39bd6,0x7fecd9d5,0xffe39bd6,x16, 338*SIGALIGN, x17,x1, x14)

inst_181:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x39bd67fecd9d5 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x39bd67fecd9d5 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe39bd67fecd9d5; valaddr_reg:x16; op2:x26; op2val:0xffe39bd67fecd9d5
offset:344*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x7fecd9d5, 0x7fe39bd6,0x7fecd9d5,0xffe39bd6,x16, 340*SIGALIGN, x17,x1, x14)

inst_182:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x39bd67fecd9d5 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x39bd67fecd9d5 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe39bd67fecd9d5; valaddr_reg:x16; op2:x26; op2val:0xffe39bd67fecd9d5
offset:346*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x7fecd9d5, 0x7fe39bd6,0x7fecd9d5,0xffe39bd6,x16, 342*SIGALIGN, x17,x1, x14)

inst_183:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x39bd67fecd9d5 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x39bd67fecd9d5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe39bd67fecd9d5; valaddr_reg:x16; op2:x26; op2val:0xffe39bd67fecd9d5
offset:348*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x7fecd9d5, 0x7fe39bd6,0x7fecd9d5,0xffe39bd6,x16, 344*SIGALIGN, x17,x1, x14)

inst_184:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x39bd67fecd9d5 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x39bd67fecd9d5 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe39bd67fecd9d5; valaddr_reg:x16; op2:x26; op2val:0xffe39bd67fecd9d5
offset:350*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x7fecd9d5, 0x7fe39bd6,0x7fecd9d5,0xffe39bd6,x16, 346*SIGALIGN, x17,x1, x14)

inst_185:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe7f7bd88d7c8f and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xe7f7bd88d7c8f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde7f7bd88d7c8f; valaddr_reg:x16; op2:x26; op2val:0xffde7f7bd88d7c8f
offset:352*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xd88d7c8f, 0x7fde7f7b,0xd88d7c8f,0xffde7f7b,x16, 348*SIGALIGN, x17,x1, x14)

inst_186:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe7f7bd88d7c8f and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xe7f7bd88d7c8f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde7f7bd88d7c8f; valaddr_reg:x16; op2:x26; op2val:0xffde7f7bd88d7c8f
offset:354*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xd88d7c8f, 0x7fde7f7b,0xd88d7c8f,0xffde7f7b,x16, 350*SIGALIGN, x17,x1, x14)

inst_187:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe7f7bd88d7c8f and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xe7f7bd88d7c8f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde7f7bd88d7c8f; valaddr_reg:x16; op2:x26; op2val:0xffde7f7bd88d7c8f
offset:356*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xd88d7c8f, 0x7fde7f7b,0xd88d7c8f,0xffde7f7b,x16, 352*SIGALIGN, x17,x1, x14)

inst_188:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe7f7bd88d7c8f and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xe7f7bd88d7c8f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde7f7bd88d7c8f; valaddr_reg:x16; op2:x26; op2val:0xffde7f7bd88d7c8f
offset:358*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd88d7c8f, 0x7fde7f7b,0xd88d7c8f,0xffde7f7b,x16, 354*SIGALIGN, x17,x1, x14)

inst_189:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe7f7bd88d7c8f and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xe7f7bd88d7c8f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde7f7bd88d7c8f; valaddr_reg:x16; op2:x26; op2val:0xffde7f7bd88d7c8f
offset:360*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xd88d7c8f, 0x7fde7f7b,0xd88d7c8f,0xffde7f7b,x16, 356*SIGALIGN, x17,x1, x14)

inst_190:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x83e4a9485598d and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x83e4a9485598d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe83e4a9485598d; valaddr_reg:x16; op2:x26; op2val:0xffe83e4a9485598d
offset:362*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x9485598d, 0x7fe83e4a,0x9485598d,0xffe83e4a,x16, 358*SIGALIGN, x17,x1, x14)

inst_191:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x83e4a9485598d and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x83e4a9485598d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe83e4a9485598d; valaddr_reg:x16; op2:x26; op2val:0xffe83e4a9485598d
offset:364*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x9485598d, 0x7fe83e4a,0x9485598d,0xffe83e4a,x16, 360*SIGALIGN, x17,x1, x14)

inst_192:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x83e4a9485598d and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x83e4a9485598d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe83e4a9485598d; valaddr_reg:x16; op2:x26; op2val:0xffe83e4a9485598d
offset:366*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x9485598d, 0x7fe83e4a,0x9485598d,0xffe83e4a,x16, 362*SIGALIGN, x17,x1, x14)

inst_193:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x83e4a9485598d and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x83e4a9485598d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe83e4a9485598d; valaddr_reg:x16; op2:x26; op2val:0xffe83e4a9485598d
offset:368*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x9485598d, 0x7fe83e4a,0x9485598d,0xffe83e4a,x16, 364*SIGALIGN, x17,x1, x14)

inst_194:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x83e4a9485598d and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x83e4a9485598d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe83e4a9485598d; valaddr_reg:x16; op2:x26; op2val:0xffe83e4a9485598d
offset:370*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x9485598d, 0x7fe83e4a,0x9485598d,0xffe83e4a,x16, 366*SIGALIGN, x17,x1, x14)

inst_195:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd8c56582791a6 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd8c56582791a6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fed8c56582791a6; valaddr_reg:x16; op2:x26; op2val:0xffed8c56582791a6
offset:372*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x582791a6, 0x7fed8c56,0x582791a6,0xffed8c56,x16, 368*SIGALIGN, x17,x1, x14)

inst_196:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd8c56582791a6 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd8c56582791a6 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fed8c56582791a6; valaddr_reg:x16; op2:x26; op2val:0xffed8c56582791a6
offset:374*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x582791a6, 0x7fed8c56,0x582791a6,0xffed8c56,x16, 370*SIGALIGN, x17,x1, x14)

inst_197:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd8c56582791a6 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd8c56582791a6 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fed8c56582791a6; valaddr_reg:x16; op2:x26; op2val:0xffed8c56582791a6
offset:376*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x582791a6, 0x7fed8c56,0x582791a6,0xffed8c56,x16, 372*SIGALIGN, x17,x1, x14)

inst_198:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd8c56582791a6 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd8c56582791a6 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fed8c56582791a6; valaddr_reg:x16; op2:x26; op2val:0xffed8c56582791a6
offset:378*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x582791a6, 0x7fed8c56,0x582791a6,0xffed8c56,x16, 374*SIGALIGN, x17,x1, x14)

inst_199:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd8c56582791a6 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd8c56582791a6 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fed8c56582791a6; valaddr_reg:x16; op2:x26; op2val:0xffed8c56582791a6
offset:380*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x582791a6, 0x7fed8c56,0x582791a6,0xffed8c56,x16, 376*SIGALIGN, x17,x1, x14)

inst_200:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcbdd58ecc1b45 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xcbdd58ecc1b45 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fecbdd58ecc1b45; valaddr_reg:x16; op2:x26; op2val:0xffecbdd58ecc1b45
offset:382*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x8ecc1b45, 0x7fecbdd5,0x8ecc1b45,0xffecbdd5,x16, 378*SIGALIGN, x17,x1, x14)

inst_201:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcbdd58ecc1b45 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xcbdd58ecc1b45 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fecbdd58ecc1b45; valaddr_reg:x16; op2:x26; op2val:0xffecbdd58ecc1b45
offset:384*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x8ecc1b45, 0x7fecbdd5,0x8ecc1b45,0xffecbdd5,x16, 380*SIGALIGN, x17,x1, x14)

inst_202:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcbdd58ecc1b45 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xcbdd58ecc1b45 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fecbdd58ecc1b45; valaddr_reg:x16; op2:x26; op2val:0xffecbdd58ecc1b45
offset:386*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x8ecc1b45, 0x7fecbdd5,0x8ecc1b45,0xffecbdd5,x16, 382*SIGALIGN, x17,x1, x14)

inst_203:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcbdd58ecc1b45 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xcbdd58ecc1b45 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fecbdd58ecc1b45; valaddr_reg:x16; op2:x26; op2val:0xffecbdd58ecc1b45
offset:388*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x8ecc1b45, 0x7fecbdd5,0x8ecc1b45,0xffecbdd5,x16, 384*SIGALIGN, x17,x1, x14)

inst_204:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcbdd58ecc1b45 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xcbdd58ecc1b45 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fecbdd58ecc1b45; valaddr_reg:x16; op2:x26; op2val:0xffecbdd58ecc1b45
offset:390*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x8ecc1b45, 0x7fecbdd5,0x8ecc1b45,0xffecbdd5,x16, 386*SIGALIGN, x17,x1, x14)

inst_205:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x14c9836bbe6ff and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x14c9836bbe6ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe14c9836bbe6ff; valaddr_reg:x16; op2:x26; op2val:0xffe14c9836bbe6ff
offset:392*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x36bbe6ff, 0x7fe14c98,0x36bbe6ff,0xffe14c98,x16, 388*SIGALIGN, x17,x1, x14)

inst_206:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x14c9836bbe6ff and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x14c9836bbe6ff and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe14c9836bbe6ff; valaddr_reg:x16; op2:x26; op2val:0xffe14c9836bbe6ff
offset:394*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x36bbe6ff, 0x7fe14c98,0x36bbe6ff,0xffe14c98,x16, 390*SIGALIGN, x17,x1, x14)

inst_207:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x14c9836bbe6ff and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x14c9836bbe6ff and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe14c9836bbe6ff; valaddr_reg:x16; op2:x26; op2val:0xffe14c9836bbe6ff
offset:396*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x36bbe6ff, 0x7fe14c98,0x36bbe6ff,0xffe14c98,x16, 392*SIGALIGN, x17,x1, x14)

inst_208:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x14c9836bbe6ff and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x14c9836bbe6ff and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe14c9836bbe6ff; valaddr_reg:x16; op2:x26; op2val:0xffe14c9836bbe6ff
offset:398*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x36bbe6ff, 0x7fe14c98,0x36bbe6ff,0xffe14c98,x16, 394*SIGALIGN, x17,x1, x14)

inst_209:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x14c9836bbe6ff and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x14c9836bbe6ff and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe14c9836bbe6ff; valaddr_reg:x16; op2:x26; op2val:0xffe14c9836bbe6ff
offset:400*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x36bbe6ff, 0x7fe14c98,0x36bbe6ff,0xffe14c98,x16, 396*SIGALIGN, x17,x1, x14)

inst_210:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7feb0580f98a7dbd; valaddr_reg:x16; op2:x26; op2val:0xffeb0580f98a7dbd
offset:402*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf98a7dbd, 0x7feb0580,0xf98a7dbd,0xffeb0580,x16, 398*SIGALIGN, x17,x1, x14)

inst_211:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7feb0580f98a7dbd; valaddr_reg:x16; op2:x26; op2val:0xffeb0580f98a7dbd
offset:404*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xf98a7dbd, 0x7feb0580,0xf98a7dbd,0xffeb0580,x16, 400*SIGALIGN, x17,x1, x14)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0xf98a7dbd,64,FLEN)
NAN_BOXED(0xf98a7dbd,64,FLEN)
NAN_BOXED(0xf98a7dbd,64,FLEN)
NAN_BOXED(0xf98a7dbd,64,FLEN)
NAN_BOXED(0xf98a7dbd,64,FLEN)
NAN_BOXED(0xf98a7dbd,64,FLEN)
NAN_BOXED(0xf98a7dbd,64,FLEN)
NAN_BOXED(0xf98a7dbd,64,FLEN)
NAN_BOXED(0xf98a7dbd,64,FLEN)
NAN_BOXED(0xf98a7dbd,64,FLEN)
NAN_BOXED(0x1052e977,64,FLEN)
NAN_BOXED(0x1052e977,64,FLEN)
NAN_BOXED(0x1052e977,64,FLEN)
NAN_BOXED(0x1052e977,64,FLEN)
NAN_BOXED(0x1052e977,64,FLEN)
NAN_BOXED(0x1052e977,64,FLEN)
NAN_BOXED(0x1052e977,64,FLEN)
NAN_BOXED(0x1052e977,64,FLEN)
test_dataset_1:
NAN_BOXED(0x1052e977,64,FLEN)
NAN_BOXED(0x1052e977,64,FLEN)
NAN_BOXED(0xcdf19706,64,FLEN)
NAN_BOXED(0xcdf19706,64,FLEN)
NAN_BOXED(0xcdf19706,64,FLEN)
NAN_BOXED(0xcdf19706,64,FLEN)
NAN_BOXED(0xcdf19706,64,FLEN)
NAN_BOXED(0xcdf19706,64,FLEN)
NAN_BOXED(0xcdf19706,64,FLEN)
NAN_BOXED(0xcdf19706,64,FLEN)
NAN_BOXED(0xcdf19706,64,FLEN)
NAN_BOXED(0xcdf19706,64,FLEN)
NAN_BOXED(0xc751c4f4,64,FLEN)
NAN_BOXED(0xc751c4f4,64,FLEN)
NAN_BOXED(0xc751c4f4,64,FLEN)
NAN_BOXED(0xc751c4f4,64,FLEN)
NAN_BOXED(0xc751c4f4,64,FLEN)
NAN_BOXED(0xc751c4f4,64,FLEN)
NAN_BOXED(0xc751c4f4,64,FLEN)
NAN_BOXED(0xc751c4f4,64,FLEN)
NAN_BOXED(0xc751c4f4,64,FLEN)
NAN_BOXED(0xc751c4f4,64,FLEN)
NAN_BOXED(0x82dd48fb,64,FLEN)
NAN_BOXED(0x82dd48fb,64,FLEN)
NAN_BOXED(0x82dd48fb,64,FLEN)
NAN_BOXED(0x82dd48fb,64,FLEN)
NAN_BOXED(0x82dd48fb,64,FLEN)
NAN_BOXED(0x82dd48fb,64,FLEN)
NAN_BOXED(0x82dd48fb,64,FLEN)
NAN_BOXED(0x82dd48fb,64,FLEN)
NAN_BOXED(0x82dd48fb,64,FLEN)
NAN_BOXED(0x82dd48fb,64,FLEN)
NAN_BOXED(0xc0dfaf72,64,FLEN)
NAN_BOXED(0xc0dfaf72,64,FLEN)
NAN_BOXED(0xc0dfaf72,64,FLEN)
NAN_BOXED(0xc0dfaf72,64,FLEN)
NAN_BOXED(0xc0dfaf72,64,FLEN)
NAN_BOXED(0xc0dfaf72,64,FLEN)
NAN_BOXED(0xc0dfaf72,64,FLEN)
NAN_BOXED(0xc0dfaf72,64,FLEN)
NAN_BOXED(0xc0dfaf72,64,FLEN)
NAN_BOXED(0xc0dfaf72,64,FLEN)
NAN_BOXED(0x991e3307,64,FLEN)
NAN_BOXED(0x991e3307,64,FLEN)
NAN_BOXED(0x991e3307,64,FLEN)
NAN_BOXED(0x991e3307,64,FLEN)
NAN_BOXED(0x991e3307,64,FLEN)
NAN_BOXED(0x991e3307,64,FLEN)
NAN_BOXED(0x991e3307,64,FLEN)
NAN_BOXED(0x991e3307,64,FLEN)
NAN_BOXED(0x991e3307,64,FLEN)
NAN_BOXED(0x991e3307,64,FLEN)
NAN_BOXED(0xc7329695,64,FLEN)
NAN_BOXED(0xc7329695,64,FLEN)
NAN_BOXED(0xc7329695,64,FLEN)
NAN_BOXED(0xc7329695,64,FLEN)
NAN_BOXED(0xc7329695,64,FLEN)
NAN_BOXED(0xc7329695,64,FLEN)
NAN_BOXED(0xc7329695,64,FLEN)
NAN_BOXED(0xc7329695,64,FLEN)
NAN_BOXED(0xc7329695,64,FLEN)
NAN_BOXED(0xc7329695,64,FLEN)
NAN_BOXED(0x2e21585b,64,FLEN)
NAN_BOXED(0x2e21585b,64,FLEN)
NAN_BOXED(0x2e21585b,64,FLEN)
NAN_BOXED(0x2e21585b,64,FLEN)
NAN_BOXED(0x2e21585b,64,FLEN)
NAN_BOXED(0x2e21585b,64,FLEN)
NAN_BOXED(0x2e21585b,64,FLEN)
NAN_BOXED(0x2e21585b,64,FLEN)
NAN_BOXED(0x2e21585b,64,FLEN)
NAN_BOXED(0x2e21585b,64,FLEN)
NAN_BOXED(0xb2685903,64,FLEN)
NAN_BOXED(0xb2685903,64,FLEN)
NAN_BOXED(0xb2685903,64,FLEN)
NAN_BOXED(0xb2685903,64,FLEN)
NAN_BOXED(0xb2685903,64,FLEN)
NAN_BOXED(0xb2685903,64,FLEN)
NAN_BOXED(0xb2685903,64,FLEN)
NAN_BOXED(0xb2685903,64,FLEN)
NAN_BOXED(0xb2685903,64,FLEN)
NAN_BOXED(0xb2685903,64,FLEN)
NAN_BOXED(0x30ca446d,64,FLEN)
NAN_BOXED(0x30ca446d,64,FLEN)
NAN_BOXED(0x30ca446d,64,FLEN)
NAN_BOXED(0x30ca446d,64,FLEN)
NAN_BOXED(0x30ca446d,64,FLEN)
NAN_BOXED(0x30ca446d,64,FLEN)
NAN_BOXED(0x30ca446d,64,FLEN)
NAN_BOXED(0x30ca446d,64,FLEN)
NAN_BOXED(0x30ca446d,64,FLEN)
NAN_BOXED(0x30ca446d,64,FLEN)
NAN_BOXED(0x8366e29b,64,FLEN)
NAN_BOXED(0x8366e29b,64,FLEN)
NAN_BOXED(0x8366e29b,64,FLEN)
NAN_BOXED(0x8366e29b,64,FLEN)
NAN_BOXED(0x8366e29b,64,FLEN)
NAN_BOXED(0x8366e29b,64,FLEN)
NAN_BOXED(0x8366e29b,64,FLEN)
NAN_BOXED(0x8366e29b,64,FLEN)
NAN_BOXED(0x8366e29b,64,FLEN)
NAN_BOXED(0x8366e29b,64,FLEN)
NAN_BOXED(0x147a7f97,64,FLEN)
NAN_BOXED(0x147a7f97,64,FLEN)
NAN_BOXED(0x147a7f97,64,FLEN)
NAN_BOXED(0x147a7f97,64,FLEN)
NAN_BOXED(0x147a7f97,64,FLEN)
NAN_BOXED(0x147a7f97,64,FLEN)
NAN_BOXED(0x147a7f97,64,FLEN)
NAN_BOXED(0x147a7f97,64,FLEN)
NAN_BOXED(0x147a7f97,64,FLEN)
NAN_BOXED(0x147a7f97,64,FLEN)
NAN_BOXED(0xaa879221,64,FLEN)
NAN_BOXED(0xaa879221,64,FLEN)
NAN_BOXED(0xaa879221,64,FLEN)
NAN_BOXED(0xaa879221,64,FLEN)
NAN_BOXED(0xaa879221,64,FLEN)
NAN_BOXED(0xaa879221,64,FLEN)
NAN_BOXED(0xaa879221,64,FLEN)
NAN_BOXED(0xaa879221,64,FLEN)
NAN_BOXED(0xaa879221,64,FLEN)
NAN_BOXED(0xaa879221,64,FLEN)
NAN_BOXED(0xf4d1629c,64,FLEN)
NAN_BOXED(0xf4d1629c,64,FLEN)
NAN_BOXED(0xf4d1629c,64,FLEN)
NAN_BOXED(0xf4d1629c,64,FLEN)
NAN_BOXED(0xf4d1629c,64,FLEN)
NAN_BOXED(0xf4d1629c,64,FLEN)
NAN_BOXED(0xf4d1629c,64,FLEN)
NAN_BOXED(0xf4d1629c,64,FLEN)
NAN_BOXED(0xf4d1629c,64,FLEN)
NAN_BOXED(0xf4d1629c,64,FLEN)
NAN_BOXED(0x038aa2cf,64,FLEN)
NAN_BOXED(0x038aa2cf,64,FLEN)
NAN_BOXED(0x038aa2cf,64,FLEN)
NAN_BOXED(0x038aa2cf,64,FLEN)
NAN_BOXED(0x038aa2cf,64,FLEN)
NAN_BOXED(0x038aa2cf,64,FLEN)
NAN_BOXED(0x038aa2cf,64,FLEN)
NAN_BOXED(0x038aa2cf,64,FLEN)
NAN_BOXED(0x038aa2cf,64,FLEN)
NAN_BOXED(0x038aa2cf,64,FLEN)
NAN_BOXED(0xf07f8c6f,64,FLEN)
NAN_BOXED(0xf07f8c6f,64,FLEN)
NAN_BOXED(0xf07f8c6f,64,FLEN)
NAN_BOXED(0xf07f8c6f,64,FLEN)
NAN_BOXED(0xf07f8c6f,64,FLEN)
NAN_BOXED(0xf07f8c6f,64,FLEN)
NAN_BOXED(0xf07f8c6f,64,FLEN)
NAN_BOXED(0xf07f8c6f,64,FLEN)
NAN_BOXED(0xf07f8c6f,64,FLEN)
NAN_BOXED(0xf07f8c6f,64,FLEN)
NAN_BOXED(0xd7a9fa74,64,FLEN)
NAN_BOXED(0xd7a9fa74,64,FLEN)
NAN_BOXED(0xd7a9fa74,64,FLEN)
NAN_BOXED(0xd7a9fa74,64,FLEN)
NAN_BOXED(0xd7a9fa74,64,FLEN)
NAN_BOXED(0xd7a9fa74,64,FLEN)
NAN_BOXED(0xd7a9fa74,64,FLEN)
NAN_BOXED(0xd7a9fa74,64,FLEN)
NAN_BOXED(0xd7a9fa74,64,FLEN)
NAN_BOXED(0xd7a9fa74,64,FLEN)
NAN_BOXED(0x1f5c40de,64,FLEN)
NAN_BOXED(0x1f5c40de,64,FLEN)
NAN_BOXED(0x1f5c40de,64,FLEN)
NAN_BOXED(0x1f5c40de,64,FLEN)
NAN_BOXED(0x1f5c40de,64,FLEN)
NAN_BOXED(0x1f5c40de,64,FLEN)
NAN_BOXED(0x1f5c40de,64,FLEN)
NAN_BOXED(0x1f5c40de,64,FLEN)
NAN_BOXED(0x1f5c40de,64,FLEN)
NAN_BOXED(0x1f5c40de,64,FLEN)
NAN_BOXED(0x4b23e38e,64,FLEN)
NAN_BOXED(0x4b23e38e,64,FLEN)
NAN_BOXED(0x4b23e38e,64,FLEN)
NAN_BOXED(0x4b23e38e,64,FLEN)
NAN_BOXED(0x4b23e38e,64,FLEN)
NAN_BOXED(0x4b23e38e,64,FLEN)
NAN_BOXED(0x4b23e38e,64,FLEN)
NAN_BOXED(0x4b23e38e,64,FLEN)
NAN_BOXED(0x4b23e38e,64,FLEN)
NAN_BOXED(0x4b23e38e,64,FLEN)
NAN_BOXED(0xe52a4bff,64,FLEN)
NAN_BOXED(0xe52a4bff,64,FLEN)
NAN_BOXED(0xe52a4bff,64,FLEN)
NAN_BOXED(0xe52a4bff,64,FLEN)
NAN_BOXED(0xe52a4bff,64,FLEN)
NAN_BOXED(0xe52a4bff,64,FLEN)
NAN_BOXED(0xe52a4bff,64,FLEN)
NAN_BOXED(0xe52a4bff,64,FLEN)
NAN_BOXED(0xe52a4bff,64,FLEN)
NAN_BOXED(0xe52a4bff,64,FLEN)
NAN_BOXED(0xe555215f,64,FLEN)
NAN_BOXED(0xe555215f,64,FLEN)
NAN_BOXED(0xe555215f,64,FLEN)
NAN_BOXED(0xe555215f,64,FLEN)
NAN_BOXED(0xe555215f,64,FLEN)
NAN_BOXED(0xe555215f,64,FLEN)
NAN_BOXED(0xe555215f,64,FLEN)
NAN_BOXED(0xe555215f,64,FLEN)
NAN_BOXED(0xe555215f,64,FLEN)
NAN_BOXED(0xe555215f,64,FLEN)
NAN_BOXED(0xf5a10f55,64,FLEN)
NAN_BOXED(0xf5a10f55,64,FLEN)
NAN_BOXED(0xf5a10f55,64,FLEN)
NAN_BOXED(0xf5a10f55,64,FLEN)
NAN_BOXED(0xf5a10f55,64,FLEN)
NAN_BOXED(0xf5a10f55,64,FLEN)
NAN_BOXED(0xf5a10f55,64,FLEN)
NAN_BOXED(0xf5a10f55,64,FLEN)
NAN_BOXED(0xf5a10f55,64,FLEN)
NAN_BOXED(0xf5a10f55,64,FLEN)
NAN_BOXED(0xeeac1c13,64,FLEN)
NAN_BOXED(0xeeac1c13,64,FLEN)
NAN_BOXED(0xeeac1c13,64,FLEN)
NAN_BOXED(0xeeac1c13,64,FLEN)
NAN_BOXED(0xeeac1c13,64,FLEN)
NAN_BOXED(0xeeac1c13,64,FLEN)
NAN_BOXED(0xeeac1c13,64,FLEN)
NAN_BOXED(0xeeac1c13,64,FLEN)
NAN_BOXED(0xeeac1c13,64,FLEN)
NAN_BOXED(0xeeac1c13,64,FLEN)
NAN_BOXED(0x7cda8053,64,FLEN)
NAN_BOXED(0x7cda8053,64,FLEN)
NAN_BOXED(0x7cda8053,64,FLEN)
NAN_BOXED(0x7cda8053,64,FLEN)
NAN_BOXED(0x7cda8053,64,FLEN)
NAN_BOXED(0x7cda8053,64,FLEN)
NAN_BOXED(0x7cda8053,64,FLEN)
NAN_BOXED(0x7cda8053,64,FLEN)
NAN_BOXED(0x7cda8053,64,FLEN)
NAN_BOXED(0x7cda8053,64,FLEN)
NAN_BOXED(0x6e2c058e,64,FLEN)
NAN_BOXED(0x6e2c058e,64,FLEN)
NAN_BOXED(0x6e2c058e,64,FLEN)
NAN_BOXED(0x6e2c058e,64,FLEN)
NAN_BOXED(0x6e2c058e,64,FLEN)
NAN_BOXED(0x6e2c058e,64,FLEN)
NAN_BOXED(0x6e2c058e,64,FLEN)
NAN_BOXED(0x6e2c058e,64,FLEN)
NAN_BOXED(0x6e2c058e,64,FLEN)
NAN_BOXED(0x6e2c058e,64,FLEN)
NAN_BOXED(0xdfc8788f,64,FLEN)
NAN_BOXED(0xdfc8788f,64,FLEN)
NAN_BOXED(0xdfc8788f,64,FLEN)
NAN_BOXED(0xdfc8788f,64,FLEN)
NAN_BOXED(0xdfc8788f,64,FLEN)
NAN_BOXED(0xdfc8788f,64,FLEN)
NAN_BOXED(0xdfc8788f,64,FLEN)
NAN_BOXED(0xdfc8788f,64,FLEN)
NAN_BOXED(0xdfc8788f,64,FLEN)
NAN_BOXED(0xdfc8788f,64,FLEN)
NAN_BOXED(0xbbfdec45,64,FLEN)
NAN_BOXED(0xbbfdec45,64,FLEN)
NAN_BOXED(0xbbfdec45,64,FLEN)
NAN_BOXED(0xbbfdec45,64,FLEN)
NAN_BOXED(0xbbfdec45,64,FLEN)
NAN_BOXED(0xbbfdec45,64,FLEN)
NAN_BOXED(0xbbfdec45,64,FLEN)
NAN_BOXED(0xbbfdec45,64,FLEN)
NAN_BOXED(0xbbfdec45,64,FLEN)
NAN_BOXED(0xbbfdec45,64,FLEN)
NAN_BOXED(0x09a573b7,64,FLEN)
NAN_BOXED(0x09a573b7,64,FLEN)
NAN_BOXED(0x09a573b7,64,FLEN)
NAN_BOXED(0x09a573b7,64,FLEN)
NAN_BOXED(0x09a573b7,64,FLEN)
NAN_BOXED(0x09a573b7,64,FLEN)
NAN_BOXED(0x09a573b7,64,FLEN)
NAN_BOXED(0x09a573b7,64,FLEN)
NAN_BOXED(0x09a573b7,64,FLEN)
NAN_BOXED(0x09a573b7,64,FLEN)
NAN_BOXED(0xac7fce60,64,FLEN)
NAN_BOXED(0xac7fce60,64,FLEN)
NAN_BOXED(0xac7fce60,64,FLEN)
NAN_BOXED(0xac7fce60,64,FLEN)
NAN_BOXED(0xac7fce60,64,FLEN)
NAN_BOXED(0xac7fce60,64,FLEN)
NAN_BOXED(0xac7fce60,64,FLEN)
NAN_BOXED(0xac7fce60,64,FLEN)
NAN_BOXED(0xac7fce60,64,FLEN)
NAN_BOXED(0xac7fce60,64,FLEN)
NAN_BOXED(0xcfb0623a,64,FLEN)
NAN_BOXED(0xcfb0623a,64,FLEN)
NAN_BOXED(0xcfb0623a,64,FLEN)
NAN_BOXED(0xcfb0623a,64,FLEN)
NAN_BOXED(0xcfb0623a,64,FLEN)
NAN_BOXED(0xcfb0623a,64,FLEN)
NAN_BOXED(0xcfb0623a,64,FLEN)
NAN_BOXED(0xcfb0623a,64,FLEN)
NAN_BOXED(0xcfb0623a,64,FLEN)
NAN_BOXED(0xcfb0623a,64,FLEN)
NAN_BOXED(0xef329d04,64,FLEN)
NAN_BOXED(0xef329d04,64,FLEN)
NAN_BOXED(0xef329d04,64,FLEN)
NAN_BOXED(0xef329d04,64,FLEN)
NAN_BOXED(0xef329d04,64,FLEN)
NAN_BOXED(0xef329d04,64,FLEN)
NAN_BOXED(0xef329d04,64,FLEN)
NAN_BOXED(0xef329d04,64,FLEN)
NAN_BOXED(0xef329d04,64,FLEN)
NAN_BOXED(0xef329d04,64,FLEN)
NAN_BOXED(0x4d268f9f,64,FLEN)
NAN_BOXED(0x4d268f9f,64,FLEN)
NAN_BOXED(0x4d268f9f,64,FLEN)
NAN_BOXED(0x4d268f9f,64,FLEN)
NAN_BOXED(0x4d268f9f,64,FLEN)
NAN_BOXED(0x4d268f9f,64,FLEN)
NAN_BOXED(0x4d268f9f,64,FLEN)
NAN_BOXED(0x4d268f9f,64,FLEN)
NAN_BOXED(0x4d268f9f,64,FLEN)
NAN_BOXED(0x4d268f9f,64,FLEN)
NAN_BOXED(0x2f3115df,64,FLEN)
NAN_BOXED(0x2f3115df,64,FLEN)
NAN_BOXED(0x2f3115df,64,FLEN)
NAN_BOXED(0x2f3115df,64,FLEN)
NAN_BOXED(0x2f3115df,64,FLEN)
NAN_BOXED(0x2f3115df,64,FLEN)
NAN_BOXED(0x2f3115df,64,FLEN)
NAN_BOXED(0x2f3115df,64,FLEN)
NAN_BOXED(0x2f3115df,64,FLEN)
NAN_BOXED(0x2f3115df,64,FLEN)
NAN_BOXED(0xacf7eaef,64,FLEN)
NAN_BOXED(0xacf7eaef,64,FLEN)
NAN_BOXED(0xacf7eaef,64,FLEN)
NAN_BOXED(0xacf7eaef,64,FLEN)
NAN_BOXED(0xacf7eaef,64,FLEN)
NAN_BOXED(0xacf7eaef,64,FLEN)
NAN_BOXED(0xacf7eaef,64,FLEN)
NAN_BOXED(0xacf7eaef,64,FLEN)
NAN_BOXED(0xacf7eaef,64,FLEN)
NAN_BOXED(0xacf7eaef,64,FLEN)
NAN_BOXED(0x9d24bacb,64,FLEN)
NAN_BOXED(0x9d24bacb,64,FLEN)
NAN_BOXED(0x9d24bacb,64,FLEN)
NAN_BOXED(0x9d24bacb,64,FLEN)
NAN_BOXED(0x9d24bacb,64,FLEN)
NAN_BOXED(0x9d24bacb,64,FLEN)
NAN_BOXED(0x9d24bacb,64,FLEN)
NAN_BOXED(0x9d24bacb,64,FLEN)
NAN_BOXED(0x9d24bacb,64,FLEN)
NAN_BOXED(0x9d24bacb,64,FLEN)
NAN_BOXED(0x7fecd9d5,64,FLEN)
NAN_BOXED(0x7fecd9d5,64,FLEN)
NAN_BOXED(0x7fecd9d5,64,FLEN)
NAN_BOXED(0x7fecd9d5,64,FLEN)
NAN_BOXED(0x7fecd9d5,64,FLEN)
NAN_BOXED(0x7fecd9d5,64,FLEN)
NAN_BOXED(0x7fecd9d5,64,FLEN)
NAN_BOXED(0x7fecd9d5,64,FLEN)
NAN_BOXED(0x7fecd9d5,64,FLEN)
NAN_BOXED(0x7fecd9d5,64,FLEN)
NAN_BOXED(0xd88d7c8f,64,FLEN)
NAN_BOXED(0xd88d7c8f,64,FLEN)
NAN_BOXED(0xd88d7c8f,64,FLEN)
NAN_BOXED(0xd88d7c8f,64,FLEN)
NAN_BOXED(0xd88d7c8f,64,FLEN)
NAN_BOXED(0xd88d7c8f,64,FLEN)
NAN_BOXED(0xd88d7c8f,64,FLEN)
NAN_BOXED(0xd88d7c8f,64,FLEN)
NAN_BOXED(0xd88d7c8f,64,FLEN)
NAN_BOXED(0xd88d7c8f,64,FLEN)
NAN_BOXED(0x9485598d,64,FLEN)
NAN_BOXED(0x9485598d,64,FLEN)
NAN_BOXED(0x9485598d,64,FLEN)
NAN_BOXED(0x9485598d,64,FLEN)
NAN_BOXED(0x9485598d,64,FLEN)
NAN_BOXED(0x9485598d,64,FLEN)
NAN_BOXED(0x9485598d,64,FLEN)
NAN_BOXED(0x9485598d,64,FLEN)
NAN_BOXED(0x9485598d,64,FLEN)
NAN_BOXED(0x9485598d,64,FLEN)
NAN_BOXED(0x582791a6,64,FLEN)
NAN_BOXED(0x582791a6,64,FLEN)
NAN_BOXED(0x582791a6,64,FLEN)
NAN_BOXED(0x582791a6,64,FLEN)
NAN_BOXED(0x582791a6,64,FLEN)
NAN_BOXED(0x582791a6,64,FLEN)
NAN_BOXED(0x582791a6,64,FLEN)
NAN_BOXED(0x582791a6,64,FLEN)
NAN_BOXED(0x582791a6,64,FLEN)
NAN_BOXED(0x582791a6,64,FLEN)
NAN_BOXED(0x8ecc1b45,64,FLEN)
NAN_BOXED(0x8ecc1b45,64,FLEN)
NAN_BOXED(0x8ecc1b45,64,FLEN)
NAN_BOXED(0x8ecc1b45,64,FLEN)
NAN_BOXED(0x8ecc1b45,64,FLEN)
NAN_BOXED(0x8ecc1b45,64,FLEN)
NAN_BOXED(0x8ecc1b45,64,FLEN)
NAN_BOXED(0x8ecc1b45,64,FLEN)
NAN_BOXED(0x8ecc1b45,64,FLEN)
NAN_BOXED(0x8ecc1b45,64,FLEN)
NAN_BOXED(0x36bbe6ff,64,FLEN)
NAN_BOXED(0x36bbe6ff,64,FLEN)
NAN_BOXED(0x36bbe6ff,64,FLEN)
NAN_BOXED(0x36bbe6ff,64,FLEN)
NAN_BOXED(0x36bbe6ff,64,FLEN)
NAN_BOXED(0x36bbe6ff,64,FLEN)
NAN_BOXED(0x36bbe6ff,64,FLEN)
NAN_BOXED(0x36bbe6ff,64,FLEN)
NAN_BOXED(0x36bbe6ff,64,FLEN)
NAN_BOXED(0x36bbe6ff,64,FLEN)
NAN_BOXED(0xf98a7dbd,64,FLEN)
NAN_BOXED(0xf98a7dbd,64,FLEN)
NAN_BOXED(0xf98a7dbd,64,FLEN)
NAN_BOXED(0xf98a7dbd,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 22*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 402*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
